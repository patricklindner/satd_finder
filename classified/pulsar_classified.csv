INSERT,1703704964,8ff32dbf9eb63de3554ed546703030d4345b6d27,// Because of the possibility of consumers getting stuck with each other,code_comment,code|design-debt
DELETE,1703544254,c157f0d9b4310a3709e7f1b56a51e754473c015a,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
DELETE,1703544254,c157f0d9b4310a3709e7f1b56a51e754473c015a,// TODO support arbitrary number of ranges,code_comment,requirement-debt
DELETE,1703544254,c157f0d9b4310a3709e7f1b56a51e754473c015a,"/**
 * Copy from {@link io.trino.decoder.avro.AvroColumnDecoder}
 * with A little pulsar's extensions.
 * 1) support date and time types.
 *  {@link io.trino.spi.type.TimestampType}
 *  {@link io.trino.spi.type.DateType}
 *  {@link io.trino.spi.type.TimeType}
 * 2) support {@link io.trino.spi.type.RealType}.
 * 3) support {@link io.trino.spi.type.DecimalType}.
 */",code_comment,code|design-debt
INSERT,1702661003,c4cff0ab3dac169c0a1418ef2f63f61604f6278e,"/**
 * An interface representing a clock that provides a monotonic counter in nanoseconds.
 * The counter is guaranteed to be monotonic, ensuring it will always increase or remain constant, but never decrease.
 *
 * Monotonicity ensures the time will always progress forward, making it ideal for measuring elapsed time.
 * The monotonic clock is not related to the wall-clock time and is not affected by changes to the system time.
 * The tick value is only significant when compared to other values obtained from the same clock source
 * and should not be used for other purposes.
 *
 * This interface assumes that the implementation can be implemented in a granular way. This means that the value is
 * advanced in steps of a configurable resolution that snapshots the underlying high precision monotonic clock source
 * value.
 * This design allows for optimizations that can improve performance on platforms where obtaining the value of a
 * platform monotonic clock is relatively expensive.
 */",code_comment,code|design-debt
INSERT,1702525837,9b043c61442c4944b60883505454e72429c8e028,// Cleanup: Delete the temporary file,code_comment,code|design-debt
INSERT,1702434071,50007c343ad911edf5654786a7e3a1fc10901091,// Todo: We can not ignore the marker's position in this fix.,code_comment,requirement-debt
INSERT,1701659569,40fa9abe92f7120ea87b5b8f80d0eef3f7da9db2,// Todo: fix replication can not be enabled at topic level.,code_comment,requirement-debt
DELETE,1701823854,93df34436f9c818fed9f275dbc12557eb2e9f0e7,// stuck when doing unload.,code_comment,code|design-debt
INSERT,1701151653,a6df6b9ee220494cfbed3fdf52c9fde4132f352d,// Todo: fix replication can not be enabled at topic level.,code_comment,requirement-debt
INSERT,1700208710,d0cb05b959864926d6231ca93255f2c83402d04d,// Todo: fix replication can not be enabled at topic level.,code_comment,requirement-debt
INSERT,1699965329,2322004069f23ecca1a12a4ced898fed854275fb,// Todo: fix replication can not be enabled at topic level.,code_comment,requirement-debt
DELETE,1699653401,77cd942f51ea0fecdcae789504a2f5987b79a813,"/**
     * Hacky parsing of Prometheus text format. Should be good enough for unit tests
     *
     * This parser doesn't handle parsing multiple lines for a single metric key.
     * There another implementation in {@link org.apache.pulsar.broker.stats.PrometheusMetricsTest}
     * that supports parsing multiple lines.
     */",code_comment,code|design-debt
INSERT,1699653401,77cd942f51ea0fecdcae789504a2f5987b79a813,"/**
     * Hacky parsing of Prometheus text format. Should be good enough for unit tests
     *
     * This parser doesn't handle parsing multiple lines for a single metric key.
     * There another implementation in {@link org.apache.pulsar.broker.stats.PrometheusMetricsTest}
     * that supports parsing multiple lines.
     */",code_comment,code|design-debt
DELETE,1699234404,e4a25156c7e248e9b93d57b19e411a260f47bc98,// TODO: whe,code_comment,requirement-debt
INSERT,1699234404,c0eec1e46edeb46c888fa28f27b199ea7e7a1574,// Use a different namespace to avoid flaky test failures,code_comment,test-debt
INSERT,1698910820,8e9ad775712b53c689242be3ff65cc5e90664410,// TODO: add support for extracting the Runnable target on Java 21,code_comment,requirement-debt
INSERT,1698655730,113d9f671054ff7ed1b6e073f478b0dcaf40cdd2,"/**
 * A TestNG listener that traces test resource cleanup by creating a thread dump, heap histogram and heap dump
 * (when mode is 'full') before the TestNG JVM exits.
 * The heap dump could help detecting memory leaks in tests or the sources of resource leaks that cannot be
 * detected with the ThreadLeakDetectorListener.
 */",code_comment,code|design-debt
INSERT,1698113545,47f0d97e5bd40bcb06f96e96e0a6f8a5809fcd43,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1698157856,c6bffc2605d05c94eaca20d23502fb368926087f,// stuck when doing unload.,code_comment,code|design-debt
INSERT,1696996930,50eb846e0f9f7956e7e0aff763aa83336973b0f8,// IKTODO: this method is awful,code_comment,code|design-debt
INSERT,1696995475,63f29015e2a03a334a19854b7caab6e441bfb931,"// ""messagesConsumedCounter"" should be 2 after consumed 2 message.",code_comment,code|design-debt
INSERT,1696995079,2a3b96a39c6595d7ac978e22284ac315784f25d8,"// ""messagesConsumedCounter"" should be 2 after consumed 2 message.",code_comment,code|design-debt
INSERT,1696996415,b38c563303d0022cac8f42bd7a7aaafa9f7bfe09,"/**
     * Tests that Replication worker should clean the leadger under replication
     * node of the ledger already deleted.
     */",code_comment,code|design-debt
INSERT,1696818708,c00a4a1355404354c35c9d97a0897981286663af,// been replaced in the ensemble,code_comment,code|design-debt
INSERT,1696994315,68959190f6b9d5b2ba3468b040cf94acfef87188,"// ""messagesConsumedCounter"" should be 2 after consumed 2 message.",code_comment,code|design-debt
INSERT,1696753411,5dc11a5d4edbcbc3a13d4e20c9b510ed99b007c9,// IKTODO: this method is awful,code_comment,code|design-debt
INSERT,1697724687,2b2b83d60e708d4c0e8ee304b2d556c0fc71c5d4,// stuck when doing unload.,code_comment,code|design-debt
INSERT,1696752693,9ab7417edc20b6618bac8f66921815c7b9d5e5b8,// IKTODO: this method is awful,code_comment,code|design-debt
INSERT,1696774752,ca77982758170993aa52c0f7f45bbf9ad72e368a,"// ""messagesConsumedCounter"" should be 2 after consumed 2 message.",code_comment,code|design-debt
INSERT,1697717329,ecd40e43a6b90b58e209bc9bced84b35d933619e,// stuck when doing unload.,code_comment,code|design-debt
INSERT,1696692746,c4de4ee8bfd98dad577e6776a3c3838a0808b129,"/**
     * Tests that Replication worker should clean the leadger under replication
     * node of the ledger already deleted.
     */",code_comment,code|design-debt
INSERT,1695646814,298a320cd31db0ef7d065aa0c0304967d5114096,// been replaced in the ensemble,code_comment,code|design-debt
INSERT,1695014880,68a66096910cdfc7d941e34026db6d5d8b75fc22,// been replaced in the ensemble,code_comment,code|design-debt
INSERT,1695910465,9061d8b4e821e3fd03e067f01d5dfcf05bcdced4,"/**
     * Tests that Replication worker should clean the leadger under replication
     * node of the ledger already deleted.
     */",code_comment,code|design-debt
INSERT,1694958245,97723ebb1bcf49b8be2725f6ef1d468be091966c,// been replaced in the ensemble,code_comment,code|design-debt
INSERT,1694657603,8ee11abb3c03b27d0cc81f46ada698ed7f700c6e,"/**
     * This is a flaky test.
     */",code_comment,test-debt
INSERT,1694657380,b510415538b7ba05f7a02b0a0214749864c72772,"/**
     * This is a flaky test.
     */",code_comment,test-debt
INSERT,1694519798,6a605c8a127462257eec7e8bf21ad7f0c7b90bd9,"/**
     * This is a flaky test.
     */",code_comment,test-debt
INSERT,1694437565,f2b9a3fffd4aad414ba5f35ebff17502cb64eb12,"/**
     * This is a flaky test.
     */",code_comment,test-debt
INSERT,1692596679,43cd86d6835b4b096739e510f9fa928a64e46ac9,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1692608984,4cccfab1a075a4a5fd46feb9a36fd1bbfb8c4009,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1692608950,80a8f8d307ac2c023147410e31d567cfce8f17c5,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1692260415,15bacf842c0c82fc41b482bf54babfbf4210b9d8,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and we can use
     * #{@link AbstractTopic#updateResourceGroupLimiter(Policies)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1692260415,15bacf842c0c82fc41b482bf54babfbf4210b9d8,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1692260415,15bacf842c0c82fc41b482bf54babfbf4210b9d8,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1692260415,15bacf842c0c82fc41b482bf54babfbf4210b9d8,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1692260415,15bacf842c0c82fc41b482bf54babfbf4210b9d8,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link DispatchRateLimiter#getPoliciesAsync(BrokerService, String)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1692260415,15bacf842c0c82fc41b482bf54babfbf4210b9d8,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call.
     */",code_comment,code|design-debt
INSERT,1690512585,a30639d28c7a8bb2f3e9c5f1ba6044001ac10796,"/**
     * This test just ensure that schema check still keeps the original logic: if there has any producer, but no schema
     * was registered, the new consumer could not register new schema.
     * TODO: I think this design should be improved: if a producer used AUTO_PRODUCE_BYTES"" schema",code_comment,requirement-debt
INSERT,1690512697,3c2a61152ecb59fc52a270faa0d2638766ab5939,"/**
     * This test just ensure that schema check still keeps the original logic: if there has any producer, but no schema
     * was registered, the new consumer could not register new schema.
     * TODO: I think this design should be improved: if a producer used AUTO_PRODUCE_BYTES"" schema",code_comment,requirement-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and we can use
     * #{@link AbstractTopic#updateResourceGroupLimiter(Policies)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690512214,9be0b52ac425602cdb0bdd9348d0b63c16f6f62a,"/**
     * This test just ensure that schema check still keeps the original logic: if there has any producer, but no schema
     * was registered, the new consumer could not register new schema.
     * TODO: I think this design should be improved: if a producer used AUTO_PRODUCE_BYTES"" schema",code_comment,requirement-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)}
     * You can use #{@link BrokerService#isAllowAutoTopicCreationAsync(TopicName)}
     */",code_comment,code|design-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)}
     * You can use #{@link BrokerService#isAllowAutoTopicCreationAsync(TopicName)}
     */",code_comment,code|design-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690512432,54359b6e85f6678695075ee9008102bfb7ee2bd6,"/**
     * This test just ensure that schema check still keeps the original logic: if there has any producer, but no schema
     * was registered, the new consumer could not register new schema.
     * TODO: I think this design should be improved: if a producer used AUTO_PRODUCE_BYTES"" schema",code_comment,requirement-debt
INSERT,1690289522,563f929885ce24206d7bd164adadc7797f225106,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and we can use
     * #{@link AbstractTopic#updateResourceGroupLimiter(Policies)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690289522,563f929885ce24206d7bd164adadc7797f225106,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690289522,563f929885ce24206d7bd164adadc7797f225106,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690289522,563f929885ce24206d7bd164adadc7797f225106,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and we can use
     * #{@link AbstractTopic#updateResourceGroupLimiter(Policies)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)}
     * You can use #{@link BrokerService#isAllowAutoTopicCreationAsync(TopicName)}
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)}
     * You can use #{@link BrokerService#isAllowAutoTopicCreationAsync(TopicName)}
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link BrokerService#isAllowAutoSubscriptionCreationAsync(TopicName)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690072601,e7ae9e2544cced28eb4c2ae6c4b2f01a5879a318,// Residual auth info should be cleaned up,code_comment,code|design-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link DispatchRateLimiter#getPoliciesAsync(BrokerService, String)} to instead of it.
     */",code_comment,code|design-debt
INSERT,1690849289,b9d7247db8331dba41cedf92c3e25972739e664f,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call.
     */",code_comment,code|design-debt
DELETE,1690782674,448d05a77373cbf197782b128266b80bbd309098,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
DELETE,1690782674,448d05a77373cbf197782b128266b80bbd309098,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
DELETE,1690782674,448d05a77373cbf197782b128266b80bbd309098,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1690782674,448d05a77373cbf197782b128266b80bbd309098,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
INSERT,1690782674,448d05a77373cbf197782b128266b80bbd309098,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1690782674,448d05a77373cbf197782b128266b80bbd309098,// Do similar tests for lower values.,code_comment,test-debt
DELETE,1691476909,31d59cfa080d6fba89e2f7074faa1d5c5fe973f9,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
DELETE,1691476909,31d59cfa080d6fba89e2f7074faa1d5c5fe973f9,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
DELETE,1691476909,31d59cfa080d6fba89e2f7074faa1d5c5fe973f9,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1691476909,31d59cfa080d6fba89e2f7074faa1d5c5fe973f9,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
INSERT,1691476909,31d59cfa080d6fba89e2f7074faa1d5c5fe973f9,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1691476909,31d59cfa080d6fba89e2f7074faa1d5c5fe973f9,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1690289522,563f929885ce24206d7bd164adadc7797f225106,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link DispatchRateLimiter#getPoliciesAsync(BrokerService, String)} to instead of it.
     */",code_comment,code|design-debt
DELETE,1690339241,f674ad1e64ef5671be4383edc3949f47af4ca4d3,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
DELETE,1690339241,f674ad1e64ef5671be4383edc3949f47af4ca4d3,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
DELETE,1690339241,f674ad1e64ef5671be4383edc3949f47af4ca4d3,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1690339241,f674ad1e64ef5671be4383edc3949f47af4ca4d3,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
INSERT,1690339241,f674ad1e64ef5671be4383edc3949f47af4ca4d3,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1690339241,f674ad1e64ef5671be4383edc3949f47af4ca4d3,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1690289522,563f929885ce24206d7bd164adadc7797f225106,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call.
     */",code_comment,code|design-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call. we can use #{@link DispatchRateLimiter#getPoliciesAsync(BrokerService, String)} to instead of it.
     */",code_comment,code|design-debt
DELETE,1690295639,3f637680bbbc268d4801172d3212279ace38c4d4,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
DELETE,1690295639,3f637680bbbc268d4801172d3212279ace38c4d4,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
DELETE,1690295639,3f637680bbbc268d4801172d3212279ace38c4d4,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1690337954,6d321e1f03140a1b7e5a364e286dfbd969f30ba2,"/**
     * @deprecated Avoid using the deprecated method
     * #{@link org.apache.pulsar.broker.resources.NamespaceResources#getPoliciesIfCached(NamespaceName)} and blocking
     * call.
     */",code_comment,code|design-debt
INSERT,1690295639,3f637680bbbc268d4801172d3212279ace38c4d4,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
INSERT,1690295639,3f637680bbbc268d4801172d3212279ace38c4d4,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1690295639,3f637680bbbc268d4801172d3212279ace38c4d4,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1689559970,4c69584a888f1365cd1bd78e0dbd74d10a0aa413,// TODO: redeliver epoch link https://github.com/apache/pulsar/issues/13690,code_comment,requirement-debt
INSERT,1688460353,ee3ad34ed78f2c63ee38b9582773081583c52d1d,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1688385907,00ff0903c3147a1728193421ae18f0dab3fa626e,// TODO: This test is very flaky and it's disabled for now to unblock CI,code_comment,test-debt
INSERT,1688385928,172550e33a18df53639497afb26a3195956b772b,// todo: in future check if the resource unit has resources to take the namespace,code_comment,requirement-debt
DELETE,1688385928,172550e33a18df53639497afb26a3195956b772b,// TODO: This test is very flaky and it's disabled for now to unblock CI,code_comment,test-debt
INSERT,1688385549,d85b9957ff7773f0e921d8c97b45d0e8291467d3,// todo: in future check if the resource unit has resources to take the namespace,code_comment,requirement-debt
DELETE,1688385549,d85b9957ff7773f0e921d8c97b45d0e8291467d3,// TODO: This test is very flaky and it's disabled for now to unblock CI,code_comment,test-debt
DELETE,1688114147,c82825bb9b8ef98e2b120bcdd65a7d5ddb134549,// might move to a subsequent original ledger if `compactionHorizon` have not updated,code_comment,code|design-debt
DELETE,1688114147,c82825bb9b8ef98e2b120bcdd65a7d5ddb134549,// TODO: cut consumer connection on markDeleteFailed,code_comment,requirement-debt
INSERT,1688114147,c82825bb9b8ef98e2b120bcdd65a7d5ddb134549,// might move to a subsequent original ledger if `compactionHorizon` have not updated,code_comment,code|design-debt
INSERT,1688114147,c82825bb9b8ef98e2b120bcdd65a7d5ddb134549,// TODO: cut consumer connection on markDeleteFailed,code_comment,requirement-debt
DELETE,1688012751,7bf8fd1f64dd0ad5e74271763248cc3404c39782,// TODO: support AVRO encoded ,code_comment,requirement-debt
INSERT,1687266323,e5606f28b89511e23c975b5266fc80168518a978,// TODO: This test is very flaky and it's disabled for now to unblock CI,code_comment,test-debt
INSERT,1686801644,a80980a52cc4aabd8d96d45fafa6dba04386c3d3,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1686302546,45d882a2d864398f55fb786c1ef20cd42b9e99b4,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
INSERT,1685983027,90f9651306426d82b35f3dec6380001e7b0d208e,// this test is disabled since it is flaky,code_comment,test-debt
INSERT,1685749494,43fcf39ea6db3f157ab3c65a607504fa2e4cda15,"/***
 * Test that verifies that regression in BookKeeper 4.16.0 is fixed.
 *
 * Anti-regression test for issue https://github.com/apache/pulsar/issues/20091.
 */",code_comment,test-debt
DELETE,1685448584,c93d687316555be37628db62fdf6cdd252af754c,//     and stuck is not caused by stuckConsumers,code_comment,code|design-debt
DELETE,1685448584,c93d687316555be37628db62fdf6cdd252af754c,// the consumer was stuck,code_comment,code|design-debt
INSERT,1685446267,be47c27638c842a0370623a1c827816ce5242319,// TODO: Go runtime doesn't collect `process_latency_ms_1min` metric,code_comment,code|design-debt
INSERT,1685380925,bdd1bf1fcabdfc52527d07a8f8a288930e2cb7dd,"/**
 * Deduplicates String instances by interning them using Guava's Interner
 * which is more efficient than String.intern().
 */",code_comment,code|design-debt
DELETE,1684894486,833f08a1f17849990cd4b43f3826a438274ca96e,//     and stuck is not caused by stuckConsumers,code_comment,code|design-debt
DELETE,1684894486,833f08a1f17849990cd4b43f3826a438274ca96e,// the consumer was stuck,code_comment,code|design-debt
DELETE,1684527673,c973603b02bb61d936e5759a65abc060e7c5e244,//     and stuck is not caused by stuckConsumers,code_comment,code|design-debt
DELETE,1684527673,c973603b02bb61d936e5759a65abc060e7c5e244,// the consumer was stuck,code_comment,code|design-debt
DELETE,1684525104,1e664b7f550ffa28d3c810f3b7d6d625d5905eb3,//     and stuck is not caused by stuckConsumers,code_comment,code|design-debt
DELETE,1684525104,1e664b7f550ffa28d3c810f3b7d6d625d5905eb3,// the consumer was stuck,code_comment,code|design-debt
INSERT,1684476662,197d35e3673a7e9fa50c20587d5824a4f3378c7a,// Note that the state machine is circular to make it easier to verify the two code paths that rely on,code_comment,code|design-debt
INSERT,1684396538,127ea2576d65d72b7906921178565b1a3a9e722e,// This method will be deprecated and removed in version 4.x.0,code_comment,code|design-debt
INSERT,1684396538,127ea2576d65d72b7906921178565b1a3a9e722e,// This method will be deprecated and removed in version 4.x.0,code_comment,code|design-debt
INSERT,1684340912,d92010c00e30199c5cd53021e20ba5d7bb36701c,// Note that the state machine is circular to make it easier to verify the two code paths that rely on,code_comment,code|design-debt
INSERT,1684201295,8b929e6bf1b1718431abebf04420d7817ad8cdb7,// This method will be deprecated and removed in version 4.x.0,code_comment,code|design-debt
INSERT,1684201295,8b929e6bf1b1718431abebf04420d7817ad8cdb7,// This method will be deprecated and removed in version 4.x.0,code_comment,code|design-debt
INSERT,1683724537,f04252b84a8b594ea371645e367c491aa8e2dd80,// TODO: Go runtime doesn't collect `process_latency_ms_1min` metric,code_comment,code|design-debt
INSERT,1683635466,f09ec6065992064ab2665cf024c377d9f6b2fcf0,// and then the opFuture will never be replaced.,code_comment,code|design-debt
DELETE,1681984248,03ec01d14d418233ce2fba2da7f429665df90de5,// TODO: Correct the following compare logics,code_comment,requirement-debt
DELETE,1681984167,99a68e40c9dcc0771ddfd73321cc967be6433801,// TODO: Correct the following compare logics,code_comment,requirement-debt
INSERT,1681984167,99a68e40c9dcc0771ddfd73321cc967be6433801,// TODO: Correct the following compare logics,code_comment,requirement-debt
INSERT,1681984248,03ec01d14d418233ce2fba2da7f429665df90de5,// TODO: Correct the following compare logics,code_comment,requirement-debt
DELETE,1681698698,d05871213adc351d4c718c2a6fb0909b01d279ff,// TODO make it asynchronous and not blocking this process,code_comment,requirement-debt
DELETE,1681632344,c4aec6661e795c46181dc1fa79282065fa875768,// TODO make it asynchronous and not blocking this process,code_comment,requirement-debt
INSERT,1681166681,11751b7da2316516a2c18c11b3bd4011641b93f4,"/**
 * An {@link AuthenticationProvider} implementation that supports the usage of a JSON Web Token (JWT)
 * for client authentication. This implementation retrieves the PublicKey from the JWT issuer (assuming the
 * issuer is in the configured allowed list) and then uses that Public Key to verify the validity of the JWT's
 * signature.
 *
 * The Public Keys for a given provider are cached based on certain configured parameters to improve performance.
 * The tradeoff here is that the longer Public Keys are cached, the longer an invalidated token could be used. One way
 * to ensure caches are cleared is to restart all brokers.
 *
 * Class is called from multiple threads. The implementation must be thread safe. This class expects to be loaded once
 * and then called concurrently for each new connection. The cache is backed by a GuavaCachedJwkProvider, which is
 * thread-safe.
 *
 * Supported algorithms are: RS256, RS384, RS512, ES256, ES384, ES512 where the naming conventions follow
 * this RFC: https://datatracker.ietf.org/doc/html/rfc7518#section-3.1.
 */",code_comment,code|design-debt
INSERT,1681166681,11751b7da2316516a2c18c11b3bd4011641b93f4,// TODO URI's normalization likely follows RFC2396 (library doesn't say so explicitly),code_comment,code|design-debt
INSERT,1681166681,11751b7da2316516a2c18c11b3bd4011641b93f4,// is used here to simplify the testing.,code_comment,code|design-debt
INSERT,1680594754,8c50a6c2e91c81dbf187ce5e66cb39e2758a741e,// TODO: Correct the following compare logics,code_comment,requirement-debt
INSERT,1680514910,a19879ba17b10df45913540a031edef77cd483b9,// TODO: Test disabled since it results in a OOME,code_comment,test-debt
DELETE,1680696032,32e677d5264d9145a5765735ae1e6ba0e88a5ef9,// TODO: mak,code_comment,requirement-debt
INSERT,1680114838,b2f734f45949131c9e5a4c36a57db026f3bafac7,// Thi is a workaround for https://github.com/apache/pulsar/issues/19922,code_comment,code|design-debt
INSERT,1680072845,7cb48fd9d41f8606d86a0503b0130aec6b9d00d5,// Thi is a workaround for https://github.com/apache/pulsar/issues/19922,code_comment,code|design-debt
INSERT,1680594754,8c50a6c2e91c81dbf187ce5e66cb39e2758a741e,// The internal MessageId implementation should never reach here. If users have implemented their own,code_comment,requirement-debt
DELETE,1680165133,68c10eed7604aa3dcc3a6d8b548575e99b94dca2,//TODO,code_comment,code|design-debt
DELETE,1679325907,ef1a6e7f34c65926e1bffe012591ebc4a4251823,// Distinguish partitioned topic to avoid duplicate deletion of the same schema,code_comment,code|design-debt
DELETE,1679382762,70b86175f973b1ed9a61e562dafba1fbdde36d1b,// Distinguish partitioned topic to avoid duplicate deletion of the same schema,code_comment,code|design-debt
DELETE,1678757947,9a85dea53a6d0896cc4ba1ceb1ab11a47d5d65da,// TODO: Start bundle split scheduler.,code_comment,code|design-debt
DELETE,1678757947,9a85dea53a6d0896cc4ba1ceb1ab11a47d5d65da,"/**
 * Determines which bundles should be split based on various thresholds.
 *
 * Migrate from {@link org.apache.pulsar.broker.loadbalance.BundleSplitStrategy}
 */",code_comment,code|design-debt
DELETE,1678757947,9a85dea53a6d0896cc4ba1ceb1ab11a47d5d65da,"/**
     * Determines which bundles, if any, should be split.
     *
     * @param context The context used for decisions.
     * @return A set of the bundles that should be split.
     */",code_comment,code|design-debt
INSERT,1678757947,9a85dea53a6d0896cc4ba1ceb1ab11a47d5d65da,"/**
 * Determines which bundles should be split based on various thresholds.
 *
 * Migrate from {@link org.apache.pulsar.broker.loadbalance.impl.BundleSplitterTask}
 */",code_comment,code|design-debt
INSERT,1678757947,9a85dea53a6d0896cc4ba1ceb1ab11a47d5d65da,"/**
 * Determines which bundles should be split based on various thresholds.
 *
 * Migrate from {@link org.apache.pulsar.broker.loadbalance.BundleSplitStrategy}
 */",code_comment,code|design-debt
INSERT,1678757947,9a85dea53a6d0896cc4ba1ceb1ab11a47d5d65da,"/**
     * Determines which bundles, if any, should be split.
     *
     * @param context The context used for decisions.
     * @return A set of the bundles that should be split.
     */",code_comment,code|design-debt
DELETE,1678546769,b6a73823ce2ed47baa606b2ecc5f1569e4c101a5,// TODO: Support isolation policies,code_comment,requirement-debt
DELETE,1680950956,421d707419ee42378b9c5b37812bd5c617ef2c9a,// TODO: Update the load data immediately if needed.,code_comment,requirement-debt
INSERT,1677738588,fec4578e8a5cfeb7e5ad53a0ce47b3e116e94a4d,// TODO: The broker load data might be delayed,code_comment,code|design-debt
INSERT,1677721702,5e717c68e061562fd44f2c44c4a41667abaf4df8,//TODO Record create snapshot failed,code_comment,requirement-debt
DELETE,1677721702,5e717c68e061562fd44f2c44c4a41667abaf4df8,//TODO Record create snapshot failed,code_comment,requirement-debt
INSERT,1677103896,94de805da716135f05826e7ea67ddc2bfddeaabb,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
DELETE,1677103898,aaaadcfb2ce0e66e62204fe66295002e9ad5957d,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
INSERT,1676617406,104c5666666d8bfc8098abeb0b18272915ef183f,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
INSERT,1676609753,467cd3239f116cc20bed059483b03b1edcc131ec,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
DELETE,1677165780,389792b1fc7a56647ccfc820e83ae08dfed037df,// TODO: define StateCompactionStrategy,code_comment,code|design-debt
DELETE,1677165780,389792b1fc7a56647ccfc820e83ae08dfed037df,// TODO: define BrokerRegistry,code_comment,code|design-debt
INSERT,1677165780,389792b1fc7a56647ccfc820e83ae08dfed037df,// TODO: make this selector configurable.,code_comment,code|design-debt
DELETE,1677165780,389792b1fc7a56647ccfc820e83ae08dfed037df,// TODO:,code_comment,code|design-debt
INSERT,1676495304,3ef3bf198e9d821c25a730c3a2947c5d9b0fc374,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
DELETE,1676609754,557b72dd029c3fd8cc61caafe1ed2c84b97ba641,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
INSERT,1676265999,de4f62003939d16fe635ab4204b8444bc10eb112,// TODO: consider excluding the bundles th,code_comment,code|design-debt
DELETE,1676115430,5c8f92965637fbcd2b7e9e0e429884ce527e73ae,// TODO: Add metrics.,code_comment,requirement-debt
DELETE,1676617596,28fd94cc375cec12e67b74b3e7cf94136bd0eed4,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
DELETE,1676497417,222536152d2ea5f2faf6c6d8bd370e062ff90a24,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
DELETE,1676287836,950ff441da28e144bdfb71c317a9bc339d4f05b7,// TODO: ,code_comment,code|design-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Make brokerSelectionStrategy configurable.,code_comment,requirement-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Start load data reporter.,code_comment,code|design-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Start unload scheduler and bundle split scheduler,code_comment,code|design-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Support isolation policies,code_comment,requirement-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: We may need to revisit this error case.,code_comment,requirement-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add namespace bundle affinity support.,code_comment,code|design-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add metrics.,code_comment,requirement-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675407906,c3126c684a91f2c677fbe2eb0e35037d77c4b116,// TODO: Add unit tests cover it.,code_comment,test-debt
INSERT,1675361092,3e44d1e6e2ba4599d547c83cf7cb25350f0cc560,// work around this,code_comment,code|design-debt
DELETE,1675154231,1cd1aef3c74fac0a2ded99da05b658578d8481e7,// TODO : Add state validation in tableview by the compaction strategy,code_comment,requirement-debt
DELETE,1675104699,d9a71d7ff4e9b251ed51d3e3154b992dc58f6c74,"/**
 * Subclass of PulsarService that is used for some tests.
 * This was written as a replacement for the previous Mockito Spy over PulsarService solution which caused
 * a flaky test issue https://github.com/apache/pulsar/issues/13620.
 */",code_comment,test-debt
INSERT,1675154231,1cd1aef3c74fac0a2ded99da05b658578d8481e7,// TODO: Create compaction strategy from topic policy when exposing strategic compaction to users.,code_comment,code|design-debt
DELETE,1675154231,1cd1aef3c74fac0a2ded99da05b658578d8481e7,// TODO: check conflict resolution,code_comment,requirement-debt
INSERT,1674658250,b3432f4ed9c9c19eef4ed696253eb2c18ebbf59d,"/**
 * Subclass of PulsarService that is used for some tests.
 * This was written as a replacement for the previous Mockito Spy over PulsarService solution which caused
 * a flaky test issue https://github.com/apache/pulsar/issues/13620.
 */",code_comment,test-debt
INSERT,1674617691,804969091ca0d38132f9938fd6ffc519699eaeb6,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
DELETE,1675500042,aa247ad72760ae95f3e7f1a969a6d83121319472,// no risk. It would be better to fix this. See https://github.com/apache/pulsar/issues/19311.,code_comment,code|design-debt
INSERT,1674122891,29c244a74b5464eb6e40e3c3662effb9fa0a76a2,//consumed ledger should be cleaned,code_comment,code|design-debt
INSERT,1675104699,d9a71d7ff4e9b251ed51d3e3154b992dc58f6c74,"/**
 * Subclass of PulsarService that is used for some tests.
 * This was written as a replacement for the previous Mockito Spy over PulsarService solution which caused
 * a flaky test issue https://github.com/apache/pulsar/issues/13620.
 */",code_comment,test-debt
INSERT,1673863386,334c3a541f00c08aa2f378a6cc45f37cbeb54a5c,"/**
     * Clears the caches tied to the ObjectMapper instances and replaces the singleton ObjectMapper instance.
     *
     * This can be used in tests to ensure that classloaders and class references don't leak across tests.
     */",code_comment,code|design-debt
INSERT,1673622675,ec102fb024a6ea2b195826778300f20e330dff06,// that might be holding on classloaders and classes,code_comment,code|design-debt
DELETE,1673921933,9dc490fbeaf7aa27265bd0625cb9fab026bbd604,// TODO Delete bucket snapshot,code_comment,code|design-debt
INSERT,1672300999,a8da549c582d2506b98b8d33247b8dc2415dab36,"/**
 * Placement strategy which selects a broker based on which one has the least resource usage with weight.
 * This strategy takes into account the historical load percentage and short-term load percentage, and thus will not
 * cause cluster fluctuations due to short-term load jitter.
 */",code_comment,code|design-debt
INSERT,1672300999,a8da549c582d2506b98b8d33247b8dc2415dab36,// TODO: use loadBalancerDebugModeEnabled too.,code_comment,code|design-debt
DELETE,1671588078,070c35622e72b0e7175a6c7517175588683db4f0,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1671560318,f3608074f537471545926a84df8a1d061b30692c,"/**
 * Channel handler for the Pulsar client.
 * <p>
 * Please see {@link org.apache.pulsar.common.protocol.PulsarDecoder} javadoc for important details about handle* method
 * parameter instance lifecycle.
 */",code_comment,documentation-debt
INSERT,1673622675,ec102fb024a6ea2b195826778300f20e330dff06,"/**
     * This method is deprecated. Use {@link #getYamlMapper()} and {@link MapperReference#getObjectMapper()}
     */",code_comment,code|design-debt
INSERT,1673622675,ec102fb024a6ea2b195826778300f20e330dff06,"/**
     * Clears the caches tied to the ObjectMapper instances.
     * This is used in tests to ensure that classloaders and class references don't leak between tests.
     * Jackson's ObjectMapper doesn't expose a public API for clearing all caches so this solution is partial.
     */",code_comment,code|design-debt
INSERT,1673622675,ec102fb024a6ea2b195826778300f20e330dff06,"/**
     * Replaces the existing singleton ObjectMapper instances with new instances.
     * This is used in tests to ensure that classloaders and class references don't leak between tests.
     */",code_comment,code|design-debt
INSERT,1671422570,faa941632ce785f86f00fc8fb6026297e14a1951,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671422570,faa941632ce785f86f00fc8fb6026297e14a1951,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671416445,46dd1c7dd6f3418e2ad8d46fec0272095770c8ff,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671416445,46dd1c7dd6f3418e2ad8d46fec0272095770c8ff,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671240156,b9446aa01d4c22a170e305cb4a8fbd2966eaff74,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671240156,b9446aa01d4c22a170e305cb4a8fbd2966eaff74,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671416403,f7dc64f900c1d14d534f572389a69cf590a05263,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671416403,f7dc64f900c1d14d534f572389a69cf590a05263,// Just stuck the thread.,code_comment,code|design-debt
INSERT,1671588078,070c35622e72b0e7175a6c7517175588683db4f0,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1670916363,7e258aff76fd02b8ea08fcf26d161313a82e23c2,// to avoid a large message cannot be split into chunks.,code_comment,code|design-debt
INSERT,1675246918,60d8e645e7ca6afa46625b15f32c1b65862888ce,// this test case is flaky and fails intermittently,code_comment,test-debt
DELETE,1670737864,3180a4aa04d518fa401a781d646545221c4d1fa6,// TODO this case seems like it could bypass authorization checks.,code_comment,requirement-debt
DELETE,1670737864,3180a4aa04d518fa401a781d646545221c4d1fa6,// TODO these only require ability to consume on namespace; ignore namespace's subscription,code_comment,code|design-debt
DELETE,1670737864,3180a4aa04d518fa401a781d646545221c4d1fa6,// TODO consume from single subscription lets role view all subscriptions on a topic,code_comment,code|design-debt
INSERT,1670721377,bf29a4b8c9326b51caeb1d40a2d6140b9f51c212,// TODO this case seems like it could bypass authorization checks.,code_comment,requirement-debt
INSERT,1670721377,bf29a4b8c9326b51caeb1d40a2d6140b9f51c212,// TODO these only require ability to consume on namespace; ignore namespace's subscription,code_comment,code|design-debt
INSERT,1670721377,bf29a4b8c9326b51caeb1d40a2d6140b9f51c212,// TODO consume from single subscription lets role view all subscriptions on a topic,code_comment,code|design-debt
INSERT,1670689171,882479f65e89a44262555d1f37ae1a4d622b8deb,// ignore this json field to skip from stats in future release. replaced with readable #getLastAckedTime().,code_comment,code|design-debt
INSERT,1670689171,882479f65e89a44262555d1f37ae1a4d622b8deb,// ignore this json field to skip from stats in future release. replaced with readable #getLastConsumedTime().,code_comment,code|design-debt
DELETE,1670594235,0d707aec92595868192380758a46f8f02886128f,// TODO,code_comment,code|design-debt
DELETE,1670403344,7afe26a0db64b13f994a04ae664b491d88ee8f87,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1670550766,6c4e9ef532d5d509c28c9728fc338489880922a4,"/**
         * TODO verify brk_ml_cursor_persistZookeeperErrors"".",code_comment,requirement-debt
INSERT,1670403344,7afe26a0db64b13f994a04ae664b491d88ee8f87,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1670396007,e9523894dc1a4ee19abb62522a73965e71d57a6f,"/**
     * Calculate the SchemaHash for compatible with `@NoArgsConstructor`.
     * If SchemaInfoImpl is created by no-args-constructor from users, the schemaHash will be null.
     * Note: We should remove this method as long as `@NoArgsConstructor` removed at major release to avoid null-check
     * overhead.
     */",code_comment,code|design-debt
INSERT,1675246918,60d8e645e7ca6afa46625b15f32c1b65862888ce,"/**
 * A test context that can be used to set up a Pulsar broker and associated resources.
 *
 * There are 2 types of Pulsar unit tests that use a PulsarService:
 * <ul>
 * <li>Some Pulsar unit tests use a PulsarService that isn't started</li>
 * <li>Some Pulsar unit tests start the PulsarService and use less mocking</li>
 * </ul>
 *
 * This class can be used to set up a PulsarService that can be used in both types of tests.
 *
 * There are few motivations for PulsarTestContext:
 * <ul>
 * <li>It reduces the reliance on Mockito for hooking into the PulsarService for injecting mocks or customizing the behavior of some
 * collaborators. Mockito is not thread-safe and some mocking operations get corrupted. Some examples of the issuess: https://github.com/apache/pulsar/issues/13620, https://github.com/apache/pulsar/issues/16444 and https://github.com/apache/pulsar/issues/16427.</li>
 * <li>Since the Mockito issue causes test flakiness, this change will improve reliability.</li>
 * <li>It makes it possible to use composition over inheritance in test classes. This can help reduce the dependency on
 * deep test base cases hierarchies.</li>
 * <li>It reduces code duplication across test classes.</li>
 * </ul>
 *
 * <h2>Example usage of a PulsarService that is started</h2>
 * <pre>{@code
 * PulsarTestContext testContext = PulsarTestContext.builder()
 *     .spyByDefault()
 *     .withMockZooKeeper()
 *     .build();
 * PulsarService pulsarService = testContext.getPulsarService();
 * try {
 *     // Do some testing
 * } finally {
 *     testContext.close();
 * }
 * }</pre>
 *
 * <h2>Example usage of a PulsarService that is not started at all</h2>
 * <pre>{@code
 * PulsarTestContext testContext = PulsarTestContext.builderForNonStartableContext()
 *     .spyByDefault()
 *     .build();
 * PulsarService pulsarService = testContext.getPulsarService();
 * try {
 *     // Do some testing
 * } finally {
 *     testContext.close();
 * }
 * }</pre>
 */",code_comment,code|design-debt
INSERT,1675246918,60d8e645e7ca6afa46625b15f32c1b65862888ce,"/**
     * Internal class that contains customizations for the Lombok generated Builder.
     *
     * With Lombok, it is necessary to extend the generated Builder class for adding customizations related to
     * instantiation and completing the builder.
     */",code_comment,code|design-debt
INSERT,1670379329,493ab7bf0ffda064f3c4251e82b390aa1f83057c,"/**
         * TODO verify brk_ml_cursor_persistZookeeperErrors"".",code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: define StateCompactionStrategy,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: define BrokerRegistry,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: schedule monitorOwnerships by brokerRegistry,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: cancel scheduled monitorOwnerships if any,code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: enable CompactionStrategy,code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: schedule listen instead of foreachAndListen,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: clean brokerRegistry,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: discard this protocol prefix removal,code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO : Add state validation in tableview by the compaction strategy,code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: when close,code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: after the split we need to write the child ownerships to BSC instead of ZK.,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: clean load data stores,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: integrate this monitor logic when broker registry is added,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: check conflict resolution,code_comment,requirement-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: retry lookups and assert that the monitor cleans up the stuck assignments,code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: assert child bundle ownerships in the channels.,code_comment,code|design-debt
INSERT,1669967061,fd9444c4e2a7bd68b7743a93a45ab711fd144016,"/**
 * Determines which bundles should be split based on various thresholds.
 *
 * Migrate from {@link org.apache.pulsar.broker.loadbalance.BundleSplitStrategy}
 */",code_comment,code|design-debt
INSERT,1669967061,fd9444c4e2a7bd68b7743a93a45ab711fd144016,"/**
     * Determines which bundles, if any, should be split.
     *
     * @param context The context used for decisions.
     * @return A set of the bundles that should be split.
     */",code_comment,code|design-debt
INSERT,1669958426,0278b7cd85055b80eb7f5d6539e8c6a4262e898a,// TODO: add the channel recovery test when broker registry is added.,code_comment,requirement-debt
INSERT,1669967061,fd9444c4e2a7bd68b7743a93a45ab711fd144016,"/**
 * The namespace unload strategy.
 * Used to determine the criteria for unloading bundles.
 *
 * Migrate from {@link org.apache.pulsar.broker.loadbalance.LoadSheddingStrategy}
 */",code_comment,code|design-debt
INSERT,1669967061,fd9444c4e2a7bd68b7743a93a45ab711fd144016,"/**
 * Unit test of {@link BrokerLoadData}.
 * TODO: Add more units test.
 */",code_comment,requirement-debt
INSERT,1669813726,7c4187fb9c2b737a0a33637d5c360cae176d7c9b,"/**
 * This function removes a field"" from a AVRO message",code_comment,code|design-debt
INSERT,1669799346,c7124bb1325126b1151ebc655cba0423f4adf2d7,"/**
         * To release any resource used during the process.
         * NOTE: To avoid memory leak, do the following ONLY if a different ByteBuf instance was returned in process()
         *       1. Call processedPayload.release() to release a reference
         *       2. Do any other cleanup needed
         *
         * @param processedPayload The processed payload that was returned in process() call
         */",code_comment,code|design-debt
DELETE,1668671388,ee5f5d251c4ac1645d8c6641a6902714d2c6b45b,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1668671388,ee5f5d251c4ac1645d8c6641a6902714d2c6b45b,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1669695451,5b062f37bd6688c09384abbe908f7c14e28052fc,//TODO add topicName in properties?,code_comment,requirement-debt
INSERT,1668670012,887e4d99838b986525ba36bc27312bf2dca00aa7,"/**
         * To release any resource used during the process.
         * NOTE: To avoid memory leak, do the following ONLY if a different ByteBuf instance was returned in process()
         *       1. Call processedPayload.release() to release a reference
         *       2. Do any other cleanup needed
         *
         * @param processedPayload The processed payload that was returned in process() call
         */",code_comment,code|design-debt
DELETE,1668426152,15245f3f2ac4224bcf28d3495551f565335a58fd,// jackson decided to fit value into some other type internally,code_comment,code|design-debt
INSERT,1668425555,417042b35d487fcffb76bcfa9b154ab9a0d11fdd,// jackson decided to fit value into some other type internally,code_comment,code|design-debt
INSERT,1668426526,4501f3986b1671955de1fa738c3c793bfde9cfef,"/**
     * Calculate the SchemaHash for compatible with `@NoArgsConstructor`.
     * If SchemaInfoImpl is created by no-args-constructor from users, the schemaHash will be null.
     * Note: We should remove this method as long as `@NoArgsConstructor` removed at major release to avoid null-check
     * overhead.
     */",code_comment,code|design-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,// TODO merge bucket snapshot (synchronize operate),code_comment,code|design-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,// TODO make it asynchronous and not blocking this process,code_comment,requirement-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,// TODO make this segment load again,code_comment,code|design-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,// TODO Recover bucket snapshot,code_comment,code|design-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,// TODO Delete bucket snapshot,code_comment,code|design-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,// TODO delete bucket snapshot,code_comment,code|design-debt
INSERT,1667613019,e6f4aaea84d027cea3016683815cc4e1a890cf88,//TODO Record create snapshot failed,code_comment,requirement-debt
INSERT,1668137842,92c9cf93064bafd4d88542fc2deab3f58cbbfbbd,"/**
         * TODO verify brk_ml_cursor_persistZookeeperErrors"".",code_comment,requirement-debt
INSERT,1666837279,a280fd2a6893170daeecbc9a1d1d10b0bd86a432,"//test/test/test_¬¬¬¬¬¬¬aabbcc"";",code_comment,test-debt
INSERT,1666833074,899ce511d742fc8a63c83072f7b9bc35dce4d96b,"//test/test/test_¬¬¬¬¬¬¬aabbcc"";",code_comment,test-debt
INSERT,1666833095,b7def563f3dd0cfaeb8f0693fd24d875f21c4fde,"//test/test/test_¬¬¬¬¬¬¬aabbcc"";",code_comment,test-debt
INSERT,1666987244,3fdbc9fca6b6206bcbeef8e48937ccb3cb2d273f,// but the topic metadata should be consistent to go through deletion again,code_comment,code|design-debt
INSERT,1666614276,031e37c33b11b7513f458404c5e2fdfc4ae61a30,"//test/test/test_¬¬¬¬¬¬¬aabbcc"";",code_comment,test-debt
INSERT,1667237637,666d4bb34441942d20ddac1e9a1c094284067778,//TODO,code_comment,code|design-debt
DELETE,1666377284,08540329c2c1eec262cb0bf728207025fd59f82b,"/*
                                                                                       * TODO: use driver name to
                                                                                       * identify offloader
                                                                                       */",code_comment,code|design-debt
INSERT,1665629711,7628fad4b27edb236b04d34918b57dedb301bdca,"/**
     * Why should we check the recursion number of findStartPointLoop""",code_comment,code|design-debt
INSERT,1665627891,55a0cb4841e1329bd2137611bad391b5f483ae70,// when the future is done remove this from the map,code_comment,code|design-debt
INSERT,1665575832,92b47085b2ca5e472d647dd418f7e07e09256578,// and then the opFuture will never be replaced.,code_comment,code|design-debt
INSERT,1665564310,11b5df797b2e9cb48dfc38137f0b7ef736a8a47c,"/**
     * Calculate the SchemaHash for compatible with `@NoArgsConstructor`.
     * If SchemaInfoImpl is created by no-args-constructor from users, the schemaHash will be null.
     * Note: We should remove this method as long as `@NoArgsConstructor` removed at major release to avoid null-check
     * overhead.
     */",code_comment,code|design-debt
INSERT,1665558864,2e85be99747ad57d0ebca0e0104605eb62d189cf,"/**
     * Calculate the SchemaHash for compatible with `@NoArgsConstructor`.
     * If SchemaInfoImpl is created by no-args-constructor from users, the schemaHash will be null.
     * Note: We should remove this method as long as `@NoArgsConstructor` removed at major release to avoid null-check
     * overhead.
     */",code_comment,code|design-debt
INSERT,1665558699,2b5b92ce57dda64b6e3da5e09cde55c15bd143c5,"/**
     * Calculate the SchemaHash for compatible with `@NoArgsConstructor`.
     * If SchemaInfoImpl is created by no-args-constructor from users, the schemaHash will be null.
     * Note: We should remove this method as long as `@NoArgsConstructor` removed at major release to avoid null-check
     * overhead.
     */",code_comment,code|design-debt
INSERT,1664779329,11482048d357ccb4e4f1802304a7dd0bfd7b9c26,// TODO: ShadowManagedLedger has different initialize process from normal ManagedLedger,code_comment,code|design-debt
INSERT,1664779329,11482048d357ccb4e4f1802304a7dd0bfd7b9c26,//  which is complicated and will be implemented in the next PRs.,code_comment,requirement-debt
INSERT,1664469948,f0b6348c3ccdf84c10f4c51e68d581034830833d,"/*
                                                                                       * TODO: use driver name to
                                                                                       * identify offloader
                                                                                       */",code_comment,code|design-debt
DELETE,1664442391,9026d1954d180cfb4b3a38f52217b14a3b5e3dc0,"/*
                                                                                       * TODO: use driver name to
                                                                                       * identify offloader
                                                                                       */",code_comment,code|design-debt
INSERT,1663815420,d9c9d7375776c1b79a7d8f4430d650123d715047,// The producer is not ready yet after having stopped/restarted. Drop the message because it will,code_comment,requirement-debt
INSERT,1663815420,d9c9d7375776c1b79a7d8f4430d650123d715047,// NOTE: shadow topic is not ready yet. So use normal topic instead.,code_comment,requirement-debt
INSERT,1662946561,dea4a328fde4da49a3a46cb2402d5b10b6ba7922,//If the dispatcher is stuck,code_comment,code|design-debt
INSERT,1662946543,011e121784614199889c999b3e1a4a717af07938,//If the dispatcher is stuck,code_comment,code|design-debt
INSERT,1662946518,234d7198505c06aa94a6eade2fb41d34a7c7dbb0,//If the dispatcher is stuck,code_comment,code|design-debt
INSERT,1662815421,d7943a5702a48ae1fad6afc72d230f130b5b8150,//If the dispatcher is stuck,code_comment,code|design-debt
DELETE,1663135606,57317d6576ae6bd78d11afa23aad6744f681c4af,// TODO Ho,code_comment,requirement-debt
INSERT,1663135606,57317d6576ae6bd78d11afa23aad6744f681c4af,// TODO Clea,code_comment,requirement-debt
INSERT,1662124174,3a3a993b093291f2721a20eb5a981a3b7db557d9,// when the future is done remove this from the map,code_comment,code|design-debt
INSERT,1661173312,43759d2fed8e59afa82896bce5c0c78df1e156ab,// The producer is not ready yet after having stopped/restarted. Drop the message because it will,code_comment,requirement-debt
INSERT,1660876729,5affcd796ad26e19ff1c0e90b1e7016f5e757ad6,"/**
 * This function removes a field"" from a AVRO message.",code_comment,code|design-debt
INSERT,1660876632,ee004001e6bd0e0110f795a12a9293bc2d531279,"/**
 * This function removes a field"" from a AVRO message.",code_comment,code|design-debt
DELETE,1661173312,43759d2fed8e59afa82896bce5c0c78df1e156ab,// The producer is not ready yet after having ,code_comment,requirement-debt
DELETE,1660181938,a2769124689892bd5153f9b5b2e5ac20c1121038,// This test looks like it could be flakey,code_comment,test-debt
DELETE,1660147614,e826d849ceef9d6aef28569ad57950bba90dfff1,// This test looks like it could be flakey,code_comment,test-debt
DELETE,1659962092,47b6611e340cb221086ca450592d44088d8eff6f,//TODO: support timestamp_microseconds logicalType : https://github.com/prestosql/presto/issues/1284,code_comment,requirement-debt
DELETE,1659944399,9cb41fd42e5e3f19ba950fde6bcfcbac267cf3c2,// don't be smart here and just return null,code_comment,code|design-debt
INSERT,1659499724,a8231a4f821b360d7469685c77268d9591fb072d,"/**
         * TODO verify brk_ml_cursor_persistZookeeperErrors"".",code_comment,requirement-debt
DELETE,1659083096,e451806a715661fca81876579e0f078aca36c9d9,// don't be smart here and just return null,code_comment,code|design-debt
INSERT,1659001010,89b6a535aa8de8e2475cd39320897700e64d269e,"/**
     * To ensure that connection release is triggered in a short time, call manually.
     * Why provide this method: prevents instability on one side
     */",code_comment,code|design-debt
INSERT,1659001010,89b6a535aa8de8e2475cd39320897700e64d269e,/** Do you want to automatically clean up unused connections. **/,code_comment,code|design-debt
INSERT,1659067608,739c45e807524e003286db66563eb8e4421c89dd,// bitSetRecyclable1 is recycled because it's replaced in `update`,code_comment,code|design-debt
INSERT,1658894486,43cd22e632d1938b2c5ee7cd860fc46d20fed921,// Currently sending a duplicated message won't throw an exception. Instead,code_comment,code|design-debt
INSERT,1658797825,21c850db31b5593f2edc9f496cd8befb50c84d56,// TODO How de,code_comment,requirement-debt
INSERT,1658895697,4a2286c7e6b8294cf2eb325fa9b3d6e6be71ed58,"/**
     * Used only for buffered writer. Since all cmd-writes in buffered writer are in the same thread, so we can use
     * threadLocal variables here. Why need to be on the same thread ?
     * Because {@link BatchedPendingAckMetadataEntry#clear()} will modifies the elements in the attribute
     * {@link BatchedPendingAckMetadataEntry#getPendingAckLogsList()}, this will cause problems by multi-thread write.
     */",code_comment,code|design-debt
INSERT,1658335721,586979152bf22de5a1dff3e955dfcdf540257a08,"/**
     * Set maximum backlog distance between backlogged curosr to avoid caching unused entry.
     *
     * @param maxBacklogBetweenCursorsForCaching
     */",code_comment,code|design-debt
INSERT,1658195636,af932ed3e9f325cd0d36f57ffd1f4fd4d9f446ad,"/**
     * Tests all operations from write to callback, including these step:
     *   1. Write many data.
     *   2. Verify callback correct.
     *   3. Read from bookie, verify all data correct.
     *   4. Verify byte buffer that generated by DataSerializer has been released after process finish.
     *   5. Cleanup.
     * Overridden cases: see {@link #mainProcessCasesProvider}.
     *
     * TODO: Additional validation is required:
     *   1. Recycle is handled correctly.
     *   2. ByteBuf generated by data merge before Bookie writes is released correctly, including prefix-ByteBuf and
     *      composite-ByteBuf.
     *   3. Even if executed bkc.failAfter""",code_comment,code|design-debt
DELETE,1657901658,5bc399de8cad0a97673cd9415bd54c679f461221,// very short delay,code_comment,code|design-debt
INSERT,1658483017,4d16ad5c415028afc8c52ff222481763e89a3dab,"/**
     * Used only for buffered writer. Since all cmd-writes in buffered writer are in the same thread, so we can use
     * threadLocal variables here. Why need to be on the same thread ?
     * Because {@link BatchedTransactionMetadataEntry#clear()} will modifies the elements in the attribute
     * {@link BatchedTransactionMetadataEntry#getTransactionLogsList()} ()}, this will cause problems by multi-thread
     * write.
     */",code_comment,code|design-debt
DELETE,1657901483,0a553e6a4be3c874f63037490353f745ab1452a6,// very short delay,code_comment,code|design-debt
INSERT,1658483017,4d16ad5c415028afc8c52ff222481763e89a3dab,"/***
     * Verify transaction meta store write and read correct.
     * TODO After the batch feature is dynamically switched，append tests that contain both batch and non-batch data.
     */",code_comment,requirement-debt
INSERT,1658483017,4d16ad5c415028afc8c52ff222481763e89a3dab,"/***
     * Verify transaction meta store delete logs after commit/abort correct.
     * TODO After the batch feature is dynamically switched，append tests that contain both batch and non-batch data.
     */",code_comment,code|design-debt
INSERT,1658483017,4d16ad5c415028afc8c52ff222481763e89a3dab,"/**
     * Verify transaction meta store recover correct.
     * TODO After the batch feature is dynamically switched，append tests that contain both batch and non-batch data.
     */",code_comment,requirement-debt
INSERT,1658483017,4d16ad5c415028afc8c52ff222481763e89a3dab,"/**
     * Why is this test needed ？
     * Make sure that when compare to the markDeletePosition""",code_comment,test-debt
DELETE,1657693999,e6396bbe344867f8821e3f5975d385cd4e5b5251,//TODO: p,code_comment,code|design-debt
INSERT,1657679304,b8d52bf1a40c5738ca636540ae8e8c68516ca0fc,// This unused field is ,code_comment,code|design-debt
INSERT,1657589624,d5088e3b5db6cac5d9e51c298a6827bb8fbccc07,"/**
 * Placement strategy which selects a broker based on which one has the least resource usage with weight.
 * This strategy takes into account the historical load percentage and short-term load percentage, and thus will not
 * cause cluster fluctuations due to short-term load jitter.
 */",code_comment,code|design-debt
DELETE,1657800431,0287347405fb33959814cd073ea6cf1e759cd2da,// TODO ev,code_comment,requirement-debt
INSERT,1656987854,d6f2fa18bce49fad2a712c306d23c9937f1103a2,// Make sure the dynamic cache is updated to prevent the flaky test.,code_comment,test-debt
INSERT,1657800431,0287347405fb33959814cd073ea6cf1e759cd2da,// TODO even,code_comment,requirement-debt
INSERT,1656709646,d9f564076a85ce108de16b1d350765605509bd1e,// TODO maintain the value based on updates from broker and warn the user if inconsistent with hash from polling,code_comment,code|design-debt
INSERT,1656397993,742158932c0bf1f6fd8814253a5d944d529202a1,// | cmdLength | cmdSize | magic and checksum | msgMetadataLength | msgMetadata |,code_comment,code|design-debt
INSERT,1656731377,5dd735c75e38dc4ba0953fb5a704dccfa4877745,// bitSetRecyclable1 is recycled because it's replaced in `update`,code_comment,code|design-debt
INSERT,1656427370,5eefdf10e563c32552772a3d50127c55ff18d557,// bitSetRecyclable1 is recycled because it's replaced in `update`,code_comment,code|design-debt
INSERT,1655880317,c5056598cdd3a3f788dbf6a3dd0f5590d4bf1ef3,//public/default/testG,code_comment,test-debt
INSERT,1655912089,936d6fdc780ea454e72e82b6c7a1885799158d02,// bitSetRecyclable1 is recycled because it's replaced in `update`,code_comment,code|design-debt
DELETE,1655358024,b8835bb0c348c676c92959abe1f4a61b3751d40c,// very short delay,code_comment,code|design-debt
INSERT,1654758603,2b16111b332468929314592494832118734b7c61,// jackson decided to fit value into some other type internally,code_comment,code|design-debt
DELETE,1654558754,c7faf6248b1413fc71465fc12571886db323193c,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1654558754,c7faf6248b1413fc71465fc12571886db323193c,"/**
 * Default eviction policy.
 *
 * <p/>This policy consider only the bigger caches for doing eviction.
 *
 * <p/>The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak,
 * otherwisethe eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1653384109,dc861c46b5b57693f0f4e132a70ba9153096775e,// Currently sending a duplicated message won't throw an exception. Instead,code_comment,code|design-debt
INSERT,1652709905,f90ef9c6ad88c4f94ce1fcc682bbf3f3189cbf2a,// jackson decided to fit value into some other type internally,code_comment,code|design-debt
INSERT,1652444322,a77333705ffb352da39767d53975353bb4f8864e,// Currently sending a duplicated message won't throw an exception. Instead,code_comment,code|design-debt
INSERT,1652361007,ca8976292cbb32f0a8b3d01ab1b3c25aa02d454b,"/**
 * This function removes a field"" from a AVRO message",code_comment,code|design-debt
INSERT,1651847383,ac6bd3c71e24b90826438cd44395ca21a849067f,// deleted to prevent leak,code_comment,code|design-debt
INSERT,1651212127,e38d75a0950de0dd5ab5dcc620a20cb332ee5fb8,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651212127,e38d75a0950de0dd5ab5dcc620a20cb332ee5fb8,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651212127,e38d75a0950de0dd5ab5dcc620a20cb332ee5fb8,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651153479,7c29b1d5fa171c889925e1a82ac3e6d4f8b359a5,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651153479,7c29b1d5fa171c889925e1a82ac3e6d4f8b359a5,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651153479,7c29b1d5fa171c889925e1a82ac3e6d4f8b359a5,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651212110,f256491296907b575c62137327c10a1b49ccb3a7,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651149641,3ebc23e4bff05af9c79a41bf3f9cd17f777f6c6f,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651149641,3ebc23e4bff05af9c79a41bf3f9cd17f777f6c6f,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651149641,3ebc23e4bff05af9c79a41bf3f9cd17f777f6c6f,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651153468,7ca9bf818deafa263c57329a99efed38644e44e0,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1651149633,14d9b8492d6dc4781bc83f817ca7898966b4214d,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
 * Data class comprising the short term and long term historical data for this bundle.
 */",code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
     * Initialize the bundle data.
     *
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     */",code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
     * Initialize this bundle data and have its histories default to the given stats before the first sample is
     * received.
     *
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     * @param defaultStats
     *            The stats to default to before the first sample is received.
     */",code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// Short term data for this bundle. The time frame of this data is,code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// determined by the number of short term samples,code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// Long term data for this bundle. The time frame of this data is determined,code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// by the number of long term samples,code_comment,code|design-debt
DELETE,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
 * Data class aggregating the short term and long term data across all bundles belonging to a broker.
 */",code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
 * Data class comprising the short term and long term historical data for this bundle.
 */",code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
     * Initialize the bundle data.
     *
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     */",code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
     * Initialize this bundle data and have its histories default to the given stats before the first sample is
     * received.
     *
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     * @param defaultStats
     *            The stats to default to before the first sample is received.
     */",code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// Short term data for this bundle. The time frame of this data is,code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// determined by the number of short term samples,code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// Long term data for this bundle. The time frame of this data is determined,code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,// by the number of long term samples,code_comment,code|design-debt
INSERT,1650785404,a812f29bab93a5e841a9b3c3190fca343fab6e71,"/**
 * Data class aggregating the short term and long term data across all bundles belonging to a broker.
 */",code_comment,code|design-debt
INSERT,1650565365,df0c11044662092da0df9b9ed790bf90b6f51b3b,// healthcheck implementation should detect this deadlock,code_comment,code|design-debt
INSERT,1650545266,b2f54ba385b49779151baff0874dce41faaa3ca4,"/**
     * Hacky parsing of Prometheus text format. Should be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1652210438,7a7b5faa102b196021fdaf2ba77763f16087ef7a,// IKTODO: this method is awful,code_comment,code|design-debt
INSERT,1648803217,193f5b2f74e919c05d0df651981cef439f55472f,"/**
 * This function removes a field"" from a AVRO message",code_comment,code|design-debt
INSERT,1648536185,2517649fab4058322e2c35351e764778ea946e44,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1648536185,2517649fab4058322e2c35351e764778ea946e44,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1647428300,ea95b28336acee8fe42a5dd8d95c92500dad08ea,"/**
     * Hacky parsing of Prometheus text format. Should be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1647315668,8e7006f899bd2b9ed9482ab2ce1ee35233957d03,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1647315668,8e7006f899bd2b9ed9482ab2ce1ee35233957d03,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1647315668,8e7006f899bd2b9ed9482ab2ce1ee35233957d03,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1647271427,1d10dff757ac7b9a203c14d2085a480495fb141b,// so that we can reduce unnecessary expansions,code_comment,code|design-debt
INSERT,1652210438,7a7b5faa102b196021fdaf2ba77763f16087ef7a,// IKTODO: this method is awful,code_comment,code|design-debt
INSERT,1646144275,89a36f9e4a0cd37676b7501184004f01a7c47150,// TODO: Test disabled since it results in a OOME,code_comment,test-debt
INSERT,1644848412,f89d6490371177cbb8b3f3b08f1bf2203e420dc3,//TODO: pendingAck handle next pr will fix,code_comment,code|design-debt
INSERT,1644848412,f89d6490371177cbb8b3f3b08f1bf2203e420dc3,// TODO: redeliver epoch link https://github.com/apache/pulsar/issues/13690,code_comment,requirement-debt
INSERT,1644465671,69de8d7550859854b066927e9e88bff5ce3b3021,// TODO need to fix which using transaction with individual ack for failover subscription,code_comment,requirement-debt
INSERT,1644461780,a64014627bcdce0a1584b592ee942435e119a2a7,// TODO need to fix which using transaction with individual ack for failover subscription,code_comment,requirement-debt
INSERT,1643535753,4691d3e80c0afc2b31e15023263247d171b7a696,// the null check is a workaround for #13620,code_comment,code|design-debt
INSERT,1643400081,e45b4f211db43cdbf604a6dfc5bf305b541b0702,// the null check is a workaround for #13620,code_comment,code|design-debt
INSERT,1643363998,d22ff4f5e87ca4731a359be1c50d2732cf8da649,"/**
     * Remove schema compatibility strategy on a topic.
     *
     * @param topic The topic in whose policy should be removed
     */",code_comment,code|design-debt
INSERT,1642499700,8c86b3d6552d03f660056e9447e3ba9ce1d77ebb,"//prop/ns-abc/test-subtopic-"" + testId.getAndIncrement();",code_comment,test-debt
INSERT,1642491655,16aef57eefd15b7bf9036fbca9c3ff821b63ef02,"//prop/ns-abc/test-subtopic-"" + testId.getAndIncrement();",code_comment,test-debt
INSERT,1642479007,3dbe418b70e35d710fef7c8da6689e5ef6b8574a,"//prop/ns-abc/test-subtopic-"" + testId.getAndIncrement();",code_comment,test-debt
INSERT,1641829458,7df7896ec5bb52d3890bde161375f68a81d830c5,"/**
 * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
 * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
 */",code_comment,code|design-debt
DELETE,1641829458,7df7896ec5bb52d3890bde161375f68a81d830c5,"/**
     * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
     * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
     */",code_comment,code|design-debt
INSERT,1641473618,cf7d0ed4348d9737e91294e40a982fb3847ed655,"/**
 * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
 * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
 */",code_comment,code|design-debt
DELETE,1641473618,cf7d0ed4348d9737e91294e40a982fb3847ed655,"/**
     * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
     * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
     */",code_comment,code|design-debt
INSERT,1641306875,40ac7934ed567b2b9f16dbd7f937f7973dcddc21,"/**
 * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
 * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
 */",code_comment,code|design-debt
DELETE,1641306875,40ac7934ed567b2b9f16dbd7f937f7973dcddc21,"/**
     * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
     * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
     */",code_comment,code|design-debt
DELETE,1639999003,e8a629c06d4f23c33612dbc4b994fd4f7c6a25f4,// (see comment above regarding https://github.com/apache/pulsar/issues/11289).,code_comment,code|design-debt
DELETE,1639999003,e8a629c06d4f23c33612dbc4b994fd4f7c6a25f4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
DELETE,1639999003,e8a629c06d4f23c33612dbc4b994fd4f7c6a25f4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1639999003,e8a629c06d4f23c33612dbc4b994fd4f7c6a25f4,// (see comment above regarding https://github.com/apache/pulsar/issues/11289).,code_comment,code|design-debt
INSERT,1639999003,e8a629c06d4f23c33612dbc4b994fd4f7c6a25f4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1639999003,e8a629c06d4f23c33612dbc4b994fd4f7c6a25f4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1639464547,03bbc8e67ad429a774936d26ab2f4d40c1ea4999,"/**
         * To release any resource used during the process.
         * NOTE: To avoid memory leak, do the following ONLY if a different ByteBuf instance was returned in process()
         *       1. Call processedPayload.release() to release a reference
         *       2. Do any other cleanup needed
         *
         * @param processedPayload The processed payload that was returned in process() call
         */",code_comment,code|design-debt
DELETE,1639247963,342fb54a2cde98fac22b823026f8769f263e2a86,// Delete the leaves first and eventually get rid of the root,code_comment,code|design-debt
DELETE,1638644792,ee904063abc8ec90c3c536b28a47a59975175cd4,"/**
     * This is a temporary solution until we'll have migrated BK metadata to map to MetadataStore interface.
     */",code_comment,code|design-debt
INSERT,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// To work around this issue,code_comment,code|design-debt
INSERT,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// don't be smart here and just return null,code_comment,code|design-debt
INSERT,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// don't be smart here and just return null,code_comment,code|design-debt
INSERT,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// prepare a custom placement policy and put it into the custom metadata. The isolation policy should decode,code_comment,code|design-debt
INSERT,1638369556,9c4f182468e4e4faddd3928d4a0b85d3cf3565ec,// We've not moved onto 63-bit ledgers yet.,code_comment,code|design-debt
INSERT,1638369556,9c4f182468e4e4faddd3928d4a0b85d3cf3565ec,// Keeping 3 should be plenty to prevent races,code_comment,code|design-debt
INSERT,1638369556,9c4f182468e4e4faddd3928d4a0b85d3cf3565ec,// TODO: XXX,code_comment,code|design-debt
DELETE,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// To work around this issue,code_comment,code|design-debt
DELETE,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// don't be smart here and just return null,code_comment,code|design-debt
DELETE,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// don't be smart here and just return null,code_comment,code|design-debt
DELETE,1638393453,d7158dd872d80c5579e5f328b75b9d65cf6ea464,// prepare a custom placement policy and put it into the custom metadata. The isolation policy should decode,code_comment,code|design-debt
DELETE,1635050515,86f40c1dc127aa9af928c544ff4062666c621ef4,// (see comment above regarding https://github.com/apache/pulsar/issues/11289).,code_comment,code|design-debt
DELETE,1635050515,86f40c1dc127aa9af928c544ff4062666c621ef4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
DELETE,1635050515,86f40c1dc127aa9af928c544ff4062666c621ef4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1635050515,86f40c1dc127aa9af928c544ff4062666c621ef4,// (see comment above regarding https://github.com/apache/pulsar/issues/11289).,code_comment,code|design-debt
INSERT,1635050515,86f40c1dc127aa9af928c544ff4062666c621ef4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1635050515,86f40c1dc127aa9af928c544ff4062666c621ef4,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1633509568,86b2a212d4bf38d536814517d6e91ea8d6be7a58,"/**
     * Release the resources if necessary.
     *
     * NOTE: For a MessagePayload object that is created from {@link MessagePayloadFactory#DEFAULT}, this method must be
     * called to avoid memory leak.
     */",code_comment,code|design-debt
INSERT,1633015310,91ca173d29ca21f21b20452a2812b486a70da674,"/**
     * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
     * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
     */",code_comment,code|design-debt
INSERT,1632923763,b2678be0a97580d69da0b543a499efb3d9adbd5e,// TODO: Check message backlog and fail if backlog too large.,code_comment,requirement-debt
INSERT,1632424218,ee1ccf9748e25b4c65fc3cf22b3c18cdc2642474,// We don't strictly need to use 'volatile' here because we don't need the precise consistent semantic. Instead,code_comment,code|design-debt
INSERT,1632429168,cf6673f0c727d6b8a7bd8d40ac7e72057a1bae1f,"/**
     * This is a temporary solution until we'll have migrated BK metadata to map to MetadataStore interface.
     */",code_comment,code|design-debt
INSERT,1631548218,e2bc52d40450fa00af258c4432a5b71d50a5c6e0,// and it is not tested with 11.g according to https://debezium.io/releases/1.5/,code_comment,test-debt
INSERT,1631548218,e2bc52d40450fa00af258c4432a5b71d50a5c6e0,"/**
 * A tester for testing Debezium OracleDb source.
 */",code_comment,test-debt
INSERT,1631170939,e4cdfe574516eb7d82b2130df022fcbc83521dfe,"/**
     * This method should be called in the cleanup method of the concrete class.
     */",code_comment,code|design-debt
INSERT,1631170929,5344b822edf2c5cfcacc8ef51bf99cf7e975560e,// Distinguish partitioned topic to avoid duplicate deletion of the same schema,code_comment,code|design-debt
INSERT,1629879733,7de9992b6c047fbdda7ab47ba83b97156f881d12,"/**
     * This method should be called in the cleanup method of the concrete class.
     */",code_comment,code|design-debt
INSERT,1629532217,8d8e6b751ee0dc99306a1c61c22a8d75b5927811,"/**
     * Enable pooling of messages and the underlying data buffers.
     * <p/>
     * When pooling is enabled, the application is responsible for calling Message.release() after the handling of every
     * received message. If “release()” is not called on a received message, there will be a memory leak. If an
     * application attempts to use and already “released” message, it might experience undefined behavior (for example, memory
     * corruption, deserialization error, etc.).
     */",code_comment,code|design-debt
INSERT,1629545558,e28f69ecf82d40b20aed16ad03f7831bbca721b4,// Distinguish partitioned topic to avoid duplicate deletion of the same schema,code_comment,code|design-debt
DELETE,1629506024,f7957a544bd697b8d69fd5ff380a8ffbeeb28a23,// TODO: pass the executor,code_comment,requirement-debt
DELETE,1629506024,f7957a544bd697b8d69fd5ff380a8ffbeeb28a23,// TODO: ,code_comment,code|design-debt
DELETE,1631806056,89841aaf82b16ac4dfe7b7839211b3b38d6320a4,// Delete the leaves first and eventually get rid of the root,code_comment,code|design-debt
INSERT,1628897085,17ab040bbd71161df3860613ddcd253b3af24f59,// TODO: support AVRO encoded key,code_comment,requirement-debt
INSERT,1629195083,b557e2479c70631fa0dc34606bc5492f73cfef96,// This test looks like it could be flakey,code_comment,test-debt
INSERT,1628061108,5d136a1132f8b8b76cdd49967b3ec4d422c0813e,"/*
        todo (possibly solvable by debezium upgrade?): figure out why last message is lost with larger numEntriesToInsert.
        I.e. numEntriesToInsert = 100 results in 99 events from debezium 1.0.0, 300 results in 299 events.
        10 is handled ok.
        Likely this is related to https://issues.redhat.com/browse/DBZ-2288
        */",code_comment,code|design-debt
INSERT,1627316384,8306158f3495f9607650fdb07b6e1b09594e12a5,"/**
     * Index an elasticsearch document and ack the record.
     * @param record
     * @param idAndDoc
     * @return
     * @throws Exception
     */",code_comment,documentation-debt
INSERT,1627005478,5bc8954e5a81fe51606cb0f3451b460af07f26ae,// TODO: We want to pass a sticky key hash as a third argument to guarantee the order of the messages,code_comment,code|design-debt
DELETE,1626932890,cdff337977c541c75646fe19f228d06d0624457b,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1626932890,cdff337977c541c75646fe19f228d06d0624457b,// (see comment above regarding https://github.com/apache/pulsar/issues/11289).,code_comment,code|design-debt
INSERT,1626932890,cdff337977c541c75646fe19f228d06d0624457b,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1626932890,cdff337977c541c75646fe19f228d06d0624457b,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1626370841,263a90badbad3425599fe57bc2586fe37be6c9e6,// TODO: pass the executor,code_comment,requirement-debt
INSERT,1626370841,263a90badbad3425599fe57bc2586fe37be6c9e6,// TODO: pass the executor,code_comment,requirement-debt
INSERT,1626349494,5aee5998f6b9e500873e1290f85a21eb11d1cd63,// TODO: We want to pass a sticky key hash as a third argument to guarantee the order of the messages,code_comment,code|design-debt
INSERT,1626663266,0d383ba91636554c67bf0fc5edef8eb22afad77f,// TODO: We want to pass a sticky key hash as a third argument to guarantee the order of the messages,code_comment,code|design-debt
INSERT,1626227198,076fd93c9c94a8db75ce45e51bf3066016947ccb,"/**
     * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
     * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
     */",code_comment,code|design-debt
INSERT,1626099994,68870054351f32e3992f4c6ea6034cd79ace5193,"/**
     * Help to switch the class loader of current thread to the NarClassLoader, and change it back when it's done.
     * With the help of try-with-resources statement, the code would be cleaner than using try finally every time.
     */",code_comment,code|design-debt
INSERT,1625784055,95e8cd4b6474c7c24a1c1b871f4996129d3f80e8,"/**
 * The command to generate documents of broker-tool.
 */",code_comment,documentation-debt
INSERT,1625623588,b58f64367920110b6419392343ad07f7b6b708fa,// TODO: duplications shouldn't be allowed,code_comment,code|design-debt
INSERT,1625623588,b58f64367920110b6419392343ad07f7b6b708fa,// TODO: duplications shouldn't be allowed,code_comment,code|design-debt
DELETE,1625252029,3939bce49ff7bc50f7a83910ff77e88c1b31cc39,"/*
    This is used to configure PulsarOffsetBackingStore.
    It will become unnecessary after the PulsarClient is exposed to the context.
    */",code_comment,code|design-debt
DELETE,1624898632,8da39f32e87bdd9be8ea73146ce17abe6fb5cc69,"// ToDo: Report only if the local usage has changed more than the ""tolerable"" limit for this round",code_comment,requirement-debt
DELETE,1624898632,8da39f32e87bdd9be8ea73146ce17abe6fb5cc69,// ToDo: make the following ,code_comment,requirement-debt
DELETE,1624898632,8da39f32e87bdd9be8ea73146ce17abe6fb5cc69,// ToDo: Change this one to a ReadWrite lock,code_comment,code|design-debt
INSERT,1624793430,bea4eb1f6e803e436cde621fec54abe065969a54,// timeout topic future should be removed from cache,code_comment,code|design-debt
INSERT,1624898632,8da39f32e87bdd9be8ea73146ce17abe6fb5cc69,// Hack to ensure aggregator calculation without waiting for a period of aggregation.,code_comment,code|design-debt
INSERT,1624649192,1d3e92e4e1591f1f320529a037083eda1da21abb,// TODO: duplications shouldn't be allowed,code_comment,code|design-debt
INSERT,1624649192,1d3e92e4e1591f1f320529a037083eda1da21abb,// TODO: duplications shouldn't be allowed,code_comment,code|design-debt
INSERT,1624593868,887f8ec398fad0062fa04b945099afbb888b929e,// timeout topic future should be removed from cache,code_comment,code|design-debt
DELETE,1624401058,b83ea984064b8fd5bee272e374d41848ed9c1ada,// This is an interim file; it will be replaced by a class that the,code_comment,code|design-debt
INSERT,1623996454,1447e6b1061babedc08901c44f16164bb4c4e2df,// timeout topic future should be removed from cache,code_comment,code|design-debt
INSERT,1623708172,4cf35698f9d7b0e1977d91a13638985400c9a2b3,// eventually causing all consumers to get stuck.,code_comment,code|design-debt
INSERT,1623707700,8065d6c4015a34fdc48017e15866b034f56849e0,// eventually causing all consumers to get stuck.,code_comment,code|design-debt
INSERT,1623707459,40c831761a7519e4ce9f0b7b8808cdb6df3f418e,// eventually causing all consumers to get stuck.,code_comment,code|design-debt
INSERT,1623369410,d280fad2b9fbfaba21ebd9d68aafcba36e10a005,// The entry should get removed from all caches,code_comment,code|design-debt
INSERT,1623186587,798b34fd2f4d4998ef2b7836dcd0d7f28883338b,// The entry should get removed from all caches,code_comment,code|design-debt
INSERT,1622658609,a2604c83c78066b08a00d68e61941d1594f2432e,"/*
    This is used to configure PulsarOffsetBackingStore.
    It will become unnecessary after the PulsarClient is exposed to the context.
    */",code_comment,code|design-debt
INSERT,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,"/**
 * Strategy to use when checking an auto-updated schema for compatibility to the current schema.
 */",code_comment,code|design-debt
INSERT,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,// TODO: Add more policy types when needed,code_comment,requirement-debt
INSERT,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,"/**
     * this may be wrong since we are comparing available and not the usage.
     *
     * @param o
     * @return
     */",code_comment,code|design-debt
DELETE,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,"/**
 * Strategy to use when checking an auto-updated schema for compatibility to the current schema.
 */",code_comment,code|design-debt
DELETE,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,// TODO: Add more policy types when needed,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: there're some gaps between non-persistent topics and persistent topics,code_comment,code|design-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics getList will return 0,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics,code_comment,requirement-debt
INSERT,1621329904,403b57a8bc56e1715b08d974847c82242729bb34,// TODO: for non-persistent topics getList will return 0,code_comment,requirement-debt
INSERT,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,// we use customized deserializer to replace jackson annotations in some POJOs,code_comment,code|design-debt
DELETE,1622668624,301a76435ce918520f1b70b95b7ebed9bf1b08b5,"/**
     * this may be wrong since we are comparing available and not the usage.
     *
     * @param o
     * @return
     */",code_comment,code|design-debt
DELETE,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// TODO does not allow for redundant leading zeros,code_comment,code|design-debt
DELETE,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// TODO ASN.1 DER encoded form,code_comment,requirement-debt
INSERT,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// TODO does not allow for redundant leading zeros,code_comment,code|design-debt
INSERT,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// TODO ASN.1 DER encoded form,code_comment,requirement-debt
INSERT,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// https://github.com/google/conscrypt/issues/1015 and therefore this solution alone,code_comment,code|design-debt
INSERT,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// contains the workaround.,code_comment,code|design-debt
INSERT,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,"/***
     * Conscrypt TrustManager instances will be configured to use the Pulsar {@link TlsHostnameVerifier}
     * class.
     * This method is used as a workaround for https://github.com/google/conscrypt/issues/1015
     * when Conscrypt / OpenSSL is used as the TLS security provider.
     *
     * @param trustManagers the array of TrustManager instances to process.
     * @return same instance passed as parameter
     */",code_comment,code|design-debt
INSERT,1620792176,6178ad069e13cae52f301014a06519d481b0a83b,// workaround https://github.com/google/conscrypt/issues/1015,code_comment,code|design-debt
INSERT,1620931922,3831cd11d005cfa060f2bce0236798dfc688cdf9,// TODO: for some reason the backlog size is sometimes off by one,code_comment,code|design-debt
INSERT,1620879698,8f1f5ba4fd8ecbab1f975623605400f5088c6e32,//TODO can control the number of entry to read,code_comment,requirement-debt
INSERT,1618961188,ef06691531002c5d7cdbbdafc5494914ee8e0765,"/**
     * Enable pooling of messages and the underlying data buffers.
     * <p/>
     * When pooling is enabled, the application is responsible for calling Message.release() after the handling of every
     * received message. If “release()” is not called on a received message, there will be a memory leak. If an
     * application attempts to use and already “released” message, it might experience undefined behavior (eg: memory
     * corruption, deserialization error, etc.).
     */",code_comment,code|design-debt
INSERT,1619016098,d1a439b3c18f72736c6331d58d151bc23c0628ca,// All messages for both subscription should be cleaned up from backlog by backlog monitor task.,code_comment,code|design-debt
DELETE,1619816028,1579b0f12533686f3b16f5e88aabda85c7f07d65,// TODO move to its own test,code_comment,code|design-debt
DELETE,1619816028,1579b0f12533686f3b16f5e88aabda85c7f07d65,// TODO move to its own test,code_comment,code|design-debt
INSERT,1618768920,86e89acee615dcc31ba6eebb38cf1749466daafa,"/**
         * Delete an existing resourcegroup.
         * <p/>
         * The resourcegroup needs to unused and not attached to any entity.
         *
         * @param resourcegroup Resourcegroup name
         * @throws PulsarAdminException.NotAuthorizedException You don't have admin permission
         * @throws PulsarAdminException.NotFoundException      Resourcegroup does not exist
         * @throws PulsarAdminException.ConflictException      Resourcegroup is in use
         * @throws PulsarAdminException                        Unexpected error
         */",code_comment,code|design-debt
INSERT,1618768920,86e89acee615dcc31ba6eebb38cf1749466daafa,"/**
         * Delete an existing resourcegroup.
         * <p/>
         * The resourcegroup needs to unused and not attached to any entity.
         *
         * @param resourcegroup Resourcegroup name
         */",code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: copy the monitoring class fields,code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: Deep copy instead?,code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: call the unregister for publisher after typo is fixed in transport manager,code_comment,requirement-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,"// ToDo: Report only if the local usage has changed more than the ""tolerable"" limit for this round",code_comment,requirement-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: make the following logs at debug level after initial bringup.,code_comment,requirement-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: make the following log at debug level after initial bringup.,code_comment,requirement-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: Change the following to a ReadWrite lock if needed.,code_comment,requirement-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// The creator resource-group-service [ToDo: remove later with a strict singleton ResourceGroupService],code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// ToDo: Change this one to a ReadWrite lock.,code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// This is an interim file; it will be replaced by a class that the,code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,"/**
     * Increments usage stats for the resource groups associated with the given namespace and tenant.
     * Expected to be called when a message is produced or consumed on a topic, or when we calculate
     * usage periodically in the background by going through broker-service stats. [Not yet decided
     * which model we will follow.] Broker-service stats will be cumulative, while calls from the
     * topic produce/consume code will be per-produce/consume.
     *
     * If the tenant and NS are associated with different RGs, the statistics on both RGs are updated.
     * If the tenant and NS are associated with the same RG, the stats on the RG are updated only once
     * (to avoid a direct double-counting).
     * ToDo: will this distinction result in expected semantics""",code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,"// ToDo: work out the initial conditions: we may allow a small number of ""first few iterations"" to go",code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// How much unused capacity is left over?,code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,"// It should say ""we need to report now"" every 'maxUsageReportSuppressRounds' rounds",code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// Gross hack!,code_comment,code|design-debt
INSERT,1618533532,b614448a1689343cc43ac25d6a3cc63f2d6a9a66,// hack to ensure aggregator calculation without waiting,code_comment,code|design-debt
INSERT,1618318718,7d1b684d4bb577b0e7673c38465c6bb16ecab6f6,"/**
 * Notifies TestNG core skipping remaining tests after first failure has appeared.
 *
 * Enabled when -DtestFailFast=true
 *
 * This is a workaround for https://issues.apache.org/jira/browse/SUREFIRE-1762 since
 * the bug makes the built-in fast-fast feature `-Dsurefire.skipAfterFailureCount=1` unusable.
 * Maven Surefire version 3.0.0-M5 contains the fix, but that version is unusable because of problems
 * with test output, https://issues.apache.org/jira/browse/SUREFIRE-1827.
 * It makes the Pulsar integration tests slow and to fail.
 *
 * This implementation is based on org.apache.maven.surefire.testng.utils.FailFastNotifier
 * implementation that is part of the Maven Surefire plugin.
 *
 */",code_comment,code|design-debt
INSERT,1618318718,7d1b684d4bb577b0e7673c38465c6bb16ecab6f6,"/**
 * Cleanup Mockito's Thread Local state that leaks memory
 * Mockito.reset method should be called at the end of a test in the same thread where the methods were
 * mocked/stubbed. There are some tests which mock methods in the ForkJoinPool thread and these leak memory.
 * This listener doesn't support parallel execution at TestNG level. This is not thread safe.
 * Separate forks (testForkCount > 1) controlled with Maven Surefire is the recommended solution
 * for parallel test execution and that is fine.
 */",code_comment,code|design-debt
INSERT,1618318718,7d1b684d4bb577b0e7673c38465c6bb16ecab6f6,"/**
 * Cleanup Mockito's Thread Local state. This is needed when Mockito has been used in an invalid way.
 * Mockito.reset method should be called at the end of a test in the same thread where the methods were
 * mocked/stubbed.
 */",code_comment,code|design-debt
INSERT,1617998236,05f1f7e58fc54648e7843335dfb64d413d9b6a1e,// TODO: duplications shouldn't be allowed,code_comment,code|design-debt
INSERT,1617779929,45661eae544257536cb10d6065adcaa0ca188955,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1617642081,6792e2f3b70324c79365a5e5c7faf47377446588,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
DELETE,1617779929,45661eae544257536cb10d6065adcaa0ca188955,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
DELETE,1620704713,a161e751c31ae99c5323f6dd6d4e2a55ff0b5fb1,"/**
 * A tester for testing cassandra sink.
 */",code_comment,test-debt
DELETE,1620704713,a161e751c31ae99c5323f6dd6d4e2a55ff0b5fb1,// TODO How do I get the core-site.xml,code_comment,requirement-debt
DELETE,1620704713,a161e751c31ae99c5323f6dd6d4e2a55ff0b5fb1,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1620704713,a161e751c31ae99c5323f6dd6d4e2a55ff0b5fb1,"/**
 * A tester for testing cassandra sink.
 */",code_comment,test-debt
INSERT,1620704713,a161e751c31ae99c5323f6dd6d4e2a55ff0b5fb1,// TODO How do I get the core-site.xml,code_comment,requirement-debt
INSERT,1620704713,a161e751c31ae99c5323f6dd6d4e2a55ff0b5fb1,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1615359228,8d9a2ab2a5592e5fb1799ad152be4b5082815191,"/**
     * Checks if dispatcher is stuck and unblocks the dispatch if needed.
     */",code_comment,code|design-debt
INSERT,1615359228,8d9a2ab2a5592e5fb1799ad152be4b5082815191,// consider dispatch is stuck if : dispatcher has backlog,code_comment,code|design-debt
INSERT,1615359228,8d9a2ab2a5592e5fb1799ad152be4b5082815191,// consider dispatch is stuck if : dispatcher has backlog,code_comment,code|design-debt
INSERT,1614656520,88446de5bc625e8817d30e6657901394f6e3a5fc,// we want to assert here that the algorithm returns the position of the,code_comment,test-debt
INSERT,1614656520,88446de5bc625e8817d30e6657901394f6e3a5fc,// this makes the test easier and predictable,code_comment,test-debt
INSERT,1613659933,61d800ea3c4195abcb6aa0d30f1763263a63d84c,// this test might fail if there are stats from other tests,code_comment,test-debt
INSERT,1613659933,61d800ea3c4195abcb6aa0d30f1763263a63d84c,// this test might fail if there are stats from other tests,code_comment,test-debt
INSERT,1613659933,61d800ea3c4195abcb6aa0d30f1763263a63d84c,// create race condition with a short delay,code_comment,code|design-debt
INSERT,1613164109,cee6377de13180805a122842816291b169e1aea2,// this test might fail if there are stats from other tests,code_comment,test-debt
INSERT,1613164109,cee6377de13180805a122842816291b169e1aea2,// this test might fail if there are stats from other tests,code_comment,test-debt
INSERT,1613164109,cee6377de13180805a122842816291b169e1aea2,// create race condition with a short delay,code_comment,code|design-debt
DELETE,1613627512,73d0aac75861da485a1bff2d678b5f94a4ab3a1b,// TODO s,code_comment,code|design-debt
DELETE,1617642081,6792e2f3b70324c79365a5e5c7faf47377446588,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
INSERT,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
INSERT,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
INSERT,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
DELETE,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
DELETE,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
DELETE,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
DELETE,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// The long term storage region,code_comment,code|design-debt
INSERT,1611801445,d1579b7f1be9ab70d74453f9fefaa49d1c48fe00,// we want to assert here that the algorithm returns the position of the,code_comment,test-debt
INSERT,1611801445,d1579b7f1be9ab70d74453f9fefaa49d1c48fe00,// this makes the test easier and predictable,code_comment,test-debt
INSERT,1612226221,0469dfe2c7804bd9ca9ea34e95d83b2196216cf9,// TODO: for now only Java function context exposed pulsar admin,code_comment,code|design-debt
INSERT,1611660200,4fc2e077ce0f4bac14b0d4ae06313e1ec5d1614b,"/**
     * This method is copied from DefaultUsageFormatter,
     * but the ability to skip deprecated commands is added.
     * @param out
     * @param indentCount
     * @param descriptionIndent
     * @param indent
     */",code_comment,code|design-debt
INSERT,1611645340,d557e0aa286866363bc6261dec87790c055db1b0,"/**
     * This method is copied from DefaultUsageFormatter,
     * but the ability to skip deprecated commands is added.
     * @param out
     * @param indentCount
     * @param descriptionIndent
     * @param indent
     */",code_comment,code|design-debt
DELETE,1611996532,0159495896d68e9125410ab83f7717a886242c0c,// Flaky Test: https://github.com/apache/pulsar/issues/7750,code_comment,test-debt
DELETE,1611828091,7dcc2ae2eb80404cbd90cc0884839683c9b748ec,// Flaky Test: https://github.com/apache/pulsar/issues/7750,code_comment,test-debt
INSERT,1611865210,0edcaa09150521a2a7e189de43d004ed799db2ee,// Ok.. (if test fails intermittently and namespace is already created),code_comment,test-debt
DELETE,1611192170,93dac25ee0f1577d56b1f7abb969bc98b760da02,// TODO: handle transactional acknowledgements.,code_comment,requirement-debt
INSERT,1610041488,7313b3403867d5ca16ea68edeaedd42f8c389ad3,// we want to assert here that the algorithm returns the position of the,code_comment,test-debt
INSERT,1610041488,7313b3403867d5ca16ea68edeaedd42f8c389ad3,// this makes the test easier and predictable,code_comment,test-debt
INSERT,1611628157,17f399ebebaaf03b969deea971f3320595398c54,/* magic */,code_comment,code|design-debt
INSERT,1611628157,17f399ebebaaf03b969deea971f3320595398c54,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
INSERT,1611628157,17f399ebebaaf03b969deea971f3320595398c54,//TODO change to meaningful things,code_comment,requirement-debt
DELETE,1611704334,19e6546a3d86169b75b122b2a4b4d1884133a4f3,// TODO - this stateme,code_comment,requirement-debt
INSERT,1611704334,19e6546a3d86169b75b122b2a4b4d1884133a4f3,// workaround initialization order issue so that ClientCnx can be created in this class,code_comment,code|design-debt
INSERT,1612807726,7fd32183a3840d1589c3bbfd6abbd173a0221aba,// Delete the leaves first and eventually get rid of the root,code_comment,code|design-debt
INSERT,1609986201,897203d909e89d7d31e06f97a3d90a709ef1a2f8,// prepare a custom placement policy and put it into the custom metadata. The isolation policy should decode,code_comment,code|design-debt
INSERT,1609323861,bddd030aa1a0b8b3b1767b337880baeb35662ffd,// prepare a custom placement policy and put it into the custom metadata. The isolation policy should decode,code_comment,code|design-debt
DELETE,1608553693,c1e9f9e80917b32cd40292f089cde842bfa12e59,// Nit: ,code_comment,code|design-debt
INSERT,1608106070,7b2d4c1cccc377607697dcc562b6c85eb447e0af,// path simpler and more efficient,code_comment,code|design-debt
DELETE,1608330050,99476d3196ffe5968d52d571b0be59f8eeeb8fea,// TODO,code_comment,code|design-debt
INSERT,1607606217,8ded6deca4580a23c5674e5529525f3a1a8f1c39,// TODO: the upload command has some problem when uploading packages,code_comment,code|design-debt
INSERT,1612191341,a1107ad9e008ef2f1f028feb95a893e74face08e,"/**
 * Copy from {@link io.prestosql.decoder.avro.AvroColumnDecoder} (presto-record-decoder-345)
 * with A little bit pulsar's extensions.
 * 1) support {@link io.prestosql.spi.type.TimestampType},{@link io.prestosql.spi.type.DateType}DATE,
 *  * {@link io.prestosql.spi.type.TimeType}.
 * 2) support {@link io.prestosql.spi.type.RealType}.
 */",code_comment,code|design-debt
INSERT,1612191341,a1107ad9e008ef2f1f028feb95a893e74face08e,//TODO: support decimal logicalType,code_comment,requirement-debt
INSERT,1612191341,a1107ad9e008ef2f1f028feb95a893e74face08e,//TODO: support timestamp_microseconds logicalType : https://github.com/prestosql/presto/issues/1284,code_comment,requirement-debt
DELETE,1607309961,e4255109ec0028255c4f41ed2828a2de67caebd1,// Nit: ,code_comment,code|design-debt
INSERT,1607309942,f43c1ee0da64070c1a1769e78bcafded4d6d61f3,// [TODO],code_comment,code|design-debt
INSERT,1607307924,349930b8160992a06c18ea2caa9443e6175452f8,// TODO: using provider to initialize the packages management service.,code_comment,code|design-debt
DELETE,1607067648,03f5b54841ea021553e1fc67c3a5b88ed3ac8d68,// Nit: ,code_comment,code|design-debt
INSERT,1606959520,d12486b9b012fc8264fa0d4cb7f4e3e148c30187,// TODO: Implementation,code_comment,requirement-debt
INSERT,1606959520,d12486b9b012fc8264fa0d4cb7f4e3e148c30187,// TODO,code_comment,code|design-debt
INSERT,1606266703,8b1579226a60afe912057743c35b2e86d88f97c4,"/**
 * Packages management provides an easier way to manage the packages.
 * We abstract the storage so we can store the packages anywhere. And we can store the
 * packages on the cloud to support an registry for all the pulsar package such as functions,
 * connectors, and other things.
 * Also, packages management have a version control that will make the function upgrade and
 * rollback more easier to track.
 */",code_comment,code|design-debt
DELETE,1605928351,8793963ccdd8ce778a681c139b5ab4fab7b820a2,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1605921738,68759ff405bca60343ddb8318cc10f3727981a5d,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1605584576,bd475c28d34ac9d28530c7b8a8efe66261b03ef6,// [TODO],code_comment,code|design-debt
INSERT,1605706535,72d6d28a7ca7a89f24e7397cefcd8a2a67a4252e,"/**
     * TODO: think about how to make this async
     */",code_comment,code|design-debt
DELETE,1605230968,0efebcd809a4d69ae3a4f42b4298a8b8e19e9498,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
DELETE,1605230968,0efebcd809a4d69ae3a4f42b4298a8b8e19e9498,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
INSERT,1605240110,3b2c8526a96fc90e948dbeb510e8400a628c749a,"/**
 * Annotation to inform users of how much to rely on a particular package,
 * class or method not changing over time.
 */",code_comment,code|design-debt
DELETE,1605230968,0efebcd809a4d69ae3a4f42b4298a8b8e19e9498,// TODO: expose this method to consumer interface when the transaction feature is completed,code_comment,code|design-debt
DELETE,1605230968,0efebcd809a4d69ae3a4f42b4298a8b8e19e9498,// TODO: expose this method to consumer interface when the transaction feature is completed,code_comment,code|design-debt
DELETE,1605230968,0efebcd809a4d69ae3a4f42b4298a8b8e19e9498,// TODO: add this method to the Producer interface,code_comment,requirement-debt
INSERT,1605046494,5c756ee1b8c7a4360520bde2c3f5596826d70fc6,// Note: we can only make this send async if the api returns a future to the connector so that errors can be handled by the connector,code_comment,code|design-debt
DELETE,1605076626,eb44a75a3b8931112c9b9cf1899664c3a8fc1fa8,"/**
 * A test that tests if {@link PulsarKafkaProducer} is thread safe.
 */",code_comment,test-debt
DELETE,1604881714,c43be243892adf7266428709721e57e3cecd19b6,// TODO make test run properly on Windows,code_comment,test-debt
DELETE,1604881714,c43be243892adf7266428709721e57e3cecd19b6,// we should also remove message from failedMessages but it will be eventually removed while emitting next,code_comment,code|design-debt
INSERT,1605302658,9aaa1ccefb3ee1c543e2f0daeb23094cf8773b6a,// TODO: this can be optimized with a batch operation.,code_comment,code|design-debt
INSERT,1605302658,9aaa1ccefb3ee1c543e2f0daeb23094cf8773b6a,// NOTE: this is a workaround until we bump bk version to 4.9.0,code_comment,code|design-debt
DELETE,1605302658,9aaa1ccefb3ee1c543e2f0daeb23094cf8773b6a,"/**
     * Update the given <i>key</i> to the provide <i>value</i>.
     *
     * <p>NOTE: the put operation might or might not be applied directly to the global state until
     * the state is flushed via {@link #flush()} at the completion of function execution.
     *
     * <p>The behavior of `PUT` is non-deterministic, if two function instances attempt to update
     * same key around the same time, there is no guarantee which update will be the final result.
     * That says, if you attempt to get amount via {@link #getAmount(String)}, increment the amount
     * based on the function computation logic, and update the computed amount back. one update will
     * overwrite the other update. For this case, you are encouraged to use {@link #incr(String, long)}
     * instead.
     *
     * @param key key to update.
     * @param value value to update; if null the key is deleted
     */",code_comment,code|design-debt
DELETE,1605302658,9aaa1ccefb3ee1c543e2f0daeb23094cf8773b6a,// TODO: this can be optimized with a batch operation.,code_comment,code|design-debt
DELETE,1607920017,26749a8e471d968bcdf0fcee3fe42814ed4b10d0,// TODO ,code_comment,code|design-debt
DELETE,1607920017,26749a8e471d968bcdf0fcee3fe42814ed4b10d0,// TODO: using p,code_comment,requirement-debt
INSERT,1603963817,c64b1c2b58a65a9fa848d7984cf21936b0e21426,// TODO: Delete all the ledgers of the SchemaStorage,code_comment,code|design-debt
INSERT,1607920017,26749a8e471d968bcdf0fcee3fe42814ed4b10d0,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
DELETE,1607920017,26749a8e471d968bcdf0fcee3fe42814ed4b10d0,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
DELETE,1604020882,91731743fc64712fabbc62e00c674c42586bb985,// TODO How to generate sequenceId for commit marker in partitioned topic,code_comment,requirement-debt
DELETE,1603963833,e54b2b31688ad50ec54756e208bba8bec7a96633,// TODO: Delete all the ledgers of the SchemaStorage,code_comment,code|design-debt
INSERT,1603878422,4dfbb2851181bec901617bcc392b70c20891dcf2,// TODO: the schema ledgers of a partitioned topic cannot be deleted completely now,code_comment,code|design-debt
INSERT,1603875318,9575cb0dc63775ab773577466237330c60cd212c,//TODO: after PR `[Transaction] TransactionBuffer Refactor #8347` commit,code_comment,code|design-debt
DELETE,1604020882,91731743fc64712fabbc62e00c674c42586bb985,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
DELETE,1604020882,91731743fc64712fabbc62e00c674c42586bb985,//TODO: after PR `[Transaction] TransactionBuffer Refactor #8347` commit,code_comment,code|design-debt
INSERT,1603855878,59559307b38f5e3210bae6fd71324ed2c81e1251,"/**
     * TODO: think about how to make this async
     */",code_comment,code|design-debt
DELETE,1603855878,59559307b38f5e3210bae6fd71324ed2c81e1251,"/**
     * TODO: think about how to make this async
     */",code_comment,code|design-debt
INSERT,1603813645,39affd6c31deeeb7c04ac66726d48ab860e7c757,//     and stuck is not caused by stuckConsumers,code_comment,code|design-debt
INSERT,1603813645,39affd6c31deeeb7c04ac66726d48ab860e7c757,// readMoreEntries should run regardless whether or not stuck is caused by stuckConsumers for avoid stopping dispatch.,code_comment,code|design-debt
INSERT,1603813645,39affd6c31deeeb7c04ac66726d48ab860e7c757,// the consumer was stuck,code_comment,code|design-debt
DELETE,1609893751,c12765a0530bcefca8e840d2f8f43383d7478778,/** Read a {@code bool} field value from the stream. */,code_comment,code|design-debt
DELETE,1609893751,c12765a0530bcefca8e840d2f8f43383d7478778,/** Read a 32-bit little-endian integer from the stream. */,code_comment,code|design-debt
DELETE,1609893751,c12765a0530bcefca8e840d2f8f43383d7478778,/** Read a 64-bit little-endian integer from the stream. */,code_comment,code|design-debt
INSERT,1603769671,99222492ceb8aac8fcdfa72f8abe3f424c928bdb,// TODO: the schema ledgers of a partitioned topic cannot be deleted completely now,code_comment,code|design-debt
INSERT,1603960117,292a9f9d7fafbcbeed7e292cc7de4afd5ff109df,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603960117,292a9f9d7fafbcbeed7e292cc7de4afd5ff109df,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603960117,292a9f9d7fafbcbeed7e292cc7de4afd5ff109df,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603960117,292a9f9d7fafbcbeed7e292cc7de4afd5ff109df,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603960117,292a9f9d7fafbcbeed7e292cc7de4afd5ff109df,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1601340617,0b041a2af8bdc0340d9d41b301b1ccc973056800,// TODO: Delete all the ledgers of the SchemaStorage,code_comment,code|design-debt
DELETE,1601475349,983266d480f77543a29a74ac1970280abd9f804b,// TODO: Delete all the ledgers of the SchemaStorage,code_comment,code|design-debt
INSERT,1600316538,609d3d4d74fc40db4f5ce67a41ed8cdddbf0d878,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
INSERT,1600316538,609d3d4d74fc40db4f5ce67a41ed8cdddbf0d878,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
INSERT,1600316538,609d3d4d74fc40db4f5ce67a41ed8cdddbf0d878,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
INSERT,1600316538,609d3d4d74fc40db4f5ce67a41ed8cdddbf0d878,// TODO flaky https://github.com/apache/pulsar/issues/8070,code_comment,test-debt
INSERT,1599057389,c7ac08b13e95cd7bbbcf551d2112e9131153bd83,//     and stuck is not caused by stuckConsumers,code_comment,code|design-debt
INSERT,1599057389,c7ac08b13e95cd7bbbcf551d2112e9131153bd83,// readMoreEntries should run regardless whether or not stuck is caused by stuckConsumers for avoid stopping dispatch.,code_comment,code|design-debt
INSERT,1599057389,c7ac08b13e95cd7bbbcf551d2112e9131153bd83,// the consumer was stuck,code_comment,code|design-debt
DELETE,1599057151,3ac98d8d9e70ed4305d8739638dbab6833eeabef,// TODO handl,code_comment,requirement-debt
DELETE,1598841280,b4b77be519408fcecff66dc2354b6843fd17c607,// TODO commitTxnOnSubscription,code_comment,requirement-debt
DELETE,1598841280,b4b77be519408fcecff66dc2354b6843fd17c607,// TODO abortTxnOnTopic,code_comment,requirement-debt
DELETE,1598841280,b4b77be519408fcecff66dc2354b6843fd17c607,// TODO abortTxnOnSubscription,code_comment,requirement-debt
INSERT,1597055847,ba5c5c72aad9bb3020ceaec6465077b5be3cd7a6,// TODO commitTxnOnSubscription,code_comment,requirement-debt
INSERT,1597055847,ba5c5c72aad9bb3020ceaec6465077b5be3cd7a6,// TODO abortTxnOnTopic,code_comment,requirement-debt
INSERT,1597055847,ba5c5c72aad9bb3020ceaec6465077b5be3cd7a6,// TODO abortTxnOnSubscription,code_comment,requirement-debt
INSERT,1596623561,069d72053774556e8873b0b81ad16319d4a7570c,// Flaky Test: https://github.com/apache/pulsar/issues/7750,code_comment,test-debt
INSERT,1596623561,069d72053774556e8873b0b81ad16319d4a7570c,// Flaky Test: https://github.com/apache/pulsar/issues/7750,code_comment,test-debt
INSERT,1596618472,9f687d3f67d7534cb9ee77ddd2c7d0f24d34d0b4,// Flaky Test: https://github.com/apache/pulsar/issues/7750,code_comment,test-debt
INSERT,1596618472,9f687d3f67d7534cb9ee77ddd2c7d0f24d34d0b4,// Flaky Test: https://github.com/apache/pulsar/issues/7750,code_comment,test-debt
DELETE,1596563566,e915b8e146f4cb735a316fcfebddf3162a149367,"/**
     * Returns a new NestableFieldValidator for a given class.
     *
     * @param cls     the Class the field should be a type of
     * @param notNull whether or not a value of null is valid
     * @return a NestableFieldValidator for that class
     */",code_comment,code|design-debt
INSERT,1596563566,e915b8e146f4cb735a316fcfebddf3162a149367,"/**
     * Returns a new NestableFieldValidator for a given class.
     *
     * @param cls     the Class the field should be a type of
     * @param notNull whether or not a value of null is valid
     * @return a NestableFieldValidator for that class
     */",code_comment,code|design-debt
INSERT,1595867799,76a45f4f85cb7902634caa28fde4a03aa31b386a,// TODO does not allow for redundant leading zeros,code_comment,code|design-debt
INSERT,1595867799,76a45f4f85cb7902634caa28fde4a03aa31b386a,// TODO ASN.1 DER encoded form,code_comment,requirement-debt
INSERT,1597055847,ba5c5c72aad9bb3020ceaec6465077b5be3cd7a6,// TODO handle abort operation,code_comment,requirement-debt
INSERT,1597055847,ba5c5c72aad9bb3020ceaec6465077b5be3cd7a6,// TODO How to generate sequenceId for commit marker in partitioned topic,code_comment,requirement-debt
INSERT,1603072584,d3a5233b2a0d469d7d2e676a3e23258e50ea1685,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603072584,d3a5233b2a0d469d7d2e676a3e23258e50ea1685,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603072584,d3a5233b2a0d469d7d2e676a3e23258e50ea1685,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603072584,d3a5233b2a0d469d7d2e676a3e23258e50ea1685,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1603072584,d3a5233b2a0d469d7d2e676a3e23258e50ea1685,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1594675913,8230775b27707aaef34c12a070006104391aa436,// TODO set producer to be in exclusive mode,code_comment,requirement-debt
INSERT,1591614911,bcfa7f00554b72314799b2d38a5815d5ee802e5e,// Use hasCursors instead of isEmpty because isEmpty does not take into account non-durable cursors,code_comment,code|design-debt
INSERT,1591593185,4beebb31a05afb0e310e7deed7ea1aac17b9521b,// TODO figure out how to handle errors from function worker service,code_comment,code|design-debt
INSERT,1591614911,bcfa7f00554b72314799b2d38a5815d5ee802e5e,// TODO in theory there shouldn't be any ledgers left if we are using readers.,code_comment,code|design-debt
DELETE,1591593185,4beebb31a05afb0e310e7deed7ea1aac17b9521b,// TODO,code_comment,code|design-debt
INSERT,1591315852,2f75d0263bf708574a3cef5aa0e47891e1d6a3f3,// The solution here is to move on and read next batch of messages which might hopefully contain,code_comment,code|design-debt
INSERT,1591315852,2f75d0263bf708574a3cef5aa0e47891e1d6a3f3,// If we're stuck on replay,code_comment,code|design-debt
INSERT,1591315852,2f75d0263bf708574a3cef5aa0e47891e1d6a3f3,// messages are routing to might be busy at the moment,code_comment,code|design-debt
INSERT,1591404659,eaf828d2243ce09f2e04a0eea2802214b593dabc,// TODO add mechanism to ,code_comment,requirement-debt
DELETE,1591404659,eaf828d2243ce09f2e04a0eea2802214b593dabc,// TODO: find a better way to handle bad request,code_comment,code|design-debt
DELETE,1591404659,eaf828d2243ce09f2e04a0eea2802214b593dabc,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
DELETE,1591240655,605868d64e018bc4fc075b4633423de0928e3d9a,//TODO: None key policy,code_comment,requirement-debt
INSERT,1591083595,870a637b4906862a611e418341dd926e21458f08,//TODO: check parent consumer here,code_comment,requirement-debt
DELETE,1591240655,605868d64e018bc4fc075b4633423de0928e3d9a,//TODO:,code_comment,code|design-debt
INSERT,1590816269,e451be300e5a0e718c444dd3a5b3a80a16734974,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
DELETE,1590816269,e451be300e5a0e718c444dd3a5b3a80a16734974,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
INSERT,1590687271,86e39a25e961d148a485be4a7c9fc186d5b8f8bc,// TODO: should flush for each batch. not wait for a time for acked all.,code_comment,code|design-debt
INSERT,1591059677,aa0fbb0d31d36f383054d93e3684de79879c430c,"/**
     * @serialField bits long[]
     *
     * The bits in this BitSet.  The ith bit is stored in bits[i/64] at
     * bit position i % 64 (where bit position 0 refers to the least
     * significant bit and 63 refers to the most significant bit).
     */",code_comment,code|design-debt
INSERT,1591059677,aa0fbb0d31d36f383054d93e3684de79879c430c,"/**
     * Returns a new bit set containing all the bits in the given long array.
     *
     * <p>More precisely,
     * <br>{@code BitSet.valueOf(longs).get(n) == ((longs[n/64] & (1L<<(n%64))) != 0)}
     * <br>for all {@code n < 64 * longs.length}.
     *
     * <p>This method is equivalent to
     * {@code BitSet.valueOf(LongBuffer.wrap(longs))}.
     *
     * @param longs a long array containing a little-endian representation
     *        of a sequence of bits to be used as the initial bits of the
     *        new bit set
     * @return a {@code BitSet} containing all the bits in the long array
     * @since 1.7
     */",code_comment,code|design-debt
INSERT,1591059677,aa0fbb0d31d36f383054d93e3684de79879c430c,"/**
     * Returns a new byte array containing all the bits in this bit set.
     *
     * <p>More precisely, if
     * <br>{@code byte[] bytes = s.toByteArray();}
     * <br>then {@code bytes.length == (s.length()+7)/8} and
     * <br>{@code s.get(n) == ((bytes[n/8] & (1<<(n%8))) != 0)}
     * <br>for all {@code n < 8 * bytes.length}.
     *
     * @return a byte array containing a little-endian representation
     *         of all the bits in this bit set
     * @since 1.7
     */",code_comment,code|design-debt
INSERT,1591059677,aa0fbb0d31d36f383054d93e3684de79879c430c,"/**
     * Returns a new long array containing all the bits in this bit set.
     *
     * <p>More precisely, if
     * <br>{@code long[] longs = s.toLongArray();}
     * <br>then {@code longs.length == (s.length()+63)/64} and
     * <br>{@code s.get(n) == ((longs[n/64] & (1L<<(n%64))) != 0)}
     * <br>for all {@code n < 64 * longs.length}.
     *
     * @return a long array containing a little-endian representation
     *         of all the bits in this bit set
     * @since 1.7
     */",code_comment,code|design-debt
INSERT,1591059677,aa0fbb0d31d36f383054d93e3684de79879c430c,"/**
     * Attempts to reduce internal storage used for the bits in this bit set.
     * Calling this method may, but is not required to, affect the value
     * returned by a subsequent call to the {@link #size()} method.
     */",code_comment,code|design-debt
INSERT,1591059677,aa0fbb0d31d36f383054d93e3684de79879c430c,// recalculateWordsInUse() is unnecessary,code_comment,code|design-debt
INSERT,1589835111,3633e241e5a700bb510d9a2a7907f568d434fb64,"/**
     * Returns a new NestableFieldValidator for a given class.
     *
     * @param cls     the Class the field should be a type of
     * @param notNull whether or not a value of null is valid
     * @return a NestableFieldValidator for that class
     */",code_comment,code|design-debt
DELETE,1589835231,218057bef0c3343af97dc8af8ff00a230707a023,"/**
     * Given a driver type(such as mysql), return its jdbc driver class name.
     * TODO: test and support more types, also add Driver in pom file.
     */",code_comment,code|design-debt
INSERT,1586748840,de57ddd572dbc74529a56fee68c6be37bd35cf7c,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
DELETE,1586748840,de57ddd572dbc74529a56fee68c6be37bd35cf7c,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
DELETE,1590687271,86e39a25e961d148a485be4a7c9fc186d5b8f8bc,// TODO: should flush for each batch. not wait for a time for acked all.,code_comment,code|design-debt
INSERT,1586747439,1f609ae81e771f5df816d3b1996e6417c7236b40,// TODO message validation,code_comment,requirement-debt
INSERT,1586747339,a64559dda98129fef96b83dce2cdf84fe51b2b49,// The long term storage region,code_comment,code|design-debt
INSERT,1586747339,a64559dda98129fef96b83dce2cdf84fe51b2b49,// The long term storage region,code_comment,code|design-debt
INSERT,1586074530,0a8243eeeb17cc1d1ca52ecbad6763ec4543b52c,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
DELETE,1586074530,0a8243eeeb17cc1d1ca52ecbad6763ec4543b52c,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
INSERT,1585391697,181e5e7f585846c31d8500a4de449ef58ffcf794,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
DELETE,1585391697,181e5e7f585846c31d8500a4de449ef58ffcf794,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
INSERT,1584766996,4f1bedc90115976b5918f870d3201848f8fde28c,// TODO message validation,code_comment,requirement-debt
INSERT,1586115162,216600360edf27b52874bea08990dae5a8e094b5,// FIXME: GenericJsonRecord will parse long to string or int,code_comment,code|design-debt
INSERT,1584766931,88dda60a480f4d875ebdbadc028929066affc514,// The long term storage region,code_comment,code|design-debt
INSERT,1584766931,88dda60a480f4d875ebdbadc028929066affc514,// The long term storage region,code_comment,code|design-debt
INSERT,1584940440,a7e210f15bf0b27546c8b22c04c1b05cda8f3ee8,// The long term storage region,code_comment,code|design-debt
INSERT,1584940440,a7e210f15bf0b27546c8b22c04c1b05cda8f3ee8,// The long term storage region,code_comment,code|design-debt
INSERT,1583950703,c8026097e00b9b080dc2fdf516815a99fc6a2d05,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1583633897,33b7383ca3ac284375a918604a7fb9e66e467e4a,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
DELETE,1583633897,33b7383ca3ac284375a918604a7fb9e66e467e4a,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
DELETE,1583633897,33b7383ca3ac284375a918604a7fb9e66e467e4a,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
DELETE,1583633897,33b7383ca3ac284375a918604a7fb9e66e467e4a,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1581298679,d3f6c55d0da05b9f440dc79d7bebb72c7fca67ee,// TODO message validation,code_comment,requirement-debt
INSERT,1581338803,fd03be595505433fc12f94b63f3d713610ccb2f7,// The long term storage region,code_comment,code|design-debt
INSERT,1581338803,fd03be595505433fc12f94b63f3d713610ccb2f7,// The long term storage region,code_comment,code|design-debt
INSERT,1581031656,92d71023ca2e5a5eb58f5954a5506ab5d4ccd22c,// Flaky Test: https://github.com/apache/pulsar/issues/6179,code_comment,test-debt
INSERT,1574214189,d4e953fb6bdfec12089e9f6d91f1809ad0c8387a,// TODO: Add support for Serialization and Deserialization,code_comment,requirement-debt
DELETE,1574150028,f24c1b0bfd9f35d8e36521e080275c86bd252083,// TODO: mak,code_comment,requirement-debt
DELETE,1574150028,f24c1b0bfd9f35d8e36521e080275c86bd252083,// TODO: mak,code_comment,requirement-debt
DELETE,1574150028,f24c1b0bfd9f35d8e36521e080275c86bd252083,// TODO: mak,code_comment,requirement-debt
INSERT,1574133073,4c98dba18166e7d434c0932da3ed6d19b6a5a526,"/**
 * Wrapper around {@code java.net.URL} to improve usability.
 */",code_comment,code|design-debt
DELETE,1573193735,951664cfb9c4b54125477823e8e140692fb71970,//TODO: Consumer selec,code_comment,requirement-debt
DELETE,1573193735,951664cfb9c4b54125477823e8e140692fb71970,//TODO: Consumer selec,code_comment,requirement-debt
INSERT,1574133073,4c98dba18166e7d434c0932da3ed6d19b6a5a526,"/**
 * This class is aimed at simplifying work with {@code CompletableFuture}.
 */",code_comment,code|design-debt
DELETE,1572346355,74ec9202117854bfd04ef44aa4111cf9a59ffc08,// TODO(yittg): use same hash function with broker,code_comment,requirement-debt
INSERT,1571987131,13e35f7ff4c36e4c12905fcb55c83d97bc04cbf9,// TODO: same parameterized type `T` with producer for the moment,code_comment,code|design-debt
DELETE,1572923227,669b91635baa4be2a167651b4df5da204a85e871,// TODO: same parameterized type `T` with producer for the moment,code_comment,code|design-debt
INSERT,1570607372,db15d3213cc58499457faadec5fd55fcc9a6851a,"/**
 * Metadata store client interface.
 *
 * NOTE: This API is still evolving and will be refactored as needed until all the metadata usages are converted into
 * using it.
 */",code_comment,code|design-debt
INSERT,1569641590,87ccdb09731a9ace997c5da57122988bba92041a,// TODO: support decoding KMS data here... should be fairly simple,code_comment,requirement-debt
INSERT,1568895952,ac13009c5990d99fc935f7b83ad10d4c79772990,"/**
     * Check if the message read able length length is a valid object for this schema.
     *
     * <p>The implementation can choose what its most efficient approach to validate the schema.
     * If the implementation doesn't provide it, it will attempt to use {@link #decode(ByteBuf)}
     * to see if this schema can decode this message or not as a validation mechanism to verify
     * the bytes.
     *
     * @param byteBuf the messages to verify
     * @return true if it is a valid message
     * @throws SchemaSerializationException if it is not a valid message
     */",code_comment,code|design-debt
INSERT,1571987131,13e35f7ff4c36e4c12905fcb55c83d97bc04cbf9,// TODO(yittg): use same hash function with broker,code_comment,requirement-debt
INSERT,1567174221,d9c0a1054310e9428007d016895d4174b0d20f89,"/**
 * Wrapper around {@code java.net.URL} to improve usability.
 */",code_comment,code|design-debt
INSERT,1566979345,cc746322d51cea14b04092370bcebf695721fe70,"/**
 * A test that tests if {@link PulsarKafkaProducer} is thread safe.
 */",code_comment,test-debt
INSERT,1566977273,52af202032b47f12bb9092e305853536962932da,// replace any asterisks i.e. wildcards as they don't work with url classloader,code_comment,code|design-debt
INSERT,1566962024,3ef41c454fc3f4b5b798d2ccee31977e09a99c37,"/**
     * TODO: think about how to make this async
     */",code_comment,code|design-debt
INSERT,1567174221,d9c0a1054310e9428007d016895d4174b0d20f89,"/**
 * This class is aimed at simplifying work with {@code CompletableFuture}.
 */",code_comment,code|design-debt
DELETE,1566909728,75683678ffddbb5ff57a8ceabee9de3f94cef53d,// TODO bug to fix involving submitting a NAR via URI file:///tmp/pulsar-io-twitter-0.0.1.nar,code_comment,code|design-debt
INSERT,1566113977,93d95c74890b69ef79dce280d4e407f3fc9cdfb8,// TODO: Add support for Serialization and Deserialization,code_comment,requirement-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: expose this method to consumer interface when the transaction feature is completed,code_comment,code|design-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: expose this method to consumer interface when the transaction feature is completed,code_comment,code|design-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: handle transactional acknowledgements.,code_comment,requirement-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: add this method to the Producer interface,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-g,code_comment,requirement-debt
DELETE,1566921116,786e2b955ad266f6a8c6380b69f78744e20d457a,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: talk to TC to begin a transaction,code_comment,requirement-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: we need to issue the request to TC to register the produced topic,code_comment,requirement-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,// TODO: we need to issue the request to TC to register the acked topic,code_comment,code|design-debt
INSERT,1565791460,c5ba52983fee994de61984aae7d1757e9b738caf,"/**
     * It tests that message expiry doesn't get stuck if it can't read deleted ledger's entry.
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1566147647,1691cc822606a4f5815175888e746dbdbcccb6e2,"/**
 * Example to use Pulsar transactions.
 *
 * <p>TODO: add an example about how to use the Pulsar transaction API.
 */",code_comment,requirement-debt
INSERT,1563933098,0362944f6f7d610dd5b54d3724958e0bb9cb7abc,"/**
 * A test that tests if {@link PulsarKafkaProducer} is thread safe.
 */",code_comment,test-debt
INSERT,1564367072,91c4254cae3be91774220c9fea145d3e433b6a01,"/**
     * TODO: think about how to make this async
     */",code_comment,code|design-debt
DELETE,1563860448,2cc34afc0320e66a996b9517d6729a495563fc54,// TODO: mak,code_comment,requirement-debt
DELETE,1563860448,2cc34afc0320e66a996b9517d6729a495563fc54,// TODO: mak,code_comment,requirement-debt
DELETE,1563860448,2cc34afc0320e66a996b9517d6729a495563fc54,// TODO: mak,code_comment,requirement-debt
INSERT,1562993924,6ff1bbae0fe230eb72d62574d7685a745f884416,// replace any asterisks i.e. wildcards as they don't work with url classloader,code_comment,code|design-debt
DELETE,1562189483,e8025d50c5d2cf0a632ad1573308b676d0607923,// TODO bug to fix involving submitting a NAR via URI file:///tmp/pulsar-io-twitter-0.0.1.nar,code_comment,code|design-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-g,code_comment,requirement-debt
DELETE,1562739427,108780c79cc9ec71f4ff8ee3a7231766ef545894,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1561008640,82d9e7160734f0e3b666085b00946e655d4eccf8,// Using Android's base64 libraries. This can be replaced with any base64 library.,code_comment,code|design-debt
INSERT,1559811936,630914901477357af9a47d687a0b43a7a7b7fa37,//TODO: Consumer selector Pluggable,code_comment,code|design-debt
INSERT,1559811936,630914901477357af9a47d687a0b43a7a7b7fa37,//TODO: None key policy,code_comment,requirement-debt
INSERT,1559715743,f56d30ddf40ef9eec172db1c0f78cc2143151bdb,// TODO bug to fix involving submitting a NAR via URI file:///tmp/pulsar-io-twitter-0.0.1.nar,code_comment,code|design-debt
INSERT,1559715743,f56d30ddf40ef9eec172db1c0f78cc2143151bdb,// TODO: correctly implement function version and id,code_comment,requirement-debt
INSERT,1559715743,f56d30ddf40ef9eec172db1c0f78cc2143151bdb,// TODO: correctly implement function version and id,code_comment,requirement-debt
DELETE,1559715743,f56d30ddf40ef9eec172db1c0f78cc2143151bdb,// TODO: correctly implement function version and id,code_comment,requirement-debt
INSERT,1559152478,ba24d73b5f77c42f832cd9d2720dc0aba388f909,// very short delay,code_comment,code|design-debt
DELETE,1558873084,e17506d3ea2088b221d33dfd0ac9666d2ae4313a,"/**
 * Provide a zookeeper client to handle session expire.
 *
 * Note this is copied from BK ZooKeeperClient class. The only addition here is that it allows to specify read-only mode
 * which we use when connecting to global ZK.
 *
 * TODO: Remove this class once BK-4.8 is released to include read-only in ZooKeeperClient.
 */",code_comment,code|design-debt
DELETE,1558873084,e17506d3ea2088b221d33dfd0ac9666d2ae4313a,"/**
 * Provide a mechanism to perform an operation on ZooKeeper that is safe on disconnections
 * and recoverable errors.
 *
 * TODO: Remove this class once BK-4.8 is released to include read-only in ZooKeeperClient.
 */",code_comment,code|design-debt
INSERT,1558739163,5d688eec2596a784254e0580e865fbf287963915,// Using Android's base64 libraries. This can be replaced with any base64 library.,code_comment,code|design-debt
INSERT,1558680889,009bc292e487089f8f86b654de6718f899f1a8fd,"/**
     * Any clean up could be handled here.
     */",code_comment,code|design-debt
DELETE,1558680889,009bc292e487089f8f86b654de6718f899f1a8fd,"/**
     * Any clean up could be handled here.
     */",code_comment,code|design-debt
INSERT,1558932496,aa40ad6ddeb4208d439df2c9080fc73b1e6ffa3b,// TODO eventually remove this,code_comment,code|design-debt
INSERT,1558932496,aa40ad6ddeb4208d439df2c9080fc73b1e6ffa3b,// TODO ev,code_comment,requirement-debt
INSERT,1558932496,aa40ad6ddeb4208d439df2c9080fc73b1e6ffa3b,// TODO eventually remove this,code_comment,code|design-debt
DELETE,1556198920,2777b0e4bd6d1a70b1343b2834c2630e6a7e1e5d,// TODO: for http support. github issue #3653 {@link: https://github.com/apache/pulsar/issues/3653},code_comment,code|design-debt
INSERT,1555919839,2373ca36fa0d84103c0feed357da1fbb52119d05,//TODO: Consumer selector Pluggable,code_comment,code|design-debt
INSERT,1555919839,2373ca36fa0d84103c0feed357da1fbb52119d05,//TODO: None key policy,code_comment,requirement-debt
DELETE,1556198920,2777b0e4bd6d1a70b1343b2834c2630e6a7e1e5d,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
DELETE,1556198920,2777b0e4bd6d1a70b1343b2834c2630e6a7e1e5d,//TODO: for sasl proxy.,code_comment,requirement-debt
DELETE,1556198920,2777b0e4bd6d1a70b1343b2834c2630e6a7e1e5d,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
DELETE,1556198920,2777b0e4bd6d1a70b1343b2834c2630e6a7e1e5d,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
DELETE,1555372869,76aacd3c3477342d9cb6709098cd4a2724b78f77,// TODO: improve the user metadata in subsequent changes,code_comment,code|design-debt
INSERT,1554775786,12de91fb231c3e609137de60bbdbc29c5c2f2e13,// we should also remove message from failedMessages but it will be eventually removed while emitting next,code_comment,code|design-debt
DELETE,1554821798,66a1b1b61a23fecbfbc158556434e04bd8f1c7fc,//TODO: for sasl proxy.,code_comment,requirement-debt
DELETE,1554706496,c706d45c56b90eb4631e3cf0c0b23b3101291436,// This method (and it's only call above in the ctor) may be removed when SemVer accepts null patch versions,code_comment,code|design-debt
INSERT,1554706496,c706d45c56b90eb4631e3cf0c0b23b3101291436,// This method (and it's only call above in the ctor) may be removed when SemVer accepts null patch versions,code_comment,code|design-debt
INSERT,1557105198,42c3bf94920f1d177a2403e06650500509f94aaa,// Nit: at present,code_comment,code|design-debt
DELETE,1556198920,2777b0e4bd6d1a70b1343b2834c2630e6a7e1e5d,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
INSERT,1554137556,6f70043183e2c3e7259ba515266a97caa711b321,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
INSERT,1554137556,6f70043183e2c3e7259ba515266a97caa711b321,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
DELETE,1554137556,6f70043183e2c3e7259ba515266a97caa711b321,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
DELETE,1554137556,6f70043183e2c3e7259ba515266a97caa711b321,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
INSERT,1553886017,4959f51fb93d5c97033ebbbf6e34f7758f2de94a,// We really don't know if we should use nar class loader or regular classloader,code_comment,code|design-debt
INSERT,1553886017,4959f51fb93d5c97033ebbbf6e34f7758f2de94a,// We use typeArg and classLoader as arguments for lambda functions that require them to be final,code_comment,code|design-debt
INSERT,1553886017,4959f51fb93d5c97033ebbbf6e34f7758f2de94a,// We really don't know if we should use nar class loader or regular classloader,code_comment,code|design-debt
INSERT,1553886017,4959f51fb93d5c97033ebbbf6e34f7758f2de94a,// We use typeArg and classLoader as arguments for lambda functions that require them to be final,code_comment,code|design-debt
INSERT,1553883071,f458ec34f03196d518006910e374e3b623c48215,"/**
     * The documentation of this field.
     *
     * @param doc documentation
     * @return field schema builder
     */",code_comment,documentation-debt
INSERT,1553883071,f458ec34f03196d518006910e374e3b623c48215,"/**
     * Add doc to the record schema.
     *
     * @param doc documentation
     * @return field schema builder
     */",code_comment,documentation-debt
INSERT,1553833357,f3095d8697ccbe62e4676f94e671047a82bebe40,// We really don't know if we should use nar class loader or regular classloader,code_comment,code|design-debt
INSERT,1553833357,f3095d8697ccbe62e4676f94e671047a82bebe40,// We use typeArg and classLoader as arguments for lambda functions that require them to be final,code_comment,code|design-debt
INSERT,1553833357,f3095d8697ccbe62e4676f94e671047a82bebe40,// We really don't know if we should use nar class loader or regular classloader,code_comment,code|design-debt
INSERT,1553833357,f3095d8697ccbe62e4676f94e671047a82bebe40,// We use typeArg and classLoader as arguments for lambda functions that require them to be final,code_comment,code|design-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,// TODO: for http support. github issue #3653 {@link: https://github.com/apache/pulsar/issues/3653},code_comment,code|design-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,//TODO: for sasl proxy.,code_comment,requirement-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,//TODO: for sasl proxy.,code_comment,requirement-debt
INSERT,1553008936,7064285c31df1a0352d2d4af84801c312b18c1f7,// TODO: isSaslAuthentication used to bypass web resource check.,code_comment,code|design-debt
DELETE,1554407302,0b92463ff612c55256408cc7b2eed73ffefd2739,// TODO in the ,code_comment,requirement-debt
DELETE,1554407302,0b92463ff612c55256408cc7b2eed73ffefd2739,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1552043216,4ce8b32f8425c7af559acf766038048655199444,"/**
     * Represents a function that accepts two long arguments and produces a result. This is the two-arity specialization
     * of {@link Function}.
     *
     * @param <T>
     *            the type of the result of the function
     *
     */",code_comment,code|design-debt
INSERT,1552023770,32a244d951dc57d3b3ea65865ec0bbc7bd1bbba2,// own the bundle. That can cause data-loss for TODO: git-issue,code_comment,code|design-debt
INSERT,1551691042,37a2fda6c9512076ffa79dcc897d8bd9fe88d288,"/*
     * Some channels will be reused across re-configurations. To handle this,
     * we store all the names of current channels, perform the reconfiguration,
     * and then if a channel was not used, we delete our reference to it.
     * This supports the scenario where you enable channel ch0"" then remove it",code_comment,code|design-debt
INSERT,1551182602,d46474b266a46494214cfd8bb3e58cef41350068,"/**
     * The documentation of this field.
     *
     * @param doc documentation
     * @return field schema builder
     */",code_comment,documentation-debt
INSERT,1551182602,d46474b266a46494214cfd8bb3e58cef41350068,"/**
     * Add doc to the record schema.
     *
     * @param doc documentation
     * @return field schema builder
     */",code_comment,documentation-debt
DELETE,1553487594,1921bd98f20991248892717bbcfc102545e7c49c,// Case 3: TODO: Once automatic cleanup is implemented,code_comment,requirement-debt
DELETE,1550015816,3aeafc185603a76515de1a904068806dd872a740,"/**
     * Any clean up could be handled here.
     */",code_comment,code|design-debt
INSERT,1550015816,3aeafc185603a76515de1a904068806dd872a740,"/**
     * Any clean up could be handled here.
     */",code_comment,code|design-debt
DELETE,1549805629,1b44aaa78743f8dce68ffe31c25619123c9a5a5f,// workaround mock not closing metadata correctly,code_comment,code|design-debt
DELETE,1549559295,c55bd95ed4aed2789e0b1567a34541d96023ef24,// TODO: set correct ,code_comment,requirement-debt
INSERT,1549559295,c55bd95ed4aed2789e0b1567a34541d96023ef24,// TODO: set co,code_comment,requirement-debt
INSERT,1547488463,034f6ba04e9c48abec1517668cb4fa46efdf02bc,// TODO could be a race condition here if functionMetaDataTailer somehow does not receive the functionMeta prior to the functionAssignmentsTailer gets the assignment for the function.,code_comment,code|design-debt
INSERT,1547047817,918dc6842d09bc07478adb5fb099aa43f1d40f1b,"/**
     * Return the encryption key corresponding to the key name in the argument
     * <p>
     * This method should be implemented to return the EncryptionKeyInfo. This method will be called at the time of
     * producer creation as well as consumer receiving messages. Hence, application should not make any blocking calls
     * within the implementation.
     * <p>
     *
     * @param keyName
     *            Unique name to identify the key
     * @param metadata
     *            Additional information needed to identify the key
     * @return EncryptionKeyInfo with details about the public key
     */",code_comment,code|design-debt
INSERT,1547231376,210d828419f8247e6999051c66ee99be544a6221,// TODO: Could use user or tweet ID as key here,code_comment,code|design-debt
INSERT,1547047817,918dc6842d09bc07478adb5fb099aa43f1d40f1b,"/**
     * Check if the message is a valid object for this schema.
     *
     * <p>The implementation can choose what its most efficient approach to validate the schema.
     * If the implementation doesn't provide it, it will attempt to use {@link #decode(byte[])}
     * to see if this schema can decode this message or not as a validation mechanism to verify
     * the bytes.
     *
     * @param message the messages to verify
     * @return true if it is a valid message
     * @throws SchemaSerializationException if it is not a valid message
     */",code_comment,code|design-debt
DELETE,1547047817,918dc6842d09bc07478adb5fb099aa43f1d40f1b,"/**
     * Return the encryption key corresponding to the key name in the argument
     * <p>
     * This method should be implemented to return the EncryptionKeyInfo. This method will be called at the time of
     * producer creation as well as consumer receiving messages. Hence, application should not make any blocking calls
     * within the implementation.
     * <p>
     *
     * @param keyName
     *            Unique name to identify the key
     * @param metadata
     *            Additional information needed to identify the key
     * @return EncryptionKeyInfo with details about the public key
     */",code_comment,code|design-debt
DELETE,1547047817,918dc6842d09bc07478adb5fb099aa43f1d40f1b,"/**
     * Check if the message is a valid object for this schema.
     *
     * <p>The implementation can choose what its most efficient approach to validate the schema.
     * If the implementation doesn't provide it, it will attempt to use {@link #decode(byte[])}
     * to see if this schema can decode this message or not as a validation mechanism to verify
     * the bytes.
     *
     * @param message the messages to verify
     * @return true if it is a valid message
     * @throws SchemaSerializationException if it is not a valid message
     */",code_comment,code|design-debt
DELETE,1544924255,2ccf7ff2a6c16f1b16342aa4529d5197195bad9d,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1544924255,2ccf7ff2a6c16f1b16342aa4529d5197195bad9d,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1544924255,2ccf7ff2a6c16f1b16342aa4529d5197195bad9d,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1544826795,5dd4b6e7bff6647926789fb9d71d91f11c299fdb,"/**
     * Check if the message is a valid object for this schema.
     *
     * <p>The implementation can choose what its most efficient approach to validate the schema.
     * If the implementation doesn't provide it, it will attempt to use {@link #decode(byte[])}
     * to see if this schema can decode this message or not as a validation mechanism to verify
     * the bytes.
     *
     * @param message the messages to verify
     * @return true if it is a valid message
     * @throws SchemaSerializationException if it is not a valid message
     */",code_comment,code|design-debt
INSERT,1544826795,5dd4b6e7bff6647926789fb9d71d91f11c299fdb,"/**
     * Check if the message is a valid object for this schema.
     *
     * <p>The implementation can choose what its most efficient approach to validate the schema.
     * If the implementation doesn't provide it, it will attempt to use {@link #decode(byte[])}
     * to see if this schema can decode this message or not as a validation mechanism to verify
     * the bytes.
     *
     * @param message the messages to verify
     * @return true if it is a valid message
     * @throws SchemaSerializationException if it is not a valid message
     */",code_comment,code|design-debt
INSERT,1544675845,24cc4bbb0a0b488ef23ede3ba5e914b96d188a5a,// To work around this issue,code_comment,code|design-debt
DELETE,1544675845,24cc4bbb0a0b488ef23ede3ba5e914b96d188a5a,// To work around this issue,code_comment,code|design-debt
INSERT,1544468952,bddfa2a5a233f17b93cb756b289b40d587321e4c,"/**
 * View of a message that exposes the internal direct-memory buffer for more efficient processing.
 *
 * The message needs to be released when the processing is done.
 */",code_comment,code|design-debt
INSERT,1543882909,8ea5c142ea4f1bc6d39c22baf4ba352afa39b07c,"/**
     * Documentation of the property.
     *
     * @return documentation of the property.
     */",code_comment,documentation-debt
DELETE,1543809986,d4794bd5e100a946780ff562bf45ef44a7dc5281,// TODO refactor the code for externally managed.,code_comment,code|design-debt
INSERT,1543809986,d4794bd5e100a946780ff562bf45ef44a7dc5281,// TODO refactor the code for externally managed.,code_comment,code|design-debt
INSERT,1543809986,d4794bd5e100a946780ff562bf45ef44a7dc5281,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1543809986,d4794bd5e100a946780ff562bf45ef44a7dc5281,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
DELETE,1543809986,d4794bd5e100a946780ff562bf45ef44a7dc5281,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
DELETE,1543809986,d4794bd5e100a946780ff562bf45ef44a7dc5281,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO depecreate getstatus,code_comment,requirement-debt
INSERT,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO depecreate getstatus,code_comment,requirement-debt
INSERT,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO depecreate getstatus,code_comment,requirement-debt
INSERT,1543358941,8d241022724fff411f6841ff84b970f01d5dbd18,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1543174920,9f8997761da7ca4ce2e3b2abde2998069de2c35f,// NOTE: this is a workaround until we bump bk version to 4.9.0,code_comment,code|design-debt
DELETE,1543358941,8d241022724fff411f6841ff84b970f01d5dbd18,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
DELETE,1542888324,4253de718cd1b1519a896995278cb9976ee2c0df,// TODO: this url should be fetched along with bookkeeper location from pulsar admin,code_comment,code|design-debt
DELETE,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO:-Currently The source/sink/functions all sh,code_comment,requirement-debt
DELETE,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
DELETE,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1543608550,015e2e5174a1e38167deb47411e598c73d424a19,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1541872024,c1c699f6b544c20548d021c4bd3d786bec2505d8,// hopefully this is long enough,code_comment,code|design-debt
INSERT,1541872024,c1c699f6b544c20548d021c4bd3d786bec2505d8,// hopefully this is long enough,code_comment,code|design-debt
INSERT,1542827289,859c914a7a3f3ddb9f89c62eba3c048039bd852a,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1542432522,23c5505d904a5a74184f68a0b4deb5cf9851195d,// TODO refactor the code for externally managed.,code_comment,code|design-debt
DELETE,1545301349,9c3f2a77bb352c073d2dc36094b42dc3c9918c3b,// Delay between a ledger being successfully offloaded to long term storage,code_comment,code|design-debt
DELETE,1545301349,9c3f2a77bb352c073d2dc36094b42dc3c9918c3b,// corrupted at bookkeeper and managed-cursor is stuck at that ledger.,code_comment,code|design-debt
DELETE,1541034175,40e6213bf8939752fe2c20e7818d133cdae56cd4,// TODO: correctly implement function version and id,code_comment,requirement-debt
INSERT,1541401936,5de1ef7009057f82c4adfc687d360c8c9a15ddd3,// TODO: ,code_comment,code|design-debt
INSERT,1541034175,40e6213bf8939752fe2c20e7818d133cdae56cd4,// TODO: correctly implement function version and id,code_comment,requirement-debt
INSERT,1539369583,966c0545e8743bce756a710fd82c5274c07ff051,// get around fact that field is private and topic can be persisent or non-persistent,code_comment,code|design-debt
INSERT,1539925167,1386e6dfdba16bb1ee0a3c7649cb7daed50a5d8c,// TODO:-Currently The source/sink/functions all share this backend. In the future it might make sense,code_comment,requirement-debt
INSERT,1539369583,966c0545e8743bce756a710fd82c5274c07ff051,"/**
 * Strategy to use when checking an auto-updated schema for compatibility to the current schema.
 */",code_comment,code|design-debt
INSERT,1538612597,474645f7b4771e3316ca183ed0a813dd98a25758,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
DELETE,1539801693,a7310ee7e62f9d70d41ebc21bd196cbba259eeb0,"/*
    TODO:- Needs to be moved to a source/sink specific unittest
    @Test
    public void testRegisterFunctionFileUrlWithInValidSinkClass() throws IOException {
        Configurator.setRootLevel(Level.DEBUG);

        String fileLocation = FutureUtil.class.getProtectionDomain().getCodeSource().getLocation().getPath();
        String filePackageUrl = file://"" + fileLocation;",code_comment,code|design-debt
DELETE,1540231960,32d1dafdb4f77bf241c8786d067734a4bebdd4cf,"/**
     * Returns a new NestableFieldValidator for a given class.
     *
     * @param cls     the Class the field should be a type of
     * @param notNull whether or not a value of null is valid
     * @return a NestableFieldValidator for that class
     */",code_comment,code|design-debt
INSERT,1538419733,d0858065b586344cb7b1b8a5a32e694bc6c004f4,"/*
        TODO:- Figure out the metrics collection later.
        templateMetaData.annotations(getPrometheusAnnotations());
        */",code_comment,code|design-debt
INSERT,1538419733,d0858065b586344cb7b1b8a5a32e694bc6c004f4,// TODO:- Find a platform independent way of controlling memory for a python application,code_comment,requirement-debt
DELETE,1536813159,73645631849ffce2f144f23d861763fe52a25af9,// TODO: turn to getSchema from SinkContext.getTopicSchema.getSchema(inputTopic),code_comment,code|design-debt
DELETE,1536863377,e5a7b532ffbf1d8813fc31403162fe3c17e937f5,// TODO: implement authentication/autho,code_comment,requirement-debt
INSERT,1536257193,261eab12789c8c06b64cb7a5688ab0c867d609b1,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1536257193,261eab12789c8c06b64cb7a5688ab0c867d609b1,// TODO How do I get the core-site.xml,code_comment,requirement-debt
INSERT,1536257193,261eab12789c8c06b64cb7a5688ab0c867d609b1,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1536092442,79ac46a6ae50e48bed4ccb680d1f7945611f0565,// TODO: turn to getSchema from SinkContext.getTopicSchema.getSchema(inputTopic),code_comment,code|design-debt
INSERT,1536092442,79ac46a6ae50e48bed4ccb680d1f7945611f0565,"/**
     * Given a driver type(such as mysql), return its jdbc driver class name.
     * TODO: test and support more types, also add Driver in pom file.
     */",code_comment,code|design-debt
INSERT,1535489585,f36f375268ff876f46cff0ed8331b799ff7139b6,// TODO find a better estimate of class size,code_comment,code|design-debt
DELETE,1535529149,9c1503b67eb122d2801fd9a9b5a94e5f7780efc0,// TODO:,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1534832513,59801695a9808c4c6574b421f90b0d91a9d712ad,// TODO: improve this to load ledger offloader by driver name recorded in metadata,code_comment,code|design-debt
INSERT,1534832513,59801695a9808c4c6574b421f90b0d91a9d712ad,/* TODO: use driver name to identify offloader */,code_comment,code|design-debt
DELETE,1535694261,ce74b11b563462d18ae0068cf2d9d9ef0271165a,// TODO: m,code_comment,requirement-debt
INSERT,1535694261,ce74b11b563462d18ae0068cf2d9d9ef0271165a,// TODO: m,code_comment,requirement-debt
INSERT,1535133521,e9fe7e317576ae6f7a12679f0afc31f2e2782ad6,// TODO suppor,code_comment,requirement-debt
INSERT,1535439411,b283ebd3e51aa86f6b9f0a6607f430996f0032f7,// TODO: m,code_comment,requirement-debt
INSERT,1534520297,83d33d4a7ff9523be7892324bdc322ed6480ad38,// TODO: will make this configurable when switching to use NAR loader to load offloaders,code_comment,code|design-debt
INSERT,1534482261,e1238acd8150115ce48e1e53eb600106ebe799d2,/* magic */,code_comment,code|design-debt
INSERT,1534482261,e1238acd8150115ce48e1e53eb600106ebe799d2,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
DELETE,1534482261,e1238acd8150115ce48e1e53eb600106ebe799d2,/* magic */,code_comment,code|design-debt
DELETE,1534482261,e1238acd8150115ce48e1e53eb600106ebe799d2,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1534482261,e1238acd8150115ce48e1e53eb600106ebe799d2,// workaround mock not closing metadata correctly,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
DELETE,1534482261,e1238acd8150115ce48e1e53eb600106ebe799d2,// workaround mock not closing metadata correctly,code_comment,code|design-debt
INSERT,1534225751,7bcd8934a0a53ab7a62b3c9d77fbdec94ab497d2,// TODO: create and use pulsar-admin to support authorization and authentication and manage redirect,code_comment,requirement-debt
INSERT,1534269675,870e459fac80909bf9ad177b67d329b476c79486,// TODO: improve the user metadata in subsequent changes,code_comment,code|design-debt
DELETE,1534269675,870e459fac80909bf9ad177b67d329b476c79486,/* magic */,code_comment,code|design-debt
DELETE,1534269675,870e459fac80909bf9ad177b67d329b476c79486,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
DELETE,1534269675,870e459fac80909bf9ad177b67d329b476c79486,// workaround mock not closing metadata correctly,code_comment,code|design-debt
INSERT,1537309332,49fc5e508a996cfe59949effbcaf0abfa46028ce,//TODO: delete this assignment,code_comment,code|design-debt
INSERT,1534269675,870e459fac80909bf9ad177b67d329b476c79486,/* magic */,code_comment,code|design-debt
INSERT,1534269675,870e459fac80909bf9ad177b67d329b476c79486,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
INSERT,1534269675,870e459fac80909bf9ad177b67d329b476c79486,// workaround mock not closing metadata correctly,code_comment,code|design-debt
INSERT,1533576566,461647a2b7943787883760a810f7cecda88128ec,// TODO support nested fields,code_comment,requirement-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1535066901,225eeb70ed6e2f88783997a891fec642d1b7baac,// merge deprecated args with new args,code_comment,code|design-debt
DELETE,1532413407,6b2ce6ba272384d08a410c2492525c6bc96e1b00,"/**
 * A tester for testing cassandra sink.
 */",code_comment,test-debt
DELETE,1534874412,7bff81e385b11469b8d0e76d311af5c314fa16e5,// TODO: When we switch to schema for functions,code_comment,code|design-debt
DELETE,1532041696,6142a4c5b03f5a4e26a774fd57ab458844255786,//TODO remove topic argument,code_comment,code|design-debt
INSERT,1532064425,3c8d13c0546b7fed0100d499bd1841f7ce2a127e,// workaround mock not closing metadata correctly,code_comment,code|design-debt
INSERT,1532413407,6b2ce6ba272384d08a410c2492525c6bc96e1b00,"/**
 * A tester for testing cassandra sink.
 */",code_comment,test-debt
DELETE,1532064425,3c8d13c0546b7fed0100d499bd1841f7ce2a127e,// workaround mock not closing metadata correctly,code_comment,code|design-debt
INSERT,1531719402,555dd57a424956adf1d5a3e46b927eed8660a1e9,"/**
 * A tester for testing cassandra sink.
 */",code_comment,test-debt
INSERT,1531522447,ea6eae7d22e94fd2a998813ec9b2af42d9035fc0,// TODO:,code_comment,code|design-debt
INSERT,1531522447,ea6eae7d22e94fd2a998813ec9b2af42d9035fc0,// TODO: Could use user or tweet ID as key here,code_comment,code|design-debt
INSERT,1533245619,794b0391f47e5eaa1e1a83dd1a6451ab84fa6d76,// merge deprecated args with new args,code_comment,code|design-debt
INSERT,1531003799,2bf2568eec66a61a62cb2a5bc752ca425d2a97e1,"/**
 * A utility class containing a few useful static methods to do typical IO
 * operations.
 *
 */",code_comment,code|design-debt
INSERT,1531003799,2bf2568eec66a61a62cb2a5bc752ca425d2a97e1,"/**
     * Deletes the given file. If the given file exists but could not be deleted
     * this will be printed as a warning to the given logger
     *
     * @param file to delete
     * @param logger to notify
     * @param attempts indicates how many times an attempt to delete should be
     * made
     * @return true if given file no longer exists
     */",code_comment,code|design-debt
INSERT,1531003799,2bf2568eec66a61a62cb2a5bc752ca425d2a97e1,"/**
     * Unpacks the NAR to the specified directory. Creates a checksum file that used to determine if future expansion is
     * necessary.
     *
     * @param workingDirectory
     *            the root directory to which the NAR should be unpacked.
     * @throws IOException
     *             if the NAR could not be unpacked.
     */",code_comment,code|design-debt
INSERT,1530552329,7a10d938a286a3d25114ee59f5cee63e1a57a795,/* magic */,code_comment,code|design-debt
INSERT,1530552329,7a10d938a286a3d25114ee59f5cee63e1a57a795,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
DELETE,1530552329,7a10d938a286a3d25114ee59f5cee63e1a57a795,/* magic */,code_comment,code|design-debt
DELETE,1530552329,7a10d938a286a3d25114ee59f5cee63e1a57a795,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
INSERT,1530552329,7a10d938a286a3d25114ee59f5cee63e1a57a795,// workaround mock not closing metadata correctly,code_comment,code|design-debt
DELETE,1530552329,7a10d938a286a3d25114ee59f5cee63e1a57a795,// workaround mock not closing metadata correctly,code_comment,code|design-debt
DELETE,1529544419,1318c863c7efa7fbb0e3745a57ac06a52a3a8101,// TODO (sijie): use endpoint for now,code_comment,requirement-debt
INSERT,1529684686,ed5a8ba79c306d2bf015b65354fa2228fc07e0a1,// To work around this issue,code_comment,code|design-debt
INSERT,1528919228,5c2b0aa14f7c3117f70267b5c04e07901ecc2838,// offload should eventually be triggered,code_comment,code|design-debt
INSERT,1528234708,61a0bb0fb7fad61577890adf347b47eade5803dc,//TODO determine best method to extract schema from a protobuf message,code_comment,code|design-debt
INSERT,1529349328,8ba8acdbe812725df6739c5d19db3e47a553f351,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1529349328,8ba8acdbe812725df6739c5d19db3e47a553f351,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1528219535,844404630f01add24100b31ced3de255cf733ea9,// TODO: set correct function id and version when features implemented,code_comment,requirement-debt
INSERT,1526889434,069efdbc7520fbcff6e9392c05a8ebbbe8492b0d,// Delay between a ledger being successfully offloaded to long term storage,code_comment,code|design-debt
DELETE,1526889268,79b0e28d15e1e8c3fcdb4b29aee0956a3a31ebc8,// FIXME: this should be part of index,code_comment,code|design-debt
DELETE,1527137024,0f970e3055dc1ec129da1ccc4e3155415be94724,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1526491151,f0b1471a438ea0b4f77c1c00e0b4c64eb57074f7,// FIXME: this should be part of index,code_comment,code|design-debt
INSERT,1526017591,e2b95f2560f3d524d39a459a59682717d51d65f0,// TODO:- Find a platform independent way of controlling memory for a python application,code_comment,requirement-debt
INSERT,1527709871,ecec9337094820c65fe5ecf128f8070a3538bddd,"/**
     * Returns a new NestableFieldValidator for a given class.
     *
     * @param cls     the Class the field should be a type of
     * @param notNull whether or not a value of null is valid
     * @return a NestableFieldValidator for that class
     */",code_comment,code|design-debt
DELETE,1525807275,17f74150f43fc3766e78e2a566c6a4b8d2150d5b,// TODO:- Figure out the metrics story for connectors,code_comment,code|design-debt
DELETE,1525471240,6a42419bd20350d1814168ed4df33439aa112a9f,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
DELETE,1525471240,6a42419bd20350d1814168ed4df33439aa112a9f,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
INSERT,1525471240,6a42419bd20350d1814168ed4df33439aa112a9f,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
INSERT,1525471240,6a42419bd20350d1814168ed4df33439aa112a9f,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
INSERT,1525807275,17f74150f43fc3766e78e2a566c6a4b8d2150d5b,// TODO:- Figure out the metrics story for connectors,code_comment,code|design-debt
DELETE,1525726835,97829ef0df7d540fa0102dc4aa0cc2d69b996389,// TODO: correctly implement ,code_comment,requirement-debt
INSERT,1525726835,97829ef0df7d540fa0102dc4aa0cc2d69b996389,// TODO: correctly implement function version and id,code_comment,requirement-debt
INSERT,1525334095,d1e719c9dd0190b5d28d3182fa9e2394a29476d7,// This is bigger than header size. Leaving some place for alignment and future enhancement.,code_comment,code|design-debt
INSERT,1525726835,97829ef0df7d540fa0102dc4aa0cc2d69b996389,// TODO in the future add more check here for functions and connectors,code_comment,requirement-debt
INSERT,1525726835,97829ef0df7d540fa0102dc4aa0cc2d69b996389,// TODO in th,code_comment,requirement-debt
INSERT,1526078436,cd973361a753eb32d7cd62a4dc52dc4d1e65474d,"/**
     * Any clean up could be handled here.
     */",code_comment,code|design-debt
INSERT,1524775025,eaae9eafd059fba76200593f9a021312c2aa3d44,"/**
     * Safely extract optional topic instance from a future, in a way to avoid unchecked exceptions and race conditions.
     */",code_comment,code|design-debt
INSERT,1524346208,f20364480fdae02a404244202b493699ada42fb1,//TODO remove topic argument,code_comment,code|design-debt
DELETE,1525126910,e9a1b9a58b28687558b29705ea66047ef82fd05c,//TODO Add deserialization exception stats,code_comment,requirement-debt
INSERT,1525126910,e9a1b9a58b28687558b29705ea66047ef82fd05c,//TODO Add deserialization exception stats,code_comment,requirement-debt
INSERT,1524775050,4cfa83aeeee27e13b258065c19c0fc1488255145,//TODO Add deserialization exception stats,code_comment,requirement-debt
INSERT,1523859670,e626e2ac26634b989db344a23f066bf34774363d,"/**
 * Provide a zookeeper client to handle session expire.
 *
 * Note this is copied from BK ZooKeeperClient class. The only addition here is that it allows to specify read-only mode
 * which we use when connecting to global ZK.
 *
 * TODO: Remove this class once BK-4.8 is released to include read-only in ZooKeeperClient.
 */",code_comment,code|design-debt
INSERT,1523859670,e626e2ac26634b989db344a23f066bf34774363d,"/**
 * Provide a mechanism to perform an operation on ZooKeeper that is safe on disconnections
 * and recoverable errors.
 *
 * TODO: Remove this class once BK-4.8 is released to include read-only in ZooKeeperClient.
 */",code_comment,code|design-debt
DELETE,1523648918,aba0d4247991c68d8d7bce21eaaeba4cb5cb1fb8,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1523648918,aba0d4247991c68d8d7bce21eaaeba4cb5cb1fb8,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
DELETE,1524346208,f20364480fdae02a404244202b493699ada42fb1,// TODO (sijie): currently we have to close the entire consumer for a given topic. However,code_comment,requirement-debt
INSERT,1524792694,02eff26259b43d3fac646d80f8256f9308baba1d,"// Hidden deprecated ""persistent"" and ""non-persistent"" subcommands",code_comment,code|design-debt
INSERT,1523441769,16bfc441bcaee5073b70b8a97614071647b3f60e,"/**
     * Delete a ledger from long term storage.
     *
     * The passed offloadContext should be a byte[] that has previously been received
     * from a call to #offload(ReadHandle,Map).
     *
     * @param ledgerId the ID of the ledger to delete from longterm storage
     * @param offloadContext a context that identifies the ledger in longterm storage
     * @return a future, which when completed, signifies that the ledger has
     *         been deleted
     */",code_comment,code|design-debt
INSERT,1523318886,027b424fd914db306bc3a9223ca2b36030421ce8,// TODO:- Figure out the metrics story for connectors,code_comment,code|design-debt
DELETE,1523416491,22e45e70c593118af849a17cad2c2de433344625,// TODO (sijie): currently we have to close the entire consumer for a given topic. However,code_comment,requirement-debt
INSERT,1523416491,22e45e70c593118af849a17cad2c2de433344625,// TODO (sijie): currently we have to close the entire consumer for a given topic. However,code_comment,requirement-debt
DELETE,1523038154,6e8b5bf05ce0eb31795357879a1ee62297467480,"/*
     * Has been tested elsewhere
     *
     * @Test public void Pair() { }
     */",code_comment,code|design-debt
DELETE,1523379405,ab67386b966ab92b55e70bef4a48d265a07f509a,// Remove the ledger future from cache to give chance to reopen it later,code_comment,code|design-debt
INSERT,1525297390,c3c8013d701d986970ec9baef142c338233f2f89,//TODO Add serialization exception stats,code_comment,requirement-debt
DELETE,1522370388,73a214a59280d95b66c2a25ebe2fdfe898a7cd29,// Bug:7062188 - markDeletePosition can sometimes be stuck at the beginning of an empty ledger.,code_comment,code|design-debt
INSERT,1523667439,2267ed40c458132efe9d95f7f3c5fd5615c21131,// Case 3: TODO: Once automatic cleanup is implemented,code_comment,requirement-debt
INSERT,1521152298,6fbd8c3c63c66cd1bfc08d04c2c553ffb78e0b55,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,"/*
    TODO(sijie):- Can we fix this?
    @Test
    public void testLocalRunnerCmdSettings() throws Exception {
        String fnName = TEST_NAME + -function"";",code_comment,code|design-debt
INSERT,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,// TODO: this should become bookkeeper url and it should be fetched from pulsar client.,code_comment,code|design-debt
INSERT,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,// TODO: correctly implement function version and id,code_comment,requirement-debt
INSERT,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,// TODO: this url should be fetched along with bookkeeper location from pulsar admin,code_comment,code|design-debt
DELETE,1520124773,12dac7ef2b684b59ae4d9c087b0e1ba4e158156a,"/**
     * Any clean up could be handled here.
     */",code_comment,code|design-debt
DELETE,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,// TODO: this should become bookkeeper url and it should be fetched from pulsar client.,code_comment,code|design-debt
DELETE,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,// TODO: correctly implement function version and id,code_comment,requirement-debt
DELETE,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,// TODO: this url should be fetched along with bookkeeper location from pulsar admin,code_comment,code|design-debt
DELETE,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,"/**
 * TODO: merge this into {@link PulsarAdminTool}.
 */",code_comment,code|design-debt
DELETE,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,"/**
 * Pulsar Functions CLI.
 *
 * TODO: move this to `pulsar-client-tools` after merged back to the apache repo.
 */",code_comment,code|design-debt
DELETE,1520304390,6230ab4542c733f3390bd7ae7d4d6b0d5a661fb1,"/*
    TODO(sijie):- Can we fix this?
    @Test
    public void testLocalRunnerCmdSettings() throws Exception {
        String fnName = TEST_NAME + -function"";",code_comment,code|design-debt
INSERT,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO: Disabled because it fails with maven surefire 2.20,code_comment,requirement-debt
INSERT,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO: Disabled because it fails with maven surefire 2.20,code_comment,requirement-debt
INSERT,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO: handle exception,code_comment,requirement-debt
DELETE,1520124254,a68fb0de5b6ccea938cddce4a7261ca2228d8b05,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
DELETE,1520124254,a68fb0de5b6ccea938cddce4a7261ca2228d8b05,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
DELETE,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO: Disabled because it fails with maven surefire 2.20,code_comment,requirement-debt
DELETE,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO: Disabled because it fails with maven surefire 2.20,code_comment,requirement-debt
DELETE,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1520286590,b7019252d832c42fb244c07fc92ce4f59801c952,// TODO: handle exception,code_comment,requirement-debt
INSERT,1520124254,fb5e34bb5ff4decfa136c97275d11f9d7c3bb05f,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
DELETE,1520124254,fb5e34bb5ff4decfa136c97275d11f9d7c3bb05f,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO: the message key routing is problematic at this moment.,code_comment,requirement-debt
INSERT,1520124254,04973686d3e5002a81269d616401402d2302a0ac,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
INSERT,1520124254,04973686d3e5002a81269d616401402d2302a0ac,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO: cache logger instances by functions?,code_comment,code|design-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,"/**
     * NOTE: this method should be called in the instance thread, in order to make class loading work.
     */",code_comment,code|design-debt
DELETE,1520124254,b1306d65af9dd29d27a3f2614e504e2ed2646036,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO (sijie): use endpoint for now,code_comment,requirement-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO (sijie): provide a better way to provision the state table for functions,code_comment,code|design-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO (sijie): currently we have to close the entire consumer for a given topic. However,code_comment,requirement-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO: this can be optimized with a batch operation.,code_comment,code|design-debt
DELETE,1520124254,b1306d65af9dd29d27a3f2614e504e2ed2646036,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124254,b1306d65af9dd29d27a3f2614e504e2ed2646036,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124254,b1306d65af9dd29d27a3f2614e504e2ed2646036,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
DELETE,1520124254,04973686d3e5002a81269d616401402d2302a0ac,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
DELETE,1520124254,04973686d3e5002a81269d616401402d2302a0ac,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO: cache logger instances by functions?,code_comment,code|design-debt
INSERT,1520124253,4b894530edd25504ccabde450f77de3a93ec2e17,// TODO: co,code_comment,requirement-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,"/**
     * NOTE: this method should be called in the instance thread, in order to make class loading work.
     */",code_comment,code|design-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO (sijie): use endpoint for now,code_comment,requirement-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO (sijie): provide a better way to provision the state table for functions,code_comment,code|design-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO (sijie): currently we have to close the entire consumer for a given topic. However,code_comment,requirement-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO: the message key routing is problematic at this moment.,code_comment,requirement-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,// TODO: this can be optimized with a batch operation.,code_comment,code|design-debt
DELETE,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
INSERT,1520124253,4b894530edd25504ccabde450f77de3a93ec2e17,// TODO: set cor,code_comment,requirement-debt
INSERT,1520124253,d21341cb808ab4c923a6068cda72772af6ba54c6,// TODO: this url should be fetched along with bookkeeper location from pulsar admin,code_comment,code|design-debt
INSERT,1520124254,86f6cdcaebef231689cac879ebbb54334740eee2,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
INSERT,1520124253,6779f3a4fa95bd7756d4efc5ea09eeb4d1124905,"/**
     * Private methods for internal use.  Should not be used outside of this class
     */",code_comment,code|design-debt
INSERT,1520124253,6779f3a4fa95bd7756d4efc5ea09eeb4d1124905,"/**
     * Private methods for internal use.  Should not be used outside of this class
     */",code_comment,code|design-debt
INSERT,1520124253,79a3b783f138561e59c25634e9e3827b0fb46808,// TODO: implement authentication/authorization,code_comment,requirement-debt
INSERT,1520124253,180f01f76b3e1834b27d9cfe48211e2719a2d3e9,// TODO: find a better way to handle bad request,code_comment,code|design-debt
INSERT,1520124253,180f01f76b3e1834b27d9cfe48211e2719a2d3e9,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
DELETE,1520124253,79a3b783f138561e59c25634e9e3827b0fb46808,// TODO: write start up status back to FMT,code_comment,requirement-debt
INSERT,1520124254,587da921dcab0f2f02038d0e44b18e9fd083f61c,// TODO: move t,code_comment,code|design-debt
DELETE,1520124254,587da921dcab0f2f02038d0e44b18e9fd083f61c,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
DELETE,1520124254,914179c564f7b5bad027cfa99563633a79b1618f,// TODO: mo,code_comment,code|design-debt
INSERT,1520124254,914179c564f7b5bad027cfa99563633a79b1618f,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1520124252,21aec146b1b3c3f9d34d6c0aa48edbddf7d80b05,// TODO: this should become bookkeeper url and it should be fetched from pulsar client.,code_comment,code|design-debt
INSERT,1520124252,21aec146b1b3c3f9d34d6c0aa48edbddf7d80b05,// TODO (sijie): use endpoint for now,code_comment,requirement-debt
INSERT,1520124252,21aec146b1b3c3f9d34d6c0aa48edbddf7d80b05,// TODO (sijie): provide a better way to provision the state table for functions,code_comment,code|design-debt
INSERT,1520124252,21aec146b1b3c3f9d34d6c0aa48edbddf7d80b05,// TODO: this can be optimized with a batch operation.,code_comment,code|design-debt
DELETE,1520124253,cb48b0928ca5ba0ed1efeb5e0a2ed0330dbc4da9,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1520124253,cb48b0928ca5ba0ed1efeb5e0a2ed0330dbc4da9,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1520124252,f77cd003113416f9c37b5d32ae64e3232f7fad9e,"/**
   * Any clean up could be handled here.
   */",code_comment,code|design-debt
DELETE,1520124252,f77cd003113416f9c37b5d32ae64e3232f7fad9e,"/**
   * Any clean up could be handled here.
   */",code_comment,code|design-debt
DELETE,1520124252,0ee69b979b0609869154708436f85ee42c2ddd66,"/**
   * Any clean up could be handled here.
   */",code_comment,code|design-debt
INSERT,1520124252,6f853cd2cdf872bc5d77b698176bdd27cb5b4fdf,"/**
   * Any clean up could be handled here.
   */",code_comment,code|design-debt
INSERT,1520124252,0ee69b979b0609869154708436f85ee42c2ddd66,"/**
   * Any clean up could be handled here.
   */",code_comment,code|design-debt
INSERT,1520124252,b590e8bdba369829e4d32eefe68b772a346a52d0,// Can we do any checks here?,code_comment,requirement-debt
INSERT,1520124251,cb74f216f4905570df151024ee88c09d5db4ae88,// The logic here is a little flaky. There is no guarantee that this,code_comment,test-debt
INSERT,1520124251,cb74f216f4905570df151024ee88c09d5db4ae88,// TODO(sanjeev):- Fix this,code_comment,requirement-debt
INSERT,1520124251,8316228e1ab2af66dc03edaa65cd8cdbe53f6070,"/**
 * TODO: merge this into {@link PulsarAdminTool}.
 */",code_comment,code|design-debt
INSERT,1520124251,8316228e1ab2af66dc03edaa65cd8cdbe53f6070,"/**
 * Pulsar Functions CLI.
 *
 * TODO: move this to `pulsar-client-tools` after merged back to the apache repo.
 */",code_comment,code|design-debt
DELETE,1520124251,8316228e1ab2af66dc03edaa65cd8cdbe53f6070,"/**
 * TODO: merge this into {@link PulsarAdminTool}.
 */",code_comment,code|design-debt
DELETE,1520124251,8316228e1ab2af66dc03edaa65cd8cdbe53f6070,"/**
 * Pulsar Functions CLI.
 *
 * TODO: move this to `pulsar-client-tools` after merged back to the apache repo.
 */",code_comment,code|design-debt
DELETE,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: find a better way to handle bad request,code_comment,code|design-debt
DELETE,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
DELETE,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
DELETE,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: avoid array copy by using the new bytebuf api,code_comment,code|design-debt
DELETE,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
DELETE,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: find a better way to handle bad request,code_comment,code|design-debt
INSERT,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
INSERT,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: avoid array copy by using the new bytebuf api,code_comment,code|design-debt
INSERT,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124251,d82a04f80216212270ae45c968f96e85bde290ac,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124250,ee0ba8602d7e9a61d68f5eb56a9e35f23126b7a8,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124250,ee0ba8602d7e9a61d68f5eb56a9e35f23126b7a8,// TODO: dlog 0.5.0 doesn't support filesystem path,code_comment,requirement-debt
INSERT,1520124250,b662fe6f894e07136b7fda83c7e8689ebc2db1df,// TODO: cache logger instances by functions?,code_comment,code|design-debt
INSERT,1520124250,ef7657c3953ba8d105f60a9cce107d47c1491eb5,// TODO: start the function should be out of the scope of rest request processing,code_comment,code|design-debt
INSERT,1520124250,4f107d372838c5aa62cdef08938c21143a543c1d,// TODO: enable this for at-least-once processing,code_comment,requirement-debt
INSERT,1520124250,4f107d372838c5aa62cdef08938c21143a543c1d,// TODO: enable this for at-least-once processing,code_comment,requirement-debt
DELETE,1520124250,4c973c8c562a73d4b2e079a47c4f5a16b1f3f81f,// TODO: ,code_comment,code|design-debt
DELETE,1520124250,4c973c8c562a73d4b2e079a47c4f5a16b1f3f81f,// TODO:,code_comment,code|design-debt
INSERT,1520124253,8a99e50ff7a5f9ac1a6f602e392340a9c4be497d,// TODO: the message key routing is problematic at this moment.,code_comment,requirement-debt
INSERT,1520124250,793b1cf7809d1e97fa3ab1e8a9ade7b23a6744a9,// TODO: find a better way to handle bad request,code_comment,code|design-debt
INSERT,1520124250,793b1cf7809d1e97fa3ab1e8a9ade7b23a6744a9,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
DELETE,1520124250,793b1cf7809d1e97fa3ab1e8a9ade7b23a6744a9,// TODO: find a better way to handle bad request,code_comment,code|design-debt
DELETE,1520124250,793b1cf7809d1e97fa3ab1e8a9ade7b23a6744a9,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
INSERT,1520124250,eefe67e0730eee69056e3831c0891113c93ba812,// TODO: avoid array copy by using the new bytebuf api,code_comment,code|design-debt
INSERT,1520124250,0c113d76423b34e542cd1002fc7df396c2b92171,// TODO: find a better way to handle bad request,code_comment,code|design-debt
INSERT,1520124250,0c113d76423b34e542cd1002fc7df396c2b92171,// TODO: find a better way to handle consumer functions,code_comment,code|design-debt
DELETE,1520124250,d14c23adecab383c87c14a22aab90dc021ffac7b,// TODO: start the funct,code_comment,requirement-debt
DELETE,1520124250,d14c23adecab383c87c14a22aab90dc021ffac7b,// TODO: start the funct,code_comment,requirement-debt
DELETE,1520124250,eefe67e0730eee69056e3831c0891113c93ba812,// TODO: avoid array copy by using the new bytebuf api,code_comment,code|design-debt
INSERT,1520124250,570d59cc5c6faad193f20d76aa07417f7d645b0b,// TODO: avoid array copy by using the new bytebuf api,code_comment,code|design-debt
INSERT,1520124250,ef7657c3953ba8d105f60a9cce107d47c1491eb5,// TODO: move this as part of pulsar cluster initialization later,code_comment,code|design-debt
INSERT,1520124250,275daf0ce05ffc3940b06edfb8be0570da6750cd,"/**
     * Create an instance of <code>userClassName</code> using provided <code>classLoader</code>.
     * This instance should implement the provided interface <code>xface</code>.
     *
     * @param userClassName user class name
     * @param xface the interface that the reflected instance should implement
     * @param classLoader class loader to load the class.
     * @return the instance
     */",code_comment,code|design-debt
INSERT,1520124250,275daf0ce05ffc3940b06edfb8be0570da6750cd,"/**
     * Verify that function type should be consistent with serde type.
     */",code_comment,code|design-debt
INSERT,1520124249,aca6ac5a7b6bef1f794e9b82bd0b2d0078983408,// TODO: execute the runner here,code_comment,code|design-debt
INSERT,1520124249,aca6ac5a7b6bef1f794e9b82bd0b2d0078983408,"/**
 * TODO: merge this into {@link PulsarAdminTool}.
 */",code_comment,code|design-debt
INSERT,1520124249,aca6ac5a7b6bef1f794e9b82bd0b2d0078983408,"/**
 * Pulsar Functions CLI.
 *
 * TODO: move this to `pulsar-client-tools` after merged back to the apache repo.
 */",code_comment,code|design-debt
INSERT,1520124249,d2b4483f4db6700e40ddf90c5226263927f56a77,// TODO: execute the runner here,code_comment,code|design-debt
INSERT,1520124249,d2b4483f4db6700e40ddf90c5226263927f56a77,"/**
 * TODO: merge this into {@link PulsarAdminTool}.
 */",code_comment,code|design-debt
INSERT,1520124249,d2b4483f4db6700e40ddf90c5226263927f56a77,"/**
 * Pulsar Functions CLI.
 *
 * TODO: move this to `pulsar-client-tools` after merged back to the apache repo.
 */",code_comment,code|design-debt
INSERT,1520024841,973fa3ac35394e73ca7a950afac4f908633ff23c,// TODO make test run properly on Windows,code_comment,test-debt
DELETE,1520124249,d2b4483f4db6700e40ddf90c5226263927f56a77,// TODO: execute the runner here,code_comment,code|design-debt
DELETE,1520124249,d2b4483f4db6700e40ddf90c5226263927f56a77,"/**
 * TODO: merge this into {@link PulsarAdminTool}.
 */",code_comment,code|design-debt
DELETE,1520124249,d2b4483f4db6700e40ddf90c5226263927f56a77,"/**
 * Pulsar Functions CLI.
 *
 * TODO: move this to `pulsar-client-tools` after merged back to the apache repo.
 */",code_comment,code|design-debt
DELETE,1519942846,ccf1812da9f9280ef829527d3a97ee23c4ad3691,"/**
     * @deprecated AuthMethod has been deprecated. Use {@link #newConnect(String authMethodName, String authData)}
     *             instead.
     */",code_comment,code|design-debt
DELETE,1519884630,d0f8a40d0834525ac1679cc7a28621ddc23f899e,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1519837215,d179bee91964ebfe9a95c6614b50f1b890f658c8,"/**
     * Requests an incremental, stateless, long-width hash function with the
     * given parameters. Note that although an algorithm may be available in
     * incremental form, some potentially more optimized implementations may not
     * support that form, and therefore cannot be provided be this method.
     * <p>
     * Also note that this method may return a less efficient hash function than
     * {@link #getIncrementalInt} for hashes of 32 bits or less.
     * 
     * @param params the hash algorithm parameters
     * @return a stateful long-width hash function
     * @throws UnsupportedOperationException if this provider cannot support the
     *             given parameters
     */",code_comment,code|design-debt
DELETE,1519837215,d179bee91964ebfe9a95c6614b50f1b890f658c8,"/**
     * Requests an incremental, stateless, long-width hash function with the
     * given parameters. Note that although an algorithm may be available in
     * incremental form, some potentially more optimized implementations may not
     * support that form, and therefore cannot be provided be this method.
     * <p>
     * Also note that this method may return a less efficient hash function than
     * {@link #getIncrementalInt} for hashes of 32 bits or less.
     * 
     * @param params the hash algorithm parameters
     * @return a stateful long-width hash function
     * @throws UnsupportedOperationException if no provider supports the
     *             parameters as an {@link IncrementalLongHash}
     */",code_comment,code|design-debt
DELETE,1519837215,d179bee91964ebfe9a95c6614b50f1b890f658c8,"//en.wikipedia.org/wiki/Cyclic_redundancy_check"">cyclic redundancy",code_comment,code|design-debt
DELETE,1519837215,d179bee91964ebfe9a95c6614b50f1b890f658c8,"//en.wikipedia.org/wiki/Cyclic_redundancy_check"">cyclic redundancy",code_comment,code|design-debt
DELETE,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// TODO: make this admin call asynchronous,code_comment,requirement-debt
DELETE,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// TODO: make this admin call asynchronous,code_comment,requirement-debt
DELETE,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// TODO: make this admin call asynchronous,code_comment,requirement-debt
DELETE,1518369023,8e5b11a28bd7b875f9eba56fcb5acbe67d6dfece,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// producer or it might have been deleted earlier,code_comment,code|design-debt
INSERT,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1518491692,35e84c349ce2442592bde6f1bfc980dacf175f1e,// producer or it might have been deleted earlier,code_comment,code|design-debt
INSERT,1518057101,11648aa65e2393874c94e69d5733846bbc9f22fa,// TODO: cut consumer connection on markDeleteFailed,code_comment,requirement-debt
INSERT,1517965201,69db8942eafe7b712227e8804ebaa2afc58b6e70,"/**
     * Hacky parsing of Prometheus text format. Sould be good enough for unit tests
     */",code_comment,code|design-debt
INSERT,1516829919,f5a2ec74e834e50f1970927f8fa6c107f7a3453c,"/**
     * Skip reading non-recoverable/unreadable data-ledger under managed-ledger's list. It helps when data-ledgers gets
     * corrupted at bookkeeper and managed-cursor is stuck at that ledger.
     * 
     * @param autoSkipNonRecoverableData
     */",code_comment,code|design-debt
INSERT,1516829919,f5a2ec74e834e50f1970927f8fa6c107f7a3453c,// corrupted at bookkeeper and managed-cursor is stuck at that ledger.,code_comment,code|design-debt
INSERT,1513896398,83b77533aa193e8d8012ee1221da8d379d9fb331,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
DELETE,1510724867,35505f36637faf74749d3cb2ebe59aedd343896d,// TODO (agh) Ensure that this is the case.,code_comment,code|design-debt
DELETE,1510724867,35505f36637faf74749d3cb2ebe59aedd343896d,// We should have gotten an exception on the previous,code_comment,code|design-debt
INSERT,1509054962,eb9e5fc933ea0a1f98f02c201af29634e7caaa0a,"/**
 * Load Manager component which determines what bundles should be split into two bundles.
 */",code_comment,code|design-debt
INSERT,1509054962,eb9e5fc933ea0a1f98f02c201af29634e7caaa0a,"/**
     * Determines which bundles, if any, should be split.
     * 
     * @param loadData
     *            Load data to base decisions on (does not have benefit of preallocated data since this may not be the
     *            leader broker).
     * @param pulsar
     *            Service to use.
     * @return A set of the bundles that should be split.
     */",code_comment,code|design-debt
INSERT,1509054962,eb9e5fc933ea0a1f98f02c201af29634e7caaa0a,"/**
 * Determines which bundles should be split based on various thresholds.
 */",code_comment,code|design-debt
INSERT,1520124253,180f01f76b3e1834b27d9cfe48211e2719a2d3e9,// TODO: write start up status back to FMT,code_comment,requirement-debt
INSERT,1506694648,fe28023d01fd43e3512b05b684e18cd16b211b51,// There are some test cases where pulsarClient is not initialized.,code_comment,test-debt
INSERT,1506275827,25c8107bbdd2e74d11c32079af5f690761ed2561,// TODO: move to AdminApiTest2.java,code_comment,code|design-debt
INSERT,1505849607,fbdec4569ae4c556d659b43cef240fd08ccfd2a6,// TODO: Disabled because it fails with maven surefire 2.20,code_comment,requirement-debt
INSERT,1505849607,fbdec4569ae4c556d659b43cef240fd08ccfd2a6,// TODO: Disabled because it fails with maven surefire 2.20,code_comment,requirement-debt
INSERT,1505539896,b5bdd7967def45313616e4e364878154b185bdd2,// TODO: Replace random with counter and periodic refreshing based on timer/counter value,code_comment,code|design-debt
INSERT,1507657767,34ae881adb267d7cf7348335b576e281a22bfb72,// todo - what can go wrong here that needs to be retried?,code_comment,code|design-debt
DELETE,1507657767,34ae881adb267d7cf7348335b576e281a22bfb72,// todo - what can go wrong here that needs to be retried?,code_comment,code|design-debt
DELETE,1507657767,34ae881adb267d7cf7348335b576e281a22bfb72,// TODO: move to AdminApiTest2.java,code_comment,code|design-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1502730233,80ddad614413d806a366ae66daad43bd5df6b849,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1501271191,380e47e694fa28dc67947a81beb1d72e5039a84b,// TODO: throw exception,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
             * Maybe authentication type should be checked if it is a HTTPS session. However this check fails actually
             * because authType is null.
             *
             * This check is not necessarily needed, because an untrusted certificate is not passed to
             * HttpServletRequest.
             *
             * <code>
             * if (authData.hasDataFromHttp()) {
             *     String authType = authData.getHttpAuthType();
             *     if (!HttpServletRequest.CLIENT_CERT_AUTH.equals(authType)) {
             *         throw new AuthenticationException(
             *              String.format( Authentication type mismatch",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
             * Maybe authentication type should be checked if it is a HTTPS session. However this check fails actually
             * because authType is null.
             *
             * This check is not necessarily needed, because an untrusted certificate is not passed to
             * HttpServletRequest.
             *
             * <code>
             * if (authData.hasDataFromHttp()) {
             *     String authType = authData.getHttpAuthType();
             *     if (!HttpServletRequest.CLIENT_CERT_AUTH.equals(authType)) {
             *         throw new AuthenticationException(
             *              String.format( Authentication type mismatch",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Data class comprising the short term and long term historical data for this bundle.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Initialize the bundle data.
     * 
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Initialize this bundle data and have its histories default to the given stats before the first sample is
     * received.
     * 
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     * @param defaultStats
     *            The stats to default to before the first sample is received.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Short term data for this bundle. The time frame of this data is,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// determined by the number of short term samples,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Long term data for this bundle. The time frame of this data is determined,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// by the number of long term samples,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Data class aggregating the short term and long term data across all bundles belonging to a broker.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: make this admin call asynchronous,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: make this admin call asynchronous,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: make this admin call asynchronous,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// producer or it might have been deleted earlier,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Load management component which determines what brokers should not be considered for topic placement by the placement
 * strategy. For example, the placement strategy may determine that the broker with the least msg/s should get the
 * bundle assignment, but we may not want to consider brokers whose CPU usage is very high. Thus, we could use a filter
 * to blacklist brokers with high CPU usage.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Need this default constructor for json conversion. Please do not remove this.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Create a placement strategy using the configuration.
     * 
     * @param conf
     *            ServiceConfiguration to use.
     * @return A placement strategy from the given configurations.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/*
    ServiceUnit is a smallest indivisible set that any broker can pick up and service. This unit will be moved around
    and also turned on and off as and when needed. Load Manager will decide the placement of these Units to minimize
    the load on ResourceUnit and maximize the performance for each ServiceUnit.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * An abstract class which makes a LoadSheddingStrategy which makes decisions based on standard deviation easier to
 * implement. Assuming there exists some real number metric which may estimate the load on a server, this load shedding
 * strategy calculates the standard deviation with respect to that metric and sheds load on brokers whose standard
 * deviation is above some threshold.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// enough to warrant unloading bundles.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Mean cannot change by just moving around bundles.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Placement strategy which selects a broker based on which one has the least long term message rate.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: in future check if the resource unit has resources to take,code_comment,requirement-debt
INSERT,1495817915,b47df828b585e93d0e516e6aadb2ac71b5f91097,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1495817915,b47df828b585e93d0e516e6aadb2ac71b5f91097,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// The number of effective samples to keep for observing long term data.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// The number of effective samples to keep for observing short term data.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Strategy used to determine where new topics should be placed.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO?,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO need to return zero if two resourceDescription match exactly,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1497295075,cd51107ac4d768a6ef0940148d195f9f0090e05a,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1497295075,cd51107ac4d768a6ef0940148d195f9f0090e05a,// Do similar tests for lower values.,code_comment,test-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO add JSON parser here to get the following information,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: need to re-think these numbers,code_comment,requirement-debt
INSERT,1496901156,ffc6db740730222900b9f6efb1953b7b54911810,// We just move on to the next stage,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Detect and split hot namespace bundles
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: changeme: this can be optimized,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: need to apply the policies to the assignment and decide whether it can be assigned or not,code_comment,code|design-debt
INSERT,1494738229,ca5a445f59b9efe1f0a7d9f226be80e8b214afaa,// This method (and it's only call above in the ctor) may be removed when SemVer accepts null patch versions,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: this means all the brokers are overloaded and we can't assign this namespace to any broker,code_comment,code|design-debt
INSERT,1493768948,914e428258639226014169f6acd4e652e77aa83e,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// The producer is not ready yet after having stopped/restarted. Drop the message because it will,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1493750312,6c9a217f7631ef642a3c7d8943a7647ba46a2777,// ?: Is it too inefficient to make this synchronized? If so,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: cut consumer connection on markDeleteFailed,code_comment,requirement-debt
INSERT,1493750312,6c9a217f7631ef642a3c7d8943a7647ba46a2777,// Test that least long term message rate works correctly.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo - retry on InvalidCursorPositionException,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// or should we just ask user to retry one more time?,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo - what can go wrong here that needs to be retried?,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO (agh) Ensure that this is the case.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: when we have a fail-over policy defined,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// This method (and it's only call above in the ctor) may be removed when SemVer accepts null patch versions,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Data class comprising the short term and long term historical data for this bundle.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Initialize the bundle data.
     * 
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Initialize this bundle data and have its histories default to the given stats before the first sample is
     * received.
     * 
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     * @param defaultStats
     *            The stats to default to before the first sample is received.
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Short term data for this bundle. The time frame of this data is,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// determined by the number of short term samples,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Long term data for this bundle. The time frame of this data is determined,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// by the number of long term samples,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Data class aggregating the short term and long term data across all bundles belonging to a broker.
 */",code_comment,code|design-debt
INSERT,1494628738,b2e350a0772f69ae8978651bca0df95c983a1581,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// producer or it might have been deleted earlier,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Load management component which determines what brokers should not be considered for topic placement by the placement
 * strategy. For example, the placement strategy may determine that the broker with the least msg/s should get the
 * bundle assignment, but we may not want to consider brokers whose CPU usage is very high. Thus, we could use a filter
 * to blacklist brokers with high CPU usage.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Need this default constructor for json conversion. Please do not remove this.,code_comment,code|design-debt
INSERT,1492018380,f572241537b958a8afda48b8af13ea768a7230f7,// deleted to prevent leak,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Create a placement strategy using the configuration.
     * 
     * @param conf
     *            ServiceConfiguration to use.
     * @return A placement strategy from the given configurations.
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/*
    ServiceUnit is a smallest indivisible set that any broker can pick up and service. This unit will be moved around
    and also turned on and off as and when needed. Load Manager will decide the placement of these Units to minimize
    the load on ResourceUnit and maximize the performance for each ServiceUnit.
 */",code_comment,code|design-debt
DELETE,1491863782,731e5df6e92d6a07088b8f9e3cac98e5d90258b7,// ?: Is it too inefficient to make this synchronized? If so,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * An abstract class which makes a LoadSheddingStrategy which makes decisions based on standard deviation easier to
 * implement. Assuming there exists some real number metric which may estimate the load on a server, this load shedding
 * strategy calculates the standard deviation with respect to that metric and sheds load on brokers whose standard
 * deviation is above some threshold.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// enough to warrant unloading bundles.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Mean cannot change by just moving around bundles.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Placement strategy which selects a broker based on which one has the least long term message rate.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: in future check if the resource unit has resources to take,code_comment,requirement-debt
INSERT,1493689994,398bb6a7cd97351e60b9c186c5012bad31912182,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1493689994,398bb6a7cd97351e60b9c186c5012bad31912182,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1491863782,731e5df6e92d6a07088b8f9e3cac98e5d90258b7,// Test that least long term message rate works correctly.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// The number of effective samples to keep for observing long term data.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// The number of effective samples to keep for observing short term data.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Strategy used to determine where new topics should be placed.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO?,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO need to return zero if two resourceDescription match exactly,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO add JSON parser here to get the following information,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: need to re-think these numbers,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Detect and split hot namespace bundles
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: changeme: this can be optimized,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: need to apply the policies to the assignment and decide whether it can be assigned or not,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo: this means all the brokers are overloaded and we can't assign this namespace to any broker,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
 * Data class comprising the short term and long term historical data for this bundle.
 */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
     * Initialize the bundle data.
     * 
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
     * Initialize this bundle data and have its histories default to the given stats before the first sample is
     * received.
     * 
     * @param numShortSamples
     *            Number of short term samples to use.
     * @param numLongSamples
     *            Number of long term samples to use.
     * @param defaultStats
     *            The stats to default to before the first sample is received.
     */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// Short term data for this bundle. The time frame of this data is,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// determined by the number of short term samples,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// Long term data for this bundle. The time frame of this data is determined,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// by the number of long term samples,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
 * Data class aggregating the short term and long term data across all bundles belonging to a broker.
 */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
 * Load management component which determines what brokers should not be considered for topic placement by the placement
 * strategy. For example, the placement strategy may determine that the broker with the least msg/s should get the
 * bundle assignment, but we may not want to consider brokers whose CPU usage is very high. Thus, we could use a filter
 * to blacklist brokers with high CPU usage.
 */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
     * Create a placement strategy using the configuration.
     * 
     * @param conf
     *            ServiceConfiguration to use.
     * @return A placement strategy from the given configurations.
     */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
 * An abstract class which makes a LoadSheddingStrategy which makes decisions based on standard deviation easier to
 * implement. Assuming there exists some real number metric which may estimate the load on a server, this load shedding
 * strategy calculates the standard deviation with respect to that metric and sheds load on brokers whose standard
 * deviation is above some threshold.
 */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// enough to warrant unloading bundles.,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// Mean cannot change by just moving around bundles.,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,"/**
 * Placement strategy which selects a broker based on which one has the least long term message rate.
 */",code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// todo: in future check if the resource unit has resources to take,code_comment,requirement-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// The number of effective samples to keep for observing long term data.,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// The number of effective samples to keep for observing short term data.,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// Strategy used to determine where new topics should be placed.,code_comment,code|design-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// TODO?,code_comment,requirement-debt
INSERT,1490911275,1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b,// ?: Is it too inefficient to make this synchronized? If so,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// The producer is not ready yet after having stopped/restarted. Drop the message because it will,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: cut consumer connection on markDeleteFailed,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo - retry on InvalidCursorPositionException,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// or should we just ask user to retry one more time?,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// todo - what can go wrong here that needs to be retried?,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO (agh) Ensure that this is the case.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: when we have a fail-over policy defined,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// This method (and it's only call above in the ctor) may be removed when SemVer accepts null patch versions,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1501271191,380e47e694fa28dc67947a81beb1d72e5039a84b,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1489185520,146738c59098f0c50ef827c9d21c155e7312c313,// TODO: Add this again,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO move to its own test,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO move to its own test,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Do similar tests for lower values.,code_comment,test-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Test that least long term message rate works correctly.,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// old bundle should be removed from status-map,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// status-map should be updated with new split bundles,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// localCache.ownerInfoCache().invalidate(ServiceUnitZkUtils.path(testNs));,code_comment,test-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/*
     * lid eid bid 0 0 1-10 ack type cumul till id 9 0 1 1-10 ack type cumul on batch id 5. (should remove 0,1, 10 also
     * on broker) individual ack on 6-10. (if ack type individual on bid 5, then hole remains which is ok) 0 2 1-10 0 3
     * 1-10
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 10. Attempt to remove already removed consumer,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Verify: 
     * 1. Broker should not replay already acknowledged messages 
     * 2. Dispatcher should not stuck while dispatching new messages due to previous-replay 
     * of invalid/already-acked messages
     * 
     * @throws Exception
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: enable this after java client supports graceful close,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * {@link PersistentReplicator.removeReplicator} doesn't remove replicator in atomic way and does in multiple step:
     * 1. disconnect replicator producer
     * <p>
     * 2. close cursor
     * <p>
     * 3. remove from replicator-list.
     * <p>
     *
     * If we try to startReplicationProducer before step-c finish then it should not avoid restarting repl-producer.
     *
     * @throws Exception
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 4. simple remove producer,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 5. duplicate remove,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 3. simple remove consumer,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 4. duplicate remove consumer,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Case 3: TODO: Once automatic cleanup is implemented,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Tests for the {@code WebService} class. Note that this test only covers the newly added ApiVersionFilter related
 * tests for now as this test class was added quite a bit after the class was written.
 *
 */",code_comment,test-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// We should have gotten an exception on the previous,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Verifies: different versions of broker-deployment (one broker understands Checksum and other
     * doesn't in that case remove checksum before sending to broker-2)
     * 
     * client first produce message with checksum and then retries to send message due to connection unavailable. But this time, if
     * broker doesn't understand checksum: then client should remove checksum from the message before sending to broker.
     * 
     * 1. stop broker 
     * 2. client compute checksum and add into message 
     * 3. produce 2 messages and corrupt 1 message 
     * 4. start broker with lower version (which doesn't support checksum) 
     * 5. client reconnects to broker and due to incompatibility of version: removes checksum from message 
     * 6. broker doesn't do checksum validation and persist message 
     * 7. client receives ack
     * 
     * @throws Exception
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO - this statement causes the broker to hang - need to look into,code_comment,code|design-debt
INSERT,1487979992,16a52216ea87260f65568e3112e539784e964173,"/**
     * {@link PersistentReplicator.removeReplicator} doesn't remove replicator in atomic way and does in multiple step:
     * 1. disconnect replicator producer
     * <p>
     * 2. close cursor
     * <p>
     * 3. remove from replicator-list.
     * <p>
     * 
     * If we try to startReplicationProducer before step-c finish then it should not avoid restarting repl-producer.
     * 
     * @throws Exception
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
INSERT,1487974783,99cf1dc4967aafc282a713cefaaf1bfa24e92d4a,"/**
     * {@link PersistentReplicator.removeReplicator} doesn't remove replicator in atomic way and does in multiple step:
     * 1. disconnect replicator producer
     * <p>
     * 2. close cursor
     * <p>
     * 3. remove from replicator-list.
     * <p>
     * 
     * If we try to startReplicationProducer before step-c finish then it should not avoid restarting repl-producer.
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO move to its own test,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO move to its own test,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Now less expensive bundle will be unloaded (normally other bundle would move off and nothing would be,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 5% difference: should trigger an update (exactly 5% is flaky due to precision).,code_comment,test-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Do similar tests for lower values.,code_comment,test-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Test that least long term message rate works correctly.,code_comment,code|design-debt
DELETE,1489102606,83605f6e45b24636d2a548a7e20459681aada88f,// messages are not needed anymore,code_comment,requirement-debt
INSERT,1489102606,83605f6e45b24636d2a548a7e20459681aada88f,// TODO: Add this again,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// old bundle should be removed from status-map,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// status-map should be updated with new split bundles,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// localCache.ownerInfoCache().invalidate(ServiceUnitZkUtils.path(testNs));,code_comment,test-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/*
     * lid eid bid 0 0 1-10 ack type cumul till id 9 0 1 1-10 ack type cumul on batch id 5. (should remove 0,1, 10 also
     * on broker) individual ack on 6-10. (if ack type individual on bid 5, then hole remains which is ok) 0 2 1-10 0 3
     * 1-10
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 10. Attempt to remove already removed consumer,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Verify: 
     * 1. Broker should not replay already acknowledged messages 
     * 2. Dispatcher should not stuck while dispatching new messages due to previous-replay 
     * of invalid/already-acked messages
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: enable this after java client supports graceful close,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * {@link PersistentReplicator.removeReplicator} doesn't remove replicator in atomic way and does in multiple step:
     * 1. disconnect replicator producer
     * <p>
     * 2. close cursor
     * <p>
     * 3. remove from replicator-list.
     * <p>
     *
     * If we try to startReplicationProducer before step-c finish then it should not avoid restarting repl-producer.
     *
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 4. simple remove producer,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 5. duplicate remove,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 3. simple remove consumer,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// 4. duplicate remove consumer,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Case 3: TODO: Once automatic cleanup is implemented,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Tests for the {@code WebService} class. Note that this test only covers the newly added ApiVersionFilter related
 * tests for now as this test class was added quite a bit after the class was written.
 *
 */",code_comment,test-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// We should have gotten an exception on the previous,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * Verifies: different versions of broker-deployment (one broker understands Checksum and other
     * doesn't in that case remove checksum before sending to broker-2)
     * 
     * client first produce message with checksum and then retries to send message due to connection unavailable. But this time, if
     * broker doesn't understand checksum: then client should remove checksum from the message before sending to broker.
     * 
     * 1. stop broker 
     * 2. client compute checksum and add into message 
     * 3. produce 2 messages and corrupt 1 message 
     * 4. start broker with lower version (which doesn't support checksum) 
     * 5. client reconnects to broker and due to incompatibility of version: removes checksum from message 
     * 6. broker doesn't do checksum validation and persist message 
     * 7. client receives ack
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO - this statement causes the broker to hang - need to look into,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: handle exception,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: handle exception,code_comment,requirement-debt
INSERT,1485201954,69a68b179b068e0c8bde83ebb9b50d017c6a0a7a,// todo - what can go wrong here that needs to be retried?,code_comment,code|design-debt
INSERT,1478284765,15683fd02b4cc8d6c076d24aa9961d254acd8a84,"/**
     * Verify: 
     * 1. Broker should not replay already acknowledged messages 
     * 2. Dispatcher should not stuck while dispatching new messages due to previous-replay 
     * of invalid/already-acked messages
     * 
     * @throws Exception
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// should clean up the ack tracker as well,code_comment,code|design-debt
INSERT,1478134148,f005a8a959dc2d154c2849c0e072019829ed7463,"/**
     * Verify: 
     * 1. Broker should not replay already acknowledged messages 
     * 2. Dispatcher should not stuck while dispatching new messages due to previous-replay 
     * of invalid/already-acked messages
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1478195103,8ab57c96806c0d4dd6844dbbb27ddb8cf76ec21f,"/**
     * Verify: 
     * 1. Broker should not replay already acknowledged messages 
     * 2. Dispatcher should not stuck while dispatching new messages due to previous-replay 
     * of invalid/already-acked messages
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// should clean up the ack tracker as well,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * @deprecated AuthMethod has been deprecated. Use {@link #newConnect(String authMethodName, String authData)}
     *             instead.
     */",code_comment,code|design-debt
DELETE,1476211269,309d7531c3a130999301bd43bed12f001a638c8e,// TODO: Re-enable once header+payload checksum changes are merged,code_comment,requirement-debt
INSERT,1476211269,309d7531c3a130999301bd43bed12f001a638c8e,"/**
     * Verifies: different versions of broker-deployment (one broker understands Checksum and other
     * doesn't in that case remove checksum before sending to broker-2)
     * 
     * client first produce message with checksum and then retries to send message due to connection unavailable. But this time, if
     * broker doesn't understand checksum: then client should remove checksum from the message before sending to broker.
     * 
     * 1. stop broker 
     * 2. client compute checksum and add into message 
     * 3. produce 2 messages and corrupt 1 message 
     * 4. start broker with lower version (which doesn't support checksum) 
     * 5. client reconnects to broker and due to incompatibility of version: removes checksum from message 
     * 6. broker doesn't do checksum validation and persist message 
     * 7. client receives ack
     * 
     * @throws Exception
     */",code_comment,code|design-debt
INSERT,1475120579,554f0505fc424896d820d639252b28e0ec523526,"/**
     * Requests an incremental, stateless, long-width hash function with the
     * given parameters. Note that although an algorithm may be available in
     * incremental form, some potentially more optimized implementations may not
     * support that form, and therefore cannot be provided be this method.
     * <p>
     * Also note that this method may return a less efficient hash function than
     * {@link #getIncrementalInt} for hashes of 32 bits or less.
     * 
     * @param params the hash algorithm parameters
     * @return a stateful long-width hash function
     * @throws UnsupportedOperationException if this provider cannot support the
     *             given parameters
     */",code_comment,code|design-debt
INSERT,1475120579,554f0505fc424896d820d639252b28e0ec523526,"/**
     * Requests an incremental, stateless, long-width hash function with the
     * given parameters. Note that although an algorithm may be available in
     * incremental form, some potentially more optimized implementations may not
     * support that form, and therefore cannot be provided be this method.
     * <p>
     * Also note that this method may return a less efficient hash function than
     * {@link #getIncrementalInt} for hashes of 32 bits or less.
     * 
     * @param params the hash algorithm parameters
     * @return a stateful long-width hash function
     * @throws UnsupportedOperationException if no provider supports the
     *             parameters as an {@link IncrementalLongHash}
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * this may be wrong since we are comparing available and not the usage
     * 
     * @param o
     * @return
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: Add more policy types when needed,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Can we cast? Then just do it.,code_comment,code|design-debt
DELETE,1474397865,de86ce9df5b0f337a59039c70f320b3d2393f755,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
DELETE,1474393771,c2fc29f31a60a1c7e6a19405577076ac53324445,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1474393771,c2fc29f31a60a1c7e6a19405577076ac53324445,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1475120579,554f0505fc424896d820d639252b28e0ec523526,"//en.wikipedia.org/wiki/Cyclic_redundancy_check"">cyclic redundancy",code_comment,code|design-debt
INSERT,1474397865,de86ce9df5b0f337a59039c70f320b3d2393f755,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
DELETE,1473962249,47a213c1b682565974c48a43dea139c521797436,"/**
     * this may be wrong since we are comparing available and not the usage
     * 
     * @param o
     * @return
     */",code_comment,code|design-debt
INSERT,1473709061,47dbfdb43e30682649594800aab5d6cc8f2f81b0,// TODO: Re-enable once header+payload checksum changes are merged,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * This implements a {@link BlockingQueue} backed by an array with no fixed capacity.
 *
 * When the capacity is reached, data will be moved to a bigger array.
 *
 */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,/** Read a {@code bool} field value from the stream. */,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,/** Read a 32-bit little-endian integer from the stream. */,code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,/** Read a 64-bit little-endian integer from the stream. */,code_comment,code|design-debt
INSERT,1473664573,0c4116a443ddaddca7527e06bcfc40aba1da48ae,// TODO: Re-enable once header+payload checksum changes are merged,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * @deprecated AuthMethod has been deprecated. Use {@link #newConnect(String authMethodName, String authData)}
     *             instead.
     */",code_comment,code|design-debt
INSERT,1475120579,554f0505fc424896d820d639252b28e0ec523526,"//en.wikipedia.org/wiki/Cyclic_redundancy_check"">cyclic redundancy",code_comment,code|design-debt
INSERT,1473962249,47a213c1b682565974c48a43dea139c521797436,"/**
     * this may be wrong since we are comparing available and not the usage
     * 
     * @param o
     * @return
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
 * Default eviction policy.
 *
 * This policy consider only the bigger caches for doing eviction.
 *
 * The PercentOfSizeToConsiderForEviction parameter should always be bigger than the cacheEvictionWatermak, otherwise
 * the eviction cycle will free less memory than what was required.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
 * Contains all the cursors for a ManagedLedger.
 *
 * The goal is to always know the slowest consumer and hence decide which is the oldest ledger we need to keep.
 *
 * This data structure maintains a list and a map of cursors. The map is used to relate a cursor name with an entry in
 * the linked-list. The list is a sorted double linked-list of cursors.
 *
 * When a cursor is markDeleted, this list is updated and the cursor is moved in its new position.
 *
 * To minimize the moving around, the order is maintained using the ledgerId, but not the entryId, since we only care
 * about ledgers to be deleted.
 *
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// There could be a race condition between calling clear backlog and other mark delete,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Bug:7062188 - markDeletePosition can sometimes be stuck at the beginning of an empty ledger.,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// messages are not needed anymore,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO: Add more policy types when needed,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Remove the ledger future from cache to give chance to reopen it later,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Can we cast? Then just do it.,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// need a better way than to duplicate the functionality below from ML,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * This implements a {@link BlockingQueue} backed by an array with no fixed capacity.
 *
 * When the capacity is reached, data will be moved to a bigger array.
 *
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,/** Read a {@code bool} field value from the stream. */,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,/** Read a 32-bit little-endian integer from the stream. */,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,/** Read a 64-bit little-endian integer from the stream. */,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
     * this may be wrong since we are comparing available and not the usage
     * 
     * @param o
     * @return
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Should remove 2 entries,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/*
     * Has been tested elsewhere
     *
     * @Test public void Pair() { }
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// This should remove the LRU entries: 0,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// interval to detect & split hot namespace bundle,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
             * Maybe authentication type should be checked if it is a HTTPS session. However this check fails actually
             * because authType is null.
             *
             * This check is not necessarily needed, because an untrusted certificate is not passed to
             * HttpServletRequest.
             *
             * <code>
             * if (authData.hasDataFromHttp()) {
             *     String authType = authData.getHttpAuthType();
             *     if (!HttpServletRequest.CLIENT_CERT_AUTH.equals(authType)) {
             *         throw new AuthenticationException(
             *              String.format( Authentication type mismatch",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: make this admin call asynchronous,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// producer or it might have been deleted earlier,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Need this default constructor for json conversion. Please do not remove this.,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/*
    ServiceUnit is a smallest indivisible set that any broker can pick up and service. This unit will be moved around
    and also turned on and off as and when needed. Load Manager will decide the placement of these Units to minimize
    the load on ResourceUnit and maximize the performance for each ServiceUnit.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
     * this may be wrong since we are comparing available and not the usage
     * 
     * @param o
     * @return
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO need to return zero if two resourceDescription match exactly,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO add JSON parser here to get the following information,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// todo: need to re-think these numbers,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
     * Detect and split hot namespace bundles
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// todo: in future check if the resource unit has resources to take the namespace,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// todo: changeme: this can be optimized,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: need to apply the policies to the assignment and decide whether it can be assigned or not,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// todo: this means all the brokers are overloaded and we can't assign this namespace to any broker,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// The producer is not ready yet after having stopped/restarted. Drop the message because it will,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Do lazy initialization of client,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: cut consumer connection on markDeleteFailed,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// todo - what can go wrong here that needs to be retried?,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// todo - retry on InvalidCursorPositionException,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// or should we just ask user to retry one more time?,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO (agh) Ensure that this is the case.,code_comment,code|design-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// Do lazy initialization of client,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: when we have a fail-over policy defined,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
     * Tests the private static <code>loadConfig</code> method of {@link PulsarBrokerStarter} class: verifies (1) if the
     * method returns a non-null {@link ServiceConfiguration} instance where all required settings are filled in and (2)
     * if the property variables inside the given property file are correctly referred to that returned object.
     */",code_comment,code|design-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
DELETE,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1498250492,70da31b082ea0ff7466cdf740fc0d6b443d21861,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO move to its own test,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO move to its own test,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// old bundle should be removed from status-map,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// status-map should be updated with new split bundles,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// localCache.ownerInfoCache().invalidate(ServiceUnitZkUtils.path(testNs));,code_comment,test-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/*
     * lid eid bid 0 0 1-10 ack type cumul till id 9 0 1 1-10 ack type cumul on batch id 5. (should remove 0,1, 10 also
     * on broker) individual ack on 6-10. (if ack type individual on bid 5, then hole remains which is ok) 0 2 1-10 0 3
     * 1-10
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// 10. Attempt to remove already removed consumer,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: enable this after java client supports graceful close,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// 4. simple remove producer,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// 5. duplicate remove,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// 3. simple remove consumer,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// 4. duplicate remove consumer,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Case 3: TODO: Once automatic cleanup is implemented,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
 * Tests for the {@code WebService} class. Note that this test only covers the newly added ApiVersionFilter related
 * tests for now as this test class was added quite a bit after the class was written.
 *
 */",code_comment,test-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// We should have gotten an exception on the previous,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO - this statement causes the broker to hang - need to look into,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: handle exception,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// should clean up the ack tracker as well,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
     * @deprecated AuthMethod has been deprecated. Use {@link #newConnect(String authMethodName, String authData)}
     *             instead.
     */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO: Add more policy types when needed,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Can we cast? Then just do it.,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
 * This implements a {@link BlockingQueue} backed by an array with no fixed capacity.
 *
 * When the capacity is reached, data will be moved to a bigger array.
 *
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,/** Read a {@code bool} field value from the stream. */,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,/** Read a 32-bit little-endian integer from the stream. */,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,/** Read a 64-bit little-endian integer from the stream. */,code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,"/**
 * Exception used to provide better error messages to clients of the REST API.
 */",code_comment,code|design-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// Do lazy initialization of client,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated method stub,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated catch block,code_comment,requirement-debt
INSERT,1473225075,9f849c324969e160f9891203b2a2e4805fae5a1c,// TODO Auto-generated catch block,code_comment,requirement-debt
