9d4e8053a4a84e6d106afdf8b27e62d2f396ab02,"Kinesis adaptive memory management (#15360)

### Description

Our Kinesis consumer works by using the [GetRecords API](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html) in some number of `fetchThreads`, each fetching some number of records (`recordsPerFetch`) and each inserting into a shared buffer that can hold a `recordBufferSize` number of records. The logic is described in our documentation at: https://druid.apache.org/docs/27.0.0/development/extensions-core/kinesis-ingestion/#determine-fetch-settings 

There is a problem with the logic that this pr fixes: the memory limits rely on a hard-coded “estimated record size” that is `10 KB` if `deaggregate: false` and `1 MB` if `deaggregate: true`. There have been cases where a supervisor had `deaggregate: true` set even though it wasn’t needed, leading to under-utilization of memory and poor ingestion performance.

Users don’t always know if their records are aggregated or not. Also, even if they could figure it out, it’s better to not have to. So we’d like to eliminate the `deaggregate` parameter, which means we need to do memory management more adaptively based on the actual record sizes.

We take advantage of the fact that GetRecords doesn’t return more than 10MB (https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html ):

This pr: 

eliminates `recordsPerFetch`, always use the max limit of 10000 records (the default limit if not set)

eliminate `deaggregate`, always have it true

cap `fetchThreads` to ensure that if each fetch returns the max (`10MB`) then we don't exceed our budget (`100MB` or `5% of heap`). In practice this means `fetchThreads` will never be more than `10`. Tasks usually don't have that many processors available to them anyway, so in practice I don't think this will change the number of threads for too many deployments

add `recordBufferSizeBytes` as a bytes-based limit rather than records-based limit for the shared queue. We do know the byte size of kinesis records by at this point. Default should be `100MB` or `10% of heap`, whichever is smaller.

add `maxBytesPerPoll` as a bytes-based limit for how much data we poll from shared buffer at a time. Default is `1000000` bytes.

deprecate `recordBufferSize`, use `recordBufferSizeBytes` instead. Warning is logged if `recordBufferSize` is specified

deprecate `maxRecordsPerPoll`, use `maxBytesPerPoll` instead. Warning is logged if maxRecordsPerPoll` is specified

Fixed issue that when the record buffer is full, the fetchRecords logic throws away the rest of the GetRecords result after `recordBufferOfferTimeout` and starts a new shard iterator. This seems excessively churny. Instead,  wait an unbounded amount of time for queue to stop being full. If the queue remains full, we’ll end up right back waiting for it after the restarted fetch.

There was also a call to `newQ::offer` without check in `filterBufferAndResetBackgroundFetch`, which seemed like it could cause data loss. Now checking return value here, and failing if false.

### Release Note

Kinesis ingestion memory tuning config has been greatly simplified, and a more adaptive approach is now taken for the configuration. Here is a summary of the changes made:

eliminates `recordsPerFetch`, always use the max limit of 10000 records (the default limit if not set)

eliminate `deaggregate`, always have it true

cap `fetchThreads` to ensure that if each fetch returns the max (`10MB`) then we don't exceed our budget (`100MB` or `5% of heap`). In practice this means `fetchThreads` will never be more than `10`. Tasks usually don't have that many processors available to them anyway, so in practice I don't think this will change the number of threads for too many deployments

add `recordBufferSizeBytes` as a bytes-based limit rather than records-based limit for the shared queue. We do know the byte size of kinesis records by at this point. Default should be `100MB` or `10% of heap`, whichever is smaller.

add `maxBytesPerPoll` as a bytes-based limit for how much data we poll from shared buffer at a time. Default is `1000000` bytes.

deprecate `recordBufferSize`, use `recordBufferSizeBytes` instead. Warning is logged if `recordBufferSize` is specified

deprecate `maxRecordsPerPoll`, use `maxBytesPerPoll` instead. Warning is logged if maxRecordsPerPoll` is specified",2024-01-19T19:30:21Z
38c1def95a0b32b19ea478c893fca547f7350e42,"Kill tasks honor the buffer period of unused segments (#15710)

* Kill tasks should honor the buffer period of unused segments.

- The coordinator duty KillUnusedSegments determines an umbrella interval
 for each datasource to determine the kill interval. There can be multiple unused
segments in an umbrella interval with different used_status_last_updated timestamps.
For example, consider an unused segment that is 30 days old and one that is 1 hour old. Currently
the kill task after the 30-day mark would kill both the unused segments and not retain the 1-hour
old one.

- However, when a kill task is instantiated with this umbrella interval, it’d kill
all the unused segments regardless of the last updated timestamp. We need kill
tasks and RetrieveUnusedSegmentsAction to honor the bufferPeriod to avoid killing
unused segments in the kill interval prematurely.

* Clarify default behavior in docs.

* test comments

* fix canDutyRun()

* small updates.

* checkstyle

* forbidden api fix

* doc fix, unused import, codeql scan error, and cleanup logs.

* Address review comments

* Rename maxUsedFlagLastUpdatedTime to maxUsedStatusLastUpdatedTime

This is consistent with the column name `used_status_last_updated`.

* Apply suggestions from code review

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Make period Duration type

* Remove older variants of runKilLTask() in OverlordClient interface

* Test can now run without waiting for canDutyRun().

* Remove previous variants of retrieveUnusedSegments from internal metadata storage coordinator interface.

Removes the following interface methods in favor of a new method added:
- retrieveUnusedSegmentsForInterval(String, Interval)
- retrieveUnusedSegmentsForInterval(String, Interval, Integer)

* Chain stream operations

* cleanup

* Pass in the lastUpdatedTime to markUnused test function and remove sleep.

---------

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2024-01-19T06:23:50Z
96b4abc8e9fc582fb496309b852076b34b9bdc8f,Add @VisibleForTesting annotation for the backingArray() method (#15690),2024-01-19T03:30:10Z
f51f0e07e2da80f6aab282181a7314fdade094fb,"Remove documentation for unused segments retrieval API (#15721)

* Undocument unused segments retrieval API.

* Mark API deprecated and unstable. Note that it'll be removed.

* Cleanup .spelling entries

* Remove the Unstable annotation",2024-01-19T02:25:48Z
18d42cae3ff9ebe5f255ed356864793b20c034c1,"Kafka emitter wasn't given the correct number of threads. It should be 1 thread per scheduled task. (#15719)

This change intelligently provisions the correct number of threads per scheduled task. 1 for each event type, and 1 for logging the lost events.
This is a change to make this work. But in the future it would be worthwhile to make each task not be greedy and share threads so there isn't a need of a thread per task.",2024-01-18T21:27:40Z
c8c04f1032d2b8cf0111c2d588d3f8dd38a215a0,fix worker disable rendering (#15712),2024-01-18T21:21:32Z
dd03f7061a722d111491390a9a3da22ecab0c3c1,"Implement task payload management with azure storage (#15695)

* Implement task payload manageent with azure storage

* Remove unnecessary parameter",2024-01-18T18:21:36Z
792e5c58e4e1b041d448a3ab09f2e34f592df659,"IncrementalIndex#add is no longer thread-safe. (#15697)

* IncrementalIndex#add is no longer thread-safe.

Following #14866, there is no longer a reason for IncrementalIndex#add
to be thread-safe.

It turns out it already was not using its selectors in a thread-safe way,
as exposed by #15615 making `testMultithreadAddFactsUsingExpressionAndJavaScript`
in `IncrementalIndexIngestionTest` flaky. Note that this problem isn't
new: Strings have been stored in the dimension selectors for some time,
but we didn't have a test that checked for that case; we only have
this test that checks for concurrent adds involving numeric selectors.

At any rate, this patch changes OnheapIncrementalIndex to no longer try
to offer a thread-safe ""add"" method. It also improves performance a bit
by adding a row ID supplier to the selectors it uses to read InputRows,
meaning that it can get the benefit of caching values inside the selectors.

This patch also:

1) Adds synchronization to HyperUniquesAggregator and CardinalityAggregator,
   which the similar datasketches versions already have. This is done to
   help them adhere to the contract of Aggregator: concurrent calls to
   ""aggregate"" and ""get"" must be thread-safe.

2) Updates OnHeapIncrementalIndexBenchmark to use JMH and moves it to the
   druid-benchmarks module.

* Spelling.

* Changes from static analysis.

* Fix javadoc.",2024-01-18T11:45:22Z
764f41d9593b280cf00a06869dc0f6efedcb7566,"Clear ""lineSplittable"" for JSON when using KafkaInputFormat. (#15692)

* Clear ""lineSplittable"" for JSON when using KafkaInputFormat.

JsonInputFormat has a ""withLineSplittable"" method that can be used to
control whether JSON is read line-by-line, or as a whole. The intent
is that in streaming ingestion, ""lineSplittable"" is false (although it
can be overridden by ""assumeNewlineDelimited""), and in batch ingestion,
lineSplittable is true.

When a ""json"" format is wrapped by a ""kafka"" format, this isn't set
properly. This patch updates KafkaInputFormat to set this on an
underlying ""json"" format.

The tests for KafkaInputFormat were overriding the ""lineSplittable""
parameter explicitly, which wasn't really fair, because that made them
unrealistic to what happens in production. Now they omit the parameter
and get the production behavior.

* Add test.

* Fix test coverage.",2024-01-18T11:22:41Z
d3d0c1c91ec228209ff9aa45155998937aa8e8d6,"Faster parsing: reduce String usage, list-based input rows. (#15681)

* Faster parsing: reduce String usage, list-based input rows.

Three changes:

1) Reworked FastLineIterator to optionally avoid generating Strings
   entirely, and reduce copying somewhat. Benefits the line-oriented
   JSON, CSV, delimited (TSV), and regex formats.

2) In the delimited (TSV) format, when the delimiter is a single byte,
   split on UTF-8 bytes directly.

3) In CSV and delimited (TSV) formats, use list-based input rows when
   the column list is provided upfront by the user.

* Fix style.

* Fix inspections.

* Restore validation.

* Remove fastutil-extra.

* Exception type.

* Fixes for error messages.

* Fixes for null handling.",2024-01-18T11:18:46Z
55acf2e2ff49cb14eee353a474805746368a877d,"Fix incorrect scale when reading decimal from parquet (#15715)

* Fix incorrect scale when reading decimal from parquet

* add comments

* fix test",2024-01-18T10:10:27Z
a3b32fbd26a53008b0d12aee12688e9923136ef5,"Fix comparator and remove deprecated methods from spectatorHistogram extension (#15698)

* Remove deprecated methods from SpectatorHistogram

* Remove deprecated methods from SpectatorHistogram

* Remove deprecated methods from SpectatorHistogram",2024-01-18T05:59:53Z
a26defd64bb487d273433fbd6b3b84b6013b2639,"Clean up stale entries from upgradeSegments table (#15637)

* Clean up stale entries from upgradeSegments table",2024-01-17T15:19:52Z
fc06f2d075fd5f96a20ff4eeaecdef56f717b2b0,"Fix summary iterator in grouping engine(#15658)

This PR fixes the summary iterator to add aggregators in the correct position. The summary iterator is used when dims are not present, therefore the new change is identical to the old one, but seems more correct while reading.",2024-01-17T15:13:45Z
c27f5bf52f6690e76e39381f57683b374787b222,"Report zero values instead of unknown for empty ingest queries (#15674)

MSQ now allows empty ingest queries by default. For such queries that don't generate any output rows, the query counters in the async status result object/task report don't contain numTotalRows and totalSizeInBytes. These properties when not set/undefined can be confusing to API clients. For example, the web-console treats it as unknown values.

This patch fixes the counters by explicitly reporting them as 0 instead of null for empty ingest queries.",2024-01-17T10:56:10Z
8a43db9395bc142d089dcb05892d9f33f118af99,"Range support in window expressions (support them as groups) (#15365)

* support groups windowing mode; which is a close relative of ranges (but not in the standard)
* all windows with range expressions will be executed wit it groups
* it will be 100% correct in case for both bounds its true that: isCurrentRow() || isUnBounded()
  * this covers OVER ( ORDER BY COL )
* for other cases it will have some chances of getting correct results...",2024-01-17T06:05:21Z
8ba06cf72306b0e5d4b3c47bd2e4756bdb791fba,account for null values in the stddev post aggregator (#15660),2024-01-16T14:27:33Z
6b951b94c05a4c9fdc3b7b6f864992a7b55af635,"Add new context parameter for using concurrent locks (#15684)

Changes:
- Add new task context flag useConcurrentLocks.
- This can be set for an individual task or at a cluster level using `druid.indexer.task.default.context`.
- When set to true, any appending task would use an APPEND lock and any other
ingestion task would use a REPLACE lock when using time chunk locking.
- If false (default), we fall back on the context flag taskLockType and then useSharedLock.",2024-01-16T07:13:39Z
11dbfb6e3fd9fe330c3904b389cc7f9e15b21bec,"Better error message when partition space is exhausted (#15685)

* Better error message when partition space is exhausted",2024-01-16T07:02:40Z
67720b60ae664aab95e5482086e0b4f2a77be500,"Skip compaction for intervals without data (#15676)

* Skip compaction for intervals with a single tombstone and no data",2024-01-16T07:01:36Z
072b16c6df43005756145248d6f08e98f23243b6,"Fix SQL Innterval.of() error message (#15454)

Better error message for poorly constructed intervals",2024-01-16T04:34:35Z
d359fb3d689a9a32cfe6c3f21995d7885190ebbd,"Cache value selectors in RowBasedColumnSelectorFactory. (#15615)

* Cache value selectors in RowBasedColumnSelectorFactory.

There was already caching for dimension selectors. This patch adds caching
for value (object and number) selectors. It's helpful when the same field is
read multiple times during processing of a single row (for example, by being
an input to both MIN and MAX aggregations).

* Fix typing.

* Fix logic.",2024-01-16T02:03:27Z
18d2a8957f64e04cb82d1ae2a14017094dad9db8,Refactor: Cleanup test impls of ServiceEmitter (#15683),2024-01-15T12:07:00Z
08c01f1dae9732859ee69f12b4612c6df05c4dde,"Handle and map errors in delete pending segments API (#15673)

Changes:
- Handle exception in deletePendingSegments API and map to correct HTTP status code
- Clean up exception message using `DruidException`
- Add unit tests",2024-01-15T04:39:01Z
e49a7bb3cd97764942dd2b465b0f94dc40653cef,"Add SpectatorHistogram extension (#15340)

* Add SpectatorHistogram extension

* Clarify documentation
Cleanup comments

* Use ColumnValueSelector directly
so that we support being queried as a Number using longSum or doubleSum aggregators as well as a histogram.
When queried as a Number, we're returning the count of entries in the histogram.

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Fix references

* Fix spelling

* Update docs/development/extensions-contrib/spectator-histogram.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

---------

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2024-01-14T17:52:30Z
f0c552b2f91fcce0c3daccb0e8cb878c9182c46a,"Fix basic auth integration test (#15679)

* Add some retries

* Add a delay to allow creds to propagate

* Checkstyle and stuff",2024-01-14T16:59:15Z
500681d0cb4a169b5735019ffcfea963eacb843b,"Add ImmutableLookupMap for static lookups. (#15675)

* Add ImmutableLookupMap for static lookups.

This patch adds a new ImmutableLookupMap, which comes with an
ImmutableLookupExtractor. It uses a fastutil open hashmap plus two
lists to store its data in such a way that forward and reverse
lookups can both be done quickly. I also observed footprint to be
somewhat smaller than Java HashMap + MapLookupExtractor for a 1 million
row lookup.

The main advantage, though, is that reverse lookups can be done much
more quickly than MapLookupExtractor (which iterates the entire map
for each call to unapplyAll). This speeds up the recently added
ReverseLookupRule (#15626) during SQL planning with very large lookups.

* Use in one more test.

* Fix benchmark.

* Object2ObjectOpenHashMap

* Fixes, and LookupExtractor interface update to have asMap.

* Remove commented-out code.

* Fix style.

* Fix import order.

* Add fastutil.

* Avoid storing Map entries.",2024-01-13T21:14:01Z
866fe1cda60a65326baef102b2a3269b6297779a,"Fix some naming related to AggregatePullUpLookupRule. (#15677)

It was called ""split"" rather than ""pull up"" in some places. This patch
standardizes on ""pull up"".",2024-01-12T23:41:58Z
0457c71d0399904148f581d62d92099670d615bd,"Fix k8sAndWorker mode in a zookeeper-less environment (#15445)

* Fix k8sAndWorker mode in a zookeeper-less environment

* add unit test

* code reformat

* minor refine

* change to inject Provider

* correct style

* bind HttpRemoteTaskRunnerFactory as provider

* change to bind on TaskRunnerFactory

* fix styling",2024-01-12T17:30:01Z
cccf13ea8244d43e1ce4cceb9089edcad162c8c3,"Reverse, pull up lookups in the SQL planner. (#15626)

* Reverse, pull up lookups in the SQL planner.

Adds two new rules:

1) ReverseLookupRule, which eliminates calls to LOOKUP by doing
   reverse lookups.

2) AggregatePullUpLookupRule, which pulls up calls to LOOKUP above
   GROUP BY, when the lookup is injective.

Adds configs `sqlReverseLookup` and `sqlPullUpLookup` to control whether
these rules fire. Both are enabled by default.

To minimize the chance of performance problems due to many keys mapping to
the same value, ReverseLookupRule refrains from reversing a lookup if there
are more keys than `inSubQueryThreshold`. The rationale for using this setting
is that reversal works by generating an IN, and the `inSubQueryThreshold`
describes the largest IN the user wants the planner to create.

* Add additional line.

* Style.

* Remove commented-out lines.

* Fix tests.

* Add test.

* Fix doc link.

* Fix docs.

* Add one more test.

* Fix tests.

* Logic, test updates.

* - Make FilterDecomposeConcatRule more flexible.

- Make CalciteRulesManager apply reduction rules til fixpoint.

* Additional tests, simplify code.",2024-01-12T08:06:31Z
e597cc2949c9ffe6a18ec2efc8ee9880e029d44c,"Remove UnaryFunctionOperatorConversion and RoundOperatorConversion (#15566)

* get rid of roun op conv

* cleanup

* use DirectOperatorConversion instead unary

* import order",2024-01-12T04:36:23Z
6c18434028b46aba9a4c25f5834005d468f9ac6f,"CONCAT flattening, filter decomposition. (#15634)

* CONCAT flattening, filter decomposition.

Flattening: CONCAT(CONCAT(x, y), z) is flattened to CONCAT(x, y, z). This
is especially useful for the || operator, which is a binary operator and
leads to non-flat CONCAT calls.

Filter decomposition: transforms CONCAT(x, '-', y) = 'a-b' into
x = 'a' AND y = 'b'.

* One more test.

* Fix two tests.

* Adjustments from review.

* Fix empty string problem, add tests.",2024-01-11T19:18:50Z
2231cb30a4d76244c1f81ce71ff73120b5e99cd2,"Faster k-way merging using tournament trees, 8-byte key strides. (#15661)

* Faster k-way merging using tournament trees, 8-byte key strides.

Two speedups for FrameChannelMerger (which does k-way merging in MSQ):

1) Replace the priority queue with a tournament tree, which does fewer
   comparisons.

2) Compare keys using 8-byte strides, rather than 1 byte at a time.

* Adjust comments.

* Fix style.

* Adjust benchmark and test.

* Add eight-list test (power of two).",2024-01-11T16:36:22Z
2118258b547eb6f802f8c0752dcfad15740f2600,tidy up group by engines after removal of v1 (#15665),2024-01-11T08:52:52Z
87fbe422187e6e7fa02983fbc70af95bc371e3f1,"""Partition boost"" the group by queries in MSQ for better splits (#15474)

""Partition boost"" the group by queries in MSQ for better splits",2024-01-11T07:16:27Z
5b769a7d3260aa34f01240be0b44a009b376034a,"Update load query detail archive dialog for file input support (#15632)

* Update execution-submit-dialog for file input support

Modified the execution-submit-dialog to support file inputs instead of text inputs for better usability. Users can now submit their queries by selecting a JSON file directly or dragging the file into the dialog. Made appropriate UI adjustments to accommodate this change in execution-submit-dialog styles file.

* Update web-console/src/views/workbench-view/execution-submit-dialog/execution-submit-dialog.tsx

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update web-console/src/views/workbench-view/execution-submit-dialog/execution-submit-dialog.tsx

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update web-console/src/views/workbench-view/execution-submit-dialog/execution-submit-dialog.tsx

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update drag-and-drop instructions in execution-submit-dialog

* Add snapshot tests for ExecutionSubmitDialog

* prettify

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2024-01-11T04:48:46Z
f445ba4d6b818f730bc6a2e470dd3aead4b71fce,"Audit API DELETE datasource (markAllSegmentsAsUnused) (#15653)

Changes:
- Add audit for `DELETE /druid/coordinator/v1/datasources/{datasourceName}`
- Minor refactor",2024-01-11T04:13:32Z
ee77fa7fb3ca58c6550be7304f53b9c2bf545232,"Add tests for CASE decomposition. (#15639)

I was looking into adding a rule to do this, and found that it was already
happening as part of Calcite's RexSimplify. So this patch simply adds some
tests to ensure that it continues to happen.",2024-01-10T21:24:24Z
0b91cc4db20bb2395eb7177d9e15d04353c885c8,"Fix incorrect tests in Sting first/last serde's null handling (#15657)

Fixes a couple of incorrect test cases, that got merged accidentally",2024-01-10T13:46:12Z
d623756c66885029e54fe11838a51ae4d843020d,"Add cache for password hash in druid-basic-security (#15648)

Add class PasswordHashGenerator. Move hashing logic from BasicAuthUtils to this new class.
Add cache in the hash generator to contain the computed hash of passwords and boost validator performance
Cache has max size 1000 and expiry 1 hour
Key of the cache is an SHA-256 hash of the (password + random salt generated on service startup)",2024-01-10T12:16:09Z
fefa76372203bb83c934a5a8a7cbe3b4ca3828fa,"Resultcache fetch should deserialize aggregates when they are real results (#15654)

Fixes #15538",2024-01-10T11:42:33Z
99d4b7dca71d289bd1015ae180cada6bfa6ff52a,Use  to trigger search bar of official site (#15652),2024-01-10T09:18:36Z
4149f98934ff78d872767d90ba560aa3fcf8ff80,"Fixes a bug with long string pair serde where null and empty strings are treated equivalently (#15525)

This PR fixes a bug with the long string pair serde where null and empty strings are treated equivalently, and the return value is always null. When 'useDefaultValueForNull' was set to true by default, this wasn't a commonly seen issue, because nulls were equivalent to empty strings. However, since the default has changed to false, this can create incorrect results when the long string pairs are serded, where the empty strings are incorrectly converted to nulls.",2024-01-10T08:47:57Z
355c2f5da003e99439774dbc63ed9ef2016b0d8d,"Add sql + ingestion compatibility for first/last on numeric values (#15607)

SQL compatibility for numeric last and first column types.
Ingestion UI now provides option for first and last aggregation as well.",2024-01-10T07:29:38Z
047c7340ab3981cdb987cf6ddaaa541f9f72f2df,"Adding retries to update the metadata store instead of failure (#15141)

Currently, If 2 tasks are consuming from the same partitions, try to publish the segment and update the metadata, the second task can fail because the end offset stored in the metadata store doesn't match with the start offset of the second task. We can fix this by retrying instead of failing.

AFAIK apart from the above issue, the metadata mismatch can happen in 2 scenarios:

- when we update the input topic name for the data source
- when we run 2 replicas of ingestion tasks(1 replica will publish and 1 will fail as the first replica has already updated the metadata).

Implemented the comparable function to compare the last committed end offset and new Sequence start offset. And return a specific error msg for this.

Add retry logic on indexers to retry for this specific error msg.

Updated the existing test case.",2024-01-10T07:00:54Z
2938b8de53f5a39be7697734afcfffbe1be18300,fix issue with NestedPathArrayElement not correctly handling negative index for Object[] like it has for List (#15650),2024-01-10T04:16:08Z
71f53072771b1c750516865d59fdb4c03b1eea16,"Eliminate Periodic Realtime Segment Metadata Queries: Task Now Publish Schema for Seamless Coordinator Updates (#15475)

The initial step in optimizing segment metadata was to centralize the construction of datasource schema in the Coordinator (#14985). Subsequently, our goal is to eliminate the requirement for regularly executing queries to obtain segment schema information. This task encompasses addressing both realtime and finalized segments.

This modification specifically addresses the issue with realtime segments. Tasks will now routinely communicate the schema for realtime segments during the segment announcement process. The Coordinator will identify the schema alongside the segment announcement and subsequently update the schema for realtime segments in the metadata cache.",2024-01-10T03:25:56Z
85b8cf9f3784bc7fc33fe6c08d68c1b6f0a44351,"Web console: Fix concurrent tasks (#15649)

* Improve handling of concurrent tasks option

* Update snapshots",2024-01-10T00:09:42Z
747d973752843b4f55e2498ecd0034dd5567c953,Skip waiting for first lookup version to get initialized (#15598),2024-01-09T21:18:39Z
ea6ba40ce1e1b776a85378b1c0f495483e45490a,"Add support for Azure Goverment storage (#15523)

Added support for Azure Government storage in Druid Azure-Extensions. This enhancement allows the Azure-Extensions to be compatible with different Azure storage types by updating the endpoint suffix from a hardcoded value to a configurable one.",2024-01-09T17:03:32Z
cafc748f7eca173a92d4ba53ae6e5f67ff0f50d3,skip expression virtual column indexes when mvd is used as array (#15644),2024-01-09T05:22:37Z
911941b4a63eb6393fde77048fb2f7bad1cca1bc,fix issue with nested virtual column index supplier for partial paths when processing from raw (#15643),2024-01-09T02:25:08Z
468b99e608cfae27722606914183252e5eeafc10,"Enable query request queuing by default when total laning is turned on. (#15440)

This PR enables the flag by default to queue excess query requests in the jetty queue. Still keeping the flag so that it can be turned off if necessary. But the flag will be removed in the future.",2024-01-09T02:24:26Z
52313c51acb0486312c78c3d104917064a2c1637,"docs: Anchor link checker (#15624)

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2024-01-08T23:19:05Z
df5bcd1367054e3e7e449df65339d334b26d3094,"fix bugs with expression virtual column indexes for expression virtual columns which refer to other virtual columns (#15633)

changes:
* ColumnIndexSelector now extends ColumnSelector. The only real implementation of ColumnIndexSelector, ColumnSelectorColumnIndexSelector, already has a ColumnSelector, so this isn't very disruptive
* removed getColumnNames from ColumnSelector since it was not used
* VirtualColumns and VirtualColumn getIndexSupplier method now needs argument of ColumnIndexSelector instead of ColumnSelector, which allows expression virtual columns to correctly recognize other virtual columns, fixing an issue which would incorrectly handle other virtual columns as non-existent columns instead
* fixed a bug with sql planner incorrectly not using expression filter for equality filters on columns with extractionFn and no virtual column registry",2024-01-08T21:10:11Z
84adb9255e9c9ddce6f87f8086fc7a251f2b3e64,"Web console: Fix spec conversion, expose failOnEmptyInsert (#15627)

* Spec converter should dedupe the columns

* Add ""Fail on empty insert"" setting to QueryContext toggles",2024-01-08T20:05:12Z
5d1e66b8f96cfd0eca27e2d84cabdd98661ccf49,"Allow broker to use catalog for datasource schemas for SQL queries (#15469)

* Allow broker to use catalog for datasource schemas

* More PR comments

* PR comments",2024-01-08T19:46:08Z
141c214b4696890172307d3c2052d3eb6b366101,docs: add note about finalizeaggregations for sql-based ingestion (#15631),2024-01-08T18:06:10Z
f7bd5ba4d3aeff474e14737553c8b5008d0bf582,"Audit create/update of a supervisor spec (#15636)

Changes
- Audit create or update of a supervisor spec. The purpose of the audit is
to track which user made change to a supervisor and when.
- The audit entry does not contain the entire spec or even a diff of the changes
as this is already captured in the `druid_supervisors` metadata table.",2024-01-08T14:16:05Z
63bfb3e6c94e218bc20f738e7f4c285e2518b1f9,"Handle half-eternity intervals while fetching segments with created dates (#15608)

* Handle all intervals while fetching segments with created dates",2024-01-08T06:37:11Z
c221a2634b0d2f6b8f6e7d15c9e7632001668425,"overhaul DruidPredicateFactory to better handle 3VL (#15629)

* overhaul DruidPredicateFactory to better handle 3VL

fixes some bugs caused by some limitations of the original design of how DruidPredicateFactory interacts with 3-value logic. The primary impacted area was with how filters on values transformed with expressions or extractionFn which turn non-null values into nulls, which were not possible to be modelled with the 'isNullInputUnknown' method

changes:
* adds DruidObjectPredicate to specialize string, array, and object based predicates instead of using guava Predicate
* DruidPredicateFactory now uses DruidObjectPredicate
* introduces DruidPredicateMatch enum, which all predicates returned from DruidPredicateFactory now use instead of booleans to indicate match. This means DruidLongPredicate, DruidFloatPredicate, DruidDoublePredicate, and the newly added DruidObjectPredicate apply methods all now return DruidPredicateMatch. This allows matchers and indexes
* isNullInputUnknown has been removed from DruidPredicateFactory

* rename, fix test

* adjust

* style

* npe

* more test

* fix default value mode to not match new test",2024-01-06T03:08:02Z
62964e99b158bb16b2481b6bfe383d9a07214ac8,"optimize CI workflow for doc updates (#15617)

* optimize CI workflow for doc updates

* Update .github/workflows/codeql.yml

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>

* Update .github/workflows/codeql.yml

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>

---------

Co-authored-by: Benedict Jin <asdf2014@apache.org>
Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>",2024-01-06T01:18:38Z
0422d9d50749b04b476c420dcdeb5e0572ddf82a,"Fix redundant expansion in SearchOperatorConversion. (#15625)

This logic error causes sarg expansion to happen twice for IN or NOT IN points.
It doesn't affect the final generated native query, because the
redundant expansions gets combined. But it slows down planning, especially
for large NOT IN.",2024-01-05T20:42:12Z
9fe67958be95f9d9fd88807046c2fe561c8665f5,"Increase ServerConnector accept queue size (#15596)

* Allow overwriting ServerConnector accept queue size

* Use a single config

* Fix spacing

* fix spacing

* fixed value

* read value from environment

* fix spacing

* Unpack value before reading

* check somaxconn on linux only",2024-01-05T17:04:15Z
c41e99e10ccabf008bf4031a2fca98126c7ba3cc,"Do not allocate week granular segments unless requested (#15589)

* Do not allocate week granular segments unless explicitly requested",2024-01-05T06:44:52Z
d8830b64fc825f9a88fede28341c59b534ec4ae7,"add style for table formatting to docs contribution (#15612)

Co-authored-by: Benedict Jin <asdf2014@apache.org>
Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2024-01-04T22:02:32Z
c937068625e41d49b91316102fe5d41d5f38a119,"Improve polling in segment allocation queue (#15590)

Description
When batchAllocationWaitTime is set to 0, the segment allocation queue is polled continuously even when it is empty. This would take up cpu cycles unnecessarily.

Some existing race conditions would also become more frequent when the batchAllocationWaitTime is 0. This PR tries to better address those race conditions as well.

Changes
Do not reschedule a poll if queue is empty
When a new batch is added to queue, schedule a poll
Simplify keyToBatch map
Handle race conditions better
As soon as a batch starts getting processed, do not add any more requests to it",2024-01-04T12:12:02Z
b9679d0884c96b29a48a1f398773d0b788c36240,"Run filter-into-join rule early for subqueries and disable project-filter rule (#15511)

FILTER_INTO_JOIN is mainly run along with the other rules with the Volcano planner; however if the query starts highly underdefined (join conditions in the where clauses) that generic query could give a lot of room for the other rules to play around with only enabled it for when the join uses subqueries for its inputs. 

PROJECT_FILTER rule is not that useful. and could increase planning times by providing new plans. This problem worsened after we started supporting inner joins with arbitrary join conditions in https://github.com/apache/druid/pull/15302",2024-01-04T10:03:45Z
5c3391a084d9bb8015bf9304dde4efbc21cd3cb4,"Follow-ups to SEARCH and IN from #15609. (#15623)

- Rename ExprType to BaseType in CollectComparisons, since ExprType is a thing
  that exists elsewhere.
- Remove unused ""notInRexNodes"" from SearchOperatorConversion.",2024-01-04T06:38:12Z
f19ece146f1222ffe69281b70963406efb66fc40,"expression virtual column indexes (#15585)

* ExpressionVirtualColumn + indexes = bff. Expression virtual columns can now use indexes of the underlying columns similar to how expression filters",2024-01-04T05:00:39Z
8e95cea8e5856fc5a1aae18994304d54b3659b19,"Azure client upgrade to allow identity options (#15287)

* Include new dependencies

* Mostly implemented

* More azure fixes

* Tests passing

* Unit tests running

* Test running after removing storage exception

* Happy with coverage now

* Add more tests

* fix client factory

* cleanup from testing

* Remove old client

* update docs

* Exclude from spellcheck

* Add licenses

* Fix identity version

* Save work

* Add azure clients

* add licenses

* typos

* Add dependencies

* Exception is not thrown

* Fix intellij check

* Don't need to override

* specify length

* urldecode

* encode path

* Fix checks

* Revert urlencode changes

* Urlencode with azure library

* Update docs/development/extensions-core/azure.md

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* PR changes

* Update docs/development/extensions-core/azure.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Deprecate AzureTaskLogsConfig.maxRetries

* Clean up azure retry block

* logic update to reuse clients

* fix comments

* Create container conditionally

* Fix key auth

* Remove container client logic

* Add some more testing

* Update comments

* Add a comment explaining client reuse

* Move logic to factory class

* use bom for dependency management

* fix license versions

---------

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>
Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2024-01-03T23:36:05Z
b8060fc93f80cc33b5cf371b1bcb37d1a6fa97c8,docs: Fix broken anchor links (#15621),2024-01-03T23:28:27Z
e40b96e0261cb8354ac04232870b9854c62a8b86,"Reverse lookup fixes and enhancements. (#15611)

* Reverse lookup fixes and enhancements.

1) Add a ""mayIncludeUnknown"" parameter to DimFilter#optimize. This is important
   because otherwise the reverse-lookup optimization is done improperly when
   the ""in"" filter appears under a ""not"", and the lookup extractionFn may return
   null for some possible values of the filtered column. The ""includeUnknown"" test
   cases in InDimFilterTest illustrate the difference in behavior.

2) Enhance InDimFilter#optimizeLookup to handle ""mayIncludeUnknown"", and to be able
   to do a reverse lookup in a wider variety of cases.

3) Make ""unapply"" protected in LookupExtractor, and move callers to ""unapplyAll"".
   The main reason is that MapLookupExtractor, a common implementation, lacks a
   reverse mapping and therefore does a scan of the map for each call to ""unapply"".
   For performance sake these calls need to be batched.

* Remove optimize call from BloomDimFilter.

* Follow the law.

* Fix tests.

* Fix imports.

* Switch function.

* Fix tests.

* More tests.",2024-01-03T21:28:44Z
050b515355937d7111d9027d3f8c3df3b4acbe11,Upgrade CodeQL from v2 to latest v3. (#15619),2024-01-03T19:31:53Z
01eec4a55e708205d45f004fe93ef1ddaecf3b30,"New handling for COALESCE, SEARCH, and filter optimization. (#15609)

* New handling for COALESCE, SEARCH, and filter optimization.

COALESCE is converted by Calcite's parser to CASE, which is largely
counterproductive for us, because it ends up duplicating expressions.
In the current code we end up un-doing it in our CaseOperatorConversion.
This patch has a different approach:

1) Add CaseToCoalesceRule to convert CASE back to COALESCE earlier, before
   the Volcano planner runs, using CaseToCoalesceRule.

2) Add FilterDecomposeCoalesceRule to decompose calls like
   ""f(COALESCE(x, y))"" into ""(x IS NOT NULL AND f(x)) OR (x IS NULL AND f(y))"".
   This helps use indexes when available on x and y.

3) Add CoalesceLookupRule to push COALESCE into the third arg of LOOKUP.

4) Add a native ""coalesce"" function so we can convert 3+ arg COALESCE.

The advantage of this approach is that by un-doing the CASE to COALESCE
conversion earlier, we have flexibility to do more stuff with
COALESCE (like decomposition and pushing into LOOKUP).

SEARCH is an operator used internally by Calcite to represent matching
an argument against some set of ranges. This patch improves our handling
of SEARCH in two ways:

1) Expand NOT points (point ""holes"" in the range set) from SEARCH as
   `!(a || b)` rather than `!a && !b`, which makes it possible to convert
   them to a ""not"" of ""in"" filter later.

2) Generate those nice conversions for NOT points even if the SEARCH
   is not composed of 100% NOT points. Without this change, a SEARCH
   for ""x NOT IN ('a', 'b') AND x < 'm'"" would get converted like
   ""x < 'a' OR (x > 'a' AND x < 'b') OR (x > 'b' AND x < 'm')"".

One of the steps we take when generating Druid queries from Calcite
plans is to optimize native filters. This patch improves this step:

1) Extract common ANDed predicates in ConvertSelectorsToIns, so we can
   convert ""(a && x = 'b') || (a && x = 'c')"" into ""a && x IN ('b', 'c')"".

2) Speed up CombineAndSimplifyBounds and ConvertSelectorsToIns on
   ORs with lots of children by adjusting the logic to avoid calling
   ""indexOf"" and ""remove"" on an ArrayList.

3) Refactor ConvertSelectorsToIns to reduce duplicated code between the
   handling for ""selector"" and ""equals"" filters.

* Not so final.

* Fixes.

* Fix test.

* Fix test.",2024-01-03T16:56:22Z
b0e52c99bbc248d54b43e5f06880a4c13be00383,"Fix ColumnSelectorColumnIndexSelector#getColumnCapabilities. (#15614)

* Fix ColumnSelectorColumnIndexSelector#getColumnCapabilities.

It was using virtualColumns.getColumnCapabilities, which only returns
capabilities for virtual columns, not regular columns. The effect of this
is that expression filters (and in some cases, arrayContainsElement filters)
would build value matchers rather than use indexes.

I think this has been like this since #12315, which added the
getColumnCapabilities method to BitmapIndexSelector, and included the same
implementation as exists in the code today.

This error is easy to make due to the design of virtualColumns.getColumnCapabilities,
so to help avoid it in the future, this patch renames the method to
getColumnCapabilitiesWithoutFallback to emphasize that it does not return
capabilities for regular columns.

* Make getColumnCapabilitiesWithoutFallback package-private.

* Fix expression filter bitmap usage.",2024-01-03T05:09:18Z
cfdea0685777841096947063fd648b1a280d83bb,"Fix `used_flag_last_updated` to `used_status_last_updated` in upgrade-notes.md (#15601)

* Fix `used_flag_last_updated` to `used_status_last_updated` in upgrade-notes.md

* Update docs/release-info/upgrade-notes.md

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>

---------

Co-authored-by: Benedict Jin <asdf2014@apache.org>
Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>",2024-01-03T03:48:07Z
f0f428274ac4e885efccdf6fc30df4ce8f4a5c19,"Prometheus config property doc fixup (#15613)

* Minor fixes

* Update docs/development/extensions-contrib/prometheus.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2024-01-03T00:28:42Z
9c7d7fc77748a6b8534f1ec3c36e226c63f8cfe7,"Allow empty inserts and replaces in MSQ. (#15495)

* Allow empty inserts and replace.

- Introduce a new query context failOnEmptyInsert which defaults to false.
- When this context is false (default), MSQE will now allow empty inserts and replaces.
- When this context is true, MSQE will throw the existing InsertCannotBeEmpty MSQ fault.
- For REPLACE ALL over an ALL grain segment, the query will generate a tombstone spanning eternity
which will be removed eventually be the coordinator.
- Add unit tests in MSQInsertTest, MSQReplaceTest to test the new default behavior (i.e., when failOnEmptyInsert = false)
- Update unit tests in MSQFaultsTest to test the non-default behavior (i.e., when failOnEmptyInsert = true)

* Ignore test to see if it's the culprit for OOM

* Add heap dump config

* Bump up -Xmx from 1500 MB to 2048 MB

* Add steps to tarball and collect hprof dump to GHA action

* put back mx to 1500MB to trigger the failure

* add the step to reusable unit test workflow as well

* Revert the temp heap dump & @Ignore changes since max heap size is increased

* Minor updates

* Review comments

1. Doc suggestions
2. Add tests for empty insert and replace queries with ALL grain and limit in the
   default failOnEmptyInsert mode (=false). Add similar tests to MSQFaultsTest with
   failOnEmptyInsert = true, so the query does fail with an InsertCannotBeEmpty fault.
3. Nullable annotation and javadocs

* Add comment
	replace_limit.patch",2024-01-02T21:05:51Z
8505e8a9092a55354ac318fd4da8f4ee73834ffc,"Provide default implementation for RowFunction evalDimension method (#15452)

The PR: #13947 introduced a function evalDimension() in the interface RowFunction.
There was no default implementation added for this interface which causes all the implementations and custom transforms to fail and require to implement their own version of evalDimension method. This PR adds a default implementation in the interface which allows the evalDimension to return value as a Singleton array of eval result.",2024-01-02T05:44:23Z
a5e9b14be0e4968358f1153d673c7c9a53ad6c70,"Add delay before the peon drops the segments after publishing them (#15373)

Currently in the realtime ingestion (Kafka/Kinesis) case, after publishing the segments, upon acknowledgement from the coordinator that the segments are already placed in some historicals, the peon would unannounce the segments (basically saying the segments are not in this peon anymore to the whole cluster) and drop the segments from cache and sink timeline in one shot.

The in transit queries from the brokers that still thinks the segments are in the peon can get a NullPointer exception when the peon is unsetting the hydrants in the sinks.

The fix would let the peon to wait for a configurable delay period before dropping segments, remove segments from cache etc after the peon unannounce the segments.

This delayed approach is similar to how the historicals handle segments moving out.",2024-01-02T05:38:28Z
cce539495d38536807cac57054209bb0e9a2f1c8,"[Flaky test] Fix basic auth integration test (#15561)

Database slowness while doing audits seems to be causing flakiness in auth ITs.

The failing test is almost always
`ITBasicAuthConfigurationTest.test_avaticaQuery_datasourceAndContextParamsUser`
but in some rare cases, other tests fail too. Alternately, this failing test has been seen to pass too.

It is most likely because the auth changes are not able to propagate in time from
the coordinator to other services.

Fix: Just log the audits rather than persisting them to database.
Most audits have been newly added and it is okay to not have them persisted.
Moreover, logging audits can also be more beneficial while debugging an IT.",2023-12-23T06:41:12Z
a2e65e6a89fd7b85b84f89b7fd7e7f5721bb05f7,"Support to pass dynamic values to timestamp Extract function (#15586)

Fixes #15072

Before this modification , the third parameter (timezone) require to be a Literal, it will throw a error when this parameter is column Identifier.",2023-12-21T06:27:52Z
8a45efbf65f3abbbc42324b7cb858a3b61aa0818,fix some null handling bugs with vector expression processors (#15587),2023-12-19T16:14:17Z
9f568858efbf11175fed4633aaeb05237fa119dc,"Add logging implementation for AuditManager and audit more endpoints (#15480)

Changes
- Add `log` implementation for `AuditManager` alongwith `SQLAuditManager`
- `LoggingAuditManager` simply logs the audit event. Thus, it returns empty for
all `fetchAuditHistory` calls.
- Add new config `druid.audit.manager.type` which can take values `log`, `sql` (default)
- Add new config `druid.audit.manager.logLevel` which can take values `DEBUG`, `INFO`, `WARN`.
This gets activated only if `type` is `log`.
- Remove usage of `ConfigSerde` from `AuditManager` as audit is not just limited to configs
- Add `AuditSerdeHelper` for a single implementation of serialization/deserialization of
audit payload and other utility methods.",2023-12-19T07:44:04Z
e373f6269251655f5be93ce895aee8dee8cc67dd,"fix expression post aggregator array handling when grouping wrapper types leak (#15543)

* fix expression post aggregator array handling when grouping wrapper types leak
* more consistent expression function error messaging",2023-12-16T05:43:27Z
90af71b371cbe0605e0d2775782477cd465620d2,"router.sh is missing in Druid Distribution (#15547)

Every time we roll out a new version of Druid on our cluster, I recognize that the script for starting the router process is missing. So I added it =)",2023-12-15T18:42:04Z
fa2c8edb5d08c1b77c502bef532bd3433118570a,"unpin snakeyaml, add suppressions and licenses (#15549)

* unpin snakeyaml globally, add suppressions and licenses
* pin snakeyaml in the specific modules that require version 1.x, update licenses and owasp suppression

This removes the pin of the Snakeyaml introduced in:  https://github.com/apache/druid/pull/14519
After the updates of io.kubernetes.java-client and io.confluent.kafka-clients, the only uses of the Snakeyaml 1.x are:
- in test scope, transitive dependency of jackson-dataformat-yaml:jar:2.12.7
- in compile scope in contrib extension druid-cassandra-storage
- in compile scope in it-tests. 

With the dependency version un-pinned, io.kubernetes.java-client and io.confluent.kafka-clients bring Snakeyaml versions 2.0 and 2.2, consequently allowing to build a Druid distribution without the contrib-extension and free of vulnerable Snakeyaml versions.",2023-12-15T18:33:14Z
901ebbb744501252726e5d6c86541f1c6d46c131,"Allow for kafka emitter producer secrets to be masked in logs  (#15485)

* Allow for kafka emitter producer secrets to be masked in logs instead of being visible

This change will allow for kafka producer config values that should be secrets to not show up in the logs.
This will enhance the security of the people who use the kafka emitter to use this if they want to.
This is opt in and will not affect prior configs for this emitter

* fix checkstyle issue

* change property name",2023-12-15T17:21:21Z
da6b3cbc5117632dd736f66b815f39488e86ddd1,Detect EXPLAIN PLAN queries in web-console (#15570),2023-12-15T17:12:03Z
7552dc49fb7937b4de2ef26e9857b8d26003e4cc,"Reduce amount of expression objects created during evaluations (#15552)

I was looking into a query which was performing a bit poorly because the case_searched was touching more than 1 columns (if there is only 1 column there is a cache based evaluator).
While I was doing that I've noticed that there are a few simple things which could help a bit:

use a static TRUE/FALSE instead of creating a new object every time
create the ExprEval early for ConstantExpr -s (except the one for BigInteger which seem to have some odd contract)
return early from type autodetection
these changes mostly reduce the amount of garbage the query creates during case_searched evaluation; although ExpressionSelectorBenchmark shows some improvements ~15% - but my manual trials on the taxi dataset with 60M rows showed more improvements - probably due to the fact that these changes mostly only reduce gc pressure.",2023-12-15T10:41:59Z
c9be1cb4e84f15724a3d881fccc80e3b2432c0d5,"Clean useless InterruptedException warn in ingestion task log (#15519)

* Clean useless InterruptedException warn in ingestion task log

* test coverage for the code change, manually close the scheduler thread to trigger Interrupt signal

---------

Co-authored-by: Qiong Chen <qiong.chen@shopee.com>",2023-12-15T03:18:53Z
9deeb288c5af8c082a67e31331e375714a8ce7f0,Update labeler config per v5 spec. (#15564),2023-12-14T19:00:21Z
7fa987dae9240803dd371ebea14142dddf7f84f7,Update labeler to v5 that includes fix where bot doesn't remove labels added by maintainers. (#15558),2023-12-14T17:10:26Z
feeb4f0fb03fce90e523c7e1c10e71a19478400c,"Allocate pending segments at latest committed version (#15459)

The segment allocation algorithm reuses an already allocated pending segment if the new allocation request is made for the same parameters:

datasource
sequence name
same interval
same value of skipSegmentLineageCheck (false for batch append, true for streaming append)
same previous segment id (used only when skipSegmentLineageCheck = false)
The above parameters can thus uniquely identify a pending segment (enforced by the UNIQUE constraint on the sequence_name_prev_id_sha1 column in druid_pendingSegments metadata table).

This reuse is done in order to

allow replica tasks (in case of streaming ingestion) to use the same set of segment IDs.
allow re-run of a failed batch task to use the same segment ID and prevent unnecessary allocations",2023-12-14T10:48:39Z
e43bb74c3af67a8ac2d52a17aee91a47d735c027,"Add MSQ Durable Storage Connector for Google Cloud Storage and change current Google Cloud Storage client library (#15398)

The PR addresses 2 things:

    Add MSQ durable storage connector for GCS
    Change GCS client library from the old Google API Client Library to the recommended Google Cloud Client Library. Ref: https://cloud.google.com/apis/docs/client-libraries-explained",2023-12-14T02:04:49Z
0436edae0cb768f65bfd7ad35e4305d362b264a3,"fix rat and checkstyle issue (#15530)

* fix rat and checkstyle issue

* remove all checks for generated-sources and generated-test-sources",2023-12-14T01:33:01Z
3e15522d6b3200540841f456d918921811fff328,Round works correctly on system metadata columns (#15554),2023-12-14T01:23:14Z
81fe855b6ff0fd8a81fc9ca02a3e1e5061e14f21,Update com.github.eirslett to fix bad zip issue (#15556),2023-12-14T01:22:54Z
e55f6b6202b9d1fa7d197c22871774c40d12132d,"remove search auto strategy, estimateSelectivity of BitmapColumnIndex (#15550)

* remove search auto strategy, estimateSelectivity of BitmapColumnIndex

* more cleanup",2023-12-14T00:30:01Z
f770eeb8be665a7e38170ecd9effdc3c4c36258a,"Web console: Update webpack-dev-server v3 to v4 (#15555)

* init

* update usage

* revert licenses.yaml

* move the audience-annotations outside of the web console block",2023-12-14T00:16:54Z
857693f5cf8e48fdfd02ef111ca7f7f739fbf558,"Decorate sampling response with system fields if specified (#15536)

* * decorate sampling response with system fields if specified

* * add unit test",2023-12-13T20:16:59Z
f32dbd41311c3d2ac8c781070c354c12ed462104,"Upgrade pac4j-oidc to 4.5.7 to address CVE-2021-44878 (#15522)

* Upgrade org.pac4j:pac4j-oidc to 4.5.5 to address CVE-2021-44878
* add CVE suppression and notes, since vulnerability scan still shows this CVE
* Add tests to improve coverage",2023-12-13T18:44:05Z
4670a7650fb0665bcad9c579019c35f3641af810,"Optional removal of metrics from Prometheus PushGateway on shutdown (#14935)

* Optional removal of metrics from Prometheus PushGateway on shutdown

* Make pushGatewayDeleteOnShutdown property nullable

* Add waitForShutdownDelay property

* Fix unit test

* Address PR comments

* Address PR comments

* Add explanation on why it is useful to have deletePushGatewayMetricsOnShutdown

* Fix spelling error

* Fix spelling error",2023-12-13T16:58:53Z
8bc7a5f3ac0c0e1b72ce74810f214bc80866178f,"Move codeql-config.yml out of the workflows folder (#15553)

Move codeql config file out of the workflows folder so github doesn't try
to run it and fail the github workflow run every time a branch is updated.",2023-12-13T16:37:01Z
48a96f5d06bf4b4d1532b0ec96eb631b4287e30d,"Better automatic offset reset for Kinesis ingestion (#15338)

Better automatic offset reset for Kinesis ingestion",2023-12-13T06:33:17Z
4ec9a0a7f7d7212c2325950ba4c439fb0cde95fa,"Update Druid version in Tag in pom.xml (#15545)

This PR updates the tag present in pom.xml to match the druid version in pom.xml
This was last updated in 0da8ffc
It seems to me like this was missed in further Druid version upgrades.",2023-12-13T04:18:30Z
3c7dec56ca274ea411e0aee780e42f84627c55a3,"update kubernetes java client to 19.0.0 and docker-java to 3.3.4 (#15449)

Update of direct dependencies:
* kubernetes java-client to 19.0.0
* docker-java-bom to 3.3.4

In order to update transitive dependencies:
* okio to 3.6.0
* bcjava to 1.76

To address CVES:
- CVE-2023-3635 in okio
- CVE-2023-33201 in bcjava

---------

Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-12-12T22:27:57Z
debb6b401c730b73420a64947346c7d5d793d0ce,"update core Apache Kafka dependencies to 3.6.1 (#15539)

Release notes: https://downloads.apache.org/kafka/3.6.1/RELEASE_NOTES.html",2023-12-12T22:24:57Z
38f3cf9e65ea49ae017747b7d3351fe7b7a188fe,Fixing a case where datatype mismatch was happenning in join (#15541),2023-12-12T20:50:32Z
91ca8e73d6d1da8dad086932d8f75bb01fea556d,"Skip compaction for datasources with partial-eternity segments (#15542)

This PR builds on #13304 to skip compaction for datasources with segments that have their interval start or end coinciding with Eternity interval end-points.

This is needed in order to prevent an issue similar to #13208 as the Coordinator tries to iterate over a large number of intervals when trying to compact an interval with infinite start or end.",2023-12-12T09:36:45Z
8735d023a1405dd071da921d12c14994b9733597,"Add experimental support for first/last for double/float/long #10702 (#14462)

Add experimental support for doubleLast, doubleFirst, FloatLast, FloatFirst, longLast and longFirst.",2023-12-12T06:06:51Z
85af2c8340360b5a28bbcaece1c73e968b32cc65,only create used and unused segments once to make the test faster (#15533),2023-12-12T04:01:04Z
e8fcf2cac83afd37789b5c5c3c02bf7dbf500871,minor doc adjustments (#15531),2023-12-12T02:22:44Z
6f7804976075b9c45e66b0886ef66a15d91ce29e,"remove references to non-existant website maven module (#15540)

The website pom was removed as part of
https://github.com/apache/druid/pull/14411 so we no longer need to
reference it as a module and the profile can be removed.

Dependabot is currently failing trying to look for this module, so
removing it should also fix that.",2023-12-12T00:58:35Z
ab7d9bc6ecf0dbb39c0eaf5b807829c019c6aca7,"Add api for Retrieving unused segments (#15415)

### Description

This pr adds an api for retrieving unused segments for a particular datasource. The api supports pagination by the addition of `limit` and `lastSegmentId` parameters. The resulting unused segments are returned with optional `sortOrder`, `ASC` or `DESC` with respect to the matching segments `id`, `start time`, and `end time`, or not returned in any guarenteed order if `sortOrder` is not specified

`GET /druid/coordinator/v1/datasources/{dataSourceName}/unusedSegments?interval={interval}&limit={limit}&lastSegmentId={lastSegmentId}&sortOrder={sortOrder}`

Returns a list of unused segments for a datasource in the cluster contained within an optionally specified interval.
Optional parameters for limit and lastSegmentId can be given as well, to limit results and enable paginated results.
The results may be sorted in either ASC, or DESC order depending on specifying the sortOrder parameter.

`dataSourceName`: The name of the datasource
`interval`:                 the specific interval to search for unused segments for.
`limit`:                      the maximum number of unused segments to return information about. This property helps to
                                 support pagination
`lastSegmentId`:     the last segment id from which to search for results. All segments returned are > this segment 
                                 lexigraphically if sortOrder is null or ASC, or < this segment lexigraphically if sortOrder is DESC.
`sortOrder`:            Specifies the order with which to return the matching segments by start time, end time. A null
                                value indicates that order does not matter.

This PR has:

- [x] been self-reviewed.
   - [ ] using the [concurrency checklist](https://github.com/apache/druid/blob/master/dev/code-review/concurrency.md) (Remove this item if the PR doesn't have any relation to concurrency.)
- [x] added documentation for new or modified features or behaviors.
- [ ] a release note entry in the PR description.
- [x] added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.
- [ ] added or updated version, license, or notice information in [licenses.yaml](https://github.com/apache/druid/blob/master/dev/license.md)
- [x] added comments explaining the ""why"" and the intent of the code wherever would not be obvious for an unfamiliar reader.
- [x] added unit tests or modified existing tests to cover new code paths, ensuring the threshold for [code coverage](https://github.com/apache/druid/blob/master/dev/code-review/code-coverage.md) is met.
- [ ] added integration tests.
- [x] been tested in a test Druid cluster.",2023-12-11T21:32:18Z
4152f1d1471e68417bc0a9b92f5c230a5f771d11,"Fix empty logs and status messages for mmless ingestion (#15527)

* Fix empty logs and status messages for mmless ingestion

* Add tests",2023-12-11T18:20:45Z
fc222377ae8042785d7cef42c6b628819d51b2d8,[Docs] Document decode_base64_complex and decode_base64_utf8 functions (#15444),2023-12-11T17:12:06Z
96be82a3e67bb3fdb62d0640c0c8885f7f5813b0,"Clean up duty for non-overlapping eternity tombstones (#15281)

* Add initial draft of MarkDanglingTombstonesAsUnused duty.

* Use overshadowed segments instead of all used segments.

* Add unit test for MarkDanglingSegmentsAsUnused duty.

* Add mock call

* Simplify code.

* Docs

* shorter lines formatting

* metric doc

* More tests, refactor and fix up some logic.

* update javadocs; other review comments.

* Make numCorePartitions as 0 in the TombstoneShardSpec.

* fix up test

* Add tombstone core partition tests

* Update docs/design/coordinator.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* review comment

* Minor cleanup

* Only consider tombstones with 0 core partitions

* Need to register the test shard type to make jackson happy

* test comments

* checkstyle

* fixup misc typos in comments

* Update logic to use overshadowed segments

* minor cleanup

* Rename duty to eternity tombstone instead of dangling. Add test for full eternity tombstone.

* Address review feedback.

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-12-11T16:57:15Z
099a9825d16afc2d41cb68322a274a7f9ae80580,"[Docs] Add a release notes template (#15333)

* Add release notes template

* Update spellcheck",2023-12-11T06:05:16Z
42f2496b7d1828b56324fd58ff03fd47b3a39e23,fix bug with nested empty array fields (#15532),2023-12-09T20:20:21Z
54df2350261885053f842233686761da6e947aaa,"Lazily build Filter in FilteredAggregatorFactory to avoid parsing exceptions in Router (#15526)

Query with lookups in FilteredAggregator fails with this exception in router,

Cannot construct instance of `org.apache.druid.query.aggregation.FilteredAggregatorFactory`, problem: Lookup [campaigns_lookup[campaignId][is_sold][autodsp]] not found at [Source: (org.eclipse.jetty.server.HttpInputOverHTTP); line: 1, column: 913] (through reference chain: org.apache.druid.query.groupby.GroupByQuery[""aggregations""]->java.util.ArrayList[1])
T
he problem is that constructor of FilteredAggregatorFactory is actually validating if the lookup exists in this statement dimFilter.toFilter().
This is failing on the router, which is to be expected, because, the router isn’t assigned any lookups.
The fix is to move to a lazy initialisation of the filter object in the constructor.",2023-12-09T06:48:37Z
e7c8f2e20832d26d19748674b5ceb77fbcc63274,lift restriction of array_to_mv to only support direct column access (#15528),2023-12-09T00:27:17Z
e68979e03be2ff6b453aa5a5e761a677e64ff041,"Docs: update SQL API reference (#15515)

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-12-08T19:53:19Z
355c800108be323ec986589123383709bf4652df,"Revamp design page (#15486)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-12-08T19:40:24Z
ca4ecdf7d0ece4ebaa6b835a1d32303557415a16,"Fixing NPE with virtual expression with unnest (#15513)

* Fixing NPE with virtual expression with unnest

* Fixing a comment",2023-12-08T18:51:56Z
e64b92eb35119a0cd404d6a4e93054ce0df2b234,add JSON_QUERY_ARRAY function to pluck ARRAY<COMPLEX<json>> out of COMPLEX<json> (#15521),2023-12-08T13:28:46Z
2e45eadc08a4cceab399e92a4f652efbce8f4db5,"Add better error messages for using OVERWRITE with INSERT statments (#15517)

* Add better error messages for using OVERWRITE with INSERT statments",2023-12-08T10:03:46Z
c353ccfdeff39dae99e1ebe5ce34bbacc7dd083f,Windowed min aggregates null-s as 0 (#15371),2023-12-08T09:41:16Z
1eafe983eca409bdc5100a97797f542e08545a8b,"fix array presenting columns to not match single element arrays to scalars for equality (#15503)

* fix array presenting columns to not match single element arrays to scalars for equality
* update docs to clarify usage model of mixed type columns",2023-12-08T09:22:07Z
5fda8613ad6298b3e186fd22a4849a4bdd5838e9,Feature: Add IPv6 Match Function (#15212),2023-12-08T07:09:06Z
254a8eb7e0c04eb8e6fe2c5d5950913faf821be2,"Add null checks for HllSketchHolder (#15502)

Fixes a potential NPE which could occur while folding the HllSketchAggregator. If the sketch is null, druid could return a null HllSketchHolder object. Adding a null check here could help here

Resolves a null pointer exception in HllSketchAggregatorFactory",2023-12-08T06:13:04Z
935aa187a0b2c3ccacb1cf1289818428913ebc40,"add Assert function to verify in the DataGeneratorTest (#15504)

* add Assert function to verify in the DataGeneratorTest

* remove unused log in DataGeneratorTest

* add comment for DataGeneratorTest",2023-12-08T01:12:17Z
db3a6332502b0a5643d39377600f582f5997a4df,"update timeseries to reflect NULL filling (#15512)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-12-07T22:41:27Z
c241c6980c9e5e656da252649afb9cb5d01d31a7,store auto columns with only empty or null containing arrays as ARRAY<LONG> instead of COMPLEX<json> (#15505),2023-12-07T11:31:43Z
801967b75fa9ee8a2dd508c06e043dbfbbb15a6e,"Add test logs zipping and archival steps for failures in Static Checks Github Actions (#15506)

Add test logs zipping and archival steps for failures in Static Checks Github Actions",2023-12-07T10:04:23Z
b541000d43e39cd7aacde25f546d4dbce954f2d3,Bump up max heap memory for unit tests from 1.5 GB to 2 GB. (#15507),2023-12-07T10:04:04Z
82ac48786b9289e0a17fcdd28204042ff9677938,document arrayContainsElement filter (#15455),2023-12-07T08:14:00Z
557f3f6f57df8ff5042b86d098ec356c77e426ad,add array column type support to EXTEND operator (#15458),2023-12-07T07:21:35Z
fea53c7084ba07aefb7486c4935f4eac94783065,Re-arranging sections for append and replace docs. (#15497),2023-12-06T21:13:05Z
6a64f72c6798a6939106c5b39c5da6838e7240fb,"Lookup on incomplete partition set in SegmentMetadataQuerySegmentWalker (#15496)

Description
With CentralizedDatasourceSchema (#14989) feature enabled, metadata for appended segments was not being refreshed. This caused numRows to be 0 for the new segments and would probably cause the datasource schema to not include columns from the new segments.

Analysis
The problem turned out in the new QuerySegmentWalker implementation in the Coordinator. It first finds the segment to be queried in the Coordinator timeline. Then it creates a new timeline of the segments present in the timeline.
The problem was that it is looking up complete partition set in the new timeline. Since the appended segments by themselves do not make a complete partition set, no SegmentMetadataQuery were executed.",2023-12-06T09:55:28Z
6f51155ccb7bcb375daca63b06aac3909fe15b04,"Fix NullFilter getDimensionRangeSet. (#15500)

It wasn't checking the column name, so it would return a domain regardless
of the input column. This means that null filters on data sources with range
partitioning would lead to excessive pruning of segments, and therefore
missing results.",2023-12-06T09:39:59Z
f4949afdd7375f622b2b90c64a034a9411623260,clarify and fixup typos related to unused segments in docs and javadocs. (#15498),2023-12-06T06:30:32Z
ae6893edc3c5d820470d23384283924847969ca4,"unpin guava related dependabot dependencies (#15494)

Several dependabot ignore directives are no longer relevant. Unpin them
to ensure we get again get timely updates via dependabot.

* support for Hadoop 2 was dropped as part of #14763
* Guava was upgraded to 31 as part of #14767
* Calcite was upgraded to 1.35 as part of #14510",2023-12-06T00:04:39Z
0b41b05aa04fe8102bcf75a8215711bfd8ce2f6d,"Web console: Update and prune dependancies (#15487)

* update the basics
* remove babel",2023-12-05T22:25:07Z
aa696b031041efbb855783361eecebc2cac2f7c6,Web console: Log out any request errors in e2e tests for better CI debugging (#15483),2023-12-05T22:23:47Z
82e3c61514a3e49661a0404414222d184d3fc89e,"Update lookup model in console (#15472)

* Update lookup model in console

* ran prettify

* move Defaults to info

* setting defaultValue and removing placeholder",2023-12-05T21:22:22Z
ff0e838d309cfb3d45b460335d078215a109a9cf,"add gson to dependencyManagement (#15488)

This change completes the change introduced in #15461
and unifies the version of gson dependency used between all the modules.

gson is used by kubernetes-extension, avro-extensions, ranger-security,
and as a test dependency in several core modules.

---------

Co-authored-by: Xavier Léauté <xl+github@xvrl.net>",2023-12-05T19:50:32Z
0e14a2c77f164a61851a42f87aee439cbfd95906,Update retention rules doc (#15439),2023-12-05T17:53:17Z
f4856bc1c1d96e080bcfbb3b8d869598b3802522,"ranger-security: exclude jackson-jaxrs from + fix outdated documentation (#15481)

* Excluding jackson-jaxrs dependency from ranger-plugin-common to address CVE regression introduced by ranger-upgrade: CVE-2019-10202, CVE-2019-10172
* remove the reference to outdated ranger 2.0 from the docs

---------

Co-authored-by: Xavier Léauté <xl+github@xvrl.net>",2023-12-05T16:24:37Z
77b929f494f12164fa0410e81c845b08231311ac,Fix CentralizedDatasourceSchema IT (#15493),2023-12-05T14:35:13Z
326b7b731dd9c068645fd918571b52f46782a61b,"Upgrade zookeeper from 3.5.10 to 3.8.3 (#15477)

Upgrade zookeeper from 3.5.10 to 3.8.3",2023-12-05T13:27:56Z
d968bb3f43f904c1db28e1d1c7831c0dc94e9970,"Rename config for enabling CentralizedDatasourceSchema feature (#15476)

* Rename property to druid.centralizedDatasourceSchema.enabled
* Update config name in docker-compose",2023-12-05T11:27:25Z
a469c53c0c8bc96171eb27eeda50fdcfc380ea27,"cleanup already resolved CVEs (#15447)

Remove the crud from the dependency-check suppression file",2023-12-05T05:00:35Z
b66d995e6fd9da3db571eae9d355bf06188880ff,"remove licenses of removed libraries, update the license checker  (#15446)

- Licenses file contains several licenses for outdated libraries. In this PR we remove licenses for no longer used components. 
  This change is purely cosmetic / cleans up the license database. 
  The candidates were designated by reviewing the output of the license check script and comparing it against the depdency tree.

 - Minor fix to license check tool to fail more gracefully when the license of used dependency is not listed as known, as well as fix not to fail on multi licensed components when at least one of the licenses is accepted. 

---------

Co-authored-by: Xavier Léauté <xl+github@xvrl.net>",2023-12-04T21:20:40Z
8cc256b07984a3571dc073be792256674c82d803,"update guava to 32.0.1-jre to address CVEs (#15482)

Update guava to 32.0.1-jre to address two CVEs: CVE-2020-8908, CVE-2023-2976
This change requires a minor test change to remove assumptions about ordering.

---------

Co-authored-by: Xavier Léauté <xl+github@xvrl.net>",2023-12-04T21:18:42Z
3d3d23c53ff4db62e033fc370fd01e90074bc6a4,run npm audit fix to update JS packages (#15466),2023-12-04T21:17:24Z
ddd2299272fab5d6e1fcace796f42c9a5050e1be,Add null check for VarianceAggregatorCollector,2023-12-04T16:56:44Z
ddeb55fac1148489d6b35eca912e6a92035b3342,"update few minor dependencies to resolve CVEs (#15464)

Update multiple dependencies to clear CVEs
Update dropwizard-metrics to 4.2.22 to address GHSA-mm8h-8587-p46h in com.rabbitmq:amqp-client
Update ant to 1.10.14 to resolve GHSA-f62v-xpxf-3v68 GHSA-4p6w-m9wc-c9c9 GHSA-q5r4-cfpx-h6fh GHSA-5v34-g2px-j4fw
Update comomons-compress to resolve GHSA-cgwf-w82q-5jrr
Update jose4j to 0.9.3 to resolve GHSA-7g24-qg88-p43q GHSA-jgvc-jfgh-rjvv
Update kotlin-stdlib to 1.6.0 to resolve GHSA-cqj8-47ch-rvvq and CVE-2022-24329",2023-12-04T03:19:51Z
a1aa4340d0f71d456ed21ef39e55aa4a88ffa884,"Changing the queryFrameWork in Calcite*Tests may have sideeffects (#15428)

changes how its configured a bit to use an annotation instead of methods",2023-12-03T19:08:01Z
b85405849108feb8f80bbbcb47ef1343bd32a431,"remove unnecessary elasticsearch dependencies to fix CVE regressions (#15443)

Recent upgrade of ranger introduced CVE regressions due to outdated elasticsearch components.
Druid-ranger-plugin does not elasticsearch components , and they have been explicitly removed.

Update woodstox-core to 6.4.0 to address GHSA-3f7h-mf4q-vrm4",2023-12-03T15:26:40Z
4a594bb9f6ab89eabda5db654a9d215633340c66,"Use task actions to fetch used segments in MSQ (#15284)

* Use task actions to fetch used segments in MSQ

* Fix tests

* Fixing tests.

* Revert ""Fix tests""

This reverts commit 95ab6494

* Removing conditional check in tests.

* Pulling in latest changes.

---------

Co-authored-by: cryptoe <karankumar1100@gmail.com>",2023-12-01T09:59:33Z
9f3b26676d30f90599a7d55e43549617e0cee082,Log full stack when exception message is null (#15467),2023-12-01T00:47:37Z
f8bd3b0b7e7abef73c2b73bd28fd44e715416348,"Web console: fix tab duplication (#15457)

* fix duplication

* includeFuture defaults to true",2023-11-30T16:29:56Z
7467d2c00d56793a03844252e43aaf5b631856b9,"Upgrade Jackson and Google GSON to address CVEs (#15461)

Upgrade Jackson to version 2.12.7.1 to address CVE-2022-42003, CVE-2022-42004 which affects jackson-databind.
Upgrade com.google.code.gson:gson from 2.2.4 to the latest version (2.10.1) since 2.2.4 is affected by CVE-2022-25647.",2023-11-30T10:01:26Z
8ddb847658813ee6445f86cfce51aae4f65d3d15,Fix message when skipping compaction (#15460),2023-11-30T09:27:13Z
31fa63e7894e7e18bcaec7c98f27ef4d71b6fbfe,"Web console: better management proxy detection (#15453)

* better management proxy detection

* fix checkstyle issue

* add test

* test should read the body also

* use ObjectMapper

* assert read ammount",2023-11-30T05:43:42Z
74ab6024e190c781585ef0969a27dda932103d85,"Native doc update (#15456)

Updating the native docs for #15434",2023-11-30T05:07:23Z
5ce4aab3b8b189b718ee33fb281889e6c4c21c9c,"update ARRAY_OVERLAP to plan with ArrayContainsElement for ARRAY columns (#15451)

Updates ARRAY_OVERLAP to use the same ArrayContainsElement filter added in #15366 when filtering ARRAY typed columns so that it can also use indexes like ARRAY_CONTAINS.",2023-11-30T04:35:20Z
0516d0dae432058848806e49e71ac73333bf751c,simplify IncrementalIndex since group-by v1 has been removed (#15448),2023-11-29T22:46:16Z
93cd63864581b16d6b9407723541616a7465da68,"Enabling aggregateMultipleValues in all StringAnyAggregators (#15434)

* Enabling aggregateMultipleValues in all StringAnyAggregators

* Adding more tests

* More validation

* fix warning

* updating asserts in decoupled mode

* fix intellij inspection

* Addressing comments

* Addressing comments

* Adding early validations and make aggregate consistent across all

* fixing tests

* fixing tests

* Update docs/querying/sql-aggregations.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* fixing static check

---------

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2023-11-29T22:32:49Z
64fcb32bcfdf4586012c7ee29e057070aa46aeb6,"add native 'array contains element' filter (#15366)

* add native arrayContainsElement filter to use array column element indexes",2023-11-29T11:33:00Z
0a56c87e93898bde2d0fb4ffafdbd793834632da,"SQL: Plan non-equijoin conditions as cross join followed by filter (#15302)

This PR revives #14978 with a few more bells and whistles. Instead of an unconditional cross-join, we will now split the join condition such that some conditions are now evaluated post-join. To decide what sub-condition goes where, I have refactored DruidJoinRule class to extract unsupported sub-conditions. We build a postJoinFilter out of these unsupported sub-conditions and push to the join.",2023-11-29T08:16:11Z
ee6ad36fab2a7ec23cfa8f59ca86392b22addf8b,"update confluent's dependencies to common, supported version (#15441)

* update confluent's dependencies to common, supported version

  Update io.confluent.* dependencies to common, updated version 6.2.12
currently used versions are EOL

* move version definition to the top level pom",2023-11-29T05:35:22Z
97623b408c52754cfd5a6f97b3b54e1919f6ed18,"add optional 'castToType' parameter to 'auto' column schema (#15417)

* auto but.. with an expected type",2023-11-29T01:19:23Z
3d1d26f8240b983a57e0c620a5a1620f34bf9733,"Fix mmless ingestion and index tasks (#15372)

* Fix mmless ingestion and index tasks

* Move comment

* remove dup test",2023-11-28T15:06:07Z
eb056e23b5e7d9ff2b1ffc3d8731c818eae4fade,"Fix dictionarySize overrides in tests (#15354)

I think this is a problem as it discards the false return value when the putToKeyBuffer can't store the value because of the limit

Not forwarding the return value at that point may lead to the normal continuation here regardless something was not added to the dictionary like here",2023-11-28T13:19:09Z
a929b9f16e42b88cb1869f2cb9a04814edcefdd5,clafiry DISTINCT is optional for COUNT() (#15394),2023-11-28T11:22:16Z
bd6afb7056610a060cd8d85746436763345b92de,time shift literals also (#15433),2023-11-28T11:12:35Z
eb6b9cb4a9d02324191a028fbe96b2dc37decf69,"Update publishing readme (#15406)

This updates the prod section of the release readme for the website steps. Previously, only staging was updated",2023-11-28T10:11:19Z
b102667695c04c39e62ccd44f6c7c5d952a3c975,[Docs] Add example connection parameters for Java APIs (#15345),2023-11-28T09:39:41Z
7a8204db72c82f1ce120b5d4fb316acd8b51e622,Upgrade Avro to 1.11.3 to address CVE-2023-39410 (#15419),2023-11-28T08:39:48Z
ca544e552cfa6861c4488e18da3f3c72418447e2,"Add option to compare results with relative error tolerance (#15429)

Adds a result comparision mode of EQUALS_RELATIVE_1000_ULPS ; which accepts floating point differences up-to 1000 units of least precision",2023-11-28T07:33:16Z
58a724c7e40f4b36fb0a8b0b957214ef9a6219c0,"Use StubServiceEmitter in tests (#15426)

* Use StubServiceEmitter in tests
* Remove unthrown exception from declaration",2023-11-28T04:13:09Z
c8eb7adeb9bb170e2bfe7879c23f42b72d263876,"Improved web-console's time-chart brush and added auto-granularity (#14990)

* Improved time-chart brush and added auto-granularity

* prettier

* added highlight bubble to explore visualizations

* Added licenses and fixes from PR review

* added missing files...",2023-11-27T20:15:47Z
a0188192de9804e272fd83fa86fec8a7034caa4b,"Fixing failing compaction/parallel index jobs during upgrade due to new actions being available on the overlord.  (#15430)

* Fixing failing compaction/parallel index jobs during upgrade due to new actions not available on the overlord.

* Fixing build

* Removing extra space.

* Fixing json getter.

* Review comments.",2023-11-25T08:20:29Z
67c7b6248cfead7b9ab6950e13cc33583dbf8b88,"Fix log typos, clean up some kill messages in SeekableStreamSupervisor (#15424)

Changes:
- Fix log `Got end of partition marker for partition [%s] from task [%s] in discoverTasks`
by fixing order of args
- Simplify in-line classes by using lambda
- Update kill task message from `Task [%s] failed to respond to [set end offsets]
 in a timely manner, killing task` to `Failed to set end offsets, killing task`
- Clean up tests",2023-11-24T10:39:10Z
3113e7b3505a77d33f70b769b0e8b09c1c86cc5b,"Fix grouping aggregator when one of the dimension is a simple extraction (#15421)

This PR fixes an issue where the grouping aggregator wrongly assumes that a key dimension is a virtual column and assigns a wrong name to it. This results in a mismatch between the dimensions that grouping aggregator sees and the dimension names that rows are aggregated on. And finally, grouping aggregator generates wrong result.",2023-11-24T07:45:07Z
4ab0b71513132e6cef38483253aeaeacb84a15e7,"Fix missing task failure error message on Overlord caused by MessageBodyWriter not found error on Middle Manager (#15412)

Fixes missing task failure error message on Overlord.

The error message was missing since TaskManagementResource#assignTask API wasn't annotated with @Produces(MediaType.APPLICATION_JSON) resulting in the response being treated as application/octet-stream, that in turn lead to MessageBodyWriter not found error on the middle manager. The exception is not logged on the middle manager itself since it happens even before entering the assignTask function -- while mapping arg Task -> MSQControllerTask.",2023-11-24T06:05:56Z
75d6993da93a7459793048095d27c33031c463e2,"Suppress Hadoop and jose4j cve (#15425)

Changes
- Suppress CVE-2023-36478 as there is no newer Hadoop version available that addresses
- Suppress CVE-2023-31582 in jose4j. Pulled in by Kubernetes/Kafka but not addressed yet.",2023-11-24T03:55:10Z
386cdb95e797b3315ba2eab5b8449c4ac71e96ee,Fixes minor typo in kafka emitter (#15416),2023-11-23T08:49:39Z
c14cfc2a86f9f59310f215a53d329dcf27ce2a3c,"Patched security vulnerability by updating Ranger libraries to the ne… (#15363)

Patched security vulnerability by updating Ranger libraries to the newest available version.",2023-11-22T10:17:18Z
2f269fe065a77cbf1e2fb2a1a49775f1875abe65,"  Returning correct Response Code HTTP 429 when taskQueue reached maxSize (#15409)

Currently when we submit a task to druid and number of currently active tasks has already reached (druid.indexer.queue.maxSize) then 500 ISE is thrown as per shown in the screenshot in #15380.

This fix will return HTTP 429 Too Many Requests(with proper error message) instead of 500 ISE, when we submit a task and queueSize has reached.",2023-11-22T08:57:20Z
dff5bcb0a6c693e6fc8131e91c5029dbab132fa1,"Fix resultcache multiple postaggregation restore (#15402)

Fixes https://github.com/apache/druid/issues/15393",2023-11-21T10:28:20Z
1df53d6eb30a019fff69a5ff7533ebbd998a438d,"fix physical memory detection on OSX (#15405)

* fix physical memory detection on OSX

* typo",2023-11-21T07:19:11Z
4ba3cf52215443e30b7033252321d0ee98118333,"Add test to verify sequence name of Kafka task (#15397)

* Add test to verify sequence name of Kafka and Kinesis tasks",2023-11-21T04:47:32Z
3fa856b3ffbda8910ab70ba2e8dda07cd9459b58,Update Kinesis resharding doc (#15401),2023-11-20T23:40:59Z
6ed343c0471d0de433126a7d6194fe53133bf3e4,"Data management API doc refactor (#15087)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: George Shiqi Wu <george.wu@imply.io>
Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>
Co-authored-by: ythorat2 <ythorat2@illinois.edu>
Co-authored-by: Krishna Anandan <krishna1729atom@gmail.com>
Co-authored-by: Vadim Ogievetsky <vadim@ogievetsky.com>
Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>
Co-authored-by: Karan Kumar <karankumar1100@gmail.com>
Co-authored-by: Rishabh Singh <6513075+findingrish@users.noreply.github.com>
Co-authored-by: Magnus Henoch <magnus@gameanalytics.com>
Co-authored-by: AmatyaAvadhanula <amatya.avadhanula@imply.io>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Yashdeep Thorat <yashdeep97@gmail.com>
Co-authored-by: Atul Mohan <atulmohan.mec@gmail.com>
Co-authored-by: Clint Wylie <cwylie@apache.org>
Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2023-11-20T20:34:42Z
dfc52994d409aad104dd7bbd692cce6656e88419,docs: fix code tabs (#15403),2023-11-20T19:16:10Z
5ccd79d62b7efa0211ff5408baca979d3dda2594," Fix NPE caused by realtime segment closing race, fix possible missing-segment retry bug. (#15260)

* Fix NPE caused by realtime segment closing race, fix possible missing-segment retry bug.

Fixes #12168, by returning empty from FireHydrant when the segment is
swapped to null. This causes the SinkQuerySegmentWalker to use
ReportTimelineMissingSegmentQueryRunner, which causes the Broker to look
for the segment somewhere else.

In addition, this patch changes SinkQuerySegmentWalker to acquire references
to all hydrants (subsegments of a sink) at once, and return a
ReportTimelineMissingSegmentQueryRunner if *any* of them could not be acquired.
I suspect, although have not confirmed, that the prior behavior could lead to
segments being reported as missing even though results from some hydrants were
still included.

* Some more test coverage.",2023-11-20T18:48:14Z
470c8ed7b01ebea19278c83c390d51bc5c03111c,"Make `numCorePartitions` as 0 for tombstones (#15379)

* Make numCorePartitions as 0 in the TombstoneShardSpec.

* fix up test

* Add tombstone core partition tests

* review comment

* Need to register the test shard type to make jackson happy",2023-11-20T17:42:51Z
ba1b6fa5a937e2f676e3c18944f6edec5b04d328,"Web console: reset spec before looking for tile (#15396)

* reset spec before looking for tile

* improve logging

* log screenshots

* get and log jpeg

* other test tidy up",2023-11-18T17:57:29Z
a95c22ce700931229dd466c8c52845abc6999065,"support non-constant expressions for path arguments for json_value and json_query (#15320)

* support dynamic expressions for path arguments for json_value and json_query",2023-11-17T09:12:05Z
a2914789d735b970bed32bc62cbf756661c103ad,"Add support for ingesting older iceberg snapshots (#15348)

This patch introduces a param snapshotTime in the iceberg inputsource spec that allows the user to ingest data files associated with the most recent snapshot as of the given time. This helps the user ingest data based on older snapshots by specifying the associated snapshot time.
This patch also upgrades the iceberg core version to 1.4.1",2023-11-17T07:02:28Z
7b5790c72ca35857c270c26a37ea2de1af483b79,"Fix flaky tests in ParserTest.java (#15318)

Fixed the following flaky tests:

    org.apache.druid.math.expr.ParserTest#testApplyFunctions
    org.apache.druid.math.expr.ParserTest#testSimpleMultiplicativeOp1
    org.apache.druid.math.expr.ParserTest#testFunctions
    org.apache.druid.math.expr.ParserTest#testSimpleLogicalOps1
    org.apache.druid.math.expr.ParserTest#testSimpleAdditivityOp1
    org.apache.druid.math.expr.ParserTest#testSimpleAdditivityOp2

The above mentioned tests have been reported as flaky (tests assuming deterministic implementation of a non-deterministic specification ) when ran against the NonDex tool.
The tests contain assertions (Assertion 1 & Assertion 2) that compare an ArrayList created from a HashSet using the ArrayList() constructor with another List. However, HashSet does not guarantee the ordering of elements and thus resulting in these flaky tests that assume deterministic implementation of HashSet. Thus, when the NonDex tool shuffles the HashSet elements, it results in the test failures:

Co-authored-by: ythorat2 <ythorat2@illinois.edu>",2023-11-17T06:59:23Z
77828bead48edd02fa73d1604c7476c6b7c14803,"Fetch active task payloads from memory (#15377)

The TaskQueue maintains a map of active task ids to tasks, which can be utilized to get active task payloads, before falling back to the metadata store.",2023-11-17T06:49:20Z
6a5da5a05eb04ca0f8a910c824ccbc3da1e1ba34,"fix redirect for api docs and misc array-related typos (#15387)

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-11-16T21:29:19Z
cdc192d38d625c6042c445ad9588dcb4723c8843,"Prevent multiple attempts to publish segments for the same sequence (#14995)

* Prevent a race that may cause multiple attempts to publish segments for the same sequence",2023-11-16T08:51:26Z
857b8de425ca4d61bdc843eeb7a9e3da0c6dd2ca,"Query from deep storage doc fixes. (#15382)

Fixing outdated query from deep storage docs.",2023-11-16T08:35:20Z
67f45fa7bfc5eeb17e9ff23b3519fb01520a8360,"Fix histograms for sketches where min and max are equal (#15381)

There is a problem with Quantiles sketches and KLL Quantiles sketches.
Queries using the histogram post-aggregator fail if:

- the sketch contains at least one value, and
- the values in the sketch are all equal, and
- the splitPoints argument is not passed to the post-aggregator, and
- the numBins argument is greater than 2 (or not specified, which
  leads to the default of 10 being used)

In that case, the query fails and returns this error:

    {
      ""error"": ""Unknown exception"",
      ""errorClass"": ""org.apache.datasketches.common.SketchesArgumentException"",
      ""host"": null,
      ""errorCode"": ""legacyQueryException"",
      ""persona"": ""OPERATOR"",
      ""category"": ""RUNTIME_FAILURE"",
      ""errorMessage"": ""Values must be unique, monotonically increasing and not NaN."",
      ""context"": {
        ""host"": null,
        ""errorClass"": ""org.apache.datasketches.common.SketchesArgumentException"",
        ""legacyErrorCode"": ""Unknown exception""
      }
    }

This behaviour is undesirable, since the caller doesn't necessarily
know in advance whether the sketch has values that are diverse
enough. With this change, the post-aggregators return [N, 0, 0...]
instead of crashing, where N is the number of values in the sketch,
and the length of the list is equal to numBins. That is what they
already returned for numBins = 2.

Here is an example of a query that would fail:

    {""queryType"":""timeseries"",
     ""dataSource"": {
       ""type"": ""inline"",
       ""columnNames"": [""foo"", ""bar""],
       ""rows"": [
          [""abc"", 42.0],
          [""def"", 42.0]
       ]
     },
     ""intervals"":[""0000/3000""],
     ""granularity"":""all"",
     ""aggregations"":[
       {""name"":""the_sketch"", ""fieldName"":""bar"", ""type"":""quantilesDoublesSketch""}],
     ""postAggregations"":[
       {""name"":""the_histogram"",
        ""type"":""quantilesDoublesSketchToHistogram"",
        ""field"":{""type"":""fieldAccess"",""fieldName"":""the_sketch""},
        ""numBins"": 3}]}

I believe this also fixes issue #10585.",2023-11-16T07:01:22Z
53797b9e49ea9126d31e0c700f3b7adeaacfb6e7,"Fixed a flaky test in `S3DataSegmentPusherConfigTest#testSerialization` by changing string to key:value pair (#15207)

* Fix capacity response in mm-less ingestion (#14888)

Changes:
- Fix capacity response in mm-less ingestion.
- Add field usedClusterCapacity to the GET /totalWorkerCapacity response.
This API should be used to get the total ingestion capacity on the overlord.
- Remove method `isK8sTaskRunner` from interface `TaskRunner`

* Using Map to perform comparison

* Minor Change

---------

Co-authored-by: George Shiqi Wu <george.wu@imply.io>",2023-11-15T17:05:55Z
03a092f4ecedf1950321b12046c7f35fa52d91a9,"Document Nuances in SegmentMetadataCache Behaviour (#15367)

* Document segment metadata cache behaviour

* Fix typo

* Minor update

* Minor change",2023-11-15T13:11:20Z
4ca5acdc33812ee863d1613ab7e55001c8d12cf0,Fixed 2 Flaky Tests (#15376),2023-11-15T13:10:09Z
bedf246ed26f8118fe9cf0cddbe5770da6ce9075,Fixing 1 flaky test in testAPIs() (#15375),2023-11-15T13:08:20Z
a70a3d5d4896b803ef8bad1af77c194a2ab45abe,"Fix cancellation bug in MSQ. (#15368)

Saw bug where MSQ controller task would continue to hold the task slot even after cancel was issued.
This was due to a deadlock created on work launch. The main thread was waiting for tasks to spawn and the cancel thread was waiting for tasks to finish.
The fix was to instruct the MSQWorkerTaskLauncher thread to stop creating new tasks which would enable the main thread to unblock and release the slot.

Also short circuited the taskRetriable condition. Now the check is run in the MSQWorkerTaskLauncher thread as opposed to the main event thread loop. This will result in faster task failure in case the task is deemed to be non retriable.",2023-11-15T12:52:51Z
2e79fd56a7ff0ad91d4945b49924be67d9f80e83,"MSQ generates tombstones honoring granularity specified in a `REPLACE` query. (#15243)

* MSQ generates tombstones honoring the query's granularity.

This change tweaks to only account for the infinite-interval tombstones.
For finite-interval tombstones, the MSQ query granualrity will be used
which is consistent with how MSQ works.

* more tests and some cleanup.

* checkstyle

* comment edits

* Throw TooManyBuckets fault based on review; add more tests.

* Add javadocs for both methods on reconciling the methods.

* review: Move testReplaceTombstonesWithTooManyBucketsThrowsException to MsqFaultsTest

* remove unused imports.

* Move TooManyBucketsException to indexing package for shared exception handling.

* lower max bucket for tests and fixup count

* Advance and count the iterator.

* checkstyle",2023-11-15T07:35:36Z
06744d3827c76617f40b0da2f73b3445853c0b4a,"Changing a string to key:value pair to fix flakiness in `testSerializationWithDefaults` (#15317)

* + Fix for Flaky Test

* + Replacing TreeMap with LinkedHashMap

* + Changing data structure from LinkedHashMap to HashMap

* Fixed flaky test in S3DataSegmentPusherConfigTest.testSerializationValidatingMaxListingLength

* Minor Changes",2023-11-14T23:59:07Z
2cb74433fd1bb6a6fedb7a3938d3bdfe77211553,"Web console: fix time shifting (#15359)

* fix time shifting",2023-11-14T23:33:52Z
5edeac28df5bba67b28ed15ca26c9c6c89b5b3f7,+ Switching Comparison from String to JSON (#15364),2023-11-14T16:07:19Z
a134cc30a6949dc378979d7110a535570d1a9075,Change default inSubQueryThreshold (#15336),2023-11-14T08:38:12Z
5446494e63c92986cbca9a7e34aad8e94b85daf0,"Non-existent datasource shouldn't affect schema rebuilding for other datasources (#15355)

In pull request #14985, a bug was introduced where periodic refresh would skip rebuilding a datasource's schema after encountering a non-existent datasource. This resulted in remaining datasources having stale schema information.

This change addresses the bug and adds a unit test to validate the refresh mechanism's behaviour when a datasource is removed, and other datasources have schema changes.",2023-11-14T07:22:33Z
99da4f30572d376b80246fe994f7d2faaee0cdd5,"Bump commons-codec:commons-codec from 1.13 to 1.16.0 (#14819)

* Bump commons-codec:commons-codec from 1.13 to 1.16.0

Bumps [commons-codec:commons-codec](https://github.com/apache/commons-codec) from 1.13 to 1.16.0.
- [Changelog](https://github.com/apache/commons-codec/blob/master/RELEASE-NOTES.txt)
- [Commits](https://github.com/apache/commons-codec/compare/commons-codec-1.13...rel/commons-codec-1.16.0)

---
updated-dependencies:
- dependency-name: commons-codec:commons-codec
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

* update licences.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-11-13T16:54:55Z
3a3d37ef40596b6540b6d30ac82a20766335627b,"Fix for segment/count Metric Not Emitting with Statsd-emitter (#15347)

* fix segment/count metric in Statsd-emitter

* update doc

* Update docs/development/extensions-contrib/prometheus.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/development/extensions-contrib/statsd.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

---------

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2023-11-10T16:08:58Z
e7d0429f5b903799ececccc252841fa114c668d3,"docs: suggest metadata store with instant ADD COLUMN semantics (#15334)

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-11-09T20:56:30Z
895e53555cf69cce992ee54d8523624fe1150214,Optimize mark segments as unused (#15352),2023-11-09T09:43:45Z
fa48d4ea7d0e5009110a6e2d53ce7516b52d9b3f,use is not distinct from (#15349),2023-11-09T02:02:42Z
d12f557492f48e4c42668d68f7ceccc07577ed21,fix ingest datasource detection falling over on paren (#15339),2023-11-08T21:32:27Z
130bfbfc6d7d30b6ee2efab90aea415245d9313e,"Revert ""Separate task lifecycle from kubernetes/location lifecycle (#15133)"" (#15346)

This reverts commit dc0b163e192545c802b7fe2b3271e035cc1e70ff.",2023-11-08T18:12:30Z
b7d7f84bceff68da0609483de7b2e731b65085a9,"Bump Jedis version to 5.0.2 (#15344)

Currently, the redis-cache extension uses Jedis 2.9.0, which was released over seven years ago and is no longer listed in the official support matrix. This patch upgrades it to ensure the compatibility with the recent version of Redis and make future upgrades easier, including:

Upgrade Jedis to v5.0.2, the latest version at this writing, and address the API changes and dependency version mismatch.

Replace mock-jedis with jedis-mock, since the former has not been actively maintained any longer and not compatible with recent versions of Jedis.",2023-11-08T14:52:41Z
db95c375a626b87d548a41a297f13f8ed9504eb3,"Increase historical heap for standard IT (#15337)

Lately, Query IT has been failing due to historical server running out of memory (OOM).
We are investigating the historical heap dump from the test. Until the issue is resolved, we are increasing the heap size of historical server.",2023-11-08T09:51:30Z
e2fde8c516e418e4d9711c8490b54318cdd2ccf7,Refactor lookups behavior while loading/dropping the containers (#14806),2023-11-07T18:07:28Z
54fa3425c3b12eeb597093ad8985e259a9d3f887,fix: Creating span label not closed (#15323),2023-11-07T03:01:28Z
9333dd1f73a189efeffac46a3ce495774e05216d,Correct the path of ipynb file of notebook introduction. (#15327),2023-11-07T03:01:06Z
e6ab8a15eb6f22a50f116b66e96de88fb59db7ca,Fixed the table in docker.md (#15328),2023-11-07T03:00:23Z
0403e482667598155fd989c8726afc047ca6f005,"window functions docs (#14739)

* draft window functions

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* address comments

* remove default column

* Update docs/querying/sql-window-functions.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql-window-functions.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* fix ntile

* remove default header column

* code tics to remove spelling errors

* add known issues, add SUM example

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* address spelling

* remove extra chars

* add to sidebar, fix admonition

* Update sql-window-functions.md

accept suggestion, change admonition style

* update sidebar

* Delete Untitled.ipynb

rm unwanted file

* Update docs/querying/sql-window-functions.md

* Update docs/querying/sql-window-functions.md

* update context param, accept suggestions

* accept suggestions

* Apply suggestions from code review

* Fix known issues

* require GROUP BY, explain order of operation

* accept suggestions

* fix spelling

---------

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-11-06T19:34:42Z
2136dc3591a74522e61ba04e39a2a4d8a1b27b5d,"Batch segment retrieval from the metadata store (#15305)

* Add a unit test that fails when used segments with too many intervals are retrieved.

- This is a failing test case that needs to be ignored.

* Batch the intervals (use 100 as it's consistent with batching in other places).

* move the filtering inside the batch

* Account for limit cross the batch splits.

* Adjustments

* Fixup and add tests

* small refactor

* add more tests.

* remove wrapper.

* Minor edits

* assert out of range",2023-11-06T19:30:24Z
4b64a5693be4eb6d38173bb2e12e5f90b1a872f6,"Move service specific JVM parameters to the right in tests (#15325)

Historical OOMs were not getting dumped into /shared/logs because common JVM flags will override service-specific JVM flags. This PR fixes that and also removes unnecessary overrides in historical.",2023-11-06T10:15:59Z
ff7de49015bfc5943f1ee7e064a974e1b11d91f2,"Consolidate and reduce dependency footprint for iceberg extension (#15280)

* Consolidate and reduce dependency footprint

* Fix dependency analysis",2023-11-06T06:47:32Z
8c802e4c9b271b7f77ce6d31db0d41bd433ef784,"Relocating Table Schema Building: Shifting from Brokers to Coordinator for Improved Efficiency (#14985)

In the current design, brokers query both data nodes and tasks to fetch the schema of the segments they serve. The table schema is then constructed by combining the schemas of all segments within a datasource. However, this approach leads to a high number of segment metadata queries during broker startup, resulting in slow startup times and various issues outlined in the design proposal.

To address these challenges, we propose centralizing the table schema management process within the coordinator. This change is the first step in that direction. In the new arrangement, the coordinator will take on the responsibility of querying both data nodes and tasks to fetch segment schema and subsequently building the table schema. Brokers will now simply query the Coordinator to fetch table schema. Importantly, brokers will still retain the capability to build table schemas if the need arises, ensuring both flexibility and resilience.",2023-11-04T14:03:25Z
a8906b6ea0cef7f496f2a82c9c45308d940e7c79,"Fix k8s task runner failure reporting (#15311)

* Fix k8s task runner failure reporting

* Fix reference

* add jsonignore

* PR changes",2023-11-04T01:28:46Z
5d39b94149c3c7f7662e195be37bcbb3f5e6d2e0,allow compaction to work with spatial dimensions (#15321),2023-11-03T18:27:50Z
0cc8839a60481c7a1f967486e9f1178f8497712b,Allow casted literal values in SQL functions accepting literals (Part 2) (#15316),2023-11-03T15:52:19Z
f39a778f7d97c7899bd70b8c007671e1c6a9624d,Fix 404 URL about native query (#15324),2023-11-03T15:39:59Z
98f1eb8ede58400416049db925faee287e3fcc74,"Use filters for pruning properly for hash-joins. (#15299)

* Use filters for pruning properly for hash-joins.

Native used them too aggressively: it might use filters for the RHS
to prune the LHS. MSQ used them not at all. Now, both use them properly,
pruning based on base (LHS) columns only.

* Fix tests.

* Fix style.

* Clear filterFields too.

* Update.",2023-11-03T14:29:16Z
5036af6fb3433ab98ce965c064184168fb28436b,"Doc fixes for query from deep storage and MSQ (#15313)


Minor updates to the documentation.

    Added prerequisites.
    Removed a known issue in MSQ since its no longer valid.

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-11-03T05:22:20Z
9576fd3141e81b77e4a8da4bfa6bdecdf0be90b9,"HllSketch Merge Aggregator optimizations (#15162)

* Null byte serde for empty sketches

* Cache for HllSketchMerge

* Check for empty sketches

* Address review comments

* Revert changes to HllSketchHolder

* Handle null sketch holders instead of null sketches

* Add unit test for MSQ HllSketch

* Add comments

* Fix style",2023-11-03T03:01:22Z
fb260f3e412522a4993d43209b2bc20cb3dae80c,"docs: LDAP trust store property clarification (#15028)

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-11-02T20:00:08Z
d87d92bc436da4d30e4e54b80c97b0251173084f,"Add system fields to input sources. (#15276)

* Add system fields to input sources.

Main changes:

1) The SystemField enum defines system fields ""__file_uri"", ""__file_path"",
   and ""__file_bucket"". They are associated with each input entity.

2) The SystemFieldInputSource interface can be added to any InputSource
   to make it system-field-capable. It sets up serialization of a list
   of configured ""systemFields"" in the JSON form of the input source, and
   provides a method getSystemFieldValue for computing the value of each
   system field. Cloud object, HDFS, HTTP, and Local now have this.

* Fix various LocalInputSource calls.

* Fix style stuff.

* Fixups.

* Fix tests and coverage.",2023-11-02T17:31:28Z
dc3213b05dd4ca62f4273d9e14f547c791c0dbc6,"Fix used segment retrieval in Kill tasks (#15306)

Fix used segment retrieval in Kill tasks",2023-11-02T13:37:17Z
d261587f4afcc516410038571ddaf2038bdb171f,"explicit outputType for ExpressionPostAggregator, better documentation for the differences between arrays and mvds (#15245)

* better documentation for the differences between arrays and mvds
* add outputType to ExpressionPostAggregator to make docs true
* add output coercion if outputType is defined on ExpressionPostAgg
* updated post-aggregations.md to be consistent with aggregations.md and filters.md and use tables",2023-11-02T07:31:37Z
22443ab87e397981bbebf606558f7c241686d8d7,"Fix an issue with passing order by and limit to realtime tasks (#15301)

While running queries on real time tasks using MSQ, there is an issue with queries with certain order by columns.

If the query specifies a non time column, the query is planned as it is supported by MSQ. However, this throws an exception when passed to real time tasks once as the native query stack does not support it. This PR resolves this by removing the ordering from the query before contacting real time tasks.

    Fixes a bug with MSQ while reading data from real time tasks with non time ordering",2023-11-02T06:08:26Z
b82ad59dfe5acbcef8ae68fe0005b8c446d718ad,"Better logging in ServiceClientImpl (#15269)

ServiceClientImpl logs the cause of every retry, even though we are retrying the connection attempt. This leads to slight pollution in the logs because a lot of the time, the reason for retrying is the same. This is seen primarily in MSQ, when the worker task hasn't launched yet however controller attempts to connect to the worker task, which can lead to scary-looking messages (with INFO log level), even though they are normal.
This PR changes the logging logic to log every 10 (arbitrary number) retries instead of every retry, to reduce the pollution of the logs.
Note: If there are no retries left, the client returns an exception, which would get thrown up by the caller, and therefore this change doesn't hide any important information.",2023-11-02T06:02:49Z
6b6d73b5d4447f21bbdacd7106fcd7c1c2c48d5d,"Use min of scheduler threads and server threads for subquery guardrails. (#15295)

* Use min of scheduler threads and server threads for subquery guardrails.

This allows more memory to be used for subqueries when the query scheduler
is configured to limit queries below the number of server threads. The patch
also refactors the code so SubqueryGuardrailHelper is provided by a Guice
Provider rather than being created by ClientQuerySegmentWalker, to achieve
better separation of concerns.

* Exclude provider from coverage.",2023-11-02T05:34:53Z
37e158c2c4a94cdbccde1add3c864219228f92fa,"Frames: consider writing singly-valued column when input column hasMultipleValues is UNKNOWN. (#15300)

* Frames: consider writing singly-valued column when input column hasMultipleValues is UNKNOWN.

Prior to this patch, columnar frames would always write multi-valued columns if
the input column had hasMultipleValues = UNKNOWN. This had the effect of flipping
UNKNOWN to TRUE when copying data into frames, which is problematic because TRUE
causes expressions to assume that string inputs must be treated as arrays.

We now avoid this by flipping UNKNOWN to FALSE if no multi-valuedness
is encountered, and flipping it to TRUE if multi-valuedness is encountered.

* Add regression test case.",2023-11-02T05:05:53Z
de557a62adc4f252037ce7fd823df4767002b734,"Suggest adoption of Google Style guide (#14905)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-11-01T20:31:03Z
3860052de067be23424fa4df9e4dbab259aeb66d,"remove references to Jupyter notebooks within the Druid repo (#15143)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-11-01T20:17:06Z
935050bf43f29bec0a1483808e007b2f81ca9a8d,"docs: Dynamic config cleanup (#15265)

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-11-01T18:22:33Z
c9c3df204e7b98c678cfd8bfc6a367523b76a6ad,Redirect to new jupyter notebook project (#15136),2023-11-01T15:38:40Z
2ea7177f15139071980a881f111f7dbd86287baa,"Allow casted literal values in SQL functions accepting literals (#15282)

Functions that accept literals also allow casted literals. This shouldn't have an impact on the queries that the user writes. It enables the SQL functions to accept explicit cast, which is required with JDBC.",2023-11-01T05:08:48Z
49e0cba7ba0abf3f2b71a230bb1575b50ecb1266,"Fix dockerfile for druid image (#15264)

Fixes docker image build issues with apache/druid.",2023-11-01T04:25:54Z
436ded3d781088da0d71c239208869189d44a657,"docs: durable storage azure cleanup (#15120)

Co-authored-by: Laksh Singla <lakshsingla@gmail.com>",2023-10-31T22:20:38Z
a43ffbdf2bce41ca1d44b991cf02449f2e2c865d,[Docs] Improvements to JSON-based batch Ingestion page (#15286),2023-10-31T21:50:45Z
87695410ac5e8b3363660437de75b90454c472d0,docs: blurb about msq union all (#15223),2023-10-31T21:15:38Z
e6b7c36e740067742aa7f578e72e8a3c927572ca,"LoadRules with 0 replicas should be treated as handoff complete (#15274)

* LoadRules with 0 replicas should be treated as handoff complete

* fix it

* pr feedback

* fixit",2023-10-30T17:42:58Z
31730934159044e9444adec277132cf13054dd5c,"Handle status failures for streaming supervisors (#15174)

* Cleanup logic

* newline

* remove whitespace

* Fix log message

* Add test class

* PR changes",2023-10-30T17:21:23Z
a27598a487a9edbe0ce7d094ccaf1bf515958a2b,"Segregate advance and advanceUninterruptibly flow in postJoinCursor to allow for interrupts in advance (#15222)

Currently advance function in postJoinCursor calls advanceUninterruptibly which in turn keeps calling baseCursor.advanceUninterruptibly until the post join condition matches, without checking for interrupts. This causes the CPU to hit 100% without getting a chance for query to be cancelled.

With this change, the call flow of advance and advanceUninterruptibly is separated out so that they call baseCursor.advance and baseCursor.advanceUninterruptibly in them, respectively, giving a chance for interrupts in the former case between successive calls to baseCursor.advance.",2023-10-30T09:09:15Z
275c1ec64c622164489bcd34971cc85beadebedc,"Fix error assuming a Complex Type that is a Number is a double (#15272)

* Fix error assuming a Complex Type that is a Number is a double
In the case where a complex type is a number, it may not be castable to double. It can safely be case as Number first to get to the doubleValue.",2023-10-30T04:22:52Z
039b05585cb0984fa773393b9bf3b303796513af,"Add worker status and duration metrics in live and task reports  (#15180)

Add worker status and duration metrics in live and task reports for tracking.",2023-10-30T04:13:22Z
f4a74710e6dc1eccfe376fcbfc1f488ea0fad8f5,"Process pure ordering changes with windowing operators (#15241)

- adds a new query build path: DruidQuery#toScanAndSortQuery which:
- builds a ScanQuery without considering the current ordering
- builds an operator to execute the sort
- fixes a null string to ""null"" literal string conversion in the frame serializer code
- fixes some DrillWindowQueryTest cases
- fix NPE in NaiveSortOperator in case there was no input
- enables back CoreRules.AGGREGATE_REMOVE
- adds a processing level OffsetLimit class and uses that instead of just the limit in the rac parts
- earlier window expressions on top of a subquery with an offset may have ignored the offset",2023-10-29T11:10:49Z
737947754dfed23e649d980e2fc71b33ecb6e479,"docs: add concurent compaction docs (#15218)

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2023-10-27T17:29:34Z
60c2ad597ab44610298e94987582443368863269,"Enhance json parser error logging to better track Istio Proxy error message (#15176)

Currently the inter Druid communication via rest endpoints is based on json formatted payload. Upon parsing error, there is only a generic exception stating expected json token type and current json token type. There is no detailed error log about the content of the payload causing the violation.

In the micro-service world, the trend is to deploy the Druid servers in k8 with the mesh network. Often the istio proxy or other proxies is used to intercept the network connection between Druid servers. The proxy may give error messages for various reasons. These error messages are not expected by the json parser. The generic error message from Druid can be very misleading as the user may think the message is based on the response from the other Druid server.

For example, this is an example of mysterious error message

QueryInterruptedException{msg=Next token wasn't a START_ARRAY, was[VALUE_STRING] from url[http://xxxxx:8088/druid/v2/], code=Unknown exception, class=org.apache.druid.java.util.common.IAE, host=xxxxx:8088}""

While the context of the message is the following from the proxy when it can't tunnel the network connection.

pstream connect error or disconnect/reset before header

So this very simple PR is just to enhance the logging and get the real underlying message printed out. This would save a lot of head scratching time if Druid is deployed with mesh network.

Co-authored-by: Kai Sun <kai.sun@salesforce.com>",2023-10-27T08:50:19Z
7c8e841362792b1bfc45d8b8d12857f7cad38526,Suppress CVE's in master (#15231),2023-10-27T03:59:18Z
e9b7e4a0eb227c203419d3f05a7040b8dc0d2e3a,"fix JSON flaky tests (#15261)

Co-authored-by: simonh5 <simonh5@illinois.edu>",2023-10-27T03:27:09Z
f1132d20c5756c35b26f5ad43008158c105dcd3f,"use datasketches-java 4.2.0 (#15257)

* use datasketches-java 4.2.0

* use exclusive mode

* fixed issues raised by CodeQL

* fixed issue raised by spotbugs

* fixed issues raised by intellij

* added missing import

* Update QuantilesSketchKeyCollector search mode and adjust tests.

* Update sizeOf functions and add unit tests

* Add unit tests

---------

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>
Co-authored-by: Gian Merlino <gianmerlino@gmail.com>
Co-authored-by: Adarsh Sanjeev <adarshsanjeev@gmail.com>",2023-10-26T23:28:33Z
fc0b940f785d64ede77cd2079ef30a78b76b7932,Document the allowed range of announcer maxBytesPerNode (#15063),2023-10-26T21:51:01Z
e7b8e6569b05f9eca8e0a04ae7927adb3061d3f8,Updating plugin which has fix for corrupt nodejs pkg (#15259),2023-10-26T04:49:58Z
f48263bbb3f1f258cf435b39ddf94a24ed32c741,"Report function name for unknown exceptions during execution (#14987)

* provide function name when unknown exceptions are encountered

* fix keywords/etc

* fix keywrod order - regex excercise

* add test

* add check&fix keywords

* decoupledIgnore

* Revert ""decoupledIgnore""

This reverts commit e922c820a7d563ca49c9c686644bed967c42cb4b.

* unpatch Function

* move to a different location

* checkstyle",2023-10-25T20:37:30Z
7a25ee4fd9a4f1418f5254e5d34bf2261651e214,"Ability to send task types to k8s or worker task runner (#15196)

* Ability to send task types to k8s or worker task runner

* add more tests

* use runnerStrategy to determine task runner

* minor refine

* refine runner strategy config

* move workerType config to upper level

* validate config when application start",2023-10-25T16:55:56Z
207398a47defdae4ee7af91588e91f110c73d219,Initialize null handling in CompressedBigDecimalAggregatorTimeseriesTestBase to fix failing test(#15252),2023-10-25T14:56:46Z
c5fa649ea57b50e1b3c8861da17dc684b6143b47,Rename segment load wait parameter (#15251),2023-10-25T12:38:37Z
6784e9c507be43aee1b7596ee0275db717132a67,"Fix summary row issues in case postaggregations are happening (#15232)

* fix-1/2

* add message v1

* extend test to cover for IOB issue

* move stuff around

* change message

* fix testcase string

* compute postaggs (thank you Clint!)

* enable feature for test

* ignore tests in msq

---------

Co-authored-by: Soumyava Das <soumyava@users.noreply.github.com>",2023-10-25T03:33:59Z
06f40a0019250fd731e40ddfea75ea6651b64aaa,"remove calcite AggregateRemoveRule to fix nested group by query with order by in outer query (#15237)

* Fixing nested group by query with order by in outer query

* Adding examples",2023-10-24T22:30:13Z
4149c9422cf31a8f35f498a9f03afd312f495ac6,"cleanup temp files for nested column serializer (#15236)

* cleanup temp files for nested column serializer

* fix style

* fix tests in default value mode",2023-10-24T22:30:00Z
63e3e9531d6162c3eb3414e64c945d65de0881aa,"Update S3 retry logic to account for the underlying cause in case of `IOException` (#15238)

* Update S3 retry logic based on the underlying cause in case of IOException.

4xx and other errors wrapped in IOException for instance aren't retriable.

* Fix CI",2023-10-24T22:04:42Z
65b69cded40c5837c5f8eb7bceec138e6f7326ca,"Filter pending segments upgraded with transactional replace (#15169)

* Filter pending segments upgraded with transactional replace

* Push sequence name filter to metadata query",2023-10-23T15:48:47Z
2e31cb2901b4f74263950b9f7363a8a0d2e5793e,DrillWindowQueryTest: use proper way to decide if the query is ordered (#15118),2023-10-23T14:54:28Z
b95035f183e193f24ceee57cc41d295918fe87ac,"Fix VirtualColumn related issues in window expressions (#15119)

for some exotic queries like:

  SELECT
  	'_'||dim1,
    MIN(cast(0 as double)) OVER (),
    MIN(cast((cnt||cnt) as bigint)) OVER ()
  FROM foo
the compilation have resulted in NPE -s mostly because VirtualColumn -s were not handled properly",2023-10-23T08:35:59Z
c8e458452db929814a0e28665df1d5ed2af2728d,Fix native is boolean filter cache key tests to test the right thing (#15216),2023-10-23T05:54:46Z
33fdd770f7048f4209f01441086847e336d7fe94,"Consider only supervisors with append lock for concurrent transactional replace (#15220)

A SegmentTransactionReplaceAction must only update the mapping of tasks with append locks that are running concurrently. To ensure this, we return the supervisor id only if it has the taskLockType as APPEND in its context.",2023-10-22T08:42:36Z
fbbb9c77305e2f5a4296a6969f66abb42a01ba33,Allow DESC ordering in window expressions (#15195),2023-10-20T11:55:28Z
e03f863cf6902bc0e1ffb93a7bc263fb022ea902,"update core Apache Kafka dependencies to 3.6.0 (#15214)

Release notes: https://downloads.apache.org/kafka/3.6.0/RELEASE_NOTES.html
https://kafka.apache.org/blog#apache_kafka_360_release_announcement",2023-10-20T03:27:09Z
352702bb259545268a7c0a2caafdcb8c6865d1ad,"run some integration tests with Java 21 (#15104)

* use setup-java everywhere for consistency

* add Java 21 to integration test matrix

* simplify docker build containers script + add Java 21

* fix for Java versions reporting 21-ea",2023-10-20T03:18:13Z
5752a1a3831d4f9dc181101e7ae0ebf10871385d,"Proper default for taskLockType in streaming ingestion (#15213)

* Proper value for taskLockType in streaming ingestion with concurrent compaction",2023-10-19T15:31:31Z
1f39c054a768098c3bebb0b6d48f885e8861d0da,Fix GHA workflow bugs (#15209),2023-10-19T11:41:36Z
9fb0dbfc9f4c693baa4fdc4845f518984e1eeb11,"Fix json inputs for drill windowing tests (#15148)

This PR:

adds a flag to JsonToParquet to do the fix during conversion
updates the json files to more correct conents
some resultset mismatches were fixed by this
updates parquet to 1.13.1",2023-10-19T08:32:41Z
a8febd457ceb184870dfbb11f6fe82b02dd1242d,"A Replacing task must read segments created before it acquired its lock (#15085)

* Replacing tasks must read segments created before they acquired their locks",2023-10-19T05:43:07Z
fa311dd0b6f3b114c8d5fc204379683d7cd7c41f,Cast the values read in the EXTERN function to the type in the row signature  (#15183),2023-10-19T04:54:23Z
780207869b3f3b0792cee253500fb205203c9c12,"Attach user identity to router request logs (#15126)

* Attach user identity to router request logs

* Add test

* More tests",2023-10-19T02:40:58Z
5c14b42e72ee8000bbf523c6af1fd29adbe5a846,fix incorrect unnest dimension cursor value matcher implementation (#15192),2023-10-18T23:43:06Z
061cfee224acc78ac130a38c16a7b39e19978cf2,"add native filters for ""(filter) is true"" and ""(filter) is false"" (#15182)

* add native filters for ""(filter) is true"" and ""(filter) is false""

changes:
* add IsTrueDimFilter, IsFalseDimFilter, and abstract IsBooleanDimFilter for native json filter implementations of `(filter) IS TRUE` and `(filter) IS FALSE`
* add IsBooleanFilter for actual filtering logic for these filters, which ignore includeUnknown to always use matches with false for true and !matches with true for false
* fix test incorrectly adjusted to wrong answer in #15058
* add tests for default value mode",2023-10-18T20:07:35Z
c58b7f40eee2890a4bd455571c89fe3965a6fa76,Rename windowing option (#15184),2023-10-18T05:24:20Z
22034a163029367bc60786cc4b1afb2777344c4b,"preserve Rows.objectToStrings behavior of translating null into ""null"" inside of lists and arrays (#15190)",2023-10-18T02:49:36Z
b4540ed5d4b611488f28e48b5e63839e2b2fe802,Optimize the reading of numerical frame arrays in MSQ  (#15175),2023-10-17T21:03:42Z
953ce794396dfc9216e8d6f98c09a14cb9b3caff,"Add undocumented taskLockType to MSQ. (#15168)

Patch adds an undocumented parameter taskLockType to MSQ so that we can start enabling this feature for users who are interested in testing the new lock types.",2023-10-17T16:14:04Z
dc0b163e192545c802b7fe2b3271e035cc1e70ff,"Separate task lifecycle from kubernetes/location lifecycle (#15133)

* Separate k8s and druid task lifecycles

* Remove extra log lines

* Fix unit tests

* fix unit tests

* Fix unit tests

* notify listeners on task completion

* Fix unit test

* unused var

* PR changes

* Fix unit tests

* Fix checkstyle

* PR changes",2023-10-17T15:17:43Z
0a27a7a7ca1561630730c9288e5b36ead1268aed,Update eirslett frontend (#15154),2023-10-16T14:46:32Z
dc8d2192c340910f8b75fd0b3bca16a3dfbb0b88,"Introduce natural comparator for types that don't have a StringComparator (#15145)

Fixes a bug when executing queries with the ordering of arrays",2023-10-16T05:07:32Z
4b0d1b3488add75097532f25c8bbbcb35daa4987,Fix expression result writing of arrays in Hadoop Ingestion (#15127),2023-10-13T20:41:41Z
9ca10c7bd7a5e963711aef0490ac0355976cd399,"Added concurrent compaction switches (#15114)

* Added concurrent compaction switches",2023-10-13T15:33:39Z
6d62c7586686431a123d8a410d2d792c47f5ea29,Fix columns with null values in windowing expressions (#15131),2023-10-13T14:42:45Z
f0a70fe3c4533c889b6185774f104c0265a0c37e,Fixing the flaky tests. (#15142),2023-10-13T10:50:05Z
4deeb7e936470c8d592e76771d5992b08c5f0d0e,"Fix issue with checking segment load status (#15147)

This PR addresses a bug with waiting for segments to be loaded. In the case of append, segments would be created with the same version. This caused the number of segments returned to be incorrect.

This PR changes this to keep track of the range of partition numbers as well for each version, which lets the task wait for the correct set of segments. The partition numbers are expected to be continuous since the task obtains the lock for the segment while running.",2023-10-13T10:36:13Z
d25caaefa4282a6b61663e8184d3c0b4092f6f35,"Add support for streaming ingestion with concurrent replace (#15039)

Add support for streaming ingestion with concurrent replace

---------

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2023-10-13T03:39:03Z
0a6f78c0bbc6b151b0e26e658e295fa0f2be1e4c,Fix GHA workflow bugs (#15138),2023-10-12T15:55:57Z
61ea9e07c5a1ebee4a64ba3ded47c17be9cc8f23,"Limit pages size to a configurable limit (#14994)

Adding the ability to limit the pages sizes of select queries.

    We piggyback on the same machinery that is used to control the numRowsPerSegment.
    This patch introduces a new context parameter rowsPerPage for which the default value is set to 100000 rows.
    This patch also optimizes adding the last selectResults stage only when the previous stages have sorted outputs. Currently for each select query with selectDestination=durableStorage, we used to add this extra selectResults stage.",2023-10-12T08:31:46Z
a0fd9ec55cad9bc151df460f08622741ad047319,fix issue with SQL boolean constants not respecting nulls when strict booleans and sql compatible null handling are enabled (#15135),2023-10-12T08:23:24Z
d0f64608eb1c31a0c65a9cc92ef41ce06a5032ed,"sql compatible three-valued logic native filters  (#15058)

* sql compatible tri-state native logical filters when druid.expressions.useStrictBooleans=true and druid.generic.useDefaultValueForNull=false, and new druid.generic.useThreeValueLogicForNativeFilters=true
* log.warn if non-default configurations are used to guide operators towards SQL complaint behavior",2023-10-12T07:06:23Z
265c811963763ac6c33ff8b88cced4cfbb6d3afe,docs: remove experimental note from query from deep storage docs (#15132),2023-10-12T06:21:02Z
10aab7506e13cb60bddd9f3c29c04079e2833cb2,"Dynamic configuration API documentation refactor (#15098)

Co-authored-by: demo-kratia <56242907+demo-kratia@users.noreply.github.com>",2023-10-11T21:45:05Z
ae88f2c0b6eb739cdd5593dee2db402478dfb171,"Fix non-sqlcompat validation in CalciteWindowQueryTest (#15086)

* fixes

* check for latest rewrite place

* Revert ""check for latest rewrite place""

This reverts commit 5cf1e2c1ca1f70ef84e8f0a8d96d4563b18230ff.

* some stuff

(cherry picked from commit ab346d4373ea888eb8ef6115e018e7fb0d27407f)

* update test output

* updates to test ouptuts

* some stuff

* move validator

* cleanup

* fix

* change test slightly

* add apidoc cleanup warnings

* cleanup/etc

* instead of telling the story; add a fail with some reason whats the issue

* lead-lag fix

* add test

* remove unnecessary throw

* druidexception-trial

* Revert ""druidexception-trial""

This reverts commit 8fa06644bc94e45149238053eadec5fcebeb7b28.

* undo changes to no_grouping; add no_grouping2

* add missing assert on resultcount

* rename method; update

* introduce enum/etc

* make resultmatchmode accessible from TestBuilder#expectedResults

* fix dump results to use log

* fix

* handle null correctly

* disable feature type based things for MSQ

* fix varianssqlaggtest

* use eps in other test

* fix intellij error

* add final

* addrss review

* update test/string/etc

* write concat in 3 lines :D",2023-10-11T19:34:31Z
c6ca990f1fd87d1c9e4e215a44642f9dcc9893d6,"Rewrite EARLIEST/LATEST query operators to EARLIEST_BY/LATEST_BY (#15095)

EARLIEST and LATEST operators implicitly reference the __time column for calculation of the aggregate value. Since the reference isn't explicit, Calcite sometimes fails to update the __time column name when there's column renaming --such as in the case of nested queries -- resulting in column not found errors.

This change rewrites these operators to EARLIEST_BY and LATEST_BY during query processing to make the reference explicit to Calcite.",2023-10-11T14:18:36Z
52d94b09a771aaba74be0f7e1dbde25774058007,"update jetty & netty4 dependencies (#15129)

Update jetty dependencies version to 9.4.53.v20231009
Update netty4 dependencies version to 4.1.100.Final to resolve CVE-2023-4586 (Netty-handler does not validate host names by default)",2023-10-11T12:46:28Z
dba0246aca7cabbff3a5f8819467847834040077,"Added UI support for waitTillSegmentsLoad (#15110)

This relies on the work done in #14322 and #15076. It allows the user to set waitTillSegmentsLoad in the query context (if they want, else it defaults to true) and shows the results in the UI :",2023-10-11T10:48:42Z
5f860724561d2e9c1c3219bc40fc41c487984efa,"Prepare master for Druid 29 (#15121)

Prepare master for Druid 29",2023-10-11T05:03:45Z
263e106714d989ee6a462577185c3c591de1d4fd,"docs: remove experimental note from unnest docs (#15123)

* docs: remove experimental note from unnest docs

* remove flag needed to use unnest",2023-10-10T23:52:51Z
23605c1edddd697e584e41965d44ffc2d8866396,"Enable resultset validation of Drill tests (#15096)

- introduces a test_X method for every testcase (995 testcases)
- added a resultset parser which reads the expected resultset based on the result schema
- loaded a few more datasets
- added a testcase to ensure that all files have a corresponding testcase
- renamed DecoupledIgnore to NegativeTest
- categorized the failing 268 tests",2023-10-10T09:10:50Z
48f35b3fddb94616017ef78c81b95f2b44776214,"Add query id to processing pool thread name. (#15059)

This patch changes the thread name of the processing pool of the indexers/peons/historicals from query.getType() + ""_"" + query.getDataSource() + ""_"" + query.getIntervals() to query.getId()",2023-10-10T00:29:03Z
fda8d2b7f3d1a5def5e3721e7100fcda4d5a572e,fix debugging and running with intellij runConfiguration (#15115),2023-10-10T00:03:06Z
95bf331c08f71ccf65852f56af21501f2263866f,"Rename the default setting of 'maxSubqueryBytes' from 'unlimited' to 'disabled' (#15108)

The default setting of 'maxSubqueryBytes' is renamed from 'unlimited' to 'disabled'.",2023-10-09T20:33:29Z
90a1458ac9b81bd3bac443790242353bb701aadf,Parse passwords containing colon correctly (#15109),2023-10-09T15:15:10Z
b0edbc3d912628e936ec2af06549e1b5b8f11898,"MSQ writes out string arrays instead of MVDs by default (#15093)

MSQ uses the string dimension schema for ARRAY<STRING> typed columns, which creates MVDs instead of string arrays as required. Therefore someone trying to ingest columns of type ARRAY<STRING> from an external data source or another data source would get STRING columns in the newly generated segments.

This patch changes the following:

- Use auto dimension schema to ingest the ARRAY<STRING> columns, which will create columns with the desired type.
- Add an undocumented flag ingestStringArraysAsMVDs to preserve the legacy behavior. Legacy behaviour is turned on by default. 
- Create MSQArraysInsertTest and refactor some of the tests in MSQInsertTest.",2023-10-09T15:01:07Z
36edbce03667bdcb58911455b74b8e64a169c14c,"Fix compilation failure in master (#15111)

Merging since it's a dev blocker.",2023-10-09T14:35:48Z
1fc8fb1b20080ae8c515dcbaa8f5d95f87f7a63e,"add a bunch of tests with array typed columns to CalciteArraysQueryTest (#15101)

* add a bunch of tests with array typed columns to CalciteArraysQueryTest
* fix a bug with unnest filter pushdown when filtering on unnested array columns",2023-10-09T13:16:06Z
549ef5628845ca858f2ff0fda0007033662c2849,"UNION ALLs in MSQ (#14981)

MSQ now supports UNION ALL with UnionDataSource",2023-10-09T12:48:15Z
40a6dc4631364bfce3bb54bb292092575a349c0b,"Optimize used segment fetching in Kill tasks (#15107)

* Optimize used segment fetching in Kill tasks",2023-10-09T12:24:13Z
7a35ce886d8e0c80653adf01779a97268b9f939d,"Add ability for MSQ tasks to query realtime tasks (#15024)

This PR aims to add the capabilities to:
1. Fetch the realtime segment metadata from the coordinator server view,
2. Adds the ability for workers to query indexers, similar to how brokers do the same for native queries.",2023-10-09T09:44:03Z
e2cc1c4ad19dbf005a947f25f3833c55da76f1fb,"Add metric -- count of queries waiting for merge buffers (#15025)

Add 'mergeBuffer/pendingRequests' metric that exposes the count of waiting queries (threads) blocking in the merge buffers pools.",2023-10-09T07:26:23Z
c483cb863d420461acd3a98666eec17716c62421,"Fix IndexerWorkerClient#fetchChannelData when response has data and error. (#15084)

* Fix IndexerWorkerClient#fetchChannelData when response has data and error.

When a channel data response from a worker includes some data and then
some I/O error, then when the call is retried, we will re-read the set
of data that was read by the previous connection and add it to the
local channel again. This causes the local channel to become corrupted.
The patch fixes this case by skipping data that has already been read.",2023-10-09T05:42:28Z
c7d0615af3fe6fb7c500efd591299ae994225fe9,"Fix the build for #15013.: Lookup jitter upstream build fix (#15103)

Fix the build for #15013.",2023-10-09T04:05:39Z
b5a87fd89bc8480702c90cc1b678d20f01c66426,"Support constant args in window functions (#15071)

Instead of passing the constants around in a new parameter; InputAccessor was introduced to take care of transparently handling the constants - this new class started picking up some copy-paste debris around field accesses; and made them a little bit more readble.",2023-10-08T06:44:25Z
7b869fd37a90484bd2f4e1685d356018b5cfd829,"Change type of AVG aggregates to double (#15089)

The sql standard is not very restrictive regarding this:

If AVG is specified and DT is exact numeric, then the declared type of the result is an implemen-
tation-defined exact numeric type with precision not less than the precision of DT and scale not
less than the scale of DT.

so; using the same type is also ok (without patch);
however the avg of 0 and 1 is 0 right now because of the retention of the integer typ

Postgres,MySql and Oracle and Drill seem to increase precision ; mssql returns 0
http://sqlfiddle.com/#!9/6f7248/1

I think we should also increase precision as its already calculated more precisely",2023-10-07T12:31:09Z
57ab8e13dc66bae6757c922d72b555ad83c4e76d,"Updating plans when using joins with unnest on the left (#15075)

* Updating plans when using joins with unnest on the left

* Correcting segment map function for hashJoin

* The changes done here are not reflected into MSQ yet so these tests might not run in MSQ

* native tests

* Self joins with unnest data source

* Making this pass

* Addressing comments by adding explanation and new test",2023-10-07T02:23:12Z
f9439970c926ec832e3f14cc235a46ec86784499,"run build and unit tests using Java 21 (#15088)

* run build and unit test using Java 21

* run static checks with Java 21

* use setup-java for unit tests, since Java 21 is not built-in

* skip maven cache from setup-java

* add comments to explain cache behavior",2023-10-06T19:45:07Z
1a06ef5a24268e01f6f04bd2fcc1309fc7a96367,Fixing old function used (#15099),2023-10-06T00:25:00Z
06c5527c85d0027a4e950372931a15a46fc28285,"Allow aliasing of Macros and add new alias for complex decode 64 (#15034)

* Add AliasExprMacro to allow aliasing of native expression macros
* Add decode_base64_complex alias for complex_decode_base64",2023-10-05T23:24:36Z
36d7b3cc65629acc772d42493465cf8cbdc99ed9,Add CalciteSysQueryTest to enable some testing of bindable plans. (#15070),2023-10-05T18:37:49Z
2164dafb991cf2a42ec7912f1d02f10c6fbda37b,docs: update unnest to use crossjoin instead of comma (#15074),2023-10-05T16:01:08Z
7e987e3d696b6f157e8197eea30c6444ac1a6d7e,"Add query context parameter for segment load wait (#15076)

Add segmentLoadWait as a query context parameter. If this is true, the controller queries the broker and waits till the segments created (if any) have been loaded by the load rules. The controller also provides this information in the live reports and task reports. If this is false, the controller exits immediately after finishing the query.",2023-10-05T12:56:34Z
2c286d6f4282990b94f2dc71ef4106f823f7048f,"Fix monomorphic processing code running on JDK8 since it references a non-existing method (#15092)

Code relying on monomorphic processing on JDK8 doesn't work correctly, since it tries to reference getArrayLength using method handles, which might have been accidentally removed here since it seems unused. This PR adds the method back as is.",2023-10-05T05:35:38Z
b4bc9b695061b558e1d71e19756900bf779f79fb,fix issue with auto columns with mix of scalar values and empty arrays (#15083),2023-10-05T04:45:45Z
b8d03d36b0918f7e5086047f27454717d4ed0c51,"Free up the resources when materializing the results as Frames (#15032)

Refactor the code to clean up the result sequences when materializing the results as Frames",2023-10-05T04:44:27Z
3afe09a19d953c119dca57741e8c7babe7e4e80a,"urlencode nested serializer temp file names so they dont explode stuff (#15068)

Fixes a bug caused by #14919, which was just using the column name as part of a temp file name, which.. isn't very cool, my bad. Switched to use StringUtils.urlEncode so that ugly chars don't explode stuff. The modified test fails without the changes in this PR.",2023-10-05T04:43:45Z
30cf76db9940201842ab09d2f1e1dda9458b90fa,"Field writers for numerical arrays (#14900)

Row-based frames, and by extension, MSQ now supports numeric array types. This means that all queries consuming or producing arrays would also work with MSQ. Numeric arrays can also be ingested via MSQ. Post this patch, queries like, SELECT [1, 2] would work with MSQ since they consume a numeric array, instead of failing with an unsupported column type exception.",2023-10-04T17:46:47Z
88476e0e835f05c0be1b068de03fce313e0b5a0b,"docs: add note about transparent_reconnection for Avatica (#15066)

* add note about transparent_reconnection

* Update docs/api-reference/sql-jdbc.md",2023-10-04T16:52:48Z
90e4b25620b85e3c948832bff939d5ab3a58ef4f,Fix lead/lag to be usable without offset (#15057),2023-10-04T12:08:46Z
c888ac5d61e183aa89dee85a4c5122211d68dcf6,fix path of druid service IT logs (#15082),2023-10-04T10:08:38Z
a9021e4cd7d65f524ec21fbce615f55dc16de3a9,"Fix NPE with lenient aggregators merging in segmentMetadata. (#15078)

When merging analyses, lenient merging sets unmergeable aggregators
to null. Merging such a null aggregator record into a nonnull record
would potentially lead to NPE in getMergingFactory.

The new code only calls getMergingFactory if both the old and new
aggregators are nonnull; else, if either is null, then the merged
aggregator is also set to null.",2023-10-04T09:41:41Z
632811b285885de91eb078181f3819467afa7965,fix json compat layer to not rewrite v4 into v5 after segment merging (#14997),2023-10-04T07:18:18Z
28870c702ae08a8e677dc97da72f642c650441bf,Resolve reported CVEs (#15081),2023-10-04T06:29:01Z
2ed4fd1ae3135e1dd39dabd8f9c7462f2a979d41,"Compute broadcast-join segmentMapFn only once per worker. (#15007)


This patch introduces ""processor managers"" to processor factories, as a replacement for the sequence of processors. Processor managers can use the results of earlier processors to influence the creation of later processors, which provides us with the building block we need to ensure that broadcast join data is only read once.

In particular, when broadcast join is happening, the BaseFrameProcessorFactory now uses a ChainedProcessorManager to first run BroadcastJoinSegmentMapFnProcessor (in a single thread), and then run all of the regular processors (possibly multithreaded).",2023-10-04T06:17:00Z
7e8f3e69ef761b8471f50e070c02b830f78bf5b6,"Avoid intermediate offsets in bucketStart calculation logic to handle DST transition (#15038)

When moving timestamps by an offset using org.joda.time.chrono.ISOChronology library, if the new timestamp falls in Daylight Savings Time (DST) transition period, the library rounds it off to the nearest valid time. This can lead to incorrect final timestamp when calculated using intermediate offsets landing in DST transition, for e.g. +21D arrived at using +14D and +7D offset, where +14D lands in DST transition period. Since bucketStart values are calculated using this library, this behaviour can lead to incorrect bucketStart times.",2023-10-04T06:02:29Z
3342e03ea8b524ba1daf1432780a1f587286c8bc,"Windowing processing may have run into Exceptions when the whole table was processed (#15064)

Earlier when the query was processing the whole table; the planning may have ended with a NPE; as it was not possible to create a scanquery from it.",2023-10-04T05:57:11Z
adef2069b155f2ae5656b5e6c4e0dd4fd9879043,"Make unit tests pass with Java 21 (#15014)

This change updates dependencies as needed and fixes tests to remove code incompatible with Java 21
As a result all unit tests now pass with Java 21.

* update maven-shade-plugin to 3.5.0 and follow-up to #15042
  * explain why we need to override configuration when specifying outputFile
  * remove configuration from dependency management in favor of explicit overrides in each module.
* update to mockito to 5.5.0 for Java 21 support when running with Java 11+
  * continue using latest mockito 4.x (4.11.0) when running with Java 8  
  * remove need to mock private fields
* exclude incorrectly declared mockito dependency from pac4j-oidc
* remove mocking of ByteBuffer, since sealed classes can no longer be mocked in Java 21
* add JVM options workaround for system-rules junit plugin not supporting Java 18+
* exclude older versions of byte-buddy from assertj-core
* fix for Java 19 changes in floating point string representation
* fix missing InitializedNullHandlingTest
* update easymock to 5.2.0 for Java 21 compatibility
* update animal-sniffer-plugin to 1.23
* update nl.jqno.equalsverifier to 3.15.1
* update exec-maven-plugin to 3.1.0",2023-10-04T05:41:21Z
cb050282a03fecf5d5af5678cfac6f7a73af7a43,"Intervals are updated properly for Unnest queries (#15020)

Fixes a bug where the unnest queries were not updated with the correct intervals.",2023-10-03T21:22:10Z
64754b6799afcebc0943a18e3099069717fbd077,"Allow users to pass task payload via deep storage instead of environment variable (#14887)

This change is meant to fix a issue where passing too large of a task payload to the mm-less task runner will cause the peon to fail to startup because the payload is passed (compressed) as a environment variable (TASK_JSON). In linux systems the limit for a environment variable is commonly 128KB, for windows systems less than this. Setting a env variable longer than this results in a bunch of ""Argument list too long"" errors.",2023-10-03T08:38:59Z
f3d1c8b70ee692c6208f91f190578bc2d6e4eec7,"Enable back testcases in CalciteWindowQueryTest (#15045)

Most of the testcases were disabled in CalciteWindowQueryTest during the Calcite-1.35 upgrade; there were some changes arising from the fact that the removal of DRUID_SUM had some unexpected sideffects:

SqlStdOperatorTable.SUM became the SUM operator
because of that SqlToRelConverter started rewriting windowed SUM -s into SUM0 -s
my opinion is that w.r.t to Druid this rewrite provides no real advantage - as SUM0 is serviced by SUM here
I believe that's not 100% correct in cases when it aggregates just null-s but that doesnt matter in this case
I propose to introduce back a local DRUID_SUM thing as an unchanged SUM and later when CALCITE-6020 is fixed ; we can drop that.",2023-10-03T04:48:44Z
261f54dc040d9e95846c9d091b8dcb258ccc6c27,"coalesce on unnest row mismatch fix (#15019)

* coalesce on unnest row mismatch fix

* new example with coalesce over unnest with nested array columns

* New example with change in order which triggers the nvl

* new test plan update for useDefault=true",2023-10-03T00:26:50Z
f1edd671fb4310bed5b3f5679665d74ccd9964df,"Exposing optional replaceMissingValueWith in lookup function and macros (#14956)

* Exposing optional replaceMissingValueWith in lookup function and macros

* args range validation

* Updating docs

* Addressing comments

* Update docs/querying/sql-scalar.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Update docs/querying/sql-functions.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Addressing comments

---------

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2023-10-03T00:09:23Z
d038237eceedb7722479b2c81d1c496d346b6725,"memcached cache: switch to AWS elasticache-java-cluster-client and add TLS support  (#14827)

This PR updates the library used for Memcached client to AWS Elasticache Client : https://github.com/awslabs/aws-elasticache-cluster-client-memcached-for-java

This enables us to use the option of encrypting data in transit:
Amazon ElastiCache for Memcached now supports encryption of data in transit

For clusters running the Memcached engine, ElastiCache supports Auto Discovery—the ability for client programs to automatically identify all of the nodes in a cache cluster, and to initiate and maintain connections to all of these nodes.
Benefits of Auto Discovery - Amazon ElastiCache

AWS has forked spymemcached 2.12.1, and has since added all the patches included in 2.12.2 and 2.12.3 as part of the 1.2.0 release. So, this can now be considered as an equivalent drop-in replacement.

GitHub - awslabs/aws-elasticache-cluster-client-memcached-for-java: Amazon ElastiCache Cluster Client for Java - enhanced library to connect to ElastiCache clusters.
https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/elasticache/AmazonElastiCacheClient.html#AmazonElastiCacheClient--

How to enable TLS with Elasticache

On server side:
https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/in-transit-encryption-mc.html#in-transit-encryption-enable-existing-mc

On client side:
GitHub - awslabs/aws-elasticache-cluster-client-memcached-for-java: Amazon ElastiCache Cluster Client for Java - enhanced library to connect to ElastiCache clusters.",2023-10-02T19:51:05Z
2785e062d72858c5cb7d7042db38053efa49b1b8,Correct quotation in drill query files (#15044),2023-10-02T15:17:15Z
07c28f17ca6020c1cc0fa954d19b9b0cc8d32c1b,"Fix missing format strings in calls to DruidException.build  (#15056)

* Fix the NPE bug in nonStrictFormat

* using non null format string

* using Assert.assertThrows",2023-09-30T00:00:36Z
86087cee0a06cd5ef93b09653d923ec896efe889,"Fix Peon not fail gracefully (#14880)

* fix Peon not fail gracefully

* move methods to Task interface

* fix checkstyle

* extract to interface

* check runThread nullability

* fix merge conflict

* minor refine

* minor refine

* fix unit test

* increase latch waiting time",2023-09-29T19:39:59Z
2f1bcd67178b8972c77bebdd526dc0ec4c50d094,"Adding `""segment/scan/active"" metric for processing thread pool. (#15060)",2023-09-29T19:34:28Z
ebb9724c2646ea6fb5d1233eab85c8b7e27d5efa,Pass jvm option to write heap dump on out of memory (#15053),2023-09-29T12:24:53Z
9a4433bbad7123c8c8aa7a61b98d801cd09b7896,"Fix invalid segment path when using hdfs as the intermediate deepstore (#14984)

This PR fixes the invalid segment path when enabling druid_processing_intermediaryData_storage_type: ""deepstore"" and using hdfs as the deep store.",2023-09-29T07:23:46Z
db71e28808c9981e563447854bbeb1e5786315cc,"Enable SortProjectTransposeRule (#15002)

contains Enable already passing tests in DecoupledPlanningCalciteQueryTest #14996
enables a transpose rule to support a query plan in which the plan was in the shape:
Sort
  Project
     Aggregate",2023-09-29T05:19:03Z
5f3b3101153008408bafaf64d9c08c8a9f005b1d,"Build reliablity fixes (#15048)

* disable parallel builds; enable batch mode to get rid of transfer progress

* restore .m2 from setup-java if not found

* some change to sql

* add ws

* fix quote

* fix quote

* undo querytest change

* nullhandling in mvtest

* init more

* skip commitid plugin

* add-back 1.0C to build ; remove redundant skip-s from copy-resources; add comment",2023-09-28T19:27:52Z
fa61e654e47ca80271798c497eda2f3018e9c636,fix uploading IT docker logs to GHA artifacts (#15046),2023-09-28T09:55:52Z
022950a0c530b7ba82250b01e40505c050218c74,MV_FILTER_ONLY may run into Exceptions in case duplicate values were processed (#15012),2023-09-27T13:49:42Z
fc929e6d25f79da8596dec35669ae6ec981f2372,"upgrade shade (#15042)

Upgrade maven shade plugin to try to fix build failures

Sometimes we get maven shade errors in our integ tests becasue we don't run clean in between runs to clear the cache in order to speed them up. This can lead to the below error.
Error: Failed to execute goal org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade (opentelemetry-extension) on project opentelemetry-emitter: Error creating shaded jar: duplicate entry: META-INF/services/org.apache.druid.opentelemetry.shaded.io.grpc.NameResolverProvider

See: https://issues.apache.org/jira/projects/MSHADE/issues/MSHADE-425?filter=allissues
An example run that failed: https://github.com/apache/druid/actions/runs/6301662092/job/17117142375?pr=14887

According to the ticket this is fixed by updating shade to 3.4.1.

When I updated to 3.4.1 I kept running into a different issue during static checks. (Caused by: java.lang.NoClassDefFoundError: com/github/rvesse/airline/parser/errors/ParseException)

I had to add the createDependencyReducedPom: false to get the build to pass.

The dependency reduced pom feature was added in 3.3.0 which we were not using before so setting it explicitly to false should not be a issue. https://issues.apache.org/jira/browse/MSHADE-36)",2023-09-27T12:49:21Z
8e22a178cc9925fd28ff3bd738fa01f0888eea7c,"Support getTaskLocation for mixed task runner (#15033)

The KubernetesAndWorkerTaskRunner currently doesn't implement getTaskLocation, so tasks run by it will show a unknown TaskLocation in the druid console after a task has completed.

Fix bug in KubernetesAndWorkerTaskRunner that manifests as missing information in the druid Web Console.",2023-09-27T03:27:36Z
3dabfead0504da6b3bb25d01e5eb5a91407bb1f8,"Fix getResultType for HLL, quantiles aggregators. (#15043)

The aggregators had incorrect types for getResultType when shouldFinalze
is false. They had the finalized type, but they should have had the
intermediate type.

Also includes a refactor of how ExprMacroTable is handled in tests, to make
it easier to add tests for this to the MSQ module. The bug was originally
noticed because the incorrect result types caused MSQ queries with DS_HLL
to behave erratically.",2023-09-27T03:21:14Z
7301e60a9c506758d719cbb57426abcbf912b4b9,"Add metrics for number of segments generated per task in MSQ (#14980)

Add ingest/tombstones/count and ingest/segments/count metrics in MSQ.",2023-09-25T21:16:33Z
75af741a96df10f646d91e262cf6a08e56bda091,"Revert ""SQL: Plan non-equijoin conditions as cross join followed by filter. (#14978)"" (#15029)

This reverts commit 4f498e64691ecd22eaa2c940d1d0d57e769ee9e7.",2023-09-25T18:35:44Z
ba6101ad7524668ebf9522f19c63da5e8120f9a8,"Remove `EOFException` catch block from the Avro decoders (#15018)

* Remove stale comment since we're on avro version 1.11.1

* Update exception blocks. With 1.11.1, read() only throws IOException.

* Unit tests

* Cleanup and add more tests.",2023-09-25T15:38:41Z
f7a549123b9783cf24c315879781f01dbfee55a0,"Commit segments only when they are covered by active locks (#15027)

* Commit segments only when they are covered by active locks",2023-09-25T08:15:42Z
48b6d2abf9728f152bbc60ad73a2bca5699e41cf,skip org.owasp:dependency-check on extensions-contrib modules and suppress false-positive gRPC CVEs (#15026),2023-09-25T06:44:42Z
0850e615b2fbb0a2b2813dd48a1d0a8fc61ee0da,"Remove istrue, isfalse vectorized impls. (#14991)

These were added in #14977, but the implementations are incorrect, because they return null when the input arg is null. They should return false when the input is null. Remove them for now, rather than fixing them, since they're so new that they might as well never have existed.",2023-09-25T06:04:24Z
c184b5250f1f8fca64ffe1d34dc1157fbe96c271,"Unnest now works on MSQ (#14886)

This entails:
    Removing the enableUnnest flag and additional machinery
    Updating the datasource plan and frame processors to support unnest
    Adding support in MSQ for UnnestDataSource and FilteredDataSource
    CalciteArrayTest now has a MSQ test component
    Additional tests for Unnest on MSQ",2023-09-25T03:49:21Z
c62193c4d75b3dbea3f26f338ddacf0c9189a0db,"Add support for concurrent batch Append and Replace (#14407)

Changes:
- Add task context parameter `taskLockType`. This determines the type of lock used by a batch task.
- Add new task actions for transactional replace and append of segments
- Add methods StorageCoordinator.commitAppendSegments and commitReplaceSegments
- Upgrade segments to appropriate versions when performing replace and append
- Add new metadata table `upgradeSegments` to track segments that need to be upgraded
- Add tests",2023-09-25T01:36:37Z
d7c152c82c16983109a303cb4ea5eb03861dbedf,"Add a TaskReport for ""kill"" tasks (#15023)

- Add `KillTaskReport` that contains stats for `numSegmentsKilled`,
`numBatchesProcessed`, `numSegmentsMarkedAsUnused`
- Fix bug where exception message had no formatter but was was still being passed some args.
- Add some comments regarding deprecation of `markAsUnused` flag.",2023-09-23T02:14:27Z
be3f93e3cf0c9f10292d1d5349b24a9402dd38de,"Restore tasks when lifecycle start (#14909)

* K8s tasks restore should be from lifecycle start

* add test

* add more tests

* fix test

* wait tasks restore finish when start

* fix style

* revert previous change and add comment",2023-09-22T19:03:34Z
5cee9f614842e6dd1cb26b7c06733adee0d5abf8,"Allow cancellation of MSQ tasks if they are waiting for segments to load (#15000)

With PR #14322 , MSQ insert/Replace q's will wait for segment to be loaded on the historical's before finishing.

The patch introduces a bug where in the main thread had a thread.sleep() which could not be interrupted via the cancel calls from the overlord.

This new patch addressed that problem by moving the thread.sleep inside a thread of its own. Thus the main thread is now waiting on the future object of this execution.

The cancel call can now shutdown the executor service via another method thus unblocking the main thread to proceed.",2023-09-22T05:51:04Z
409bffe7f2892ac192c99ff329f6db3dc9f4b1ae,"Rename IMSC.announceHistoricalSegments to commitSegments (#15021)

This commit pulls out some changes from #14407 to simplify that PR.

Changes:
- Rename `IndexerMetadataStorageCoordinator.announceHistoricalSegments` to `commitSegments`
- Rename the overloaded method to `commitSegmentsAndMetadata`
- Fix some typos",2023-09-21T10:49:03Z
e76962f45386602cb54051980378a75f18bc810a,Use annotation to mark DecoupleIgnore (#15005),2023-09-21T07:06:52Z
ebb794632ac57612dcf6380783e6d4e64ec1b56d,"Allow users with STATE permissions to read and write the state APIs for querying with deep storage (#14944)

Currently, only the user who has submitted the async query has permission to interact with the status APIs for that async query. However, often we want an administrator to interact with these resources as well.
Druid handles these with the STATE resource traditionally, and if the requesting user has necessary permissions on it as well, alternatively, they should be allowed to interact with the status APIs, irrespective of whether they are the submitter of the query.",2023-09-21T01:25:07Z
883c2692d23554f5f45aa847b46c5ced25601ab5,"Adding new function decode_base64_utf8 and expr macro (#14943)

* Adding new function decode_base64_utf8 and expr macro

* using BaseScalarUnivariateMacroFunctionExpr

* Print stack trace in case of debug in ChainedExecutionQueryRunner

* fix static check",2023-09-21T00:06:34Z
22abc10f24596972ea367ff6efcae1014c242650,"update RoaringBitmap to 0.9.49 (#15006)

* update RoaringBitmap to 0.9.49

update RoaringBitmap from 0.9.0 to 0.9.49

Many optimizations and improvements have gone into recent releases of
RoaringBitmap. It seems worthwhile to incorporate those.

* implement workaround for BatchIterator interface change

* add test case for BatchIteratorAdapter.advanceIfNeeded",2023-09-20T22:52:27Z
82e809c8d05fd670669fb36d806416a6e73835f2,fix (#15017),2023-09-20T22:48:26Z
08cf290da27ad159f121e4480d09c1da702683a7,"Configure caching for static-check actions (#15010)

* some stuff

* some stuff

* dont change it.sh

* some stuff

* updates

* add missing

* add 1 more

* setup-java",2023-09-20T21:11:39Z
823f620edea2c6bc75703358a6a5ae086c6aa04e,"Add IS [NOT] DISTINCT FROM to SQL and join matchers. (#14976)

* Add IS [NOT] DISTINCT FROM to SQL and join matchers.

Changes:

1) Add ""isdistinctfrom"" and ""notdistinctfrom"" native expressions.

2) Add ""IS [NOT] DISTINCT FROM"" to SQL. It uses the new native expressions
   when generating expressions, and is treated the same as equals and
   not-equals when generating native filters on literals.

3) Update join matchers to have an ""includeNull"" parameter that determines
   whether we are operating in ""equals"" mode or ""is not distinct from""
   mode.

* Main changes:

- Add ARRAY handling to ""notdistinctfrom"" and ""isdistinctfrom"".
- Include null in pushed-down filters when using ""notdistinctfrom"" in a join.

Other changes:
- Adjust join filter analyzer to more explicitly use InDimFilter's ValuesSets,
  relying less on remembering to get it right to avoid copies.

* Remove unused ""wrap"" method.

* Fixes.

* Remove methods we do not need.

* Fix bug with INPUT_REF.",2023-09-20T17:44:32Z
79f882f48c15eef77d627f1d31212d6c09cae315,Fix exception cause logging in QueryResultPusher  (#14975),2023-09-20T10:14:02Z
e8773f4d0f5e215f3ec7f651b08e55b6071c06ba,Enable already passing tests in DecoupledPlanningCalciteQueryTest (#14996),2023-09-20T10:12:52Z
73bab2f0205c7f718c34bebd3bc87422defa6e44,"Add option to copy query results directly to clipboard (#14889)

* Add option to copy query results to clipboard

* Refactor, allow copying in all formats

---------

Co-authored-by: Sam Wheating <sam.wheating@reddit.com>",2023-09-19T17:25:39Z
4f498e64691ecd22eaa2c940d1d0d57e769ee9e7,"SQL: Plan non-equijoin conditions as cross join followed by filter. (#14978)

* SQL: Plan non-equijoin conditions as cross join followed by filter.

Druid has previously refused to execute joins with non-equality-based
conditions. This was well-intentioned: the idea was to push people to
write their queries in a different, hopefully more performant way.

But as we're moving towards fuller SQL support, it makes more sense to
allow these conditions to go through with the best plan we can come up
with: a cross join followed by a filter. In some cases this will allow
the query to run, and people will be happy with that. In other cases,
it will run into resource limits during execution. But we should at
least give the query a chance.

This patch also updates the documentation to explain how people can
tell whether their queries are being planned this way.

* cartesian is a word.

* Adjust tests.

* Update docs/querying/datasource.md

Co-authored-by: Benedict Jin <asdf2014@apache.org>

---------

Co-authored-by: Benedict Jin <asdf2014@apache.org>",2023-09-19T17:23:42Z
d459df8d6e3789e6ad234289b27e55a92667b1ea,Fix log syntax (#15004),2023-09-18T17:40:02Z
973fbaf962fbf5d442c511d39ee077b4d2ff5053,Adding addition logging for taskIdReady in MSQ for debugging lock races. (#14998),2023-09-17T20:11:58Z
39d95955f5508143b4fd2352baa3fe60a4920357,Do not eagerly close inner iterators in CloseableIterator#flatMap (#14986),2023-09-15T09:44:20Z
0fc5d5405a750d346d4c7a5513d6987fb6666fff,Tweak GHA runner label for MSQ (#14992),2023-09-15T05:44:21Z
279b3818f0e02f6a2ff389532f1e6118598a7c24,"Make Unnest work with nullif operator (#14993)

This is due to the recursive filter creation in unnest storage adapter not performing correctly in case of an empty children. This PR addresses the issue",2023-09-15T04:24:14Z
3ae5e978012e7a553e6ad3007eb210ab8da5b6fc,"Add IS [NOT] TRUE, IS [NOT] FALSE native functions. (#14977)

They are not quite the same as ""x == true"", ""x != true"", etc. These
functions never return null, even when ""x"" itself is null.",2023-09-14T16:19:09Z
0e3df2d2e9eb3388d43ac722a76de53a6a263ee8,"Clean up stale locks if segment allocation fails (#14966)

* Clean up stale locks if segment allocation fails due to an exception",2023-09-14T09:28:02Z
7bbefd57413ce4fcaa291af1af75e49079db3980,Updating version in from.ftl (#14982),2023-09-14T05:11:36Z
5c42ac8c4dbbc8fa34ab3910145847cea2e49ec1,"Fix for latest agg to handle nulls in time column. Also adding optimi… (#14911)

* Fix for latest agg to handle nulls in time column. Also adding optimization for dictionary encoded string columns

* One minor fix

* Adding more tests for the new class

* Changing the init to a putInt",2023-09-14T00:37:26Z
bf99d2c7b2e4436751c1d42c0e07b3e3ed36562e,"Fix for schema mismatch to go down using the non vectorize path till we update the vectorized aggs properly (#14924)

* Fix for schema mismatch to go down using the non vectorize path till we update the vectorized aggs properly

* Fixing a failed test

* Updating numericNilAgg

* Moving to use default values in case of nil agg

* Adding the same for first agg

* Fixing a test

* fixing vectorized string agg for last/first with cast if numeric

* Updating tests to remove mockito and cover the case of string first/last on non string columns

* Updating a test to vectorize

* Addressing review comments: Name change to NilVectorAggregator and using static variables now

* fixing intellij inspections",2023-09-13T20:15:14Z
7f757e33f06ff3d6df4a3f200c095ffb3dfcd7ab,Fix the created property in DOAP RDF file (#14971),2023-09-13T13:12:35Z
4c57504960568893dd387d26e2dce1acba8b6b4f,"Fix the uncaught exceptions when materializing results as frames (#14970)

When materializing the results as frames, we defer the creation of the frames in ScanQueryQueryToolChest, which passes through the catch-all block reserved for catching cases when we don't have the complete row signature in the query (and falls back to the old code).
This PR aims to resolve it by adding the frame generation code to the try-catch block we have at the outer level.",2023-09-13T10:11:28Z
b7bb5ee1dbfe1e982c5221f34c5161182ad11ea2,"Upload docker and druid service logs as artifacts on GitHub Actions IT run failure (#14967)

With this PR, docker and druid service logs are uploaded as artifacts onto GitHub when an IT job fails so that we can later download them for investigation.",2023-09-13T06:02:04Z
23b78c0f955860d51add780178ef8a4526b334db,use mmap for nested column value to dictionary id lookup for more chill heap usage during serialization (#14919),2023-09-13T04:01:18Z
286eecad7cfe02369157073fd4915a7a0b480ec1,"Simplify DruidCoordinatorConfig and binding of metadata cleanup duties (#14891)

Changes:
- Move following configs from `CliCoordinator` to `DruidCoordinatorConfig`:
  - `druid.coordinator.kill.on`
  - `druid.coordinator.kill.pendingSegments.on`
  - `druid.coordinator.kill.supervisors.on`
  - `druid.coordinator.kill.rules.on`
  - `druid.coordinator.kill.audit.on`
  - `druid.coordinator.kill.datasource.on`
  - `druid.coordinator.kill.compaction.on`
- In the Coordinator style used by historical management duties, always instantiate all
 the metadata cleanup duties but execute only if enabled. In the existing code, they are
instantiated only when enabled by using optional binding with Guice.
- Add a wrapper `MetadataManager` which contains handles to all the different
metadata managers for rules, supervisors, segments, etc.
- Add a `CoordinatorConfigManager` to simplify read and update of coordinator configs
- Remove persistence related methods from `CoordinatorCompactionConfig` and
`CoordinatorDynamicConfig` as these are config classes.
- Remove annotations `@CoordinatorIndexingServiceDuty`,
`@CoordinatorMetadataStoreManagementDuty`",2023-09-13T03:36:57Z
6371721e17ef01b824ccd65adff855f0960a08c8,"Add DOAP file for Druid (#14954)

The DOAP file is a standard RDF file that describes a project's metadata.
The Apache Software Foundation uses DOAP files for projects to keep project
listing information at https://projects.apache.org/projects.html

This change just introduces basic information about the project. Future
changes can add more information like each release that goes out.

The descriptions were pulled from the website and the README in this repo.",2023-09-13T00:40:21Z
891f0a3fe9942878ec6bab6ebb3f02e33a043a11,"longer compatibility window for nested column format v4 (#14955)

changes:
* add back nested column v4 serializers
* 'json' schema by default still uses the newer 'nested common format' used by 'auto', but now has an optional 'formatVersion' property which can be specified to override format versions on native ingest jobs
* add system config to specify default column format stuff, 'druid.indexing.formats', and property 'druid.indexing.formats.nestedColumnFormatVersion' to specify system level preferred nested column format for friendly rolling upgrades from versions which do not support the newer 'nested common format' used by 'auto'",2023-09-12T21:07:53Z
5d16d0edf088ac2c4fdec7f4296d2d9f1263dc7d,"Count distinct returned incorrect results without useApproximateCountDistinct (#14748)

* fix grouping engine handling of summaries when result set is empty",2023-09-12T20:57:54Z
0f38a37b9d80609c5b91153ff27fcf6107c7613b,"Tweak GHA runner label. (#14963)

- processing/** can be ingestion, querying or neither. Removing it
for now.
- Also, add msq extension for the querying label.",2023-09-12T03:09:26Z
5cecf6ce8f5cf027429ed4f0c9f88f099d6aa470,fix issue with segment metadata cache and complex types when doing out of order upgrades from 0.22 (#14948),2023-09-12T02:54:35Z
757603a773d4459a8a2be2ba74d972d70eadb3f6,"Set task location as k8sPodName for mm-less ingestion (#14959)

* Set task location as k8sPodName for mm-less ingestion

* tests",2023-09-12T02:44:26Z
f773d839147a8084901e3fb717821f90bbfac5f3,"Mixed task runner for migration to mm-less ingestion (#14918)

* save work

* Working

* Fix runner constructor

* Working runner

* extra log lines

* try using lifecycle for everything

* clean up configs

* cleanup /workers call

* Use a single config

* Allow selecting runner

* debug changes

* Work on composite task runner

* Unit tests running

* Add documentation

* Add some javadocs

* Fix spelling

* Use standard libraries

* code review

* fix

* fix

* use taskRunner as string

* checkstyl

---------

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2023-09-12T01:09:46Z
3a453f7a3cd589307f4c296bd189d2f73822abcb,"docs: add note about transparent_reconnection (#14953)

* add note about transparent_reconnection

* Update docs/api-reference/sql-jdbc.md",2023-09-11T18:58:39Z
7871e633c68d54d1a7b925d000771a5ce7517de9,Fix bug in KillStalePendingSegments (#14961),2023-09-11T09:48:15Z
dec6a0aa14d3d0100e14199617ab44624f76437f,"Update google client apis to latest version (#14414)

Currently Druid is using google apis client 1.26.0 version and google-oauth-client-1.26.0.jar in particular is bringing following CVEs CVE-2020-7692, CVE-2021-22573. Despite the CVEs being false positives, they're causing red security scans on Druid distribution. Hence updating the version to latest version with these CVE fixes.",2023-09-11T06:57:23Z
2b7f2c51190adfe0368b76abfa4059974f3910ef,use VectorValueSelector instead of BaseLongVectorValueSelector for StringFirstAggregatorFactory.factorizeVector (#14957),2023-09-09T11:03:05Z
09f7dfe32783b732a6afc5792a17e86a920842c2,docs: update docusaurus 2 stuff (#14864),2023-09-08T21:19:15Z
699893bcff20216b5d3a17a64e3c8c1d0e72ca9e,"Fix StringLastAggregatorFactory equals/toString (#14907)

* update test

* update test

* format

* test

* fix0

* Revert ""fix0""

This reverts commit 44992cb3932158c1253134bc689884abd4650fd3.

* ok resultset

* add plan

* update test

* before rewind

* test

* fix toString/compare/test

* move test

* add timeColumn to hashCode",2023-09-08T16:20:54Z
647686aee2a0cf29cc50a13c53d97b61ba479e0c,"Add test and metrics for KillStalePendingSegments duty (#14951)

Changes:
- Add new metric `kill/pendingSegments/count` with dimension `dataSource`
- Add tests for `KillStalePendingSegments`
- Reduce no-op logs that spit out for each datasource even when no pending
segments have been deleted. This can get particularly noisy at low values of `indexingPeriod`.
- Refactor the code in `KillStalePendingSegments` for readability and add javadocs",2023-09-08T05:03:47Z
f9cf500a69543326699c6d72efdf67560318d469,"Extend GHA autolabeler to other areas (#14903)

* Automate adding labels.

* Add metrics/event emitting label

* ingestion and segment format",2023-09-08T03:25:37Z
e100b18e86fb1cabf43cf21e9904107335850e6e,Updated documentation for OshiSysMonitor (#14912),2023-09-07T11:24:33Z
88f3c9baed5f76bdca66c3284b4368894d7d8462,"Fix bug in computed value of balancerComputeThreads (#14947)

In smartSegmentLoading mode, use computed value of balancerComputeThreads
rather than configured value.",2023-09-06T19:44:05Z
a8fa979115a404e9cc418bb9e604873921e3c4d1,"Unnest dont push down not (#14942)

* Not pushing down not filters

* New test case

* Updating tests

* Removing a stale comment",2023-09-06T15:57:03Z
23308c050da41769dc0e4ac00645a83483160e27,"Remove DruidAggregateCaseToFilterRule (#14940)

The issue due to which the custom rule was added has been fixed as a part of https://issues.apache.org/jira/browse/CALCITE-3763 and accommodated during Calcite upgrade",2023-09-06T13:41:58Z
6ee0b06e38d9512c9240f55344ed185d2f62a3a6,"Auto configuration for maxSubqueryBytes (#14808)

A new monitor SubqueryCountStatsMonitor which emits the metrics corresponding to the subqueries and their execution is now introduced. Moreover, the user can now also use the auto mode to automatically set the number of bytes available per query for the inlining of its subquery's results.",2023-09-06T05:47:19Z
959148ad370f4133c59f24f8afc3f297b0911e41,"Add code to wait for segments generated to be loaded on historicals (#14322)

Currently, after an MSQ query, the web console is responsible for waiting for the segments to load. It does so by checking if there are any segments loading into the datasource ingested into, which can cause some issues, like in cases where the segments would never be loaded, or would end up waiting for other ingests as well.

This PR shifts this responsibility to the controller, which would have the list of segments created.",2023-09-06T05:05:57Z
706b57c0b2a80d7278a1456da605ec998f6e3b0b,fixup array and mvd sql docs (#14928),2023-09-05T23:17:00Z
425ebaa387ce27fd46a54e23ce360abe82aa17dd,"Query tips doc (#14922)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-09-05T21:16:01Z
8088a763a69e54cca9b4c1d350e0b68b1eccd243,"Vectorize earliest aggregator for both numeric and string types (#14408)

* Vectorizing earliest for numeric

* Vectorizing earliest string aggregator

* checkstyle fix

* Removing unnecessary exceptions

* Ignoring tests in MSQ as earliest is not supported for numeric there

* Fixing benchmarks

* Updating tests as MSQ does not support earliest for some cases

* Addressing review comments by adding the following:
1. Checking capabilities first before creating selectors
2. Removing mockito in tests for numeric first aggs
3. Removing unnecessary tests

* Addressing issues for dictionary encoded single string columns where we can use the dictionary ids instead of the entire string

* Adding a flag for multi value dimension selector

* Addressing comments

* 1 more change

* Handling review comments part 1

* Handling review comments and correctness fix for latest_by when the time expression need not be in sorted order

* Updating numeric first vector agg

* Revert ""Updating numeric first vector agg""

This reverts commit 429170990192883e51812311c49d2e461e6db732.

* Updating code for correctness issues

* fixing an issue with latest agg

* Adding more comments and removing an unnecessary check

* Addressing null checks for tie selector and only vectorize false for quantile sketches",2023-09-05T15:41:42Z
9d6ca61ac1f00fcd23ba165ce2af4640b15e9df3,Verify statsd mock client interaction in unit test (#14939),2023-09-05T14:34:22Z
289ee1e0114efc08b86c1e63b6d195897aa5baa7,"Refactor: Cleanup NoopTask (#14938)

Changes:
- Simplify static `create` methods for `NoopTask`
- Remove `FirehoseFactory`, `IsReadyResult`, `readyTime` from `NoopTask`
as these fields were not being used anywhere
- Update tests",2023-09-05T03:45:41Z
d4e972e1e4b798d7e057e910deea4d192fe57952,"Add checking for new checkpoint (#14353)

Check that a checkpoint is non-empty before adding it to the checkpoint sequence 
in a SeekableStreamSupervisor",2023-09-04T07:48:55Z
ec630e3671045340e463111692ec054aa615ea42,"Remove deprecated coordinator dynamic configs (#14923)

Changes:

[A] Remove config `decommissioningMaxPercentOfMaxSegmentsToMove`
- It is a complicated config 😅 , 
- It is always desirable to prioritize move from decommissioning servers so that
they can be terminated quickly, so this should always be 100%
- It is already handled by `smartSegmentLoading` (enabled by default)

[B] Remove config `maxNonPrimaryReplicantsToLoad`
This was added in #11135 to address two requirements:
- Prevent coordinator runs from getting stuck assigning too many segments to historicals
- Prevent load of replicas from competing with load of unavailable segments

Both of these requirements are now already met thanks to:
- Round-robin segment assignment
- Prioritization in the new coordinator
- Modifications to `replicationThrottleLimit`
- `smartSegmentLoading` (enabled by default)",2023-09-04T06:24:36Z
7f26b80e2136a122952a1dea58a135edeb971177,"Simplify ServiceMetricEvent.Builder (#14933)

Changes:
- Make ServiceMetricEvent.Builder extend ServiceEventBuilder<ServiceMetricEvent>
and thus convert it to a plain builder rather than a builder of builder.
- Add methods setCreatedTime , setMetricAndValue to the builder",2023-09-01T06:00:45Z
dea9d4f1a75dd3681c6a94f86a317d22b1599af3,cleaning DruidProcessingConfig bindings (#14927),2023-08-31T05:35:08Z
680669fd3a72524be71070375a11e6da637a9bec,show execution dialog in task view (#14930),2023-08-30T22:59:34Z
04a1153d0f55c228cadcc0036772efe554f56eb4,line chart fix others not mapping correctly (#14931),2023-08-30T22:59:26Z
42cfb999cd5a671432a59f14b3cb34187d65c3d3,Added brush to time-chart (#14929),2023-08-30T17:36:50Z
d295b9158ff12800bd33213559f20b672d7c2c87,"Web console: dynamic query parameters UI (#14921)

* fix nvl in table

* add query parameter dialog

* pre-wrap in the tables

* fix typo",2023-08-30T06:14:25Z
8263f0d1e935708bf45abfe0ffc200289f96a740,"Reduce coordinator logs when operating normally (#14926)

Changes:
- Reduce log level of some coordinator stats, which only denote normal coordinator operation.
These stats are still emitted and can be logged by setting debugDimensions in the coordinator
dynamic config.
- Initialize SegmentLoadingConfig only for historical management duties. This config is not
needed in other duties and initializing it creates logs which are misleading.",2023-08-30T06:00:38Z
d201ea0ece00cf4408b0f358d93071472c606c4e,"prometheus-emitter: add extraLabels parameter (#14728)

* prometheus-emitter: add extraLabels parameter

* prometheus-emitter: update readme to include the extraLabels parameter

* prometheus-emitter: remove nullable and surface label name issues

* remove import to make linter happy",2023-08-29T19:02:22Z
004cd012e1cf94f8bb948d7c350f8c06df44af72,"HttpClient: Include error handler on all connection attempts. (#14915)

Currently we have an error handler for https connection attempts, but
not for plaintext connection attempts. This leads to warnings like the
following for plaintext connection errors:

  EXCEPTION, please implement org.jboss.netty.handler.codec.http.HttpContentDecompressor.exceptionCaught() for proper handling.

This happens because if we don't add our own error handler, the last
handler in the chain during a connection attempt is HttpContentDecompressor,
which doesn't handle errors.

The new error handler for plaintext doesn't do much: it just closes
the channel.",2023-08-29T08:58:04Z
8885805bb397f4b12647ffeecb7f8e532b838ed1,Update filters.md (#14917),2023-08-28T22:29:00Z
d6565f46b00108e008d492cc1df8a58559ea4cd2,"Increase the computed value of replicationThrottleLimit (#14913)

Changes
- Increase value of `replicationThrottleLimit` computed by `smartSegmentLoading` from
2% to 5% of total number of used segments.
- Assign replicas to a tier even when some replicas are already being loaded in that tier
- Limit the total number of replicas in load queue at start of run + replica assignments in
the run to the `replicationThrottleLimit`.

i.e. for every tier,
    num loading replicas at start of run + num replicas assigned in run <= replicationThrottleLimit",2023-08-28T12:50:22Z
9fcbf05c5d5465b21fd8c08d916daf6e451ebd0e,Adjusting `SqlStatementResource` and `SqlTaskResource` to set request attribute via a new method. (#14878),2023-08-26T10:59:47Z
30c49c4cfc39bea1745eff1c6a1f195587f64842,"Web console: misc fixes and SQL query re-formatting (#14906)

* better dialog formatting

* use CSS to render triangle

* can flatten in kafka also

* better formatting

* better format

* fill in empty values in line chart

* more fp

* add show others",2023-08-25T22:18:37Z
9142f4b8d7acf8942f6a0df20052b32eb85d91e2,docs: update note in automatic compaction doc (#14908),2023-08-25T21:14:29Z
95b0de61d172a323aead25571b8b83b4ae0b7120,"Move some lifecycle management from doTask -> shutdown for the mm-less task runner (#14895)

* save work

* Add syncronized

* Don't shutdown in run

* Adding unit tests

* Cleanup lifecycle

* Fix tests

* remove newline",2023-08-25T16:50:38Z
ad32f8458670339808a3136a9578a10a52b8394f,"Fix capacity response in mm-less ingestion (#14888)

Changes:
- Fix capacity response in mm-less ingestion.
- Add field usedClusterCapacity to the GET /totalWorkerCapacity response.
This API should be used to get the total ingestion capacity on the overlord.
- Remove method `isK8sTaskRunner` from interface `TaskRunner`",2023-08-25T02:47:38Z
e51181957c596aac55c63c20e5966eba9c86d2ff,"Use num cores to determine balancerComputeThreads (#14902)

Changes:
- Determine the default value of balancerComputeThreads based on number of
coordinator cpus rather than number of segments. Even if the number of segments
is low and we create more balancer threads, it doesn't hurt the system as threads
would mostly be idle.
- Remove unused field from SegmentLoadQueueManager

Expected values:
- Clusters with ~1M segments typically work with Coordinators having 16 cores or more.
This would give us 8 balancer threads, which is the same as the current maximum.
- On small clusters, even a single thread is enough to do the required balancing work.",2023-08-25T02:45:27Z
388d5ecf78de51cbe81a7076a2b23250bff7b8fa,"Fix reported CVEs (#14882)

Suppress CVEs from dependencies with no available fix or false positives
hadoop-annotations: CVE-2022-25168, CVE-2021-33036
hadoop-client-runtime: CVE-2023-1370, CVE-2023-37475
okio: CVE-2023-3635
Upgrade grpc version to fix CVE-2023-33953",2023-08-24T13:58:55Z
3c7b237c22505e195c4c6278c4123707755da7e4,"Add docs for ingesting Kafka topic name (#14894)

Add documentation on how to extract the Kafka topic name and ingest it into the data.",2023-08-24T13:49:59Z
54336e2a3e20abcb6a6e4df21175acc18811d209,"Imporve on incremental compilation (#14860)

This patch fixes a few issues toward #14858

1. some phony classes were added to enable maven to track the compilation of those classes
2. cyclonedx 2.7.9 seem to handle incremental compilation better; it had a PR relating to that
3. needed to update root pom to 25
4. update antlr to 4.5.3 older one didn't really worked incrementally; 4.5.3 works much better",2023-08-24T10:36:16Z
f9f734cde5b6dd6e540b189645de0eaf6f18a091,"Display the output column name in InvalidNullByteException (#14780)

This PR maps the query column to the output column name while surfacing the fault since that is readily visible to the user while executing the query.",2023-08-24T04:24:41Z
36e659a501522da62b11169ab771d578a4595bc5,"remove group-by v1 (#14866)

* remove group-by v1

* docs

* remove unused configs, fix test

* fix test

* adjustments

* why not

* adjust

* review stuff",2023-08-23T19:44:06Z
0c76df1c7dcc7e376f88de1bf8c8e4611060b2d0,"Enable Continuous auto kill (#14831)

### Description

This change enables the `KillUnusedSegments` coordinator duty to be scheduled continuously. Things that prevented this, or made this difficult before were the following:

1. If scheduled at fast enough rate, the duty would find the same intervals to kill for the same datasources, while kill tasks submitted for those same datasources and intervals were already underway, thus wasting task slots on duplicated work.

2. The task resources used by auto kill were previously unbounded.  Each duty run period, if unused
 segments were found for any datasource, a kill task would be submitted to kill them.

This pr solves for both of these issues:

1. The duty keeps track of the end time of the last interval found when killing unused segments for each datasource, in a in memory map. The end time for each datasource, if found, is used as the start time lower bound, when searching for unused intervals for that same datasource. Each duty run, we remove any datasource keys from this map that are no longer found to match datasources in the system, or in whitelist, and also remove a datasource entry, if there is found to be no unused segments for the datasource, which happens when we fail to find an interval which includes unused segments. Removing the datasource entry from the map,  allows for searching for unusedSegments in the datasource from the beginning of time once again

2. The unbounded task resource usage can be mitigated with coordinator dynamic config added as part of https://github.com/apache/druid/commit/ba957a9b97b6bdbecb166db771721cced1dac365


Operators can configure continous auto kill by providing coordinator runtime properties similar to the following:

```
druid.coordinator.period.indexingPeriod=PT60S
druid.coordinator.kill.period=PT60S
```

And providing sensible limits to the killTask usage via coordinator dynamic properties.",2023-08-23T13:23:08Z
dfb5a988882848b855bc1a65358cf4f2ff0f2064,"Add coordinator API for unused segments (#14846)

There is a current issue due to inconsistent metadata between worker and controller in MSQ. A controller can receive one set of segments, which are then marked as unused by, say, a compaction job. The worker would be unable to get the segment information as MetadataResource.",2023-08-23T09:21:25Z
989ed8d0c206b95d793efa005830722f4cc4f8be,Fix null check for JWT claims (#14872),2023-08-23T09:09:23Z
76e5048aabe2449d6e6607c41743502b5e50f657,fix supervisor spec api submission commands (#14877),2023-08-23T09:08:09Z
e806d09309942c776749d4364d5cbf3a62ac34d4,Allow EARLIEST/EARLIEST_BY/LATEST/LATEST_BY for STRING columns without specifying maxStringBytes (#14848),2023-08-23T05:50:19Z
7b5012ea6e3796851040a1ba316018d43343682a,override retry attempts for InputEntityIteratingReaderTest for much faster test run (#14897),2023-08-23T05:01:47Z
fb053c399cf14a0c5d651f9c45125fb12cb3f100,"consolidate json and auto indexers, remove v4 nested column serializer (#14456)",2023-08-23T01:50:11Z
6817de9376c7ae9074d167d5c3ee7a316aaf2635,Doc changes for avatica transparent reconnection (#14896),2023-08-22T18:58:17Z
b9a33949fd461bbf601fbf06eccb44fd1b2a7129,"Fix aggregation filter expression processing in the absense of projection (#14893)

* test

* fix

* add 33 test

* crap

* Revert ""crap""

This reverts commit 2751198debdcf3ee0c0ab9f56a8dfa7477308d93.

* cleanup test

* celanup

* rename test",2023-08-22T17:17:14Z
9376d8d6e1c952a57aef1aa6e863547f95c338a7,"Refactor: Move `UpdateCoordinatorStateAndPrepareCluster` duty out of `DruidCoordinator` (#14845)

Motivation:
- Clean up `DruidCoordinator` and move methods to classes where they are most relevant

Changes:
- No functional change
- Add duty `PrepareBalancerAndLoadQueues` to replace `UpdateCoordinatorState`
- Move map of `LoadQueuePeon` from `DruidCoordinator` to `LoadQueueTaskMaster`
- Make `BalancerStrategyFactory` an abstract class and keep the balancer executor here
- Move reporting of used segment stats and historical capacity stats from
`CollectSegmentAndServerStats` to `PrepareBalancerAndLoadQueues`
- Move reporting of unavailable and under-replicated segment stats from
`CollectSegmentAndServerStats` to `UpdateReplicationStatus` duty",2023-08-22T14:20:41Z
14c1aff150dd369a7b4fa87a64140ba2ed6c17f2,"Fix error messages relating to OVERWRITE keyword (#14870)

OVERWRITE should not be a fully reserved keyword",2023-08-22T10:47:49Z
bd505062de13e7b54999faf80a9c771e6a3f93a2,"Improve streaming ingestion completion timeout error message (#14636)

* Improve streaming ingestion completion timeout error message

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>
Co-authored-by: Benedict Jin <asdf2014@apache.org>",2023-08-22T09:03:28Z
194a9c9abc1b6edf98c2652687515200c6cbd3e8,set druid.expressions.useStrictBooleans to true by default (#14734),2023-08-22T07:19:56Z
d87056e708c9a7e7ee530131ec41a6c8ccde675d,"Upgrade guava version to 31.1-jre (#14767)

Currently, Druid is using Guava 16.0.1 version. This upgrade to 31.1-jre fixes the following issues.

CVE-2018-10237 (Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable). We don't use Java or GWT serializations. Despite being false positive they're causing red security scans on Druid distribution.
Latest version of google-client-api is incompatible with the existing Guava version. This PR unblocks Update google client apis to latest version #14414",2023-08-22T06:39:53Z
18f7cb69262c93cb0003a237032c1d877641d6cc,Fixed broken URL of python api tutorial (#14881),2023-08-22T04:23:41Z
5d1412949e4f8ff99c54021da82f34ec842891e2,"enable sql compatible null handling mode by default (#14792)

* enable sql compatible null handling mode by default
* fix bug with string first/last aggs when druid.generic.useDefaultValueForNull=false",2023-08-22T03:07:13Z
5f74ef56f1803771128780444effdb37e019aa7e,"Clean up Kafka supervisor topic (#14651)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-08-21T18:55:38Z
9fe7c01c16c7c7079e615157047b1498a6165811,"Automatic compaction API documentation refactor (#14740)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>
Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-08-21T18:34:41Z
0dfd99e3811101ad0b522a7da9c9ed30bd60f558,"202307-notebook-unionall (#14726)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-08-21T17:55:58Z
631dc3b589e01288680d28ece2f709917f32d710,add Kafka topic column controls (#14865),2023-08-21T16:03:23Z
a38b4f04919c04bef2aaa9d6ffd4bcb3a653653a,"Add topic name as a column in the Kafka Input format (#14857)

This PR adds a way to store the topic name in a column. Such a column can be used to distinguish messages coming from different topics in multi-topic ingestion.",2023-08-21T16:02:34Z
92906059d2997a6902eac03b2a5198e5164043df,"Remove segmentsToBeDropped from SegmentTransactionInsertAction (#14883)

Motivation:
- There is no usage of the `SegmentTransactionInsertAction` which passes a
non-null non-empty value of `segmentsToBeDropped`.
- This is not really needed either as overshadowed segments are marked as unused
by the Coordinator and need not be done in the same transaction as committing segments.
- It will also help simplify the changes being made in #14407 

Changes:
- Remove `segmentsToBeDropped` from the task action and all intermediate methods
- Remove related tests which are not needed anymore",2023-08-21T14:38:56Z
c211dcc4b310eaafe0c9acc78d3d84c24a6770c9,"Clean up compaction logs on coordinator (#14875)

Changes:
- Move logic of `NewestSegmentFirstIterator.needsCompaction` to `CompactionStatus`
to improve testability and readability
- Capture the list of checks performed to determine if compaction is needed in a readable
manner in `CompactionStatus.CHECKS`
- Make `CompactionSegmentIterator` iterate over instances of `SegmentsToCompact`
instead of `List<DataSegment>`. This allows use of the `umbrellaInterval` later.
- Replace usages of `QueueEntry` with `SegmentsToCompact`
- Move `SegmentsToCompact` out of `NewestSegmentFirstIterator`
- Simplify `CompactionStatistics`
- Reduce level of less important logs to debug
- No change made to tests to ensure correctness",2023-08-21T12:00:41Z
07a193a1420b2942e5bc9ac97058438f5435102d,"Use separate executor for each coordinator duty group (#14869)

Changes:
- Use separate executor for every duty group
- This change is thread-safe as every duty group uses its own copy of
`DruidCoordinatorRuntimeParams` and does not share any other mutable instances
with other duty groups.
- With the exception of `HistoricalManagementDuties`, duty groups are typically not
very compute intensive and mostly perform database or HTTP I/O. So, coordinator
resources would still mostly be available for `HistoricalManagementDuties`.",2023-08-21T10:23:22Z
9065ef1aff01b8812f410c1a400e2be632cb7672,"Fix a bug in QosFilter (#14859)

QoSFilter class is trying to parse the timeout as an integer. We need to round a value of query timeout that is higher than INT.MAX to INT.MAX.",2023-08-21T07:30:41Z
263ac36e8d757b31a0e0f5520545bc7e24dadb58,docs: fix autolabeler for jupyter notebooks (#14862),2023-08-18T19:42:36Z
097b6450057426d21fbcaa8319ae582b33976690,"Clean up after add kill bufferPeriod (#14868)

Follow up changes to #12599 

Changes:
- Rename column `used_flag_last_updated` to `used_status_last_updated`
- Remove new CLI tool `UpdateTables`.
  - We already have a `CreateTables` with similar functionality, which should be able to
  handle update cases too.
  - Any user running the cluster for the first time should either just have `connector.createTables`
  enabled or run `CreateTables` which should create tables at the latest version.
  - For instance, the `UpdateTables` tool would be inadequate when a new metadata table has
  been added to Druid, and users would have to run `CreateTables` anyway.
- Remove `upgrade-prep.md` and include that info in `metadata-init.md`.
- Fix log messages to adhere to Druid style
- Use lambdas",2023-08-18T18:30:04Z
1e14df4c496965581a66b87ed1ed12a08caa11b7,"Bump com.ibm.icu:icu4j from 55.1 to 73.2 (#14853)

* Bump com.ibm.icu:icu4j from 55.1 to 73.2

Bumps [com.ibm.icu:icu4j](https://github.com/unicode-org/icu) from 55.1 to 73.2.
- [Release notes](https://github.com/unicode-org/icu/releases)
- [Commits](https://github.com/unicode-org/icu/commits)

---
updated-dependencies:
- dependency-name: com.ibm.icu:icu4j
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

* update Unicode/ICU license

* fix license check for unicode/icu

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-18T13:10:39Z
a8eaa1e4ed81f94fe53ae14bbb078678e35de105,"Skip streaming auto-scaling action if supervisor is idle (#14773)

* Skip streaming auto-scaling action if supervisor is idle

* Update indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>

---------

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>",2023-08-18T00:43:25Z
9c124f2cde074d268f95ccf5989f548e495237b0,"Add a configurable bufferPeriod between when a segment is marked unused and deleted by KillUnusedSegments duty (#12599)

* Add new configurable buffer period to create gap between mark unused and kill of segment

* Changes after testing

* fixes and improvements

* changes after initial self review

* self review changes

* update sql statement that was lacking last_used

* shore up some code in SqlMetadataConnector after self review

* fix derby compatibility and improve testing/docs

* fix checkstyle violations

* Fixes post merge with master

* add some unit tests to improve coverage

* ignore test coverage on new UpdateTools cli tool

* another attempt to ignore UpdateTables in coverage check

* change column name to used_flag_last_updated

* fix a method signature after column name switch

* update docs spelling

* Update spelling dictionary

* Fixing up docs/spelling and integrating altering tasks table with my alteration code

* Update NULL values for used_flag_last_updated in the background

* Remove logic to allow segs with null used_flag_last_updated to be killed regardless of bufferPeriod

* remove unneeded things now that the new column is automatically updated

* Test new background row updater method

* fix broken tests

* fix create table statement

* cleanup DDL formatting

* Revert adding columns to entry table by default

* fix compilation issues after merge with master

* discovered and fixed metastore inserts that were breaking integration tests

* fixup forgotten insert by using pattern of sharing now timestamp across columns

* fix issue introduced by merge

* fixup after merge with master

* add some directions to docs in the case of segment table validation issues",2023-08-18T00:32:51Z
7e147ee905443ce1f57f456f72b962740461fa15,"Web console: Reset to specific offsets dialog (#14863)

* add dialog

* copy changes",2023-08-17T22:38:56Z
59415ba9b2b5e3b465f436ea008ce50300fea6f6,"Web console: expose new coordinator properties in the dialog (#14791)

* expose new coordinator properties in the dialog

* escape",2023-08-17T22:37:23Z
37db5d9b81be63848403d7ce5f7c0c5f090de437,"Reset offsets supervisor API (#14772)

* Add supervisor /resetOffsets API.

- Add a new endpoint /druid/indexer/v1/supervisor/<supervisorId>/resetOffsets
which accepts DataSourceMetadata as a body parameter.
- Update logs, unit tests and docs.

* Add a new interface method for backwards compatibility.

* Rename

* Adjust tests and javadocs.

* Use CoreInjectorBuilder instead of deprecated makeInjectorWithModules

* UT fix

* Doc updates.

* remove extraneous debugging logs.

* Remove the boolean setting; only ResetHandle() and resetInternal()

* Relax constraints and add a new ResetOffsetsNotice; cleanup old logic.

* A separate ResetOffsetsNotice and some cleanup.

* Minor cleanup

* Add a check & test to verify that sequence numbers are only of type SeekableStreamEndSequenceNumbers

* Add unit tests for the no op implementations for test coverage

* CodeQL fix

* checkstyle from merge conflict

* Doc changes

* DOCUSAURUS code tabs fix. Thanks, Brian!",2023-08-17T21:13:10Z
2cc3bd63839e72ce3f90c23fcc209569c01d3f7c,"Bump joda-time:joda-time from 2.12.4 to 2.12.5 (#14855)

* Bump joda-time:joda-time from 2.12.4 to 2.12.5

Bumps [joda-time:joda-time](https://github.com/JodaOrg/joda-time) from 2.12.4 to 2.12.5.
- [Release notes](https://github.com/JodaOrg/joda-time/releases)
- [Changelog](https://github.com/JodaOrg/joda-time/blob/main/RELEASE-NOTES.txt)
- [Commits](https://github.com/JodaOrg/joda-time/compare/v2.12.4...v2.12.5)

---
updated-dependencies:
- dependency-name: joda-time:joda-time
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-17T18:24:22Z
2a7fbf2ab46230742cf5ad44698e058b6ca6caa3,"Bump org.apache.directory.api:api-util from 1.0.3 to 2.1.3 (#14852)

Bumps [org.apache.directory.api:api-util](https://github.com/apache/directory-ldap-api) from 1.0.3 to 2.1.3.
- [Commits](https://github.com/apache/directory-ldap-api/compare/1.0.3...2.1.3)

---
updated-dependencies:
- dependency-name: org.apache.directory.api:api-util
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-08-17T15:56:34Z
fffb2e4fe72c9c8a0e59d4a191a1de8f6763df88,"Speed up SQLMetadataStorageActionHandlerTest (#14856)

Changes
- Reduce test time of `SQLMetadataStorageActionHandlerTest.testMigration`
- Slightly modify log messages to adhere to Druid style",2023-08-17T12:32:43Z
b97cc45d81337392a449f32764346a5842f65c5b,"Add clarification to the docs for multi-topic Kafka ingestion (#14847)

Follow-up to #14828. Added some more clarification about how topicPattern is used.",2023-08-17T07:22:06Z
dc2ae1e99c79f08d29fcfa7d38d95908a9fe3225,"Web console: improving the helper queries by allowing for running inline helper queries (#14801)

* remove helper queries

* fix tests

* take care of zero queries also

* switch to better place",2023-08-17T06:50:43Z
5d4ac641783a359bc9ca11d20d25ad99310e0fc5,"Adapt maxSegmentsToMove based on cluster skew (#14584)

Changes:
- No change in behaviour if `smartSegmentLoading` is disabled
- If `smartSegmentLoading` is enabled
  - Compute `balancerComputeThreads` based on `numUsedSegments`
  - Compute `maxSegmentsToMove` based on `balancerComputeThreads`
  - Compute `segmentsToMoveToFixSkew` based on usage skew
  - Compute `segmentsToMove = Math.min(maxSegmentsToMove, segmentsToMoveToFixSkew)`

Limits:
- 1 <= `balancerComputeThreads` <= 8
- `maxSegmentsToMove` <= 20% of total segments
- `minSegmentsToMove` = 0.15% of total segments",2023-08-17T05:44:54Z
cb27d0d2ed063747dc4dad629841c589ce3eb965,"Web console: enable Kafka multi-topic ingestion from the data loader (#14833)

* multi topic ux

* updated to match new api",2023-08-17T04:27:34Z
6b4dda964d4f4bce2ce41bfa0503126ba2a1a55a,"Docusaurus2 upgrade for master (#14411)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-08-17T02:01:21Z
6b14dde50ef82d3ba8faddc5bc9517e4ae3c461c,"deprecate config-magic in favor of json configuration stuff (#14695)

* json config based processing and broker merge configs to deprecate config-magic",2023-08-17T01:23:57Z
26d82fd342de4ea40bc189542738023722e592af,fix filtering bug in filtering unnest cols and dim cols: Received a non-applicable rewrite (#14587),2023-08-17T00:57:16Z
f585f0a8ed96b03140bbbcff8ec01283bafaa2f5,"202306-docs-notebook topn (#14478)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-08-16T21:50:49Z
2561477e875e3a8161f45e291f2f961496b23f6e,Jupyter nested columns tutorial (#14788),2023-08-16T21:45:37Z
faf79470ae52553a137f907e479a9a1a8ebd81ae,"Bump io.dropwizard.metrics:metrics-graphite from 3.1.2 to 4.2.19 (#14842)

* Bump io.dropwizard.metrics:metrics-graphite from 3.1.2 to 4.2.19

Bumps [io.dropwizard.metrics:metrics-graphite](https://github.com/dropwizard/metrics) from 3.1.2 to 4.2.19.
- [Release notes](https://github.com/dropwizard/metrics/releases)
- [Commits](https://github.com/dropwizard/metrics/compare/v3.1.2...v4.2.19)

---
updated-dependencies:
- dependency-name: io.dropwizard.metrics:metrics-graphite
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* align graphite-emitter dropwizard version with core

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-16T20:58:35Z
3954685aae1f9a78c81bf788e8f69d10324c28d1,"Report more metrics to monitor K8s task runner (#14771)

* Report pod running metrics to monitor K8s task runner

* refine method definition

* fix checkstyle

* implement task metrics

* more comment

* address comments

* update doc for the new metrics reported

* fix checkstyle

* refine method definition

* minor refine",2023-08-16T18:03:53Z
97c3773012127b6ce6685673c9933116625dcf7c,"Bump commons-cli:commons-cli from 1.3.1 to 1.5.0 (#14837)

* Bump commons-cli:commons-cli from 1.3.1 to 1.5.0

Bumps commons-cli:commons-cli from 1.3.1 to 1.5.0.

---
updated-dependencies:
- dependency-name: commons-cli:commons-cli
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-16T14:37:56Z
8be7751dbd96dc721f4eb8bf544e3e7c5c72daf0,"Bump org.tukaani:xz from 1.8 to 1.9 (#14839)

* Bump org.tukaani:xz from 1.8 to 1.9

Bumps org.tukaani:xz from 1.8 to 1.9.

---
updated-dependencies:
- dependency-name: org.tukaani:xz
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-16T14:37:29Z
e55fe67535fb54bbc167113d8d3044bba4216c48,"Bump apache.curator.version from 5.4.0 to 5.5.0 (#14843)

* Bump apache.curator.version from 5.4.0 to 5.5.0

Bumps `apache.curator.version` from 5.4.0 to 5.5.0.

Updates `org.apache.curator:curator-client` from 5.4.0 to 5.5.0
- [Commits](https://github.com/apache/curator/compare/apache-curator-5.4.0...apache-curator-5.5.0)

Updates `org.apache.curator:curator-framework` from 5.4.0 to 5.5.0
- [Commits](https://github.com/apache/curator/compare/apache-curator-5.4.0...apache-curator-5.5.0)

Updates `org.apache.curator:curator-recipes` from 5.4.0 to 5.5.0
- [Commits](https://github.com/apache/curator/compare/apache-curator-5.4.0...apache-curator-5.5.0)

Updates `org.apache.curator:curator-x-discovery` from 5.4.0 to 5.5.0
- [Commits](https://github.com/apache/curator/compare/apache-curator-5.4.0...apache-curator-5.5.0)

Updates `org.apache.curator:curator-test` from 5.4.0 to 5.5.0
- [Commits](https://github.com/apache/curator/compare/apache-curator-5.4.0...apache-curator-5.5.0)

---
updated-dependencies:
- dependency-name: org.apache.curator:curator-client
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: org.apache.curator:curator-framework
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: org.apache.curator:curator-recipes
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: org.apache.curator:curator-x-discovery
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: org.apache.curator:curator-test
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-16T14:36:58Z
7911a04064b5d77115315c3d1687c9eae5e44133,"Refactoring of multi-topic kafka ingestion docs (#14828)

In this PR, I have gotten rid of multiTopic parameter and instead added a topicPattern parameter. Kafka supervisor will pass topicPattern or topic as the stream name to the core ingestion engine. There is validation to ensure that only one of topic or topicPattern will be set. This new setting is easier to understand than overloading the topic field that earlier could be interpreted differently depending on the value of some other field.",2023-08-16T12:30:11Z
d9221e46e4b30dde80724dc49355a3ba5abcb312,"Completely disable cachingCost balancer strategy (#14798)

`cachingCost` has been deprecated in #14484 and is not advised to be used in
production clusters as it may cause usage skew across historicals which the
coordinator is unable to rectify. This PR completely disables `cachingCost` strategy
as it has now been rendered redundant due to recent performance improvements
made to `cost` strategy.

Changes
- Disable `cachingCost` strategy
- Add `DisabledCachingCostBalancerStrategyFactory` for the time being so that we
can give a proper error message before falling back to `CostBalancerStrategy`. This
will be removed in subsequent releases.
- Retain `CachingCostBalancerStrategy` for testing/benchmarking purposes.
- Add javadocs to `DiskNormalizedCostBalancerStrategy`",2023-08-16T06:13:52Z
9be0f64f506dfc51a31d19fb95ba607355b84a55,"Bump org.apache.commons:commons-compress from 1.21 to 1.23.0 (#14820)

* Bump org.apache.commons:commons-compress from 1.21 to 1.23.0

Bumps org.apache.commons:commons-compress from 1.21 to 1.23.0.

---
updated-dependencies:
- dependency-name: org.apache.commons:commons-compress
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-16T00:08:54Z
0b2563fea3249737d57ff34c6713b6f255cd2dde,"Web console: adding format notice for CSV and TSV (#14783)

* adding format notice for CSV and TSV

* Update web-console/src/druid-models/ingestion-spec/ingestion-spec.tsx

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update web-console/src/druid-models/ingestion-spec/ingestion-spec.tsx

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update web-console/src/druid-models/ingestion-spec/ingestion-spec.tsx

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* fix tests

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-08-15T22:35:50Z
8fa78594ea66b5508eb238c3d5f58d1cb973c7a9,Druid SQL API documentation refactor (#14711),2023-08-15T20:45:25Z
a38579ab3c06140b22964d23818b49ac5a9ea9fd,Retention rules API documentation refactor (#14623),2023-08-15T20:44:44Z
aeeeed3b354a99c365d758834343102dcdd0cf19,"Bump protobuf.version from 3.21.7 to 3.24.0 (#14823)

* Bump protobuf.version from 3.21.7 to 3.24.0

Bumps `protobuf.version` from 3.21.7 to 3.24.0.

Updates `com.google.protobuf:protobuf-java` from 3.21.7 to 3.24.0
- [Release notes](https://github.com/protocolbuffers/protobuf/releases)
- [Changelog](https://github.com/protocolbuffers/protobuf/blob/main/protobuf_release.bzl)
- [Commits](https://github.com/protocolbuffers/protobuf/compare/v3.21.7...v3.24.0)

Updates `com.google.protobuf:protobuf-java-util` from 3.21.7 to 3.24.0

---
updated-dependencies:
- dependency-name: com.google.protobuf:protobuf-java
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: com.google.protobuf:protobuf-java-util
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

* fix licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-15T19:15:55Z
8abdaa239bcb6bcd2952d94c28bf8f6323e7dc83,"Bump dropwizard.metrics.version from 4.0.0 to 4.2.19 (#14824)

* Bump dropwizard.metrics.version from 4.0.0 to 4.2.19

Bumps `dropwizard.metrics.version` from 4.0.0 to 4.2.19.

Updates `io.dropwizard.metrics:metrics-core` from 4.0.0 to 4.2.19
- [Release notes](https://github.com/dropwizard/metrics/releases)
- [Commits](https://github.com/dropwizard/metrics/compare/v4.0.0...v4.2.19)

Updates `io.dropwizard.metrics:metrics-jmx` from 4.0.0 to 4.2.19
- [Release notes](https://github.com/dropwizard/metrics/releases)
- [Commits](https://github.com/dropwizard/metrics/compare/v4.0.0...v4.2.19)

---
updated-dependencies:
- dependency-name: io.dropwizard.metrics:metrics-core
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: io.dropwizard.metrics:metrics-jmx
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-15T19:15:29Z
e33d2db2359a6a0d0093570005ef9a75f5cbc6dd,"202307-notebooks Template amends (#14683)

Co-authored-by: writer-jill <jill.osborne@imply.io>",2023-08-15T18:25:56Z
2fdf5b195f02433c93569b79e99cf9bef4384a61,"Bump org.assertj:assertj-core from 3.19.0 to 3.24.2 (#14815)

Bumps org.assertj:assertj-core from 3.19.0 to 3.24.2.

---
updated-dependencies:
- dependency-name: org.assertj:assertj-core
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-08-15T14:39:48Z
f0a79fa0e4d073d8d85b8a4e291fcc2f6fd3a3dc,"Bump org.apache.maven.plugins:maven-source-plugin from 2.2.1 to 3.3.0 (#14812)

Bumps [org.apache.maven.plugins:maven-source-plugin](https://github.com/apache/maven-source-plugin) from 2.2.1 to 3.3.0.
- [Commits](https://github.com/apache/maven-source-plugin/compare/maven-source-plugin-2.2.1...maven-source-plugin-3.3.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-source-plugin
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-08-15T14:39:19Z
0967048dca5b1a33690d09481adb18d24ed1b879,"Bump org.scala-lang:scala-library from 2.13.9 to 2.13.11 (#14826)

Bumps [org.scala-lang:scala-library](https://github.com/scala/scala) from 2.13.9 to 2.13.11.
- [Release notes](https://github.com/scala/scala/releases)
- [Commits](https://github.com/scala/scala/compare/v2.13.9...v2.13.11)

---
updated-dependencies:
- dependency-name: org.scala-lang:scala-library
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-08-15T14:38:34Z
76c796397963b247800da4930e167a2ac33071c2,"Bump com.github.oshi:oshi-core from 6.4.2 to 6.4.4 (#14814)

* Bump com.github.oshi:oshi-core from 6.4.2 to 6.4.4

Bumps [com.github.oshi:oshi-core](https://github.com/oshi/oshi) from 6.4.2 to 6.4.4.
- [Release notes](https://github.com/oshi/oshi/releases)
- [Changelog](https://github.com/oshi/oshi/blob/master/CHANGELOG.md)
- [Commits](https://github.com/oshi/oshi/compare/oshi-parent-6.4.2...oshi-parent-6.4.4)

---
updated-dependencies:
- dependency-name: com.github.oshi:oshi-core
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2023-08-15T10:44:19Z
5f54ae7d274654bc9b1b07f8a77db63362ec97ae,"Bump org.apache.maven.plugins:maven-surefire-plugin (#14813)

Bumps [org.apache.maven.plugins:maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0-M7 to 3.1.2.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0-M7...surefire-3.1.2)",2023-08-15T06:07:53Z
d5d483fdc9498ff9b8a5cc246bbde4e9b349c887,Bump org.apache.rat:apache-rat-plugin from 0.12 to 0.15 (#14817),2023-08-15T06:07:03Z
50b3d96df5b48621de7a7f75fd018fea2248d000,"increase dependabot PR limit for Java dependencies (#14804)

Many dependabot PRs are currently stuck due to API changes or
incompatibilities. Temporarily Increasing the limit so we can get
updates for other dependencies.",2023-08-15T02:51:59Z
30b5dd4ca785f5f4d2568d9ff66d19c3412b3ebd,"Add support to read from multiple kafka topics in same supervisor (#14424)

This PR adds support to read from multiple Kafka topics in the same supervisor. A multi-topic ingestion can be useful in scenarios where a cluster admin has no control over input streams. Different teams in an org may create different input topics that they can write the data to. However, the cluster admin wants all this data to be queryable in one data source.",2023-08-14T16:54:49Z
e16096735bc2cf36cde7dfefb9bd086100a3f9a4,"Fix 404 when segment is used but not in the Coordinator snapshot (#14762)

* Fix 404 when used segment has not been updated in the Coordinator snapshot

* Add unit test",2023-08-14T07:50:43Z
786e772d26c4358d02fff8c2c1452ecde471d77a,"Remove config `druid.coordinator.compaction.skipLockedIntervals` (#14807)

The value of `druid.coordinator.compaction.skipLockedIntervals` should always be `true`.",2023-08-14T07:01:15Z
0dc305f9e474cf2a95bd27bb4ffd64d6fd528b31,Upgrade hibernate validator version to fix CVE-2019-10219 (#14757),2023-08-14T06:20:51Z
e2d2afce462defb6e1ce337401fe6539de2315db,"Bump postgresql from 42.4.1 to 42.6.0 (#13959)

* Bump postgresql from 42.4.1 to 42.6.0

Bumps [postgresql](https://github.com/pgjdbc/pgjdbc) from 42.4.1 to 42.6.0.
- [Release notes](https://github.com/pgjdbc/pgjdbc/releases)
- [Changelog](https://github.com/pgjdbc/pgjdbc/blob/master/CHANGELOG.md)
- [Commits](https://github.com/pgjdbc/pgjdbc/compare/REL42.4.1...REL42.6.0)

---
updated-dependencies:
- dependency-name: org.postgresql:postgresql
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2023-08-12T23:17:00Z
afe22907a5657426a739f881ca64053ecafb4e01,"Calcite upgrade 1.35 (#14510)

* Update to Calcite 1.35.0
* Update from.ftl for Calcite 1.35.0.
* Fixed tests in Calcite upgrade by doing the following:
1. Added a new rule, CoreRules.PROJECT_FILTER_TRANSPOSE_WHOLE_PROJECT_EXPRESSIONS, to Base rules
2. Refactored the CorrelateUnnestRule
3. Updated CorrelateUnnestRel accordingly
4. Fixed a case with selector filters on the left where Calcite was eliding the virtual column
5. Additional test cases for fixes in 2,3,4
6. Update to StringListAggregator to fail a query if separators are not propagated appropriately
* Refactored for testcases to pass after the upgrade, introduced 2 new data sources for handling filters and select projects
* Added a literalSqlAggregator as the upgraded Calcite involved changes to subquery remove rule. This corrected plans for 2 queries with joins and subqueries by replacing an useless literal dimension with a post agg. Additionally a test with COUNT DISTINCT and FILTER which was failing with Calcite 1.21 is added here which passes with 1.35
* Updated to latest avatica and updated code as SqlUnknownTimeStamp is now used in Calcite which needs to be resolved to a timestamp literal
* Added a wrapper segment ref to use for unnest and filter segment reference",2023-08-11T19:47:16Z
c8a11702db57b7b81f2f6c37847c5253dc106af6,Support broadcast segmetns (#14789),2023-08-11T18:14:05Z
ec28672d072eeb75ac1a4d84a201c7d051ebe629,"Web console: allow format picking for download (#14794)

* allow format picking for download

* better popover

* ux review tweaks",2023-08-11T16:43:29Z
b0c78ff295533df80391109c9038a499271ab2a0,"Web console: make retention dialog clearer (#14793)

* make retention dialog clearer

* tweak

* another tweak

* Update web-console/src/dialogs/retention-dialog/retention-dialog.tsx

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* update snapshot for copy

---------

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2023-08-11T16:43:00Z
a0234c4e131b2eae3b2e464704e0a225b7c965f4,"Add sampling factor for DeterminePartitionsJob (#13840)

There are two type of DeterminePartitionsJob:
-  When the input data is not assume grouped, there may be duplicate rows.
In this case, two MR jobs are launched. The first one do group job to remove duplicate rows.
And a second one to perform global sorting to find lower and upper bound for target segments.
- When the input data is assume grouped, we only need to launch the global sorting
MR job to find lower and upper bound for segments.

Sampling strategy:
- If the input data is assume grouped, sample by random at the mapper side of the global sort mr job.
- If the input data is not assume grouped, sample at the mapper of the group job. Use hash on time
and all dimensions and mod by sampling factor to sample, don't use random method because there
may be duplicate rows.",2023-08-11T05:12:25Z
353f7bed7fa3b56e2e67cafcbc7556b868be38cd,"Adding data generation pod to jupyter notebooks deployment (#14742)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-08-10T22:43:05Z
82d82dfbd6af5e6ed83d0c663c55dc538d6b1d9e,"Add stats to KillUnusedSegments coordinator duty (#14782)

### Description

Added the following metrics, which are calculated from the `KillUnusedSegments` coordinatorDuty

`""killTask/availableSlot/count""`: calculates the number remaining task slots available for auto kill
`""killTask/maxSlot/count""`: calculates the maximum number of tasks available for auto kill
`""killTask/task/count""`: calculates the number of tasks submitted by auto kill. 

#### Release note
NEW: metrics added for auto kill

`""killTask/availableSlot/count""`: calculates the number remaining task slots available for auto kill
`""killTask/maxSlot/count""`: calculates the maximum number of tasks available for auto kill
`""killTask/task/count""`: calculates the number of tasks submitted by auto kill.",2023-08-10T22:36:53Z
23306c4d80727954593bc5b5bde68737fe12be01,"retry when killing s3 based segments  (#14776)

### Description

s3 deleteObjects request sent when killing s3 based segments now being retried, if failure is retry-able.",2023-08-10T18:04:16Z
37ed0f4a174c0881327368ff7cdc28ad2c9d1b82,"Bump jclouds.version from 1.9.1 to 2.0.3 (#14746)

* Updates `org.apache.jclouds:*` from 1.9.1 to 2.0.3
* Pin jclouds to 2.0.x since 2.1.x requires Guava 18+
* replace easymock with mockito

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-08-10T13:24:01Z
4b9846b90fd4ca977c9073e80b993a9259f70240,"Improve exception message when DruidLeaderClient doesn't find leader node (#14775)

The existing exception message No known server thrown in DruidLeaderClient is unhelpful.",2023-08-10T11:07:37Z
c8537dbeafe9238ccb83077be2280b23ae7bfea5,Add lifecycle hooks to KubernetesTaskRunner (#14790),2023-08-10T04:16:44Z
b1988b2f93d243e2685718a7d910fda2495a9bbd,"Web console: fix result count (#14786)

* fix result count

* fixes",2023-08-09T15:03:01Z
8f102f9031aa7956d189775388852ff6e50faa80,"Introduce StorageConnector for Azure (#14660)

The Azure connector is introduced and MSQ's fault tolerance and durable storage can now be used with Microsoft Azure's blob storage. Also, the results of newly introduced queries from deep storage can now store and fetch the results from Azure's blob storage.",2023-08-09T12:25:27Z
a45b25fa1d783100fd6f3d4b6d285be19e01e986,"Removes support for Hadoop 2 (#14763)

Removing Hadoop 2 support as discussed in https://lists.apache.org/list?dev@druid.apache.org:lte=1M:hadoop",2023-08-09T12:17:52Z
550a66d71e4afacdc6bbcdab2e3343007d71d5dd,"Upgrade jackson-databind to 2.12.7 (#14770)

The current version of jackson-databind is flagged for vulnerabilities CVE-2020-28491 (Although cbor format is not used in druid), CVE-2020-36518 (Seems genuine as deeply nested json in can cause resource exhaustion). Updating the dependency to the latest version 2.12.7 to fix these vulnerabilities.",2023-08-09T06:52:16Z
cd817fc469a717f69fc3b09bc2739c4dd8ae673f,Fixing typo in `resultsTruncated` (#14779),2023-08-09T03:51:44Z
e57f8800206ec34c0b21382eec65b620a1885e53,document new filters and stuff (#14760),2023-08-08T23:01:06Z
667e4dab5e468f5d1732ac3473498d9cb8e339f6,document expression aggregator (#14497),2023-08-08T22:49:29Z
8a4dabc431d6b588f6a67f9583af902b362778fe,docs: remove experimental from schema auto-discoery (#14759),2023-08-08T19:45:44Z
660e6cfa01b537949303045d3bd5deecaaa5e1c8,"Allow for task limit on kill tasks spawned by auto kill coordinator duty (#14769)

### Description

Previously, the `KillUnusedSegments` coordinator duty, in charge of periodically deleting unused segments, could spawn an unlimited number of kill tasks for unused segments. This change adds 2 new coordinator dynamic configs that can be used to control the limit of tasks spawned by this coordinator duty

`killTaskSlotRatio`: Ratio of total available task slots, including autoscaling if applicable that will be allowed for kill tasks. This limit only applies for kill tasks that are spawned automatically by the coordinator's auto kill duty. Default is 1, which allows all available tasks to be used, which is the existing behavior

`maxKillTaskSlots`: Maximum number of tasks that will be allowed for kill tasks. This limit only applies for kill tasks that are spawned automatically by the coordinator's auto kill duty. Default is INT.MAX, which essentially allows for unbounded number of tasks, which is the existing behavior. 

Realize that we can effectively get away with just the one `killTaskSlotRatio`, but following similarly to the compaction config, which has similar properties; I thought it was good to have some control of the upper limit regardless of ratio provided.

#### Release note
NEW: `killTaskSlotRatio`  and `maxKillTaskSlots` coordinator dynamic config properties added that allow control of task resource usage spawned by `KillUnusedSegments` coordinator task (auto kill)",2023-08-08T12:40:55Z
2845b6a424acc9b5cea93a95325c1c94c94aeb76,add new filters to unnest filter pushdown (#14777),2023-08-08T10:29:18Z
d0403f00fd8acb20916f8aa99f1d3b2f2c9d50ed,upgrade org.mozilla:rhino (#14765),2023-08-08T06:47:59Z
2af0ab24252e80cb3c2b9615500cffbfed595791,"Metric to report time spent fetching and analyzing segments (#14752)

* Metric to report time spent fetching and analyzing segments

* fix test

* spell check

* fix tests

* checkstyle

* remove unused variable

* Update docs/operations/metrics.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/metrics.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/metrics.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

---------

Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-08-08T01:32:48Z
bff8f9e12ee0353381650419b9ca43c79f29826a,"Update kinesis docs (#14768)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-08-08T00:08:34Z
b624a4ec4a6df6bf9091418f54055e77b5797159,"Rolling Supervisor restarts at taskDuration (#14396)

* Rolling supervior task publishing

* add an option for number of task groups to roll over

* better

* remove docs

* oops

* checkstyle

* wip test

* undo partial test change

* remove incomplete test",2023-08-07T23:24:32Z
14940dc3ede3ca5430d55b7764836b559ac4c500,"Add pod name to TaskLocation for easier observability and debugging. (#14758)

* Add pod name to location

* Add log

* fix style

* Update extensions-contrib/kubernetes-overlord-extensions/src/main/java/org/apache/druid/k8s/overlord/KubernetesPeonLifecycle.java

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Fix unit tests

---------

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2023-08-07T19:33:35Z
7d7813372a7b6ea5b501a5cf83e7a78f75b5ea51,Docs: Include EARLIEST_BY and LATEST_BY as supported aggregation functions (#14280),2023-08-07T16:59:12Z
56ab81f38149f9b849d6f692d54b26c61230f9e2,"Add support for different result formats to MSQ SqlStatementResource (#14571)

* Add support for different result format

* Add tests

* Add tests

* Fix checkstyle

* Remove changes to destination

* Removed some unwanted code

* Address review comments

* Rename parameter

* Fix tests",2023-08-07T15:18:59Z
2d8e0f28f36f83e091911cc7b36a57b10fd065cc,"Refactor: Cleanup coordinator duties for metadata cleanup (#14631)

Changes
- Add abstract class `MetadataCleanupDuty`
- Make `KillAuditLogs`, `KillCompactionConfig`, etc extend `MetadataCleanupDuty` 
- Improve log and error messages
- Cleanup tests
- No functional change",2023-08-05T07:38:23Z
62ddeaf16f07e51d4bd35b3eaaaaab6f70f6fd71,"Additional dimensions for service/heartbeat (#14743)

* Additional dimensions for service/heartbeat

* docs

* review

* review",2023-08-04T18:01:07Z
590734b5ebfe5c6d4bf6c6d8bf6a25d2aad74c1d,Update tutorial-kafka.md (#14749),2023-08-04T17:56:33Z
e5661a394cf3ba26ca6adc1cb6d09b048ea123bd,"refactor front-coded into static classes instead of using functional interfaces (#14572)

* refactor front-coded into static classes instead of using functional interfaces

* shared v0 static method instead of copy",2023-08-04T17:52:36Z
d6c73ca6e5f6d9c97d590f0936f2d1e491c78001,Cleanup the documentation for deep storage,2023-08-04T10:20:01Z
6ced20839143095a0f0fa4558ac4ff7175b42c15,Improve the backport missing script (#14723),2023-08-04T09:51:55Z
0d73480c8ff705ac4f6ea36720ed2eaa5484f263,"Latest aggregator factories should accept time as VectorValueSelecto… (#14753)

Fix the queries that have latest aggregator with an expression as time column",2023-08-04T07:34:25Z
3b5b6c6a418c20b7e70e42074202b14b0ff45c7c,"docs: query from deep storage (#14609)

* cold tier wip

* wip

* copyedits

* wip

* copyedits

* copyedits

* wip

* wip

* update rules page

* typo

* typo

* update sidebar

* moves durable storage info to its own page in operations

* update screenshots

* add apache license

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* add query from deep storage tutorial stub

* address some of the feedback

* revert screenshot update. handled in separate pr

* load rule update

* wip tutorial

* reformat deep storage endpoints

* rest of tutorial

* typo

* cleanup

* screenshot and sidebar for tutorial

* add license

* typos

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* rest of review comments

* clarify where results are stored

* update api reference for durablestorage context param

* Apply suggestions from code review

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>

* comments

* incorporate #14720

* address rest of comments

* missed one

* Update docs/api-reference/sql-api.md

* Update docs/api-reference/sql-api.md

---------

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: demo-kratia <56242907+demo-kratia@users.noreply.github.com>
Co-authored-by: Karan Kumar <karankumar1100@gmail.com>",2023-08-04T05:40:08Z
d31c04c4c645323e191e604d1c368076b50b07ef,Fix the bug in getIndexInfo for mysql (#14750),2023-08-04T04:45:01Z
3335040b2206588f4034bc8c6004d67c9ce75773,"Report task/pending/time metrics for k8s based ingestion (#14698)

Changes:
* Add and invoke `StateListener` when state changes in `KubernetesPeonLifecycle`
* Report `task/pending/time` metric in `KubernetesTaskRunner` when state moves to RUNNING",2023-08-04T03:37:11Z
ba957a9b97b6bdbecb166db771721cced1dac365,"Add ability to limit the number of segments killed in kill task (#14662)

### Description

Previously, the `maxSegments` configured for auto kill could be ignored if an interval of data for a  given datasource had more than this number of unused segments, causing the kill task spawned with the task of deleting unused segments in that given interval of data to delete more than the `maxSegments` configured. Now each kill task spawned by the auto kill coordinator duty, will kill at most `limit` segments. This is done by adding a new config property to the `KillUnusedSegmentTask` which allows users to specify this limit.",2023-08-04T02:17:04Z
748874405c15ca05fcbb4c29452ddd0560186bd9,"Minimize PostAggregator computations (#14708)

* Minimize PostAggregator computations

Since a change back in 2014, the topN query has been computing
all PostAggregators on all intermediate responses from leaf nodes
to brokers.  This generates significant slow downs for queries
with relatively expensive PostAggregators.  This change rewrites
the query that is pushed down to only have the minimal set of
PostAggregators such that it is impossible for downstream
processing to do too much work.  The final PostAggregators are
applied at the very end.",2023-08-03T18:34:31Z
20c48b6a3ddecaafc607e0b7f9883020b316e631,Retry S3 task log fetch in case of transient S3 exceptions (#14714),2023-08-03T14:16:10Z
b27d281b113a32aa1c5115f98c46a586f0df8138,Remove unused param in MetadataResource (#14747),2023-08-03T13:48:01Z
00f1f8cef5fa33a44e9bbdd7aff99879e0da1bec,Enable ServiceStatusMonitor in the examples (#14744),2023-08-03T13:07:01Z
5a52f7a457662d2fba8713bb60acbd1c9f2a787b,Fix IT failure due to query interval (#14738),2023-08-02T18:29:35Z
6837a7be190ab55211b60d38b3a2945aeba1f7b5,"Add logging for downsampling sketches in MSQ (#14580)

* Add more logs for downsampling sketches

* Fix builds

* Lower log level

* Add new log message",2023-08-02T14:37:54Z
955734ba8df1abb5a6cfdac99923a6026994d3f9,Fix exempt labels in stale.yml (#14733),2023-08-02T11:42:18Z
94fb41a4dfcd2383da2d9fa8fed3a895ecb55e3c,"fix nested field virtual column array column element vector object selector (#14729)

Fixes a case I missed in #14688 when the return type is STRING but its coming from a top level array typed column instead of a nested array column while making a vector object selector.

Also while here I noticed that the internal JSON_VALUE functions for array types were named inconsistently with the non-array functions, so I renamed them. These are not documented so it should not be disruptive in any way, since they are only used internally for rewrites while planning to make the correctly virtual column.

JSON_VALUE_RETURNING_ARRAY_VARCHAR -> JSON_VALUE_ARRAY_VARCHAR
JSON_VALUE_RETURNING_ARRAY_BIGINT -> JSON_VALUE_ARRAY_BIGINT
JSON_VALUE_RETURNING_ARRAY_DOUBLE -> JSON_VALUE_ARRAY_DOUBLE
The internal non-array functions are JSON_VALUE_VARCHAR, JSON_VALUE_BIGINT, and JSON_VALUE_DOUBLE.",2023-08-02T11:38:24Z
c1c2435aee832903c2e76b14099f655fb8b16c0a,"upgrade core Apache Kafka dependencies to 3.5.1 (#14721)

Release notes: https://downloads.apache.org/kafka/3.5.1/RELEASE_NOTES.html
Announcement: https://lists.apache.org/thread/p7jyv3ys7b6jowcb6lys7821qcbcpb07

Release notes: https://downloads.apache.org/kafka/3.5.0/RELEASE_NOTES.html
Announcement: https://lists.apache.org/thread/s6x3zvkrv32v5y8yb6hh31h57spdbylk",2023-08-02T08:08:40Z
72c151a192175a07c718e5f2b380d6269814673f,"MSQ WorkerImpl: Ignore ServiceClosedException on postCounters. (#14707)

* MSQ WorkerImpl: Ignore ServiceClosedException on postCounters.

A race can happen where postCounters is in flight while the controller
goes offline. When this happens, we should ignore the ServiceClosedException
and continue without posting counters.

* Fix style and logic.",2023-08-02T01:30:10Z
4a31ae26f44f02ab04c77c93ec29f052f91c3a95,"Web console: Page downloader, and fix JSON error resetting (#14712)

* fix error reset

* add page dialog logic

* add to detail archive

* update tests

* fix plurals

* use jsonl ext

* fix regex issue",2023-08-01T21:25:41Z
174053f4fd250534da1f1aa4e7e3ff6c188e3c1a,"Add readme for kubernetes-overlord-extensions and update docs (#14674)

* Add readme for kubernetes task scheduler

* clean up uneeded stuff

* Update extensions-contrib/kubernetes-overlord-extensions/README.md

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* Move documentation into main page

* indentation

* cleanup spellcheck errors

* Update docs/development/extensions-contrib/k8s-jobs.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update extensions-contrib/kubernetes-overlord-extensions/README.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/development/extensions-contrib/k8s-jobs.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* PR comments

* Update docs/development/extensions-contrib/k8s-jobs.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/development/extensions-contrib/k8s-jobs.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/development/extensions-contrib/k8s-jobs.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

---------

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>
Co-authored-by: Suneet Saldanha <suneet@apache.org>",2023-08-01T20:29:44Z
ee4e0c93b463b8b6b7d847551b578ccef86d1f35,"Improve alert message for segment assignments (#14696)

Changes:
- Add interface `SegmentDeleteHandler` for marking segments as unused
- In `StrategicSegmentAssigner`, collect all segments on which a drop rule applies in a list
- Process the list above as a batch delete rather than individual deletes
- Improve alert messages when an invalid tier is specified in a load rule
- Improve alert message when no rule applies on a segment",2023-08-01T18:03:05Z
153948198cc01931b9753aba1576a73bf7186234,"Web console: fix grouped filtering and add complex menu (#14668)

* fix filtering when grouped

* add complex menu

* complex aggs

* use ResizeObserverEntry

* add quantile and test

* fix style

* update snapshots",2023-08-01T17:41:44Z
2e456d25ae38e0dbaa073f2f196c7fcb1d478340,fix issue with ExprEval.bestEffortOf and mixed type arrays containing ARRAY<COMPLEX<json>> and other complicated casts (#14710),2023-08-01T16:25:14Z
8a10b46dd8aaa7ad16b83ed50afb47b1b3983c20,Adding the PropertyNamingStrategies from jackson for fixing hadoop ingestion (#14671),2023-08-01T14:32:43Z
10328c07433de04e19f036b956f209a701213cb9,Rename metadatacache and serverview metrics (#14716),2023-08-01T08:48:20Z
d04521d58f28119687f6887bb92bfb8cdc189840,"Improve description field when emitting metric for broadcast failure (#14703)

Changes:
- Emit descriptions such as `Load queue is full`, `No disk space` etc. instead of `Unknown error`
- Rewrite `BroadcastDistributionRuleTest`",2023-08-01T04:43:55Z
5c96b60162751480b8536fbad807ef6bca1a5a8c,Increase heap size for router (#14699),2023-08-01T03:28:48Z
5387f1bac08b204de82b95ac146c4559de7ec6d2,"Remove chatAsync parameter, so chat is always async. (#14692)

* Remove chatAsync parameter, so chat is always async.

chatAsync has been made default in Druid 26. I have seen good
battle-testing of it in production, and am comfortable removing the
older sync client.

This was the last remaining usage of IndexTaskClient, so this patch
deletes all that stuff too.

* Remove unthrown exception.

* Remove unthrown exception.

* No more TimeoutException.",2023-08-01T02:42:51Z
44d5c1a15f1a00837812393e2485c14645f06984,"split KillUnusedSegmentsTask to processing in smaller chunks (#14642)

split KillUnusedSegmentsTask to smaller batches

Processing in smaller chunks allows the task execution to yield the TaskLockbox lock,
which allows the overlord to continue being responsive to other tasks and users while
this particular kill task is executing.

* introduce KillUnusedSegmentsTask batchSize parameter to control size of batching

* provide an explanation for kill task batchSize parameter

* add logging details for kill batch progress",2023-07-31T19:56:27Z
339b8d959fc63ea2447413b244564f953394ce84,Change the default format from OBJECT to OBJECTLINES (#14700),2023-07-31T18:39:58Z
21d023b62b9481c059478749f536701cf378e558,"Handle taskIds which are not found in the overlord correctly (#14706)

This PR has fixes a bug in the SqlStatementAPI where if the task is not found on the overlord, the response status is 500.
This changes the response to invalid input since the queryID passed is not valid.",2023-07-31T16:08:14Z
844a9c7ffb6c294d9bc73f73466520c5b3615b74,Cancel loads of unused segments (#14644),2023-07-31T12:31:50Z
e9b4f1e95c6435e1163966d656b6fbc9c771620c,Fix reported replication factor of segment with zero required replicas (#14701),2023-07-31T09:21:01Z
c648b1cb36c7671a281155e3a018c74592012b8d,"Add task toolbox to DruidInputSource (#14507)

Add task toolbox to DruidInputSource",2023-07-31T07:42:01Z
9e1650e32787e7d60a43876e4591e151f5c41439,Web console: add durable storage selector (#14669),2023-07-31T05:33:24Z
8232c0366750238b8c35321abd6f09bfbff10df0,"[MSQ] Handle dimensionless group by queries with partitioning, and multiple workers (#14678)

* fixup

* add ut

* review",2023-07-29T01:45:17Z
25df122b41b7005aac91e8bffdad09a1be9682c7,"Releasenote notebooks 26 (#14410)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Victoria Lim <lim.t.victoria@gmail.com>",2023-07-28T23:43:35Z
5f72f4f37d10827c051969bffd1199114490e5f1,"fixes for nested virtual column array element vector selectors and fixes for variant and nested variant numeric columns

* fix issue with nested virtual column array element vector selectors when input is numeric array but output is non-numeric
* add vector value selector for mixed numeric type variant and nested variant fields, tests",2023-07-28T22:14:29Z
6517fc27969f71809ce5ad9e1e5b941a32c646a7,"Save a metadata call when reading files from CloudObjectInputSource. (#14677)

* Save a metadata call when reading files from CloudObjectInputSource.

The call to createSplits(inputFormat, null) in formattableReader would
use the default split hint spec, MaxSizeSplitHintSpec, which makes
getObjectMetadata calls in order to compute its splits. This isn't
necessary; we're just trying to unpack the files inside the input
source.

To fix this, use FilePerSplitHintSpec to extract files without any
funny business.

* Adjust call.

* Fix constant.

* Test coverage.",2023-07-28T20:31:03Z
53733d2542c3f84b8969518b40d0d9acc4c4c09d,"JSON-querying API documentation refactor (#14589)

Co-authored-by: Jill Osborne <jill.osborne@imply.io>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-07-28T17:55:17Z
46ecc6b9001f84e9affcb6153af0fbc3b55c324b,"Frames support for string arrays that are null. (#14653)

* Frames support for string arrays that are null.

The row format represents null arrays as 0x0001, which older readers
would interpret as an empty array. This provides compatibility with
older readers, which is useful during updates.

The column format represents null arrays by writing -(actual length) - 1
instead of the length, and using FrameColumnWriters.TYPE_STRING_ARRAY for
the type code for string arrays generally. Older readers will report this
as an unrecognized type code. Column format is only used by the operator
query, which is currently experimental, so the impact isn't too severe.

* Remove unused import.

* Return Object[] instead of List from frame array selectors.

Update MSQSelectTest and MSQInsertTest to reflect the fact that null
arrays are possible.

Add a bunch of javadocs to object selectors describing expected behavior,
including the requirement that array selectors return Object[].

* update test case.

* Update test cases.",2023-07-28T17:23:39Z
22290fd632c5026f2341c023affec4ccfa446721,"Test: Simplify test impl of LoadQueuePeon (#14684)

Changes
- Rename `LoadQueuePeonTester` to `TestLoadQueuePeon`
- Simplify `TestLoadQueuePeon` by removing dependency on `CuratorLoadQueuePeon`
- Remove usages of mock peons in `LoadRuleTest` and use `TestLoadQueuePeon` instead",2023-07-28T10:44:23Z
d406bafdfc62d808eb2135f35c1c65b52356c6e3,"fix issues with equality and range filters matching double values to long typed inputs (#14654)

* fix issues with equality and range filters matching double values to long typed inputs
* adjust to ensure we never homogenize null, [], and [null] into [null] for expressions on real array columns",2023-07-27T23:01:21Z
9a9038c7aeabe42724015fa240f13c6ca1aca0e2,"Speed up kill tasks by deleting segments in batch (#14131)

* allow for batched delete of segments instead of deleting segment data one by one

create new batchdelete method in datasegment killer that has default functionality
of iterating through all segments and calling delete on them. This will enable
a slow rollout of other deepstorage implementations to move to a batched delete
on their own time

* cleanup batchdelete segments

* batch delete with the omni data deleter

cleaned up code
just need to add tests and docs for this functionality

* update java doc to explain how it will try to use batch if function is overwritten

* rename killBatch to kill
add unit tests

* add omniDataSegmentKillerTest for deleting multiple segments at a time. fix checkstyle

* explain test peculiarity better

* clean up batch kill in s3.

* remove unused return value. cleanup comments and fix checkstyle

* default to batch delete. more specific java docs. list segments that couldn't be deleted
if there was a client error or server error

* simplify error handling

* add tests where an exception is thrown when killing multiple s3 segments

* add test for failing to delete two calls with the s3 client

* fix javadoc for kill(List<DataSegment> segments) clean up tests remove feature flag

* fix typo in javadocs

* fix test failure

* fix checkstyle and improve tests

* fix intellij inspections issues

* address comments, make delete multiple segments not assume same bucket

* fix test errors

* better grammar and punctuation. fix test. and better logging for exception

* remove unused code

* avoid extra arraylist instantiation

* fix broken test

* fix broken test

* fix tests to use assert.throws",2023-07-27T22:34:44Z
ee9cfc7e18e11704baa6c33856fdbb0f79a870d5,Tasks API documentation spacing update (#14633),2023-07-27T21:24:55Z
986a271a7d6d2f27f0c5a934a87994978bbc237a,"Merge core CoordinatorClient with MSQ CoordinatorServiceClient. (#14652)

* Merge core CoordinatorClient with MSQ CoordinatorServiceClient.

Continuing the work from #12696, this patch merges the MSQ
CoordinatorServiceClient into the core CoordinatorClient, yielding a single
interface that serves both needs and is based on the ServiceClient RPC
system rather than DruidLeaderClient.

Also removes the backwards-compatibility code for the handoff API in
CoordinatorBasedSegmentHandoffNotifier, because the new API was added
in 0.14.0. That's long enough ago that we don't need backwards
compatibility for rolling updates.

* Fixups.

* Trigger GHA.

* Remove unnecessary retrying in DruidInputSource. Add ""about an hour""
retry policy and h

* EasyMock",2023-07-27T20:23:37Z
482def788f90585640e61e0d59aa1a0b78836e4c,Supervisor API documentation refactor (#14579),2023-07-27T19:58:37Z
0b9e4af44361adaa25128d4269975072ff6e4bad,"Clean up some of the descriptions (#14661)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2023-07-27T19:11:58Z
9b88b78ba44e3de64dfa9978e95e3ee3cda221b6,"Fix race condition in KubernetesTaskRunner when task is added to the map (#14643)

Changes:
- Fix race condition in KubernetesTaskRunner introduced by #14435 
- Perform addition and removal from map inside a synchronized block
- Update tests",2023-07-27T07:04:36Z
7634ac896e793f5c6b51d0a421796d36871caa8b,Quick fix for SegmentLoadDropHandler bug (#14670),2023-07-27T06:23:58Z
dd204e596d26d0cb334a9c6a602d0783352384f8,"Refresh the OS Druid web console screenshots (#14397)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-07-26T23:32:03Z
4a68f8a2944547d70f4cea0e670072acd181bfec,"Fix maxCompletedTasks parameter in OverlordClientImpl. (#14667)

It was sent to the server as ""maxCompletedTasks"", but the server expects
""max"". This caused it to be ignored. This bug was introduced in #14581.",2023-07-26T22:12:20Z
add9796d4667df09b75a4f1211957a53a41c9cf4,"Bump qs from 6.5.2 to 6.5.3 in /website (#13510)

Bumps [qs](https://github.com/ljharb/qs) from 6.5.2 to 6.5.3.
- [Release notes](https://github.com/ljharb/qs/releases)
- [Changelog](https://github.com/ljharb/qs/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ljharb/qs/compare/v6.5.2...v6.5.3)

---
updated-dependencies:
- dependency-name: qs
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-07-26T20:17:36Z
915cea758635409395bcb36b1cf0fc91156329b1,"Bump decode-uri-component from 0.2.0 to 0.2.2 in /web-console (#13481)

Bumps [decode-uri-component](https://github.com/SamVerschueren/decode-uri-component) from 0.2.0 to 0.2.2.
- [Release notes](https://github.com/SamVerschueren/decode-uri-component/releases)
- [Commits](https://github.com/SamVerschueren/decode-uri-component/compare/v0.2.0...v0.2.2)

---
updated-dependencies:
- dependency-name: decode-uri-component
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-07-26T16:07:09Z
d69edb772398b79bcceb1002bbf4eec3991b2cf7,"Docs: Fix some typos. (#14663)

---------

Co-authored-by: slfan1989 <louj1988@@>",2023-07-26T15:54:18Z
e99bab2fd39684496c13d434e8c6303d988770af,"Bump org.xerial.snappy:snappy-java from 1.1.10.1 to 1.1.10.3 (#14641)

Bumps [org.xerial.snappy:snappy-java](https://github.com/xerial/snappy-java) from 1.1.10.1 to 1.1.10.3.
- [Release notes](https://github.com/xerial/snappy-java/releases)
- [Commits](https://github.com/xerial/snappy-java/compare/v1.1.10.1...v1.1.10.3)

---
updated-dependencies:
- dependency-name: org.xerial.snappy:snappy-java
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-07-26T13:27:55Z
b2a07c5db1785e10ddec4fdca36fd2924555ca7a,"Bump word-wrap from 1.2.3 to 1.2.4 in /web-console (#14613)

Bumps [word-wrap](https://github.com/jonschlinkert/word-wrap) from 1.2.3 to 1.2.4.
- [Release notes](https://github.com/jonschlinkert/word-wrap/releases)
- [Commits](https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4)

---
updated-dependencies:
- dependency-name: word-wrap
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-07-26T13:27:06Z
6a42a24426e540e2fe4a46dbe857f98f68715591,Fix a comment in the Calcite UT testExactCountDistinctWithFilter (#14628),2023-07-26T06:32:26Z
52fbc6939e0caaaa636946a62d256d60723e441f,Fix the bug in string last vector aggregation (#14655),2023-07-26T03:48:03Z
4804630c78a02a104966570579ea41464aa0580d,Clean up Kinesis doc (#14529),2023-07-26T02:24:36Z
2dc3e94a9a33cd05b3f440664507abffa9d01cac,"Service status API documentation refactor (#14528)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-07-26T01:42:47Z
6b229f5118769f0dcd544bdfb71c31f44625b6ef,new environment vars for external druid and kafka + jupyter template (#14592),2023-07-25T18:02:16Z
6566bda57cfef2741fbfa66e796f1190edc93347,"Suppress CVEs (#14648)

CVE-2023-34462 - (Allows malicious allocation of resources without throttling) Not applicable as the Netty requests in Druid are internal, and not user facing.
CVE-2016-2402 - (Man in the middle with okhttp by sending certificate chains) Not applicable as okhttp requests in Druid are also internal",2023-07-25T08:07:50Z
2f9619a96fbde224a7de3233d278087fd4782a0f,"Use OverlordClient for all Overlord RPCs. (#14581)

* Use OverlordClient for all Overlord RPCs.

Continuing the work from #12696, this patch removes HttpIndexingServiceClient
and the IndexingService flavor of DruidLeaderClient completely. All remaining
usages are migrated to OverlordClient.

Supporting changes include:

1) Add a variety of methods to OverlordClient.

2) Update MetadataTaskStorage to skip the complete-task lookup when
   the caller requests zero completed tasks. This helps performance of
   the ""get active tasks"" APIs, which don't want to see complete ones.

* Use less forbidden APIs.

* Fixes from CI.

* Add test coverage.

* Two more tests.

* Fix test.

* Updates from CR.

* Remove unthrown exceptions.

* Refactor to improve testability and test coverage.

* Add isNil tests.

* Remove unnecessary ""deserialize"" methods.",2023-07-25T04:14:27Z
f742bb73766dbc0814b7b0bbe722519bf69cf14e,"Get task location should be stored on the lifecycle object (#14649)

* Fix issue with long data source names

* Use the regular library

* Save location and tls enabled

* Null out before running

* add another comment",2023-07-25T01:36:19Z
28914bbab82480f33a345913a30c32321d36fc37,"Fix issue with long data source names (#14620)

* Fix issue with long data source names

* Use the regular library

* fix overlord utils test",2023-07-24T15:45:10Z
607f511767e5fed6f390baaa006e42c74d6ad76a,Improve logging in CoordinatorBasedSegmentHandoffNotifier (#14640),2023-07-24T12:34:21Z
536e491d001f4baa6df20cce824ec2e63e5898a6,"Suppress ambari metrics CVEs (#14645)

* Suppress ambari metrics CVEs",2023-07-24T12:31:56Z
54f29fedce29704f2b3acfb134a9d5735648b279,"Use PreparedBatch while deleting segments (#14639)

Related to #14634 

Changes:
- Update `IndexerSQLMetadataStorageCoordinator.deleteSegments` to use
JDBI PreparedBatch instead of issuing single DELETE statements",2023-07-23T17:25:04Z
efb32810c48fd9c0bf81cefb15179f74a4cde661,"Clean up the core API required for Iceberg extension (#14614)

Changes:
- Replace `AbstractInputSourceBuilder` with `InputSourceFactory`
- Move iceberg specific logic to `IcebergInputSource`",2023-07-21T07:31:33Z
f5784e66d3f86d820cd85b5805e841e9ec5a168c,"Web console: add explore view (#14602)

This PR adds a simple, stateless, SQL backed, data exploration view to the web console. The idea is to let users explore data in Druid with point-and-click interaction and visualizations (instead of writing SQL and looking at a table). This can provide faster time-to-value for a user new to Druid and can allow a Druid veteran to quickly chart some data that they care about.",2023-07-21T05:49:23Z
295653648b2962c9b71f78880927621b507e84f6,"Web console: make typing fun again (#14632)

* extract common function

* make typing fun again",2023-07-20T23:22:41Z
77e0c16bce04fc0f9503d323accdbbe14691c9a2,"Sql statement api error messaging fixes.  (#14629)

* Error messaging fixes.

* Static check fix

* Review comments",2023-07-20T17:18:44Z
1ddbaa874429d6f176c90f25189c959d5d1eae55,"Reserve threads for non-query requests without using laning (#14576)

This PR uses the QoSFilter available in Jetty to park the query requests that exceed a configured limit. This is done so that other HTTP requests such as health check calls do not get blocked if the query server is busy serving long-running queries. The same mechanism can also be used in the future to isolate interactive queries from long-running select queries from interactive queries within the same broker.

Right now, you can still get that isolation by setting druid.query.scheduler.numThreads to a value lowe than druid.server.http.numThreads. That enables total laning but the side effect is that excess requests are not queued and rejected outright that leads to a bad user experience.

Parked requests are timed out after 30 seconds by default. I overrode that to the maxQueryTimeout in this PR.",2023-07-20T09:33:48Z
024ce40f1a8874883b76040b1997d6270993c3ea,reduce heap footprint of ingesting auto typed columns by pushing compression and index generation into writeTo (#14615),2023-07-20T07:54:58Z
c2e67585809d035a1973546ea081f46dc755b46f,"Simplify bounds/range vs selectors/equality logic in SQL planning. (#14619)

* Simplify bounds/range vs selectors/equality logic in SQL planning.

1) Consolidate duplicate code related to Expressions#buildTimeFloorFilter.

2) Cleaner logic in Expressions#toSimpleLeafFilter: choose bounds vs range
   filter based solely on plannerContext.isUseBoundsAndSelectors, not also
   considering rhs kind. Use parsed rhs in both paths (except for numerics
   in the bound path).

3) Fix ArrayContains, ArrayOverlap to avoid equality filters when there is
   an extractionFn present. Fixes a bug introduced in #14612.

* Avoid sending nonprimitives down the bound path.",2023-07-20T05:40:47Z
01e9a3954445961979dc5265766d760d28677200,fix boolean segment filters (#14622),2023-07-20T03:45:23Z
bac5ef347ceaedcc202bc842aa58a9ee64d8f890,"Add ingest/input/bytes metric and Kafka consumer metrics. (#14582)

* Add ingest/input/bytes metric and Kafka consumer metrics.

New metrics:

1) ingest/input/bytes. Equivalent to processedBytes in the task reports.

2) kafka/consumer/bytesConsumed: Equivalent to the Kafka consumer
   metric ""bytes-consumed-total"". Only emitted for Kafka tasks.

3) kafka/consumer/recordsConsumed: Equivalent to the Kafka consumer
   metric ""records-consumed-total"". Only emitted for Kafka tasks.

* Fix anchor.

* Fix KafkaConsumerMonitor.

* Interface updates.

* Doc changes.

* Update indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java

Co-authored-by: Benedict Jin <asdf2014@apache.org>

---------

Co-authored-by: Benedict Jin <asdf2014@apache.org>",2023-07-20T02:56:22Z
f7348d73890b658fcc8c2d447ce3ef5cb0527195,add support for smartSegmentLoading (#14610),2023-07-19T21:21:30Z
1f4ee5e21bedcfa2dd7026ec38debbe8487811a5,"Docs: Change default value of ""maxRowsInMemory"" in tuningConfig (#14618)

Reflecting fixes from https://github.com/apache/druid/pull/13939",2023-07-19T17:44:15Z
68fd22169fe7e85b20ab3ef1d5bac2d0e95b9fb9,"remove extractionFn from equality, null, and range filters (#14612)

* remove extractionFn from equality, null, and range filters
changes:
* EqualityFilter, NullFilter, and RangeFilter no longer support extractionFn
* SQL planner will use ExpressionFilter in the small number of cases where an extractionFn would have been used if sqlUseBoundsAndSelectors is set to false instead of equality/null/range filters
* fix bugs and add tests with serde, equals, and cache key for null, equality, and range filters

* test coverage fixes bugs

* adjust

* adjust again

* so persnickety",2023-07-19T17:37:57Z
ae168c4559edc86b79d682ab7a794a7be610bea6,"Adding null fix for rows and col stats information. (#14617)

* Adding null fix for rows and col stats information.

* Null handling test case fix",2023-07-19T15:46:05Z
f4d0ea7bc82bb185a467f7f9fa2a085068995573,"Add support for earliest `aggregatorMergeStrategy` (#14598)

* Add EARLIEST aggregator merge strategy.

- More unit tests.
- Include the aggregators analysis type by default in tests.

* Docs.

* Some comments and a test

* Collapse into individual code blocks.",2023-07-18T19:37:10Z
913416c669a4594e6a2ead92eb6546e086dad9d3,"add equality, null, and range filter (#14542)

changes:
* new filters that preserve match value typing to better handle filtering different column types
* sql planner uses new filters by default in sql compatible null handling mode
* remove isFilterable from column capabilities
* proper handling of array filtering, add array processor to column processors
* javadoc for sql test filter functions
* range filter support for arrays, tons more tests, fixes
* add dimension selector tests for mixed type roots
* support json equality
* rename semantic index maker thingys to mostly have plural names since they typically make many indexes, e.g. StringValueSetIndex -> StringValueSetIndexes
* add cooler equality index maker, ValueIndexes 
* fix missing string utf8 index supplier
* expression array comparator stuff",2023-07-18T19:15:22Z
0a8262edc8565184ac9bdb368806ea938ce0d6d5,make sure execution mode is set (#14606),2023-07-18T18:54:30Z
cab93fb817c2d3b5926cde7c7a23ff4317a93fe4,"Docs: Minor change missed in #14590 (#14604)

Changes:
- Rephrased the description of `smartSegmentLoading`
- Moved detail about value computation outside of quoted block as it is important.",2023-07-18T14:28:37Z
993d8a9bf6eacba0a0041b40c5b81ac69d2a5b3e,Bump up version in iceberg pom (#14605),2023-07-18T12:37:19Z
88dc330da24cfa5446f7b71bf26816920d8c3554,Docs: Changes for coordinator improvements done in #13197 (#14590),2023-07-18T08:52:00Z
aef221f71b5c901e493046a8c6ef1ae5196b2f06,"Allow multiple consoleAppender to be used in peon logging (#14521)

* Allow multiple consoleAppender to be used in peon logging

* Fix Attempted to append to non-started appender error",2023-07-18T04:29:45Z
0412f40d363d328d07f76d3bca0c65f9acfd344b,"Prepare master branch for next release, 28.0.0 (#14595)

* Prepare master branch for next release, 28.0.0",2023-07-18T03:52:30Z
03d6d395a0ae7b03743dec3a0e447648d8aca126,"Extension to read and ingest iceberg data files (#14329)

This adds a new contrib extension: druid-iceberg-extensions which can be used to ingest data stored in Apache Iceberg format. It adds a new input source of type iceberg that connects to a catalog and retrieves the data files associated with an iceberg table and provides these data file paths to either an S3 or HDFS input source depending on the warehouse location.

Two important dependencies associated with Apache Iceberg tables are:

Catalog : This extension supports reading from either a Hive Metastore catalog or a Local file-based catalog. Support for AWS Glue is not available yet.
Warehouse : This extension supports reading data files from either HDFS or S3. Adapters for other cloud object locations should be easy to add by extending the AbstractInputSourceAdapter.",2023-07-18T03:29:57Z
6becd8188e1ac856d413d30bedaa5067db522570,"Web console: better schema discovery copy (#14601)

* better-schema-discovery-copy

* Update web-console/src/views/load-data-view/load-data-view.tsx

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update web-console/src/views/load-data-view/load-data-view.tsx

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* auto-format

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-07-18T00:29:54Z
6425ef4c3c799105b9c50b2e87ab0f740c8a8224,"Web console: fix service view filtering on other bugs (#14597)

* fix service view filter

* MSQ choose best timeformat also",2023-07-17T20:57:37Z
0e3ce0a7f7bc3d54f9f18810ed4a27c96ca0c5dd,Improve shields with suitable logos (#14575),2023-07-17T13:35:54Z
ab051d9c5e9a9eafe931a65422bb0f932f4d5b1b,"Add test for ReservoirSegmentSampler (#14591)

Tests to verify the following behaviour have been added:
- Segments from more populous servers are more likely to be picked irrespective of
sample size.
- Segments from all servers are equally likely to be picked if all servers have equivalent
number of segments.",2023-07-17T13:20:02Z
1f6507dd604da089fdb1a0b66f4b7eed06cc9672,"Remove the deprecated `InsertCannotOrderByDescending` MSQ fault (#14588)

The deprecated MSQ fault, InsertCannotOrderByDescending, is removed.",2023-07-17T09:23:39Z
d5f6749aa365ead1f5823649c9da7b161153d21d,"Web console: catchup to all the backend changes (#14540)

This PR catches the console up to all the backend changes for Druid 27

Specifically:

Add page information to SqlStatementResource API #14512
Allow empty tiered replicants map for load rules #14432
Adding Interactive API's for MSQ engine #14416
Add replication factor column to sys table #14403
Account for data format and compression in MSQ auto taskAssignment #14307
Errors take 3 #14004",2023-07-17T05:56:46Z
214f7c3f650dad5ceeebbb487add3d9295828601,Expose leader dimension in service/heartbeat metric into statsd-reporter (#14593),2023-07-17T05:08:24Z
95ca43034fe661556f56dee7c39b6d7b784a0a2e,"Change default handoffConditionTimeout to 15 minutes. (#14539)

* Change default handoffConditionTimeout to 15 minutes.

Most of the time, when handoff is taking this long, it's because something
is preventing Historicals from loading new data. In this case, we have
two choices:

1) Stop making progress on ingestion, wait for Historicals to load stuff,
   and keep the waiting-for-handoff segments available on realtime tasks.
   (handoffConditionTimeout = 0, the current default)

2) Continue making progress on ingestion, by exiting the realtime tasks
   that were waiting for handoff. Once the Historicals get their act
   together, the segments will be loaded, as they are still there on
   deep storage. They will just not be continuously available.
   (handoffConditionTimeout > 0)

I believe most users would prefer [2], because [1] risks ingestion falling
behind the stream, which causes many other problems. It can cause data loss
if the stream ages-out data before we have a chance to ingest it.

Due to the way tuningConfigs are serialized -- defaults are baked into the
serialized form that is written to the database -- this default change will
not change anyone's existing supervisors. It will take effect for newly
created supervisors.

* Fix tests.

* Update docs/development/extensions-core/kafka-supervisor-reference.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/kinesis-ingestion.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

---------

Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-07-13T20:17:14Z
c1c7dff2ad082a110aaab3c2c9dc1678773f1a92,"Using DruidExceptions in MSQ (changes related to the Broker) (#14534)

MSQ engine returns correct error codes for invalid user inputs in the query context. Also, using DruidExceptions for MSQ related errors happening in the Broker with improved error messages.",2023-07-13T19:08:49Z
589aac8b317104fd34b5c57e0ca248e6ca3e4703,"Make errorCode of InsertTimeOutOfBoundsFault consistent with others (#14495)

The errorCode of this fault when serialized over the wire was being
set to the name of the class `InsertTimeOutOfBoundsFault` instead of
the CODE `InsertTimeOutOfBounds`. All other faults' errorCodes are
serialized as the respective Fault's code, so making consistent here
as well.",2023-07-13T18:34:21Z
f4ee58eaa8bee182304b185445aec70c708eb602,"Add `aggregatorMergeStrategy` property in SegmentMetadata queries (#14560)

* Add aggregatorMergeStrategy property to SegmentMetadaQuery.

- Adds a new property aggregatorMergeStrategy to segmentMetadata query.
aggregatorMergeStrategy currently supports three types of merge strategies -
the legacy strict and lenient strategies, and the new latest strategy.
- The latest strategy considers the latest aggregator from the latest segment
by time order when there's a conflict when merging aggregators from different
segments.
- Deprecate lenientAggregatorMerge property; The API validates that both the new
and old properties are not set, and returns an exception.
- When merging segments as part of segmentMetadata query, the segments have a more
elaborate id -- <datasource>_<interval>_merged_<partition_number> format, similar to
the name format that segments usually contain. Previously it was simply ""merged"".
- Adjust unit tests to test the latest strategy, to assert the returned complete
SegmentAnalysis object instead of just the aggregators for completeness.

* Don't explicitly set strict strategy in tests

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/querying/segmentmetadataquery.md

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

---------

Co-authored-by: Katya Macedo <38017980+ektravel@users.noreply.github.com>",2023-07-13T16:37:36Z
450ecd6370d47aff58b4160efd95a82396897d5f,"More efficient generation of ImmutableWorkerHolder from WorkerHolder. (#14546)

* More efficient generation of ImmutableWorkerHolder from WorkerHolder.

Taking the work done in #12096 a little further:

1) Applying a similar optimization to WorkerHolder (HttpRemoteTaskRunner).
   The original patch only helped with the ZkWorker (RemoteTaskRunner).

2) Improve the ZkWorker version somewhat by avoiding multiple iterations
   through the task announcements map.

* Pick better names and use better logic.

* Only runnable tasks.

* Fix test.

* Fix testBlacklistZKWorkers50Percent.",2023-07-13T14:57:16Z
7650a71d3766f8a37a896f0928e5b280ba53d5b5,Add window query test files from Drill (#14561),2023-07-13T03:14:39Z
0dcb19f7e3277f58c17070e646cc0bc6f5d9ebac,"Add Continuous Profiling to Unit Tests (#14506)

Uses a custom continusou jfr profiler.

Modifies the github actions for tests to do profiling only in the case
of jdk17, as the profiler requires jdk17+ to use the JFR streaming API
plus a few other language features in the code.

Continuous Profiling service is provided to the Apache Druid project
free of charge by Imply and any committer can request free access to
the UI.",2023-07-13T00:50:38Z
65e1b27aa709dc3e11ae75993656243377744666,"Fix a resource leak with Window processing (#14573)

* Fix a resource leak with Window processing

Additionally, in order to find the leak, there were
adjustments to the StupidPool to track leaks a bit better.
It would appear that the pool objects get GC'd during testing
for some reason which was causing some incorrect identification
of leaks from objects that had been returned but were GC'd along
with the pool.

* Suppress unused warning",2023-07-12T22:25:42Z
12ce187ae4da7bcdd5719b95ef338eee062b8f73,Update slack text (#14578),2023-07-12T19:08:48Z
d21c54fb73d8b1e18910cfbe680f183b8e8b59b0,"Cross reference  backpressure info (#14508)

Co-authored-by: Jill Osborne <jill.osborne@imply.io>
Co-authored-by: Cristian Popa <cristian.popa@imply.io>",2023-07-12T17:02:04Z
89aee6caaae41ecd99b6d99042bd62427ae4e6cb,"Fixing an issue in sequential merge  (#14574)

* Fixing an issue in sequential merge where workers without any partial key statistics would get stuck because controller did not change the worker state.

* Removing empty check

* Adding IT for MSQ sequential bug fix.",2023-07-12T16:35:30Z
3ff51487b7cbf26f95ef414f3b5d505a8620804f,"Add ZooKeeper connection state alerts and metrics. (#14333)

* Add ZooKeeper connection state alerts and metrics.

- New metric ""zk/connected"" is an indicator showing 1 when connected,
  0 when disconnected.
- New metric ""zk/disconnected/time"" measures time spent disconnected.
- New alert when Curator connection state enters LOST or SUSPENDED.

* Use right GuardedBy.

* Test fixes, coverage.

* Adjustment.

* Fix tests.

* Fix ITs.

* Improved injection.

* Adjust metric name, add tests.",2023-07-12T16:34:28Z
3711c0d987213a0086053916a23775768f6f0a6b,"Reduce heap footprint of GenericIndexed. (#14563)

Two changes:

1) Intern DecompressingByteBufferObjectStrategy. Saves ~32 bytes per column.

2) Split GenericIndexed into GenericIndexed.V1 and GenericIndexed.V2. The
   major benefit here is isolating out the ByteBuffers that are only needed
   for V2. This saves ~80 bytes for V1 (one buffer instead of two).",2023-07-12T15:11:41Z
cc8b210e4c6acc4f1ccb0af6fe163209357ddf18,"AggregatorFactory: Use guessAggregatorHeapFootprint when factorizeWithSize is not implemented. (#14567)

There are two ways of estimating heap footprint of an Aggregator:

1) AggregatorFactory#guessAggregatorHeapFootprint
2) AggregatorFactory#factorizeWithSize + Aggregator#aggregateWithSize

When the second path is used, the default implementation of factorizeWithSize
is now updated to delegate to guessAggregatorHeapFootprint, making these equivalent.
The old logic used getMaxIntermediateSize, which is less accurate.

Also fixes a bug where, when using the second path, calling factorizeWithSize
on PassthroughAggregatorFactory would fail because getMaxIntermediateSize was
not implemented. (There is no buffer aggregator, so there would be no need.)",2023-07-12T14:33:27Z
7142b0c39eca2d6f111db827d5e5b035cc4d9347,"Enable result level cache for GroupByStrategyV2 on broker (#11595)

Cache is disabled for GroupByStrategyV2 on broker since the pr #3820 [groupBy v2: Results not fully merged when caching is enabled on the broker]. But we can enable the result-level cache on broker for GroupByStrategyV2 and keep the segment-level cache disabled.",2023-07-12T09:30:01Z
d76903f10ba45423205f70b751f1bc2b4f616c16,"Tasks API documentation refactor (#14492)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-07-11T20:19:39Z
854ef98235979eb8586a49c0ed62e0bd16940474,"Minor doc fixes. (#14565)

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2023-07-11T20:12:40Z
0ca3ba0b301801293ec1c0ccddfeab76ace58586,Add service/heartbeat metric into statsd-reporter (#14564),2023-07-11T19:38:08Z
a764ed7fde0a605cebd56f34009b07ae04c78fdf,"Update Jupyter notebook tutorial instructions for ARM devices (#14459)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-07-11T17:01:20Z
c91148c43b72c59230d20857d810621805ceb802,"Bump tough-cookie from 4.0.0 to 4.1.3 in /web-console (#14557)

Bumps [tough-cookie](https://github.com/salesforce/tough-cookie) from 4.0.0 to 4.1.3.
- [Release notes](https://github.com/salesforce/tough-cookie/releases)
- [Changelog](https://github.com/salesforce/tough-cookie/blob/master/CHANGELOG.md)
- [Commits](https://github.com/salesforce/tough-cookie/compare/v4.0.0...v4.1.3)

---
updated-dependencies:
- dependency-name: tough-cookie
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2023-07-11T15:53:42Z
5ce536355e80cbb72e7319359c2047508d907e7d,"Fix planning bug while using sort merge frame processor (#14450)

sqlJoinAlgorithm is now a hint to the planner to execute the join in the specified manner. The planner can decide to ignore the hint if it deduces that the specified algorithm can be detrimental to the performance of the join beforehand.",2023-07-11T09:58:44Z
8087aa2b803ca21498c7578de3c1e1d8118a63f4,Adding the null check in combine and fold in doublesSketch (#14568),2023-07-11T08:58:34Z
30a91be15a4b728d4a3c6e8ff4fb0d8ae554a1a6,"Add log statements for tmpStorageBytes in MSQ (#14449)

* Add log statements for tmpStorageBytes in MSQ

* Add log

* Update log message",2023-07-11T05:32:12Z
66cac08a52cc357a4c775dbb64919941f7733c57,"Refactor HllSketchBuildAggregatorFactory (#14544)

* Refactor HllSketchBuildAggregatorFactory

The usage of ColumnProcessors and HllSketchBuildColumnProcessorFactory
made it very difficult to figure out what was going on from just looking
at the AggregatorFactory or Aggregator code.  It also didn't properly
double check that you could use UTF8 ahead of time, even though it's
entirely possible to validate it before trying to use it.  This refactor
makes keeps the general indirection that had been implemented by
the Consumer<Supplier<HllSketch>> but centralizes the decision logic and
makes it easier to understand the code.

* Test fixes

* Add test that validates the types are maintained

* Add back indirection to avoid buffer calls

* Cover floats and doubles are the same thing

* Static checks",2023-07-10T16:57:09Z
c3f84f9ea07e034f23f4252ac9b90d49988791da,"Suppress CVEs (#14291)

Address various CVEs by upgrading dependencies or adding suppression with a justification",2023-07-10T09:49:26Z
58a35bf07e6ec20427bd1dbcd5e1ca37d4c7c757,"Deprecate EntryExistsException in Druid 27 and remove in Druid 28 (#14554)

Also deprecate UnknownSegmentIdsException.",2023-07-08T10:10:14Z
63ee69b4e8698fd33e5e8988be150a74fd966e19,"Claim full support for Java 17. (#14384)

* Claim full support for Java 17.

No production code has changed, except the startup scripts.

Changes:

1) Allow Java 17 without DRUID_SKIP_JAVA_CHECK.

2) Include the full list of opens and exports on both Java 11 and 17.

3) Document that Java 17 is both supported and preferred.

4) Switch some tests from Java 11 to 17 to get better coverage on the
   preferred version.

* Doc update.

* Update errorprone.

* Update docker_build_containers.sh.

* Update errorprone in licenses.yaml.

* Add some more run-javas.

* Additional run-javas.

* Update errorprone.

* Suppress new errorprone error.

* Add exports and opens in ForkingTaskRunner for Java 11+.

Test, doc changes.

* Additional errorprone updates.

* Update for errorprone.

* Restore old fomatting in LdapCredentialsValidator.

* Copy bin/ too.

* Fix Java 15, 17 build line in docker_build_containers.sh.

* Update busybox image.

* One more java command.

* Fix interpolation.

* IT commandline refinements.

* Switch to busybox 1.34.1-glibc.

* POM adjustments, build and test one IT on 17.

* Additional debugging.

* Fix silly thing.

* Adjust command line.

* Add exports and opens one more place.

* Additional harmonization of strong encapsulation parameters.",2023-07-07T19:52:35Z
5f94a2a9c2a801225e5ebceb92e0112ed2a0dca2,"Add link to Slack channel (#14553)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-07-07T17:09:15Z
021a01df4575519dd73aa734804f3a3ad4c1e225,"RTR, HRTR: Fix incorrect maxLazyWorkers check in markLazyWorkers. (#14545)

Recently #14532 fixed a problem when maxLazyWorkers == 0 and lazyWorkers
starts out empty. Unfortunately, even after that patch, there remained
a more general version of this problem when maxLazyWorkers == lazyWorkers.size().
This patch fixes it.

I'm not sure if this would actually happen in production, because the
provisioning strategies do try to avoid calling markWorkersLazy until
previously-initiated terminations have finished. Nevertheless, it still
seems like a good thing to fix.",2023-07-07T17:08:12Z
9e617373a0cd2467e8565a54335849c9f48b39d0,Handle dimensionless group by queries with partitioning,2023-07-07T16:21:47Z
afa8c7b8abec1337003af76160ea94ef8cd09f0a,"Adding Ability for MSQ to write select results to durable storage. (#14527)

One of the most requested features in druid is to have an ability to download big result sets.
As part of #14416 , we added an ability for MSQ to be queried via a query friendly endpoint. This PR builds upon that work and adds the ability for MSQ to write select results to durable storage.

We write the results to the durable storage location <prefix>/results/<queryId> in the druid frame format. This is exposed to users by
/v2/sql/statements/:queryId/results.",2023-07-07T15:19:48Z
40d0dc9e0e02c89f91762a400ecdd84b950907ca,"Use separate executor to handle task updates in TaskQueue (#14533)

Description:
`TaskQueue.notifyStatus` is often a heavy call as it performs the following operations:
- Update task status in metadata DB
- Update task locks in metadata DB
- Request (synchronously) the task runner to shutdown the completed task
- Clean up in-memory data structures

This method can often be slow and can cause worker sync / task runners to slow down.

Main changes:
- Run task completion callbacks in a separate executor to handle task completion updates
- Add new config `druid.indexer.queue.taskCompleteHandlerNumThreads`
- Add metrics to monitor number of processed and queued items
- There are still other paths that can invoke `notifyStatus`, but those need not be moved to
the new executor as they are synchronous on purpose.

Other changes:
- Add new metrics `task/status/queue/count`, `task/status/handled/count`
- Add `TaskCountStatsProvider.getStats()` which deprecates the other `getXXXTaskCount` methods.
- Use `CoordinatorRunStats` to collect and report metrics. This class has been used as is
for now but will later be renamed and repurposed to use across all Druid services.",2023-07-07T15:13:12Z
95115d722af6d7eb26384a261c16776fbf01917b,"CVE fixes - update of multiple dependencies.  (#14519)

Apache Druid brings multiple direct and transitive dependencies that are affected by plethora of CVEs.
This PR attempts to update all the dependencies that did not require code refactoring.
This PR modifies pom files, license file and OWASP Dependency Check suppression file.",2023-07-07T14:57:30Z
1fe61bc869924d51a3e3133a5894afb3896640af,"ChangeRequestHttpSyncer: Don't wait 1ms when checking isInitialized(). (#14547)

The wait doesn't seem to serve a purpose, other than causing delays
when checking isInitialized() for a large number of things that have
not yet been initialized.",2023-07-07T12:54:39Z
d63eff3b1b6b15fac1bb278a784ce6c391a52ce2,Reduce contention in HttpRemoteTaskRunner.getKnownTasks() (#14541),2023-07-07T08:13:59Z
dd78e00dc543609db2c75c23f9546fc46cb86ad8,"Fix ColumnSignature error message and jdk17 test issue. (#14538)

* Fix ColumnSignature error message and jdk17 test issue.

On jdk17, the ""problem"" part of the error message could change from
NullPointerException to:

  Cannot invoke ""String.length()"" because ""s"" is null

Due to the new more-helpful NPEs in Java 17. This broke the expectation
and led to test failures on this case.

This patch fixes the problem by improving the error message so it isn't
a generic NullPointerException.

* Fix format.",2023-07-06T22:10:59Z
037f09bef2224b0912b0f225c7653929dd98af88,HttpRemoteTaskRunner: Fix markLazyWorkers for maxLazyWorkers == 0. (#14532),2023-07-06T18:51:04Z
d02bb8bb6e1e6d0aae3ebdb06f2f1ea335b8ad6d,"Set explain attributes after the query is prepared (#14490)

* Add support for DML WITH AS.

* One more UT for with as subquery.

* Add a test with join query

* Use root query prepared node instead of individual SqlNode types.

- Set the explain plan attributes after the query is prepared when
the query is planned and we've the finalized output names in the root
source rel node.
- Adjust tests; add unit test for negative ordinal case.
- Remove the exception / error handling logic from resolveClusteredBy
function since the validations now happen before it comes to the function

* Update comment.",2023-07-06T18:13:32Z
5fc122a144cbb9dcc3471e518872ef2d2a135504,"Add window-focused tests from Drill (#13773)

This commit borrows some test definitions from Drill's test suite
and tries to use them to flesh out the full validation of window
function capbilities.

In order to be able to run these tests, we also add the ability to
run a Scan operation against segments, which also meant an
implementation of RowsAndColumns for frames.",2023-07-06T16:20:32Z
277b35725619d6d6b63b5c925a72ffb19a37d703,"Optimize IntervalIterator (#14530)



UniformGranularityTest's test to test a large number of intervals
runs through 10 years of 1 second intervals.  This pushes a lot of
stuff through IntervalIterator and shows up in terms of test
runtime as one of the hottest tests.  Most of the time is going to
constructing jodatime objects because it is doing things with
DateTime objects instead of millis.  Change the calls to use
millis instead and things go faster.",2023-07-06T09:14:23Z
87bb1b970915631149812e7a92892bc8850cf3eb,"Fix bug during initialization of HttpServerInventoryView (#14517)

If a server is removed during `HttpServerInventoryView.serverInventoryInitialized`,
the initialization gets stuck as this server is never synced. The method eventually times
out (default 250s).

Fix: Mark a server as stopped if it is removed. `serverInventoryInitialized` only waits for
non-stopped servers to sync.

Other changes:
- Add new metrics for better debugging of slow broker/coordinator startup
  - `segment/serverview/sync/healthy`: whether the server view is syncing properly with a server
  - `segment/serverview/sync/unstableTime`: time for which sync with a server has been unstable  
- Clean up logging in `HttpServerInventoryView` and `ChangeRequestHttpSyncer`
- Minor refactor for readability
- Add utility class `Stopwatch`
- Add tests and stubs",2023-07-06T07:34:53Z
a6547febaf8dcfb35f11073972317d7129035c98,"Remove unused coordinator dynamic configs (#14524)

After #13197 , several coordinator configs are now redundant as they are not being
used anymore, neither with `smartSegmentLoading` nor otherwise.

Changes:
- Remove dynamic configs `emitBalancingStats`: balancer error stats are always
emitted, debug stats can be logged by using `debugDimensions`
- `useBatchedSegmentSampler`, `percentOfSegmentsToConsiderPerMove`:
batched segment sampling is always used
- Add test to verify deserialization with unknown properties
- Update `CoordinatorRunStats` to always track stats, this can be optimized later.",2023-07-06T06:41:10Z
78db7a44148bfba0acdfe6612daa3113914808b7,"A query in MSQ would issue wrong error code (#14531)

with a RuntimeException. Now the RuntimeException is being replaced by an user facing DruidException of Invalid category which would allow calcite not to throw an uncategorized exception.",2023-07-06T03:29:35Z
f29a9faa94839bacfaad94bdeb4f439fe379dd18,Better surfacing of invalid pattern errors for SQL REGEXP_EXTRACT function (#14505),2023-07-05T22:12:54Z
50b7e5d20e551163c6ed45eb8c39617ff5634d7b,docs: fix links (#14504),2023-07-05T19:29:47Z
609833c97bb44fee50f4fb84e44ad7c6cb053714,"Do not emit negative lag because of stale offsets (#14292)

The latest topic offsets are polled frequently and used to determine the lag based on the current offsets. However, when the offsets are stale (which can happen due to connection issues commonly), we may see a negative lag .

This PR prevents emission of metrics when the offsets are stale and at least one of the partitions has a negative lag.",2023-07-05T09:14:23Z
cc159f431722fc0a2c692f913fd4e016f862e40e,docs: k8s-jobs role needs batch apigroup (#14343),2023-07-04T09:04:20Z
e2676c390ee663149ffd984db156eb8b0fb7bddc,Downgrade busybox version to fix k8s IT (#14518),2023-07-04T06:51:35Z
4ee7b14f5fe61839c68c121511c1307df1b367a5,update links in jupyter notebook (#14404),2023-07-03T20:50:25Z
c04a36d15b15ea0f2fea92d756a02335b5dbbb4b,"Run IntelliJ-inspections in parallel to static-checks & web-checks in GHA (#14515)

Currently, IntelliJ-inspections are run sequentially w.r.t static-checks, thereby increasing build time. Moving IntelliJ-inspections to a separate job to improve builds time and get a quick insight into such issues early on.",2023-07-03T11:40:19Z
27a70d569db7a0274e222d5ba1aa32cb587ce529,"Add page information to SqlStatementResource API (#14512)


    * Changes the get results API in SqlStatementResource to take a page number instead of row/offset.
    * Adds ""pages"" containing information on each page to the results status.
    * Update the ""numRows"" and ""sizeInByes"" to ""numTotalRows"" and ""totalSizeInBytes"" respectively, which are totalled across all pages.",2023-07-03T09:50:14Z
2d5b27358e0a1abefcc3c7ddeb3af613ddf88df5,"Logging the fieldName in the coerce exceptions  (#14483)

Logging the fieldName in the coerce exceptions",2023-07-03T08:43:27Z
277aaa5c572725b7cacb4e7be36bad164a50f889,"remove druid.processing.columnCache.sizeBytes and CachingIndexed, combine string column implementations (#14500)

* combine string column implementations
changes:
* generic indexed, front-coded, and auto string columns now all share the same column and index supplier implementations
* remove CachingIndexed implementation, which I think is largely no longer needed by the switch of many things to directly using ByteBuffer, avoiding the cost of creating Strings
* remove ColumnConfig.columnCacheSizeBytes since CachingIndexed was the only user",2023-07-03T02:37:15Z
58f3faf2996051a037555d665da6a8781215e037,"SortMergeJoinFrameProcessor: Fix two bugs with buffering. (#14196)

1) Fix a problem where the fault wasn't reported when the left-hand side
   had too many buffered frames. (Instead, frames continued to be buffered,
   eventually running the server out of memory.)

2) Always update the mark when rewinding isn't necessary. It fixes a problem where
   frames would be needlessly buffered when there isn't a key match across
   the two sides.

3) Memory reserved for building the trackers now change based on the heap sized",2023-07-02T14:22:52Z
048dbcee8846d51a38b228c8aaac88851278277e,"MSQ: Improve InsertTimeOutOfBounds error message. (#14511)

Nicer and actionable error message for `InsertTimeOutOfBounds` fault",2023-07-01T20:14:19Z
67fbd8e7fcf71e8a0dc716b612317226e02bff88,"Add ""stringEncoding"" parameter to DataSketches HLL. (#11201)

* Add ""stringEncoding"" parameter to DataSketches HLL.

Builds on the concept from #11172 and adds a way to feed HLL sketches
with UTF-8 bytes.

This must be an option rather than always-on, because prior to this
patch, HLL sketches used UTF-16LE encoding when hashing strings. To
remain compatible with sketch images created prior to this patch -- which
matters during rolling updates and when reading sketches that have been
written to segments -- we must keep UTF-16LE as the default.

Not currently documented, because I'm not yet sure how best to expose
this functionality to users. I think the first place would be in the SQL
layer: we could have it automatically select UTF-8 or UTF-16LE when
building sketches at query time. We need to be careful about this, though,
because UTF-8 isn't always faster. Sometimes, like for the results of
expressions, UTF-16LE is faster. I expect we will sort this out in
future patches.

* Fix benchmark.

* Fix style issues, improve test coverage.

* Put round back, to make IT updates easier.

* Fix test.

* Fix issue with filtered aggregators and add test.

* Use DS native update(ByteBuffer) method. Improve test coverage.

* Add another suppression.

* Fix ITAutoCompactionTest.

* Update benchmarks.

* Updates.

* Fix conflict.

* Adjustments.",2023-06-30T19:45:55Z
4b2d87336a56eafe6c28fc93f1040e737013671e,Add additional index on task table (#14470),2023-06-29T22:32:43Z
e10e35aa2ca953e65f1337a08800e0a29aaefd44,"Add REGEXP_REPLACE function. (#14460)

* Add REGEXP_REPLACE function.

Replaces all instances of a pattern with a replacement string.

* Fixes.

* Improve test coverage.

* Adjust behavior.",2023-06-29T20:47:57Z
a6cabbe10f02d87f9299490a07dd437a4a559b8c,"SQL: Avoid ""intervals"" for non-table-based datasources. (#14336)

In these other cases, stick to plain ""filter"". This simplifies lots of
logic downstream, and doesn't hurt since we don't have intervals-specific
optimizations outside of tables.

Fixes an issue where we couldn't properly filter on a column from an
external datasource if it was named __time.",2023-06-29T04:27:11Z
c798d3fb2e840df5700615a0fb994f61acbed46e,"Fix flaky SqlStatementResourceTest. (#14498)

Mocks generally have state and should not be static. In particular, the
""Yielder"" included in one of the mocks can only be iterated once, which
made the test suite order-dependent.",2023-06-29T00:12:44Z
fd1a88a6b3f746f88946fce8a71662b63390ce94,".asf.yaml: Add required ""repository"" field. (#14499)

Our new .asf.yaml is not getting picked up because custom_subjects
must include ""repository"".",2023-06-28T22:05:07Z
34c55a0bde701e18fbe064bfe574caedb752ff4f,"SQL: SUBSTRING support for non-literals. (#14480)

* SQL: SUBSTRING support for non-literals.

* Fix AssertionError test.

* Fix header.",2023-06-28T20:43:05Z
c36f12f1d8bf81cf110dd41853627be175816b00,"Support complex variance object inputs for variance SQL agg function (#14463)

* Support complex variance object inputs for variance SQL agg function

* Add test

* Include complexTypeChecker, address PR comments

* Checkstyle, javadoc link",2023-06-28T18:14:19Z
e552f68e774cf8727e6bf504fed9c94fa3a0a849,"Update .asf.yaml to simplify email subjects. (#14494)

Currently, github notification emails to commits@druid.apache.org have
a wide variety of subject lines. This foils email client threading and
makes the firehose of emails hard to follow. This is an attempt,
inspired by the config for plc4x, to make the emails easier to follow.

After this change, it may even make sense to send some to dev@ instead
of commits@.",2023-06-28T17:56:38Z
82fbb31c7c55f01629191e5072683f0fdb87c7db,"Properly read SQL-compatible segments in default-value mode. (#14142)

* Properly read SQL-compatible segments in default-value mode.

Main changes:

1) Dictionary-encoded and front-coded string columns: in default-value
   mode, detect cases where a dictionary has the empty string in it, then
   either combine it with null (if null is present) or replace it with
   null (if null is not present).

2) Numeric nullable columns: in default-value mode, ignore the null
   value bitmap. This causes all null numbers to be read as zeroes.

Testing strategy:

1) Add a mmappedWithSqlCompatibleNulls case to BaseFilterTest that
   writes segments under SQL-compatible mode, and reads them under
   default-value mode.

2) Unit tests for the new wrapper classes (CombineFirstTwoEntriesIndexed,
   CombineFirstTwoValuesColumnarInts, CombineFirstTwoValuesColumnarMultiInts,
   CombineFirstTwoValuesIndexedInts).

* Fix a mistake, use more singlethreadedness.

* WIP

* Tests, improvements.

* Style.

* See Spot bug.

* Remove unused method.

* Address review comments.

1) Read bitmaps even if we don't retain them.
2) Combine StringFrontCodedDictionaryEncodedColumn and ScalarStringDictionaryEncodedColumn.

* Add missing tests.",2023-06-28T17:30:27Z
233233c92d906372cff3144e3d03191ab45f32f4,"Add query context parameter to control limiting select rows (#14476)

* Add query context parameter to control limiting select rows

* Add unit tests

* Address review comments

* Address review comments

* Address review comments",2023-06-28T12:24:24Z
cb3a9d2b5778c568f8a6fad096b95bfd1f36bd21,"Adding Interactive API's for MSQ engine (#14416)

This PR aims to expose a new API called
""@path(""/druid/v2/sql/statements/"")"" which takes the same payload as the current ""/druid/v2/sql"" endpoint and allows users to fetch results in an async manner.",2023-06-28T12:21:58Z
baa64e6d8a71b1d3816dea6144ca4322d0432e53,update hadoop version to 3.3.6 (#14489),2023-06-28T09:33:10Z
fd20bbd30ecee969fd3f38cbe1d45de7d763f531,"Fix another infinite loop and remove Mockito usage (#14493)

* Fix another infinite loop and remove Mockito usage

The ConfigManager objects were `started()` without ever being
stopped.  This scheduled a poll call that never-ended, to make
matters worse, the poll interval was set to 0 ms, making an
infinite poll with 0 sleep, i.e. an infinite loop.

Also introduce test classes and remove usage of mocks

* Checkstyle",2023-06-28T04:49:27Z
0335aaa279d95063c6a172cf3f1ffdf6e46f592b,"Add query results directory and prevent the auto cleaner from cleaning it (#14446)

Adds support for automatic cleaning of a ""query-results"" directory in durable storage. This directory will be cleaned up only if the task id is not known to the overlord. This will allow the storage of query results after the task has finished running.",2023-06-28T04:44:04Z
2cfb00b1de928a48a1c61bc04c10cdbccab33866,Add missing `isNull()` implementation to `FilteredAggregator` (#14465),2023-06-27T23:35:15Z
c78d885b80a913deaf2c99600275df423daa81f0,"Cache parsed expressions and binding analysis in more places. (#14124)

* Cache parsed expressions and binding analysis in more places.

Main changes:

1) Cache parsed and analyzed expressions within PlannerContext for a
   single SQL query.

2) Cache parsed expressions together with input binding analysis using
   a new class AnalyzeExpr.

This speeds up SQL planning, because SQL planning involves parsing
analyzing the same expression strings over and over again.

* Fixes.

* Fix style.

* Fix test.

* Simplify: get rid of AnalyzedExpr, focus on caching.

* Rename parse -> parseExpression.",2023-06-27T20:40:35Z
4bd6bd0d4f61effa392cb5736d392ca12f7f3b40,"Improve CostBalancerStrategy, deprecate cachingCost (#14484)

Changes to `cost` strategy:
- In every `ServerHolder`, track the number of segments per datasource per interval
- Perform cost computations for a given interval just once, and then multiply by a constant
factor to account for the total segment count in that interval
- Do not perform joint cost computations with segments that are outside the compute interval
(± 45 days) for the segment being considered for move
- Remove metrics `segment/cost/*` as they were coordinator killers! Turning on these metrics
(by setting `emitBalancingStats` to true) has often caused the coordinator to be stuck for hours.
Moreover, they are too complicated to decipher and do not provide any meaningful insight into
a Druid cluster.
- Add new simpler metrics `segment/balancer/compute/*` to track cost computation time,
count and errors.

Other changes:
- Remove flaky test from `CostBalancerStrategyTest`.
- Add tests to verify that computed cost has remained unchanged
- Remove usages of mock `BalancerStrategy` from `LoadRuleTest`, `BalanceSegmentsTest`
- Clean up `BalancerStrategy` interface",2023-06-27T07:53:29Z
2f0a43790c22318b9c48ed0f38db7350fef267ef,Make GuavaUtilsTest use less CPU (#14487),2023-06-27T04:45:29Z
6ba10c8b6caf1de5afd782ba70edda406466c892,fix bug with json_value expression array extraction (#14461),2023-06-27T04:02:44Z
f546cd64a9640ed14c9c0f44481678d39530e3b5,"MSQ: Ensure that the allocated segment aligns with the requested granularity (#14475)

Changes:
- Throw an `InsertCannotAllocateSegmentFault` if the allocated segment is not aligned with
the requested granularity.
- Tests to verify new behaviour",2023-06-27T03:55:32Z
903addf7c281099cb3fd510c0ebebfa5d62c5584,Make agg and scalar routines test to depend on specific routine names. (#14482),2023-06-27T03:03:08Z
79bff4bbf7b317ec0d552d595e07b6da29b810b4,"Improvements to `EXPLAIN PLAN` attributes (#14441)

* Updates: use the target table directly, sanitized replace time chunks and clustered by cols.

* Add DruidSqlParserUtil and tests.

* minor refactor

* Use SqlUtil.isLiteral

* Throw ValidationException if CLUSTERED BY column descending order is specified.

- Fails query planning

* Some more tests.

* fixup existing comment

* Update comment

* checkstyle fix: remove unused imports

* Remove InsertCannotOrderByDescendingFault and deprecate the fault in readme.

* minor naming

* move deprecated field to the bottom

* update docs.

* add one more example.

* Collapsible query and result

* checkstyle fixes

* Code cleanup

* order by changes

* conditionally set attributes only for explain queries.

* Cleaner ordinal check.

* Add limit test and update javadoc.

* Commentary and minor adjustments.

* Checkstyle fixes.

* One more checkArg.

* add unexpected kind to exception.",2023-06-27T03:01:11Z
579b93f282aae871cd97fb4066d45f0884019b6c,"API reference refactor (#14372)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-06-26T22:48:54Z
fc08617e9ef2c12dae341c37b74334d7fd690eb7,"[Docs] Clean up druid.processing.intermediaryData.storage.type description (#14431)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-06-26T18:46:54Z
8211379de689d64d60fcaa8aa131b733b186c47d,"MSQ: Change default clusterStatisticsMergeMode to SEQUENTIAL. (#14310)

* MSQ: Change default clusterStatisticsMergeMode to SEQUENTIAL.

This is an undocumented parameter that controls how cluster-by statistics
are merged. In PARALLEL mode, statistics are gathered from workers all
at once. In SEQUENTIAL mode, statistics are gathered time chunk by time
chunk. This improves accuracy for jobs with many time chunks, and reduces
memory usage.

The main downside of SEQUENTIAL is that it can take longer, but in most
situations I've seen, PARALLEL is only really usable in cases where the
sketches are small enough that SEQUENTIAL would also run relatively
quickly. So it seems like SEQUENTIAL is a better default.

* Switch off-test from SEQUENTIAL to PARALLEL.

* Fix sequential merge for situations where there are no time chunks at all.

* Add a couple more tests.",2023-06-26T17:54:28Z
b7434be99e803cba22360a67ebe63948cb0def24,"Add ServiceStatusMonitor to monitor service health (#14443)

* Add OverlordStatusMonitor and CoordinatorStatusMonitor to monitor service leader status

* make the monitor more general

* resolve conflict

* use Supplier pattern to provide metrics

* reformat code and doc

* move service specific tag to dimension

* minor refine

* update doc

* reformat code

* address comments

* remove declared exception

* bind HeartbeatSupplier conditionally in Coordinator",2023-06-26T17:26:37Z
114380749d230a280b416444fb10110e41258322,MSQ: Improve the parse exception errors and the handling of null UTF characters in Strings in Frames  (#14398),2023-06-26T12:44:29Z
1647d5f4a07b76a8bf7cd190c5778ec07e99b3d2,"Limit the subquery results by memory usage (#13952)


Users can now add a guardrail to prevent subquery’s results from exceeding the set number of bytes by setting druid.server.http.maxSubqueryRows in Broker's config or maxSubqueryRows in the query context. This feature is experimental for now and would default back to row-based limiting in case it fails to get the accurate size of the results consumed by the query.",2023-06-26T12:42:28Z
d7c9c2f3671d1e9cefff463eb5cb557e9e882f38,"SqlResults: Coerce arrays to lists for VARCHAR. (#14260)

* SqlResults: Coerce arrays to lists for VARCHAR.

Useful for STRING_TO_MV, which returns VARCHAR at the SQL layer and an
ExprEval with String[] at the native layer.

* Fix style.

* Improve test coverage.

* Remove unnecessary throws.",2023-06-25T16:35:18Z
72cf91fbc0ed9cc2abce91df878ab431678b12f3,"Upgrade Avro to latest version (#14440)

Upgraded Avro to 1.11.1",2023-06-24T09:21:30Z
970288067ac2979dff0ddeed97003cd631ad9ee8,"Fix flaky HttpEmitterConfigTest and ParametrizedUriEmitterConfigTest. (#14481)

Recently, we have seen flakiness in these two tests, apparently due to
computations based on Runtime.getRuntime().maxMemory() differing during
static initialization and in the actual tests. I can't think of a reason
why this would be happening, but anyway, this patch switches the tests to
use the statics instead of recomputing Runtime.getRuntime().maxMemory().",2023-06-23T23:27:11Z
3d19b748fb9fde49f074a8234e797a46bd894d48,"SQL OperatorConversions: Introduce.aggregatorBuilder, allow CAST-as-literal. (#14249)

* SQL OperatorConversions: Introduce.aggregatorBuilder, allow CAST-as-literal.

Four main changes:

1) Provide aggregatorBuilder, a more consistent way of defining the
   SqlAggFunction we need for all of our SQL aggregators. The mechanism
   is analogous to the one we already use for SQL functions
   (OperatorConversions.operatorBuilder).

2) Allow CASTs of constants to be considered as ""literalOperands"". This
   fixes an issue where various of our operators are defined with
   OperandTypes.LITERAL as part of their checkers, which doesn't allow
   casts. However, in these cases we generally _do_ want to allow casts.
   The important piece is that the value must be reducible to a constant,
   not that the SQL text is literally a literal.

3) Update DataSketches SQL aggregators to use the new aggregatorBuilder
   functionality. The main user-visible effect here is [2]: the aggregators
   would now accept, for example, ""CAST(0.99 AS DOUBLE)"" as a literal
   argument. Other aggregators could be updated in a future patch.

4) Rename ""requiredOperands"" to ""requiredOperandCount"", because the
   old name was confusing. (It rhymes with ""literalOperands"" but the
   arguments mean different things.)

* Adjust method calls.",2023-06-23T23:25:04Z
1d6c9657ec362199b80993b68a0bfbe4118ea29a,"Clarify compaction docs. (#14225)

* Clarify compaction docs.

The prior wording made it sound like segmentGranularity, queryGranularity,
and rollup are always required for granularitySpec. They are not required,
but they are strongly recommended. The adjusted wording hopefully does
a better job of making that clear.

* Fix link.

* Wording adjustments.",2023-06-23T22:24:15Z
ddd0fc1b855b2d9645d052561a1cf4e89544ed8a,"S3: Attach SSE key to doesObjectExist calls. (#14290)

* S3: Attach SSE key to doesObjectExist calls.

We did not previously attach the SSE key to the doesObjectExist request,
leading to an inconsistency that may cause problems on ""S3-compatible""
implementations. This patch implements doesObjectExist using similar
logic to the S3 client itself, but calls our implementation of
getObjectMetadata rather than the S3 client's, ensuring the request
is decorated with the SSE key.

* Fix tests.",2023-06-23T22:23:59Z
155fde33ff7cccdb7dfd9ece3b3fd8f800f5948f,"Add metrics to SegmentMetadataCache refresh (#14453)

New metrics:
- `segment/metadatacache/refresh/time`: time taken to refresh segments per datasource
- `segment/metadatacache/refresh/count`: number of segments being refreshed per datasource",2023-06-23T11:21:08Z
b6d6e3b827878c61516c302e36f9c0cf189b6248,"Update start-druid-main.py (#14471)

Quick typo correction.",2023-06-23T08:37:24Z
7e2cf35d7b0485b5fe5abeb021c5811ee812b0c7,"Fix compatibility issue with SqlTaskResource (#14466)

* Fix compatibility issue with SqlTaskResource

The DruidException changes broke the response format
for errors coming back from the SqlTaskResource, so fix those",2023-06-23T08:15:32Z
9b1779734b0bf59b790742b632a1761413482d03,"fix website mvn build (#14458)

changes:
* fix website mvn build
* remove the i18n/en.json file add to gitignore
* add spellcheck to mvn test phase",2023-06-22T19:14:23Z
31b9d5695d8db387f6422a4e334b43dba4cee6e1,"Extend InitializedNullHandlingTest instead of NullHandlingTest (#14467)

NullHandlingTest is an actual test, it shouldn't be used as a base class",2023-06-22T09:31:50Z
90b8f850a5e948776eaa2e3b1ba56206b96e1e57,"Allow empty tiered replicants map for load rules (#14432)

Changes:
- Add property `useDefaultTierForNull` for all load rules. This property determines the default
value of `tieredReplicants` if it is not specified. When true, the default is `_default_tier => 2 replicas`.
When false, the default is empty, i.e. no replicas on any tier.
- Fix validation to allow empty replicants map, so that the segment is used but not loaded anywhere.",2023-06-22T09:14:06Z
f8f2fe8b7b06b7b2f08c5d3ae6c99de0a07bcf31,"Skip tests based on files changed in the PR (#14445)

Our CI system has a lot of tests. And much of this testing is really unnecessary for most of the PRs. This PR adds some checks so we can skip these expensive tests when we know they are not necessary.",2023-06-22T06:57:23Z
1a9aefbb0f6dfe4eff752bf78bf2df221b5944a5,Move from Jupyter notebook to Jupyter Lab and introduce a notebook folder structure (#14419),2023-06-21T16:11:00Z
92a7febacbe71f13cdfc2e8b976cadff57606a0f,"Revert ""Add method to authorize native query using authentication result (#14376)"" (#14452)

This reverts commit 8b212e73d75e08db718a1121da0f201fff723cf2.",2023-06-21T05:12:26Z
1ea9158a50ecb3c6e928c8bbc85bdade9ab80ed6,"Added new SysMonitorOshi v0 using Oshi library (#14359)

Added a new monitor SysMonitorOshi to replace SysMonitor. The new monitor has a wider support for different machine architectures including ARM instances. Please switch to SysMonitorOshi as SysMonitor is now deprecated and will be removed in future releases.",2023-06-20T15:27:58Z
f5cc823d0f8acdf660860fcb75db34e38c039d8f,Handle nulls in DruidCoordinator.getReplicationFactor (#14447),2023-06-20T09:55:57Z
09d6c5a45ed9c737e711403a864903dcbbf22830,"Decouple logical planning and native query generation in SQL planning (#14232)

Add a new planning strategy that explicitly decouples the DAG from building the native query.

With this mode, it is Calcite's job to generate a ""logical DAG"" which is all of the various
DruidProject, DruidFilter, etc. nodes.  We then take those nodes and use them to build a native
query.  The current commit doesn't pass all tests, but it does work for some things and is a
decent starting baseline.",2023-06-19T23:00:40Z
50461c3bd58da60ec3cdfbc9a962d4a594ec7c6a,"Enable smartSegmentLoading on the Coordinator (#13197)

This commit does a complete revamp of the coordinator to address problem areas:
- Stability: Fix several bugs, add capabilities to prioritize and cancel load queue items
- Visibility: Add new metrics, improve logs, revamp `CoordinatorRunStats`
- Configuration: Add dynamic config `smartSegmentLoading` to automatically set
optimal values for all segment loading configs such as `maxSegmentsToMove`,
`replicationThrottleLimit` and `maxSegmentsInNodeLoadingQueue`.

Changed classes:
- Add `StrategicSegmentAssigner` to make assignment decisions for load, replicate and move
- Add `SegmentAction` to distinguish between load, replicate, drop and move operations
- Add `SegmentReplicationStatus` to capture current state of replication of all used segments
- Add `SegmentLoadingConfig` to contain recomputed dynamic config values
- Simplify classes `LoadRule`, `BroadcastRule`
- Simplify the `BalancerStrategy` and `CostBalancerStrategy`
- Add several new methods to `ServerHolder` to track loaded and queued segments
- Refactor `DruidCoordinator`

Impact:
- Enable `smartSegmentLoading` by default. With this enabled, none of the following
dynamic configs need to be set: `maxSegmentsToMove`, `replicationThrottleLimit`,
`maxSegmentsInNodeLoadingQueue`, `useRoundRobinSegmentAssignment`,
`emitBalancingStats` and `replicantLifetime`.
- Coordinator reports richer metrics and produces cleaner and more informative logs
- Coordinator uses an unlimited load queue for all serves, and makes better assignment decisions",2023-06-19T08:57:35Z
cfd07a95b7d592a333ca51597e9bbdd68e18a88a,"Errors take 3 (#14004)

Introduce DruidException, an exception whose goal in life is to be delivered to a user.

DruidException itself has javadoc on it to describe how it should be used.  This commit both introduces the Exception and adjusts some of the places that are generating exceptions to generate DruidException objects instead, as a way to show how the Exception should be used.

This work was a 3rd iteration on top of work that was started by Paul Rogers.  I don't know if his name will survive the squash-and-merge, so I'm calling it out here and thanking him for starting on this.",2023-06-19T08:11:13Z
2b676ac7f8e6bafd8369c4dc5c1d800a25c2e7ab,"Quieter KafkaSupervisors in all bundled log4j2.xml. (#14444)

Follow-up to #13392, which added this to a single log4j2.xml.",2023-06-19T06:34:11Z
128133fadcae97f9c45f9e529c229bef2cc96614,"Add column replication_factor column to sys.segments table (#14403)

Description:
Druid allows a configuration of load rules that may cause a used segment to not be loaded
on any historical. This status is not tracked in the sys.segments table on the broker, which
makes it difficult to determine if the unavailability of a segment is expected and if we should
not wait for it to be loaded on a server after ingestion has finished.

Changes:
- Track replication factor in `SegmentReplicantLookup` during evaluation of load rules
- Update API `/druid/coordinator/v1metadata/segments` to return replication factor
- Add column `replication_factor` to the sys.segments virtual table and populate it in
`MetadataSegmentView`
- If this column is 0, the segment is not assigned to any historical and will not be loaded.",2023-06-18T04:32:21Z
bd07c3dd43428608678e337c7935f237a64f533d,"Don't need to double synchronize on simple map operations (#14435)

* Don't need to double syncronize on simple map operations

* remove lock",2023-06-18T00:30:37Z
04fb75719e7dd76d051dbd4cf8f9c2712b227793,"Fail query planning if a `CLUSTERED BY` column contains descending order (#14436)

* Throw ValidationException if CLUSTERED BY column descending order is specified.

- Fails query planning

* Some more tests.

* fixup existing comment

* Update comment

* checkstyle fix: remove unused imports

* Remove InsertCannotOrderByDescendingFault and deprecate the fault in readme.

* move deprecated field to the bottom",2023-06-16T22:10:12Z
64af9bfe5bfcbe81e865c7c2bb3b898297b1d76c,"Add groupId to metrics (#14402)

* Add group id as a dimension

* Revert changes

* Add to forking task runner

* Add missing metrics

* Fix indenting

* revert metrics

* Fix indentation",2023-06-16T16:28:16Z
359bd63cc99a543e65e9814fdc39718a630316e3,"allow expression ""best effort"" type determination to better handle mixed type arrays (#14438)",2023-06-16T07:02:43Z
85656a467c66cffbe616dfa5e3646a0ac82b9afc,"MSQ: Load broadcast tables on workers. (#14437)

They were not previously loaded because supportsQueries was false.
This patch sets supportsQueries to true, and clarifies in Task
javadocs that supportsQueries can be true for tasks that aren't
directly queryable over HTTP.",2023-06-16T06:32:20Z
5d76d0ea7468216c2dd64060f2382c85bbd6b717,"Fix segment/deleted/count metric not being emitted  (#14433)

* Fix segment/deleted/count metric

* Fix segment/deleted/count metric

* Fix segment/deleted/count metric",2023-06-15T21:08:19Z
4935f2470a9303e228a274949103ac38f4612c45,"Limit results generated by SELECT queries in MSQ (#14370)

* Limit select results in MSQ

* reduce number of files in test

* add truncated flag

* avoid materializing select results to list, use iterable instead

* javadocs",2023-06-15T07:43:11Z
ff5ae4db6c4330b164ad3550c7c9c976699e4ff5,"fix kafka input format reader schema discovery and partial schema discovery (#14421)

* fix kafka input format reader schema discovery and partial schema discovery to actually work right, by re-using dimension filtering logic of MapInputRowParser",2023-06-15T07:11:04Z
ca116cf88639cbe8f4705d43b4730dc550272111,adjust broker parallel merge to help managed blocking be more well behaved (#14427),2023-06-15T07:10:31Z
5314db9f85d9768cc881a054dea33a8616fdedfa,Adding the file mapper to handle v2 buffer deserialization (#14429),2023-06-15T02:41:44Z
e426d370ea974546fdb7fe6f43e44fba015181d7,"Start with solo accumulator and empty partition (#14426)

* Starting parallel merge with solo accumulator and empty partitions

* shutshown pool in test",2023-06-14T23:20:48Z
f6169d437be85d13e402984d1b05b19a99d73e4c,"use the latest datasketches-java-4.1.0 (#14430)

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2023-06-14T23:03:56Z
76e70654acdce8213bcf66a9943dfb1374fc329f,Fix issues when startup timeout is hit (#14425),2023-06-14T18:49:55Z
6fd28fc185152deca659168be6631103b8208544,"Web console: split the Ingestion view into two views: Supervisors and Tasks (#14395)

* init split

* don't crash if unable to get running tasks

* update snapshots

* push down state into call

* googies

* simplify

* update e2e tests

* feedback fixes

* update e2e tests

* better icons

* fix test

* adjust colors",2023-06-14T17:42:30Z
8454cc619a846c099de224f6185eb01abe658193,"auto columns fixes (#14422)

changes:
* auto columns no longer participate in generic 'null column' handling, this was a mistake to try to support and caused ingestion failures due to mismatched ColumnFormat, and will be replaced in the future with nested common format constant column functionality (not in this PR)
* fix bugs with auto columns which contain empty objects, empty arrays, or primitive types mixed with either of these empty constructs
* fix bug with bound filter when upper is null equivalent but is strict",2023-06-14T15:57:06Z
be5a6593a946442a57ce9bcd87d977c41b954d33,"Reset `RuntimeInfo` to fix flaky test `ParametrizedUriEmitterConfigTest`. (#14405)

* Add injector so JVM settings are correctly set up and bound for the test.

* Add VisibleForTesting IDE annotation.

* spacing",2023-06-14T01:07:51Z
b8495d45a1dfb398e16dd8fee42984b39e5fb401,"Expose Druid functions in `INFORMATION_SCHEMA.ROUTINES` table. (#14378)

* Add INFORMATION_SCHEMA.ROUTINES to expose Druid operators and functions.

* checkstyle

* remove IS_DETERMISITIC.

* test

* cleanup test

* remove logs and simplify

* fixup unit test

* Add docs for INFORMATION_SCHEMA.ROUTINES table.

* Update test and add another SQL query.

* add stuff to .spelling and checkstyle fix.

* Add more tests for custom operators.

* checkstyle and comment.

* Some naming cleanup.

* Add FUNCTION_ID

* The different Calcite function syntax enums get translated to FUNCTION

* Update docs.

* Cleanup markdown table.

* fixup test.

* fixup intellij inspection

* Review comment: nullable column; add a function to determine function syntax.

* More tests; add non-function syntax operators.

* More unit tests. Also add a separate test for DruidOperatorTable.

* actually just validate non-zero count.

* switch up the order

* checkstyle fixes.",2023-06-13T19:44:04Z
61120dc49a2c7a94f7421c9cbf68bfe88844131f,fix Kafka input format to throw ParseException if timestamp is missing (#14413),2023-06-13T16:00:11Z
66c3cc139190ed74e1bcc5fdccfd2370ebc9e3ea,"Handle unparseable SupervisorSpec in metadata store (#14382)

Changes:
- Skip a supervisor spec entry which cannot be deserialised into a `SupervisorSpec` object.
- Log an error for the unparseable spec",2023-06-13T02:32:01Z
1c76ebad3b63069f8c3e5b422b945212badab196,"Minor doc updates. (#14409)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-06-12T22:24:48Z
326f2c5020d4a9a02128efc160b49fbc935fc6f2,"Add more statement attributes to explain plan result. (#14391)

This PR adds the following to the ATTRIBUTES column in the explain plan output:
- partitionedBy
- clusteredBy
- replaceTimeChunks

This PR leverages the work done in #14074, which added a new column ATTRIBUTES
to encapsulate all the statement-related attributes.",2023-06-12T13:48:02Z
8b212e73d75e08db718a1121da0f201fff723cf2,Add method to authorize native query using authentication result (#14376),2023-06-12T05:36:00Z
b5f45832b1a151814589c5ccf308137d6802f122,"Add 'Flaky test' issue template (#14394)

* Add 'Flaky test' issue template

* Update flaky_test.md",2023-06-12T02:02:38Z
267cbac6ff6bac1001f72f517f1d27ded9c4ca75,"Add logs for deleting files using storage connector (#14350)

* Add logs for deleting files using storage connector

* Address review comments

* Update log message format",2023-06-11T15:54:30Z
6e158704cb058e7c50db025eef1afc796ca80780,"Do not retry INSERT task into metadata if max_allowed_packet limit is violated (#14271)

Changes
- Add a `DruidException` which contains a user-facing error message, HTTP response code
- Make `EntryExistsException` extend `DruidException`
- If metadata store max_allowed_packet limit is violated while inserting a new task, throw
`DruidException` with response code 400 (bad request) to prevent retries
- Add `SQLMetadataConnector.isRootCausePacketTooBigException` with impl for MySQL",2023-06-10T06:45:44Z
31c386ee1bb7f87a661e8f9ff65609c1e4590fd4,Fixup typo and java code snippets in JDBC docs. (#14399),2023-06-09T19:39:21Z
4d146ca87dfe1b44010b35efb30b091c68e303f7,"Upgrades the React dependency to v18 (#14380)

* Use react 18

* Remove deprecated usage of Toaster

* Make AppToaster lazy

* Update testing-library, snapshots

* Licenses

* Document lazy-init, add license header",2023-06-09T19:09:13Z
23c2dcaf8d294b4cba9d225cae41cb9148131fd6,Add NullHandling module initialization for `LookupDimensionSpecTest` (#14393),2023-06-09T03:37:32Z
5eb255656606227f0412a42d2ae12a590e432a06,Add workflow links to README to jump into detailed pages (#14383),2023-06-09T03:01:50Z
87149d5975febdffe0509dd095dfb02f9deedfb7,"Remove AbstractIndex (#14388)

The class apparently only exists to add a toString()
method to Indexes, which basically just crashes any debugger
on any meaningfully sized index.  It's a pointless
abstract class that basically only causes pain.",2023-06-09T02:52:16Z
ff577a69a584008c4d31fce37da0d4fc2f291ae4,"doc: escape tags in markdown in prepration for docusaurus2 (#14379)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-06-08T18:26:18Z
12e8fa5c97a37ca7636bafda17a0cbb85ff0747f,"Prevent coordinator from getting stuck if leadership changes during coordinator run (#14385)

Changes:
- Add a timeout of 1 minute to resultFuture.get() in `CostBalancerStrategy.chooseBestServer`.
1 minute is the typical time for a full coordinator run and is more than enough time for cost
computations of a single segment.
- Raise an alert if an exception is encountered while computing costs and if the executor has
not been shutdown. This is because a shutdown is intentional and does not require an alert.",2023-06-08T09:59:20Z
6a4cbab4b8a55efa482aacc0399353ac5589e5e1,"Upgrade parquet-mr version (#14070)

* Upgrade parquet version

* Move parquet version to hadoop3

* Fix license

* Exclude audience annotations",2023-06-07T15:54:54Z
6370769cbf7e1d5f7f7c55e7963babd03e47a69d,"Fix documentation for druid.query.scheduler.numThreads. (#14381)

* Fix documentation for druid.query.scheduler.numThreads.",2023-06-07T09:18:08Z
01b22ca0221b2bfa75d98a2605f97fe130dfac15,"Hll Sketch and Theta sketch estimate can now be used as an expression (#14312)

* Hll Sketch estimate can now be used as an expression
* Theta sketch estimate now can be used as an expression",2023-06-07T03:14:25Z
2d258a95ad7e63191ae4d40a6d61f045df9f09fa,"Fix `EARLIEST_BY`/`LATEST_BY` signature and include function name in signature. (#14352)

* Fix EarliestLatestBySqlAggregator signature; Include function name for all signatures.

* Single quote function signatures, space between args and remove \n.

* fixup UT assertion",2023-06-06T16:41:05Z
5da601c47e8ec49a1413691acde7f56f16c27127,fix npe (#14369),2023-06-06T11:31:42Z
cfc2a8d2869dd9899d483f758d4edbf44cb59d85,"Switch to @blueprint/datetime2 (#14371)

* Bump blueprint packages

* Switch to datetime2 components

* Update licenses

* Update snapshots",2023-06-06T05:18:05Z
a0d49baad6a23f58b6591f78358baf2887339364,"MSQ: Fix issue with rollup ingestion and aggregators with multiple names. (#14367)

The same aggregator can have two output names for a SQL like:

  INSERT INTO foo
  SELECT x, COUNT(*) AS y, COUNT(*) AS z
  FROM t
  GROUP BY 1
  PARTITIONED BY ALL

In this case, the SQL planner will create a query with a single ""count""
aggregator mapped to output names ""y"" and ""z"". The prior MSQ code did
not properly handle this case, instead throwing an error like:

  Expected single output for query column[a0] but got [[1, 2]]",2023-06-06T04:58:41Z
c14e54cf934a57dccd71382cd7c64d24dfab83c1,Remove context params from class component ctors (#14366),2023-06-05T18:15:28Z
49c056af17bcec8fec7d84f4bdd6eddd2e6726f6,"docs: add basic contributor guide for docs (#14365)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-06-05T17:53:17Z
8e4f003f02174a3329e674e971a29ea9e9dd4bac,"Fix flaky Revised ITs failures on GHA runners (#14348)

* Fix read timed out failures and remove containers before test

* remove containers before loading images

* add labels to IT docker containers, download stable minio docker image release instead of latest",2023-06-05T13:28:54Z
139156cf6bd7cf28978b2aae6489ebfe6de020f7,Reduce the spam in broker logs (#14368),2023-06-05T13:26:34Z
7fd215b2e76287e6063928a9e3267f842553c577,Document storeCompactionState (#14354),2023-06-02T18:09:04Z
4ff6026d30e4da53dc0e37bc2279d9e030773787,"Adding SegmentMetadataEvent and publishing them via KafkaEmitter (#14281)

In this PR, we are enhancing KafkaEmitter, to emit metadata about published segments (SegmentMetadataEvent) into a Kafka topic. This segment metadata information that gets published into Kafka, can be used by any other downstream services to query Druid intelligently based on the segments published. The segment metadata gets published into kafka topic in json string format similar to other events.",2023-06-02T15:58:26Z
45014bd5b458851e2a8601101a4fa818cebb3004,"Handle all types of exceptions when initializing input source in sampler API (#14355)

The sampler API returns a `400 bad request` response if it encounters a `SamplerException`.
Otherwise, it returns a generic `500 Internal server error` response, with the message
""The RuntimeException could not be mapped to a response, re-throwing to the HTTP container"".

This commit updates `RecordSupplierInputSource` to handle all types of exceptions instead of just
`InterruptedException`and wrap them in a `SamplerException` so that the actual error is
propagated back to the user.",2023-06-02T14:13:53Z
b482fda503be3ebfe9c537c24efb10cf2fa3efb0,Ignore misc.xml (#14362),2023-06-02T06:30:52Z
55effd92cfe80c23e1005e70a86da585764a7771,"Docs: Typo and language cleanup in Kinesis ingestion docs (#14356)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-06-02T02:48:41Z
70952c097724aad11a7d5fa9d71a30fb605207b9,"docs: add sql array functions to nav (#14361)

* docs: add sql array functions to nav

* fix typo

* add sql array functions to list

* fix spelling errors",2023-06-01T23:45:27Z
04a82da63d12d400f37d759450851e1034b9c406,"Input source security fixes (#14266)

It was found that several supported tasks / input sources did not have implementations for the methods used by the input source security feature, causing these tasks and input sources to fail when used with this feature. This pr adds the needed missing implementations. Also securing the sampling endpoint with input source security, when enabled.",2023-06-01T23:37:19Z
e75fb8e8e374f3d66e0f969c62216f64ea2d367e,"Account for data format and compression in MSQ auto taskAssignment (#14307)

### Description

This change allows for consideration of the input format and compression  when computing how to split the input files among available tasks, in MSQ ingestion, when considering the value of the  `maxInputBytesPerWorker` query context parameter. This query parameter allows users to control the maximum number of bytes, with granularity of input file / object, that ingestion tasks will be assigned to ingest. With this change, this context parameter now denotes the estimated weighted size in bytes of the input to split on, with consideration for input format and compression format, rather than the actual file size, reported by the file system.  We assume uncompressed newline delimited json as a baseline, with scaling factor of `1`. This means that when computing the byte weight that a file has towards the input splitting, we take the file size as is, if uncompressed json, 1:1. It was found during testing that gzip compressed json, and parquet, has scale factors of `4` and `8` respectively, meaning that each byte of data is weighted 4x and 8x respectively, when computing input splits. This weighted byte scaling is only considered for MSQ ingestion that uses either LocalInputSource or CloudObjectInputSource at the moment. The default value of the `maxInputBytesPerWorker` query context parameter has been updated from 10 GiB, to 512 MiB",2023-06-01T19:53:49Z
d60290e76df6eb350cad0880750f258c9f9aa708,Remove extraneous apostrophe in the native batch docs (#14358),2023-06-01T15:57:41Z
2da84de87fb9c31fb351c0ef8cc6f9b3c0bd1c9a,docs: remove the note about segments (#14161),2023-05-31T23:37:19Z
2012a6bd8e2102aa03328381331f64fb7a9e5d39,Docs: fix broken link to Python API jupyter notebook (#14332),2023-05-31T02:42:27Z
37cb76d54519db1d059d11b3524c43cd7cd10e52,fixes dataSourceName varaible ref (#14340),2023-05-30T20:15:27Z
c244c3de5325e479a86c302e5dc8bbdd881c1e74,"fix hdfs initialization issue (#14276)

* fix hdfs initialization issue

* add PR

* remove conf settings

* Improve comments

* move hdfs storage validation to start handler

* restore exception",2023-05-30T19:41:54Z
70c06fc0e129a2a9fc684141bcd8671f4b70f3c3,"Advise against using WEEK granularity for Native Batch and MSQ (#14341)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-05-30T18:40:12Z
2086ff88bcdbfdba507d52d78bd3c7605beab280,"Add logging for task stop operations (#14192)

Log more details when task cannot be stopped for various reasons",2023-05-30T13:20:52Z
1ac5544da7867bce784c9aeec3a67879a6b2f100,Updated default value of maxTotalRows to reflect the value in the code (#14298),2023-05-30T09:11:06Z
5fd3e01ef013fff6316344709c7ba524b8320132,"More specific exclusions in the `examples` folder. (#14347)

This PR changes how we skip java UT and ITs with changes in the examples folder. After this change, any Markdown files within the examples folder and jupyter-notebooks directory will be excluded. The rationale behind these more specific exclusions is that some ITs use json files checked in examples, so we want to trigger the full workflow for all other changes.",2023-05-30T06:31:45Z
d4cacebf79c9795aa36b5e0776df44ed735b93d0,"Add tests for CostBalancerStrategy (#14230)

Changes:
- `CostBalancerStrategyTest`
  - Focus on verification of cost computations rather than choosing servers in this test
  - Add new tests `testComputeCost` and `testJointSegmentsCost`
  - Add tests to demonstrate that with a long enough interval gap, all costs become negligible
  - Retain `testIntervalCost` and `testIntervalCostAdditivity`
  - Remove redundant tests such as `testStrategyMultiThreaded`, `testStrategySingleThreaded`as
verification of this behaviour is better suited to `BalancingStrategiesTest`.
- `CostBalancerStrategyBenchmark`
  - Remove usage of static method from `CostBalancerStrategyTest`
  - Explicitly setup cluster and segments to use for benchmarking",2023-05-30T03:22:56Z
8091c6a547eaa812a0ff09bbb0c49f16f9ebf19c,"Update default values in CoordinatorDynamicConfig (#14269)

The defaults of the following config values in the `CoordinatorDynamicConfig` are being updated.

1. `maxSegmentsInNodeLoadingQueue = 500` (previous = 100)
2. `replicationThrottleLimit = 500` (previous = 10)
Rationale: With round-robin segment assignment now being the default assignment technique,
the Coordinator can assign a large number of under-replicated/unavailable segments very quickly,
without getting stuck in `RunRules` duty due to very slow strategy-based cost computations.

3. `maxSegmentsToMove = 100` (previous = 5)
Rationale: A very low value (say 5) is ineffective in balancing especially if there are many segments
to balance. A very large value can cause excessive moves, which has these disadvantages:
- Load of moving segments competing with load of unavailable/under-replicated segments
- Unnecessary network costs due to constant download and delete of segments

These defaults will be revisited after #13197 is merged.",2023-05-30T03:21:33Z
0e51c2702a20a1c9318446a35db01514563abbf0,update operations per run (#14325),2023-05-29T08:35:11Z
914c006b8e8a4354989170ae72e9578691158966,increase middlemanager heap server size in tests (#14345),2023-05-29T05:15:34Z
4131c0df133a425ea74b121cecc6c24de66784de,"use the latest datasketches-java-4.0.0 (#14334)

* use the latest datasketches-java-4.0.0

* updated versions of datasketches

* adjusted expectation

* fixed the expectations

---------

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2023-05-28T05:19:18Z
8d256e35b4b67abafd9b923c973bbdb6d68ead2e,MSQ ignores tombstone segments for downloads. (#14342),2023-05-27T08:51:52Z
0cde3a8b522fbd5c09222069ac51689a614b8ec2,"Fix regression in batch segment allocation (#14337)

* Improve batch segment allocation logs

* Fix batch seg alloc regression

* Fix logs

* Fix logs

* Fix tests and logs",2023-05-26T05:34:54Z
1873fca6c73f816db45482eda3e59abc6fd4e8f5,"Web console: update DQT to latest version and fix bigint crash (#14318)

* update dqt

* don't crash on bigint values

* better submit experiance

* bump to an even version",2023-05-25T00:40:45Z
88831b1dd0fd2afef28aa2d90b91e4464aebd92f,Docs: Updates docker compose to turn off kraft which causes errors (#14335),2023-05-24T16:33:32Z
4096f51f0b29b3b4787ac12aa1a7493ac216c6c5,"add configurable ColumnTypeMergePolicy to SegmentMetadataCache (#14319)

This PR adds a new interface to control how SegmentMetadataCache chooses ColumnType when faced with differences between segments for SQL schemas which are computed, exposed as druid.sql.planner.metadataColumnTypeMergePolicy and adds a new 'least restrictive type' mode to allow choosing the type that data across all segments can best be coerced into and sets this as the default behavior.

This is a behavior change around when segment driven schema migrations take effect for the SQL schema. With latestInterval, the SQL schema will be updated as soon as the first job with the new schema has published segments, while using leastRestrictive, the schema will only be updated once all segments are reindexed to the new type. The benefit of leastRestrictive is that it eliminates a bunch of type coercion errors that can happen in SQL when types are varied across segments with latestInterval because the newest type is not able to correctly represent older data, such as if the segments have a mix of ARRAY and number types, or any other combinations that lead to odd query plans.",2023-05-24T15:02:51Z
22ba457d2998caafd9d52cdb781786b385a36016,"Expr getCacheKey now delegates to children (#14287)

* Expr getCacheKey now delegates to children

* Removed the LOOKUP_EXPR_CACHE_KEY as we do not need it

* Adding an unit test

* Update processing/src/main/java/org/apache/druid/math/expr/Expr.java

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

---------

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2023-05-23T21:49:38Z
338bdb35ea19b495bc6eb587ab99978edb16ce46,"Return `RESOURCES` in `EXPLAIN PLAN` as an ordered collection (#14323)

* Make resources an ordered collection so it's deterministic.

* test cleanup

* fixup docs.

* Replace deprecated ObjectNode#put() calls with ObjectNode#set().",2023-05-23T05:55:00Z
a5e04d95a47a78dfac54954c1e47727400991797,"Add `TYPE_NAME` to the complex serde classes and replace the hardcoded names. (#14317)

* Add TYPE_NAME to the serde classes and reuse them instead of hardcoded strings.

* Static check fixes.",2023-05-23T05:54:47Z
6b3a6113c4f6f9e460152b9319b42e7c9d1faaa7,Doc: List supported values for Kafka `headerFormat` (#14316),2023-05-22T22:41:07Z
3f6610aaf1a7cd3c263e535d7550e5271bc21abc,"fixed wording in OSS query laning doc (#14324)

Co-authored-by: Nhi Pham <nhipham@Nhi-Pham.local>",2023-05-22T18:58:17Z
cb65135b9925711d200716a9e27a3b638db2002f,"Fix log streaming (#14285)

* Fix log streaming

* Add watch log

* Add unit tests

* long running client

* singleton client

* Remove accidental close",2023-05-22T18:19:53Z
36a084e0212a6934f580a45ae77e8b4e6e47ae86,"Fix GHA workflows naming & Run ITs if UTs fail on coverage (#14158)

Currently, there is no way to run ITs if unit-tests fail on coverage. This PR allows Revised, Standard ITs to run even when unit-tests fail on coverage errors, still failing the workflow. This PR also fixes existing GHA workflow naming.",2023-05-22T06:14:34Z
9faf9ecf2081422bd2e8f46d795a1a2a01bfa7a7,"docs: add line about write datasource perm for overlord api (#14114)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2023-05-19T21:56:24Z
269137c6828c5a2a4f7308c33d239c2c019c87b7,"Update Ingestion section (#14023)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Victoria Lim <lim.t.victoria@gmail.com>",2023-05-19T16:42:27Z
7f66fd049b25d2524bfc16527a620037ff110b25,don't show merged stats until needed (#14311),2023-05-19T03:32:58Z
e9fed1445f2124b94fdba5976a90b7b52cd5baff,"Revert PreResponseAuthorizationCheckFilter (#13813)

Make it permissive like it used to be again so that we
ensure that validation errors make it out.",2023-05-19T01:16:43Z
51f722b7f1a5f30430c7d56d65936e21dfa188e1,"Fix labels (#14282)

* Fix labels

* move to a util function

* style

* PR comments

* rename class",2023-05-18T18:51:58Z
058eb99a8b94535173ea98df437c596c3825a0e9,Docs: Update Docker profile and fix method call in `druidapi` tutorial (#14308),2023-05-18T14:29:02Z
c546df3866bff286e30c2c922075a9dfc6d3a318,"Add `examples/` to CI UT/IT ignore (#14306)

* Skip UT/IT on examples only changes.",2023-05-18T00:46:25Z
7400ed3c9325e9237c52ea12a5fcf490e603b249,"Fixup data deletion tutorial docs (#14283)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-05-18T00:05:35Z
c84c174caafae9cf8df2735fe7fa08e3f55abf5b,update tutorials to use clarify druid host location for Docker Compose + Druid version (#14295),2023-05-17T22:41:02Z
cb10bb97835eac8962bb9b296b471b6cd6a3e67c,add website to java ci ignore (#14303),2023-05-17T21:50:52Z
26ff01a0fd855eac8df29b0a3b2f18aff6e93148,"streamline release process docs (#14268)

remove release:prepare without skipping tests because there is no good reason to run tests locally in this step inline with creating a tag.",2023-05-17T20:57:37Z
1d1454b22cac402f4867df2502df75df0d7261e3,"update NOTICE year, update kafka notice in licenses.yaml (#14299)",2023-05-17T11:32:19Z
d92b9fbfac977cd995d4d0ef9da6f3944f387fb1,"more resilient segment metadata, dont parallel merge internal segment metadata queries (#14296)",2023-05-17T11:12:55Z
1dd20773ae4a3b8bb998309c5751dc8bbe5fa6ec,remove website node-scss dep (#14275),2023-05-17T11:10:46Z
ceda1e98b91c50f96e112ecb275a7acf3955cfb8,"docs: add docs for schema auto-discovery (#14065)

* wip schemaless

* wip

* more cleanup

* update tuningconfig example

* updates based on feedback from clint

* remove errant comma

* update dimension object to include auto

* update to include string schemaless way

* fix spelling errors

* updates for type-aware and string-based changes

* Update docs/ingestion/schema-design.md

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* update spelling file

* Update docs/ingestion/schema-design.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* copyedits

* fix anchor

---------

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2023-05-17T08:36:02Z
b038a11280b4f9dfed8bb26f876b6654953c47e2,fix issues with handling arrays with all null elements and arrays of booleans in strict mode (#14297),2023-05-17T08:33:44Z
bbbb031057bf8e258eebf125ff4f0ea602b8daec,"Do not cancel old GHA workflows triggered on branch commits (#14279)

* group and limit workflows only on PRs and not on branch commits

* also apply to Static Checks CI",2023-05-16T06:43:08Z
96a3c00754223626ff1df3799522277a086ec0a1,"Fixing an issue with filtering on a single dimension by converting In… (#14277)

* Fixing an issue with filtering on a single dimension by converting In filter to a selector filter as needed with Filters.toFilter

* Adding a test so that any future refactoring does not break this behavior

* Made comment a bit more meaningful",2023-05-16T03:10:36Z
e8ef31fe92a7da18396258b831eeaa4f142006af,"Fix condition for timeout in worker task launcher (#14270)

* Fix condition for timeout in worker task launcher",2023-05-16T03:00:00Z
66d4ea014c1372e0a303fa0f9a4f3b16dac921d3,Docs: Tutorial for streaming ingestion using Kafka + Docker file to use with Jupyter tutorials (#13984),2023-05-15T22:20:52Z
c4aa98953b536b2b038b1f19809e3905ab497cbd,202304-docs-removeDF (#14132),2023-05-15T22:08:57Z
3c0983c8e9e3b5286bf0f22da0d3a3cac6708e36,"Extend the IT framework to allow tests in extensions (#13877)

The ""new"" IT framework provides a convenient way to package and run integration tests (ITs), but only for core modules. We have a use case to run an IT for a contrib extension: the proposed gRPC query extension. This PR provides the IT framework functionality to allow non-core ITs.",2023-05-15T14:59:51Z
10bce22e680f590e8c07fff980fcbe6c7fb0ea33,"Configure maxBytesPerWorker directly instead of using StageDefinition (#14257)

* Configure maxBytesPerWorker directly instead of using StageDefinition",2023-05-15T11:21:57Z
e9913abbbfed82c11d1f876f30f24a768267ab48,"Add new lock types: APPEND and REPLACE (#14258)

* Add new lock types: APPEND and REPLACE",2023-05-15T05:38:32Z
f9861808bc7e1ce4d7358260e024540d13015aad,"Be able to load segments on Peons (#14239)

* Be able to load segments on Peons

This change introduces a new config on WorkerConfig
that indicates how many bytes of each storage
location to use for storage of a task.  Said config
is divided up amongst the locations and slots
and then used to set TaskConfig.tmpStorageBytesPerTask

The Peons use their local task dir and
tmpStorageBytesPerTask as their StorageLocations for
the SegmentManager such that they can accept broadcast
segments.",2023-05-12T23:51:00Z
8bda7297e15c21581cab1395d6e25cdc085c3c48,doc: fix unnest datasource syntax (#14272),2023-05-12T20:05:27Z
9e0708f5e6d8d2ab43535030937b7030f56088e1,"update heap size of coordinator, overlord services in docker IT environment (#14214)",2023-05-12T17:49:48Z
ba11b3d462220c9470f434242e657cc7ce877d9c,"Refactor: Add OverlordDuty to replace OverlordHelper and align with CoordinatorDuty (#14235)

Changes:
- Replace `OverlordHelper` with `OverlordDuty` to align with `CoordinatorDuty`
  - Each duty has a `run()` method and defines a `Schedule` with an initial delay and period.
  - Update existing duties `TaskLogAutoCleaner` and `DurableStorageCleaner`
- Add utility class `Configs`
- Update log, error messages and javadocs
- Other minor style improvements",2023-05-12T17:09:56Z
6254658f619a42c4ab0af1d7e61e861bd67d2083,docs: fix links (#14111),2023-05-12T16:59:16Z
58dcbf9399ff2705ba51f9481e02c9ce7fc82df9,"queue tasks in kubernetes task runner if capacity is fully utilized (#14156)

* queue tasks if all slots in use

* Declare hamcrest-core dependency

* Use AtomicBoolean for shutdown requested

* Use AtomicReference for peon lifecycle state

* fix uninitialized read error

* fix indentations

* Make tasks protected

* fix KubernetesTaskRunnerConfig deserialization

* ensure k8s task runner max capacity is Integer.MAX_VALUE

* set job duration as task status duration

* Address pr comments

---------

Co-authored-by: George Shiqi Wu <george.wu@imply.io>",2023-05-12T15:41:44Z
9eebeead4472a44f31cdc2b9fd48919f89446ea2,Tune stale bot to pick older issues first (#14267),2023-05-12T06:15:29Z
8ef99f091a730bd525c94d5b36a9d663afcf4475,"Fix jdk setup in GHA (#14091)

Instead of downloading jdk everytime we run CI, we're using inbuilt temurin jdk distributions 8, 11, 17 by settiing JAVA_HOME variable. This is not working as expected since we were not setting this as global environment variable as a result all CI builds are running on jdk11. This PR fixes the issue.",2023-05-12T05:06:59Z
eae9e07ea933fc7f74ec658e0f8074add079085e,suppress CVE-2021-40331 since it applies to ranger-hive-plugin which afaict we do not use (#14261),2023-05-12T04:58:47Z
9875090bee7f98e2467c0b2fa45ca3a3121b90c8,fix segment metadata queries for auto ingested columns that had all null values (#14262),2023-05-12T03:58:06Z
47a70d03e8c6bd1a5232a98519d2a7dec8a7b6ac,"Docs: Minor rephrase in indexing-service.md (#14231)

* Fix language in indexing-service

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2023-05-12T02:52:02Z
cc37987dff0607363183ea01e8495b6f50f0a29b,docs: copyedits for MSQ join algos (#14012),2023-05-11T21:21:09Z
f128b9b666abe096c64058db374c974cc16085b3,Updates to filter processing for inner query in Joins (#14237),2023-05-11T11:51:41Z
a58cebe4917dadc65ecd3143668288229a57d22a,add array_to_mv function to convert arrays into mvds to assist with migration from mvds to arrays (#14236),2023-05-11T11:43:28Z
64e6283eca37e3197224da23bc71a5d12a190122,"Do not allow retention rules to be null (#14223)

Changes:
- Do not allow retention rules for any datasource or cluster to be null
- Allow empty rules at the datasource level but not at the cluster level
- Add validation to ensure that `druid.manager.rules.defaultRule` is always set correctly
- Minor style refactors",2023-05-11T09:03:56Z
47e48ee65710719c6af1605fedf7a5063c83cc38,Remove incorrect optimization (#14246),2023-05-11T07:54:41Z
e833a4700d0a85edd87bbf5ec82b9e650012a54f,suppress hadoop3 cve that seem not applicable to us (#14252),2023-05-11T06:08:05Z
f3ff36a004e78f9fed59e9388b893616be884f82,"Move the stale bot to a GHA action (#14238)

Move the stale bot to a GHA action",2023-05-11T06:01:28Z
aaaff747409729ce11dc81e2de75eb6faa0fed76,"fix npe regression in json_value when filtering non-existent paths (#14250)

* fix npe regression in json_value when filtering non-existent paths

* more coverage",2023-05-11T05:39:22Z
6db11bfc60b469ae5caaaf7e23b2e4fa5ab1d18e,suppress some cves and fix javadoc build when using java 17 (#14241),2023-05-10T22:47:10Z
625c4745b120e996494ef364abc5a8f58a00f98f,"add context flag ""useAutoColumnSchemas"" to use new auto types for MSQ segment generation (#14175)",2023-05-10T22:37:14Z
161d12eb445e3f2123020a7d82beea9cd5bb7182,"Fix unit tests for java 17 (#14207)

Fix a unit test that fails in java 17",2023-05-09T14:32:31Z
bd0080c4cec6067def6928e8f00444a335de01e6,Update default values in docs (#14233),2023-05-09T13:43:51Z
152e9375e2c120e141a34b13c5a386d231952d82,"update documentation about multiValueHandling (#14197)

* update documentation about multiValueHandling

* Update docs/ingestion/ingestion-spec.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/ingestion/ingestion-spec.md

Co-authored-by: Gian Merlino <gianmerlino@gmail.com>

* fix spelling

---------

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2023-05-08T23:16:54Z
8805d8d7db61c892c62981e7eec00c6b6037e16d,"fix issues with filtering nulls on values coerced to numeric types (#14139)

* fix issues with filtering nulls on values coerced to numeric types
* fix issues with 'auto' type numeric columns in default value mode
* optimize variant typed columns without nested data
* more tests for 'auto' type column ingestion",2023-05-08T20:19:02Z
0a3889b192f3d3bcf976a22fa679f6bfa56a75b0,account for auto allowing for leading and trailing spaces (#14224),2023-05-08T20:18:31Z
3c62c00d4c86ff002480a28c917afd4bc8dd3451,Fix Typos in DruidToGraphiteEventConverter (#14219),2023-05-08T12:16:32Z
a7a4bfd331e320d8925e6f39fdc4861319e5b8bd,"modify QueryScheduler to lazily acquire lanes when executing queries to avoid leaks (#14184)

This PR fixes an issue that could occur if druid.query.scheduler.numThreads is configured and any exception occurs after QueryScheduler.run has been called to create a Sequence. This would result in total and/or lane specific locks being acquired, but because the sequence was not actually being evaluated, the ""baggage"" which typically releases these locks was not being executed. An example of how this can happen is if a group-by having filter, which wraps and transforms this sequence happens to explode while wrapping the sequence. The end result is that the locks are acquired, but never released, eventually halting the ability to execute any queries.",2023-05-08T06:12:05Z
4d8feeb279cc144998e06bd2c9ab30044a77862b,Fix planning in CASE expressions with complex WHEN and ELSE expressions (#14220),2023-05-08T06:05:04Z
eed5f4f2916a0b7458b3c2b819afb370d72f610e,"Add labels to k8s jobs for the PodTemplateTaskAdapter (#14205)

* Add labels

* Add prefix

* remove newline

* fix syntax

* Update prefix",2023-05-08T02:56:52Z
fb38085ddbb439974325b230739e129ebcbf9ba1,"Add wait for worker shutdown to MSQ task cancel (#14198)

* Add wait for worker shutdown to MSQ task cancel

* Fix checkstyle",2023-05-05T23:29:59Z
123c4908c84660d5fd4dcbd2c840fd8f112b6566,Ephemeral storage is respected from the overlod for peon tasks (#14201),2023-05-05T23:27:29Z
4c15e978f136f60008435a927ee2c0cb1858ada7,"Web console: misc bug fixes (#14216)

* fixing little things

* clear edit columns when switching to SQL tab

* updated snapshots",2023-05-05T22:45:19Z
6ca3fb9b089037581f04b9ed15ffc227a9f37054,Remove the redundant ISO-8601 text in the readme. (#14210),2023-05-05T18:27:29Z
46dabab36dc86d307f3c96bee5b833dfe7be124e,Fix NPE in test parse exception report. Add more tests with different thresholds. (#14209),2023-05-05T17:05:41Z
01e88848ceb7d16d389830ee3cff9ed7ba46f366,restore .idea/misc.xml to see if it fixes intellij inspection ci (#14208),2023-05-05T06:17:16Z
48cde236c43e3dcb19f66c4a91726f0a93c8f4cf,"Add columnMappings to explain plan output (#14187)

* Add columnMappings to explain plan output

* * fix checkstyle
* add tests

* * improve test coverage

* * temporarily remove unit-test need to run ITs

* * depend on build

* * temporarily lower unit test threshold

* * add back dependency on unit-tests

* * add license headers

* * fix header order

* * review comments

* * fix intellij inspection errors

* * revert code coverage change",2023-05-04T17:36:28Z
edfd46ed458bab0baf93e6d64373b3b5b061ff41,"Better actionable error message when druid services are not running (#14202)

We have seen that the first-time users often don't know the next steps if druid services are unresponsive for some reason. This PR makes some of those messages a bit more clear.",2023-05-04T12:33:59Z
68f908e511e10217f56ccbbf77d8fc80b13aa512,"Fix uncaught `ParseException` when reading Avro from Kafka (#14183)

In StreamChunkParser#parseWithInputFormat, we call byteEntityReader.read() without handling a potential ParseException, which is thrown during this function call by the delegate AvroStreamReader#intermediateRowIterator.
A ParseException can be thrown if an Avro stream has corrupt data or data that doesn't conform to the schema specified or for other decoding reasons. This exception if uncaught, can cause ingestion to fail.",2023-05-04T07:05:36Z
954f3917ef8a310e070d8eaef1369551fa51b223,Add check for required avroBytesDecoder property that otherwise causes NPE. (#14177),2023-05-03T16:53:58Z
ac7181bbda10fe4bd556892cfdebe5cef3a7a2fa,"Persist supervisor spec only after successful start (#14150)

* Persist spec after successful start

* Fix checkstyle.

* checkstyle after mvn install",2023-05-03T12:57:39Z
ad93635e4599adee2cf558cd1b9dbaaffbe9031e,"Web console: allow stringly schemas in the data loader (#14189)

* allow stringly schemas

* fix copy

* feedback fixes

* feedback

* fix copy

* add warning

* indicate submitting

* Update web-console/src/views/load-data-view/load-data-view.tsx

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>

* feedback fix

* copy fix

---------

Co-authored-by: Abhishek Radhakrishnan <abhishek.rb19@gmail.com>",2023-05-03T06:13:21Z
6f0cdd0c3ff3ece039150f49df70dd4a49454495,"`TaskStartTimeoutFault` now depends on the last successful worker launch time. (#14172)

* `TaskStartTimeoutFault` now depends on the last successful worker launch time.",2023-05-02T18:35:15Z
387e682fbcc8a7a061a929f75b7604a96dde3094,"Fix memory calculations for WorkerMemoryParameters for machines with relatively less heap space (#14117)

* update worker memory parameters",2023-05-02T03:54:56Z
078d5ac59063476c0905a4c71b180bff9ac220cd,Preference to first worker error in-case job fails with `TooManyAttemptsForWorker` (#14170),2023-05-01T09:17:11Z
90ea192d9ce912b7fea36acf4cf3d46934de62cf,"fix bugs with auto encoded long vector deserializers (#14186)

This PR fixes an issue when using 'auto' encoded LONG typed columns and the 'vectorized' query engine. These columns use a delta based bit-packing mechanism, and errors in the vectorized reader would cause it to incorrectly read column values for some bit sizes (1 through 32 bits). This is a regression caused by #11004, which added the optimized readers to improve performance, so impacts Druid versions 0.22.0+.

While writing the test I finally got sad enough about IndexSpec not having a ""builder"", so I made one, and switched all the things to use it. Apologies for the noise in this bug fix PR, the only real changes are in VSizeLongSerde, and the tests that have been modified to cover the buggy behavior, VSizeLongSerdeTest and ExpressionVectorSelectorsTest. Everything else is just cleanup of IndexSpec usage.",2023-05-01T06:19:27Z
32af570fb22ed47175cdce3fbd1f329c9278748e,fix API doc formatting (#14167),2023-04-29T16:29:41Z
f976837eaaf9bfd74909476f7c670fbdf44e7110,allow marking segments as used when the whole datasoruce is unused (#14185),2023-04-29T02:45:50Z
d0654e217480b5e28e793bf1dbd609cae9e5bac9,Register emitter (#14180),2023-04-28T01:32:50Z
98db960794688951d18ef1fbab7fe65ef10de1f7,fix task query error decode (#14174),2023-04-27T22:26:07Z
84c11df980b90e059ae08d116f3dfdd1ef7974a1,"Make LoggingEmitter more useful by using Markers (#14121)

* Make LoggingEmitter more useful

* Skip code coverage for facade classes

* fix spellcheck

* code review

* fix dependency

* logging.md

* fix checkstyle

* Add back jacoco version to main pom",2023-04-27T22:06:06Z
d4e478c90918edbb83799372691439d3b55f82ee,"NVL function docs update (#14169)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-04-27T18:17:21Z
fceb5058337a981eb8d9a21c7f7f342d34b5e892,"Web console: allow __time in MSQ (#14165)

* works in MSQ

* fix spec conversion",2023-04-27T16:02:22Z
6579c1c5b62e2fa17e73aa40ad867d32e02e14e9,remove unneeded TaskLogStreamer binding override (#14176),2023-04-27T14:09:24Z
63268a50236bf7b621b07cf64eacb69c955b0efe,"Relaunch track of failed workers without work orders (#14166)

* If a worker dies after it has finished generating results, MSQ decides to not retry it as it has no active work orders. However, since we don't keep track of it further, if it is required for a future stage, the controller hangs waiting for the worker to be ready. This PR keeps tracks of any workers the controller decides to not restart immediately and while starting workers for the next stage, queues these workers for retry.",2023-04-27T14:08:05Z
5aa119dfdaed4b0727e62659c18df5816685551a,"Add retry to opening retrying stream (#14126)

* Add retry to opening retrying stream
* Add retry to S3Entity for network issues

* Fix tests and clean up code",2023-04-27T11:22:22Z
42c8c84eb6ddddfbc780c6c932cfee928515490b,"TimeBoundary: Use cursor when datasource is not a regular table. (#14151)

* TimeBoundary: Use cursor when datasource is not a regular table.

Fixes a bug where TimeBoundary could return incorrect results with
INNER Join or inline data.

* Addl Javadocs.",2023-04-27T00:00:13Z
6c99fbea921f07c1731d5e35148346deb290c565,"fix typo in s3 docs. add readme to s3 module. (#14135)

* fix typo in s3 docs. add readme to s3 module.

* Update extensions-core/s3-extensions/README.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* cleanup readme for s3 extension and link to repo markdown doc instead of web docs

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-04-26T21:03:11Z
5db7396c7864baf79cb88c8d2b3de938f991a0b5,fix(avro-json-path-expressions): allow more complex jsonpath expressions (#14149),2023-04-26T09:28:11Z
e4d99c3e26d7d98dd4848e25b3a78f6b3551207d,set count on rule history api (#14164),2023-04-26T08:44:20Z
774073b2e7f3ab47a0b1fd3c45fb03bb2281038c,"Update Hadoop3 as default build version (#14005)

Hadoop 2 often causes red security scans on Druid distribution because of the dependencies it brings. We want to move away from Hadoop 2 and provide Hadoop 3 distribution available. Switch druid to building with Hadoop 3 by default. Druid will still be compatible with Hadoop 2 and users can build hadoop-2 compatible distribution using hadoop2 profile.",2023-04-26T07:22:51Z
752475b7992b1ef458c24b750eb05a4b4c9207a3,"Fix two concurrency issues with segment fetching. (#14042)

* Fix two concurrency issues with segment fetching.

1) SegmentLocalCacheManager: Fix a concurrency issue where certain directory
   cleanup happened outside of directoryWriteRemoveLock. This created the
   possibility that segments would be deleted by one thread, while being
   actively downloaded by another thread.

2) TaskDataSegmentProcessor (MSQ): Fix a concurrency issue when two stages
   in the same process both use the same segment. For example: a self-join
   using distributed sort-merge. Prior to this change, the two stages could
   delete each others' segments.

3) ReferenceCountingResourceHolder: increment() returns a new ResourceHolder,
   rather than a Releaser. This allows it to be passed to callers without them
   having to hold on to both the original ResourceHolder *and* a Releaser.

4) Simplify various interfaces and implementations by using ResourceHolder
   instead of Pair and instead of split-up fields.

* Add test.

* Fix style.

* Remove Releaser.

* Updates from master.

* Add some GuardedBys.

* Use the correct GuardedBy.

* Adjustments.",2023-04-26T03:49:27Z
2dfb693d4c1cecdab0c1cd75f5810cfbbd1e75e6,"Improved handling for zero-length intervals. (#14136)

* Improved handling for zero-length intervals.

1) Return an empty list from VersionedIntervalTimeline.lookup when
   provided with an empty interval. (The logic doesn't quite work when
   intervals are empty, which led to #14129.)

2) Don't return zero-length intervals from JodaUtils.condenseIntervals.

3) Detect ""incorrect"" comparator in JodaUtils.condenseIntervals, and
   recreate the SortedSet if needed. (Not strictly related to the theme
   of this patch. Just another thing in the same file.)

4) Remove unused method JodaUtils.containOverlappingIntervals.

Fixes #14129.

* Fix TimewarpOperatorTest.",2023-04-26T00:12:56Z
a7d4162195a630c380d75516c24229cc23e25271,"Compaction: Block input specs not aligned with segmentGranularity. (#14127)

* Compaction: Block input specs not aligned with segmentGranularity.

When input intervals are not aligned with segmentGranularity, data may be
overshadowed if it lies in the space between the input intervals and the
output segmentGranularity.

In MSQ REPLACE, this is a validation error. IMO the same behavior makes
sense for compaction tasks. In case anyone was depending on the ability
to compact nonaligned intervals, a configuration parameter
allowNonAlignedInterval is provided. I don't expect it to be used much.

* Remove unused.

* ITCompactionTaskTest uses non-aligned intervals.",2023-04-26T00:06:16Z
89e7948159771735908e3e68823356ecd34df93a,"MSQ: Subclass CalciteJoinQueryTest, other supporting changes. (#14105)

* MSQ: Subclass CalciteJoinQueryTest, other supporting changes.

The main change is the new tests: we now subclass CalciteJoinQueryTest
in CalciteSelectJoinQueryMSQTest twice, once for Broadcast and once for
SortMerge.

Two supporting production changes for default-value mode:

1) InputNumberDataSource is marked as concrete, to allow leftFilter to
   be pushed down to it.

2) In default-value mode, numeric frame field readers can now return nulls.
   This is necessary when stacking joins on top of joins: nulls must be
   preserved for semantics that match broadcast joins and native queries.

3) In default-value mode, StringFieldReader.isNull returns true on empty
   strings in addition to nulls. This is more consistent with the behavior
   of the selectors, which map empty strings to null as well in that mode.

As an effect of change (2), the InsertTimeNull change from #14020 (to
replace null timestamps with default timestamps) is reverted. IMO, this
is fine, as either behavior is defensible, and the change from #14020
hasn't been released yet.

* Adjust tests.

* Style fix.

* Additional tests.",2023-04-25T19:10:23Z
ee06137787af0b090fbee57d2b21d612fe8dbadd,better native json error UX (#14155),2023-04-25T17:30:42Z
73f050027b9a3183daec38b532723fcd242c19c4,MSQ: Preserve original ParseException when writing frames. (#14122),2023-04-25T06:17:15Z
cade80b582b5636b778a71e2f4274595a57038ef,"Change time column name when reading from external sources in MSQ (#14148)

When ingesting from an external source which already contains a column ""__time"", currently, the value is dropped. Changing the time column name in the external input slice reader resolves this.",2023-04-25T05:43:59Z
9d4cc501f73a03543e19081c332331fccac67562,"return task status reported by peon (#14040)

* return task status reported by peon

* Write TaskStatus to file in AbstractTask.cleanUp

* Get TaskStatus from task log

* Fix merge conflicts in AbstractTaskTest

* Add unit tests for TaskLogPusher, TaskLogStreamer, NoopTaskLogs to satisfy code coverage

* Add license headerss

* Fix style

* Remove unknown exception declarations",2023-04-24T19:05:39Z
accd5536dfecac3b59bf695b030c62fda8204bf8,"Allow for Log4J to be configured for peons but still ensure console logging is enforced (#14094)

* Allow for Log4J to be configured for peons but still ensure console logging is enforced

This change will allow for log4j to be configured for peons but require console logging is still
configured for them to ensure peon logs are saved to deep storage.

Also fixed the test ConsoleLoggingEnforcementTest to use a valid appender for the non console
Config as the previous config was incorrect and would never return a logger.

* fix checkstyle

* add warning to logger when it overwrites all loggers to be console

* optimize calls for altering logging config for ConsoleLoggingEnforcementConfigurationFactory

add getName to the druid logger class

* update docs, and error message

* edit docs to be more clear

* fix checkstyle issues

* CI fixes - LoggerTest code coverage and fix spelling issue for logging docs",2023-04-24T17:41:56Z
887f8db1b52b5d9cdc978ec71a528d6993290647,"preserve explicitly specified dimension schema in ""logical"" schema of sampler response (#14144)",2023-04-23T15:58:05Z
b95708f389a4a86b0f3ec4a2cc5d53d157a27d03,quick fix the tier selector (#14143),2023-04-22T00:21:00Z
f643abdad9592eed91689c38a3b67ad25b7cf10c,"SQL planning: Consider subqueries in fewer scenarios. (#14123)

* SQL planning: Consider subqueries in fewer scenarios.

Further adjusts logic in DruidRules that was previously adjusted in #13902.
The reason for the original change was that the comment ""Subquery must be
a groupBy, so stage must be >= AGGREGATE"" was no longer accurate. Subqueries
do not need to be groupBy anymore; they can really be any type of query.
If I recall correctly, the change was needed for certain window queries
to be able to plan on top of Scan queries.

However, this impacts performance negatively, because it causes many
additional outer-query scenarios to be considered, which is expensive.

So, this patch updates the matching logic to consider fewer scenarios. The
skipped scenarios are ones where we expect that, for one reason or another,
it isn't necessary to consider a subquery.

* Remove unnecessary escaping.

* Fix test.",2023-04-21T15:32:13Z
8d60edcfcb371423f9b731bfdb8579eda5f7c4da,"Updating segment map function for QueryDataSource to ensure group by … (#14112)

* Updating segment map function for QueryDataSource to ensure group by of group by of join data source gets into proper segment map function path

* Adding unit tests for the failed case

* There you go coverage bot, be happy now",2023-04-20T20:22:29Z
e7ae825e0cdd5a6b6726df504d870ac66a090438,"Web console: better end of (MSQ) query segment loading UX (#14120)

* better end of query segment loading UX

* fix snapshot

* handle case when MSQ query returns results directly

* add ip address column icon

* better icons

* add variance icon

* better summary",2023-04-20T17:26:43Z
895abd89295db62c80593feb4e428363b2ba7158,"Refresh DruidLeaderClient cache selectively for non-200 responses (#14092)

* Refresh DruidLeaderClient cache for non-200 responses

* Change local variable name to avoid confusion

* Implicit retries for 503 and 504

* Remove unused imports

* Use argumentmatcher instead of Mockito for #any in test

* Remove flag to disable retry for 503/504

* Remove unused import from test

* Add log line for internal retry

---------

Co-authored-by: Abhishek Singh Chouhan <abhishek.chouhan@salesforce.com>",2023-04-20T08:46:54Z
4fffee17761286996a8c43154b72db4bcaafb16d,"Web console: better lookup 404 detection (#14108)

* better lookup 404 detection

* update snapshot",2023-04-19T16:27:55Z
e8674e2a60aed3b223809bbcb124d132634c19f8,"fix npe with gs uri having underscores (#14107)

* fix npe with gs uri having underscores

* compile fix",2023-04-19T05:56:18Z
9436ee8a63b6ccfd668c45c5304154f09a9f9919,"Nicer error message for CSV with no properties. (#14093)

* Nicer error message for CSV with no properties.

* Take two.

* Adjustments from review, and test fixes.

* Fix test.

* Fix static check.",2023-04-18T19:52:02Z
04da0102cbe93ab0e494ce8f8402e2f3abe34d68,"KillTask should return empty inputSource resources (#14106)

### Description

This pr fixes a few bugs found with the inputSource security feature.

1. `KillUnusedSegmentsTask` previously had no definition for the `getInputSourceResources`, which caused an unsupportedOperationException to be thrown when this task type was submitted with the inputSource security feature enabled. This task type should not require any input source specific resources, so returning an empty set for this task type now.

2. Fixed a bug where when the input source type security feature is enabled, all of the input source type specific resources used where authenticated against:

`{""resource"": {""name"": ""EXTERNAL"", ""type"": ""{INPUT_SOURCE_TYPE}""}, ""action"": ""READ""}`

When they should be instead authenticated against:

`{""resource"": {""name"": ""{INPUT_SOURCE_TYPE}"", ""type"": ""EXTERNAL""}, ""action"": ""READ""}`

3. fixed bug where supervisor tasks were not authenticated against the specific input source types used, if input source security feature was enabled.",2023-04-18T19:27:16Z
a7d5c64aeb7c5d70935e5ed797c8312af17264db,"Move MSQ temporary storage to a runtime parameter instead of being configured from query context (#14061)

* 
    Adds new run time parameter druid.indexer.task.tmpStorageBytesPerTask. This sets a limit for the amount of temporary storage disk space used by tasks. This limit is currently only respected by MSQ tasks.
*   Removes query context parameters intermediateSuperSorterStorageMaxLocalBytes and composedIntermediateSuperSorterStorageEnabled. Composed intermediate super sorter (which was enabled by composedIntermediateSuperSorterStorageEnabled) is now enabled automatically if durableShuffleStorage is set to true. intermediateSuperSorterStorageMaxLocalBytes is calculated from the limit set by the run time parameter druid.indexer.task.tmpStorageBytesPerTask.",2023-04-18T11:26:51Z
8eb854c845f8eb2d272e3f2c6046e5a146118aa1,"Remove maxResultsSize config property from S3OutputConfig (#14101)

* ""maxResultsSize"" has been removed from the S3OutputConfig and a default ""chunkSize"" of 100MiB is now present. This change primarily affects users who wish to use durable storage for MSQ jobs.",2023-04-18T08:55:20Z
086b2b8efe392fb4aea5436d6b95b01c6b16111d,Log merge and push timings for PartialGenericSegmentMergeTask (#14089),2023-04-18T06:21:26Z
f6a0888bc07396a4afab91f5cb576793e26275d2,"document arrays in sql (#12549)

* document arrays in sql

* adjustments

* Update docs/querying/sql-array-functions.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/querying/sql-data-types.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/querying/sql-data-types.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/querying/sql-array-functions.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/querying/sql-array-functions.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update sql-array-functions.md

* fix stuff

* fix spelling

---------

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2023-04-18T02:08:46Z
e7d2e8b914bf89a780490de109b8b7850b0e141f,fix bug filtering nested columns with expression filters (#14096),2023-04-17T21:21:32Z
c98c66558f7d5ad48edde681ba5192130268b24a,"Include statement attributes in `EXPLAIN PLAN` output (#14074)

This commit adds attributes that contain metadata information about the query
in the EXPLAIN PLAN output. The attributes currently contain two items:
- `statementTyp`: SELECT, INSERT or REPLACE
- `targetDataSource`: provides the target datasource name for DML statements

It is added to both the legacy and native query plan outputs.",2023-04-17T15:30:25Z
be6745f75ba437bcd0aec15217ce69955ebd8603,Adding more logs for sequential merge. (#14097),2023-04-17T12:31:24Z
facd82b4935d8d5313d93737a6de8bd8b7248f7b,"Add HLLC tests for empty strings that don't pass. (#14085)

I believe the test case illustrates the cause of the problem in #13950.",2023-04-17T10:16:42Z
1bd63948a10b21b12ca6f67241f53d5d95da6dd3,"Update asf-release-process-guide.md (#14080)

update release guide to include steps to ensure web-console tests that have docs links are updated correctly for the release branch",2023-04-17T04:42:34Z
eb797512a02777d0b48ef0911223af4469c34b5e,"Fix MSQSelectTest. (#14099)

A logical conflict between #14046 and #14048 caused testJoinWithLookup
to fail. This patch fixes it.",2023-04-16T19:45:38Z
8affcaa7eb9c57f7ed4b463e0ebfb171fbbafc4d,Increase timeout for call to get worker capacity (#14095),2023-04-16T15:54:13Z
a8eb3f2f57f5109e169bff043d16e7dd2c406c0b,"SQL: Fix natural comparator selection for groupBy. (#14075)

* SQL: Fix natural comparator selection for groupBy.

DruidQuery.computeSorting had some unique logic for finding natural
comparators for SQL types. It should be using getStringComparatorForRelDataType
instead.

One good effect here is that the comparator for BOOLEAN is now
NUMERIC rather than LEXICOGRAPHIC. The test case illustrates this.

* Remove msqCompatible, for now.

* Fix test.",2023-04-15T01:44:43Z
eeed5ed7e2885262f1456f291054951c626e453f,"MSQ: Use the same result coercion routines as the regular SQL endpoint. (#14046)

* MSQ: Use the same result coercion routines as the regular SQL endpoint.

The main changes are to move NativeQueryMaker.coerce to SqlResults, and
to formally make the list of sqlTypeNames from the MSQ results reports
use SqlTypeNames.

- Change the default to MSQ-compatible rather than MSQ-incompatible.
  The explicit marker function is now ""notMsqCompatible()"".",2023-04-15T01:26:23Z
0884a22c4107dcb6868ade3c807fd5760336cd8c,"MSQ: Support for querying lookup and inline data directly. (#14048)

* MSQ: Support for querying lookup and inline data directly.

Main changes:

1) Add of LookupInputSpec and DataSourcePlan.forLookup.

2) Add InlineInputSpec, and modify of DataSourcePlan.forInline to use
   this instead of an ExternalInputSpec with JSON. This allows the inline
   data to act as the right-hand side of a join, if needed.

Supporting changes:

1) Modify JoinDataSource's leftFilter validation to be a little less
   strict: it's now OK with leftFilter being attached to any concrete
   leaf (no children) datasource, rather than requiring it be a table.
   This allows MSQ to create JoinDataSource with InputNumberDataSource
   as the base.

2) Add SegmentWranglerModule to CliIndexer, CliPeon. This allows them to
   query lookups and inline data directly.

* Updates based on CI.

* Additional tests.

* Style fix.

* Remove unused import.",2023-04-14T21:04:02Z
bdc547709489adedb00263a7ca04a5cfc15eca90,Adding missed s3 retry handling in storage connector. (#14086),2023-04-14T11:51:39Z
e3c160f2f2a6a3a19f571ddaf18f0c998fdf42f5,"Add start_time column to sys.servers  (#13358)

Adds a new column start_time to sys.servers that captures the time at which the server was added to the cluster.",2023-04-14T09:53:34Z
6c9b7b6efdcdc26210276951598f732cc6cd7f0e,"msq: add durable storage info (#14035)

* msq: add durable storage info

* fix duplicate row

* Apply suggestions from code review

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>

---------

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>",2023-04-14T07:58:23Z
aaa6cc18836553e90f5d8111ecb2f793925199b8,"Make the tasks run with only a single directory (#14063)

* Make the tasks run with only a single directory

There was a change that tried to get indexing to run on multiple disks
It made a bunch of changes to how tasks run, effectively hiding the
""safe"" directory for tasks to write files into from the task code itself
making it extremely difficult to do anything correctly inside of a task.

This change reverts those changes inside of the tasks and makes it so that
only the task runners are the ones that make decisions about which
mount points should be used for storing task-related files.

It adds the config druid.worker.baseTaskDirs which can be used by the
task runners to know which directories they should schedule tasks inside of.
The TaskConfig remains the authoritative source of configuration for where
and how an individual task should be operating.",2023-04-13T07:45:02Z
179e2e8108b79b2b1a2dfe364765c467bc5996e5,adjust useSchemaDiscovery to also include the behavior of includeAllDimensions to support partial schema declaration without having to set two flags (#14076),2023-04-13T06:12:49Z
d2f82f8dd624d15c7fd5b26ca710d6751bf78291,"Make GCP initialization truly lazy (#14077)

The GCP initialization pulls credentials for
talking to GCP.  We want that to only happen
when fully required and thus want the GCP-related
objects lazily instantiated.",2023-04-13T06:10:50Z
81074411a99aadd8a899ceae7d8d12f2de347ac6,"MSQ: Support multiple result columns with the same name. (#14025)

* MSQ: Support multiple result columns with the same name.

This is allowed in SQL, and is supported by the regular SQL endpoint.
We retain a validation that INSERT ... SELECT does not allow multiple
columns with the same name, because column names in segments must be
unique.",2023-04-13T05:39:39Z
f86ea5cbc4e0046cd6c8792436dae35955d3c6f7,"Separate web-checks from static-checks to improve build time (#14071)

* Moves web-checks to separate job",2023-04-13T03:17:03Z
9ed8beca5e800301912c42364a208dbc93f629ae,"bug fixes and add support for boolean inputs to classic long dimension indexer (#14069)

changes:
* adds support for boolean inputs to the classic long dimension indexer, which plays nice with LONG being the semi official boolean type in Druid, and even nicer when druid.expressions.useStrictBooleans is set to true, since the sampler when using the new 'auto' schema when 'useSchemaDiscovery' is specified on the dimensions spec will call the type out as LONG
* fix bugs with sampler response and new schema discovery stuff incorrectly using classic 'json' type for the logical schema instead of the new 'auto' type",2023-04-12T03:49:52Z
966cae1c942eb7e549b359d2d3f08412ec21a62c,"Fix GHA CI branch trigger patterns (#14067)

* fix matching pattern on release branches

* test",2023-04-12T03:43:40Z
3a7e4efdd6e12344c9d54eb853af7b13b5fee612,"Docs: updating Kafka input format docs (#14049)

* updating Kafka input format docs

* typo

* spellcheck

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-04-12T03:06:23Z
29652bd2460768dad9eb3c51a9995f988528b136,fix NPE that can happen when merging all null nested v4 format columns (#14068),2023-04-12T02:04:51Z
5ce1b0903ef4bf6917f16a1daf78373ed005d1fa,"Add basic security functions to druidapi (follow up to #14009) (#14055)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Paul Rogers <progers@apache.org>",2023-04-11T17:55:27Z
89bdbdc3ed94cf2d7d5d8655488da179ffbace8c,"Input source security feature should work for MSQ tasks (#14056)

### Description

Previously msq controller and worker tasks did not have implementations for the `getInputSourceResources()` method. This causes the submission of these tasks to fail if the following auth config is enabled:

`druid.auth.enableInputSourceSecurity=true`

Added implementations of this method for these tasks that return an empty set of input sources. This means that for these task types, if `druid.auth.enableInputSourceSecurity=true` config is used, the input source types will be properly computed and authorized in the SQL layer, but not if the equivalent controller / worker tasks are submitted to the task endpoint.",2023-04-11T15:36:15Z
d61bd7f8f16c3f25ba4f81c5573edb1d7c504770,fix bug in nested v4 format merger from refactoring (#14053),2023-04-11T03:38:58Z
00d777d848cd95941c994541f54637eadd585f32,"Fix race condition in KubernetesTaskRunner between shutdown and getKnownTasks (#14030)

* Fix issues with null pointers on jobResponse

* fix unit tests

* Update extensions-contrib/kubernetes-overlord-extensions/src/main/java/org/apache/druid/k8s/overlord/common/DruidKubernetesPeonClient.java

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* nullable

* fix error message

* Use jobs for known tasks instead of pods

* Remove log lines

* remove log lines

* PR change requests

* revert wait change

---------

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2023-04-10T20:27:49Z
2e87b5a901f69029bd3eccb9c23ebd9fdbe01dec,"Input source security sql layer can handle input source with multiple types (#14050)

### Description

This change allows for input sources used during MSQ ingestion to be authorized for multiple input source types, instead of just 1. Such an input source that allows for multiple types is the CombiningInputSource.

Also fixed bug that caused some input source specific functions to be authorized against the permissions

`
[
    new ResourceAction(new Resource(ResourceType.EXTERNAL, ResourceType.EXTERNAL), Action.READ),
    new ResourceAction(new Resource(ResourceType.EXTERNAL, {input_source_type}), Action.READ)
]
`

when the inputSource based authorization feature is enabled, when it should instead be authorized against

`
[
    new ResourceAction(new Resource(ResourceType.EXTERNAL, {input_source_type}), Action.READ)
]
`",2023-04-10T13:48:57Z
cb302e1bd1092048875919d640bb65916c4ac796,Use apache-jar-resource-bundle:1.5 instead of 1.5-SNAPSHOT (#14054),2023-04-10T13:25:39Z
1aef72aa7e8a89272084f8f4d2f81e0c038e769b,Bump up the version in pom to 27.0.0 in preparation of release (#14051),2023-04-10T09:26:59Z
871209830108008cd59e87adb58d11349600a8dd,Fixing overlord unable to become a leader when syncing the lock from metadata store. (#14038),2023-04-10T07:07:31Z
d52bc333aa63064871ced8326460b834fa6bfced,"Frames: Ensure nulls are read as default values when appropriate. (#14020)

* Frames: Ensure nulls are read as default values when appropriate.

Fixes a bug where LongFieldWriter didn't write a properly transformed
zero when writing out a null. This had no meaningful effect in SQL-compatible
null handling mode, because the field would get treated as a null anyway.
But it does have an effect in default-value mode: it would cause Long.MIN_VALUE
to get read out instead of zero.

Also adds NullHandling checks to the various frame-based column selectors,
allowing reading of nullable frames by servers in default-value mode.",2023-04-09T23:58:46Z
166cb6203b115dc9cc279f429a6696cbebe18151,"Remove unnecessary python topic. Style changes to quickstart. (#13647)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-04-07T16:55:52Z
a769f1465223c608d8457bf6a9e991ad4ce69569,fix compile with java 8 (#14045),2023-04-07T14:01:38Z
5ee4ecee6216c9fd93c0bb7dad1645c8fa44a77d,"Web console: use new sampler features (#14017)

* use new sampler features

* supprot kafka format

* update DQT, fix tests

* prefer non numeric formats

* fix input format step

* boost SQL data loader

* delete dimension in auto discover mode

* inline example specs

* feedback updates

* yeet the format into valueFormat when switching to kafka

* kafka format is now a toggle

* even better form layout

* rename",2023-04-07T13:28:29Z
f41468fd466ab239d3373755fba28c0d4dbdb4b5,"fix off by one error in FrontCodedIndexedWriter and FrontCodedIntArrayIndexedWriter getCardinality method (#14047)

* fix off by one error in FrontCodedIndexedWriter and FrontCodedIntArrayIndexedWriter getCardinality method",2023-04-07T10:11:15Z
f47b05a98cc3ec748bef6958fceac4ac3f91064e,Hyphenate multi value string for consistency. Fixup extra space in javadoc. (#14043),2023-04-07T06:16:07Z
1b75b2d3d60e5415dc00dc6415fcd620064e706f,revert .idea/misc.xml changes (#14044),2023-04-07T00:45:03Z
b4157e32aecb7a0ea5930ea1efc4586431c0ffbf,"Update api.md (#13436)

* Update api.md

I have created changes in api call of python according to latest version of requests 2.28.1 library. Along with this there are some irregularities between use of <your-instance> and <hostname> so I have tried to fix that also.

* Update api.md

made some changes in declaring USER and PASSWORD",2023-04-06T22:05:36Z
1c2744b31e9cb3d9eabb248fa69292919f26a29b,"Fix querying sql (#14026)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-04-06T21:50:06Z
5c0221375c8dfa4c3509eb9e1b6864941dfe84c7," Allow for Input source security in native task layer (#14003)

Fixes #13837.

### Description

This change allows for input source type security in the native task layer.

To enable this feature, the user must set the following property to true:

`druid.auth.enableInputSourceSecurity=true`

The default value for this property is false, which will continue the existing functionality of needing authorization to write to the respective datasource.

When this config is enabled, the users will be required to be authorized for the following resource action, in addition to write permission on the respective datasource.

`new ResourceAction(new Resource(ResourceType.EXTERNAL, {INPUT_SOURCE_TYPE}, Action.READ`

where `{INPUT_SOURCE_TYPE}` is the type of the input source being used;, http, inline, s3, etc..

Only tasks that provide a non-default implementation of the `getInputSourceResources` method can be submitted when config `druid.auth.enableInputSourceSecurity=true` is set. Otherwise, a 400 error will be thrown.",2023-04-06T17:13:09Z
92912a6a2b5cbea282137151dfa0314b97568988,"JOIN or UNNEST queries over tombstone segment can fail (#14021)

Join,Unnest queries over tombstone segment can fail",2023-04-06T11:25:58Z
b11c0bc249de96ae4151595e1ff22001f2468fa5,"smarter nested column index utilization (#13977)

* smarter nested column index utilization
changes:
* adds skipValueRangeIndexScale and skipValuePredicateIndexScale to ColumnConfig (e.g. DruidProcessingConfig) available as system config via druid.processing.indexes.skipValueRangeIndexScale and druid.processing.indexes.skipValuePredicateIndexScale
* NestedColumnIndexSupplier uses skipValueRangeIndexScale and skipValuePredicateIndexScale to multiply by the total number of rows to be processed to determine the threshold at which we should no longer consider using bitmap indexes because it will be too many operations
* Default values for skipValueRangeIndexScale and skipValuePredicateIndexScale have been initially set to 0.08, but are separate to allow independent tuning
* these are not documented on purpose yet because they are kind of hard to explain, the mainly exist to help conduct larger scale experiments than the jmh benchmarks used to derive the initial set of values
* these changes provide a pretty sweet performance boost for filter processing on nested columns",2023-04-06T11:09:24Z
030ed911d4073843dc76a655e6fc8066b310af46,Temporarily revert extended table functions for Druid 26 (#14019),2023-04-06T04:09:33Z
b98eed8fb83e3868fdd88c6edff696bf0290cf15,"Revert quoting lookup fix. (#14034)

* Revert ""Add ANSI_QUOTES propety to DBI init in lookups. (#13826)""

This reverts commit 9e9976001c5692732be4b7e28d79886e0d6859a9.

* Revert ""Quote and escape literals in JDBC lookup to allow reserved identifiers. (#13632)""

This reverts commit 41fdf6eafbf3ff4bb67909ba15a2eaeb648dd036.

* fix typo.",2023-04-06T03:52:36Z
5810e650d43d6195a88994372c7aedc8cf5622ab,"K8s mm less fixes (#14028)

Update Fabric8 version and allow metrics monitors to be overriden",2023-04-05T16:53:16Z
ccf48245d730f430881305e54907e3782a251b3b,Update documentation for Kafka Supervisor IdleConfig (#14032),2023-04-05T16:25:39Z
319f99db05aefb8f232dfbf265b38ca9541fef4c,"Always use file sizes when determining batch ingest splits (#13955)

* Always use file sizes when determining batch ingest splits.

Main changes:

1) Update CloudObjectInputSource and its subclasses (S3, GCS,
   Azure, Aliyun OSS) to use SplitHintSpecs in all cases. Previously, they
   were only used for prefixes, not uris or objects.

2) Update ExternalInputSpecSlicer (MSQ) to consider file size. Previously,
   file size was ignored; all files were treated as equal weight when
   determining splits.

A side effect of these changes is that we'll make additional network
calls to find the sizes of objects when users specify URIs or objects
as opposed to prefixes. IMO, this is worth it because it's the only way
to respect the user's split hint and task assignment settings.

Secondary changes:

1) S3, Aliyun OSS: Use getObjectMetadata instead of listObjects to get
   metadata for a single object. This is a simpler call that is also
   expected to be less expensive.

2) Azure: Fix a bug where getBlobLength did not populate blob
   reference attributes, and therefore would not actually retrieve the
   blob length.

3) MSQ: Align dynamic slicing logic between ExternalInputSpecSlicer and
   TableInputSpecSlicer.

4) MSQ: Adjust WorkerInputs to ensure there is always at least one
   worker, even if it has a nil slice.

* Add msqCompatible to testGroupByWithImpossibleTimeFilter.

* Fix tests.

* Add additional tests.

* Remove unused stuff.

* Remove more unused stuff.

* Adjust thresholds.

* Remove irrelevant test.

* Fix comments.

* Fix bug.

* Updates.",2023-04-05T15:54:01Z
e6a11707cba7284783860fc1155877676cfae1f0,"Adding query stack fault to MSQ to capture native query errors. (#13926)


* Add a new fault ""QueryRuntimeError"" to MSQ engine to capture native query errors. 
* Fixed bug in MSQ fault tolerance where worker were being retried if `UnexpectedMultiValueDimensionException` was thrown.
* An exception from the query runtime with `org.apache.druid.query` as the package name is thrown as a QueryRuntimeError",2023-04-05T10:59:10Z
1c8a18467744445a6a2c05bb43ff935618baecc6,"add null safety checks for DiscoveryDruidNode services for more resilient http server and task views (#13930)

* add null safety checks for DiscoveryDruidNode services for more resilient http server and task vi",2023-04-05T09:45:39Z
012b49d5e5588d4ac2a8f588100d5c844727a05e,"Fix the order of aggregator finalization in GroupByPostShuffleFrameProcessor (MSQ) (#14022)

* fix the order in which finalization is done

* add comment explaining the change

* null handling case",2023-04-05T05:34:06Z
d21babc5b831a90b904e499f4435cd60d168e99a,"remix nested columns (#14014)

changes:
* introduce ColumnFormat to separate physical storage format from logical type. ColumnFormat is now used instead of ColumnCapabilities to get column handlers for segment creation
* introduce new 'auto' type indexer and merger which produces a new common nested format of columns, which is the next logical iteration of the nested column stuff. Essentially this is an automatic type column indexer that produces the most appropriate column for the given inputs, making either STRING, ARRAY<STRING>, LONG, ARRAY<LONG>, DOUBLE, ARRAY<DOUBLE>, or COMPLEX<json>.
* revert NestedDataColumnIndexer, NestedDataColumnMerger, NestedDataColumnSerializer to their version pre #13803 behavior (v4) for backwards compatibility
* fix a bug in RoaringBitmapSerdeFactory if anything actually ever wrote out an empty bitmap using toBytes and then later tried to read it (the nerve!)",2023-04-05T00:51:59Z
f60f377e5f67221f8a4a34163b257ecffece60d7,"Fix issues with null pointers on jobResponse (#14010)

* Fix issues with null pointers on jobResponse

* fix unit tests

* Update extensions-contrib/kubernetes-overlord-extensions/src/main/java/org/apache/druid/k8s/overlord/common/DruidKubernetesPeonClient.java

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* nullable

* fix error message

---------

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2023-04-05T00:48:18Z
7e572eef086cd47607d680e607954e293fecf9c4,"docs: sql unnest and cleanup unnest datasource (#13736)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Paul Rogers <paul-rogers@users.noreply.github.com>
Co-authored-by: Jill Osborne <jill.osborne@imply.io>
Co-authored-by: Anshu Makkar <83963638+anshu-makkar@users.noreply.github.com>
Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>
Co-authored-by: Elliott Freis <108356317+imply-elliott@users.noreply.github.com>
Co-authored-by: Nicholas Lippis <nick.lippis@imply.io>
Co-authored-by: Rohan Garg <7731512+rohangarg@users.noreply.github.com>
Co-authored-by: Karan Kumar <karankumar1100@gmail.com>
Co-authored-by: Vadim Ogievetsky <vadim@ogievetsky.com>
Co-authored-by: Gian Merlino <gianmerlino@gmail.com>
Co-authored-by: Clint Wylie <cwylie@apache.org>
Co-authored-by: Adarsh Sanjeev <adarshsanjeev@gmail.com>
Co-authored-by: Laksh Singla <lakshsingla@gmail.com>",2023-04-04T20:07:54Z
232491eea47c261ee881b6beb2a3feccc311b81d,"Document our conventions for writing messages (#13916)

Document our conventions for writing messages",2023-04-04T04:30:20Z
ab91768ddfa87fe2764c7504ed807966f9abf423,Fix broken shields (#14015),2023-04-04T04:11:53Z
6c33ef8b150e6cb6f20b76c78ff03f76a9ca40ab,Improve entries (#14016),2023-04-04T04:10:59Z
5a9c13293b7906d82176cc13c368002e36e02fdb,remove duplicate trigger on Cron Job ITs workflow (#14013),2023-04-04T04:09:48Z
ca94f7146f50900aeab2e520bec032ad3ded4368,"Planning correctly for order by queries on time which previously thre… (#13965)

* Planning correctly for order by queries on time which previously threw a planning error
* Updating toDruidQueryForExplaining on a query data source if there is a window on the partial query",2023-04-04T01:30:19Z
4560b9d8aaee34bc4da14cae8ffc4f4e35c96f81,"New error message for task deletion (#14008)

* New error message

* Add unit test",2023-04-03T21:26:09Z
217b0f6832c819b6c2b264418038b86049769ad8,"Eagerly fetching remote s3 files leading to out of disk (OOD) (#13981)

* Eagerly fetching remote s3 files leading to OOD.",2023-04-03T08:40:37Z
518698a9520a52bfb0cc1118f53df536f09aaf44,lower segment heap footprint and fix bug with expression type coercion (#14002),2023-03-31T20:53:22Z
981662e9f407093162d5649c9e8a223c131d8c78,"Web console: add a nice UI for overlord dynamic configs and improve the docs (#13993)

* in progress

* better form

* doc updates

* doc changes

* add inline docs

* fix tests

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/configuration/index.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* final fixes

* fix case

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* fix overflow

* fix spelling

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>
Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2023-03-31T17:12:25Z
e3211e3be050b8c52fdd718b32007e8f502408b8,actually backwards compatible frontCoded string encoding strategy (#13996),2023-03-31T09:24:12Z
51f3db2ce672b82ab27b846d56b62af4de5fc41a,Fix peon errors when executing tasks in ipv6(#13972) (#13995),2023-03-31T03:48:10Z
1eeecf5fb2909e561d0ec23941ce8755760476ba,"Fixing regression issues on unnest (#13976)

* select sum(c) on an unnested column now does not return 'Type mismatch' error and works properly
* Making sure an inner join query works properly
* Having on unnested column with a group by now works correctly
* count(*) on an unnested query now works correctly",2023-03-31T03:36:43Z
eb3120740227f10f6d198ee614e32ba7aacd810d,"Using MinIO to run S3DeepStorage ITs (#13997)

* Using MinIO to S3DeepStorage ITs

* Adding S3DeepStorageTest to github actions revised ITs",2023-03-30T19:15:53Z
47face9ca92a50290e9d98c7a84e5648c5417894,"Handle null values in BrokerServerView.serverAddedSegment (#13980)

Due to race conditions, the BrokerServerView may sometimes try to add a segment to a server which has already been removed from the inventory. This results in an NPE and keeps the BrokerServerView from processing all change requests.",2023-03-30T10:49:05Z
61a35262ec0afac578fd0a39f87a695791644225,"Kubernetes task runner live reports (#13986)

Implement Live Reports for the KubernetesTaskRunner",2023-03-30T05:00:22Z
44abe2b96f97b5e0d4e630809ae318d32f7f3351,"Fix bug in k8s task runner in handling deleted jobs (#14001)

With the KubernetesTaskRunner, if a task is manually shutdown via the web console while running or the corresponding k8s job is manually deleted, the thread responsible for overseeing the task gets stuck in a loop because the fabric8 client sends one event to it that the job is null when the job is deleted, but this doesn't pass the condition.

This means that the thread is stuck waiting on a fabric8 event (the job being successful) that will never come up until maxTaskDuration (default 4 hours). If a user of the extension is trying to use a limited taskqueue maxSize, this can cause problems as the k8s executor pool is unable to pick up additional tasks (since threads are stuck waiting on the old tasks that have already been deleted).",2023-03-30T04:39:52Z
3bb67721f718d54d80f8b2690f9897d8cdc98ee4,"Allow for Input source security in SQL layer (#13989)

This change introduces the concept of input source type security model, proposed in #13837.. With this change, this feature is only available at the SQL layer, but we will expand to native layer in a follow up PR.

To enable this feature, the user must set the following property to true:

druid.auth.enableInputSourceSecurity=true

The default value for this property is false, which will continue the existing functionality of having the usage all external sources being authorized against the hardcoded resource action

new ResourceAction(new Resource(ResourceType.EXTERNAL, ResourceType.EXTERNAL), Action.READ

When this config is enabled, the users will be required to be authorized for the following resource action

new ResourceAction(new Resource(ResourceType.EXTERNAL, {INPUT_SOURCE_TYPE}, Action.READ

where {INPUT_SOURCE_TYPE} is the type of the input source being used;, http, inline, s3, etc..

Documentation has not been added for the feature as it is not complete at the moment, as we still need to enable this for the native layer in a follow up pr.",2023-03-30T02:15:33Z
abb7133153be7f7f638e2f83e3f2d9339737efdd,"Web console: use EXTEND syntax (#13985)

* use EXTEND syntax

* update licenses

* update demo queries

* updated snapshots

* add join algorithm selector

* dismiss",2023-03-29T23:19:49Z
f7158871727e0b98d41b6927a2caf71e6eedc5ca,Debug docker logs on ITs failure. (#13978),2023-03-29T16:06:41Z
e4c5122a60367c1e6f814ab9bec8c64c0629f128,Fixing checkstyle (#14000),2023-03-29T14:51:21Z
ccdf30e39960f710e5bf8fc110be787a0937784f,Bump Joda-Time version for current DateTimeZone data (#13999),2023-03-29T14:45:49Z
8dce3ca4d594ddc498c1372d4d6cef3c6c3ed056,"OOM fix for running MSQ jobs with `intermediateSuperSorterStorageMaxLocalBytes` set (#13974)


While using intermediateSuperSorterStorageMaxLocalBytes the super sorter was retaining references of the memory allocator.

The fix clears the current outputChannel when close() is called on the ComposingWritableFrameChannel.java",2023-03-29T12:30:00Z
3c096c01a2c4554b6f107627fb55755b4f2a6cb0,cache mvn dependencies across tests without building (#13962),2023-03-29T10:57:36Z
488f1d83634e002c52ad9b7ff8c4cbb00efb4937,"Do not print error message if pod not found when getting task location (#13971)

Do not print error message if pod not found when getting task location",2023-03-29T07:57:06Z
2219e68fa3c602eaad8f5ba84acc36f8e2cabebc,add backwards compat mode for frontCoded stringEncodingStrategy (#13988),2023-03-28T21:44:44Z
76fe26d4ba2cd73ded87be4b5708030aec6624d1,"Fix typos, add tests for http() function (#13954)",2023-03-28T21:41:06Z
2f986752859557ff4715f443dc176e5dd86f16d2,"Tuple sketch SQL support (#13887)

This PR is a follow-up to #13819 so that the Tuple sketch functionality can be used in SQL for both ingestion using Multi-Stage Queries (MSQ) and also for analytic queries against Tuple sketch columns.",2023-03-28T13:17:12Z
c2fe6a4956de416ce7e91fa82847dd4219ffd50a,"Reworking s3 connector with various improvements (#13960)

* Reworking s3 connector with
1. Adding retries
2. Adding max fetch size
3. Using s3Utils for most of the api's
4. Fixing bugs in DurableStorageCleaner
5. Moving to Iterator for listDir call",2023-03-28T11:35:16Z
e8e808257336c2c4eb07915bb457024a5d3c8749,"Update OIDCConfig with scope information  (#13973)

Allow users to provide custom scope through OIDC configuration",2023-03-28T09:20:00Z
d5b1b5bc8e751b8a45b2a2bf5a02ee2018968a9f,"nested columns + arrays = array columns! (#13803)

array columns!
changes:
* add support for storing nested arrays of string, long, and double values as specialized nested columns instead of breaking them into separate element columns
* nested column type mimic behavior means that columns ingested with only root arrays of primitive values will be ARRAY typed columns
* neat test refactor stuff
* add v4 segment test
* add array element indexes
* add tests for unnest and array columns
* fix unnest column value selector cursor handling of null and empty arrays",2023-03-27T19:42:35Z
062d72b67eccbb754fe74c7328cd06e0026fe5bf,"Add timeout to TaskStartTimeoutFault. (#13970)

* Add timeout to TaskStartTimeoutFault.

Makes the error message a bit more useful.

* Update docs.",2023-03-27T18:07:19Z
daff7fe73b880b84c86ea425a5a98514a50542a8,"Document how to report security issues (#13886)

Document how to report security issues on the security overview page, so we can link this page from the homepage. That should make all the other important security information easier to find as well.",2023-03-27T05:56:37Z
13ffeb50bacd995e99090b502ea441f8634d8369,should retry when failed to pause realtime task (#11515),2023-03-25T13:33:13Z
19db32d6b4ba6986075acc5566f3ce9c97561211,"Add JWT authenticator support for validating ID Tokens (#13242)

Expands the OIDC based auth in Druid by adding a JWT Authenticator that validates ID Tokens associated with a request. The existing pac4j authenticator works for authenticating web users while accessing the console, whereas this authenticator is for validating Druid API requests made by Direct clients. Services already supporting OIDC can attach their ID tokens to the Druid requests
under the Authorization request header.",2023-03-25T13:11:40Z
598eaad7e1ceac983ac0fef7766d0455f57eda82,"Fix HSTS for middle manager (#13975)

Fix HSTS for middle manager",2023-03-25T08:31:09Z
549018d07648fdedacd0d132cd6b07a4f8bbbfee,"Revert ""Update docs.""

This reverts commit de27c7d3c12386491b3b5903fa64015cee0b01b1.",2023-03-25T00:16:12Z
de27c7d3c12386491b3b5903fa64015cee0b01b1,Update docs.,2023-03-25T00:15:27Z
8a72544bd2cd7b2af7e12ccf88def6db46fcd356,"Hook up pod template adapter (#13966)

* Hook up PodTemplateTaskAdapter

* Make task adapter TYPE parameters final

* Rename adapters types

* Include specified adapter name in exception message

* Documentation for sidecarSupport deprecation

* Fix order

* Set TASK_ID as environment variable in PodTemplateTaskAdapter (#13969)

* Update docs/development/extensions-contrib/k8s-jobs.md

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* Hook up PodTemplateTaskAdapter

* Make task adapter TYPE parameters final

* Rename adapters types

* Include specified adapter name in exception message

* Documentation for sidecarSupport deprecation

* Fix order

* fix spelling errors

---------

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2023-03-24T18:13:46Z
976d39281fa8903850432abac85f1bcb067dd867,Fix some broken links in docs (#13968),2023-03-24T17:48:23Z
36df2495e135a12efea3d3b4765e960753d497fa,Set TASK_ID as environment variable in PodTemplateTaskAdapter (#13969),2023-03-23T22:45:01Z
139a058ba712cbc6547ab403cfbf5636884cb7e0,"Use sonatype maven central for plugin repositories (#13961)

* Change search order of maven repositories

* Update pom.xml",2023-03-23T10:05:47Z
c52d15d65d592411d698f97c0e5f88a30194d76a,"Fixing security vulnerability check errors (#13956)

* Fixing security vulnerability check errors

* Updating javax.el to jakarta.el

* Adding cron job trigger on changes to suppressions file",2023-03-23T05:40:06Z
da42ee5bfa04f9996fb0ccd9aba1c2265194bb38,Added TYPE(native) data type for external tables (#13958),2023-03-23T04:43:29Z
2ad133c06e01c2f6af8d930b6bdea2a6ad1c6ea3,"Unnest changes for moving the filter on right side of correlate to inside the unnest datasource (#13934)

* Refactoring and bug fixes on top of unnest. The filter now is passed inside the unnest cursors. Added tests for scenarios such as
1. filter on unnested column which involves a left filter rewrite
2. filter on unnested virtual column which pushes the filter to the right only and involves no rewrite
3. not filters
4. SQL functions applied on top of unnested column
5. null present in first row of the column to be unnested",2023-03-23T01:24:00Z
8d125b7c7ffe74c32c0e1495aca84b7318285d98,"Web console: segment writing progress indication (#13929)

* add segment writing progress indication

* update with more metrics

* add push metric",2023-03-22T23:34:38Z
d81d13b9ba5b81ed098230dd5fbf24f39ea5710f,"Pod template task adapter (#13896)

* Pod template task adapter

* Use getBaseTaskDirPaths

* Remove unused task from getEnv

* Use Optional.ifPresent() instead of Optional.map()

* Pass absolute path

* Don't pass task to getEnv

* Assert the correct adapter is created

* Javadocs and Comments

* Add exception message to assertions",2023-03-22T20:20:24Z
086eb26b74bdb1ee124e32deacbf5d8f1fe6c0dd,"fix join and unnest planning to ensure that duplicate join prefixes are not used (#13943)

* fix join and unnest planning to ensure that duplicate join prefixes are not used

* wont somebody please think of the children",2023-03-22T19:53:55Z
7bab40749523bd98886b980fc66814e88b5e9f98,"Add segment generator counters to MSQ reports (#13909)

* Add segment generator counters to reports

* Remove unneeded annotation

* Fix checkstyle and coverage

* Add persist and merged as new metrics

* Address review comments

* Fix checkstyle

* Create metrics class to handle updating counters

* Address review comments

* Add rowsPushed as a new metrics",2023-03-22T16:17:26Z
f4392a31556fa66b770c7dd66dc1427fdfe5746d,"expression transform improvements and fixes (#13947)

changes:
* fixes inconsistent handling of byte[] values between ExprEval.bestEffortOf and ExprEval.ofType, which could cause byte[] values to end up as java toString values instead of base64 encoded strings in ingest time transforms
* improved ExpressionTransform binding to re-use ExprEval.bestEffortOf when evaluating a binding instead of throwing it away
* improved ExpressionTransform array handling, added RowFunction.evalDimension that returns List<String> to back Row.getDimension and remove the automatic coercing of array types that would typically happen to expression transforms unless using Row.getDimension
* added some tests for ExpressionTransform with array inputs
* improved ExpressionPostAggregator to use partial type information from decoration
* migrate some test uses of InputBindings.forMap to use other methods",2023-03-22T06:26:53Z
b7752a909c7ac6e51f6b1571f3a07471beccc3c9,"Enable round-robin segment assignment and batch segment allocation by default (#13942)

Changes:
- Set `useRoundRobinSegmentAssignment` in coordinator dynamic config to `true` by default.
- Set `batchSegmentAllocation` in `TaskLockConfig` (used in Overlord runtime properties) to `true` by default.",2023-03-22T02:50:01Z
ede9903ff4752f643716ad82bb20ecfe60a559f9,"pip install for Python Druid API (#13938)

Broken test appears unrelated to this PR

* make druidapi pip installable

* include druidapi in prerequisites

* add license to setup.py

* updates from Paul's review

* note about editable install

* Apply suggestions from code review

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* update install instructions

* found unrelated typos

* standardize install cmd with pip

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2023-03-21T18:37:39Z
1c7a03a47be652853a9991f79716f69e0ad39bd4,"Lower default maxRowsInMemory for realtime ingestion. (#13939)

* Lower default maxRowsInMemory for realtime ingestion.

The thinking here is that for best ingestion throughput, we want
intermediate persists to be as big as possible without using up all
available memory. So, we rely mainly on maxBytesInMemory. The default
maxRowsInMemory (1 million) is really just a safety: in case we have
a large number of very small rows, we don't want to get overwhelmed
by per-row overheads.

However, maximum ingestion throughput isn't necessarily the primary
goal for realtime ingestion. Query performance is also important. And
because query performance is not as good on the in-memory dataset, it's
helpful to keep it from growing too large. 150k seems like a reasonable
balance here. It means that for a typical 5 million row segment, we
won't trigger more than 33 persists due to this limit, which is a
reasonable number of persists.

* Update tests.

* Update server/src/main/java/org/apache/druid/segment/indexing/RealtimeTuningConfig.java

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Fix test.

* Fix link.

---------

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2023-03-21T17:36:36Z
4f9528540630c36a5624b07e719bc5e53ab07d60,Correct nested columns JSON example (#13953),2023-03-21T16:17:26Z
617c325c70bf33e4e9e7ae8016c8f2b777869526,"Make zk connection retries configurable (#13913)

* This makes the zookeeper connection retry count configurable. This is presently hardcoded to 29 tries which ends up taking a long time for the druid node to shutdown in case of ZK connectivity loss.
Having a shorter retry count helps k8s deployments to fail fast. In situations where the underlying k8s node loses network connectivity or is no longer able to talk to zookeeper, failing fast can trigger pod restarts which can then reassign the pod to a healthy k8s node.
Existing behavior is preserved, but users can override this property if needed.",2023-03-21T09:15:28Z
143fdcfacfbd578399a4b845562eb7e8eeac96b0,"Change test name so it triggers in CI (#13844)

As the name of the class did not end or start with ""Test"", CalciteSelectQueryMSQTest was not triggered in CI. This PR renames the test.",2023-03-20T10:25:52Z
1c250a0bc00b5d2722e7d6fc2795facce799bec6,Fix error in cron job ITs workflow  (#13945),2023-03-17T11:59:45Z
38adac4369d6f483dbc18caead34f6518576e091,"Dart sass (#13937)

* Run npx saas-migrator division

* Switch to dart sass

* Upgrade blueprint

* Remove deprecated import syntax

* Prettify

* Snapshots",2023-03-16T19:44:24Z
bf13156b55a378bd14932b6407205de745aa779f,Regression bug fix where ever LimitFrameProcessor's were used. (#13941),2023-03-16T16:18:18Z
67df1324eeffa24ebec0844ef091c673a8653e6a,"Undocumenting certain context parameter in MSQ.  (#13928)

* Removing intermediateSuperSorterStorageMaxLocalBytes, maxInputBytesPerWorker, composedIntermediateSuperSorterStorageEnabled, clusterStatisticsMergeMode from docs

* Adding documentation in the context class.",2023-03-16T12:26:44Z
da197c92730a62417d69b2e913b3d2a5fead1f0b,"Migrate existing jdk11 ITs to cron job (#13918)

This cron job runs on the latest commit of the master branch by default daily at 3:00 AM UTC.",2023-03-16T10:00:07Z
6837289cb043fdf57375ad7911fb68a2d2a84276,"Fixes parquet uint_32 datatype conversion (#13935)

After parquet ingestion, uint_32 parquet datatypes are stored as null values in the dataSource. This PR fixes this conversion bug.",2023-03-16T09:57:38Z
c7d864d3bccf82601c757f44c859eaeae34cfc1d,"Update container creation in AzureTestUtil.java (#13911)

*
1. Handling deletion/creation of container created during the previously run test in AzureTestUtil.java.
2. Adding/updating log messages and comments in Azure and GCS deep storage tests.",2023-03-16T05:34:43Z
65a663adbb8f1fd39c3bcc029a96f5a650a6928d,"docs: clarify Java precision (#13671)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-03-15T18:43:41Z
cee2dfd768eb257820e4019986be0a98fa62b44a,Upgrade ZK from 3.5.9 to 3.5.10 to avoid data inconsistency risk (#13715),2023-03-15T13:51:09Z
46766d245ca235bc86a2535109bab2e9264bfcf3,Replace deprecated substr with slice (#13822),2023-03-15T10:57:06Z
ed57c5c8539bcd61a50cca6a337761307fd8e540,"better FrontCodedIndexed (#13854)

* Adds new implementation of 'frontCoded' string encoding strategy, which writes out a v1 FrontCodedIndexed which stores buckets on a prefix of the previous value instead of the first value in the bucket",2023-03-15T01:14:11Z
7ce3371730b3895207e2f7729abb713b05ab7eec,Fixing a github workflow to resolve conflicts and use the correct tag for jdk (#13933),2023-03-14T23:06:27Z
a7ba3616668d55c807a1a01434e50d1b44b6d61a,"Refactoring and bug fixes on top of unnest. The allowList now is not passed … (#13922)

* Refactoring and bug fixes on top of unnest. The filter now is passed inside the unnest cursors. Added tests for scenarios such as
1. filter on unnested column which involves a left filter rewrite
2. filter on unnested virtual column which pushes the filter to the right only and involves no rewrite
3. not filters
4. SQL functions applied on top of unnested column
5. null present in first row of the column to be unnested",2023-03-14T23:05:56Z
4493275d88d8a73ed1766ee07954d95c55dda862,"Use Maven central repo rather than Apache (#13921)

* Use Maven central repo rather than Apache

* Disable snapshots",2023-03-13T17:49:32Z
29b6bf0942f12c1c6921eaf8d7f1e390a4c9d21c,Removing the forbidden check on getOrDefault due to java8 incompatibility. (#13920),2023-03-11T04:19:32Z
8a1dc2f51cb64c9a187e88741105a045671a34be,"We want to tag the container based on the build jdk version, not the runtime version (#13917)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-03-10T19:35:33Z
44547614aebab030aa660728f9e032991c4a54cc,"Report engine as a dimension for sqlQuery metrics (#13906)

* Report engine as a dimension for sqlQuery metrics

* docs",2023-03-10T19:23:57Z
67be70e82ecc229107c6582b4ff3d03ec2f0c081,Removing the forbidden check until we find a fix for java 8 to unblock builds. (#13910),2023-03-10T16:07:19Z
4b1ffbc452831178dccd38456ed9b2cdf2521d13,"Various changes and fixes to UNNEST. (#13892)

* Various changes and fixes to UNNEST.

Native changes:

1) UnnestDataSource: Replace ""column"" and ""outputName"" with ""virtualColumn"".
   This enables pushing expressions into the datasource. This in turn
   allows us to do the next thing...

2) UnnestStorageAdapter: Logically apply query-level filters and virtual
   columns after the unnest operation. (Physically, filters are pulled up,
   when possible.) This is beneficial because it allows filters and
   virtual columns to reference the unnested column, and because it is
   consistent with how the join datasource works.

3) Various documentation updates, including declaring ""unnest"" as an
   experimental feature for now.

SQL changes:

1) Rename DruidUnnestRel (& Rule) to DruidUnnestRel (& Rule). The rel
   is simplified: it only handles the UNNEST part of a correlated join.
   Constant UNNESTs are handled with regular inline rels.

2) Rework DruidCorrelateUnnestRule to focus on pulling Projects from
   the left side up above the Correlate. New test testUnnestTwice verifies
   that this works even when two UNNESTs are stacked on the same table.

3) Include ProjectCorrelateTransposeRule from Calcite to encourage
   pushing mappings down below the left-hand side of the Correlate.

4) Add a new CorrelateFilterLTransposeRule and CorrelateFilterRTransposeRule
   to handle pulling Filters up above the Correlate. New tests
   testUnnestWithFiltersOutside and testUnnestTwiceWithFilters verify
   this behavior.

5) Require a context feature flag for SQL UNNEST, since it's undocumented.
   As part of this, also cleaned up how we handle feature flags in SQL.
   They're now hooked into EngineFeatures, which is useful because not
   all engines support all features.",2023-03-10T11:12:08Z
64b67c22c440cf6d1bf00fc1ae6f233d45edece8,"add latest version of druid operator to integeration tests (#13883)

* add latest version of druid operator to integeration tests

* Update integration-tests/k8s/tiny-cluster.yaml",2023-03-10T10:41:25Z
29b519a7a7ba83721cdd21b2c5f80f0e6e62dda8,"Add ability to add config files when using druid on Kubernetes (#13795)

You can now add additional configuration files to be copied to the final conf directory on startup when running in a containerized environment. Useful for running on Kubernetes and needing to add more files with a config map. To specify the path where the configMap is mounted, utilize the DRUID_ADDITIONAL_CONF_DIR environment variable.",2023-03-10T09:22:02Z
6b90a320cf737264da551069c843692a32424509,"Add back function signature for compat (#13914)

* Add back function signature for compat

* Suppress IntelliJ Error",2023-03-10T05:06:34Z
c16d9da35ae87a111a19728354b09a3b4610a107,"Improve documentation for tombstone generation and minor improvement (#13907)

* As a follow up to #13893, this PR improves the comments added along with examples for the code, as well as adds handling for an edge case where the generated tombstone boundaries were overshooting the bounds of MIN_TIME (or MAX_TIME).",2023-03-10T01:29:51Z
5b0b3a9b2c08fd988a1967d760eaf9b2b819b1b6,"Add a readOnly() method for PartitionedOutputChannel (#13755)

With SuperSorter using the PartitionedOutputChannels for sorting, it might OOM on inputs of reasonable size because the channel consists of both the writable frame channel and the frame allocator, both of which are not required once the output channel has been written to.
This change adds a readOnly to the output channel which contains only the readable channel, due to which unnecessary memory references to the writable channel and the memory allocator are lost once the output channel has been written to, preventing the OOM.",2023-03-10T01:28:00Z
bf39b4d313277be9e1dc91a6fe9d2749759ebb34,"Window planning: use collation traits, improve subquery logic. (#13902)

* Window planning: use collation traits, improve subquery logic.

SQL changes:

1) Attach RelCollation (sorting) trait to any PartialDruidQuery
   that ends in AGGREGATE or AGGREGATE_PROJECT. This allows planning to
   take advantage of the fact that Druid sorts by dimensions when
   doing aggregations.

2) Windowing: inspect RelCollation trait from input, and insert naiveSort
   if, and only if, necessary.

3) Windowing: add support for Project after Window, when the Project
   is a simple mapping. Helps eliminate subqueries.

4) DruidRules: update logic for considering subqueries to reflect that
   subqueries are not required to be GroupBys, and that we have a bunch
   of new Stages now. With all of this evolution that has happened, the
   old logic didn't quite make sense.

Native changes:

1) Use merge sort (stable) rather than quicksort when sorting
   RowsAndColumns. Makes it easier to write test cases for plans that
   involve re-sorting the data.

* Changes from review.

* Mark the bad test as failing.

* Additional update.

* Fix failingTest.

* Fix tests.

* Mark a var final.",2023-03-09T23:48:13Z
fe9d0c46d535445b407c00cf1cfafb00438fbc06,"Improve memory efficiency of WrappedRoaringBitmap. (#13889)

* Improve memory efficiency of WrappedRoaringBitmap.

Two changes:

1) Use an int[] for sizes 4 or below.
2) Remove the boolean compressRunOnSerialization. Doesn't save much
   space, but it does save a little, and it isn't adding a ton of value
   to have it be configurable. It was originally configurable in case
   anything broke when enabling it, but it's been a while and nothing
   has broken.

* Slight adjustment.

* Adjust for inspection.

* Updates.

* Update snaps.

* Update test.

* Adjust test.

* Fix snaps.",2023-03-09T23:48:02Z
48ac5ce50b0c87ac0c6b0bc85470b176dbefe5fb,"use native nvl expression for SQL NVL and 2 argument COALESCE (#13897)

* use custom case operator conversion instead of direct operator conversion, to produce native nvl expression for SQL NVL and 2 argument COALESCE, and add optimization for certain case filters from coalesce and nvl statements",2023-03-09T13:46:17Z
90d8f67e3dfec80db52e5dac43d278ef90aa47f9,"Avoid creating new RelDataTypeFactory during SQL planning. (#13904)

* Avoid creating new RelDataTypeFactory during SQL planning.

Reduces unnecessary CPU cycles.

* Fix.",2023-03-09T05:55:49Z
dc67296e9d0adfb65f31a96d2653e0eb3bd40f1e,"Fix for OOM in the Tombstone generating logic in MSQ (#13893)

fix OOMs using a different logic for generating tombstones

---------

Co-authored-by: Paul Rogers <paul-rogers@users.noreply.github.com>",2023-03-09T05:38:08Z
c7f4bb50563ec2ca64154c26bf3e6c427a2e1b91,"fix KafkaInputFormat when used with Sampler API (#13900)

* fix KafkaInputFormat when used with Sampler API

* handle key format sampling the same as value format sampling",2023-03-09T00:23:24Z
82f7a5647571ab38659739e0fce806e3f0cfb688,"Sort-merge join and hash shuffles for MSQ. (#13506)

* Sort-merge join and hash shuffles for MSQ.

The main changes are in the processing, multi-stage-query, and sql modules.

processing module:

1) Rename SortColumn to KeyColumn, replace boolean descending with KeyOrder.
   This makes it nicer to model hash keys, which use KeyOrder.NONE.

2) Add nullability checkers to the FieldReader interface, and an
   ""isPartiallyNullKey"" method to FrameComparisonWidget. The join
   processor uses this to detect null keys.

3) Add WritableFrameChannel.isClosed and OutputChannel.isReadableChannelReady
   so callers can tell which OutputChannels are ready for reading and which
   aren't.

4) Specialize FrameProcessors.makeCursor to return FrameCursor, a random-access
   implementation. The join processor uses this to rewind when it needs to
   replay a set of rows with a particular key.

5) Add MemoryAllocatorFactory, which is embedded inside FrameWriterFactory
   instead of a particular MemoryAllocator. This allows FrameWriterFactory
   to be shared in more scenarios.

multi-stage-query module:

1) ShuffleSpec: Add hash-based shuffles. New enum ShuffleKind helps callers
   figure out what kind of shuffle is happening. The change from SortColumn
   to KeyColumn allows ClusterBy to be used for both hash-based and sort-based
   shuffling.

2) WorkerImpl: Add ability to handle hash-based shuffles. Refactor the logic
   to be more readable by moving the work-order-running code to the inner
   class RunWorkOrder, and the shuffle-pipeline-building code to the inner
   class ShufflePipelineBuilder.

3) Add SortMergeJoinFrameProcessor and factory.

4) WorkerMemoryParameters: Adjust logic to reserve space for output frames
   for hash partitioning. (We need one frame per partition.)

sql module:

1) Add sqlJoinAlgorithm context parameter; can be ""broadcast"" or
   ""sortMerge"". With native, it must always be ""broadcast"", or it's a
   validation error. MSQ supports both. Default is ""broadcast"" in
   both engines.

2) Validate that MSQs do not use broadcast join with RIGHT or FULL join,
   as results are not correct for broadcast join with those types. Allow
   this in native for two reasons: legacy (the docs caution against it,
   but it's always been allowed), and the fact that it actually *does*
   generate correct results in native when the join is processed on the
   Broker. It is much less likely that MSQ will plan in such a way that
   generates correct results.

3) Remove subquery penalty in DruidJoinQueryRel when using sort-merge
   join, because subqueries are always required, so there's no reason
   to penalize them.

4) Move previously-disabled join reordering and manipulation rules to
   FANCY_JOIN_RULES, and enable them when using sort-merge join. Helps
   get to better plans where projections and filters are pushed down.

* Work around compiler problem.

* Updates from static analysis.

* Fix @param tag.

* Fix declared exception.

* Fix spelling.

* Minor adjustments.

* wip

* Merge fixups

* fixes

* Fix CalciteSelectQueryMSQTest

* Empty keys are sortable.

* Address comments from code review. Rename mux -> mix.

* Restore inspection config.

* Restore original doc.

* Reorder imports.

* Adjustments

* Fix.

* Fix imports.

* Adjustments from review.

* Update header.

* Adjust docs.",2023-03-08T22:19:39Z
f0fb094cc7f164646c22271fb73cc359c5282fc5,"Fix start-druid for indexers. (#13891)

There was an unused parameter causing the unpack to fail.",2023-03-08T18:32:07Z
68db39d08adbdadc095ec5cd8cdc54a93f007b00,"fix ci (#13901)

This PR is #13899 plus spotbugs fix to fix the failures introduced by #13815",2023-03-08T11:25:47Z
52bd9e6adb203f279680fb0edf6e939436bf8982,"Improved error message when topic name changes within same supervisor (#13815)

Improved error message when topic name changes within same supervisor

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2023-03-08T02:10:18Z
ef827561762f4c39adca51c1a1f3e39cbcde8a8f,"Add validation for aggregations on __time (#13793)

* Add validation for aggregations on __time",2023-03-08T01:16:36Z
faac43eabe86ce1641ee379a75113ccda0e66518,"Use base task dir in kubernetes task runner (#13880)

* Use TaskConfig to get task dir in KubernetesTaskRunner

* Use the first path specified in baseTaskDirPaths instead of deprecated baseTaskDirPath

* Use getBaseTaskDirPaths in generate command",2023-03-07T22:30:42Z
3924f0eff4e0a9990896f88ce2ed46d180f7b7eb,"use Calcites.getColumnTypeForRelDataType for SQL CAST operator conversion (#13890)

* use Calcites.getColumnTypeForRelDataType for SQL CAST operator conversion

* fix comment

* intervals are strings but also longs",2023-03-07T21:12:15Z
ca4df8594115ea8e7f6def5100f6f92966ed319b,fix SQL in segment card (#13895),2023-03-07T21:08:04Z
fcfb7b8ff63edf0c4f7925baeb664d3c17dc8919,"Add warning comments to Granularity.getIterable. (#13888)

This function is notorious for causing memory exhaustion and excessive
CPU usage; so much so that it was valuable to work around it in the
SQL planner in #13206. Hopefully, a warning comment will encourage
developers to stay away and come up with solutions that do not involve
computing all possible buckets.",2023-03-07T06:57:10Z
38b6373bf78165c1ed95198d2e0cffecfc6eb06f,"Web console: Compaction history dialog (#13861)

* initial renames

* add comaction history diff

* final fixes

* update snapshots

* use maps

* update test",2023-03-06T19:52:25Z
cd4ad5123a2f3c5826cbe82d2b2709dfdeda9c34,"Stream Kubernetes Job Logs (#13869)

Streams Kubernetes job logs from the Kubernetes client to a file on the machine instead of reading the logs into memory and then writing to a file.",2023-03-06T14:22:42Z
94cfabea1822eaadb9b36e700645d729a57a250e,"Suggested memory calculation in case NOT_ENOUGH_MEMORY_FAULT is thrown. (#13846)

* Suggested memory calculation in case NOT_ENOUGH_MEMORY_FAULT is thrown.

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-03-06T12:30:36Z
65c395494252f7a2dd52eead82fd7c7481afdc3d,"Adding forbidden api for Properties#get() and Properties#getOrDefault() (#13882)

Properties#getOrDefault method does not check the default map for values where as Properties#getProperty() does.",2023-03-06T05:12:04Z
f33898ed6d81099a9b73531093e36200bb77f188,Fix durable storage cleanup (#13853),2023-03-06T04:19:14Z
a580aca551f70c6d0f410a1230b76a1fe492f83e,"Python Druid API for use in notebooks (#13787)

Python Druid API for use in notebooks

Revises existing notebooks and readme to reference
the new API.

Notebook to explain the new API.

Split README into a console version and a notebook
version to work around lack of a nice display for
md files.

Update the REST API notebook to use simpler Requests calls

Converted the SQL tutorial to use the Python library

README file, converted to using properties

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-03-05T02:25:19Z
b68180fc44d7e385c7f026b9b2be368283737f35,use getProperty in MSQDurableStorageModule (#13881),2023-03-04T19:56:43Z
7123681adaeb98cc614c63410af883cc42f93785,"Allow druid-kubernetes-overlord-extensions to be loaded in any druid service (#13872)

Allow druid-kubernetes-overlord-extensions to be loaded in any druid service",2023-03-03T18:23:12Z
d93fdb2632bb9b870c2637915120153baae41771,"Bump CycloneDX module to address POM errors (#13878)

* Bump CycloneDX module to address POM errors

* Including web-console in the PR

---------

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-03-03T10:09:15Z
81356f76673b7b6a81dd038c11b16f7958eb4889,do not run non sql compatible tests for all jdk flavours (#13875),2023-03-03T05:56:57Z
a10e4150d59925b116c5da0fa18dedc8ea561e90,"Add Post Aggregators for Tuple Sketches (#13819)

You can now do the following operations with TupleSketches in Post Aggregation Step

Get the Sketch Output as Base64 String
Provide a constant Tuple Sketch in post-aggregation step that can be used in Set Operations
Get the Estimated Value(Sum) of Summary/Metrics Objects associated with Tuple Sketch",2023-03-03T04:02:09Z
b4b354b658ed3d3f8e9280984b74e5683ed752f3,docs: fix html nits (#13835),2023-03-02T19:19:32Z
26c5cac41af0fb755736e9d40390b59fc56c8fea,Fix a link problem (#13876),2023-03-02T17:09:51Z
7103cb4b9df56f8ecc4a27672d34dc21da58b812,"Removes FiniteFirehoseFactory and its implementations (#12852)

The FiniteFirehoseFactory and InputRowParser classes were deprecated in 0.17.0 (#8823) in favor of InputSource & InputFormat. This PR removes the FiniteFirehoseFactory and all its implementations along with classes solely used by them like Fetcher (Used by PrefetchableTextFilesFirehoseFactory). Refactors classes including tests using FiniteFirehoseFactory to use InputSource instead.
Removing InputRowParser may not be as trivial as many classes that aren't deprecated depends on it (with no alternatives), like EventReceiverFirehoseFactory. Hence FirehoseFactory, EventReceiverFirehoseFactory, and Firehose are marked deprecated.",2023-03-02T12:37:17Z
1aae37f7d688c1bdd67fd27babd80f949ad30fb8,Fix expectedSingleiContainerOutput.yaml spelling (#13870),2023-03-02T08:07:15Z
775f89c75b46c31f4a2880a254fce829edbc924f,Include workaround for CycloneDX is causing POM build errors to web-console as well (#13874),2023-03-02T08:06:49Z
38ac71ee5614afe2a6bb527c18b97f0165933869,one version of mockito is more than enough (#13871),2023-03-02T07:27:18Z
d32dc1b0c9317bc973ad41b19609766a05dd32c7,Remove K8sOverlordConfig.java (#13866),2023-03-02T04:13:48Z
d046cee3e43bcf895eb7c13d0c8b413141734fbf,"Workaround for CycloneDX is causing POM build errors (#13867)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-03-02T00:47:13Z
b26f1b4a5ded113926572f6ad164a85451057512,"Update datasources.md: Fix Documentation. (#13865)

Fixed documentation to clarify that union query cant be run over query datasources.",2023-03-01T14:59:15Z
ca68fd93a6e7b547d8a52277c31ad96ea743f1c0,"Generate tombstones when running MSQ's replace (#13706)

*When running REPLACE queries, the segments which contain no data are dropped (marked as unused). This PR aims to generate tombstones in place of segments which contain no data to mark their deletion, as is the behavior with the native ingestion.

This will cause InsertCannotReplaceExistingSegmentFault to be removed since it was generated if the interval to be marked unused didn't fully overlap one of the existing segments to replace.",2023-03-01T06:31:30Z
6cf754b0e0cd0ae28025439d6272ac174ae857ae,"move numeric null value coercion out of expression processing engine (#13809)

* move numeric null value coercion out of expression processing engine
* add ExprEval.valueOrDefault() to allow consumers to automatically coerce to default values
* rename Expr.buildVectorized as Expr.asVectorProcessor more consistent naming with Function and ApplyFunction; javadocs for some stuff",2023-03-01T02:10:07Z
faf602108bfec548ed99c9db60c8a641c20ccd1c,"We never want to restore caches that aren't an exact match to the commit SHA (#13863)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-02-28T21:59:49Z
22e516fd53a879c28bb20ebbd0516f37709fa851,Update kubernetes.md (#13858),2023-02-28T19:20:24Z
1d8fff4096e9058a7de3232564385593e17fd6cd,"sampler + type detection = bff (#13711)

* sampler + type detection = bff
* split logical and physical dimensions, tidy up",2023-02-28T12:14:30Z
13721f5998c76a06a70e47b2dbda6b0618610110,upgrade druid query toolkit (#13848),2023-02-28T09:04:21Z
12f62e2c42e0fffcac446eca62ff700ecc78581d,Clarify doc of ingest/handoff/time metric (#13856),2023-02-28T05:07:47Z
aeb1187a7d08db704bda098e8844fa456fd1af68,"Fix NPE in KinesisSupervisor#setupRecordSupplier. (#13859)

* Fix NPE in KinesisSupervisor#setupRecordSupplier.

PR #13539 refactored record supplier creation and introduced a bug:
this method would throw NPE when recordsPerFetch was not provided
by the user. recordsPerFetch isn't needed in this context at all,
since the supervisor-side supplier doesn't fetch records. So this
patch sets it to zero.

* Remove unused imports.",2023-02-28T03:55:28Z
e2461c21c49945835ec752f26e05a4b89942a9b0,fix flaky BatchIndex IT failures. (#13855),2023-02-28T01:23:14Z
6f7f391762c906c8065f0d7ef50239e1d1813152,"Remove unused imports. (#13860)

Crept in during #13842. Possibly logical conflict with another PR.",2023-02-27T23:14:34Z
31c7de1087a7b0ce096aed78fd472d1e8821892c,"Make CompactionSearchPolicy injectable (#13842)

* Make CompactionSearchPolicy injectable

A small refactoring that makes the search policy for compaction injectable.

Future changes can introduce new search policies that can be configured and
injected so that operators can choose which search policy is best suited for
their cluster.

This will also allow us to de-couple the scheduling of compaction jobs from
the CompactSegments duty, allowing the co-ordinator to schedule compaction
jobs faster than the duty lifecycle.

This PR is made so that it easy to review the future changes.

* fix tests",2023-02-27T15:57:03Z
48f4330100e73be5dbf85c3002eaf0d4e5224e63,"Make leader redirection work when both plainText and TLS ports are set (#13847)

When both plainText and TLS ports are set in druid, the redirection to a different leader node can fail. This is caused by how we compare a redirect path and the leader locations registered with a druid node. While the registered location has both plainText and TLS port set, the redirect path only has one port since it's a URI.",2023-02-26T15:53:29Z
54da38b50845a99a43ff41f7cbbe2a4496ea81c9,Add missing license for jakarta.activation against module druid-avro-extensions (#13845),2023-02-26T11:36:23Z
6bb5effa7bb1c7a31cff270818d035bdfb7a7883,"Better logging for MSQ worker task (#13790)

* Adding more logs to MSQ worker implementation which makes it easier to debug.",2023-02-25T21:54:24Z
e46379ba7a3b7e3b57aee8b4ed1e7e593885c8a0,"Docs: Update name of the metadata tables (#13734)

* Update name of the metadata tables

* emend spelling file

* fix spelling

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-02-23T21:57:59Z
d74d6824ecf04a32a0f84478ac8935d8cebe2301,"update LDAP endpoint (#13839)

Current DOC at step https://druid.apache.org/docs/latest/operations/auth-ldap.html#add-an-ldap-user-to-druid-and-assign-a-role
Example request to add the LDAP user myuser to Druid:
curl -i -v  -H ""Content-Type: application/json"" -u internal -X POST http://localhost:8081/druid-ext/basic-security/authentication/db/ldap/users/myuser 
Example request to assign the myuser user to the queryRole role:
curl -i -v  -H ""Content-Type: application/json"" -u internal -X POST http://localhost:8081/druid-ext/basic-security/authentication/db/ldap/users/myuser/roles/queryRole

Expected:
Example request to add the LDAP user myuser to Druid:
curl -i -v  -H ""Content-Type: application/json"" -u internal -X POST http://localhost:8081/druid-ext/basic-security/authorization/db/ldapauth/users/myuser 
Example request to assign the myuser user to the queryRole role
curl -i -v  -H ""Content-Type: application/json"" -u internal -X POST http://localhost:8081/druid-ext/basic-security/authorization/db/ldapauth/users/myuser/roles/queryRole",2023-02-23T21:55:06Z
e4e6c7ed013a60fb49d18dd737c3142350927735,make completions smarter (#13830),2023-02-23T18:17:10Z
70f9052f1de116c34a4b5b02c4a2b31ee018c036,"docs: update correct config base on server spec (#13832)

Co-authored-by: Winn Minn <winn.minn@grabtaxi.com>",2023-02-23T16:50:47Z
471cb82af3d02ebcd212eb2e09d7e9abe1950fd3,"Use built-in java rather than spending time to install (#13834)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-02-23T16:50:04Z
f7a5fcf30fffb0ecce52130e6bf617aa20f67a4d,"helm: Add serviceAccounts, rbac, and small fixes (#13747)

Update suggested segment-cache path, Allow for per-service serviceAccounts in druid helm chart and finer-grained RBAC, and add a default annotation to historical statefulset.",2023-02-23T06:12:03Z
786172947eaaa9296d318318d11cb86055fa3e9f,Skip tests when there are markdown only changes. (#13836),2023-02-23T06:09:53Z
79f04e71a1ef1a181dcf7f5a3d69ff76858446b9,"Hadoop based batch ingestion support range partition (#13303)

This pr implements range partitioning for hadoop-based ingestion. For detail about multi dimension range partition can be seen #11848.",2023-02-23T06:08:03Z
17a3cd0b68de0e2e24573104df145a0ae5755537,Remove the additional backtick that's causing a SA issue. (#13838),2023-02-23T03:31:08Z
66034dd8bcd324bbdf51431e06d94fb4ebf0a75f,"Update default for finalize in query-context.md (#13763)

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2023-02-22T20:35:36Z
914eebb4b747b5847ba6e9e1e559b6fbbee72ff2,"Wire up the catalog resolver (#13788)

Introduces the catalog resolver interface
Wires the resolver up to the planner factory
Refactors planner factory",2023-02-22T19:42:32Z
1595653e6f7ea7d4b6b3fac3a896f0b64745844b,"docs: add a link for the Druid SQL tutorial  (#13468)

* docs: add juptyer API tutorial for API and jupyter tutorial index (#3)

(cherry picked from commit aeb8d9e3390fa26d9c533dce0862295b80c58583)

* update prereqs and fix jupyterlab name

* Removing notebook since 13345 has it

13345 should be merged first

* update contributing instructions

* docs: link to the  Druid SQL tutorial

* Add link to partitioning

* fix merge conflict

* Saving

* Update docs/tutorials/tutorial-jupyter-index.md

* Remove partitioning

---------

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>
Co-authored-by: brian.le <brian.le@imply.io>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-02-22T17:36:13Z
aceeac91d4f46f834ceab78a59d4d51b19ac768f,Fix MSQ IT test (#13808),2023-02-22T16:14:46Z
d2dbb8b2c02b3de9c7049d03bd59b03839aa209b,"Fix infinite checkpointing between tasks and overlord (#13825)

If the intermediate handoff period is less than the task duration and there is no new data in the input topic, task will continuously checkpoint the same offsets again and again. This PR fixes that bug by resetting the checkpoint time even when the task receives the same end offset request again.",2023-02-22T13:55:59Z
3a67a43c8ae5f740d7fd4c312310c6e58d1e369d,Add method SegmentTimeline.addSegments (#13831),2023-02-22T07:58:01Z
07883e311eaeb6f6b442ec92ecb4027948c17b49,"doc: fix unnecessary link (#13785)

CI errors look unrelated to this change.",2023-02-22T01:34:46Z
665dee43bfbf00285a757b5fdd352db93b5788ce,"Revert ""Operator conversion deny list (#13766)"" (#13829)

This reverts commit 38e620aa4cd5c85ef651a37c7f7cd9beb6d60920.",2023-02-21T23:14:49Z
9e9976001c5692732be4b7e28d79886e0d6859a9,Add ANSI_QUOTES propety to DBI init in lookups. (#13826),2023-02-21T23:13:22Z
8595271b556f92a67483dee7fa976d2c343f4e6d,Fixup typos in integration-test README. (#13828),2023-02-21T23:12:37Z
5dadbdf4d051a6843c87a05948cade84eb042a40,"Generate the IT docker-compose.yaml files (#13669)

Generate IT docker-compose.sh files

Generates test-specific docker-compose.sh files using a simple
Python template script.",2023-02-21T23:03:02Z
c6b1576fc17bd9bf53d58fdb7249d1bcffff07d9,"Update clean-metadata-store.md (#13131)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-02-21T20:53:54Z
614205f3bcd366315432fe7bb12c9fdb7f68987c,"fix some intellij inspections in druid-processing (#13823)

fix some intellij inspections in druid-processing",2023-02-21T03:32:02Z
46eafa57e199e72893e998a4c7619991df47ea2c,"Improve client change counter management in HTTP Server View (#13010)

* Avoid calling resolveWaitingFutures if there are no changes made

* Avoid telling HTTP serveview client to reset counter when their counter is valid",2023-02-20T12:02:27Z
e788f1ae6b4245fd3dd3b005d45843b2489edda0,"Add option to run standard & revised ITs manually on PRs (#13814)

Create the docker image in case of maven dependencies cache restore failure too as env.sh file is removed on maven rebuild.
Increase java heap size for security IT failing with error",2023-02-20T10:45:15Z
882ae9f002d5f0c845e4a03d633a1959737066dc,"Speed up composite key joins on IndexedTable. (#13516)

* Speed up composite key joins on IndexedTable.

Prior to this patch, IndexedTable indexes are sorted IntList. This works
great when we have a single-column join key: we simply retrieve the list
and we know what rows match. However, when we have a composite key, we
need to merge the sorted lists. This is inefficient when one is very dense
and others are very sparse.

This patch switches from sorted IntList to IntSortedSet, and changes
to the following intersection algorithm:

1) Initialize the intersection set to the smallest matching set from the
   various parts of the composite key.

2) For each element in that smallest set, check other sets for that element.
   If any do *not* include it, then remove the element from the intersection
   set.

This way, complexity scales with the size of the smallest set, not the
largest one.

* RangeIntSet stuff.",2023-02-18T06:01:01Z
85d36be0853b6eaa5f2f94be3028a91291ed56b3,"Information schema now uses numeric column types (#13777)

Change to use SQL schemas to allow null numeric columns

* Updated docs",2023-02-17T22:39:31Z
08b5951cc53c4fe474a129500c62a6adad78337f,"merge druid-core, extendedset, and druid-hll into druid-processing to simplify everything (#13698)

* merge druid-core, extendedset, and druid-hll into druid-processing to simplify everything
* fix poms and license stuff
* mockito is evil
* allow reset of JvmUtils RuntimeInfo if tests used static injection to override",2023-02-17T22:27:41Z
8d03ace1b4d7d24b6c978f273d2bc593c6abf995,"Use K3S instead of minikube for integration tests (#13782)

We are seeing failures on GHA while using minikube so switching to K3S instead.",2023-02-17T17:36:30Z
bc8b710b7ec78d5e92d58f97b56e8e0611e154a0,Fix broken link (#13767),2023-02-17T17:02:12Z
ddae7974c2c1113ec63ccb4d1b43c48f23b28a8a,"Don't run UTs, ITs when there are only docs, helm and console changes.  (#13812)

* Don't run UTs, ITs for docs, helm and console changes

* Test

* right place

* Revert test

* Remove ITs from ignore list

* Update unit-and-integration-tests-unified.yml

* Update unit-and-integration-tests-unified.yml",2023-02-17T04:26:17Z
add2081f7c6d42f2845078044cd09b7cc6298339,"gha: add auto labeler for doc prs (#13791)

This adds an autolabeler GitHub action that will label any changes to the docs directories (docs and the Jupyter nb directory) as Area - Documentation.

The GHA will also remove the label if the PR changes and no longer touches files in those directories.",2023-02-16T06:35:34Z
1ca0edb8c9545b451ecc235ced5ea0188cbbf7d3,"Web console: Fixes query cancel NPE and more (#13786)

* add null icon

* empty string table cell

* enable views only if they will work

* make sure method exists

* use SQL compatible nulls for e2e tests",2023-02-15T23:02:50Z
460d8b8a2aca59b4712a1e7579055585b5b6a063,Add license header to template file (#13811),2023-02-15T12:12:15Z
e5ecb4d6aa6b6bc77c8d21e117c8e266079ad74e,"Flip boolean logic so the test description makes sense (#13805)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.local>",2023-02-15T10:37:49Z
333196d20717c9109665f717731c333939af4e7a,"Code cleanup & message improvements (#13778)

* Misc cleanup edits

Correct spacing
Add type parameters
Add toString() methods to formats so tests compare correctly
IT doc revisions
Error message edits
Display UT query results when tests fail

* Edit

* Build fix

* Build fixes",2023-02-15T09:52:54Z
e8330e95f59d24ef2882ba4670dc0ad746b6cf34,"Update Apache Kafka dependencies to 3.4.0 (#13802)

Release notes:
- https://downloads.apache.org/kafka/3.4.0/RELEASE_NOTES.html",2023-02-15T09:45:13Z
355cdbeb86faf71d30066c036f75652c3e926b69,helm: Fix PDB apiVersion to allow K8s 1.25+ deployment (#13783),2023-02-15T05:54:01Z
9ffaba9c7fc72495e1b65ffad67270af230bf6c0,"Fix MySQL drivers setup for Revised ITs (#13800)

* download both mysql drivers and use org.mariadb.jdbc.Driver for now

* use com.mysql.jdbc.Driver",2023-02-15T05:33:25Z
f67abf2e99c6ffe3f4f11256a3a170796ef4bae0,"Better logs for query errors (#13776)

* Better logs for query errors

* checkstyle",2023-02-14T23:55:58Z
f3e19f69bbf14a978afc8cd347fbe04df92e6ef8,"Support prometheus emitter (#13531)

modify helm chart to support scraping from prometheus automatically",2023-02-14T10:10:07Z
c1f283fd314f61950fa240f7cf31eed251173518,"Better sidecar support (#13655)

* Better sidecar support

* remove un-thrown exception from test

* Druid you are such a stickler about spelling :)

* Only require the primaryContainerName, no need to exclude containers",2023-02-14T05:26:15Z
fa4cab405fae1cc986306f865508e9e04c577d8c,fix bug with sql planner when virtual column capabilities are null (#13797),2023-02-14T02:27:23Z
842ee554de0556f190ed4bdc042d3ee6f54a210d,"Refinements to input-source specific table functions (#13780)

Refinements to table functions

Fixes various bugs
Improves the structure of the table function classes
Adds unit and integration tests",2023-02-14T00:21:27Z
306997be872067ddcb99557746a5e04736640774,"Add Perl 5 to druid requirements (#13708)

Without perl 5 I was unable to start druid using the instructions in the quickstart guide. I'm not certain what versions it might require, but the one that I got working was perl 5

> This is perl 5, version 36, subversion 0 (v5.36.0) built for x86_64-linux-thread-multi",2023-02-13T21:34:49Z
f09f83697df5daa5dd52c6f930d12c0c68233776,"fix array_agg to work with complex types and bugs with expression aggregator complex array handling (#13781)

* fix array_agg to work with complex types and bugs with expression aggregator complex array handling
* more consistent handling of array expressions, numeric arrays more consistently honor druid.generic.useDefaultValueForNull, fix array_ordinal sql output type",2023-02-13T06:01:39Z
38e620aa4cd5c85ef651a37c7f7cd9beb6d60920,"Operator conversion deny list (#13766)

### Description

This change adds a new config property `druid.sql.planner.operatorConversion.denyList`, which allows a user to specify
any operator conversions that they wish to disallow. A user may want to do this for a number of reasons, including security concerns. The default value of this property is the empty list `[]`, which does not disallow any operator conversions.

An example usage of this property is `druid.sql.planner.operatorConversion.denyList=[""extern""]`, which disallows the usage of the `extern` operator conversion. If the property is configured this way, and a user of the Druid cluster tries to submit a query that uses the `extern` function, such as the example given [here](https://druid.apache.org/docs/latest/multi-stage-query/examples.html#insert-with-no-rollup), a response with http response code `400` is returned with en error body similar to the following:

```
{
  ""taskId"": ""4ec5b0b6-fa9b-4c3a-827d-2308294e9985"",
  ""state"": ""FAILED"",
  ""error"": {
    ""error"": ""Plan validation failed"",
    ""errorMessage"": ""org.apache.calcite.runtime.CalciteContextException: From line 28, column 5 to line 32, column 5: No match found for function signature EXTERN(<CHARACTER>, <CHARACTER>, <CHARACTER>)"",
    ""errorClass"": ""org.apache.calcite.tools.ValidationException"",
    ""host"": null
  }
}
```",2023-02-10T17:59:26Z
477bc424d93ad5302049e2545988a06f24372983,"Fix GHA tests cache hit miss scenario (#13772)

* rebuild maven project or docker image in case of cache hit miss
* rebuild maven project in case of docker cache hit miss too
* fix docker-restore cache hit fail issue",2023-02-10T16:57:45Z
752964390e1c74446d14f136f5e73508cbf715fd,remove Travis CI (#13789),2023-02-10T09:46:56Z
d7b95988d7caf2f5df9a104154f31778be0abc8c,"Add missing documentation for constant post-aggregator (#13664)

Thanks @anshu-makkar , I was waiting for CI to complete yesterday. Failures seem unrelated, so merging.",2023-02-09T16:53:45Z
ffeda72abb40d8e849a95a6ccc1a76a870e45dd0,"fix filtering nested field virtual column when used with non nested column input (#13779)

* fix filtering nested field virtual column when used with non nested column input",2023-02-09T11:16:38Z
58d9720b0029f45c53c8b39c07141a1302c6e97d,"docs: notebook only for SQL tutorial (#13465)

CI Failures seem unrelated to docs

* docs: notebook only for SQL tutorial

* Update logical operators section

* Fix typo

* Adopt review suggestions

* Update examples/quickstart/jupyter-notebooks/sql-tutorial.ipynb

* Update examples, add link to keywords

* Update after review

* Update per review comments

* Add links",2023-02-09T04:04:53Z
714ac07b524fcdc4d5a81a8f58af91ed03c78be3,"Allow users to add additional metadata to ingestion metrics (#13760)

* Allow users to add additional metadata to ingestion metrics

When submitting an ingestion spec, users may pass a map of metadata
in the ingestion spec config that will be added to ingestion metrics.

This will make it possible for operators to tag metrics with other
metadata that doesn't necessarily line up with the existing tags
like taskId.

Druid clusters that ingest these metrics can take advantage of the
nested data columns feature to process this additional metadata.

* rename to tags

* docs

* tests

* fix test

* make code cov happy

* checkstyle",2023-02-09T02:07:23Z
d7a15be9bc29dfa3863dce76a8b93770a62cab7f,"Add assertions for counters from reports (#13726)

Adds assertions for counters to MSQ unit tests",2023-02-08T11:03:37Z
34c04daa9f731c0d3230062d9977fd67dd42a6f0,"Fix infinite iteration in http sync monitoring (#13731)

* Fix infinite iteration in http task runner

* Fix infinite iteration in http server view

* Add tests",2023-02-08T09:44:11Z
d925ebdc9e12b5bb176c0bd05d58f86c1d5acafe,"Bump app version in Helm Chart from 0.23.0 to 24.0.0 (#13341)

Co-authored-by: zemin <zemin.piao@adyen.com>",2023-02-08T06:18:47Z
0cf1fc3d552ed105036664ed7aad58c14d8cc7b9,"Indexing on multiple disks (#13476)

* Initial commit

* Simple UTs

* Parameterize tests

* Parameterized tests for k8s task runner

* Fix restore bug

* Refactor TaskStorageDirTracker

* Change CliPeon args",2023-02-08T06:01:34Z
5934d5fffee0aebf82f04b693a07a45c95a9798a,helm: Stop helm chart from failing if zkHosts is not set (#13746),2023-02-08T05:13:35Z
f684df4c22ce723c35e95307a748388dfe4e54f5,"Use an HllSketchHolder object to enable optimized merge (#13737)

* Use an HllSketchHolder object to enable optimized merge

HllSketchAggregatorFactory.combine had been implemented using a
pure pair-wise, ""make a union -> add 2 things to union -> get sketch""
algorithm.  This algorithm does 2 things that was CPU

1) The Union object always builds an HLL_8 sketch regardless of the
  target type.  This means that when the target type is not HLL_8, we
  spent CPU cycles converting to HLL_8 and back over and over again
2) By throwing away the Union object and converting back to the
  HllSketch only to build another Union object, we do lots and lots
  of copy+conversions of the HllSketch

This change introduces an HllSketchHolder object which can hold onto
a Union object and delay conversion back into an HllSketch until
it is actually needed.  This follows the same pattern as the
SketchHolder object for theta sketches.",2023-02-07T21:57:48Z
dcdae84888f71f92c808ed2b238f42cc64bda9a6,"Add server view initialization metrics (#13716)

* Add server view init metrics

* Test coverage

* Rename metrics",2023-02-07T14:32:00Z
a0f8889f2316b57592e2e43c28aacfa2b92cd1ab,Robust handling and management of S3 streams for MSQ shuffle storage (#13741),2023-02-07T08:47:37Z
b33962cab7809a750e7af5c0e0b6fdf009b347b3,"Upgrade typescript and other dependencies (#13762)

* Bump zustand, licenses

* Bump TypeScript, Eslint, use type imports

* Switch to react-shallow-renderer from enzyme

* Update ts-loader",2023-02-07T07:12:54Z
2d3bee85457851aa96d4d0ed937a19d17113d83c,"various nested column (and other) fixes (#13732)

changes:
* modified druid schema column type compution to special case COMPLEX<json> handling to choose COMPLEX<json> if any column in any segment is COMPLEX<json>
* NestedFieldVirtualColumn can now work correctly on any type of column, returning either a column selector if a root path, or nil selector if not
* fixed a random bug with NilVectorSelector when using a vector size larger than the default and druid.generic.useDefaultValueForNull=false would have the nulls vector set to all false instead of true
* fixed an overly aggressive check in ExprEval.ofType when handling complex types which would try to treat any string as base64 without gracefully falling back if it was not in fact base64 encoded, along with special handling for complex<json>
* added ExpressionVectorSelectors.castValueSelectorToObject and ExpressionVectorSelectors.castObjectSelectorToNumeric as convience methods to cast vector selectors using cast expressions without the trouble of constructing an expression. the polymorphic nature of the non-vectorized engine (and significantly larger overhead of non-vectorized expression processing) made adding similar methods for non-vectorized selectors less attractive and so have not been added at this time
* fix inconsistency between nested column indexer and serializer in handling values (coerce non primitive and non arrays of primitives using asString)
* ExprEval best effort mode now handles byte[] as string
* added test for ExprEval.bestEffortOf, and add missing conversion cases that tests uncovered
* more tests more better",2023-02-07T03:48:02Z
9c5b61e114a6da4f1e8149ea0f1014aebc5f55db,"Fallback virtual column (#13739)

* Fallback virtual column

This virtual columns enables falling back to another column if
the original column doesn't exist.  This is useful when doing
column migrations and you have some old data with column X,
new data with column Y and you want to use Y if it exists, X
otherwise so that you can run a consistent query against all of
the data.",2023-02-07T03:36:50Z
f28c06515b8ac1c2c3592a5d601ecd5df66c94de,Auto-detect docker-compose (#13754),2023-02-06T15:59:45Z
9100a61bf61ba2b9b018e5ec8f7be178eff22243,"Fix NPE in postCleanupStage if stage doesn't exist (#13742)

With fault tolerance enabled in MSQ, not all the work orders might be populated if the worker is restarted. In case it gets the request for cleaning up the stage which is not present in the worker's map, it can throw an NPE. Added a check to ensure that the stage is present in the map before cleaning it up, or else logging it as a warning.",2023-02-06T13:43:39Z
c5835c29a142861741cd546e26c7132df9b3698b,"Use durable super sorter intermediate storage only with composable storage (#13748)

* This enables usage of durable storage connector only in case the composable storage feature is enabled.",2023-02-06T13:29:18Z
e16639121f576b06ee4f66824def9ce3a7f24533,"Local pathing for tests (#13753)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-02-04T04:11:17Z
c06631037db3c7a4fa76c7ca3980e6655480c04a,"Moving to SHA based cache key (#13751)

Co-authored-by: Elliott Freis <elliottfreis@Elliott-Freis.earth.dynamic.blacklight.net>",2023-02-03T23:49:17Z
bea18dc9e432994c64811a5077fa45c51cb71ca5,Update basic auth examples (#13750),2023-02-03T22:45:48Z
758024877058b31c1025073a9041c15ef99c3857,"Update api.md (#13727)

Added missing '/status' in HTTP status request",2023-02-02T18:43:22Z
f022a9f2469d36666a98087f577d19d52fb06223,"When a task fails and doesn't throw an exception, report it correctly… (#13668)

* When a task fails and doesn't throw an exception, report it correctly in mm-less druid

* Removing unthrown exception from test",2023-02-02T17:04:18Z
6cb842e76e2605ed6c4c53279b1a49d67c471d97,update snapshots if cache restore failed otherwise run test normally (not all test mvn dependencies are downloaded during build phase due to skipTests) (#13740),2023-02-02T16:09:56Z
440212c5f991faa3450c77a93c3af847836f5e6e,"Fix GHA workflow maven build erroring incase of version updates (#13735)

* build maven sequentially

* run mvn tests in offline mode after retrieving cache",2023-02-02T04:32:57Z
7c188d80b848416b5ac4fed17373b41c39d819b8,Make batch segment allocation logs less noisy (#13725),2023-02-02T04:24:53Z
33efd5ab1d06d406a0f91fe33c89b5be9652a2ea,"docs: Refresh the update data tutorial (#13641)

Merging regardless of nit since topic is in better shape.

* refresh the update data tutorial

* Apply suggestions from code review

Co-authored-by: Jill Osborne <jill.osborne@imply.io>

---------

Co-authored-by: Jill Osborne <jill.osborne@imply.io>",2023-02-02T02:18:16Z
f629643c50aee2708030ac6071f29cff1db487bf,"Fix value of lookup sync period in docs (#13695)

* Fix lookup docs

* Fix spelling

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-02-02T02:12:00Z
7f830b20d76b7c5c2d7541d632f3b1c005251ade,fixed init commands for both mysql and postgresql (#13713),2023-02-02T02:07:31Z
cfc3115a5957ce8663fc27429a4494034d259a73,"Compaction history returns empty list instead of 404 when not found (#13730)

* Compaction history returns empty list instead of 404 when not found

* checkstyle",2023-02-02T01:44:07Z
76e79c7db7dfebfc04efbbed148ff9d7e717f48d,Suppress CVEs (#13733),2023-02-01T12:18:41Z
74ff848ce54cd389bdae6153322ba8cbc32d5cb2,Fixing  incorrect filtering of nulls in an array when ingesting for JSON and Avro (#13712),2023-02-01T12:15:08Z
c95a26cae3ecafca430326ae8302fefda59b9fbd,Migrate ITs from Travis to GHA (#13681),2023-02-01T11:31:29Z
7a3bd89a854c73879ccdc51ce35071f81109b24c,"Dimension dictionary reduce locking (#13710)

* perf: introduce benchmark for StringDimensionIndexer

jdk11 -- Benchmark                                                       Mode  Cnt      Score     Error  Units
StringDimensionIndexerProcessBenchmark.parallelReadWrite                 avgt   10  30471.552 ±  456.716  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelReader  avgt   10  18069.863 ±  327.923  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelWriter  avgt   10  67676.617 ± 2351.311  us/op
StringDimensionIndexerProcessBenchmark.soloReader                        avgt   10   1048.079 ±    1.120  us/op
StringDimensionIndexerProcessBenchmark.soloWriter                        avgt   10   4629.769 ±   29.353  us/op

* perf: switch DimensionDictionary to StampedLock

jdk11 - Benchmark                                                        Mode  Cnt      Score      Error  Units
StringDimensionIndexerProcessBenchmark.parallelReadWrite                 avgt   10  37958.372 ± 1685.206  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelReader  avgt   10  31192.232 ± 2755.365  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelWriter  avgt   10  58256.791 ± 1998.220  us/op
StringDimensionIndexerProcessBenchmark.soloReader                        avgt   10   1079.440 ±    1.753  us/op
StringDimensionIndexerProcessBenchmark.soloWriter                        avgt   10   4585.690 ±   13.225  us/op

* perf: use optimistic locking in DimensionDictionary

jdk11 - Benchmark                                                        Mode  Cnt      Score     Error  Units
StringDimensionIndexerProcessBenchmark.parallelReadWrite                 avgt   10   6212.366 ± 162.684  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelReader  avgt   10   1807.235 ± 109.339  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelWriter  avgt   10  19427.759 ± 611.692  us/op
StringDimensionIndexerProcessBenchmark.soloReader                        avgt   10    194.370 ±   1.050  us/op
StringDimensionIndexerProcessBenchmark.soloWriter                        avgt   10   2871.423 ±  14.426  us/op

* perf: refactor DimensionDictionary null handling to need less locks

jdk11 - Benchmark                                                        Mode  Cnt      Score      Error  Units
StringDimensionIndexerProcessBenchmark.parallelReadWrite                 avgt   10   6591.619 ±  470.497  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelReader  avgt   10   1387.338 ±  144.587  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelWriter  avgt   10  22204.462 ± 1620.806  us/op
StringDimensionIndexerProcessBenchmark.soloReader                        avgt   10    204.911 ±    0.459  us/op
StringDimensionIndexerProcessBenchmark.soloWriter                        avgt   10   2935.376 ±   12.639  us/op

* perf: refactor DimensionDictionary add handling to do a little less work

jdk11 - Benchmark                                                        Mode  Cnt      Score    Error  Units
StringDimensionIndexerProcessBenchmark.parallelReadWrite                 avgt   10   2914.859 ± 22.519  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelReader  avgt   10    508.010 ± 14.675  us/op
StringDimensionIndexerProcessBenchmark.parallelReadWrite:parallelWriter  avgt   10  10135.408 ± 82.745  us/op
StringDimensionIndexerProcessBenchmark.soloReader                        avgt   10    205.415 ±  0.158  us/op
StringDimensionIndexerProcessBenchmark.soloWriter                        avgt   10   3098.743 ± 23.603  us/op",2023-02-01T10:59:12Z
ec1e6ac8407066fe0f21835c733e1fb15b7d3b0c,"fix nested column handling of null and ""null"" (#13714)

* fix nested column handling of null and ""null""
* fix issue merging nested column value dictionaries that could incorrect lose dictionary values",2023-02-01T04:59:19Z
1beef30bb29af94156e8cd96407c23eeece2de3a,"Support  postaggregation function  as in Math.pow() (#13703)  (#13704)

Support postaggregation function as in Math.pow()",2023-01-31T17:25:04Z
51dfde02840017092486fb75be2b16566aff6a19,"Add maxInputBytesPerWorker as query context parameter (#13707)

* Add maxInputBytesPerWorker as query context parameter

* Move documenation to msq specific docs

* Update tests

* Spacing

* Address review comments

* Fix test

* Update docs/multi-stage-query/reference.md

* Correct spelling mistake

---------

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>",2023-01-31T15:25:28Z
698670c88e3993be971d5c7dda5fed281e32f6de,"update core Apache Kafka dependencies to 3.3.2 (#13717)

Release notes:
- https://downloads.apache.org/kafka/3.3.2/RELEASE_NOTES.html",2023-01-28T05:00:01Z
356b0e37cfa95506174a8536684c3ae4420ee197,"Tutorial: Query view (#13565)

* Tutorial: Query view

* Removed duplicate file

* Update tutorial-sql-query-view.md

* Update tutorial-sql-query-view.md

* Update tutorial-sql-query-view.md

* Updated after review

* Update docs/tutorials/tutorial-sql-query-view.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update tutorial-sql-query-view.md

Update title

* Update sidebars.json

fix merge conflict w/ sidebar

* address spelling ci

---------

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-01-27T22:29:43Z
3b62d7929c6a291acfd1b76383ddeda1e044c414,"Web console: Data loader should allow for multiline JSON messages in kafka (#13709)

* stricter

* data loader should allow for mulit-line json

* add await

* kinesis also",2023-01-26T05:23:18Z
6164c420a15f7970b9fa6e1882893ad5e9fcaf48,"Create update.md (#13451)

* Create update.md

Important Line highlighted

* Update docs/data-management/update.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-01-26T00:23:40Z
9021161c8cc1fcff801b62574abb134c944418e9,"doc: fix markdown spacing (#13683)

* doc: fix markdown spacing

* fix spacing",2023-01-26T00:22:49Z
17c0167248035b7ff37d1b9407c13395276fda25,"Additional native query tests for unnest datasource (#13554)

Native tests for the unnest datasource.",2023-01-25T23:57:52Z
00cee329bde326bde8ef2071b1ffc1970c5c328c,pitfall when using combining input source (#13639),2023-01-25T20:50:19Z
706b8a02270e68090ebcdd67a170df0007454bd2,"Adjust Operators to be Pausable (#13694)

* Adjust Operators to be Pausable

This enables ""merge"" style operations that
combine multiple streams.

This change includes a naive implementation
of one such merge operator just to provide
concrete evidence that the refactoring is
effective.",2023-01-24T04:52:06Z
016c881795c03fc6a107f46243ffc71854088e53,"Add API to return automatic compaction config history (#13699)

Add a new API to return the history of changes to automatic compaction config history to make it easy for users to see what changes have been made to their auto-compaction config.

The API is scoped per dataSource to allow users to triage issues with an individual dataSource. The API responds with a list of configs when there is a change to either the settings that impact all auto-compaction configs on a cluster or the dataSource in question.",2023-01-23T21:23:45Z
90d445536da54fdd48631feea73eff63fb6d476f,"SQL version of unnest native druid function (#13576)

* adds the SQL component of the native unnest functionality in Druid to unnest SQL queries on a table dimension, virtual column or a constant array and convert them into native Druid queries
* unnest in SQL is implemented as a combination of Correlate (the comma join part) and Uncollect (the unnest part)",2023-01-23T20:53:31Z
f76acccff2b897f930b8971465f0ddf90385f99b,Allow using composed storage for SuperSorter intermediate data (#13368),2023-01-23T19:32:03Z
a516eb1a412f8d718d30bb62e7bc27f322d35197,"Port Calcite's tests to run with MSQ  (#13625)

* SQL test framework extensions

* Capture planner artifacts: logical plan, etc.
* Planner test builder validates the logical plan
* Validation for the SQL resut schema (we already have
  validation for the Druid row signature)
* Better Guice integration: properties, reuse Guice modules
* Avoid need for hand-coded expr, macro tables
* Retire some of the test-specific query component creation
* Fix query log hook race condition

Co-authored-by: Paul Rogers <progers@apache.org>",2023-01-19T16:51:11Z
fb26a1093d11f0574dbb905ac0d39c8eb3777312,"discover nested columns when using nested column indexer for schemaless ingestion (#13672)

* discover nested columns when using nested column indexer for schemaless
* move useNestedColumnIndexerForSchemaDiscovery from AppendableIndexSpec to DimensionsSpec",2023-01-18T20:57:28Z
1582d74f375bf97a26fbc3327c97f96906ab247d,"Fix Parquet Reader for schema-less ingestion need to read all columns (#13689)

* fix stuff

* address comments",2023-01-18T20:52:12Z
fa493f1ebca6b5fab3f1b0f4046e7a6f78511645,"Convert from DRUID_INTEGRATION_TEST_INDEXER to USE_INDEXER (#13684)

The old ITs use DRUID_INTEGRATION_TEST_INDEXER. The new ones use the
USE_INDEXER env var passed in from the build environment.",2023-01-18T16:51:42Z
7a54524076b99b0f6dc2456dccf7ef151ecc7f59,install node on runners (#13690),2023-01-18T10:49:57Z
44374f91bc77aa6e6a486559ac30540de14b1aff,"Fix broken links to Oracle JDK docs (#13687)

* Fix broken link for SSLContext java doc

* Update tls-support.md

* Update tls-support.md

* Update tls-support.md

* Update simple-client-sslcontext.md",2023-01-18T09:16:08Z
22630b0aabbaf683748b65a698ccbf966e1a54a4,"Much improved table functions (#13627)

Much improved table functions

* Revises properties, definitions in the catalog
* Adds a ""table function"" abstraction to model such functions
* Specific functions for HTTP, inline, local and S3.
* Extended SQL types in the catalog
* Restructure external table definitions to use table functions
* EXTEND syntax for Druid's extern table function
* Support for array-valued table function parameters
* Support for array-valued SQL query parameters
* Much new documentation",2023-01-17T16:41:57Z
59dfe7bed395adb8064b26220bc606c6d28adba7,Add new probe delay configurations into Helm Chart doc (#12997),2023-01-17T16:36:24Z
cc89c661d0aebf95bb85f01bfbedf76251e2f307,Move the tips section in PR template into comments block (#13676),2023-01-16T11:31:20Z
7ff3722cb95bfa14c92b822118c1453a3a3c6fcd,"Swap LazySingleton for Singleton (#13673)

* Swap LazySingleton for Singleton
* Initialize WebserverTestUtils properly",2023-01-16T05:38:37Z
ed623d626f5e821d9056e745bc3b8f344ea91784,"Support both Indexer and MiddleManager in ITs (#13660)

Support both indexer and MM in ITs

Support for the DRUID_INTEGRATION_TEST_INDEXER variable
Conditional client cluster configuration
Cleanup of OVERRIDE_ENV file handling
Enforce setting of test-specific env vars
Cleanup of unused bits",2023-01-14T22:34:06Z
566fc990e43991784ffcc9ffa64d763650842f36,"Semantic Implementations for ArrayListRAC (#13652)

* Semantic Implementations for ArrayListRAC

This adds implementations of semantic interfaces
to optimize (eliminate object creation) the
window processing on top of an ArrayListSegment.

Tests are also added to cover the interplay
between the semantic interfaces that are expected
for this use case",2023-01-14T03:42:34Z
4368b3a071719b50e8341626d967b8ae77caa786,"Migrate jdk8 unit tests from Travis to GHA (#13518)

* migrate UTs form Travis to GHA

* update permissions

* rename file

* set fetch depth to 1

* debugs remote branches

* test with github.ref variable

* fetch github.base_ref for diff

* nit

* test git diff

* run tests

* test code coverage failure scenario

* nit

* nit

* revert code changes

* revert code changes

* Setup diff-test-coverage before tests

* build distribution module at end in packaging check

* nit

* remove redundant steps in static-checks workflow

* drop jdk8 unit tests from Travis",2023-01-13T09:16:58Z
182c4fad299fca4864010fa7a07aa30c1f4dd9c5,"Kinesis: More robust default fetch settings. (#13539)

* Kinesis: More robust default fetch settings.

1) Default recordsPerFetch and recordBufferSize based on available memory
   rather than using hardcoded numbers. For this, we need an estimate
   of record size. Use 10 KB for regular records and 1 MB for aggregated
   records. With 1 GB heaps, 2 processors per task, and nonaggregated
   records, recordBufferSize comes out to the same as the old
   default (10000), and recordsPerFetch comes out slightly lower (1250
   instead of 4000).

2) Default maxRecordsPerPoll based on whether records are aggregated
   or not (100 if not aggregated, 1 if aggregated). Prior default was 100.

3) Default fetchThreads based on processors divided by task count on
   Indexers, rather than overall processor count.

4) Additionally clean up the serialized JSON a bit by adding various
   JsonInclude annotations.

* Updates for tests.

* Additional important verify.",2023-01-13T05:33:54Z
b5b740bbbb4be5f5e1bb5cf0cd9118137913c76c,"allow using nested column indexer for schema discovery (#13653)

* single typed ""root"" only nested columns now mimic ""regular"" columns of those types
* incremental index can now use nested column indexer instead of string indexer for discovered columns",2023-01-13T02:31:12Z
93dc01b6c5827b694c5f573b2c103ccdb7e00db0,fix broken table missing new line (#13666),2023-01-12T23:29:51Z
cb16a7f6a942c2a070832420d3962a2dce6cfdc4,Fix behaviour of downsampling buckets to a single key (#13663),2023-01-12T15:54:24Z
0a486c3bcfe9d6e59eb456934f659d9ec9ab231c,"Update forbidden apis with fixed executor (#13633)

* Update forbidden apis with fixed executor",2023-01-12T10:04:36Z
afb3d917772123ccc4ee46ac8bdb06b9ab00cdf3,"Add unit test for complex column grouping (#13650)

* Add unit test for complex column grouping

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>",2023-01-12T09:55:01Z
7f54ebbf478b9a2122edcc4bee4815ae86831927,"Fix Parquet Parser missing column when reading parquet file  (#13612)

* fix parquet reader

* fix checkstyle

* fix bug

* fix inspection

* refactor

* fix checkstyle

* fix checkstyle

* fix checkstyle

* fix checkstyle

* add test

* fix checkstyle

* fix tests

* add IT

* add IT

* add more tests

* fix checkstyle

* fix stuff

* fix stuff

* add more tests

* add more tests",2023-01-12T06:08:48Z
f97bcc69d3384ce4a1310a719f965b33565ed41a,"Docs: reword single server page (#13659)

* reword single server page

* fix typo

* Update docs/operations/single-server.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* spelling

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2023-01-12T05:12:52Z
a83d1cdf268aea882ac4b87e8e658373706e94ac,fix var name (#13657),2023-01-11T15:45:30Z
5ef689fc3ffd91a00c4f8bc08ed4c7a8287eb52c,"Cloud deep storage tests in new IT framework (S3, GCS, Azure) (#13535)

* MSQ s3 deep storage tests

* Fix license check

* Getting config values from env variables

* Added  s3TestUtils

* Merged AbstractITSQLBasedIngestionTest with AbstractITBatchIndexTest

* Fixing license issues

* Fixing checkstyle errors

* Fix spotbug errors

* Update s3util name in other files

* GCS and Azure deep storage tests

* Fix license and checkstyle errors

* Fix dependency error

* fix intellij check errors

* Copy credentials file in all containers

* Refactor and gcs file upload fix

* Fixing dependency check errors and codeQL warnings

* Fixing checkstyle errors

* Fixing intellij inspection errors

* Removing unrequired exceptions

* Addressing comments",2023-01-11T04:13:44Z
56076d33fbb02ead4cd317758106db6546723597,"Worker retry for MSQ task (#13353)

* Initial commit.

* Fixing error message in retry exceeded exception

* Cleaning up some code

* Adding some test cases.

* Adding java docs.

* Finishing up state test cases.

* Adding some more java docs and fixing spot bugs, intellij inspections

* Fixing intellij inspections and added tests

* Documenting error codes

* Migrate current integration batch tests to equivalent MSQ tests (#13374)

* Migrate current integration batch tests to equivalent MSQ tests using new IT framework

* Fix build issues

* Trigger Build

* Adding more tests and addressing comments

* fixBuildIssues

* fix dependency issues

* Parameterized the test and addressed comments

* Addressing comments

* fixing checkstyle errors

* Adressing comments

* Adding ITTest which kills the worker abruptly

* Review comments phase one

* Adding doc changes

* Adjusting for single threaded execution.

* Adding Sequential Merge PR state handling

* Merge things

* Fixing checkstyle.

* Adding new context param for fault tolerance.
Adding stale task handling in sketchFetcher.
Adding UT's.

* Merge things

* Merge things

* Adding parameterized tests
Created separate module for faultToleranceTests

* Adding missed files

* Review comments and fixing tests.

* Documentation things.

* Fixing IT

* Controller impl fix.

* Fixing racy WorkerSketchFetcherTest.java exception handling.

Co-authored-by: abhagraw <99210446+abhagraw@users.noreply.github.com>
Co-authored-by: Karan Kumar <cryptoe@karans-mbp.lan>",2023-01-11T02:08:29Z
17936e2920df5c0f5c819b80403330c5e689cd6c,"Add an option to enable HSTS in druid services (#13489)

* Add an option to enable HSTS

* Fix code and add docs

* Deduplicate headers

* unused import

* Fix spelling",2023-01-10T17:01:51Z
2503095296b5a5f95c8d0fddc4e0ba88aa5db149,Publish SBOM artifacts (#13648),2023-01-10T10:38:10Z
74a76c74b111d3f6dafbbb0b41926ca9aa6f7bed,Updating dependency check version (#13649),2023-01-10T09:13:19Z
41fdf6eafbf3ff4bb67909ba15a2eaeb648dd036,"Quote and escape literals in JDBC lookup to allow reserved identifiers. (#13632)

* Quote and escape table, key and column names.

* fix typo.

* More select statements.

* Derby lookup tests create quoted identifiers so it's compatible.

* Use Stringutils.replace() utility.

* quote the filter string.

* Squish doubly quote usage into a single function.

* Add parameterized test with reserved identifiers.

* few changes.",2023-01-10T06:41:54Z
62a105ee65af2911303ef9ba30c411c1444a8bac,"Add context to HadoopIngestionSpec (#13624)

* add context to HadoopIngestionSpec

* fix alert",2023-01-10T00:37:02Z
a800dae87a2bfb397cf8ac2edd8967ab72f05c6a,doc: List Protobuf as a supported format (#13640),2023-01-06T23:09:37Z
6bbf4266b2140ddf7b4a4a1ab79919fb6724e52d,"docs: documentation for unnest datasource (#13479)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2023-01-06T19:41:11Z
f1821a7c18bf938882114e8435dfda696affe871,"Add Sort Operator for Window Functions (#13619)

* Addition of NaiveSortMaker and Default implementation

Add the NaiveSortMaker which makes a sorter
object and a default implementation of the
interface.

This also allows us to plan multiple different window 
definitions on the same query.",2023-01-06T08:27:18Z
4ee4d99b8df95974722140eeb7d8de7ffc64c788,better error reporting (#13636),2023-01-06T04:00:33Z
fdc8aa283340054d94b3fde593a82aed5b2ba0f4,better show totals when grouping (#13631),2023-01-06T02:06:32Z
a8ecc48ffe9a2b04cac7b7b14a5300028e8bf13d,"Validate response headers and fix exception logging (#13609)

* Validate response headers and fix exception logging

A class of QueryException were throwing away their
causes making it really hard to determine what's
going wrong when something goes wrong in the SQL
planner specifically.  Fix that and adjust tests
 to do more validation of response headers as well.

We allow 404s and 307s to be returned even without 
authorization validated, but others get converted to 403",2023-01-05T22:15:15Z
7a7874a952bd5b1a39b08f1f33ce395cc1452286,Update docker-compose to use druid 24.0.1 (#13623),2023-01-04T13:16:40Z
365474ff1d0518cb5d91a7bc7096dabef463cb34,"New IT Framework - InputSource and InputFormat Tests (#13597)

* New IT Framework - InputSource and InputFormat Tests

* Fixing checkstyle errors

* Updating InputSource setup

* Updating queries to use druid DB

* Making metadata setup queries to be idempotent

* Restore intellij files",2023-01-04T05:10:05Z
200c547d02bcccc07de2a82789fd42969c99bbeb,"Include info about Hadoop 3 artifacts in release guide (#13594)

* Update release guide for hadoop3

* Update instructions to verify checksum and signature

* Update email lists",2023-01-03T08:23:53Z
36e67655966815a79151bf94a4bb912362564946,Fix flaky test (#13603),2023-01-03T08:22:05Z
313d937236efa242bc7b3ae144b50405a0499761,"Switch operators to a push-style API (#13600)

* Switch operators to a push-style API

This API generates nice stack-traces of processing
for Operators.",2022-12-23T06:01:55Z
8773d619a2c8be49f52d22483242e0c9a653f200,"Web console: tidy up stage UI (#13615)

* show the right info

* sort indicator

* nicer marker

* move error icon",2022-12-22T20:52:16Z
78ae0b75338016dd02245eeb83715c521daad41d,"Upgrade to netty 4.1.86.Final to address CVEs (#13604)

This commit addresses the following CVEs:
- CVE-2021-43797
- CVE-2022-41881",2022-12-22T20:14:01Z
af05cfa78c10d3b801413b78b5064ef7fda5aa13,"Fix shutdown in httpRemote task runner (#13558)

* Fix shutdown in httpRemote task runner

* Add UT",2022-12-22T09:20:04Z
0d97e658b2ef65903cf7484b5fdaf115631d0304,"Docs: Update quickstart instructions (#13611)

Changes:
- Remove specification of a Druid version in the quickstart, because the previous step
instructs downloading the latest version anyway.
- Mention usage of memory parameter in the quickstart",2022-12-22T06:21:08Z
7b92b851684d4bc816ec701bcef8b22ad57ba095,"Unify DummyRequest with MockHttpServletRequest (#13602)

We had 2 different classes both creating fake
instances of an HttpServletRequest, this makes
it to that we only have one in a common location",2022-12-22T04:15:08Z
fd63e5a5142b458616157ce857f2c1eeae3eac2a,"fix issue with jdbc and query metrics (#13608)

* fix issue with metrics emitting and jdbc results by getting yielder from query processing thread

* more better",2022-12-22T03:32:53Z
df5576853513b0394644f9af9f28a6badaa2de44,"Add CodeQL workflow (#13477)

* workflower: Add CodeQL workflow

* add modified CodeQL build config",2022-12-21T03:54:39Z
6c44dd817547fd87ed408cc5be2fc7fc6d8d10d5,"perf: core/TextReader for faster json ingestion (#13545)

* perf: provide a custom utf8 specific buffered line iterator (benchmark)

Benchmark                         Mode  Cnt     Score     Error  Units
JsonLineReaderBenchmark.baseline  avgt   15  3459.871 ± 106.175  us/op

* perf: provide a custom utf8 specific buffered line iterator

Benchmark                         Mode  Cnt     Score    Error  Units
JsonLineReaderBenchmark.baseline  avgt   15  3022.053 ± 51.286  us/op

* perf: provide a custom utf8 specific buffered line iterator (more tests)

* perf: provide a custom utf8 specific buffered line iterator (pr feedback)

Ensure field visibility is as limited as possible

Null check for buffer in constructor

* perf: provide a custom utf8 specific buffered line iterator (pr feedback)

Remove additional 'finished' variable.

* perf: provide a custom utf8 specific buffered line iterator (more tests and bugfix)",2022-12-20T07:12:37Z
c1e2656644ab728a8bff466b178ee5094205b2ae,Fix scope of dependencies in protobuf-extensions pom (#13593),2022-12-19T08:26:55Z
0efd0879a83191ac550cded6122451ba4bf91194,"Unify the handling of HTTP between SQL and Native (#13564)

* Unify the handling of HTTP between SQL and Native

The SqlResource and QueryResource have been
using independent logic for things like error
handling and response context stuff.  This
became abundantly clear and painful during a
change I was making for Window Functions, so
I unified them into using the same code for
walking the response and serializing it.

Things are still not perfectly unified (it would
be the absolute best if the SqlResource just
took SQL, planned it and then delegated the
query run entirely to the QueryResource), but
this refactor doesn't take that fully on.

The new code leverages async query processing
from our jetty container, the different
interaction model with the Resource means that
a lot of tests had to be adjusted to align with
the async query model.  The semantics of the
tests remain the same with one exception: the
SqlResource used to not log requests that failed
authorization checks, now it does.",2022-12-19T08:25:33Z
07597c687d205f2fa3b0bdf0ca310eb8844ad2bf,Docs: Remove large data file (#13595),2022-12-19T07:44:22Z
ee890965f493a2752711c78459455d5acb895d9a,"LocalInputSource: Serialize File paths without forcing resolution. (#13534)

* LocalInputSource: Serialize File paths without forcing resolution.

Fixes #13359.

* Add one more javadoc.",2022-12-19T06:17:36Z
09d8b1644768bd3f8ccf14b9552439a0a3f59bee,"Document shouldFinalize for sketches that have the parameter (#13524)

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-12-17T18:48:06Z
e34e56295faa51dac4faa5117c2e34528dd8f39c,"Suppress CVE-2022-1278, CVE-2022-2048, CVE-2022-3509, CVE-2022-40152 (#13590)",2022-12-17T14:39:52Z
e23abc710aa2882be9d350b97d2290b8e163691c,"Web console: default max workers to cluster capacity and simplify live reports (#13577)

* step

* better capacity

* start with capacity

* more compressed stats display

* better rule editor

* fix SQL data loader also

* update snapshots

* new line

* better formatting",2022-12-16T23:13:32Z
639decdf2eb4b59152a52c188dae97716d746e75,fix preview droping out of MSQ mode (#13586),2022-12-16T23:13:07Z
d9c27d6102a5e8f6dbc7500bac8d2eedc00baae4,docs: add index page and related stuff for jupyter tutorials (#13342),2022-12-16T21:33:50Z
1cc9bc9af9ca7c5697a2e8d6fbd4e0cc1164da5c,Suppress CVE-2022-45685 and CVE-2022-45693 from jettison-1.3 (#13585),2022-12-16T17:26:30Z
f42722e62725c3829c295fa815c6e48aac1e0600,"Set monotonically increasing worker capacity in start-druid-main (#13581)

This commit updates the task memory allocation logic.
- min task count is 2 and max task count is number of cpus on the machine
- task count increases wrt total task memory
- task memory increases from 512m to 2g",2022-12-16T10:04:30Z
d9e5245ff0222d8f0b0650e6a1e220bacd4714a2,"allow string dimension indexer to handle byte[] as base64 strings (#13573)

This PR expands `StringDimensionIndexer` to handle conversion of `byte[]` to base64 encoded strings, rather than the current behavior of calling java `toString`. 

This issue was uncovered by a regression of sorts introduced by #13519, which updated the protobuf extension to directly convert stuff to java types, resulting in `bytes` typed values being converted as `byte[]` instead of a base64 string which the previous JSON based conversion created. While outputting `byte[]` is more consistent with other input formats, and preferable when the bytes can be consumed directly (such as complex types serde), when fed to a `StringDimensionIndexer`, it resulted in an ugly java `toString` because `processRowValsToUnsortedEncodedKeyComponent` is fed the output of `row.getRaw(..)`. Converting `byte[]` to a base64 string within `StringDimensionIndexer` is consistent with the behavior of calling `row.getDimension(..)` which does do this coercion (and why many tests on binary types appeared to be doing the expected thing).

I added some protobuf `bytes` tests, but they don't really hit the new `StringDimensionIndexer` behavior because they operate on the `InputRow` directly, and call `getDimension` to validate stuff. The parser based version still uses the old conversion mechanisms, so when not using a flattener incorrectly calls `toString` on the `ByteString`. I have encoded this behavior in the test for now, if we either update the parser to use the new flattener or just .. remove parsers we can remove this test stuff.",2022-12-16T09:20:17Z
9ae7a36ccd05ec464942b0d0ae3d25578ac55e38,"improve nested column storage format for broader compatibility (#13568)

* bump nested column format version
changes:
* nested field files are now named by their position in field paths list, rather than directly by the path itself. this fixes issues with valid json properties with commas and newlines breaking the csv file meta.smoosh
* update StructuredDataProcessor to deal in NestedPathPart to be consistent with other abstract path handling rather than building JQ syntax strings directly
* add v3 format segment and test",2022-12-15T23:39:26Z
7f3c117e3ab0971dd52180ac99d4da6cc092b598,"SQL: Improve docs around casts. (#13466)

Main change: clarify that the ""default value"" for casts only applies if
druid.generic.useDefaultValueForNull = true.

Secondary change: adjust a bunch of wording from future to present tense.",2022-12-15T23:01:40Z
668d1fad6be616fe3c6b78feb74aef698896b520,"docs: notebook only for API tutorial (#13345)

* docs: notebook for API tutorial

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* address the other comments

* typo

* add commentary to outputs

* address feedback from will

* delete unnecessary comment

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-12-15T21:16:07Z
d6949b1b79df67e6a031ceb074461585e48b1d27,"Track input processedBytes with MSQ ingestion (#13559)

Follow up to #13520

Bytes processed are currently tracked for intermediate stages in MSQ ingestion.
This patch adds the capability to track the bytes processed by an MSQ controller
task while reading from an external input source or a segment source.

Changes:
- Track `processedBytes` for every `InputSource` read in `ExternalInputSliceReader`
- Update `ChannelCounters` with the above obtained `processedBytes` when incrementing
the input file count.
- Update task report structure in docs

The total input processed bytes can be obtained by summing the `processedBytes` as follows:

totalBytes = 0
for every root stage (i.e. a stage which does not have another stage as an input):
    for every worker in that stage:
        for every input channel: (i.e. channels with prefix ""input"", e.g. ""input0"", ""input1"", etc.)
            totalBytes += processedBytes",2022-12-15T20:50:01Z
431a1195cae61edac03e6ed5aaeb73c736bd0ea5,"Suppress CVE-2022-1471 from snakeyaml (#13557)

* Upgrade kube client to 17.0.0

* Remove snakeyaml CVE suppression

* Update licenses.yaml

* Revert changes and suppress cve",2022-12-15T16:09:14Z
49cbfdff83c3666f8cc029b683b1747e452b7975,"Fix cool nested column bug caused by not properly validating that global id is present in global dictionary before lookup up local id (#13561)

This commit fixes a bug with nested column ""value set"" indexes caused by not properly
validating that the globalId looked up for value is present in the global dictionary prior to
looking it up in the local dictionary, which when ""adjusting"" the global ids for value type
can cause incorrect selection of value indexes.

To use an example of a variant typed nested column with 3 values `[""1"", null, -2]`.
The string dictionary is `[null, ""1""]`, the long dictionary is `[-2]` and our local dictionary is `[0, 1, 2]`.

The code for variant typed indexes checks if the value is present in all global dictionaries
and returns indexes for all matches. So in this case, we first lookup ""1"" in the string dictionary,
find it at global id 1, all is good. Now, we check the long dictionary for `1`, which due to 
`-(insertionpoint + 1)` gives us `-(1 + 2) = -2`. Since the global id space is actually stacked
dictionaries, global ids for long and double values must be ""adjusted"" by the size of string
dictionary, and size of string + size of long for doubles.

Prior to this patch we were not checking that the globalId is 0 or larger, we then immediately
looked up the `localDictionary.indexOf(-2 + adjustLong) = localDictionary.indexOf(-2 + 2) = localDictionary.indexOf(0)` ... which is an actual value contained in the dictionary! The fix is
to skip the longs completely since there were no global matches.

On to doubles, `-(insertionPoint + 1)` gives us `-(0 + 1) = -1`. The double adjust value is '3'
since 2 strings and 1 long, so `localDictionary.indexOf(-1 + 3)` = `localDictionary.indexOf(2)` 
which is also a real value in our local dictionary that is definitely not '1'.

So in this one case, looking for '1' incorrectly ended up matching every row.",2022-12-15T11:30:46Z
97bc0220c7a2b437581af55d9e3267c37ea46b1b,"Update task memory computation in start-druid (#13563)

Changes:
* Use 80% of memory specified for running services (versus 50% earlier).
* Tasks get either 512m / 1024m or 2048m now (versus 512m or 2048m earlier). 
* Add direct memory for router.",2022-12-15T05:36:16Z
2b605aa9cf987ccb8e9ace04f71214aa6b508ec4,"Multiple fixes for the MSQ stats merging piece which (#13463)

* Add validation checks to worker chat handler apis

* Merge things and polishing the error messages.

* Minor error message change

* Fixing race and adding some tests

* Fixing controller fetching stats from wrong workers.
Fixing race
Changing default mode to Parallel
Adding logging.
Fixing exceptions not propagated properly.

* Changing to kernel worker count

* Added a better logic to figure out assigned worker for a stage.

* Nits

* Moving to existing kernel methods

* Adding more coverage

Co-authored-by: cryptoe <karankumar1100@gmail.com>",2022-12-15T04:05:11Z
089d8da5610453549fc9c305046f0b7397500b47,"Support Framing for Window Aggregations (#13514)

* Support Framing for Window Aggregations

This adds support for framing  over ROWS
for window aggregations.

Still not implemented as yet:
1. RANGE frames
2. Multiple different frames in the same query
3. Frames on last/first functions",2022-12-15T02:04:39Z
2729e252951884998ab816b2d20940debdd5107d,"Link to java docs (#13478)

* add link to page about selecting a JRE

* add link to script also

* simplify text",2022-12-14T19:45:23Z
35c983a3510b357880cd1c4d2407d4296d054511,Use template file for adding table functions grammar (#13553),2022-12-14T16:22:09Z
58a3acc2c4c5d5d22098e15f7ff25d6e9baa8541,"Add InputStats to track bytes processed by a task (#13520)

This commit adds a new class `InputStats` to track the total bytes processed by a task.
The field `processedBytes` is published in task reports along with other row stats.

Major changes:
- Add class `InputStats` to track processed bytes
- Add method `InputSourceReader.read(InputStats)` to read input rows while counting bytes.
> Since we need to count the bytes, we could not just have a wrapper around `InputSourceReader` or `InputEntityReader` (the way `CountableInputSourceReader` does) because the `InputSourceReader` only deals with `InputRow`s and the byte information is already lost.
- Classic batch: Use the new `InputSourceReader.read(inputStats)` in `AbstractBatchIndexTask`
- Streaming: Increment `processedBytes` in `StreamChunkParser`. This does not use the new `InputSourceReader.read(inputStats)` method.
- Extend `InputStats` with `RowIngestionMeters` so that bytes can be exposed in task reports

Other changes:
- Update tests to verify the value of `processedBytes`
- Rename `MutableRowIngestionMeters` to `SimpleRowIngestionMeters` and remove duplicate class
- Replace `CacheTestSegmentCacheManager` with `NoopSegmentCacheManager`
- Refactor `KafkaIndexTaskTest` and `KinesisIndexTaskTest`",2022-12-13T13:24:42Z
7682b0b6b185e4879ba202b0b777fa655e3d4f59,"Analysis refactor (#13501)

Refactor DataSource to have a getAnalysis method()

This removes various parts of the code where while loops and instanceof
checks were being used to walk through the structure of DataSource objects
in order to build a DataSourceAnalysis.  Instead we just ask the DataSource
for its analysis and allow the stack to rebuild whatever structure existed.",2022-12-13T01:35:44Z
de5a4bafcbad7c05abd9ca528ab157e6a121dbbf,"Zero-copy local deep storage. (#13394)

* Zero-copy local deep storage.

This is useful for local deep storage, since it reduces disk usage and
makes Historicals able to load segments instantaneously.

Two changes:

1) Introduce ""druid.storage.zip"" parameter for local storage, which defaults
   to false. This changes default behavior from writing an index.zip to writing
   a regular directory. This is safe to do even during a rolling update, because
   the older code actually already handled unzipped directories being present
   on local deep storage.

2) In LocalDataSegmentPuller and LocalDataSegmentPusher, use hard links
   instead of copies when possible. (Generally this is possible when the
   source and destination directory are on the same filesystem.)",2022-12-13T01:28:24Z
8e386072e963e7933942eca91d5f32140b80e4c9,Druid automated quickstart: zookeeper in service list (#13550),2022-12-12T18:29:43Z
5a3d79a5d5612eb91aa6d8df57024aa60fc457ff,Removing unused exec service. (#13541),2022-12-12T09:09:42Z
7002ecd303984c15f31cc04e600bd6d53dd27ab8,"add protobuf flattener, direct to plain java conversion for faster flattening (#13519)

* add protobuf flattener, direct to plain java conversion for faster flattening, nested column tests",2022-12-09T20:24:21Z
4ebdfe226dc91a29384cf932633b727137a89f78,"Druid automated quickstart (#13365)

* Druid automated quickstart

* remove conf/druid/single-server/quickstart/_common/historical/jvm.config

* Minor changes in python script

* Add lower bound memory for some services

* Additional runtime properties for services

* Update supervise script to accept command arguments, corresponding changes in druid-quickstart.py

* File end newline

* Limit the ability to start multiple instances of a service, documentation changes

* simplify script arguments

* restore changes in medium profile

* run-druid refactor

* compute and pass middle manager runtime properties to run-druid
supervise script changes to process java opts array
use argparse, leave free memory, logging

* Remove extra quotes from mm task javaopts array

* Update logic to compute minimum memory

* simplify run-druid

* remove debug options from run-druid

* resolve the config_path provided

* comment out service specific runtime properties which are computed in the code

* simplify run-druid

* clean up docs, naming changes

* Throw ValueError exception on illegal state

* update docs

* rename args, compute_only -> compute, run_zk -> zk

* update help documentation

* update help documentation

* move task memory computation into separate method

* Add validation checks

* remove print

* Add validations

* remove start-druid bash script, rename start-druid-main

* Include tasks in lower bound memory calculation

* Fix test

* 256m instead of 256g

* caffeine cache uses 5% of heap

* ensure min task count is 2, task count is monotonic

* update configs and documentation for runtime props in conf/druid/single-server/quickstart

* Update docs

* Specify memory argument for each profile in single-server.md

* Update middleManager runtime.properties

* Move quickstart configs to conf/druid/base, add bash launch script, support python2

* Update supervise script

* rename base config directory to auto

* rename python script, changes to pass repeated args to supervise

* remove exmaples/conf/druid/base dir

* add docs

* restore changes in conf dir

* update start-druid-auto

* remove hashref for commands in supervise script

* start-druid-main java_opts array is comma separated

* update entry point script name in python script

* Update help docs

* documentation changes

* docs changes

* update docs

* add support for running indexer

* update supported services list

* update help

* Update python.md

* remove dir

* update .spelling

* Remove dependency on psutil and pathlib

* update docs

* Update get_physical_memory method

* Update help docs

* update docs

* update method to get physical memory on python

* udpate spelling

* update .spelling

* minor change

* Minor change

* memory comptuation for indexer

* update start-druid

* Update python.md

* Update single-server.md

* Update python.md

* run python3 --version to check if python is installed

* Update supervise script

* start-druid: echo message if python not found

* update anchor text

* minor change

* Update condition in supervise script

* JVM not jvm in docs",2022-12-09T19:04:02Z
55814888f54ebd6a909c60cc0638bf4ea306349f,"MSQ: Only look at sqlInsertSegmentGranularity on the outer query. (#13537)

The planner sets sqlInsertSegmentGranularity in its context when using
PARTITIONED BY, which sets it on every native query in the stack (as all
native queries for a SQL query typically have the same context).
QueryKit would interpret that as a request to configure bucketing for
all native queries. This isn't useful, as bucketing is only used for
the penultimate stage in INSERT / REPLACE.

So, this patch modifies QueryKit to only look at sqlInsertSegmentGranularity
on the outermost query.

As an additional change, this patch switches the static ObjectMapper to
use the processwide ObjectMapper for deserializing Granularities. Saves
an ObjectMapper instance, and ensures that if there are any special
serdes registered for Granularity, we'll pick them up.",2022-12-09T15:18:16Z
013a12e86f9292ae58a77c933437aa72653575bb,"Enhanced MSQ table functions (#13360)

* Enhanced MSQ table functions
* HTTP, LOCALFILES and INLINE table functions powered by
catalog metadata.
* Documentation",2022-12-08T21:56:02Z
d8e27eaab49d4c91dbec5e7e68a8a89bcb02b141,update error anchors (#13527),2022-12-08T21:18:35Z
91ef9872ecaaf29d67bf28f1e40adcefc55e806e,"MSQ: Improve TooManyBuckets error message, improve error docs. (#13525)

1) Edited the TooManyBuckets error message to mention PARTITIONED BY
   instead of segmentGranularity.

2) Added error-code-specific anchors in the docs.

3) Add information to various error codes in the docs about common
   causes and solutions.",2022-12-08T21:18:26Z
d85fb8cc4ecef574f1c032d09a2f2e1f61f6b1c3,"Web console: improve compaction status display (#13523)

* improve compaction status display

* even more accurate

* fix snapshot",2022-12-08T05:03:59Z
fbf76ad8f544c44e7f1443d8ed4e53a17388237e,"Remove stray reference to fix OOM while merging sketches (#13475)

* Remove stray reference to fix OOM while merging sketches

* Update future to add result from executor service

* Update tests and address review comments

* Address review comments

* Moved mock

* Close threadpool on teardown

* Remove worker task cancel",2022-12-08T01:47:55Z
69951273b8ef51ac1fa5fc08aa1ef74298514756,Fix typo in metric name (#13521),2022-12-08T01:11:23Z
b56855b837b73644c080f5305b2726b4518e10f5,"Update to native ingestion doc (#13482)

* Update to native ingestion doc

* Update docs/ingestion/native-batch.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update native-batch.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-12-07T09:38:19Z
9679f6a9b5c84a7618529f1739a6256e04c9da56,"Web console: add arrayOfDoublesSketch and other small fixes (#13486)

* add padding and keywords

* add arrayOfDoubles

* Update docs/development/extensions-core/datasketches-tuple.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/datasketches-tuple.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/datasketches-tuple.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/datasketches-tuple.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/datasketches-tuple.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* partiton int

* fix docs

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-12-07T05:21:49Z
c7229fc7871d6068bb488ce398ba8c1632f7151f,"Limit max batch size for segment allocation, add docs (#13503)

Changes:
- Limit max batch size in `SegmentAllocationQueue` to 500
- Rename `batchAllocationMaxWaitTime` to `batchAllocationWaitTime` since the actual
wait time may exceed this configured value.
- Replace usage of `SegmentInsertAction` in `TaskToolbox` with `SegmentTransactionalInsertAction`",2022-12-07T04:37:14Z
b25cf216d58ba93a884c89b37c1c42d0accd00ee,Better error message when theta_sketch_intersect is used on scalar expression (#13508),2022-12-07T04:05:43Z
37d8833125b21f2baae02a1316dc56926e24ac16,"fix bug with broker parallel merge metrics emitting, add wall time, fast/slow partition time metrics (#13420)",2022-12-07T01:50:59Z
83261f9641a750b121dbbb13b1cf53dd0c40f126,"Starting on Window Functions (#13458)

* Processors for Window Processing

This is an initial take on how to use Processors
for Window Processing.  A Processor is an interface
that transforms RowsAndColumns objects.
RowsAndColumns objects are essentially combinations
of rows and columns.

The intention is that these Processors are the start
of a set of operators that more closely resemble what
DB engineers would be accustomed to seeing.

* Wire up windowed processors with a query type that
can run them end-to-end.  This code can be used to
actually run a query, so yay!

* Wire up windowed processors with a query type that
can run them end-to-end.  This code can be used to
actually run a query, so yay!

* Some SQL tests for window functions. Added wikipedia 
data to the indexes available to the
SQL queries and tests validating the windowing
functionality as it exists now.

Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2022-12-06T23:54:05Z
cf472162a6cde2808df90e158cb1acfb7418f8bb,"fix issue with jetty graceful shutdown of data servers when druid.serverview.type=http (#13499)

* fix issue with http server inventory view blocking data node http server shutdown with long polling

* adjust

* fix test inspections",2022-12-06T23:52:44Z
136322d13b68f1e14552ea606ac70101ff6af400,clean install before license checks (#13502),2022-12-06T06:38:03Z
fda0a1aadde9d640cd4f9ff448a74ee5d2149d2a,"Set chatAsync default to true. (#13491)

This functionality was originally added in #13354.",2022-12-06T04:53:59Z
658a9c2d350e3ecb334cd7afc6faa29cd087091e,"Early stop on failed start (Alternative to #13087) (#13258)

* Make halt configurable. Don't halt in tests",2022-12-05T15:35:07Z
65945a686fa3ca950c18cf43d4fc5a91e572fa82,"Docs: Update docs for coordinator dynamic config (#13494)

* Update docs for useBatchedSegmentSampler

* Update docs for round robin assigment",2022-12-05T11:23:10Z
10bec54acc92ae109db6fee8e60bdcc641f2b36d,"Switching emitter. This will allow for a per feed emitter designation. (#13363)

* Switching emitter. This will allow for a per feed emitter designation.

This will work by looking at an event's feed and direct it to a specific emitter. If no specific feed is specified for a feed.
The emitter can direct the event to a default emitter.

* fix checkstyle issues and make docs for switching emitter use basic event feeds

* fix broken docs, add test, and guard against misconfigurations

* add module test
add switching emitter module test

* fix broken SwitchingEmitterModuleTest

* add apache license to top of test

* fix checkstyle issues

* address comments by adding javadocs, removing a todo, and making druid docs more clear",2022-12-05T10:34:34Z
45a8fa280c1f34f0401cfa43e1d38240d7d41f91,"Add SegmentAllocationQueue to batch SegmentAllocateActions (#13369)

In a cluster with a large number of streaming tasks (~1000), SegmentAllocateActions 
on the overlord can often take very long intervals of time to finish thus causing spikes 
in the `task/action/run/time`. This may result in lag building up while a task waits for a
segment to get allocated.

The root causes are:
- large number of metadata calls made to the segments and pending segments tables
- `giant` lock held in `TaskLockbox.tryLock()` to acquire task locks and allocate segments

Since the contention typically arises when several tasks of the same datasource try
to allocate segments for the same interval/granularity, the allocation run times can be
improved by batching the requests together.

Changes
- Add flags
   - `druid.indexer.tasklock.batchSegmentAllocation` (default `false`)
   - `druid.indexer.tasklock.batchAllocationMaxWaitTime` (in millis) (default `1000`)
- Add methods `canPerformAsync` and `performAsync` to `TaskAction`
- Submit each allocate action to a `SegmentAllocationQueue`, and add to correct batch
- Process batch after `batchAllocationMaxWaitTime`
- Acquire `giant` lock just once per batch in `TaskLockbox`
- Reduce metadata calls by batching statements together and updating query filters
- Except for batching, retain the whole behaviour (order of steps, retries, etc.)
- Respond to leadership changes and fail items in queue when not leader
- Emit batch and request level metrics",2022-12-05T08:30:07Z
91774196285ea51b823883394ef1bfe8f2417892,"Unnest functionality for Druid (#13268)

* Moving all unnest cursor code atop refactored code for unnest

* Updating unnest cursor

* Removing dedup and fixing up some null checks

* AllowList changes

* Fixing some NPEs

* Using bitset for allowlist

* Updating the initialization only when cursor is in non-done state

* Updating code to skip rows not in allow list

* Adding a flag for cases when first element is not in allowed list

* Updating for a null in allowList

* Splitting unnest cursor into 2 subclasses

* Intercepting some apis with columnName for new unnested column

* Adding test cases and renaming some stuff

* checkstyle fixes

* Moving to an interface for Unnest

* handling null rows in a dimension

* Updating cursors after comments part-1

* Addressing comments and adding some more tests

* Reverting a change to ScanQueryRunner and improving a comment

* removing an unused function

* Updating cursors after comments part 2

* One last fix for review comments

* Making some functions private, deleting some comments, adding a test for unnest of unnest with allowList

* Adding an exception for a case

* Closure for unnest data source

* Adding some javadocs

* One minor change in makeDimSelector of columnarCursor

* Updating an error message

* Update processing/src/main/java/org/apache/druid/segment/DimensionUnnestCursor.java

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* Unnesting on virtual columns was missing an object array, adding that to support virtual columns unnesting

* Updating exceptions to use UOE

* Renamed files, added column capability test on adapter, return statement and made unnest datasource not cacheable for the time being

* Handling for null values in dim selector

* Fixing a NPE for null row

* Updating capabilities

* Updating capabilities

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2022-12-03T02:48:25Z
78c1a2bd665411f7adc93b67e1a3d3995c931f29,"Remove limit from timeseries (#13457)

CI build failures seem unrelated to docs",2022-12-02T20:19:59Z
b76ff16d00b8a77539af18a36ab940fe31a5817b,"SQL test framework extensions (#13426)

SQL test framework extensions

* Capture planner artifacts: logical plan, etc.
* Planner test builder validates the logical plan
* Validation for the SQL resut schema (we already have
  validation for the Druid row signature)
* Better Guice integration: properties, reuse Guice modules
* Avoid need for hand-coded expr, macro tables
* Retire some of the test-specific query component creation
* Fix query log hook race condition",2022-12-02T17:11:59Z
30498c1f98346050a9121bae113ace4fd4059302,"Update gha & travis checks (#13412)

* update static-checks GHA to run sequentially
remove static-checks from travis.yml
move docs, web-console, packaging checks from travis to GHA

* nit

* nit

* groups all checks, runs on 8, 11, 17 jdks

* nit

* adds license info

* update permissions on scripts folder

* nit

* nit

* fix packaging check

* changes naming, cleans repo before license checks

* simulate failure

* bump up license checks

* test license checks failure

* test license checks failure

* test license checks failure

* verify gha script run exit code

* fail fast in case of shell script

* verified fail fast in case of shell script",2022-12-02T09:36:31Z
138a6de5074e787788d682eb5522775558c9e6a7,"Update nested columns docs (#13461)

* Update nested columns docs

(cherry picked from commit 04206c5179e0eb46a30d4113c7332daee46c390d)

* Update nested-columns.md

(cherry picked from commit 8085ee7217d90e0e3f133985a52ec2e0b0552992)",2022-12-01T18:47:32Z
cc307e4c29a8c73a4253667db02170809fd5c7ff,"Fix needless task shutdown on leader switch (#13411)

* Fix needless task shutdown on leader switch

* Add unit test

* Fix style

* Fix UTs",2022-12-01T13:01:08Z
f6f625ee088e955af01974c3850e095d7d52496a,"MSQ Reindex IT (#13433)

* MSQ Reindex IT

* Fixing checkstyle errors

* Addressing comments

* Addressing comments",2022-12-01T06:43:23Z
8395273099e82da9cbc1d8b25ed6971fc0085624,"Add unit tests for MSQ ingestion faults (#13439)

* Add unit tests for MSQ ingestion faults

* Resolve build failure

* Move test to MSQFaultTest

* Rename test",2022-12-01T04:41:49Z
2f3b97194fb579d33bd6063c3d3c2bba1bb6f84f,Fix harcoded version in pom file (#13460),2022-12-01T04:40:04Z
2fdcfffe40cb400db4015fd4ae37478b4779512e,don't render duration if aggregated (#13455),2022-12-01T03:21:07Z
cc2e4a80ff485a15a9bba1ea94bcf0915a35b264,"doc: add a basic JDBC tutorial (#13343)

* initial commit for jdbc tutorial

(cherry picked from commit 04c4adad71e5436b76c3425fe369df03aaaf0acb)

* add commentary

* address comments from charles

* add query context to example

* fix typo

* add links

* Apply suggestions from code review

Co-authored-by: Frank Chen <frankchen@apache.org>

* fix datatype

* address feedback

* add parameterize to spelling file. the past tense version was already there

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-12-01T00:25:35Z
6ba35f6d59357587187d648bb23a8229cd7493a2,update org.bouncycastle:bcprov-jdk15on 1.68 to 1.69 (#13440),2022-11-30T16:27:38Z
af164cbc100185f33388759df9e866b468925c58,"Fix an issue with WorkerSketchFetcher not terminating on shutdown (#13459)

* Fix an issue with WorkerSketchFetcher not terminating on shutdown

* Change threadpool name",2022-11-30T15:32:48Z
8ff1b2d5d41752ade0f915d4dac6f5d9b6f45542,"Revert ""Add filter in cloud object input source for backward compatibility (#13437)"" (#13450)

This reverts commit b12e5f300e7c2795ba3d9c7ef17fb64f4925b9c0.",2022-11-30T11:03:05Z
291ded22d5510148b39b113e7d0a492ba905d787,Update experimental features doc (#13452),2022-11-30T10:44:43Z
50963edcae70150f13520b619f167512d951a71b,Fix compile error in MSQSelectTest. (#13456),2022-11-29T23:51:03Z
5c520e0cf92fec6a336ff71d1eb36ddbd9503066,"Update LDAP configuration docs (#13245)

* Update LDAP configuration docs

* Updated after review

* Update auth-ldap.md

Updated.

* Update auth-ldap.md

* Updated spelling file

* Update docs/operations/auth-ldap.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/auth-ldap.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/auth-ldap.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update auth-ldap.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-11-29T17:26:32Z
79df11c16cd2fd1c6a9867855c42768a079917ff,"Improve unit test coverage for MSQ (#13398)

* add faults tests for the multi stage query

* add too many parttiions fault

* add toomanyinputfilesfault

* programmatically generate the file

* refactor

* Trigger Build",2022-11-29T11:57:04Z
4ed6255bdf213b15577d645a36e0e341a16e8d9d,"Convert errors based on implicit type conversion in multi value arrays to parse exception in MSQ (#13366)

* initial commit

* fix test

* push the json changes

* reduce the area of the try..catch

* Trigger Build

* review",2022-11-29T11:49:57Z
edd076ca696e3ebcb45c4b0219440a50add9e13a,"Remove duplicate FrameRowTooLargeException.java (#13441)

* Removing duplicate FrameRowTooLargeException.java

* Fixing intellij inspection",2022-11-29T03:16:59Z
100a2aa4a234f8c0dd84d34a9819484fb55b9bf6,"Update and document experimental features (#13348)

* Update and document experimental features
* Updated
* Update experimental-features.md
* Update docs/development/experimental-features.md
Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>
* Updated after review
* Updated
* Update materialized-view.md
* Update experimental-features.md
Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2022-11-29T02:31:28Z
d8f4353c43ccc2578b2c58488e10ff8dfb38b6c5,"Web console: be more robust to aux queries failing and improve kill tasks (#13431)

* be more robust to aux queries failing

* feedback fixes

* remove empty block

* fix spelling

* remove killAllDataSources from the console",2022-11-29T00:50:38Z
37b8d4861c928a9b9e5cbde74df7f8a8a5562e45,fix issues with nested data conversion (#13407),2022-11-28T20:29:43Z
4b58f5f23c2a1d23bb9dcb90ff13916659539ee3,fix KafkaInputFormat with nested columns by delegating to underlying inputRow map instead of eagerly copying (#13406),2022-11-28T20:28:07Z
a2d5e335f338fd58a84950633bbc3232210091c9,"Web console: Index spec dialog (#13425)

* add index spec dialog

* add sanpshot",2022-11-28T19:40:45Z
b12e5f300e7c2795ba3d9c7ef17fb64f4925b9c0,"Add filter in cloud object input source for backward compatibility (#13437)

https://github.com/apache/druid/pull/13027 PR replaces `filter` parameter with
`objectGlob` in ingestion input source. However, this will cause existing ingestion
jobs to fail if they are using a filter already. This PR adds old filter functionality
alongside objectGlob to preserve backward compatibility.",2022-11-28T17:34:33Z
58c896ea0b7c9896ed1cada416e872e5dfee7ff3,"ServiceClient: More robust redirect handling. (#13413)

Detects self-redirects, redirect loops, long redirect chains, and redirects to unknown servers.
Treat all of these cases as an unavailable service, retrying if the retry policy allows it.

Previously, some of these cases would lead to a prompt, unretryable error. This caused
clients contacting an Overlord during a leader change to fail with error messages like:

org.apache.druid.rpc.RpcException: Service [overlord] redirected too many times

Additionally, a slight refactor of callbacks in ServiceClientImpl improves readability of
the flow through onSuccess.",2022-11-28T16:54:46Z
656b6cdf62a66aac6ff8fb7b7823d6f056b37d13,Add MetricsVerifier to simplify verification of metric values in tests (#13442),2022-11-28T14:02:37Z
db7c29c6f9e39ccd482b3f5374e40ae31bfb7d0e,Correction to firehose migration doc (#13423),2022-11-28T04:54:27Z
b091b32f21f22cdb8daa48de06d18116d76f6780,"Fixes reindexing bug with filter on long column (#13386)

* fixes BlockLayoutColumnarLongs close method to nullify internal buffer.

* fixes other BlockLayoutColumnar supplier close methods to nullify internal buffers.

* fix spotbugs",2022-11-25T13:52:48Z
16385c71011aaf7568345657491d4350c26438ea,"Bump minimatch and replace in /web-console (#13396)

Bumps [minimatch](https://github.com/isaacs/minimatch) to 3.0.5 and updates ancestor dependency [replace](https://github.com/ALMaclaine/replace). These dependencies need to be updated together.


Updates `minimatch` from 3.0.4 to 3.0.5
- [Release notes](https://github.com/isaacs/minimatch/releases)
- [Commits](https://github.com/isaacs/minimatch/compare/v3.0.4...v3.0.5)

Updates `replace` from 1.2.1 to 1.2.2
- [Release notes](https://github.com/ALMaclaine/replace/releases)
- [Commits](https://github.com/ALMaclaine/replace/commits)

---
updated-dependencies:
- dependency-name: minimatch
  dependency-type: indirect
- dependency-name: replace
  dependency-type: direct:development
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-11-23T20:16:00Z
f524c68f08eb58047064e8234d320b51e83499ce,"Add mechanism for 'safe' memory reads for complex types (#13361)

* we can read where we want to
we can leave your bounds behind
'cause if the memory is not there
we really don't care
and we'll crash this process of mine",2022-11-23T08:25:22Z
c26b18c953e33b3bc886695e45836182357b593e,"Port CVE suppressions from 24.0.1 (#13415)

* Suppress jackson-databind CVE-2022-42003 and CVE-2022-42004
(cherry picked from commit 1f4d892c9a2dbc3ce6df1481fd4c6d242ba0ea8d)
* Suppress CVEs
(cherry picked from commit ed55baa8fa7d7f914a0addabb072d9ed47e1cd9f)
* Suppress vulnerabilities from druid-website package
(cherry picked from commit c0fb364f8049d53cd704e414e2ffeab6c49b012e)
* Add more suppressions for website package
(cherry picked from commit 9bba569ebd52c5480bf4219c420ed78eb053701f)",2022-11-23T06:05:33Z
be4914dcd9bea9e56f8c8ef5c966eb34b84739a1,fix off by one error in nested column range index (#13405),2022-11-22T20:46:06Z
7cf761cee42dae8c21e415b7ce3fd4191f199a38,"Prepare master branch for next release, 26.0.0 (#13401)

* Prepare master branch for next release, 26.0.0

* Use docker image for druid 24.0.1

* Fix version in druid-it-cases pom.xml",2022-11-22T10:01:01Z
c6054b7cb78a9aaed0763465730434d2c9d6f6c9,"Attach IO error to parse error when we can't contact Avro schema registry. (#13403)

* Attach IO error to parse error when we can't contact Avro schema registry.

The change in #12080 lost the original exception context. This patch
adds it back.

* Add hamcrest-core.

* Fix format string.",2022-11-22T06:20:26Z
280a0f7158eba2a5a5bf2ab0a9fd0ccc00656fcb,"Add sequential sketch merging to MSQ (#13205)

* Add sketch fetching framework

* Refactor code to support sequential merge

* Update worker sketch fetcher

* Refactor sketch fetcher

* Refactor sketch fetcher

* Add context parameter and threshold to trigger sequential merge

* Fix test

* Add integration test for non sequential merge

* Address review comments

* Address review comments

* Address review comments

* Resolve maxRetainedBytes

* Add new classes

* Renamed key statistics information class

* Rename fetchStatisticsSnapshotForTimeChunk function

* Address review comments

* Address review comments

* Update documentation and add comments

* Resolve build issues

* Resolve build issues

* Change worker APIs to async

* Address review comments

* Resolve build issues

* Add null time check

* Update integration tests

* Address review comments

* Add log messages and comments

* Resolve build issues

* Add unit tests

* Add unit tests

* Fix timing issue in tests",2022-11-22T04:26:32Z
fe34ecc5e35d5091c3ca6c9043d6eac0db1dba56,add ability to make inputFormat part of the example datasets (#13402),2022-11-21T20:50:44Z
68018a808fff8d04e5875ec366b7d3a7a0a16d9e,"Firehose migration doc (#12981)

* Firehose migration doc

* Update migrate-from-firehose-ingestion.md

* Updated with review comments and suggestions

* Update migrate-from-firehose-ingestion.md

* Update migrate-from-firehose-ingestion.md

* Update migrate-from-firehose-ingestion.md",2022-11-21T19:17:12Z
133054bf27dd680fb281e440a7a9123d6e7818c5,"Make batched segment sampling the default, minor cleanup of coordinator config (#13391)

The batch segment sampling performs significantly better than the older method
of sampling if there are a large number of used segments. It also avoids duplicates.

Changes:
- Make batch segment sampling the default
- Deprecate the property `useBatchedSegmentSampler`
- Remove unused coordinator config `druid.coordinator.loadqueuepeon.repeatDelay`
- Cleanup `KillUnusedSegments`
- Simplify `KillUnusedSegmentsTest`, add better tests, remove redundant tests",2022-11-21T15:01:46Z
bfffbabb56b654ca5cd4a6b5f33c537940431f38,"Async task client for SeekableStreamSupervisors. (#13354)

Main changes:
1) Convert SeekableStreamIndexTaskClient to an interface, move old code
   to SeekableStreamIndexTaskClientSyncImpl, and add new implementation
   SeekableStreamIndexTaskClientAsyncImpl that uses ServiceClient.
2) Add ""chatAsync"" parameter to seekable stream supervisors that causes
   the supervisor to use an async task client.
3) In SeekableStreamSupervisor.discoverTasks, adjust logic to avoid making
   blocking RPC calls in workerExec threads.
4) In SeekableStreamSupervisor generally, switch from Futures.successfulAsList
   to FutureUtils.coalesce, so we can better capture the errors that occurred
   with contacting individual tasks.

Other, related changes:
1) Add ServiceRetryPolicy.retryNotAvailable, which controls whether
   ServiceClient retries unavailable services. Useful since we do not
   want to retry calls unavailable tasks within the service client. (The
   supervisor does its own higher-level retries.)
2) Add FutureUtils.transformAsync, a more lambda friendly version of
   Futures.transform(f, AsyncFunction).
3) Add FutureUtils.coalesce. Similar to Futures.successfulAsList, but
   returns Either instead of using null on error.
4) Add JacksonUtils.readValue overloads for JavaType and TypeReference.",2022-11-21T13:50:26Z
f037776fd8028b52ebd5ecfaf7bc336abda8ab0d,"MSQ: Launch initial tasks faster. (#13393)

Notify the mainLoop thread to skip a sleep when the desired task
count changes.",2022-11-21T13:41:18Z
b8ca03d28323350968846f4a2aa090c95b7d1fcd,"SeekableStreamSupervisor: Unique type name for GracefulShutdownNotice. (#13399)

Allows GracefulShutdownNotice to be differentiated from ShutdownNotice.",2022-11-21T13:40:14Z
de566eb0dbe70e68b8161aa80713fa88b467260d,"Fix shared lock acquisition criteria (#13390)

Currently, a shared lock is acquired only when all other locks are also shared locks.

This commit updates the behaviour and acquires a shared lock only if all locks
of equal or higher priority are either shared locks or are already revoked.
The lock type of locks with lower priority does not matter as they can be revoked.",2022-11-21T10:01:38Z
6c3f688a66775c26bb33630766b0badf6c004541,cron stage failure should always send a failure notification (#13397),2022-11-21T09:08:15Z
c61313f4c4a396364aa19d63e68429c1a0cb277a,"Quieter streaming supervisors. (#13392)

Eliminates two common sources of noise with Kafka supervisors that have
large numbers of tasks and partitions:

1) Log the report at DEBUG rather than INFO level at each run cycle.
   It can get quite large, and can be retrieved via API when needed.

2) Use log4j2.xml to quiet down the org.apache.kafka.clients.consumer.internals
   package. Avoids a log message per-partition per-minute as part of seeking
   to the latest offset in the reporting thread. In the tasks, where this
   sort of logging might be more useful, we have another log message with
   the same information: ""Seeking partition[%s] to[%s]"".",2022-11-21T07:53:17Z
fa3ab27a71ab9829404319d515b3d09718c25789,"Bump apache curator from 5.3.0 to 5.4.0 (#13295)

Follow up to #12939. As noted in that PR there are a few fixes in 5.4.0 that should make running on Kubernetes more reliable. Notably:
- https://issues.apache.org/jira/browse/CURATOR-538
- https://issues.apache.org/jira/browse/CURATOR-649",2022-11-21T05:53:29Z
fd239305d9eacf50a10b90d73d30fa392eca01d3,"Update metrics doc (#13316)

Changes:
- used inline code-style to format dimension names
- removed unnecessary punctuation",2022-11-21T04:13:52Z
5172d76a6720a217c321e90b9294435ca60242ea,"Migrate current integration batch tests to equivalent MSQ tests (#13374)

* Migrate current integration batch tests to equivalent MSQ tests using new IT framework

* Fix build issues

* Trigger Build

* Adding more tests and addressing comments

* fixBuildIssues

* fix dependency issues

* Parameterized the test and addressed comments

* Addressing comments

* fixing checkstyle errors

* Adressing comments",2022-11-21T03:42:02Z
a860baf4965cb46f35ba3b38e1651fa5838da1b3,Updated docs on front coding (#13387),2022-11-19T08:01:04Z
08fa0383b9c61822de6a9ac50b7b56aecded2012,add supported indexSpec options (#13388),2022-11-19T08:00:32Z
c628947c31698df7761a757611305aeebf814132,"Web console: streaming json input format specifics (#13381)

* streaming json input format specifics

* goodies",2022-11-18T22:15:16Z
a3d45f60862ef0c641e69edb2288b311f55f1b31,treat user cancelation seriously (#13376),2022-11-18T22:04:16Z
5b625cea96450f284ad273b5619fb1e2eeaea42d,"Improve performance for ReadableInputStreamFrameChannel (#13373)

* Improve performance for ReadableInputStreamFrameChannel

* Fix race condition leading to unnecessary sleep",2022-11-18T12:56:08Z
092e769dd84d2f3b051d35b4b64b8fd4f00ac788,"JvmMonitor: Report jvm/gc/cpu in nanos. (#13383)

Our documentation says we report this in nanos, and we actually did
prior to #12481. This patch restores the prior behavior.",2022-11-18T07:03:16Z
6ccf31490e5b08a2b9333f54df370eb5e841c708,Allow injection of node-role set to all non base modules (#13371),2022-11-18T06:42:03Z
7f4e386509855a2646f7aeb4ecee97145f5437ca,"add missing vector object selector for multi-value string columns, refactor some stuff (#13379)

* add vector object selector for multi-value string columns, refactor some stuff

* use for nested columns too

* add test

* inspections",2022-11-18T05:08:54Z
8c9ffcfe37f5cc3b80dce3bb57be82d3813f8ffa,"nested column support for ORC (#13375)

* nested column support for ORC

* more test",2022-11-18T05:08:34Z
bf10ff73a83defda18befb06b8cab1472dead10b,"Fixes Kafka Supervisor Lag Report (#13380)

Fixes inclusion of all stream partitions in all tasks.

The PR (Adds Idle feature to `SeekableStreamSupervisor` for inactive stream) - https://github.com/apache/druid/pull/13144 updates the resulting lag calculation map in `KafkaSupervisor` to include all the latest partitions from the stream to set the idle state accordingly rather than the previous way of lag calculation only for the partitions actively being read from the stream. This led to an explosion of metrics in lag reports in cases where 1000s of tasks per supervisor are present.

Changes:
- Add a new method to generate lags for only those partitions a single task is actively reading from while updating the Supervisor reports.",2022-11-17T16:54:45Z
6b9344cd39017174013f757c274e0d9c8e6671b7,"Persist legacy LatestPairs for now (#13378)

We added compression to the latest/first pair storage, but
the code change was forcing new things to be persisted
with the new format, meaning that any segment created with
the new code cannot be read by the old code.  Instead, we
need to default to creating the old format and then remove that default in a future version.",2022-11-17T16:07:02Z
8e9e46b519163713c72e00478759f727a411bf7b,"Add static-checks Github Action (#13347)

* Adds static-checks github action

* bug fixes

* bug fixes

* adds maven install step

* update permissions on scripts folder

* fix license check errors

* attempt for parallelization

* fix concurrency

* fix naming

* remove intellij inspections to add in different CI pipeline

* minimize naming, add new lines

* setting hadoop profile through matrix

* also runs on push triggers to master and release branches

* changes on review",2022-11-17T11:50:16Z
78d0b0abce2b27b88a53790684d81530a2318fc9," Add string comparison methods to StringUtils, fix dictionary comparisons. (#13364)

* Add string comparison methods to StringUtils, fix dictionary comparisons.

There are various places in Druid code where we assume that String.compareTo
is consistent with Unicode code-point ordering. Sadly this is not the case.

To help deal with this, this patch introduces the following helpers:

1) compareUnicode: Compares two Strings in Unicode code-point order.
2) compareUtf8: Compares two UTF-8 byte arrays in Unicode code-point order.
   Equivalent to comparison as unsigned bytes.
3) compareUtf8UsingJavaStringOrdering: Compares two UTF-8 byte arrays, or
   ByteBuffers, in a manner consistent with String.compareTo.

There is no helper for comparing two Strings in a manner consistent
with String.compareTo, because for that we can use compareTo directly.

The patch also fixes an inconsistency between the String and UTF-8
dictionary GenericIndexed flavors of string-typed columns: they were
formerly using incompatible comparators.

* Adjust test.

* FrontCodedIndexed updates.

* Add test.

* Fix comments.",2022-11-16T15:15:00Z
71b133f3ff1ba9c547f94ddeed63d72e14419e94,"Add `RoundRobinServerSelector` to speed up segment assignments (#13367)

Segment assignments can take very long due to the strategy cost computation
for a large number of segments. This commit allows segment assignments to be
done in a round-robin fashion within a tier. Only segment balancing takes cost-based
decisions to move segments around.

Changes
- Add dynamic config `useRoundRobinSegmentAssignment` with default value false
- Add `RoundRobinServerSelector`. This does not implement the `BalancerStrategy`
as it does not conform to that contract and may also be used in conjunction with a
strategy (round-robin for `RunRules` and a cost strategy for `BalanceSegments`)
- Drops are still cost-based even when round-robin assignment is enabled.",2022-11-16T14:35:17Z
61a7199f2b7f4356217f9affe5b231339e79f3f8,"Bump loader-utils from 1.4.0 to 1.4.2 in /web-console (#13372)

Bumps [loader-utils](https://github.com/webpack/loader-utils) from 1.4.0 to 1.4.2.
- [Release notes](https://github.com/webpack/loader-utils/releases)
- [Changelog](https://github.com/webpack/loader-utils/blob/v1.4.2/CHANGELOG.md)
- [Commits](https://github.com/webpack/loader-utils/compare/v1.4.0...v1.4.2)

---
updated-dependencies:
- dependency-name: loader-utils
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-11-16T12:00:33Z
9e938b5a6f5dacf22012fb89556fb44298b5eede,"Add a limit to the number of columns in the CLUSTERED BY clause (#13352)

* Add clustered by limit

* change semantics, add docs

* add fault class to the module

* add test

* unambiguate test",2022-11-15T16:35:15Z
309cae7b65e65628f3b277808717a0c7e0bdaccf,"nested column support for Parquet and Avro (#13325)

* nested column support for Parquet and Avro

* style",2022-11-15T00:09:05Z
1231ce3b75b4ae13ecf012da480df4d7e09702cc,"dump-segment tool support for examining nested columns (#13356)

* add nested mode to dump segment tool to dump nested columns

* docs

* more test

* fix it",2022-11-15T00:08:47Z
a3edda3b634d00942f8729930dd45e2dd6b2eaff,"Modify quantile sketches to add byte[] directly (#13351)

* Modify quantile sketchs to add byte[] directly

* Rename class and add test",2022-11-13T18:54:06Z
81d005f267484ce883fa3d9beb76e75995412f94,"Druid Catalog basics (#13165)

Druid catalog basics

Catalog object model for tables, columns
Druid metadata DB storage (as an extension)
REST API to update the catalog (as an extension)
Integration tests
Model only: no planner integration yet",2022-11-12T23:30:22Z
b0db2a87d82a49d64f61b72c0066a13904928e69,"Update Kafka ingestion tutorial (#13261)

* Update Kafka ingestion tutorial

* Update tutorial-kafka.md

Updated location of sample data file

* Added sample data file

* Update tutorial-kafka.md

* Add sample data file

* Update tutorial-kafka.md

Updated sample file location in curl commands

* Update and reuploading sample data files

* Updated spelling file

* Delete .spelling

* Added spelling file

* Update docs/tutorials/tutorial-kafka.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-kafka.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Updated after review

* Update tutorial-kafka.md

* Updated

* Update tutorial-kafka.md

* Update tutorial-kafka.md

* Update tutorial-kafka.md

* Updated sample data file and command

* Add files via upload

* Delete kttm-nested-data.json.tgz

* Delete kttm-nested-data.json.tgz

* Add files via upload

* Update tutorial-kafka.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-11-11T22:47:54Z
3e172d44abef43a25409260b51a797a1cef5f958,Bind DurableStorageCleaner only on the Overlord nodes (#13355),2022-11-11T16:26:33Z
47dd4ed2e767d98730940eb697375cf7bc62ed97,Added experimental feature text for front coding feature (#13349),2022-11-11T10:06:13Z
e78f648023466ff3edd8482d6b67c211c5ade0e5,"SeekableStreamSupervisor: Don't enqueue duplicate notices. (#13334)

* SeekableStreamSupervisor: Don't enqueue duplicate notices.

Similar goal to #12018, but more aggressive. Don't enqueue a notice at
all if it is equal to one currently in the queue.

* Adjustments from review.

* Update indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/NoticesQueueTest.java

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-11-11T09:54:01Z
56d5c9780d6c09d6844136a6c678e3b417388bfe,"Use standard library to correctly glob and stop at the correct folder structure when filtering cloud objects (#13027)

* Use standard library to correctly glob and stop at the correct folder structure when filtering cloud objects.

Removed:

import org.apache.commons.io.FilenameUtils;

Add:

import java.nio.file.FileSystems;
import java.nio.file.PathMatcher;
import java.nio.file.Paths;

* Forgot to update CloudObjectInputSource as well.

* Fix tests.

* Removed unused exceptions.

* Able to reduced user mistakes, by removing the protocol and the bucket on filter.

* add 1 more test.

* add comment on filterWithoutProtocolAndBucket

* Fix lint issue.

* Fix another lint issue.

* Replace all mention of filter -> objectGlob per convo here:

https://github.com/apache/druid/pull/13027#issuecomment-1266410707

* fix 1 bad constructor.

* Fix the documentation.

* Don’t do anything clever with the object path.

* Remove unused imports.

* Fix spelling error.

* Fix incorrect search and replace.

* Addressing Gian’s comment.

* add filename on .spelling

* Fix documentation.

* fix documentation again

Co-authored-by: Didip Kerabat <didip@apple.com>",2022-11-11T07:46:40Z
77478f25fb3d33c032b26a1dbcb9ad485a417ea2,"Add taskActionType dimension to task/action/run/time. (#13333)

* Add taskActionType dimension to task/action/run/time.

* Spelling.",2022-11-11T06:30:08Z
03175a2b8d50e1121d7b1937ec61ceabec2ea43f,"Add missing MSQ error code fields to docs (#13308)

* Fix typo

* Fix some spacing

* Add missing fields

* Cleanup table spacing

* Remove durable storage docs again

Thanks Brian for pointing out previous discussions.

* Update docs/multi-stage-query/reference.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Mark codes as code

* And even more codes as code

* Another set of spaces

* Combine `ColumnTypeNotSupported`

Thanks Karan.

* More whitespaces and typos

* Add spelling and fix links

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-11-10T15:33:04Z
fb23e38aa716d5f57c4f89352c3e3da5a10ac502,"Fix messageGap emission (#13346)

* Fix messageGap emission

* Do not emit messageGap after stopping reading events

* Refactoring

* Fix tests",2022-11-10T12:20:19Z
c2210c4e098a90999678ed05807f7cd59f149362,"Update ingestion spec doc (#13329)

* Update ingestion spec doc

* Updated

* Updated

* Update docs/ingestion/ingestion-spec.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Updated

* Updated

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2022-11-10T10:54:35Z
44f29030dddb33f34fda8baba9ce1018c4225053,fix flaky RemoteTaskRunnerTest.testRunPendingTaskFailToAssignTask with ugly Thread.sleep (#13344),2022-11-10T08:58:53Z
27215d1ff13ffc06d58fe06a59e2b4c32c1afc75,"fix complex_decode_base64 function, add SQL bindings (#13332)

* fix complex_decode_base64 function, add SQL bindings

* more permissive",2022-11-10T07:40:25Z
965e41538edabb487f961f466272b18ab0b71da3,"Update nested columns doc (#13314)

* Updated nested columns doc

* Update nested-columns.md

* Update nested-columns.md",2022-11-10T01:53:28Z
0512ae49223bcd0f646b95738c95f331018a00b7,"Optimize metadata calls in SeekableStreamSupervisor (#13328)

* Optimize metadata calls

* Modify isTaskCurrent

* Fix tests

* Refactoring",2022-11-10T01:52:51Z
00400428635e5678ec3b608111a48683bad70ad7,"HttpPostEmitter back off send() busy-loop (#12102)

* HttpPostEmitter back off send() busy-loop

The HttpPostEmitter gets in a loop until the flush timeout can be
triggered, OR until some new events arrive that reset the minimum
batch fill timeout delay. As a tactical fix, this introduces a
simple backoff delay to the send loop to prevent spamming logs.

* Update core/src/main/java/org/apache/druid/java/util/emitter/core/HttpPostEmitter.java

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-11-09T22:32:40Z
3e2bb4cf10a18395ed65a9be9ad11fbb315170f1,"fix front-coded bucket size handling, better validation (#13335)

* fix front-coded bucket size handling, better validation

* Update FrontCodedIndexedTest.java",2022-11-09T21:33:01Z
a2013e656678146094f6c9039471d3933c81313f,"Enhance streaming ingestion metrics (#13331)

Changes:
- Add a metric for partition-wise kafka/kinesis lag for streaming ingestion.
- Emit lag metrics for streaming ingestion when supervisor is not suspended and state is in {RUNNING, IDLE, UNHEALTHY_TASKS, UNHEALTHY_SUPERVISOR}
- Document metrics",2022-11-09T18:14:15Z
b7a513fe092da85e091bbe81f0cf7b9e2eafb844,"Add a OverlordHelper that cleans up durable storage objects in MSQ (#13269)

* scratch

* s3 ls fix, add docs

* add documentation, update method name

* Add tests, address commits, change default value of the helper

* fix test

* update the default value of config, remove initial delay config

* Trigger Build

* update class

* add more tests

* docs update

* spellcheck

* remove ioe from the signature

* add back dmmy constructor for initialization

* fix guice bindings, intellij inspections",2022-11-09T11:53:35Z
d242a9314b8a4979e5233f1b3d4ac76267bdc4e1,"Adds license and security vulnerabilities checks for Hadoop3 build (#13270)

* adds license and security vulnerabilities check for Hadoop3 builds

* spacing

* fixes bugs

* updates check_test_suite.py to always run license checks with Hadoop3

* nit

* run analyze dependencies, analyze hadoop 3 dependencies

* run tests

* revert analyze dependencies, analyze hadoop 3 dependencies addition in check_test_suite.py

* fixes bug

* revert code change",2022-11-09T09:20:31Z
7e600d2c6336078a11756c472f69a506cf60357b,"Enhancements to the Calcite test framework (#13283)

* Enhancements to the Calcite test framework
* Standardize ""Unauthorized"" messages
* Additional test framework extension points
* Resolved joinable factory dependency issue",2022-11-08T22:28:49Z
9f7fd57a692f307f733311d3ce4efda84769f752,"Improve fetch of pending segments from metadata store (#13310)

* Deserialize only when needed

* Update query to fetch pending segments

* Revert unneeded changes

* Fix query",2022-11-08T13:46:19Z
ff8e0c3397c3677b85e521f141ffcc650094ca91,"Fix issues with caching cost strategy (#13321)

`cachingCost` strategy has some discrepancies when compared to cost strategy.
This commit addresses two of these by retaining the same behaviour as the `cost` strategy
when computing the cost of moving a segment to a server:
- subtract the self cost of a segment if it is being served by the target server
- subtract the cost of segments that are marked to be dropped

Other changes:
- Add tests to verify fixed strategy. These tests would fail without the fixes made to `CachingCostStrategy.computeCost()`
- Fix the definition of the segment related metrics in the docs.
- Fix some docs issues introduced in #13181",2022-11-08T10:41:39Z
594545da55e3502269a0275e2140ad95d0aa56a5,"Adds cluster level idleConfig setting for supervisor (#13311)

* adds cluster level idleConfig

* updates docs

* refactoring

* spelling nit

* nit

* nit

* refactoring",2022-11-08T09:24:14Z
9a684af3c9d93009a4c2a6a23a0fa29be2f81ee2,"Fixing the K8s task runner to work with MSQ (#13305)

* Fixing the K8s task runner to work with MSQ

* Sorry incomplete PR

Co-authored-by: Rahul Gidwani <r_gidwani@apple.com>",2022-11-08T09:11:05Z
a28b8c26745cc9656ce4aa3e0301f6ebd8ed76f4,"Improve rowkey object size estimate (#13319)

* Improve rowkey object size estimate

* Address review comments

* Update comment

* Fix test",2022-11-08T04:42:07Z
48528a0c9858f06c0daf7dc88cc9cecfe88a3654,"MSQ: Fix task lock checking during publish, fix lock priority. (#13282)

* MSQ: Fix task lock checking during publish, fix lock priority.

Fixes two issues:

1) ControllerImpl did not properly check the return value of
   SegmentTransactionalInsertAction when doing a REPLACE. This could cause
   it to not realize that its locks were preempted.

2) Task lock priority was the default of 0. It should be the higher
   batch default of 50. The low priority made it possible for MSQ tasks
   to be preempted by compaction tasks, which is not desired.

* Restructuring, add docs.

* Add performSegmentPublish tests.

* Fix tests.",2022-11-08T03:57:34Z
f6aca21e8203c003e6467d0112840a63223bc859,"Web console: update DQT to version 0.17 (#13323)

* update to DQT 17

* update licenses

* after npm i",2022-11-08T01:47:11Z
d1a4de022a8570e906dd4eafa26e0519dd68e98c,"Update retention rules doc (#13181)

* Update retention rules doc

* Update rule-configuration.md

* Updated

* Updated

* Updated

* Updated

* Update rule-configuration.md

* Update rule-configuration.md",2022-11-07T22:47:33Z
a9b39fc29ddb34b3ac32bc9198b52ba86d8de2b8,Try converting all inner joins to filters (#13201),2022-11-07T17:49:18Z
a738ac9ad77194e66ff48d4253664649f78925b8,"Improve task pause logging and metrics for streaming ingestion (#13313)

* Improve task pause logging and metrics for streaming ingestion

* Add metrics doc

* Fix spelling",2022-11-07T16:03:54Z
b1eaf7a21f3e414c3ad4732175b3143de16a2010,MSQ should load even if node roles are not set (#13318),2022-11-07T15:41:16Z
47c32a9d929ac25df14647a971e3dd396a06a277,"Skip ALL granularity compaction  (#13304)

* Skip autocompaction for datasources with ETERNITY segments",2022-11-07T12:25:03Z
650840ddaf741ade156d259a20f3119b4550ed12,"Add segment handoff time metric (#13238)

* Add segment handoff time metric

* Remove monitors on scheduler stop

* Add warning log for slow handoff

* Remove monitor when scheduler stops",2022-11-07T12:19:10Z
227b57dd8e1afed9c6696ae7780b8d222f6798bb,"Compaction: Fetch segments one at a time on main task; skip when possible. (#13280)

* Compaction: Fetch segments one at a time on main task; skip when possible.

Compact tasks include the ability to fetch existing segments and determine
reasonable defaults for granularitySpec, dimensionsSpec, and metricsSpec.
This is a useful feature that makes compact tasks work well even when the
user running the compaction does not have a clear idea of what they want
the compacted segments to be like.

However, this comes at a cost: it takes time, and disk space, to do all
of these fetches. This patch improves the situation in two ways:

1) When segments do need to be fetched, download them one at a time and
   delete them when we're done. This still takes time, but minimizes the
   required disk space.

2) Don't fetch segments on the main compact task when they aren't needed.
   If the user provides a full granularitySpec, dimensionsSpec, and
   metricsSpec, we can skip it.

* Adjustments.

* Changes from code review.

* Fix logic for determining rollup.",2022-11-07T09:20:14Z
9423aa9163ce60f9572e9042c0dcb370fe81770f,"MSQ: Consider PARTITION_STATS_MAX_BYTES in WorkerMemoryParameters. (#13274)

* MSQ: Consider PARTITION_STATS_MAX_BYTES in WorkerMemoryParameters.

This consideration is important, because otherwise we can run out of
memory due to large statistics-tracking objects.

* Improved calculations.",2022-11-07T08:57:18Z
081508f1aa45de3d44e65cb1a5f7169bc36dccb5,"Bump commons-text from 1.9 to 1.10.0 in /extensions-contrib/kubernetes-overlord-extensions (#13299)

* Bump commons-text in /extensions-contrib/kubernetes-overlord-extensions

Bumps commons-text from 1.9 to 1.10.0.

---
updated-dependencies:
- dependency-name: org.apache.commons:commons-text
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>

* Cleanup pom

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Frank Chen <frank.chen021@outlook.com>",2022-11-05T07:21:39Z
a17ffdfc5d82c8cf60dfb91015f69142e427d76f, Fix flaky test method in KafkaSupervisorTest (#13315),2022-11-05T05:01:40Z
d8329195f7eac03d0443f6bfeab88bfb6f135000,fix bug when front-coded index has only the null value (#13309),2022-11-04T12:26:33Z
e60e305ddb71131133fdea994cc0f2d619b22fd9,"fix issue with parquet list conversion of nullable lists with complex nullable elements (#13294)

* fix issue with parquet list conversion of nullable lists with complex nullable elements

* pom stuff

* fix style

* adjustments",2022-11-04T12:25:42Z
848570d8db3cd34f7179e292c91dbfd69ee216f4,Suppressing package-lock.json?d3-color vulnerability (#13301),2022-11-04T06:17:02Z
2fdaa2fcabc7ceb91568ce1e6b1fcede2da7602c,"Make RecordSupplierInputSource respect sampler timeout when stream is empty (#13296)

* Make RecordSupplierInputSource respect sampler timeout when stream is empty

* Rename timeout param, make it nullable, add timeout test",2022-11-03T22:45:35Z
2a757b64e89b9f0f983df9c001bd90b3f8d1f743,Update Curator in licenses.yaml. (#13306),2022-11-03T22:42:30Z
c875f4bd0402d49c57d56068537b8babc52386d1,Upgrade curator to 5.4.0 (#13302),2022-11-03T18:26:19Z
8f90589ce538a96b04830c377220a3e7e1adbd2b,"Always return sketches from DS_HLL, DS_THETA, DS_QUANTILES_SKETCH. (#13247)

* Always return sketches from DS_HLL, DS_THETA, DS_QUANTILES_SKETCH.

These aggregation functions are documented as creating sketches. However,
they are planned into native aggregators that include finalization logic
to convert the sketch to a number of some sort. This creates an
inconsistency: the functions sometimes return sketches, and sometimes
return numbers, depending on where they lie in the native query plan.

This patch changes these SQL aggregators to _never_ finalize, by using
the ""shouldFinalize"" feature of the native aggregators. It already
existed for theta sketches. This patch adds the feature for hll and
quantiles sketches.

As to impact, Druid finalizes aggregators in two cases:

- When they appear in the outer level of a query (not a subquery).
- When they are used as input to an expression or finalizing-field-access
  post-aggregator (not any other kind of post-aggregator).

With this patch, the functions will no longer be finalized in these cases.

The second item is not likely to matter much. The SQL functions all declare
return type OTHER, which would be usable as an input to any other function
that makes sense and that would be planned into an expression.

So, the main effect of this patch is the first item. To provide backwards
compatibility with anyone that was depending on the old behavior, the
patch adds a ""sqlFinalizeOuterSketches"" query context parameter that
restores the old behavior.

Other changes:

1) Move various argument-checking logic from runtime to planning time in
   DoublesSketchListArgBaseOperatorConversion, by adding an OperandTypeChecker.

2) Add various JsonIgnores to the sketches to simplify their JSON representations.

3) Allow chaining of ExpressionPostAggregators and other PostAggregators
   in the SQL layer.

4) Avoid unnecessary FieldAccessPostAggregator wrapping in the SQL layer,
   now that expressions can operate on complex inputs.

5) Adjust return type to thetaSketch (instead of OTHER) in
   ThetaSketchSetBaseOperatorConversion.

* Fix benchmark class.

* Fix compilation error.

* Fix ThetaSketchSqlAggregatorTest.

* Hopefully fix ITAutoCompactionTest.

* Adjustment to ITAutoCompactionTest.",2022-11-03T16:43:00Z
d1877e41ec74e649cbbb8f2ce1121e00fbad68d7,"Use lookup memory footprint in MSQ memory computations. (#13271)

* Use lookup memory footprint in MSQ memory computations.

Two main changes:

1) Add estimateHeapFootprint to LookupExtractor.

2) Use this in MSQ's IndexerWorkerContext when determining the total
   amount of available memory. It's taken off the top.

This prevents MSQ tasks from running out of memory when there are lookups
defined in the cluster.

* Updates from code review.",2022-11-03T14:36:54Z
c5fcc03bdfd50f2624ba0a3d39f0d5e5e856deef,"PrometheusEmitter NullPointerException fix (#13286)

* PrometheusEmitter NullPointerException fix

* Improved null value judgment in pushMetric

* Delete meaningless judgments about namespace

* Delete unnecessary @Nullable above namespace attribute",2022-11-03T10:50:27Z
ccc55ef8991716bc721b9ee0ab75c19a78a763a2,"Mask SQL String in the MSQTaskQueryMaker for secrets (#13231)

* add test

* add masking code

* fix test

* oops

* refactor json usage

* refactor, variable update

* add test cases

* Trigger Build

* add comment to the regex

* address review comment",2022-11-03T09:57:28Z
ae638e338c4ec7a7d76eefaff7b4bacbd6fed084,"docs(msq): update insert vs replace for dimension-based segment pruning (#13228)

* docs(msq): update insert vs replace to mention dimension-based segment pruning

* make suggested changes",2022-11-03T08:47:44Z
7cb21cb9685b6641c52e2a51e9707fcbcb7f6903,"Use worker number instead of task id in MSQ for communication to/from workers. (#13062)

* Conversion from taskId to workerNumber in the workerClient

* storage connector changes, suffix file when finish writing to it

* Fix tests

* Trigger Build

* convert IntFunction to a dedicated interface

* first review round

* use a dummy file to indicate success

* fetch the first filename from the list in case of multiple files

* tests working, fix semantic issue with ls

* change how the success flag works

* comments, checkstyle, method rename

* fix test

* forbiddenapis fix

* Trigger Build

* change the writer

* dead store fix

* Review comments

* revert changes

* review

* review comments

* Update extensions-core/multi-stage-query/src/main/java/org/apache/druid/msq/shuffle/DurableStorageInputChannelFactory.java

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>

* Update extensions-core/multi-stage-query/src/main/java/org/apache/druid/msq/shuffle/DurableStorageInputChannelFactory.java

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>

* update error messages

* better error messages

* fix checkstyle

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>",2022-11-03T04:55:45Z
018f9847819dee9b2750e1f0cd3a546edb7737f0,"fix nested column range index range computation (#13297)

* fix nested column range index range computation

* simplify, add missing bounds check for FixedIndexed",2022-11-03T04:37:41Z
e5ad24ff9f1ea0169ca492283da84e6f1563a754,"Support for middle manager less druid, tasks launch as k8s jobs (#13156)

* Support for middle manager less druid, tasks launch as k8s jobs

* Fixing forking task runner test

* Test cleanup, dependency cleanup, intellij inspections cleanup

* Changes per PR review

Add configuration option to disable http/https proxy for the k8s client
Update the docs to provide more detail about sidecar support

* Removing un-needed log lines

* Small changes per PR review

* Upon task completion we callback to the overlord to update the status / locaiton, for slower k8s clusters, this reduces locking time significantly

* Merge conflict fix

* Fixing tests and docs

* update tiny-cluster.yaml 

changed `enableTaskLevelLogPush` to `encapsulatedTask`

* Apply suggestions from code review

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* Minor changes per PR request

* Cleanup, adding test to AbstractTask

* Add comment in peon.sh

* Bumping code coverage

* More tests to make code coverage happy

* Doh a duplicate dependnecy

* Integration test setup is weird for k8s, will do this in a different PR

* Reverting back all integration test changes, will do in anotbher PR

* use StringUtils.base64 instead of Base64

* Jdk is nasty, if i compress in jdk 11 in jdk 17 the decompressed result is different

Co-authored-by: Rahul Gidwani <r_gidwani@apple.com>
Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2022-11-03T02:44:47Z
176934e849d50a2360f50db7771c1775110308f3,"Web console: expose in the UI that a query is stuck waiting for task slots (#13291)

* add pending info

* update tests

* fixes after review",2022-11-01T16:40:55Z
fd7864ae33ba8afe56d660c2b6d84ec5b498d321,"Improve run time of coordinator duty MarkAsUnusedOvershadowedSegments (#13287)

In clusters with a large number of segments, the duty `MarkAsUnusedOvershadowedSegments`
can take a long very long time to finish. This is because of the costly invocation of 
`timeline.isOvershadowed` which is done for every used segment in every coordinator run.

Changes
- Use `DataSourceSnapshot.getOvershadowedSegments` to get all overshadowed segments
- Iterate over this set instead of all used segments to identify segments that can be marked as unused
- Mark segments as unused in the DB in batches rather than one at a time
- Refactor: Add class `SegmentTimeline` for ease of use and readability while using a
`VersionedIntervalTimeline` of segments.",2022-11-01T14:49:52Z
0d03ce435fdf648430646cebea71ccdae2540dac,"introduce a ""tree"" type to the flattenSpec (#12177)

* introduce a ""tree"" type to the flattenSpec

* feedback - rename exprs to nodes, use CollectionsUtils.isNullOrEmpty for guard

* feedback - expand docs to more clearly capture limitations of ""tree"" flattenSpec

* feedback - fix for typo on docs

* introduce a comment to explain defensive copy, tweak null handling

* fix: part of rebase

* mark ObjectFlatteners.FlattenerMaker as an ExtensionPoint and provide default for new tree type

* fix: objectflattener restore previous behavior to call getRootField for root type

* docs: ingestion/data-formats add note that ORC only supports path expressions

* chore: linter remove unused import

* fix: use correct newer form for empty DimensionsSpec in FlattenJSONBenchmark",2022-11-01T06:49:30Z
675fd982fb5ca274b057495a90563ecc248ad823,"Correct task status returned by controller (#13288)

* Correct worker status returned by controller

* Address review comments",2022-10-31T09:48:19Z
e1ff3ca28904913cb2cd3876f7ef232531b7c4ba,"Resume streaming tasks on Overlord switch (#13223)

* Resume streaming tasks on Overlord switch

* Refactoring and better messages

* Better docs

* Add unit test

* Fix tests' setup

* Update indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Better logs

* Fix test again

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-10-29T04:08:49Z
e40c7f2a67f18c10dc308dd614aecd0c3444cbf2,"Update data loader parse screen help text (#13241)

Co-authored-by: Margaret Brewster <margaretbrewster@Maggie-Brewster.local>",2022-10-29T03:51:37Z
d851985cf5b0faf8e6630c3011dc80288e959f28,MSQ: Add support for indexSpec. (#13275),2022-10-28T21:27:50Z
4f0145fb8506257f6531cce04b5dee8354a1a1a1,"MSQ: Use long instead of double for estimatedRetainedBytes. (#13272)

Fixes a problem where, due to the inexactness of floating-point math, we
would potentially drift while tracking retained byte counts and run into
assertion failures in assertRetainedByteCountsAreTrackedCorrectly.",2022-10-28T15:31:52Z
5429b9d76440c5e4fd7433e3cac3821dd0ca1e9b,"RTR: Dedupe items in getKnownTasks. (#13273)

Fixes a problem where the tasks API in OverlordResource would complain
about duplicate keys in the map it's building.",2022-10-28T15:31:26Z
9cbda66d96797a69b6fcdd7c0cc9cf20a7a5d5b7,"Remove skip ignorable shards (#13221)

* Revert ""Improve kinesis task assignment after resharding (#12235)""

This reverts commit 1ec57cb935bd0b04d3123dfbb26a962a984422c7.",2022-10-28T10:49:01Z
de7ef81dff02175bad35177dc745534b40468960,"helm: add Kubernetes discovery support (#13262)

The K8 discovery mechanism, enabled by the druid-kubernetes-extension,
relies on each pod advertising its name and namespace on the env
variables POD_NAME and POD_NAMESPACE [1]. Add env variables to all
deployments/statefulsets.

[1] https://druid.apache.org/docs/latest/development/extensions-core/kubernetes.html

Signed-off-by: Alejandro del Castillo <alejandro.delcastillo@ni.com>

Signed-off-by: Alejandro del Castillo <alejandro.delcastillo@ni.com>",2022-10-28T09:39:48Z
32020247d12dd5776b83342848dd4a54cb339a9b,"Web console: Update dqt to a version that adds quotes by default (#13243)

* update dqt

* auto quote by default",2022-10-28T08:06:45Z
4775427e2c77840c19e1d2458b7e0bb0d01e76d8,"Add task start status to worker report (#13263)

* Add task start status to worker report

* Address review comments

* Address review comments

* Update documentation

* Update spelling checks",2022-10-28T06:30:15Z
49e54a0ec67b6227c5de2c37bac949eef4866905,Docs: Update inputSegmentSizeBytes description (#13266),2022-10-28T04:03:52Z
22c140251a685993023ad2067fb47c05921f8429,"Removed unused planner context parameter (#13249)

Removed unused planner context parameter",2022-10-28T00:59:26Z
acb9cb022711f7c9aa3158aec0f79869fa6a7469,"fix thread safety issue with nested column global dictionaries (#13265)

* fix thread safety issue with nested column global dictionaries

* missing float

* clarify javadocs thread safety",2022-10-28T00:58:24Z
affc522b9f8227a42631e55bc9ad833ee57fc3a0,"Refactoring the data source before unnest (#13085)

* First set of changes for framework

* Second set of changes to move segment map function to data source

* Minot change to server manager

* Removing the createSegmentMapFunction from JoinableFactoryWrapper and moving to JoinDataSource

* Checkstyle fixes

* Patching Eric's fix for injection

* Checkstyle and fixing some CI issues

* Fixing code inspections and some failed tests and one injector for test in avatica

* Another set of changes for CI...almost there

* Equals and hashcode part update

* Fixing injector from Eric + refactoring for broadcastJoinHelper

* Updating second injector. Might revert later if better way found

* Fixing guice issue in JoinableFactory

* Addressing review comments part 1

* Temp changes refactoring

* Revert ""Temp changes refactoring""

This reverts commit 9da42a9ef05bbeefddfc62b4019227fd7c975f93.

* temp

* Temp discussions

* Refactoring temp

* Refatoring the query rewrite to refer to a datasource

* Refactoring getCacheKey by moving it inside data source

* Nullable annotation check in injector

* Addressing some comments, removing 2 analysis.isJoin() checks and correcting the benchmark files

* Minor changes for refactoring

* Addressing reviews part 1

* Refactoring part 2 with new test cases for broadcast join

* Set for nullables

* removing instance of checks

* Storing nullables in guice to avoid checking on reruns

* Fixing a test case and removing an irrelevant line

* Addressing the atomic reference review comments",2022-10-26T22:58:58Z
72c16097ac6c04915f0137a1a37fed19f597799b,"Fix Apache Commons Text  CVE-2022-42889 (#13226)

* Fix Apache Commons Text  CVE-2022-42889

Fix Apache Commons Text  CVE-2022-42889

https://nvd.nist.gov/vuln/detail/CVE-2022-42889

* Update license

Co-authored-by: Frank Chen <frank.chen021@outlook.com>",2022-10-26T02:04:32Z
77e4246598428ae501096b10e6b4d6438206e297,"add support for 'front coded' string dictionaries for smaller string columns (#12277)

* add FrontCodedIndexed for delta string encoding

* now for actual segments

* fix indexOf

* fixes and thread safety

* add bucket size 4, which seems generally better

* fixes

* fixes maybe

* update indexes to latest interfaces

* utf8 support

* adjust

* oops

* oops

* refactor, better, faster

* more test

* fixes

* revert

* adjustments

* fix prefixing

* more chill

* sql nested benchmark too

* refactor

* more comments and javadocs

* better get

* remove base class

* fix

* hot rod

* adjust comments

* faster still

* minor adjustments

* spatial index support

* spotbugs

* add isSorted to Indexed to strengthen indexOf contract if set, improve javadocs, add docs

* fix docs

* push into constructor

* use base buffer instead of copy

* oops",2022-10-26T01:05:38Z
2b0d873c7e4bf244fce12c45e381d00a61a277e2,"Fix two sources of SQL statement leaks. (#13259)

* Fix two sources of SQL statement leaks.

1) SqlTaskResource and DruidJdbcResultSet leaked statements 100% of the
   time, since they call stmt.plan(), which adds statements to
   SqlLifecycleManager, and they do not explicitly remove them.

2) SqlResource leaked statements if yielder.close() threw an exception.
   (And also would not emit metrics, since in that case it failed to
   call stmt.close as well.)

* Only closeQuietly is needed.",2022-10-25T16:31:56Z
1e39bc65ccfb8e149330d7e873c274251ceed84a,"Another simpler attempt to fix travis build (#13257)

* Remove usage of method deleted in latest jackson-databind

* Revert ""Remove usage of method deleted in latest jackson-databind""

This reverts commit 81cb5d41d9afd5beb9b629e3e6248bdaa002a456.

* Use get-pip to install pip

* Use default pyyaml version

* Upgrade pyyaml",2022-10-25T06:11:01Z
d98c808d3f087645d8dcfd516e77b0058bdfd389,"Remove basePersistDirectory from tuning configs. (#13040)

* Remove basePersistDirectory from tuning configs.

Since the removal of CliRealtime, it serves no purpose, since it is
always overridden in production using withBasePersistDirectory given
some subdirectory of the task work directory.

Removing this from the tuning config has a benefit beyond removing
no-longer-needed logic: it also avoids the side effect of empty
""druid-realtime-persist"" directories getting created in the systemwide
temp directory.

* Test adjustments to appropriately set basePersistDirectory.

* Remove unused import.

* Fix RATC constructor.",2022-10-22T00:25:36Z
86e6e61e884230e7a82e726f5f5c33602b242caf,"Modular Calcite Test Framework (#12965)

* Refactor Calcite test ""framework"" for planner tests

Refactors the current Calcite tests to make it a bit easier
to adjust the set of runtime objects used within a test.

* Move data creation out of CalciteTests into TestDataBuilder
* Move ""framework"" creation out of CalciteTests into
  a QueryFramework
* Move injector-dependent functions from CalciteTests
  into QueryFrameworkUtils
* Wrapper around the planner factory, etc. to allow
  customization.
* Bulk of the ""framework"" created once per class rather
  than once per test.
* Refactor tests to use a test builder
* Change all testQuery() methods to use the test builder.
Move test execution & verification into a test runner.",2022-10-20T22:45:44Z
fc262dfbaf434614a2ef550775b0c6b736856e28,"MSQ: Report the warning directly as an error if none of it is allowed by the user (#13198)

In MSQ, there can be an upper limit to the number of worker warnings. For example, for parseExceptions encountered while parsing the external data, the user can specify an upper limit to the number of parse exceptions that can be allowed before it throws an error of type TooManyWarnings.

This PR makes it so that if the user disallows warnings of a certain type i.e. the limit is 0 (or is executing in strict mode), instead of throwing an error of type TooManyWarnings, we can directly surface the warning as the error, saving the user from the hassle of going throw the warning reports.",2022-10-20T08:13:10Z
9763bf8050a636ab4781c1b71539b6c0e089120b,Fix race condition in HttpPostEmitter (#13237),2022-10-20T08:10:25Z
c83115e4e19a5825413c09566d165aa142a712a7,"api: change API page formatting (#13213)

Tracking additional improvements requested by @paul-rogers: #13239

* api: refactor page so that indented bullet is child and unindented portion is parent

* get rid of post etc headings and combine them with the endpoint

* Update docs/operations/api-reference.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* fix broken links

* fix typo

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-10-18T20:22:26Z
b34b4353f4a27065b37feac97995d4984334f8ed,"Async reads for JDBC (#13196)

Async reads for JDBC:
Prevents JDBC timeouts on long queries by returning empty batches
when a batch fetch takes too long. Uses an async model to run the
result fetch concurrently with JDBC requests.

Fixed race condition in Druid's Avatica server-side handler
Fixed issue with no-user connections",2022-10-18T18:40:57Z
cc10350870dbe22f74aef0bb500c6e7894b916dd,"Collocated processes instructions (#13224)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Frank Chen <frankchen@apache.org>",2022-10-17T18:56:00Z
6aca61763ef16f232c0059c4eaade0e59acf774a,"SQL: Use timestamp_floor when granularity is not safe. (#13206)

* SQL: Use timestamp_floor when granularity is not safe.

PR #12944 added a check at the execution layer to avoid materializing
excessive amounts of time-granular buckets. This patch modifies the SQL
planner to avoid generating queries that would throw such errors, by
switching certain plans to use the timestamp_floor function instead of
granularities. This applies both to the Timeseries query type, and the
GroupBy timestampResultFieldGranularity feature.

The patch also goes one step further: we switch to timestamp_floor
not just in the ETERNITY + non-ALL case, but also if the estimated
number of time-granular buckets exceeds 100,000.

Finally, the patch modifies the timestampResultFieldGranularity
field to consistently be a String rather than a Granularity. This
ensures that it can be round-trip serialized and deserialized, which is
useful when trying to execute the results of ""EXPLAIN PLAN FOR"" with
GroupBy queries that use the timestampResultFieldGranularity feature.

* Fix test, address PR comments.

* Fix ControllerImpl.

* Fix test.

* Fix unused import.",2022-10-17T15:22:45Z
b88e1c21eaec38d7c2d61ddbe59051a746ab78a9,"Fix Overlord leader election when task lock re-acquisition fails (#13172)

Overlord leader election can sometimes fail due to task lock re-acquisition issues.
This commit solves the issue by failing such tasks and clearing all their locks.",2022-10-17T09:53:16Z
3bbb76f17bab32b3d3e12a472e8403affeb09108,Docs: Add query/cpu/time to real-time metrics. (#13229),2022-10-15T12:56:44Z
f4dcc52dac60fff3037321f0cf19b63d014ad816,"Redesign QueryContext class (#13071)

We introduce two new configuration keys that refine the query context security model controlled by druid.auth.authorizeQueryContextParams. When that value is set to true then two other configuration options become available:

druid.auth.unsecuredContextKeys: The set of query context keys that do not require a security check. Use this for the ""white-list"" of key to allow. All other keys go through the existing context key security checks.
druid.auth.securedContextKeys: The set of query context keys that do require a security check. Use this when you want to allow all but a specific set of keys: only these keys go through the existing context key security checks.
Both are set using JSON list format:

druid.auth.securedContextKeys=[""secretKey1"", ""secretKey2""]
You generally set one or the other values. If both are set, unsecuredContextKeys acts as exceptions to securedContextKeys.

In addition, Druid defines two query context keys which always bypass checks because Druid uses them internally:

sqlQueryId
sqlStringifyArrays",2022-10-15T05:32:11Z
6332c571bd72d83cbe28f479da549272e37e183f,"Support to read task logs from some S3 compatible cloud storage (#13195)

* follow RFC7232

* Only unquoted strings are processed according to RFC7232.

* Add help method and test cases.",2022-10-15T02:44:23Z
42384d85e7153a2aff780d3781ed2c46a66fe0c0,"Update nested-columns.md (#13227)

typo error corrected.",2022-10-14T23:15:46Z
02ad62a08cd245da62f2625dced17ae2a55224cc,"Docs: update description of query priority default value (#13191)

* update description of default for query priority

* update order

* update terms

* standardize to query context parameters",2022-10-14T21:28:04Z
9d51e466b1cf0abd4eaae80bbc40cf59c05651f4,"Minor doc update for BroadcastTablesTooLarge (#13218)

Minor doc update for `BroadcastTablesTooLarge`. Now the user will know what to do
in case this fault is encountered.",2022-10-14T03:36:55Z
2f2fe20089d54188374ee8072ed8d39564f6f9ab,"Improve global-cached-lookups metric reporting (#13219)

It was found that the namespace/cache/heapSizeInBytes metric that tracks the total heap size in bytes of all lookup caches loaded on a service instance was being under reported. We were not accounting for the memory overhead of the String object, which I've found in testing to be ~40 bytes. While this overhead may be java version dependent, it should not vary much, and accounting for this provides a better estimate. Also fixed some logging, and reading bytes from the JDBI result set a little more efficient by saving hash table lookups. Also added some of the lookup metrics to the default statsD emitter metric whitelist.",2022-10-13T22:51:54Z
45dfd679e92e668172c470c37615e7447b601af1,Composite approach for checking in-filter values set in column dictionary (#13133),2022-10-13T07:02:48Z
346fbf133fa338fe0ccf76b5537eb1627f28a487,"Make DimensionDictionary abstract (#13215)

This is in preparation for eventually retiring the flag `useMaxMemoryEstimates`, 
after which the footprint of a value in the dimension dictionary will always be 
estimated using the `estimateSizeOfValue()` method.",2022-10-13T01:48:46Z
548d0d0bb2a54d151e8bb7283bb03f43e37e582e,"Add more information to exceptions occurred while writing temporary data (#13217)

* Add more information to exceptions when writing tmp data to disk

* Better error message",2022-10-13T00:23:51Z
6eff6c9ae42c7a4689bd77e2337735c9edf38c54,"fix json_value sql planning with decimal type, fix vectorized expression math null value handling in default mode (#13214)

* fix json_value sql planning with decimal type, fix vectorized expression math null value handling in default mode
changes:
* json_value 'returning' decimal will now plan to native double typed query instead of ending up with default string typing, allowing decimal vector math expressions to work with this type
* vector math expressions now zero out 'null' values even in 'default' mode (druid.generic.useDefaultValueForNull=false) to prevent downstream things that do not check the null vector from producing incorrect results

* more better

* test and why not vectorize

* more test, more fix",2022-10-12T23:28:41Z
3e13584e0ec18f2860e6817baf90bf44343769d9,"Adds Idle feature to `SeekableStreamSupervisor` for inactive stream (#13144)

* Idle Seekable stream supervisor changes.

* nit

* nit

* nit

* Adds unit tests

* Supervisor decides it's idle state instead of AutoScaler

* docs update

* nit

* nit

* docs update

* Adds Kafka unit test

* Adds Kafka Integration test.

* Updates travis config.

* Updates kafka-indexing-service dependencies.

* updates previous offsets snapshot & doc

* Doesn't act if supervisor is suspended.

* Fixes highest current offsets fetch bug, adds new Kafka UT tests, doc changes.

* Reverts Kinesis Supervisor idle behaviour changes.

* nit

* nit

* Corrects SeekableStreamSupervisorSpec check on idle behaviour config, adds tests.

* Fixes getHighestCurrentOffsets to fetch offsets of publishing tasks too

* Adds Kafka Supervisor UT

* Improves test coverage in druid-server

* Corrects IT override config

* Doc updates and Syntactic changes

* nit

* supervisorSpec.ioConfig.idleConfig changes",2022-10-12T13:01:08Z
59e2afc566c51779d591df977a8f9abeee747be5,"use object[] instead of string[] for vector expressions to be consistent with vector object selectors (#13209)

* use object[] instead of string[] for vector expressions to be consistent with vector object selectors

* simplify",2022-10-12T09:53:43Z
80e10ffe2207e0fcaf1273ffb70e696ee002eb3d,"CompressedBigDecimal Min/Max (#13141)

This adds min/max functions for CompressedBigDecimal. It exposes these
functions via sql (BIG_MAX, BIG_MIN--see the SqlAggFunction
implementations).

It also includes various bug fixes and cleanup to the original
CompressedBigDecimal code include the AggregatorFactories. Various null
handling was improved.

Additional test cases were added for both new and existing code
including a base test case for AggregationFactories. Other tests common
across sum,min,max may be refactored also to share the varoius cases in
the future.",2022-10-11T23:35:21Z
9688674ea880194caff1f12e38ad31ca0220ce0d,fix issue with nested column null value index incorrectly matching non-null values (#13211),2022-10-11T22:54:36Z
c19ae13323e74de03fc9b4ede4cbe9a550711dc8,"Improve direct-memory check on startup. (#13207)

1) Better support for Java 9+ in RuntimeInfo. This means that in many cases,
   an actual validation can be done.

2) Clearer log message in cases where an actual validation cannot be done.",2022-10-11T21:10:25Z
9b8e69c99a410ba10496e375fc8cbb9c84f6d59b,"Add inline descriptor Protobuf bytes decoder (#13192)

* Add inline descriptor Protobuf bytes decoder

* PR comments

* Update tests, check for IllegalArgumentException

* Fix license, add equals test

* Update extensions-core/protobuf-extensions/src/main/java/org/apache/druid/data/input/protobuf/InlineDescriptorProtobufBytesDecoder.java

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-10-11T18:37:28Z
2a24c20454ea16487cca500ad89410c93f1b54e4,"process: update PR template to include release notes (#13188)

* process: update PR template to include release notes

* Update .github/pull_request_template.md [ci skip]

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update .github/pull_request_template.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* incorporate feedback from paul

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2022-10-11T02:29:18Z
d30cf8c3089e72ef4a12e7aab4afb094a2bb6813,"Dependency cleanup (#13194)

* Clean up dependency in extensions

* Bump protobuf/aws.sdk

* Bump aws-sdk to 1.12.317

* Fix CI

* Fix CI

* Update license

* Update license",2022-10-10T12:34:38Z
5b519f3689b750f3119e115dd6c5a6a02ce237b1,"Fix null message handling in AllowedRegexErrorResponseTransformStrategy. (#13177)

Error messages can be null. If the incoming error message is null, then
return null.",2022-10-09T14:42:41Z
573e12c75fc0465d38ef37cae092125882f27eeb,"Web console: making the cell filter menu more functional, removing the old query view, and updating d3 (#13169)

* remove old query view

* update tests

* add filter

* fix test

* bump d3 things to latest versions

* rent too far into the future with d3

* make config dialogs load

* goodies

* update snapshots

* only compute duration when running or pending",2022-10-07T19:44:40Z
25c1d55dd6c1c8594902e7fd8faabb2d8f0f3ff4,"Clarify behavior when decommissioningMaxPercentOfMaxSegmentsToMove = 0 (#13157)

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-10-07T16:01:32Z
f89496ccacedc01449fb8ed4e45cf2345cb3ed34,"Revert Accidental Change to Druid.xml (#13190)

See commit 54a2eb for accidental commit",2022-10-06T21:42:35Z
0edceead80e0770ed93230fe7e097fe72d731bba,"msq: update known issue about GROUPING SETS and COUNT DISTINCT (#13185)

* msq: update known issue about GROUPING SETS and COUNT DISTINCT

* address feedback from Gian",2022-10-06T02:47:03Z
41e51b21c3396a78c7a6b736bcb87903876991b2,"Make http options the default configurations (#13092)

Druid currently uses Zookeeper dependent options as the default.
This commit updates the following to use HTTP as the default instead.
- task runner. `druid.indexer.runner.type=remote -> httpRemote`
- load queue peon. `druid.coordinator.loadqueuepeon.type=curator -> http`
- server inventory view. `druid.serverview.type=curator -> http`",2022-10-05T00:05:17Z
eff7edb6032fecf112feb289c8193baec8e4b41b,"update core Apache Kafka dependencies to 3.3.1 (#13176)

Announcement:
- https://blogs.apache.org/kafka/entry/what-rsquo-s-new-in

Release notes:
- https://archive.apache.org/dist/kafka/3.3.0/RELEASE_NOTES.html
- https://downloads.apache.org/kafka/3.3.1/RELEASE_NOTES.html",2022-10-04T19:52:16Z
e3f9a0ed4491c0876783411be7b7973c777edfda,"Lazy initialization of segment killers, movers and archivers (#13170)

* Lazy initialization of segment killers, movers and archivers

* Add test for lazy killer

* Add more tests

* Intellij fixes",2022-10-04T10:25:46Z
b07f01d645fe23dfa8d35b5588b3656b0c36cdce,"Set useMaxMemoryEstimates=false by default (#13178)

A value of `false` denotes that the new flow with improved estimates will be used.",2022-10-04T09:34:23Z
7fa53ff4b321590eb97100c3fe21868badbc0051,"Exclude calcite from dependabot (#13160)

* Exclude calcite from dependabot

* Update .github/dependabot.yml

Co-authored-by: Liam Newman <96086065+liam-verta@users.noreply.github.com>

* Update dependabot.yml

Co-authored-by: Liam Newman <96086065+liam-verta@users.noreply.github.com>",2022-10-04T02:21:11Z
4bfae1deee75be688ee5b428a13b32e9f24ead4f,"Docs: fix doc search (#13164)

* fix doc search

* upgrade website node to 16

* change website travis script

* move spellcheck notification

* explicit path to npm bin

* cd to the correct place",2022-10-03T23:48:13Z
92d2633ae6808116c52d5b813403fd1f5b84309c,"Update ClusterByStatisticsCollectorImpl to use bytes instead of keys (#12998)

* Update clusterByStatistics to use bytes instead of keys

* Address review comments

* Resolve checkstyle

* Increase test coverage

* Update test

* Update thresholds

* Update retained keys function

* Update docs

* Fix spelling",2022-10-03T06:38:23Z
ebfe1c0c90d86e4d188617fe840dafb2c9b7e5b0,"Web console: fix DQT import (#13159)

* fix dqt import

* update licenses

* update tests",2022-09-30T16:31:06Z
ce5f55e5ce00d876277424ea0724b70a330315b3,"Fix over-replication caused by balancing when inventory is not updated yet (#13114)

* Add coordinator test framework

* Remove outdated changes

* Add more tests

* Add option to auto-sync inventory

* Minor cleanup

* Fix inspections

* Add README for simulations, add SegmentLoadingNegativeTest

* Fix over-replication from balancing

* Fix README

* Cleanup unnecessary fields from DruidCoordinator

* Add a test

* Fix DruidCoordinatorTest

* Remove unused import

* Fix CuratorDruidCoordinatorTest

* Remove test log4j2.xml",2022-09-29T06:36:23Z
61b34950e7dd80f35c8e3d1db71fcf24cfaf9238,"Fix assertion error in sql planning for latest aggregators (#13151)

* Fix sql planning bug for latest aggregators

* change test name

* Fix error messages

* fix error message again",2022-09-28T15:31:32Z
acafd0d1e03a2f4827f1e300843dc178f95fdd14,"Upgrade kafka version to 3.2.3 to fix CVE (#13142)

Upgrade to 3.2.3 to fix CVE: https://nvd.nist.gov/vuln/detail/CVE-2022-34917",2022-09-28T05:17:09Z
548d810baa0dc7915afa498fb8249ca66a30d9e2,Correct nested columns example (#13150),2022-09-28T05:09:56Z
0d7bf66578479afd920ba96db4c44a01e912833b,"Add a note to the documentation about pre-built HLLSketches (#13088)

* add a note to the documentation about pre-built HLLSketches

Druid actually supports ingesting a pre-generated sketch column by using
the HLLSketchMerge aggregator. However, this functionality was
previously not made clear in the documentation.

* copyedit from the King's English to American English

* add suggested style changes

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-09-27T02:29:39Z
c8f4d72fb1258cd34fb4482e29113a044dd741ab,"Fix documentation bug about injective lookups (#13147)

replace mapping to `unique keys` with mapping to `unique values`.",2022-09-27T02:16:48Z
28b9edc2a8da0188a0195fe18cdd20819a850c30,"Add BIG_SUM SQL function (#13102)

This adds a sql function, ""BIG_SUM"", that uses
CompressedBigDecimal to do a sum. Other misc changes:

1. handle NumberFormatExceptions when parsing a string (default to set
   to 0, configurable in agg factory to be strict and throw on error)
2. format pom file (whitespace) + add dependency
3. scaleUp -> scale and always require scale as a parameter",2022-09-27T01:02:25Z
1f1fced6d4c1866c2763df75438e46c5d4cef718,"Add JsonInputFormat option to assume newline delimited JSON, improve parse exception handling for multiline JSON (#13089)

* Add JsonInputFormat option to assume newline delimited JSON, improve handling for non-NDJSON

* Fix serde and docs

* Add PR comment check",2022-09-27T00:51:04Z
e839660b6ae0564aef7080c127e214314c8d216a,Grab the thread name in a poisoned pool (#13143),2022-09-27T00:09:10Z
0bfa81b7df4b0ae76ac45497b007b6857acb419f,"Fix the Injector creation in HadoopTask (#13138)

* Injector fix in HadoopTask

* Log the ExtensionsConfig while instantiating the HadoopTask

* Log the config in the run() method instead of the ctor",2022-09-24T05:08:25Z
306f612f866790eb69a6e6fa365b70c542135fe4,"Suppress Calcite CVE (#13119)

* Suppress Calcite CVE

* Update comment",2022-09-23T10:53:26Z
a910764e4102c6e02d8a078843041ee761fd01cf,better spec conversion with issues (#13136),2022-09-22T17:46:57Z
6c1dc6589e815ccc1494e07bc97f4a30fde00e2b,initialize all counters for stages with input (#13137),2022-09-22T15:10:50Z
728745a1d338b618752c96486fe6f63dd9739ab2,"Add IT for MSQ task engine using the new IT framework (#12992)

* first test, serde causing problems

* serde working

* insert and select check

* Add cluster annotations for MSQ test cases

* Add cluster config for MSQ

* Add MSQ config to the pom.xml

* cleanup unnecessary changes

* Remove model classes

* Comments, checkstyle, check queries from file

* fixup test case name

* build failure fix

* review changes

* build failure fix

* Trigger Build

* Log the mismatch in QueryResultsVerifier

* Trigger Build

* Change the signature of the results verifier

* review changes

* LGTM fix

* build, change pom

* Trigger Build

* Trigger Build

* trigger build with minimal pom changes

* guice fix in tests

* travis.yml",2022-09-22T10:39:47Z
044cab50945ea654c0d962f756122055ba168f58,"Optimize CompressedBigDecimal compareTo() (#13086)

Optimizes the compareTo() function in
CompressedBigDecimal. It directly compares the int[] rather than
creating BigDecimal objects and using its compareTo.

It handles unequal sized CBDs, but does require
the scales to match.",2022-09-22T03:31:02Z
f1d3728371731dae22ed88af6ee904acf0f0d6f0,append to exisitng callout (#13130),2022-09-22T02:39:28Z
eb760c3d1d314414ab8616c4a42796b20e798ed5,"update log4j example (#13095)

* update log4j example

* fix some style issues

* Update docs/configuration/logging.md

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-09-22T01:46:49Z
12f12a13a943e87abb173530069cc9242dabec5b,fix: fix broken postgres link (#13135),2022-09-22T01:46:20Z
7fa35839c0494dae1bbfc7433687ec2c974402fc,"fix: follow naming convention for msq task engine (#13127)

* fix: follow naming convention for msq task engine

* more fixes

* add back in experimental

* fix anchor",2022-09-22T01:46:06Z
2f731f356ed6fe8e39d23aae398fe16b20d55fae,"Update pull-deps docs with correct repo list. (#13134)

There is only one default remote repo at this time.",2022-09-21T19:16:57Z
331e6d707b003391d44ee583dbc328b2b6359425,"Add KafkaConfigOverrides extension point (#13122)

* Add KafkaConfigOverrides extension point

* X",2022-09-21T06:17:19Z
90d14f629a232ea97c66c3df01a69f902a999140,spatial-filters (#13124),2022-09-21T05:48:36Z
0039409817530bb0eaed0a78549b278e56d51778,"Add test framework to simulate segment loading and balancing (#13074)

Fixes #12822 

The framework added here make it easy to write tests that verify the behaviour and interactions
of the following entities under various conditions:
- `DruidCoordinator`
- `HttpLoadQueuePeon`, `LoadQueueTaskMaster`
- coordinator duties: `BalanceSegments`, `RunRules`, `UnloadUnusedSegments`, etc.
- datasource retention rules: `LoadRule`, `DropRule`

Changes:
Add the following main classes:
- `CoordinatorSimulation` and related interfaces to dictate behaviour of simulation
- `CoordinatorSimulationBuilder` to build a simulation.
- `BlockingExecutorService` to keep submitted tasks in queue and execute them
  only when explicitly invoked.

Add tests:
- `CoordinatorSimulationBaseTest`, `SegmentLoadingTest`, `SegmentBalancingTest`
- `SegmentLoadingNegativeTest` to contain tests which assert the existing erroneous behaviour
of segment loading. Once the behaviour is fixed, these tests will be moved to the regular
`SegmentLoadingTest`.

Please refer to the README.md in `org.apache.druid.server.coordinator.simulate` for more details",2022-09-21T04:21:58Z
5ed5c83aab6bac365cc584e04fdf6122c7ac5ed1,"Clarified the behaviour of SQL COUNT(DISTINCT dim) on multi-value dimensions (#13128)

* Clarified the behaviour of COUNT(DISTINCT column) on multi-value columns

* Update docs/querying/sql-aggregations.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Vadim Ogievetsky <vadimon@gmail.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-09-21T01:03:34Z
edc444a4bcec710ae8882d3af29106d41fd6a803,fix quickstart (#13126),2022-09-21T00:44:21Z
455b074b36ccb7986c7c4eb69b90dd1558a1fc56,"Move JDK11 ITs to cron stage (#13075)

* Move JDK11 ITs to cron stage

* Make cron run on release branches

* Review comments

* fix spelling",2022-09-20T16:18:52Z
b9edfe34a40ef033f3d9c362227fc83827c5b2f1,be consistent about referring to the web console by its name (#13118),2022-09-19T22:02:17Z
a3391693eb4af9b38f3c23aa275765749d0a5cb9,Improve a MSQ planning error message (#13113),2022-09-19T15:11:54Z
48638a5438db1d58ee0145e02723745db0dc940d,"Getting extension list from pom (#13073)

* Getting extension list from pom

* Trigger Build",2022-09-19T09:44:21Z
a0e0fbe1b349debd3da4a136b9a25b5316291d55,nested column serializer performance improvement for sparse columns (#13101),2022-09-19T08:37:48Z
8ce03eb094d6723b831ac03a067e2c4e3cf499fb,"Convert the Druid planner to use statement handlers (#12905)

* Converted Druid planner to use statement handlers

Converts the large collection of if-statements for statement
types into a set of classes: one per supported statement type.
Cleans up a few error messages.

* Revisions from review comments

* Build fix

* Build fix

* Resolve merge confict.

* More merges with QueryResponse PR

* More parameterized type cleanup

Forces a rebuild due to a flaky test",2022-09-19T06:28:45Z
bb0b810b1dc54ef0ea971c8f3c6d4d9e7f64ff6b,"fix html tags in docs (#13117)

* fix html tags in docs

* revert not null",2022-09-19T02:40:33Z
2e729170cc511d2d5f210e37de20cf8789bd400a,"Kill task: Don't include markAsUnused unless set. (#13104)

Cleans up the serialized JSON.",2022-09-17T21:03:34Z
de8f229bed6624b2b4fca493ff4a9e8ca04c0fb1,"Web console: correctly escape path based flatten specs (#13105)

* fix path generation

* do escape

* fix replace

* fix replace for good",2022-09-17T21:02:42Z
d9b2968edba9300464d3579efce9b67da72605dc,Docs: Clarify the situation with SELECT. (#13109),2022-09-17T17:47:57Z
b366a6c5a4aff9b535f35a200b30123737c790d3,"Add clarification around docker environment #8926 (#13084)

* Add clarification around docker environment #8926

* fix spelling

* Update docs/tutorials/docker.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/tutorials/docker.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* fix nano quickstart

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-09-17T12:44:24Z
da30c8070a073b3d694e4aefd7bd076198d27c3c,"kafka consumer: custom serializer can't be configured after it's instantiation (#12960) (#13097)

* allow kakfa custom serializer to be configured

  * add unit tests

Co-authored-by: ellen shen <ellenshen@apple.com>",2022-09-17T12:42:21Z
d4967c38f87320cd2ac08047be973dedeeb330c0,"Various documentation updates. (#13107)

* Various documentation updates.

1) Split out ""data management"" from ""ingestion"". Break it into thematic pages.

2) Move ""SQL-based ingestion"" into the Ingestion category. Adjust content so
   all conceptual content is in concepts.md and all syntax content is in reference.md.
   Shorten the known issues page to the most interesting ones.

3) Add SQL-based ingestion to the ingestion method comparison page. Remove the
   index task, since index_parallel is just as good when maxNumConcurrentSubTasks: 1.

4) Rename various mentions of ""Druid console"" to ""web console"".

5) Add additional information to ingestion/partitioning.md.

6) Remove a mention of Tranquility.

7) Remove a note about upgrading to Druid 0.10.1.

8) Remove no-longer-relevant task types from ingestion/tasks.md.

9) Move ingestion/native-batch-firehose.md to the hidden section. It was previously deprecated.

10) Move ingestion/native-batch-simple-task.md to the hidden section. It is still linked in some
    places, but it isn't very useful compared to index_parallel, so it shouldn't take up space
    in the sidebar.

11) Make all br tags self-closing.

12) Certain other cosmetic changes.

13) Update to node-sass 7.

* make travis use node12 for docs

Co-authored-by: Vadim Ogievetsky <vadim@ogievetsky.com>",2022-09-17T04:58:11Z
c62a8221211dbf6a6b6111ff11eed4cff9febaf7,support kafka lookups (#13098),2022-09-16T22:25:25Z
9b53b0184f12e072074e35e58633f442f2acb6da,"Allocate numCorePartitions using only used segments (#13070)

* Allocate numCorePartitions using only used segments

* Add corePartition checks in existing test

* Separate committedMaxId and overallMaxId

* Fix bug: replace overall with committed",2022-09-16T13:46:36Z
2493eb17bf0d7665bfceac5878ff35e410812b80,"Doc fixes around msq (#13090)

* remove things that do not apply

* fix more things

* pin node to a working version

* fix

* fixes

* known issues tidy up

* revert auto formatting changes

* remove management-uis page which is 100% lies

* don't mention the Coordinator console (that no longer exits)

* goodies

* fix typo",2022-09-16T09:15:26Z
5ece87063430e142151af88c7941222991cc5763,"split up NestedDataColumnSerializer into separate files (#13096)

* split up NestedDataColumnSerializer into separate files

* fix it",2022-09-16T08:28:47Z
2218c8d23ce1a29a22dea30c8b209d856109d8ba,"Documentation: Update spatial indexing example (#12555)

* fix spatial indexing example

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update text and example

* Format JSON example

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/development/geo.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Accept review suggestions

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Frank Chen <frankchen@apache.org>",2022-09-16T02:32:19Z
68262e43f88876ac7041d5df509760f6185fcf3f,"Docs – README.md update around documentation contributions (#12850)

* Update README.md

Expansion on the process and where everything is.

* Update README.md

Switcheroo and a typo fix.

* Update README.md

Header link update to take to the H2.

* Update README.md

Reverted docs link after feedback

* Update README.md

Amended language.

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update README.md

PR term update

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-09-16T02:31:06Z
b8dd822f32d35ddd37547d9441bf61c4cba85332,Some improvements about Docker (#13059),2022-09-16T01:25:52Z
078b50ebe1951f113c96fe8e28290246028ab6b7,link to error docs (#13094),2022-09-15T22:06:08Z
c32bf0df65faed5606a395f9be06b58f598536cf,"Docs - README.md community channels removal + link (#12843)

* README.md community channels

Removed explicit links to project channels in favour of a link direct to the Community page on druid.apache.org.

Updated nav to match remaining headings in the README.

* Update README.md

Reintroduced the old section and amended the nav bar to point to back to the community section.

* Incorporated suggested wording from @paul-rogers with some stylistic blahness
* Updated Slack phraseology to be closer to the Google User Groups header wording and called out specific channels
* Added new wording re: events and articles with link to the repo to contribute them",2022-09-15T12:52:46Z
c153c2a712fda09b7ea78a74f533578e57bdcb9f,"Initialize NullValueHandlingConfig for failed tests  (#13078)

* Initialize null handling

* Refactor nullhandlingconfig init",2022-09-15T12:47:10Z
1311e85f6588016176c29c3eb37b09ddb9865f7d,"Faster fix for dangling tasks upon supervisor termination (#13072)

This commit fixes issues with delayed supervisor termination during certain transient states.
Tasks can be created during supervisor termination and left behind since the cleanup may
not consider these newly added tasks.

#12178 added a lock for the entire process of task creation to prevent such dangling tasks.
But it also introduced a deadlock scenario as follows:
- An invocation of `runInternal` is in progress.
- A `stop` request comes, acquires `stateChangeLock` and submit a `ShutdownNotice`
- `runInternal` keeps waiting to acquire the `stateChangeLock`
- `ShutdownNotice` remains stuck in the notice queue because `runInternal` is still running
- After some timeout, the supervisor goes through a forced termination

Fix:
 * `SeekableStreamSupervisor.runInternal` - do not try to acquire lock if supervisor is already stopping
 * `SupervisorStateManager.maybeSetState` - do not allow transitions from STOPPING state",2022-09-15T10:01:14Z
aa9b0900d434f6e882adc6715adfbc787a68e302,"Move web-console dependency declaration from druid-server to druid-distribution (#12501)

* Move web-console dependency from druid-server to distribution

* Add a test to check if the web-console is correctly integrated

* exclude web-console from 'other integration tests'

* Revert ""exclude web-console from 'other integration tests'""

This reverts commit 8d72225544f83514c344b5ecd9c69c9b3114ee33.

* Revert ""Add a test to check if the web-console is correctly integrated""

This reverts commit d6ac8f3087b22515b03e42fd57d24e7f3ddca254.",2022-09-15T02:39:30Z
5733360dfd8446234f2284b6a84d3678e6dbd038,"Update Snappy to 1.1.8.4. (#13081)

* Update Snappy to 1.1.8.4.

Prior to this, because snappy-java wasn't included in dependencyManagement,
we actually shipped multiple different versions for different extensions,
ranging from 1.1.7.1 to 1.1.8.4. Now, we standardize on 1.1.8.4.

Among other things, this enables the tests to pass on M1 Macs.

* Update snappy-java versions in licenses.yaml.",2022-09-14T22:13:47Z
f4ec50bf7a9e7e423dad4b1c2fb3c5af846ef075,fix JsonParserIteratorTest (#13083),2022-09-14T03:49:57Z
a8fd3a90779a007676ba4cb9ca8d35633b781884,"Provide service specific log4j overrides in containerized deployments (#13020)

* Provide service specific log4j overrides

* Clarify comments

* Add docs",2022-09-14T03:47:11Z
54a2eb7dccbd4b395587f71625669c0f4cb3500b,"Compressed Big Decimal Cleanup and Extension (#13048)

1. remove unnecessary generic type from CompressedBigDecimal
2. support Number input types
3. support aggregator reading supported input types directly (uningested
   data)
4. fix scaling bug in buffer aggregator",2022-09-14T02:14:31Z
fd6c05eee8941c6fb3ade67217cb244748142dac,"Avoid ClassCastException when getting values from `QueryContext` (#13022)

* Use safe conversion methods

* Rename method

* Add getContextAsBoolean

* Update test case

* Remove generic from getContextValue

* Update catch-handler

* Add test

* Resolve comments

* Replace 'getContextXXX' to 'getQueryContext().getAsXXXX'",2022-09-13T10:00:09Z
08d6aca52865ab7bcbf75e16c4ca153bd3ca06f3,"Web console: better detection for arrays containing objects (#13077)

* better detection for arrays containing objects

* include boolean also",2022-09-13T01:50:29Z
77925cdcdd9c2da98c4cbf175cdb687e47ed07ed,"Expressions: fixes for round-trips of floating point literals, Long.MIN_VALUE literals, Shuffle.visitAll. (#13037)

* SQL: Fix round-trips of floating point literals.

When writing RexLiterals into Druid expressions, we now write non-integer
numeric literals in such a way that ensures they are parsed as doubles
on the other end.

* Updates from code review, and some additional stuff inspired by the
investigation.

- Remove unnecessary formatting code from DruidExpression.doubleLiteral:
  it handles things just fine with its default behavior.

- Fix a problem where expression literals could not represent Long.MIN_VALUE.
  Now, integer literals start life off as BigIntegerExpr instead of LongExpr,
  and are converted to LongExpr during flattening. This is necessary because,
  in order to avoid ambiguity between unary minus and negative literals, our
  grammar does not actually have true negative literals. Negative numbers must
  be represented as unary minus next to a positive literal.

- Fix a bug  introduced in #12230 where shuttle.visitAll(args) delegated
  to shuttle.visit(arg) instead of arg.visit(shuttle). The latter does
  a recursive visitation, which is the intended behavior.

* Style fixes.

* Move regexp to the right place.",2022-09-13T00:06:20Z
c00ad28ecc06d009d868794354ffb8a0f1556f35,"Cleaner JSON for various input sources and formats. (#13064)

* Cleaner JSON for various input sources and formats.

Add JsonInclude to various properties, to avoid population of default
values in serialized JSON.

Also fixes a bug in OrcInputFormat: it was not writing binaryAsString,
so the property would be lost on serde.

* Additonal test cases.",2022-09-12T17:29:31Z
80b97ac24dde0fe2ca1ff2d3a3156182b30de451,Create a copy of the shared JDBC context (#13049),2022-09-12T17:27:56Z
eff7c6422833236bbc96ac9cf57e1c50c124d3e3,export com.sun.management.internal (#13068),2022-09-12T16:03:22Z
5ba0075c0c5054b7f11b02201e80e952dcf0e691,"Expose HTTP Response headers from SqlResource (#13052)

* Expose HTTP Response headers from SqlResource

This change makes the SqlResource expose HTTP response
headers in the same way that the QueryResource exposes them.

Fundamentally, the change is to pipe the QueryResponse
object all the way through to the Resource so that it can
populate response headers.  There is also some code
cleanup around DI, as there was a superfluous FactoryFactory
class muddying things up.",2022-09-12T08:40:06Z
f60ec8e7ca4a7d5a5c32a8926b3547e95783106f,Enable msq for docker by default (#13069),2022-09-11T15:30:32Z
4bde50e683e649c57a5d1a147bb15c6286e9eb97,Bump the version of Druid docker image from 0.16.0-incubating to latest (#13058),2022-09-10T08:36:00Z
4fc43670e5965e25c9e4056cff91022f0b927c93,adjust docs and images (#13067),2022-09-10T08:35:19Z
d978afc5b79db7d62694008800c43cf3380c69fc,fix number of expected functions (#13050),2022-09-09T20:42:01Z
e29e7a843461562386d1febadb8c62739aa7605d,"Add ARRAY_QUANTILE function. (#13061)

* Add ARRAY_QUANTILE function.

Expected usage is like: ARRAY_QUANTILE(ARRAY_AGG(x), 0.9).

* Fix test.",2022-09-09T18:29:20Z
5cc5f7b60c8d2591eb01d273cc37dc4dd18b99be,"quote columns, datasources in auto complete if needed (#13060)",2022-09-09T18:22:40Z
dced61645f360aa140334d697c520061cd601b5c,"prometheus-emitter supports sending metrics to pushgateway regularly … (#13034)

* prometheus-emitter supports sending metrics to pushgateway regularly and continuously

* spell check fix

* Optimization variable name and related documents

* Update docs/development/extensions-contrib/prometheus.md

OK, it looks more conspicuous

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update doc

* Update docs/development/extensions-contrib/prometheus.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* When PrometheusEmitter is closed, close the scheduler

* Ensure that registeredMetrics is thread safe.

* Local variable name optimization

* Remove unnecessary white space characters

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-09-09T12:46:14Z
48c99054d038afcf1ef9d5c0699de213b80b6172,"Update tutorial-kafka.md (#13056)

* Update tutorial-kafka.md

Added missing command to the doc for zookeeper before starting kafka

* Update docs/tutorials/tutorial-kafka.md

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-09-09T02:06:19Z
6438f4198db28c4accfb3524a9a1555a335d9bcf,"improve nested column serializer (#13051)

changes:
* long and double value columns are now written directly, at the same time as writing out the 'intermediary' dictionaryid column with unsorted ids
* remove reverse value lookup from GlobalDictionaryIdLookup since it is no longer needed",2022-09-09T01:32:53Z
d57557d51d94b41c75539d401db6d49d5f9ee2a8,"Improve doc and configuration of prometheus emitter (#13028)

* Improve doc and validation

* Add configuration for peon tasks

* Update doc

* Update test case

* Fix typo

* Update docs/development/extensions-contrib/prometheus.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

* Update docs/development/extensions-contrib/prometheus.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-09-08T18:20:34Z
99fd22c79be85763d48b1caf3ec67767a0c5f9ad,"fix bug in /status/properties filtering (#13045)

* fix bug in /status/properties filtering

* Refactor tests to use jackson for parsing druid.server.hiddenProperties instead of hacky string modifications

* make javadoc more descriptive using example

* add in a sanity assertion that raw properties keyset size is greater than filtered properties keyset size",2022-09-08T00:45:28Z
7e20d7024244544981781ac58c1a67f43053d142,"Fix web-console message in MSQ data loader (#12996)

* Fix typo in web-console message

* Prettify the changes",2022-09-07T20:34:10Z
92789cfc4a885843c15f38ba5b0da99b1c0f555c,default to no compare (#13041),2022-09-07T15:28:28Z
f00f1f754d431bafe34b20d614c9346c6f6f5e53,"MSQ extension: Fix over-capacity write in ScanQueryFrameProcessor. (#13036)

* MSQ extension: Fix over-capacity write in ScanQueryFrameProcessor.

Frame processors are meant to write only one output frame per cycle.
The ScanQueryFrameProcessor would write two when reading from a channel
if the input frame cursor cycled and then the output frame filled up
while reading from the next frame.

This patch fixes the bug, and adds a test. It also makes some adjustments
to the processor code in order to make it easier to test.

* Add license header.",2022-09-07T14:02:21Z
2f156b3610d47983819f928e774ccbe3f067e1e4,Disallow timeseries queries with ETERNITY interval and non-ALL granularity (#12944),2022-09-07T11:15:08Z
7aa8d7f9875cbe950696b5c94e375ac616dd2d04,"Add query/time metric for SQL queries from router (#12867)

* Add query/time metric for SQL queries from router

* Fix query cancel bug when user has overriden native query-id in a SQL query",2022-09-07T08:24:46Z
ee22663dd3b033fad4b349925e7f45e220077183,"Add interpolation to JsonConfigurator (#13023)

* Add interpolation to JsonConfigurator

* Fix checkstyle

* Fix tests by removing common-text override

* Add back commons-text without version

* Remove unused hadoopDir configs

* Move some stuff to hopefully pass coverage",2022-09-07T07:18:01Z
a3a377e570142e26c603390df73c4180741a0837,"more consistent expression error messages (#12995)

* more consistent expression error messages

* review stuff

* add NamedFunction for Function, ApplyFunction, and ExprMacro to share common stuff

* fixes

* add expression transform name to transformer failure, better parse_json error messaging",2022-09-07T06:21:38Z
ed26e2d6348772e91977ae67b747105ac0e5e5f3,"Improve String Last/First Storage Efficiency (#12879)

-Add classes for writing cell values in LZ4 block compressed format.
Payloads are indexed by element number for efficient random lookup
-update SerializablePairLongStringComplexMetricSerde to use block
compression
-SerializablePairLongStringComplexMetricSerde also uses delta encoding
of the Long by doing 2-pass encoding: buffers first to find min/max
numbers and delta-encodes as integers if possible

Entry points for doing block-compressed storage of byte[] payloads
are the CellWriter and CellReader class. See
SerializablePairLongStringComplexMetricSerde for how these are used
along with how to do full column-based storage (delta encoding here)
which includes 2-pass encoding to compute a column header",2022-09-07T03:00:54Z
1f691406237853409207d51ddde3c7546ca6fe47,"Nested columns documentation (#12946)

Co-authored-by: Clint Wylie <cjwylie@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: brian.le <brian.le@imply.io>",2022-09-06T21:42:18Z
897689c03b328567eb420bf998116fef03fa009c,"remove mentions of DruidQueryRel from docs (#13033)

* remove mentions of DruidQueryRel

* Update docs/querying/sql-translation.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql-translation.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-09-06T20:37:27Z
2a039e7e6a4ebe5d02987a3fc74f29311b07ce08,"Add CTA and fix typo (#13009)

* Add CTA and fix typo

* resolve hostname better",2022-09-06T18:16:50Z
2cf449386f876100bbd9e74badbd27c407fad601,"Web console: upgrade the console to use node 16 (#13017)

* upgrade the console to use node 16

* run npm audit fix",2022-09-06T18:15:23Z
d4233ef2a1739f15a6a224d466ddc459844dc67f,"msq: add multi-stage-query docs (#12983)

* msq: add multi-stage-query docs

* add screenshots

add back theta sketches tutoria

change filename

fix filename

fix link

fix headings

* fixes

* fixes

* fix spelling issues and update spell file

* address feedback from karan

* add missing guardrail to known issues

* update blurb

* fix typo

* remove durable storage info

* update titles

* Restore en.json

* Update query view

* address comments from vad

* Update docs/multi-stage-query/msq-known-issues.md

finish sentence

* add apache license to docs

* add apache license to docs

Co-authored-by: Katya Macedo <katya.macedo@imply.io>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-09-06T17:36:09Z
66545a0f3d1acd752da5f3ebb581b06c71ea186d,"Fix compiler error: The project was not built since its build path is incomplete. Cannot find the class file for org.slf4j.Logger. Fix the build path then try building this project (#13029)

Co-authored-by: Didip Kerabat <didip@apple.com>",2022-09-06T15:19:41Z
3d9aef225d302c663df8fd1d832b80108ea54047,"compressed big decimal - module  (#10705)

Compressed Big Decimal is an extension which provides support for 
Mutable big decimal value that can be used to accumulate values 
without losing precision or reallocating memory. This type helps in 
absolute precision arithmetic on large numbers in applications, 
where greater level of accuracy is required, such as financial 
applications, currency based transactions. This helps avoid rounding 
issues where in potentially large amount of money can be lost.

Accumulation requires that the two numbers have the same scale, 
but does not require that they are of the same size. If the value 
being accumulated has a larger underlying array than this value 
(the result), then the higher order bits are dropped, similar to what 
happens when adding a long to an int and storing the result in an 
int. A compressed big decimal that holds its data with an embedded 
array.

Compressed big decimal is an absolute number based complex type 
based on big decimal in Java. This supports all the functionalities 
supported by Java Big Decimal. Java Big Decimal is not mutable in 
order to avoid big garbage collection issues. Compressed big decimal 
is needed to mutate the value in the accumulator.",2022-09-06T07:06:57Z
7d332c6f6a6359e6656b71d5efccdb86c9222a74,"Suppress false CVEs (#13026)

* Suppress CVEs

* Add more suppressions",2022-09-06T06:16:56Z
6805a7f9c243445b95090e9aa777512f6411b506,"Ease of hidding sensitive properties from /status/proper… (#12950)

* apache#12063 Ease of hidding sensitive properties from /status/properties endpoint

* apache#12063 Ease of hidding sensitive properties from /status/properties endpoint

* apache#12063 Ease of hidding sensitive properties from /status/properties endpoint

using one property for hiding properties, updated the index.md to document hiddenProperties

* apache#12063 Ease of hidding sensitive properties from /status/properties endpoint

Added java docs

* apache#12063 Ease of hidding sensitive properties from /status/properties endpoint

Add ""password"", ""key"", ""token"", ""pwd"" as default druid.server.hiddenProperties

fixed typo and removed redundant space

Co-authored-by: zemin <zemin.piao@adyen.com>",2022-09-02T13:51:25Z
0ae515bd3c3a7215801c629fe475bb6ff47fd4aa,"Web console: don't crash if cookies are totally disabled (#13013)

* fix local storage detection

* fix numeric input dialog",2022-09-01T23:10:23Z
85d2a6d879358a7154e49aa41423a49224303988,"Improve range partitioning docs. (#13016)

Two improvements:

- Use a realistic targetRowsPerSegment, so if people copy and paste
  the example from the docs, it will generate reasonable segments.
- Spell ""countryName"" correctly.",2022-09-01T22:21:30Z
d73a011f700ce2a1bc77658eb6aefece7eceeb76,Bump the version of Maven in the Dockerfile (#11994),2022-08-31T14:54:24Z
5e850c6ea3e5504b47274fb311af3deccef2fc4c,"Make console e2e tests run in band so as to not hog task slots (#13004)

* increase e2e timeline

* get rid of pull deps

* increase post index task timeoout

* boost msq e2e timeout

* run in band",2022-08-31T04:55:53Z
054688528f5ade4b91f8b85447f947bf886581dc,don't show transform actions on * queries (#13005),2022-08-31T04:54:18Z
48ceab2153d1cf667280b599f81bbf55d10fa95d,"Add Java 17 information to documentation. (#12990)

The docs say Java 17 support is experimental, and give tips on running
successfully with Java 17.

This patch also removes java.base/jdk.internal.perf and
jdk.management/com.sun.management.internal from the list of required
exports and opens, because they were formerly needed for JvmMonitor,
which was rewritten in #12481 to use MXBeans instead.",2022-08-30T19:32:49Z
2450b96ac80f6881a2b57cd3e0f116da860cb022,"FrameFile: Java 17 compatibility. (#12987)

* FrameFile: Java 17 compatibility.

DataSketches Memory.map is not Java 17 compatible, and from discussions
with the team, is challenging to make compatible with 17 while also
retaining compatibility with 8 and 11. So, in this patch, we switch away
from Memory.map and instead use the builtin JDK mmap functionality. Since
it only supports maps up to Integer.MAX_VALUE, we also implement windowing
in FrameFile, such that we can still handle large files.

Other changes:

1) Add two new ""map"" functions to FileUtils, which we use in this patch.
2) Add a footer checksum to the FrameFile format. Individual frames
   already have checksums, but the footer was missing one.

* Changes for static analysis.

* wip

* Fixes.",2022-08-30T18:13:47Z
f3c47cf68c009ab59853c418eef98a3b75984238,"Building druid-it-tools and running for travis in it.sh (#12957)

* Building druid-it-tools and running for travis in it.sh

* Addressing comments

* Updating druid-it-image pom to point to correct it-tools

* Updating all it-tools references to druid-it-tools

* Adding dist back to it.sh travis

* Trigger Build

* Disabling batchIndex tests and commenting out user specific code

* Fixing checkstyle and intellij inspection errors

* Replacing tabs with spaces in it.sh

* Enabling old batch index tests with indexer",2022-08-30T07:18:07Z
414176fb97b0bb852feffa11bb1914d4c82e6d64,"Fix accounting of bytesAdded in ReadableByteChunksFrameChannel. (#12988)

* Fix accounting of bytesAdded in ReadableByteChunksFrameChannel.

Could cause WorkerInputChannelFactory to get into an infinite loop when
reading the footer of a frame file.

* Additional tests.",2022-08-30T01:25:28Z
9eb20e5e7cffb4064b405085979f679ccb246048,"Remove dependency on jvm-attach. (#12989)

This dependency was no longer needed after #12481, but remained because
it was used for a (now useless) test. This patch removes the test and
the dependency.",2022-08-29T21:18:33Z
0460d8a502fa5a1c5e06ef542fc9edf3aeb65e77,"Adjust SQL ""cannot plan"" error message. (#12903)

Two changes:

1) Restore the text of the SQL query. It was removed in #12897, but
   then it was later pointed out that the text is helpful for end
   users querying Druid through tools that do not show the SQL queries
   that they are making.

2) Adjust wording slightly, from ""Cannot build plan for query"" to
   ""Query not supported"". This will be clearer to most users. Generally
   the reason we get these errors is due to unsupported SQL constructs.",2022-08-29T13:03:00Z
9fd8ab3c750c57dae3a6cf2608b9ee3e83e2614f,"[Issue 10331] Fresh Docker install results in ""Uh... I have no servers. Not assigning anything... (#12963)

* add env var DRUID_SINGLE_NODE_CONF

* no message

* typo fix

Co-authored-by: Wil Quan <wiquan@appdynamics.com>",2022-08-29T12:13:53Z
618757352bae85058ad59da6c4350f4092dd2365,"Bump up the version to 25.0.0 (#12975)

* Bump up the version to 25.0.0

* Fix the version in console",2022-08-29T05:57:38Z
9843355ddd8bf71c070b71d9832b12e66486ed1f,"Throw parse exception for multi-valued numeric dims (#12953)

During ingestion, if a row containing multiple values for a numeric dimension is encountered,
the whole ingestion task fails. Ideally, this should just be registered as a parse exception.

Changes:
- Remove `instanceof List` check from `LongDimensionIndexer`, `FloatDimensionIndexer` and `DoubleDimensionIndexer`.

Any invalid type, including list, throws a parse exception in `DimensionHandlerUtils.convertObjectToXXX`
methods. `ParseException` is already handled in `OnHeapIncrementalIndex` and does not fail the entire task.",2022-08-29T05:03:48Z
16f5ac5bd5ea4d8ce1eef546793c90298f1a43e0,"json_value adjustments (#12968)

* json_value adjustments
changes:
* native json_value expression now has optional 3rd argument to specify type, which will cast all values to the specified type
* rework how JSON_VALUE is wired up in SQL. Now we are using a custom convertlet to translate JSON_VALUE(... RETURNING type) into dedicated JSON_VALUE_BIGINT, JSON_VALUE_DOUBLE, JSON_VALUE_VARCHAR, JSON_VALUE_ANY instead of using the calcite StandardConvertletTable that wraps JSON_VALUE_ANY in a CAST, so that we preserve the typing of JSON_VALUE to pass down to the native expression as the 3rd argument

* fix json_value_any to be usable by humans too, coverage

* fix bug

* checkstyle

* checkstyle

* review stuff

* validate that options to json_value are the supported options rather than ignore them

* remove more legacy undocumented functions",2022-08-27T14:15:47Z
7e2371bbdebd3c9a111d40543dbee12ee2e7c045,"KLL sketch (#12498)

* KLL sketch

* added documentation

* direct static refs

* direct static refs

* fixed test

* addressed review points

* added KLL sketch related terms

* return a copy from get

* Copy unions when returning them from ""get"".

* Remove redundant ""final"".

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>
Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2022-08-27T04:19:24Z
21b73bde20b58d9b9d6f9e905a8ef9ad04e9cca3,"Update Curator to 5.3.0 (#12939)

* Update Curator to 5.3.0

* Update licenses.yaml

* Fix inspections + add tests.

* Fix checkstyle

* Another intellij inspection fix

* Update curator exclusions

* Cleanup new exhibitor references

* Remove unused dep and checkstyle fix",2022-08-27T01:23:40Z
4bdf9815c152aa8f0cfb8b5e7759e377444f2559,fix issue with SQL planner and null array constants (#12971),2022-08-26T11:44:17Z
acb09ff18bc36bcc474da22f313d665d31ae1907,grab warnings from correct key + test (#12977),2022-08-26T01:47:33Z
e476e754627183734cbbef7316c248cd6b72a87f,"fix #12945 - type conversion exception occurs during the variance query (#12967)

Co-authored-by: gejun <gejun@tingyun.com>",2022-08-26T01:10:58Z
275f834b2a9f23cec59dfeeb9ab44ac9081620fe,"Race in Task report/log streamer (#12931)

* Fixing RACE in HTTP remote task Runner

* Changes in the interface

* Updating documentation

* Adding test cases to SwitchingTaskLogStreamer

* Adding more tests",2022-08-26T00:56:01Z
72aba00e0991f301e12db77055cd43ffd2f85fe1,add json function support for paths with negative array indexes (#12972),2022-08-26T00:11:28Z
4c61378ad1da25960b8283e58f890c9b1a47ddfa,"fix broken link in web-console (#12976)

In 0.23.0, the info-button links to https://druid.apache.org/docs/0.23.0/ingestion/flatten-json.html which is a 404

If I got the spot right, this should now link to https://druid.apache.org/docs/[VERSION]/ingestion/data-formats.html#flattenspec",2022-08-25T23:47:41Z
ad62c0eb31644158343e590a92a4f4dbbaa1df2b,ignore licenses changes in check test script (#12964),2022-08-25T19:31:28Z
7a1e1f88bb16876d231da8d57b6bb121738c8e16,"Remove experimental note from stable features (#12973)

* Removed experimental note for features that are no longer experimental

* Updated native batch doc",2022-08-25T16:26:46Z
fd6cfcb8fb566bdff3bc9310fbec11bf628cf7c0,"Web console: fix pagination, add error delimiters (#12969)

* fix pagination, add error delimiters

* reword debug message",2022-08-25T15:18:21Z
31dc9004bd31b4a7e32744dc11b1dba768f0d5be,"Auto-reload TLS certs for druid endpoints (#12933)

* #12064 Auto-reload tls certs for druid endpoints

* #12064 Add missing toString param

* #12064 Add tests and new jks
Co-authored-by: zemin-piao <pzm6391@gmail.com>

* #12064 Refine tests

* #12064 Add documentation

* Apply suggestions from code review

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: santosh <santosh.pingale@adyen.com>
Co-authored-by: Frank Chen <frankchen@apache.org>",2022-08-25T12:12:43Z
9cc30ee1205e3b195d767e377d48c77888ffd7d7,Suppressing CVE-2022-25168 - hadoop-common-2.8.5.jar (#12970),2022-08-25T10:32:17Z
8ee8786d3ce32f39d8517b5a0dddd6211101b2a4,"add maxBytesInMemory and maxClientResponseBytes to SamplerConfig (#12947)

* add maxBytesInMemory and maxClientResponseBytes to SamplerConfig",2022-08-25T07:50:41Z
82ad92708778de02eb3857cc6aca337663bed871,"tighten up array handling, fix bug with array_slice output type inference (#12914)",2022-08-25T07:48:49Z
599bdde02a0a1ee40c8bca5a09ff4911885158b8,"Update asf-release-process-guide.md (#12966)

* Update asf-release-process-guide.md

* Update asf-release-process-guide.md",2022-08-25T07:45:06Z
31db3beed8fd94e9478406b1424c7d88e7a84cb5,"Fixing json creator for s3 storage connector provider (#12948)

* Fixing json creator for s3 storage connector provider

* Adding guice tests",2022-08-25T05:38:57Z
04ee7abeff7db86aca350a5daae8bf8cfa0da81f,"Web console: Multi-stage query support (#12919)

* MSQ web console

* fix typo in comments

* remove useless conditional

* wrap SQL_DATA_TYPES

* fixes sus regex

* rewrite regex

* remove problematic regex

* fix UTs

* convert PARTITIONED / CLUSTERED BY to ORDER BY for preview

* fix log

* updated to use shuffle

* Web console: Use Ace.Completion directly (#1405)

* Use Ace.Completion directly

* Another Ace.Completion

* better comment

* fix column ordering in e2e test

* add nested data example also

Co-authored-by: John Gozde <john.gozde@imply.io>",2022-08-24T23:17:12Z
02914c17b9cfd4a81a9db5f650d1a1d378b14414,"Tutorial on ingesting and querying Theta sketches (#12723)

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-08-24T16:23:22Z
35aaaa9573161e3916a8fef3167d842f733573e4,"Fix serialization in TaskReportFileWriters. (#12938)

* Fix serialization in TaskReportFileWriters.

For some reason, serializing a Map<String, TaskReport> would omit the
""type"" field. Explicitly sending each value through the ObjectMapper
fixes this, because the type information does not get lost.

* Fixes for static analysis.",2022-08-24T15:11:01Z
c1a75fca3cb2bd76d4db5510daa02e4df318fd6c,"Docs: fix doc footer (#12943)

* fix doc footer

* move the logic to the fix-path script",2022-08-24T13:47:58Z
f7c63169924611969139783a711275f33f694676,"Setting useNativeQueryExplain to true (#12936)

* Setting useNativeQueryExplain to true

* Update docs/querying/sql-query-context.md

Co-authored-by: Santosh Pingale <pingalesantosh@gmail.com>

* Fixing tests

* Fixing broken tests

Co-authored-by: Santosh Pingale <pingalesantosh@gmail.com>",2022-08-24T12:09:55Z
cfed036091038dc05cdb246e2849fdbed39aec0d,"Add the new integration test framework (#12368)

This commit is a first draft of the revised integration test framework which provides:
- A new directory, integration-tests-ex that holds the new integration test structure. (For now, the existing integration-tests is left unchanged.)
- Maven module druid-it-tools to hold code placed into the Docker image.
- Maven module druid-it-image to build the Druid-only test image from the tarball produced in distribution. (Dependencies live in their ""official"" image.)
- Maven module druid-it-cases that holds the revised tests and the framework itself. The framework includes file-based test configuration, test-specific clients, test initialization and updated versions of some of the common test support classes.

The integration test setup is primarily a huge mass of details. This approach refactors many of those details: from how the image is built and configured to how the Docker Compose scripts are structured to test configuration. An extensive set of ""readme"" files explains those details. Rather than repeat that material here, please consult those files for explanations.",2022-08-24T11:33:23Z
0bc9f9f30395309995a851fb4ed60a0521381b82,"#12912 Fix KafkaEmitter not emitting queryType for a native query (#12915)

Fixes KafkaEmitter not emitting queryType for a native query. The Event to JSON serialization was extracted to the external class: EventToJsonSerializer. This was done to simplify the testing logic for the serialization as well as extract the responsibility of serialization to the separate class.

The logic builds ObjectNode incrementally based on the event .toMap method. Parsing each entry individually ensures that the Jackson polymorphic annotations are respected. Not respecting these annotation caused the missing of the queryType from output event.",2022-08-24T08:37:00Z
3b58a01c7c92a1dee299d9b08031932ff869be79,Correct spelling in messages and variable names. (#12932),2022-08-24T05:36:31Z
31eda58e9aee33b393fa4e45d458b27b7d190c02,Fix misspelling in license.md (#12941),2022-08-24T02:53:47Z
d7d15ba51f15f15ac438a05172c6e83e4702f166,"Add druid-multi-stage-query extension. (#12918)

* Add druid-multi-stage-query extension.

* Adjustments from CI.

* Task ID validation.

* Various changes from code review.

* Remove unnecessary code.

* LGTM-related.",2022-08-24T01:44:01Z
f0fc45028e48bd4efe65e2ecee3c787f84e83e0a,"Update year in the notice file and the release process instructions (#12622)

* Update notice file

* Update release process instructions

* Better release instructions

* Update copyright year

* Web console: updated the doc link (#12619)

* updated the doc link

* update snapshots

Co-authored-by: Vadim Ogievetsky <vadim@ogievetsky.com>",2022-08-23T12:47:18Z
a1c4eab5222f0645723d12b34983a98b6a7f804b,Update ORC to 1.7.6 (#12928),2022-08-23T08:09:38Z
0c56b22a39339db1adb4aacf33baa2b60e66ed9e,Update .spelling (#12940),2022-08-23T01:47:40Z
289e43281eeec2742a2d5a60ad166a29ad4f6803,"stricter behavior for parse_json, add try_parse_json, remove to_json (#12920)",2022-08-23T01:41:07Z
6fec1d4c95a93b14e334b5fe8713408f4ebc1f0e,"Add useNativeQueryExplain in sql query context documentation (#12924) (#12934)

Co-authored-by: Petar Petrov <petar.petrov@system73.com>",2022-08-22T11:01:15Z
379df5f103ca6d2d0049a53b674078e69713aacf,"Kinesis docs and logs improvements (#12886)

Going ahead with the merge. CI is failing because of a code coverage change in the log line.",2022-08-22T09:19:42Z
a879d91a2059afb63a29c34577b2009f1c83121f,Remove misleading logging on router for JDBC queries (#12925),2022-08-22T06:28:51Z
3c129f672827ce6ca0e3404a51c000e25d158e80,Add sql planning time metric (#12923),2022-08-22T05:39:44Z
f8097ccfaadbe2d2fc1d1dbef75019e55df94aa1,"basic docs for nested column query functions (#12922)

* basic docs for nested column query functions",2022-08-20T00:12:19Z
69fe1f04e5657139b2d0e22d085df089b27fa788,"document virtualColumns in native query documentation, fix some redirects (#12917)

* document virtualColumns in native query documentation, fix some redirects

* after all that, forgot to run spellcheck locally

* review stuff",2022-08-19T03:49:23Z
eb902375a233266229c6955cbe16833992579605,"Light refactor of the heavily refactored statement classes (#12909)

Reflects lessons learned from working with consumers of
the new code.",2022-08-18T21:01:06Z
7fb1153bba73bbb1ae245a8acc7bf605463ed725,"add virtual columns to search query cache key (#12907)

* add virtual columns to search query cache key",2022-08-18T03:26:01Z
770358dc349be088bccc558d01f81d27e2588602,"Update tls-support.md (#12916)

Fixing "" lists all possible values for the configs belong"" in TLS section",2022-08-18T01:46:30Z
536415b9487640cee2dee6e1b31a0bd5b062057b,"Stop leaking Avro objects from parser (#12828)

The Avro parsing code leaks some ""object"" representations.
We need to convert them into Maps/Lists so that other code
can understand and expect good things.  Previously, these
objects were handled with .toString(), but that's not a
good contract in terms of how to work with objects.",2022-08-17T21:46:20Z
752e42a312e98f83c3a89af3648065b4b909fe59,"fix running integration tests on macos aarch64 (#12913)

* add osx-aarch_64 netty-transport-native-kqueue native dependency
* align docker-java dependency versions using bom and update to 3.2.13",2022-08-17T16:03:24Z
a3a9c5f409f7a0985973e062ecd5756f653bb486,"Fixing overlord issued too many redirects (#12908)

* Fixing race in overlord redirects where the node was redirecting to itself

* Fixing test cases",2022-08-17T12:57:39Z
f70f7b4b89a4b2d49a4a994541a16ea31d19fbac,"Bump postgresql from 42.3.3 to 42.4.1 (#12871)

* Bump postgresql from 42.3.3 to 42.4.1

Bumps [postgresql](https://github.com/pgjdbc/pgjdbc) from 42.3.3 to 42.4.1.
- [Release notes](https://github.com/pgjdbc/pgjdbc/releases)
- [Changelog](https://github.com/pgjdbc/pgjdbc/blob/master/CHANGELOG.md)
- [Commits](https://github.com/pgjdbc/pgjdbc/compare/REL42.3.3...REL42.4.1)

---
updated-dependencies:
- dependency-name: org.postgresql:postgresql
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2022-08-16T21:25:39Z
d3015d0f8e3e22ae338c9396a12aec17979d9f29,"DruidQuery: Return a copy from withScanSignatureIfNeeded, as promised. (#12906)

The method wasn't following its contract, leading to pollution of the
overall planner context, when really we just want to create a new
context for a specific query.",2022-08-16T20:23:14Z
f665a0c0770afc2ece782c9da02bdf21dc98a174,"Docs - Add links to Basic Tuning guide in process pages (#12741)

Added link to the relevant section of the Basic Cluster Tuning page on each process page.

This is in order to improve access to this information, which is not easy to find through search or nav.",2022-08-16T13:12:44Z
adbebc174ab56bf9605658e80045dda3fe4ec527,"Fix flaky tests in SeekableStreamSupervisorStateTest (#12875)

* Fix flaky test in SeekableStreamSupervisorStateTest

* Fix for flaky security IT Test

* fix tests

* retry queries if there is some flakiness",2022-08-16T13:08:03Z
3755f30bc48ce96a57e8be73c3602ccc6b86e710,"Add export parameters for Java 11 (#12859)

* Add exports for Java 11 parameters

* Add parameters for data sketches",2022-08-16T07:35:45Z
ec8bdeb9f6f2aac28e78eb41df210da7e74370bb,"Document missing property - druid.announcer.skipSegmentAnnouncementOnZk (#12891)

* document missing config related to segment announcement

* improve wording

* improve wording

* update docs",2022-08-16T07:02:56Z
e42e02529629de908c1a32a2ff7639a054a4a371,"inject @Json ObjectMapper for to_json_string and parse_json expressions (#12900)

* inject @Json ObjectMapper for to_json_string and parse_json expressions

* fix npe

* better",2022-08-15T15:44:24Z
28836dfa71d0bf9baac5512fb86bd40c5ea51c46,"Fix race in TaskQueue.notifyStatus. (#12901)

* Fix race in TaskQueue.notifyStatus.

It was possible for manageInternal to relaunch a task while it was
being cleaned up, due to a race that happens when notifyStatus is
called to clean up a successful task:

1) In a critical section, notifyStatus removes the task from ""tasks"".
2) Outside a critical section, notifyStatus calls taskRunner.shutdown
   to let the task runner know it can clear out its data structures.
3) In a critical section, syncFromStorage adds the task back to ""tasks"",
   because it is still present in metadata storage.
4) In a critical section, manageInternalCritical notices that the task
   is in ""tasks"" and is not running in the taskRunner, so it launches
   it again.
5) In a (different) critical section, notifyStatus updates the metadata
   store to set the task status to SUCCESS.
6) The task continues running even though it should not be.

The possibility for this race was introduced in #12099, which shrunk
the critical section in notifyStatus. Prior to that patch, a single
critical section encompassed (1), (2), and (5), so the ordering above
was not possible.

This patch does the following:

1) Fixes the race by adding a recentlyCompletedTasks set that prevents
   the main management loop from doing anything with tasks that are
   currently being cleaned up.
2) Switches the order of the critical sections in notifyStatus, so
   metadata store updates happen first. This is useful in case of
   server failures: it ensures that if the Overlord fails in the midst
   of notifyStatus, then completed-task statuses are still available in
   ZK or on MMs for the next Overlord. (Those are cleaned up by
   taskRunner.shutdown, which formerly ran first.) This isn't related
   to the race described above, but is fixed opportunistically as part
   of the same patch.
3) Changes the ""tasks"" list to a map. Many operations require retrieval
   or removal of individual tasks; those are now O(1) instead of O(N)
   in the number of running tasks.
4) Changes various log messages to use task ID instead of full task
   payload, to make the logs more readable.

* Fix format string.

* Update comment.",2022-08-15T06:34:36Z
6c5a43106a1f7d0b0258b943c51b93c52563e9ed,"SQL: Morph QueryMakerFactory into SqlEngine. (#12897)

* SQL: Morph QueryMakerFactory into SqlEngine.

Groundwork for introducing an indexing-service-task-based SQL engine
under the umbrella of #12262. Also includes some other changes related
to improving error behavior.

Main changes:

1) Elevate the QueryMakerFactory interface (an extension point that allows
   customization of how queries are made) into SqlEngine. SQL engines
   can influence planner behavior through EngineFeatures, and can fully
   control the mechanics of query execution using QueryMakers.

2) Remove the server-wide QueryMakerFactory choice, in favor of the choice
   being made by the SQL entrypoint. The indexing-service-task-based
   SQL engine would be associated with its own entrypoint, like
   /druid/v2/sql/task.

Other changes:

1) Adjust DruidPlanner to try either DRUID or BINDABLE convention based
   on analysis of the planned rels; never try both. In particular, we
   no longer try BINDABLE when DRUID fails. This simplifies the logic
   and improves error messages.

2) Adjust error message ""Cannot build plan for query"" to omit the SQL
   query text. Useful because the text can be quite long, which makes it
   easy to miss the text about the problem.

3) Add a feature to block context parameters used internally by the SQL
   planner from being supplied by end users.

4) Add a feature to enable adding row signature to the context for
   Scan queries. This is useful in building the task-based engine.

5) Add saffron.properties file that turns off sets and graphviz dumps
   in ""cannot plan"" errors. Significantly reduces log spam on the Broker.

* Fixes from CI.

* Changes from review.

* Can vectorize, now that join-to-filter is on by default.

* Checkstyle! And variable renames!

* Remove throws from test.",2022-08-15T06:31:19Z
846345669d5fa625666eb3682260b7a80d9769c1,"Error handling improvements for frame channels. (#12895)

* Error handling improvements for frame channels.

Two changes:

1) Send errors down in-memory channels (BlockingQueueFrameChannel) on
   failure. This ensures that in situations where a chain of processors
   has been set up on a single machine, all processors see the root
   cause error. In particular, this means the final processor in the
   chain reports the root cause error, which ensures that someone with
   a handle to the final processor will get the proper error.

2) Update FrameFileHttpResponseHandler to expect that the final fetch,
   rather than being simply empty, is also empty with a special header.
   This ensures that the handler is able to tell the difference between
   an empty fetch due to being at EOF, and an empty fetch due to a
   truncated HTTP response (after the 200 OK and headers are sent down,
   but before any content appears).

* Fix tests, imports.

* Checkstyle!",2022-08-15T06:01:55Z
b26ab678b9e3b9724a667914234fe30e9a71038e,Do no create filters on right side table columns while join to filter conversion (#12899),2022-08-14T15:35:23Z
41712b7a3a938e6157c9f6663b5073093729a56e,"Refactor SqlLifecycle into statement classes (#12845)

* Refactor SqlLifecycle into statement classes

Create direct & prepared statements
Remove redundant exceptions from tests
Tidy up Calcite query tests
Make PlannerConfig more testable

* Build fixes

* Added builder to SqlQueryPlus

* Moved Calcites system properties to saffron.properties

* Build fix

* Resolve merge conflict

* Fix IntelliJ inspection issue

* Revisions from reviews

Backed out a revision to Calcite tests that didn't work out as planned

* Build fix

* Fixed spelling errors

* Fixed failed test

Prepare now enforces security; before it did not.

* Rebase and fix IntelliJ inspections issue

* Clean up exception handling

* Fix handling of JDBC auth errors

* Build fix

* More tweaks to security messages",2022-08-14T07:44:08Z
4d65c085766786b6ae436f04943572c5beae58fa,"changes to run examples when CDPATH environment variable is set where cd command returns current dir… (#12877)

* changes to run examples on macos where cd command returns current directory

* Update examples/bin/run-druid

Co-authored-by: Frank Chen <frankchen@apache.org>

* merging

* sending output of cd command to /dev/null

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-08-14T05:15:24Z
f4e0909e924dc24539857ada817cbd0cfdacd729,fix bug with json_object expression not fully unwrapping inputs (#12893),2022-08-14T04:15:19Z
53948380305d8495285aa6db2f49e6348d57049f,Enable conversion of join to filter by default (#12868),2022-08-13T15:07:43Z
af700bba0c8408d63de7374d77f681bf8fdeb2f7,Fix hasBuiltInFilters for joins (#12894),2022-08-13T10:56:24Z
836430019ab24c264bb52b8f2d6e35091869c5fd,"Add EXTERNAL resource type. (#12896)

This is used to control access to the EXTERN function, which allows
reading external data in SQL. The EXTERN function is not usable in
production as of today, but it is used by the task-based SQL engine
contemplated in #12262.",2022-08-12T17:57:30Z
3a3271eddc946599e1c9b81154d2f37663b186c5,"Introduce defaultOnDiskStorage config for Group By (#12833)

* Introduce defaultOnDiskStorage config for groupBy

* add debug log to groupby query config

* Apply config change suggestion from review

* Remove accidental new lines

* update default value of new default disk storage config

* update debug log to have more descriptive text

* Make maxOnDiskStorage and defaultOnDiskStorage HumanRedadableBytes

* improve test coverage

* Provide default implementation to new default method on advice of reviewer",2022-08-12T16:40:21Z
2f2d8ded5a4d090ee96cfeee195f1833d1030669,"Introducing Storage connector Interface (#12874)

In the current druid code base, we have the interface DataSegmentPusher which allows us to push segments to the appropriate deep storage without the extension being worried about the semantics of how to push too deep storage.

While working on #12262, whose some part of the code will go as an extension, I realized that we do not have an interface that allows us to do basic ""write, get, delete, deleteAll"" operations on the appropriate deep storage without let's say pulling the s3-storage-extension dependency in the custom extension.

Hence, the idea of StorageConnector was born where the storage connector sits inside the druid core so all extensions have access to it.

Each deep storage implementation, for eg s3, GCS, will implement this interface.
Now with some Jackson magic, we bind the implementation of the correct deep storage implementation on runtime using a type variable.",2022-08-12T10:41:49Z
38af5f7b57769e026f028a56bb9be8003e01ddc5,"NettyHttpClient: Cleaner state transitions for handlers. (#12889)

The Netty pipeline set up by the client can deliver multiple exceptions,
and can deliver chunks even after delivering exceptions. This makes it
difficult to implement HttpResponseHandlers. Looking at existing handler
implementations, I do not see attempts to handle this case, so it's also
a potential source of bugs.

This patch updates the client to track whether an exception was
encountered, and if so, to not call any additional methods on the handler
after exceptionCaught. It also harmonizes exception handling between
exceptionCaught and channelDisconnected.",2022-08-11T16:31:37Z
b4985ccd5e9b10fec847b3316259fc97996eebca,"Suppress CVEs - Avatica, Postgres (#12884)",2022-08-10T08:48:19Z
4706a4c5725211cd1967403c65454c42bfb12343,"Docker build for the revised ITs (#12707)

* Docker build for the revised ITs

* Fix POM versions

* Update comments from review suggestions",2022-08-10T08:47:33Z
8ad8582dc85721e920aa57dcada2803c65fd6294,"Refactor DruidSchema & DruidTable (#12835)

Refactors the DruidSchema and DruidTable abstractions to prepare for the Druid Catalog.

As we add the catalog, we’ll want to combine physical segment metadata information with “hints” provided by the catalog. This is best done if we tidy up the existing code to more clearly separate responsibilities.

This PR is purely a refactoring move: no functionality changed. There is no difference to user functionality or external APIs. Functionality changes will come later as we add the catalog itself.

DruidSchema
In the present code, DruidSchema does three tasks:

Holds the segment metadata cache
Interfaces with an external schema manager
Acts as a schema to Calcite
This PR splits those responsibilities.

DruidSchema holds the Calcite schema for the druid namespace, combining information fro the segment metadata cache, from the external schema manager and (later) from the catalog.
SegmentMetadataCache holds the segment metadata cache formerly in DruidSchema.
DruidTable
The present DruidTable class is a bit of a kitchen sink: it holds all the various kinds of tables which Druid supports, and uses if-statements to handle behavior that differs between types. Yet, any given DruidTable will handle only one such table type. To more clearly model the actual table types, we split DruidTable into several classes:

DruidTable becomes an abstract base class to hold Druid-specific methods.
DatasourceTable represents a datasource.
ExternalTable represents an external table, such as from EXTERN or (later) from the catalog.
InlineTable represents the internal case in which we attach data directly to a table.
LookupTable represents Druid’s lookup table mechanism.
The new subclasses are more focused: they can be selective about the data they hold and the various predicates since they represent just one table type. This will be important as the catalog information will differ depending on table type and the new structure makes adding that logic cleaner.

DatasourceMetadata
Previously, the DruidSchema segment cache would work with DruidTable objects. With the catalog, we need a layer between the segment metadata and the table as presented to Calcite. To fix this, the new SegmentMetadataCache class uses a new DatasourceMetadata class as its cache entry to hold only the “physical” segment metadata information: it is up to the DruidTable to combine this with the catalog information in a later PR.

More Efficient Table Resolution
Calcite provides a convenient base class for schema objects: AbstractSchema. However, this class is a bit too convenient: all we have to do is provide a map of tables and Calcite does the rest. This means that, to resolve any single datasource, say, foo, we need to cache segment metadata, external schema information, and catalog information for all tables. Just so Calcite can do a map lookup.

There is nothing special about AbstractSchema. We can handle table lookups ourselves. The new AbstractTableSchema does this. In fact, all the rest of Calcite wants is to resolve individual tables by name, and, for commands we don’t use, to provide a list of table names.

DruidSchema now extends AbstractTableSchema. SegmentMetadataCache resolves individual tables (and provides table names.)

DruidSchemaManager
DruidSchemaManager provides a way to specify table schemas externally. In this sense, it is similar to the catalog, but only for datasources. It originally followed the AbstractSchema pattern: it implements provide a map of tables. This PR provides new optional methods for the table lookup and table names operations. The default implementations work the same way that AbstractSchema works: we get the entire map and pick out the information we need. Extensions that use this API should be revised to support the individual operations instead. Druid code no longer calls the original getTables() method.

The PR has one breaking change: since the DruidSchemaManager map is read-only to the rest of Druid, we should return a Map, not a ConcurrentMap.",2022-08-10T04:54:04Z
ee41cc770f3a2b666e380d25ffbc5469a42a1d36,"fix issue with SQL sum aggregator due to bug with DruidTypeSystem and AggregateRemoveRule (#12880)

* fix issue with SQL sum aggregator due to bug with DruidTypeSystem and AggregateRemoveRule

* fix style

* add comment about using custom sum function",2022-08-09T22:17:45Z
2855fb6ff8181d83fa679db26c8bbddf839391fd,"Change Kafka Lookup Extractor to not register consumer group (#12842)

* change kafka lookups module to not commit offsets

The current behaviour of the Kafka lookup extractor is to not commit
offsets by assigning a unique ID to the consumer group and setting
auto.offset.reset to earliest. This does the job but also pollutes the
Kafka broker with a bunch of ""ghost"" consumer groups that will never again be
used.

To fix this, we now set enable.auto.commit to false, which prevents the
ghost consumer groups being created in the first place.

* update docs to include new enable.auto.commit setting behaviour

* update kafka-lookup-extractor documentation

Provide some additional detail on functionality and configuration.
Hopefully this will make it clearer how the extractor works for
developers who aren't so familiar with Kafka.

* add comments better explaining the logic of the code

* add spelling exceptions for kafka lookup docs",2022-08-09T10:44:22Z
ebe783dbdcc9d5bc95e2a7284dd543cd643cba87,Correct minor format issue (#12882),2022-08-09T10:15:41Z
abd7a9748d84b536bcabe44af655c5d37826ae15,"Remove kafka lookup records when a record is tombstoned (#12819)

* remove kafka lookup records from factory when record tombstoned

* update kafka lookup docs to include tombstone behaviour

* change test wait time down to 10ms

Co-authored-by: David Palmer <david.palmer@adscale.co.nz>",2022-08-09T05:12:51Z
a7e89de6107ee77cd8a3c2760deb37642db79225,"fix JsonNode leaking from JSON flattener (#12873)

* fix JsonNode leaking from JSON flattener

* adjustments",2022-08-09T02:51:57Z
533c39f35a9e8459e3038fb458ab272648bc39c9,Fix rollup docs bullet formatting (#12876),2022-08-09T02:10:07Z
267b32c2e2c283ea0602a3b080df3ae553c73683,Set druid.processing.fifo to true by default (#12571),2022-08-08T17:18:24Z
01d555e47bdd87419242a9327b16cfbe017bcfa4,"Adjust ""in"" filter null behavior to match ""selector"". (#12863)

* Adjust ""in"" filter null behavior to match ""selector"".

Now, both of them match numeric nulls if constructed with a ""null"" value.

This is consistent as far as native execution goes, but doesn't match
the behavior of SQL = and IN. So, to address that, this patch also
updates the docs to clarify that the native filters do match nulls.

This patch also updates the SQL docs to describe how Boolean logic is
handled in addition to how NULL values are handled.

Fixes #12856.

* Fix test.",2022-08-08T16:08:36Z
607b0b9310db0b3a063c24e1ee752c0f1e7c51b1,"Adding withName implementation to AggregatorFactory  (#12862)

* Adding agg factory with name impl

* Adding test cases

* Fixing test case

* Fixing test case

* Updated java docs.",2022-08-08T13:01:56Z
2045a1345c9c7cde98b4b1454b1f6fd82b71b96a,Fix NPE when applying a transform that outputs to __time (#12870),2022-08-07T13:51:47Z
9f8982a9a6b6d1b49ce00d9930b730f40c14260c,fix(druid-indexing): failed to get shardSpec for interval issue (#12573),2022-08-06T00:57:36Z
d294404924579526ca1396d004b499e59fd43bcb,"Kinesis ingestion with empty shards (#12792)

Kinesis ingestion requires all shards to have at least 1 record at the required position in druid.
Even if this is satisified initially, resharding the stream can lead to empty intermediate shards. A significant delay in writing to newly created shards was also problematic.

Kinesis shard sequence numbers are big integers. Introduce two more custom sequence tokens UNREAD_TRIM_HORIZON and UNREAD_LATEST to indicate that a shard has not been read from and that it needs to be read from the start or the end respectively.
These values can be used to avoid the need to read at least one record to obtain a sequence number for ingesting a newly discovered shard.

If a record cannot be obtained immediately, use a marker to obtain the relevant shardIterator and use this shardIterator to obtain a valid sequence number. As long as a valid sequence number is not obtained, continue storing the token as the offset.

These tokens (UNREAD_TRIM_HORIZON and UNREAD_LATEST) are logically ordered to be earlier than any valid sequence number.

However, the ordering requires a few subtle changes to the existing mechanism for record sequence validation:

The sequence availability check ensures that the current offset is before the earliest available sequence in the shard. However, current token being an UNREAD token indicates that any sequence number in the shard is valid (despite the ordering)

Kinesis sequence numbers are inclusive i.e if current sequence == end sequence, there are more records left to read.
However, the equality check is exclusive when dealing with UNREAD tokens.",2022-08-05T17:08:58Z
24f8f9e1ab4199fd46e906e2506e35c0a467a65d,"Add check for eternity time segment to SqlSegmentsMetadataQuery (#12844)

* Add check for eternity time segment to SqlSegmentsMetadataQuery

* Add check for half eternities

* Add multiple segments test

* Add failing test to document known issue",2022-08-05T05:33:08Z
ca4e64aea3951f8577f80a7aa0de6a50e83e86db,"Frame processing and channels. (#12848)

* Frame processing and channels.

Follow-up to #12745. This patch adds three new concepts:

1) Frame channels are interfaces for doing nonblocking reads and writes
   of frames.

2) Frame processors are interfaces for doing nonblocking processing of
   frames received from input channels and sent to output channels.

3) Cluster-by keys, which can be used for sorting or partitioning.

The patch also adds SuperSorter, a user of these concepts, both to
illustrate how they are used, and also because it is going to be useful
in future work.

Central classes:

- ReadableFrameChannel. Implementations include
  BlockingQueueFrameChannel (in-memory channel that implements both interfaces),
  ReadableFileFrameChannel (file-based channel),
  ReadableByteChunksFrameChannel (byte-stream-based channel), and others.

- WritableFrameChannel. Implementations include BlockingQueueFrameChannel
  and WritableStreamFrameChannel (byte-stream-based channel).

- ClusterBy, a sorting or partitioning key.

- FrameProcessor, nonblocking processor of frames. Implementations include
  FrameChannelBatcher, FrameChannelMerger, and FrameChannelMuxer.

- FrameProcessorExecutor, an executor service that runs FrameProcessors.

- SuperSorter, a class that uses frame channels and processors to
  do parallel external merge sort of any amount of data (as long as there
  is enough disk space).

* Additional tests, fixes.

* Changes from review.

* Better implementation for ReadableInputStreamFrameChannel.

* Rename getFrameFileReference -> newFrameFileReference.

* Add InterruptedException to runIncrementally; add more tests.

* Cancellation adjustments.

* Review adjustments.

* Refactor BlockingQueueFrameChannel, rename doneReading and doneWriting to close.

* Additional changes from review.

* Additional changes.

* Fix test.

* Adjustments.

* Adjustments.",2022-08-05T04:29:04Z
c6dd9dd4afa67ba3930fdcbfb1827900a0bd09ba,Fix typo in compaction.md (#12774),2022-08-04T21:47:22Z
73cfc4e5d0f04c4259898a32565fd80745da08b7,fix expression plan type inference to correctly handle complex types (#12857),2022-08-04T09:56:05Z
a618458bf00647dc8e5862472f3bc5410a9b5e0a,"Tidy up construction of the Guice Injectors (#12816)

* Refactor Guice initialization

Builders for various module collections
Revise the extensions loader
Injector builders for server startup
Move Hadoop init to indexer
Clean up server node role filtering
Calcite test injector builder

* Revisions from review comments

* Build fixes

* Revisions from review comments",2022-08-04T07:05:07Z
ef6811ef882bb900f6ea249389758f500cfcaf00,"Improved Java 17 support and Java runtime docs. (#12839)

* Improved Java 17 support and Java runtime docs.

1) Add a ""Java runtime"" doc page with information about supported
   Java versions, garbage collection, and strong encapsulation..

2) Update asm and equalsverifier to versions that support Java 17.

3) Add additional ""--add-opens"" lines to surefire configuration, so
   tests can pass successfully under Java 17.

4) Switch openjdk15 tests to openjdk17.

5) Update FrameFile to specifically mention Java runtime incompatibility
   as the cause of not being able to use Memory.map.

6) Update SegmentLoadDropHandler to log an error for Errors too, not
   just Exceptions. This is important because an IllegalAccessError is
   encountered when the correct ""--add-opens"" line is not provided,
   which would otherwise be silently ignored.

7) Update example configs to use druid.indexer.runner.javaOptsArray
   instead of druid.indexer.runner.javaOpts. (The latter is deprecated.)

* Adjustments.

* Use run-java in more places.

* Add run-java.

* Update .gitignore.

* Exclude hadoop-client-api.

Brought in when building on Java 17.

* Swap one more usage of java.

* Fix the run-java script.

* Fix flag.

* Include link to Temurin.

* Spelling.

* Update examples/bin/run-java

Co-authored-by: Xavier Léauté <xl+github@xvrl.net>

Co-authored-by: Xavier Léauté <xl+github@xvrl.net>",2022-08-04T06:16:05Z
623b075d127350f58d5981fe292e5d1f9ed72fcb,"fix nested column sql operator return type inference (#12851)

* fix nested column sql operator return type inference

* oops, final",2022-08-03T22:39:08Z
6f5c1434b8cb1ce9e48efca465a81bed2741cada,fix get task may be null (#12100),2022-08-03T16:23:48Z
fbd1a07e7e912a35e02ce166e0d5ad76fa64013d,Fix kinesis IT flakiness (#12821),2022-08-03T11:46:16Z
0a4ed3ba61ab2a7b68f9ffc2e19da055fcd03692,Readme - link fix to build guide (#12849),2022-08-03T11:32:37Z
3290b4975456f8feb9afd006232741a0c7d98e63,"Log4j bump to 2.18 due to [LOG4J2-3419] (#12847)

* Log4j bump to 2.18 due to [LOG4J2-3419]

* Fixing license issues",2022-08-03T06:25:40Z
2912a36a202672b2b025ef447c5bcbded7b20990,"Use nonzero default value of maxQueuedBytes. (#12840)

* Use nonzero default value of maxQueuedBytes.

The purpose of this parameter is to prevent the Broker from running out
of memory. The prior default is unlimited; this patch changes it to a
relatively conservative 25MB.

This may be too low for larger clusters. The risk is that throughput
can decrease for queries with large resultsets or large amounts of intermediate
data. However, I think this is better than the risk of the prior default, which
is that these queries can cause the Broker to go OOM.

* Alter calculation.",2022-08-03T00:57:27Z
0ca37c20a6ab8e774931e6d504a3a4aa27a149bb,"Python 3 support for post-index-task. (#12841)

* Python 3 support for post-index-task.

Useful when running on macOS or any other system that
doesn't have Python 2.

* Encode JSON returned by read_task_file.

* Adjust.

* Skip needless loads.

* Add a decode.

* Additional decodes needed.",2022-08-03T00:53:34Z
6981b1cc12a6145109e9c19692ae3661aa383104,fix bugs with nested column jsonpath parser (#12831),2022-08-02T18:38:25Z
eabce8a1590d564702321fea98157289776e63c5,Fix flakiness in query-retry ITs (#12818),2022-08-02T11:50:16Z
cceb2e849ee837beb1228adf018b9a1aec79e226,"Perform lazy initialization of parquet extensions module (#12827)

Historicals and middle managers crash with an `UnknownHostException` on trying
to load `druid-parquet-extensions` with an ephemeral Hadoop cluster. This happens
because the `fs.defaultFS` URI value cannot be resolved at start up time as the
hadoop cluster may not exist at startup time.

This commit fixes the error by performing initialization of the filesystem in
`ParquetInputFormat.createReader()` whenever a new reader is requested.",2022-08-02T08:11:12Z
6046a392b61b94bbfa6f7a083e2958e8e942ab6e,add DictionaryEncodedStringValueIndex implementation to NestedFieldLiteralColumnIndexSupplier (#12837),2022-08-02T04:40:35Z
7ae6cc6e60b6bb7fd83c6a649861a5ddd982ea72,Fix string first/last aggregator comparator (#12773),2022-08-01T15:24:15Z
553ff4761636c41ea3d718a31a660f2d92fb2f35,fix: fix broken link to Class TTest (#12836),2022-07-31T02:18:14Z
d96a9c1e6f657e957d5971a252627cc7441b1a42,add missing selectors for explicit null columns (#12834),2022-07-30T02:08:58Z
189e8b9d18b1f9266215ff4a6811b9b571e78aa0,"add NumericRangeIndex interface and BoundFilter support (#12830)

add NumericRangeIndex interface and BoundFilter support
changes:
* NumericRangeIndex interface, like LexicographicalRangeIndex but for numbers
* BoundFilter now uses NumericRangeIndex if comparator is numeric and there is no extractionFn
* NestedFieldLiteralColumnIndexSupplier.java now supports supplying NumericRangeIndex for single typed numeric nested literal columns

* better faster stronger and (ever so slightly) more understandable

* more tests, fix bug

* fix style",2022-07-30T01:58:49Z
d52abe7b38508908ef45e016446bd1f7c0c1c7a7,"Today is that day - Single pass through Calcite planner (#12636)

* Druid planner now makes only one pass through Calcite planner

Resolves the issue that required two parse/plan cycles: one
for validate, another for plan. Creates a clone of the Calcite
planner and validator to resolve the conflict that prevented
the merger.",2022-07-30T01:53:21Z
efbb58e90e5b1400f74c0eaa7ecb69e002176f17,"docs: remove maxRowsPerSegment where appropriate (#12071)

* remove maxRowsPerSegment where appropriate

* fix tutorial, accept suggestions

* Update docs/design/coordinator.md

* additional tutorial file

* fix initial index spec

* accept comments

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* add back comment on maxrows per segment

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* rm duplicate entry

* Update native-batch-simple-task.md

remove ref to `maxrowspersegment`

* Update native-batch.md

remove ref to `maxrowspersegment`

* final tenticles

* Apply suggestions from code review

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-07-28T11:22:13Z
24c345cdf02648414c9d7d15e09017bc02748ec4,Allow dictionary encoded column to use a more generic index interface (#12826),2022-07-27T22:23:00Z
a8b155e9c6e4699d30ba2386c6ec88a3004eb819,"Fixes for the Avatica JDBC driver (#12709)

* Fixes for the Avatica JDBC driver

Correctly implement regular and prepared statements
Correctly implement result sets
Fix race condition with contexts
Clarify when parameters are used
Prepare for single-pass through the planner

* Addressed review comments

* Addressed review comment",2022-07-27T22:22:40Z
93a9a4b1c5342d18abf269202d1c777852b6532a,"Add retention for file request logs (#12559)

* Add retention for file request logs

* Spelling",2022-07-27T15:17:02Z
bf0886a8ab98ec5cf7b013b2e1811b1f6478da58,Fix hash calcuation in RendezvousHasher (#12817),2022-07-27T06:46:27Z
6b0b1d7af317d1a6b219cf1213139abf1607eaa0,replaces hard-coded probe delays with helm values (#12805),2022-07-26T08:34:06Z
2e616e633a1b656d346f3e1236bd08dd6e625f19,"Determine type of `__time` column by RowSignature in case of External Datasource (#12770)

Some queries like `REPLACE INTO ... SELECT TIME_PARSE(""__time"") AS __time FROM ...`
fail at the Calcite layer because any column with name `__time` is considered to be of
type `SqlTypeName.TIMESTAMP`.

Changes:
- Modify `RowSignatures.toRelDataType()` so that the type of `__time` column
  is determined by the RowSignature's type.",2022-07-26T06:39:40Z
d7d4314367a5561aebe53e90bf2630fd0604d1f5,remove ref to plywood repo (#12809),2022-07-26T02:12:13Z
188b5b00278aadc20fd06a633366018e9af4336a,"Upgrade to jetty 9.4.48.v20220622 due to CVEs (#12801)

* Upgrade to jetty 9.4.48.v20220622 due to CVEs

* Update licenses.yaml",2022-07-26T02:11:48Z
5772dfd1552ab18276a7f8de9335e3a1ef489733,"Peons should not report SysMonitor stats since MiddleManager reports them. (#12802)

Sysmonitor stats (mem, fs, disk, net, cpu, swap, sys, tcp) are reported by all Druid processes, including Peons that are ephemeral in nature. Since Peons always run on the same host as the MiddleManager that spawned them and is unlikely to change, the SyMonitor metrics emitted by Peon are merely duplicates. This is often not a problem except when machines are super-beefy. Imagine a 64-core machine and 32 workers running on this machine. now you will have each Peon reporting metrics for each core. that's an increase of (32 * 64)x in the number of metrics. This leads to a metric explosion.

This PR updates MetricsModule to check node role running while registering SysMonitor and not to load any existing SysMonitor$Stats.",2022-07-23T08:02:16Z
6394ecfd210d34c0e80bc59e7e09c0023edd0eca,update figure and reference (#12813),2022-07-22T22:54:25Z
5417aa2055b3abb4b4515f9de81397a19e5ebc73,"Fix: ParseException swallow cause Exception (#12810)

* add impl

* add impl

* fix checkstyle",2022-07-22T20:46:28Z
6c96d096800961dd7399f19c01027b8ea4644e19,"Suppress some false alarm CVEs (#12812)

This commit suppresses the following CVEs:
- CVE-2021-43138: false alarm for async-http-client
- CVE-2021-34538: applicable to Hive server
- CVE-2020-25638: requires hibernate update, which causes Hadoop ingestion failure
- CVE-2021-27568: false alarm for accessors-smart which is a dependency of json-smart (already suppressed)",2022-07-22T16:57:31Z
9e5f0109fd00ffbed2ee80ebb0dfae253660ed5f,"Fix CVE-2022-2048 (jetty) and CVE-2022-31159 (aws-java-sdk-s3) (#12807)

Changes:
- Upgrade aws sdk version from `1.12.37` to `1.12.264`
- Upgrade jetty version from `9.4.41.v20210516` to `9.4.47.v20220610`",2022-07-21T07:38:18Z
a2be6858248224ab103dc31e7576a63e6b143e40,"Remove the time bit, fix headings (#12808)

* Remove the time bit, fix headings

* Adopt review suggestions

* Edits

* Update smoosh file description

* Adopt review suggestions

* Update spelling",2022-07-20T22:37:57Z
3bf1e699ff09ef13807cc05f00eec032912a1206,GREATEST/LEAST function is incorrectly specifying that it cannot return null (#12804),2022-07-20T09:11:24Z
809bf161ce6913c930362239ca079c800e0c317e,"Add a note about setting the value of maxNumConcurrentSubTasks  (#12772)

* Add clarification for combining input source

* Update inputFormat note

* Update maxNumConcurrentSubTasks note

* Fix broken link

* Update docs/ingestion/native-batch-input-source.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-07-19T22:34:21Z
f3272a25f9d6b9c2b67d748b6b7a0077c0865400,"Add check for sqlOuterLimit to ingest queries (#12799)

* Add check for sqlOuterLimit to ingest queries

* Fix checkstyle

* Add comment",2022-07-19T16:02:43Z
cc1ff56ca55e89ebf50932a34f78202b81de031c,"Unregisters `RealtimeMetricsMonitor`, `TaskRealtimeMetricsMonitor` on Indexers after task completion (#12743)

Few indexing tasks register RealtimeMetricsMonitor or TaskRealtimeMetricsMonitor with the process’s MonitorScheduler when they start. These monitors never unregister themselves (they always return true, they'd need to return false to unregister). Each of these monitors emits a set of metrics once every druid.monitoring.emissionPeriod.
As a result, after executing several tasks for a while, Indexer emits metrics of these tasks even after they're long gone.

Proposed Solution
Since one should be able to obtain the last round of ingestion metrics after the task unregisters the monitor, introducing lastRoundMetricsToBePushed variable to keep track of the same and overriding the AbstractMonitor.monitor method in RealtimeMetricsMonitor, TaskRealtimeMetricsMonitor to implement the new logic.",2022-07-18T09:04:18Z
75045970cde40562d9445ba4a9d27705742b29ab,"S3 Ingestion from non-default endpoints (#11798)

* Add endpoint support for s3inputsource

* Changes to tests

* Fix docs

* Fix config

* Fix inspections

* Fix spelling

* Remove password from toString",2022-07-15T18:03:34Z
d4403c15aa8a43c957d6a18ad27812c8fe7dca90,"Upgrade prometheus version, add more labels to PrometheusEmitter (#12769)

Changes:
- Upgrade prometheus to version 0.16.0
- Add optional labels `druid_service` and `host_name` to `PrometheusEmitter`",2022-07-15T09:13:12Z
f2a7970a6c219a9b536af999169d098d98547d8d,reindex flow should take order from Druid (#12790),2022-07-15T03:03:33Z
1e0542626bb7b4726ea4d63f7cab66c2198a44e5,add nested column query benchmarks (#12786),2022-07-15T01:16:30Z
ee15c238cce60a92392fcf5d13c8faf50a96089b,"Clone Calcite planner to access validator (#12708)

Done in preparation for the ""single-pass"" planner.",2022-07-15T01:10:33Z
50f1f5840d2f090179ebafbe53a27cea54e7734d,show json and add search box (#12784),2022-07-15T00:01:30Z
82315779ff70de1771b9a69f653c86c9ce05213a,fix segment timeline bar chart (#12782),2022-07-14T23:58:24Z
14e5b8325c66f5c60d324cc1b8f94a78e7fb793b,make tick formatting more robust (#12788),2022-07-14T23:56:53Z
e25ba00470c17e6ff50c4d70d96b1c7ba0a1f200,"fix bug in ObjectFlatteners.toMap which caused null values in avro-stream/avro-ocf/parquet/orc to be converted to {} instead of null in web-console sampler UI (#12785)

* fix bug in ObjectFlatteners.toMap which caused null values in avro-stream/avro-ocf/parquet/orc to be converted to {} instead of null
* fix parquet test that expected wrong behavior, my bad heh",2022-07-14T23:52:01Z
05b2e967ed8f99bc4c81197dddad7b4fe1b71a85,"druid nested data column type (#12753)

* add new druid nested data column type

* fixes and such

* fixes

* adjustments, more tests

* self review

* oops

* fix and test

* more better

* style",2022-07-14T19:07:23Z
a544aff7618460b2e7d74a9576f421a7197fde14,"Document missed simple granularities (#12768)

* Document missed simple granularities

* Update docs/querying/granularities.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/granularities.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-07-14T06:02:28Z
c0380e7b0ad84b65f6af22e08b9c20b3222221f7,* fix duplicate dimension (#12778),2022-07-14T05:09:03Z
d8f8c56f94434b078d4c399b1653c9559f8b1a15,"Docs: Index page with all SQL functions (#12771)

* list of all functions

* add function names to spelling file",2022-07-14T01:59:55Z
8c33508eafa6aa2e02bc8da309ed1abf00fbc3dd,"run web-console e2e tests for java changes too (#12776)

* run web-console e2e tests for java changes too, fix travis stages for web e2e and docs jobs

* run the script test on script changes",2022-07-13T23:12:57Z
c1c2104bd6f258b1b1386e3c6006d4ca56c5846d,fix ordering in e2e test (#12775),2022-07-13T22:08:00Z
2ab20c9fc949d9099858ddcaedd67b372df4e76c,"Surface more information about task status in tests (#12759)

I see some test runs failing because task status is not as expected. It will be helpful to know what error the task has.",2022-07-13T09:23:53Z
8c02880d5f3e48d3e8189a240eae391eb6107862,"Emit metrics for distribution of number of rows per segment (#12730)

* initial commit of bucket dimensions for metrics

return counts of segments that have rowcount in a bucket size for a datasource
return average value of rowcount per segment in a datasource
added unit test
naming could use a lot of work
buckets right now are not finalized
added javadocs
altered metrics.md

* fix checkstyle issues

* addressed review comments

add monitor test
move added functionality to new monitor
update docs

* address comments

renamed monitor
handle tombstones better
update docs
added javadocs

* Add support for tombstones in the segment distribution

* undo changes to tombstone segmentizer factory

* fix accidental whitespacing changes

* address comments regarding metrics documentation

and rename variable to be more accurate

* fix tests

* fix checkstyle issues

* fix broken test

* undo removal of timeout",2022-07-12T14:04:42Z
bb953be09bff79361331f74efa99317d2f3e6187,"Refactor usage of JoinableFactoryWrapper + more test coverage (#12767)

Refactor usage of JoinableFactoryWrapper to add e2e test for createSegmentMapFn with joinToFilter feature enabled",2022-07-12T13:25:36Z
cebf2ba9c79df12c214364380ccb53207776e34e,"[Flaky unit test] Adding file based uri. (#12671)

* Adding file based uri.

* Adding the HTTP entity test back",2022-07-11T15:27:22Z
97207cdcc7c8445bd3875bae0c41e5d2c0c9b082,"Automatic sizing for GroupBy dictionaries. (#12763)

* Automatic sizing for GroupBy dictionary sizes.

Merging and selector dictionary sizes currently both default to 100MB.
This is not optimal, because it can lead to OOM on small servers and
insufficient resource utilization on larger servers. It also invites
end users to try to tune it when queries run out of dictionary space,
which can make things worse if the end user sets it to too high.

So, this patch:

- Adds automatic tuning for selector and merge dictionaries. Selectors
  use up to 15% of the heap and merge buffers use up to 30% of the heap
  (aggregate across all queries).

- Updates out-of-memory error messages to emphasize enabling disk
  spilling vs. increasing memory parameters. With the memory parameters
  automatically sized, it is more likely that an end user will get
  benefit from enabling disk spilling.

- Removes the query context parameters that allow lowering of configured
  dictionary sizes. These complicate the calculation, and I don't see a
  reasonable use case for them.

* Adjust tests.

* Review adjustments.

* Additional comment.

* Remove unused import.",2022-07-11T15:20:50Z
d2576584a082be33cc540be57a9b33798aeed50e,"Consolidate the two TaskStatus classes. (#12765)

* Consolidate the two TaskStatus classes.

There are two, but we don't need more than one.

* Fix import order.",2022-07-11T14:25:22Z
32946216d08c61ddb07b651b7f9976efabdd95b6,"Debugs Flaky License dependency Reports generation (#12744)

* Surfaces mvn command output in case of failure.

* formats output

* nit",2022-07-11T09:05:34Z
864b77e91acc7064ce6ee6b06e1b497c990c79de,"SpillingGrouper: Make DISK_FULL sticky. (#12764)

When we return DISK_FULL to a processing thread, it skips the rest of
the segment and the query is canceled. However, it's possible that the
next segment starts processing before cancellation can kick in. We want
that one, if it occurs, to see DISK_FULL too.",2022-07-09T13:45:38Z
8dc4a155c7d7d9a0b67c98eb2608852bd639528e,"Fix flaky IT: ITPerfectRollupParallelBatchIndexTest (#12737)

* Increase worker.intermediaryPartitionTimeout in ITs to 30 mins

* Update timeout to 60 mins

* Remove timeout change from indexer",2022-07-09T11:45:51Z
1558ef471cd727b82c03d63f12c2f37e8a60b9c8,"Add some debug tips for debugging peons (#12697)

* add some debug tips

* address comments

* fix typo",2022-07-09T08:47:25Z
48fd2e64007988e0764e8179fcd47230ab1e7dcc,Add missing metrics into statsd-reporter. (#12762),2022-07-09T06:13:06Z
edfbcc8455bcc71fd5584e4beceece5cd50b8828,"Preserve column order in DruidSchema, SegmentMetadataQuery. (#12754)

* Preserve column order in DruidSchema, SegmentMetadataQuery.

Instead of putting columns in alphabetical order. This is helpful
because it makes query order better match ingestion order. It also
allows tools, like the reindexing flow in the web console, to more
easily do follow-on ingestions using a column order that matches the
pre-existing column order.

We prefer the order from the latest segments. The logic takes all
columns from the latest segments in the order they appear, then adds
on columns from older segments after those.

* Additional test adjustments.

* Adjust imports.",2022-07-09T05:04:11Z
9c925b4f09a4a2b8cd1734c802f196b55c1cef0e,"Frame format for data transfer and short-term storage. (#12745)

* Frame format for data transfer and short-term storage.

As we move towards query execution plans that involve more transfer
of data between servers, it's important to have a data format that
provides for doing this more efficiently than the options available to
us today.

This patch adds:

- Columnar frames, which support fast querying.
- Row-based frames, which support fast sorting via memory comparison
  and fast whole-row copies via memory copying.
- Frame files, a container format that can be stored on disk or
  transferred between servers.

The idea is we should use row-based frames when data is expected to
be sorted, and columnar frames when data is expected to be queried.

The code in this patch is not used in production yet. Therefore, the
patch involves minimal changes outside of the org.apache.druid.frame
package.  The main ones are adjustments to SqlBenchmark to add benchmarks
for queries on frames, and the addition of a ""forEach"" method to Sequence.

* Fixes based on tests, static analysis.

* Additional fixes.

* Skip DS mapping tests on JDK 14+

* Better JDK checking in tests.

* Fix imports.

* Additional comment.

* Adjustments from code review.

* Update test case.",2022-07-09T03:42:06Z
bcff35f798ffbce235adf34d68f1901bcbc6b909,Pushdown join filter with right side referencing columns (#12749),2022-07-08T14:29:41Z
378fea951756483831e47502fd18fb5ed58747af,"Retain CSP configuration in ServerConfig constructor. (#12755)

Without this change, CliIndexer would not apply custom CSP headers
and would revert to the default.",2022-07-08T13:49:14Z
4574dea5e92beb72d93e1d6900ce1a63627330d0,"Use MXBeans to get GC metrics #12476 (#12481)

* jvm gc to mxbeans

* add zgc and shenandoah #12476

* remove tryCreateGcCounter

* separate the space collector

* blend GcGenerationCollector into GcCollector

* add jdk surefire argLine",2022-07-08T06:32:06Z
e82890fde4ce9b6e45e0f4fe7e5147e161897a85,"Mark specific nimbus.lang.tag.version. (#12751)

* Mark specific nimbus.lang.tag.version.

* Add ignoredUnusedDeclaredDependencies.",2022-07-07T04:28:35Z
059aba781a59652c09ddea29b7bd6c7d592fb3ce,"issue-12628: upgrade jetty to 9.4.41.v20210516 due to CVE (#12629)

* upgrade jetty to 9.4.41.v20210516 due to cve

* Update licenses.yaml",2022-07-06T16:20:01Z
d732de99486988a4311e1bf5621d4a6d5511b950,"Allow adding calcite rules from extensions (#12715)

* Allow adding calcite rules from extensions

* fixup! Allow adding calcite rules from extensions

* Move Rules to CalciteRulesManager

* fixup! Move Rules to CalciteRulesManager",2022-07-06T14:02:35Z
49feffff1bd72781e2ca4c27312aedaf50b0510b,Add comment about double-close in ColumnSelectorColumnIndexSelector. (#12735),2022-07-06T07:50:35Z
682ea7f32d6669fbfd55deddd57f736a473a7b7b,"IMPLY-12348: Update description of UNION ALL in SQL syntax doc (#12710)

* IMPLY-12348: Updated description of UNION ALL

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update sql.md

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-07-05T20:08:01Z
06251c5d2afff5534d136fe7ce1bababaa1fe8c5,"Add EIGHT_HOUR into possible list of Granularities. (#12717)

* Add EIGHT_HOUR into possible list of Granularities.

* Add the missing definition.

* fix test.

* Fix another test.

* Stylecheck finally passed.

Co-authored-by: Didip Kerabat <didip@apple.com>",2022-07-05T18:05:37Z
2b330186e2a35ead88f3e1a5bfcd4de8853d081a,"Mid-level service client and updated high-level clients. (#12696)

* Mid-level service client and updated high-level clients.

Our servers talk to each other over HTTP. We have a low-level HTTP
client (HttpClient) that is super-asynchronous and super-customizable
through its handlers. It's also proven to be quite robust: we use it
for Broker -> Historical communication over the wide variety of query
types and workloads we support.

But the low-level client has no facilities for service location or
retries, which means we have a variety of high-level clients that
implement these in their own ways. Some high-level clients do a better
job than others. This patch adds a mid-level ServiceClient that makes
it easier for high-level clients to be built correctly and harmoniously,
and migrates some of the high-level logic to use ServiceClients.

Main changes:

1) Add ServiceClient org.apache.druid.rpc package. That package also
   contains supporting stuff like ServiceLocator and RetryPolicy
   interfaces, and a DiscoveryServiceLocator based on
   DruidNodeDiscoveryProvider.

2) Add high-level OverlordClient in org.apache.druid.rpc.indexing.

3) Indexing task client creator in TaskServiceClients. It uses
   SpecificTaskServiceLocator to find the tasks. This improves on
   ClientInfoTaskProvider by caching task locations for up to 30 seconds
   across calls, reducing load on the Overlord.

4) Rework ParallelIndexSupervisorTaskClient to use a ServiceClient
   instead of extending IndexTaskClient.

5) Rework RemoteTaskActionClient to use a ServiceClient instead of
   DruidLeaderClient.

6) Rework LocalIntermediaryDataManager, TaskMonitor, and
   ParallelIndexSupervisorTask. As a result, MiddleManager, Peon, and
   Overlord no longer need IndexingServiceClient (which internally used
   DruidLeaderClient).

There are some concrete benefits over the prior logic, namely:

- DruidLeaderClient does retries in its ""go"" method, but only retries
  exactly 5 times, does not sleep between retries, and does not retry
  retryable HTTP codes like 502, 503, 504. (It only retries IOExceptions.)
  ServiceClient handles retries in a more reasonable way.

- DruidLeaderClient's methods are all synchronous, whereas ServiceClient
  methods are asynchronous. This is used in one place so far: the
  SpecificTaskServiceLocator, so we don't need to block a thread trying
  to locate a task. It can be used in other places in the future.

- HttpIndexingServiceClient does not properly handle all server errors.
  In some cases, it tries to parse a server error as a successful
  response (for example: in getTaskStatus).

- IndexTaskClient currently makes an Overlord call on every task-to-task
  HTTP request, as a way to find where the target task is. ServiceClient,
  through SpecificTaskServiceLocator, caches these target locations
  for a period of time.

* Style adjustments.

* For the coverage.

* Adjustments.

* Better behaviors.

* Fixes.",2022-07-05T16:43:26Z
36e38b319b9dfe5314932e6b938c01ecddfc7456,add virtual column support to search query (#12720),2022-07-05T04:58:10Z
97a926fb29e7750db0836432615fd86b843edd1e,Suppress CVE-2022-33915 (#12740),2022-07-04T17:18:08Z
d559773a0e3679a6894390b17380332b84843f57,sets Hadoop conf ClassLoader (#12738),2022-07-04T11:37:39Z
e3128e3fa322963b902ebecbdec60c740f55dd62,"Poison stupid pool (#12646)

* Poison StupidPool and fix resource leaks

There are various resource leaks from test setup as well as some
corners in query processing.  We poison the StupidPool to start failing
tests when the leaks come and fix any issues uncovered from that so
that we can start from a clean baseline.

Unfortunately, because of how poisoning works,
we can only fail future checkouts from the same pool,
which means that there is a natural race between a
leak happening -> GC occurs -> leak detected -> pool poisoned.

This race means that, depending on interleaving of tests,
if the very last time that an object is checked out
from the pool leaks, then it won't get caught.
At some point in the future, something will catch it,
 however and from that point on it will be deterministic.

* Remove various things left over from iterations

* Clean up FilterAnalysis and add javadoc on StupidPool

* Revert changes to .idea/misc.xml that accidentally got pushed

* Style and test branches

* Stylistic woes",2022-07-03T21:36:22Z
bbbb6e1c3f9ea52766fe0c330fe8e6d0249560a4,fix DruidSchema issue where datasources with no segments can become stuck in tables list indefinitely (#12727),2022-07-02T01:54:01Z
f5b5cb93ead1cb3bbd7a525445be2461c977c52c,"Fix expiry timeout bug in LocalIntermediateDataManager (#12722)

The expiry timeout is compared against the current time but the condition is reversed.
This means that as soon as a supervisor task finishes, its partitions are cleaned up,
irrespective of the specified `intermediaryPartitionTimeout` period.

After these changes, the `intermediaryPartitionTimeout` will start getting honored.

Changes
* Fix the condition
* Add tests to verify the new correct behaviour
* Reduce the default expiry timeout from P1D to PT5M
   to retain current behaviour in case of default configs.",2022-07-01T10:59:22Z
48731710fb54270758e29609968b6a1747616de6,"precursor changes for nested columns to minimize files changed (#12714)

* precursor changes for nested columns to minimize files changed

* inspection fix

* visibility

* adjustment

* unecessary change",2022-07-01T09:27:19Z
d30efb1c1e2b36099727c48f7252cc0bd88a67e7,fix bug when rewriting sql virtual column registry (#12718),2022-07-01T09:24:00Z
c09b5a2294f7d4357ed0484f7e1d6c5088b9b450,"Fix skipTests build flag (#12716)

* fix skipTests

* Skip console UTs with skipTests

* Use skipTests in skip-tests profile",2022-06-30T04:59:26Z
068bea63346d1bbf12b8483e8811546c9405a380,deps: upgrade mysql-connector-java to v5.1.49 (#12704),2022-06-29T15:15:46Z
dbd45daf33f5d94ee0172edb9fa2744914b6dcc6,Flakiness and exceptions during tests (#12705),2022-06-28T05:06:23Z
f83fab699ee3756d3a749961efa2dca41fad7841,"Add IT-related changes pulled out of PR #12368 (#12673)

This commit contains changes made to the existing ITs to support the new ITs.

Changes:
- Make the ""custom node role"" code usable by the new ITs. 
- Use flag `-DskipITs` to skips the integration tests but runs unit tests.
- Use flag `-DskipUTs` skips unit tests but runs the ""new"" integration tests.
- Expand the existing Druid profile, `-P skip-tests` to skip both ITs and UTs.",2022-06-25T20:43:59Z
f7caee3b2595e339e7044735538cb6b98b979765,"Revert changes from #12672 (#12703)

* Revert changes from #12672

* Reverted more conflicting changes

Changes are not needed given previous reversions.",2022-06-25T03:40:44Z
679ccffe0fe11cd4ecc5998138c7436bb0b5955a,"Revert ""SqlSegmentsMetadataQuery: Fix OVERLAPS for wide target segments. (#12600)"" (#12679)

This reverts commit 8fbf92e047f792ff1c69bf67d14784ac55eee88f.",2022-06-25T03:38:26Z
2aadd69f54a130e4e0b5b0827ac5b8f22fa46c1b,Update ORC to 1.7.5 (#12667),2022-06-24T23:08:42Z
d5abd06b9679d0223b8362855de5cb064ad76ef0,"Fix flaky KafkaIndexTaskTest. (#12657)

* Fix flaky KafkaIndexTaskTest.

The testRunTransactionModeRollback case had many race conditions. Most notably,
it would commit a transaction and then immediately check to see that the results
were *not* indexed. This is racey because it relied on the indexing thread being
slower than the test thread.

Now, the case waits for the transaction to be processed by the indexing thread
before checking the results.

* Changes from review.",2022-06-24T20:53:51Z
6ddb828c7a6422f6d2b2a9c59810b5aea7d518ef,"Able to filter Cloud objects with glob notation. (#12659)

In a heterogeneous environment, sometimes you don't have control over the input folder. Upstream can put any folder they want. In this situation the S3InputSource.java is unusable.

Most people like me solved it by using Airflow to fetch the full list of parquet files and pass it over to Druid. But doing this explodes the JSON spec. We had a situation where 1 of the JSON spec is 16MB and that's simply too much for Overlord.

This patch allows users to pass {""filter"": ""*.parquet""} and let Druid performs the filtering of the input files.

I am using the glob notation to be consistent with the LocalFirehose syntax.",2022-06-24T06:10:08Z
1fc2f6e4b08d92f0c68d31afd7890ea9c211d4c2,Throw BadQueryContextException if context params cannot be parsed (#12680),2022-06-24T03:51:25Z
d29343cbe36357356ec65a2f56087d5b39e92148,"Disable autokill of segments by default. (#12693)

Also add clarifying commentary to the documentation about how durationToRetain works.",2022-06-24T00:17:11Z
ffcb996468c343450258f90bd88a6b55aae4ef59,"Cleanup changes pulled out of PR #12368 (#12672)

This commit contains the cleanup needed for the new integration test framework.

Changes:
- Fix log lines, misspellings, docs, etc.
- Allow the use of some of Druid's ""JSON config"" objects in tests
- Fix minor bug in `BaseNodeRoleWatcher`",2022-06-23T17:49:50Z
3d9e3dbad9d38b6be42ea29b4cf7bd9d49ce5d77,Fix hadoop library location for integration tests (#12497),2022-06-23T15:39:54Z
4d892483ca0b45c105cb645768f03ef93cb517da,"Fix thread-unsafe emitter usage in SeekableStreamSupervisorStateTest. (#12658)

The TestEmitter is used from different threads without concurrency
control. This patch makes the emitter thread-safe.",2022-06-23T05:29:16Z
b6f8d7a1b39793f7941e450925952c50e53fba9f,"Add query context param `forceExpressionVirtualColumns` to always use ""expression""-type virtual columns in query plan (#12583)

SQL expressions such as those containing `MV_FILTER_ONLY` and `MV_FILTER_NONE`
are planned as specialized virtual columns instead of the default `expression`-type virtual columns.
This commit adds a new context parameter to force the `expression`-type virtual columns.

Changes
- Add query context param `forceExpressionVirtualColumns`
- Use context param to determine if specialized virtual columns should be used or not
- Moved some tests into `CalciteExplainQueryTest`",2022-06-22T10:03:50Z
6bcb778eeb619c7d41c14e635e3dd6655dfd0599,"Add CVEs for Hadoop3 (#12336)

* Add CVEs

* Move CVEs under hadoop3 section",2022-06-22T08:42:17Z
99e1b4efee3fd267e65337a31a5cfb32b548c711,Update default value of `inputSegmentSizeBytes` in configuration docs (#12678),2022-06-22T03:35:03Z
0099940808946812523afa5b5caa68bf52569b75,"Add TIME_IN_INTERVAL SQL operator. (#12662)

* Add TIME_IN_INTERVAL SQL operator.

The operator is implemented as a convertlet rather than an
OperatorConversion, because this allows it to be equivalent to using
the >= and < operators directly.

* SqlParserPos cannot be null here.

* Remove unused import.

* Doc updates.

* Add words to dictionary.",2022-06-21T20:05:37Z
eccdec9139c6946e26dbebe9be35f7c9f9cb521c,"Reduce interval creation cost for segment cost computation (#12670)

Changes:
- Reuse created interval in `SegmentId.getInterval()`
- Intern intervals to save on memory footprint",2022-06-21T12:09:43Z
a85b1d898557490ecc4ef1c4d2b8ea813e811389,"Lazy Initialisation of Orc extensions module (#12663)

* Lazy initialization of Orc extension

* nit

* moving intialize method to OrcInputFormat",2022-06-21T05:43:10Z
818974f6e4d67651f8fe0f307a10ff72bebf385c,"ScanQuery: Fix JsonIgnore for isLegacy. (#12674)

True, false, and null have different meanings: true/false mean ""legacy""
and ""not legacy""; null means use the default set by ScanQueryConfig.
So, we need to respect this in the JsonIgnore setup.",2022-06-18T22:55:54Z
e76a5077efe64ea3108ff1133339c1ba5d19163f,"Fix self-referential shape inspection in BaseExpressionColumnValueSelector. (#12669)

* Fix self-referential shape inspection in BaseExpressionColumnValueSelector.

The new test would throw StackOverflowError on the old code.

* Restore prior test.",2022-06-17T23:15:50Z
18937ffee210fb230737aac20e48ede9601b8096,"split out null value index (#12627)

* split out null value index

* gg spotbugs

* fix stuff",2022-06-17T22:29:23Z
893759de91133efee56a2ac919532afa4cb61bd3,"Remove null and empty fields from native queries (#12634)

* Remove null and empty fields from native queries

* Test fixes

* Attempted IT fix.

* Revisions from review comments

* Build fixes resulting from changes suggested by reviews

* IT fix for changed segment size",2022-06-16T21:07:25Z
f050069767b60c40be3ab2d01c8d6d957a1463dc,"Segments doc update (#12344)

* Corrected heading levels in segments doc

* IMPLY-18394: Updated Segments doc

* Update docs/design/segments.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/segments.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/segments.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/segments.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/segments.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/segments.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update segments.md

* Updated links to changed headings in Segments doc

* Corrected spelling error

* Update segments.md

Incorporated suggestions from Paul Rogers.

* Update index.md

* Update segments.md

* Update segments.md

* Update segments.md

* Update compaction.md

* Update docs/design/segments.md

fix typo

* Update docs/ingestion/compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/design/segments.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-06-16T20:25:17Z
f970757efc3413ce97b50fd06c57ac6f5ec39c46,"Optimize overlord GET /tasks memory usage (#12404)

The web-console (indirectly) calls the Overlord’s GET tasks API to fetch the tasks' summary which in turn queries the metadata tasks table. This query tries to fetch several columns, including payload, of all the rows at once. This introduces a significant memory overhead and can cause unresponsiveness or overlord failure when the ingestion tab is opened multiple times (due to several parallel calls to this API)

Another thing to note is that the task table (the payload column in particular) can be very large. Extracting large payloads from such tables can be very slow, leading to slow UI. While we are fixing the memory pressure in the overlord, we can also fix the slowness in UI caused by fetching large payloads from the table. Fetching large payloads also puts pressure on the metadata store as reported in the community (Metadata store query performance degrades as the tasks in druid_tasks table grows · Issue #12318 · apache/druid )

The task summaries returned as a response for the API are several times smaller and can fit comfortably in memory. So, there is an opportunity here to fix the memory usage, slow ingestion, and under-pressure metadata store by removing the need to handle large payloads in every layer we can. Of course, the solution becomes complex as we try to fix more layers. With that in mind, this page captures two approaches. They vary in complexity and also in the degree to which they fix the aforementioned problems.",2022-06-16T17:00:37Z
602d95d86591869aa221701c72dfe3f7326da6e3,"Add a builder class for TestDruidCoordinatorConfig (#12624)

* Add a builder class for TestDruidCoordinatorConfig

* updates after review

* Fix formatting",2022-06-16T14:11:31Z
94564b6ce681b858185fd4a1e7fa7f7b99c157c9,"Update screenshots for Druid console doc (#12593)

* druid console doc updates

* remove extra image

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Apply suggestions from code review

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* updated screenshot labels

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-06-15T23:42:20Z
70f3b1362171da81013489bf2d7879b68d46c2f3,"ForkingTaskRunner: Set ActiveProcessorCount for tasks. (#12592)

* ForkingTaskRunner: Set ActiveProcessorCount for tasks.

This prevents various automatically-sized thread pools from being unreasonably
large (we don't want each task to size its pools as if it is the only thing on
the entire machine).

* Fix tests.

* Add missing LifecycleStart annotation.

* ForkingTaskRunner needs ManageLifecycle.",2022-06-15T22:56:32Z
45e31115495838b3327e0fff1d21bee0adf31132,"Clean up query contexts (#12633)

* Clean up query contexts

Uses constants in place of literal strings for context keys.
Moves some QueryContext methods to QueryContexts for reuse.

* Revisions from review comments",2022-06-15T18:31:22Z
28f2c8e1120365bb45ed7531c26150432a935ee2,"Support LoadScope for Peons + Access Modifier Updates (#12640)

* Support LoadScope for Peons

* Update access modifiers for GroupByEngineV2",2022-06-15T04:52:50Z
283249c51b3e748fcd7eef942a2c509904708670,"NettyHttpClient: Fix double-return on certain exceptions. (#12626)

The ""exceptionCaught"" handler may get called multiple times. We should
only return the channel to the pool the first time. Returning it more
than once leads to a warning like ""Resource at key[%s] was returned
multiple times?""",2022-06-15T04:40:47Z
1f6e888472d3102f574a088286f92cb8feff4c86,"Add QoSFilters first in the chain. (#12625)

* Add QoSFilters first in the chain.

When a request is suspended and later resumed due to QoS constraints,
its filter chain is restarted. Placing QoSFilters first in the chain
avoids double-execution of other filters.

Fixes an issue where requests deferred by QoS would report 403 Forbidden
due to double-execution of SecuritySanityCheckFilter.

* Smaller changes.

* Add QoS filters in BaseJettyTest.

* Remove unused parameter.",2022-06-14T20:37:00Z
ceb4ace118944b04a4997d8e85e3cf19d0aa1fd9,"NettyHttpClient: Replace ReadTimeoutException with our own exception. (#12635)

* NettyHttpClient: Replace ReadTimeoutException with our own exception.

* Replace exception with same type.

* Remove unused import.",2022-06-14T20:34:46Z
6f7fa334fd45f121e1663f98299549c6002f9593,"Web console: totalNumMergeTasks can be set on range also (#12648)

* totalNumMergeTasks can be set on range also

* fix formatting",2022-06-14T18:18:17Z
68bae6eafb7b647aa34a23bcad54f53234dc159c,Fix version in master (#12644),2022-06-14T06:02:46Z
afaea251f2192fbba136ce86dd0b1fdf83a2047f,"Push join build table values as filter incase of duplicates (#12225)

* Push join build table values as filter

* Add tests for JoinableFactoryWrapper

* fixup! Push join build table values as filter

* fixup! Add tests for JoinableFactoryWrapper

* fixup! Push join build table values as filter",2022-06-14T00:18:27Z
27e8b43673af6e6f6cabbea66582569577d4f613,fix: update footer copyright year (#12594),2022-06-13T23:29:58Z
1ace7336cd292babea75a6bd589e836f68f30007,Update node to 14.19.3. (#12632),2022-06-10T17:18:12Z
353475bd3613db194a4767591ffd636265f25a62,"Docs for automatic compaction (#12569)

* docs for auto-compaction

* fix broken links

* another link

* Apply suggestions from code review

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Apply suggestions from code review

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Suneet Saldanha <suneet@apache.org>

* reorg content for skipOffset

* Update docs/ingestion/automatic-compaction.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Apply suggestions from code review

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

Co-authored-by: Suneet Saldanha <suneet@apache.org>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-06-09T21:55:12Z
a3603ad6b05d9e119115549e8451099d25469103,"Use DefaultQueryConfig in SqlLifecycle to correctly populate request logs (#12613)

Fixes an issue where sql query request logs do not include the default query context
values set via `druid.query.default.context.xyz` runtime properties.

# Change summary
* Inject `DefaultQueryConfig` into `SqlLifecycleFactory`
* Add params from `DefaultQueryConfig` to the query context in `SqlLifecycle`

# Description
- This change does not affect query execution. This is because the
  `DefaultQueryConfig` was already being used in `QueryLifecycle`,
   which is initialized when the SQL is translated to a native query. 
- This also handles any potential use case where a context parameter should be
   handled at the SQL stage itself.",2022-06-08T07:22:50Z
8fbf92e047f792ff1c69bf67d14784ac55eee88f,"SqlSegmentsMetadataQuery: Fix OVERLAPS for wide target segments. (#12600)

* SqlSegmentsMetadataQuery: Fix OVERLAPS for wide target segments.

Segments with endpoints prior to year 0 or after year 9999 may overlap
the search intervals but not match the generated SQL conditions. So, we
need to add an additional OR condition to catch these.

I checked a real, live MySQL metadata store to confirm that the query
still uses metadata store indexes. It does.

* Add comments.",2022-06-07T18:33:46Z
59a0c10c47af27b0186e4134b9f5461e9516f399,"Add remedial information in error message when type is unknown (#12612)

Often users are submitting queries, and ingestion specs that work only if the relevant extension is not loaded. However, the error is too technical for the users and doesn't suggest them to check for missing extensions. This PR modifies the error message so users can at least check their settings before assuming that the error is because of a bug.",2022-06-07T14:52:45Z
81c37c651586b774a226e147d463c743928cdb8a,"Add validation for invalid partitioned by granularities (#12589)

* Add validation for invalid partitioned by granularities

* review comments

* improve error message, change location of the method

* remove imports

* use StringUtils.lowercase

Co-authored-by: Adarsh Sanjeev <adarshsanjeev@gmail.com>",2022-06-06T16:30:29Z
5a283964cab8ec6d19b5130e458d6653062252fc,"Improve SQL validation error messages (#12611)

Update the SQL validation error message to specify whether
the ingest is INSERT or REPLACE for better user experience.",2022-06-06T10:44:28Z
abf0e0a1596e8c87796e10a90dc1bc9f7b314013,"CompressionStrategyTest: Fix thread-unsafe Closer usage. (#12605)

Closer is not thread-safe, so we need one per thread in the
concurrency tests.",2022-06-04T17:57:13Z
a503683a4a98754dbbe06bb4ba0a2d88a10e7b3e,"Add caching and CSP response headers. (#12609)

* Add caching and CSP response headers.

* Fix tests.

* Fix checkstyle issues

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2022-06-04T16:16:49Z
1506b26ce4024d4f1a4bb8785dcf73015a1e2013,fix typo (#12607),2022-06-04T05:14:18Z
a27f4f57407d853d980a526636cef19003ab9d96,"Service stdout log files, move logs to log/. (#12570)

* Service stdout log files, move logs to log/.

Two changes that make log behavior cleaner:

1) Redirect messages from the Java runtime to their own log files.
   Otherwise, they would get jumbled up in the output of the all-in-one
   start command.

2) Use log/ instead of bin/log/ for the default log directory. Makes them
   easier to find.

Additionally, add documentation about how to avoid the reflective
access warnings in Java 11.

* Spelling.

* See if code formatting affects spelling.",2022-06-03T05:14:29Z
9c8e6bb0000cffb4c904e94f0baf03fb9bd23af9,"Addition to Multitenancy considerations doc (#12567)

* Small addition to Multitenancy considerations doc

* Update docs/querying/multitenancy.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update multitenancy.md

Edit suggested by @kfaraz

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-06-02T17:32:14Z
4558b815e555bab4ce4ca74fd644f2a22d0df1ba,"Bump eventsource from 1.1.0 to 1.1.1 in /web-console (#12595)

Bumps [eventsource](https://github.com/EventSource/eventsource) from 1.1.0 to 1.1.1.
- [Release notes](https://github.com/EventSource/eventsource/releases)
- [Changelog](https://github.com/EventSource/eventsource/blob/master/HISTORY.md)
- [Commits](https://github.com/EventSource/eventsource/compare/v1.1.0...v1.1.1)

---
updated-dependencies:
- dependency-name: eventsource
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-06-02T05:04:30Z
c49277bd2b3c7364df1e98834a2ad94e12c1f8aa,"Bump eventsource from 1.0.7 to 1.1.1 in /website (#12596)

Bumps [eventsource](https://github.com/EventSource/eventsource) from 1.0.7 to 1.1.1.
- [Release notes](https://github.com/EventSource/eventsource/releases)
- [Changelog](https://github.com/EventSource/eventsource/blob/master/HISTORY.md)
- [Commits](https://github.com/EventSource/eventsource/compare/v1.0.7...v1.1.1)

---
updated-dependencies:
- dependency-name: eventsource
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-06-02T05:04:04Z
98f6bca2cda31762a9f259334f7eea384aac0477,"fix regression with ipv4_match and prefixes (#12542)

* fix issue with ipv4_match and prefixes",2022-06-01T21:03:08Z
23b9a6f9eb119bf11f68da137e6a10579eea4fb5,"Bump lodash from 4.17.15 to 4.17.21 in /website (#12409)

Bumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.21.
- [Release notes](https://github.com/lodash/lodash/releases)
- [Commits](https://github.com/lodash/lodash/compare/4.17.15...4.17.21)

---
updated-dependencies:
- dependency-name: lodash
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-06-01T20:56:22Z
86d01b3681c48d3b868b76bfc76e872f19e629dd,"Bump opentelemetry-instrumentation-bom-alpha (#12531)

Bumps [opentelemetry-instrumentation-bom-alpha](https://github.com/open-telemetry/opentelemetry-java-instrumentation) from 1.7.0-alpha to 1.14.0-alpha.
- [Release notes](https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases)
- [Changelog](https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/CHANGELOG.md)
- [Commits](https://github.com/open-telemetry/opentelemetry-java-instrumentation/commits)

---
updated-dependencies:
- dependency-name: io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-06-01T20:51:39Z
31f988ec76c802ae1cd487781554f33b7100ced8,fix backwards compatibility for explicit null columns (#12585),2022-06-01T19:39:48Z
f7ce73eee75cfb7a4dda47b3390866d4cb8b2577,Suppress CVEs (#12590),2022-06-01T15:52:32Z
dc0fdfec679908a6be04ba7ac8f330c2c7b59dac,fix test comment (#12584),2022-05-31T19:39:20Z
0640c9c9ac65dbdec9a00fb3e90816a4ca9cb18b,"fix compression-strategy-test (#12575)

fixes an issue caused by a test modification in #12408 that was closing buffers allocated by the compression strategy instead of allowing the closer to do it",2022-05-31T18:48:32Z
02ae3e74ffcf99437bc6a608baf770d764f2c52f,"RowBasedColumnSelectorFactory: Add ""useStringValueOfNullInLists"" parameter. (#12578)

RowBasedColumnSelectorFactory inherited strange behavior from
Rows.objectToStrings for nulls that appear in lists: instead of being
left as a null, it is replaced with the string ""null"". Some callers may
need compatibility with this strange behavior, but it should be opt-in.

Query-time call sites are changed to opt-out of this behavior, since it
is not consistent with query-time expectations. The IncrementalIndex
ingestion-time call site retains the old behavior, as this is traditionally
when Rows.objectToStrings would be used.",2022-05-31T18:38:56Z
b639298f6e6c348756b856cecdcdc88ec44d8a73,CompressionUtils: Increase gzip buffer size. (#12579),2022-05-31T18:38:13Z
6d2ff796a37726964807b285c615d70b0976fb08,"Add RowIdSupplier to ColumnSelectorFactory. (#12577)

* Add RowIdSupplier to ColumnSelectorFactory.

This enables virtual columns to cache their outputs in case they are
called multiple times on the same underlying row. This is common for
numeric selectors, where the common pattern is to call isNull() and
then follow with getLong(), getFloat(), or getDouble(). Here, output
caching reduces the number of expression evals by half.

* Fix tests.",2022-05-31T18:38:03Z
b746bf91298e704c16375a60df73bd73fe4e2309,"fix virtual column cycle bug, sql virtual column optimize bug (#12576)

* fix virtual column cycle bug, sql virtual column optimize bug

* more test",2022-05-31T06:51:21Z
7291c92f4f013f0495dbe405d4d9a32017c9dfdd,"Adding zstandard compression library (#12408)

* Adding zstandard compression library

* 1. Took @clintropolis's advice to have ZStandard decompressor use the byte array when the buffers are not direct.
2. Cleaned up checkstyle issues.

* Fixing zstandard version to latest stable version in pom's and updating license files

* Removing zstd from benchmarks and adding to processing (poms)

* fix the intellij inspection issue

* Removing the prefix v for the version in the license check for ztsd

* Fixing license checks

Co-authored-by: Rahul Gidwani <r_gidwani@apple.com>",2022-05-29T00:01:44Z
79f86a051103991a164af5757ecf5cab5a30fe46,"Upgrade ORC to 1.7.4 (#12572)

This commit upgrades Apache ORC library from 1.7.2 to 1.7.4.
Apache ORC 1.7.4 is the maintenance release with the following bug fixes.

https://orc.apache.org/news/2022/04/15/ORC-1.7.4/
https://github.com/apache/orc/releases/tag/v1.7.4",2022-05-28T12:14:36Z
d0c9c37e354df3b4cd8c580c528026ebabb79968,"make query context changes backwards compatible (#12564)

Adds a default implementation of getQueryContext, which was added to the Query interface in #12396. Query is marked with @ExtensionPoint, and lately we have been trying to be less volatile on these interfaces by providing default implementations to be more chill for extension writers.

The way this default implementation is done in this PR is a bit strange due to the way that getQueryContext is used (mutated with system default and system generated keys); the default implementation has a specific object that it returns, and I added another temporary default method isLegacyContext that checks if the getQueryContext returns that object or not. If not, callers fall back to using getContext and withOverriddenContext to set these default and system values.

I am open to other ideas as well, but this way should work at least without exploding, and added some tests to ensure that it is wired up correctly for QueryLifecycle, including the context authorization stuff.

The added test shows the strange behavior if query context authorization is enabled, mainly that the system default and system generated query context keys also need to be granted as permissions for things to function correctly. This is not great, so I mentioned it in the javadocs as well. Not sure if it needs to be called out anywhere else.",2022-05-25T09:54:41Z
9f9faeec816fee7bc8936dc3cb4aa1b91450e6c3,"object[] handling for DimensionHandlers for arrays (#12552)

Description
Fixes a bug when running q's like

 SELECT cntarray,
       Count(*)
FROM   (SELECT dim1,
               dim2,
               Array_agg(cnt) AS cntarray
        FROM   (SELECT dim1,
                       dim2,
                       dim3,
                       Count(*) AS cnt
                FROM   foo
                GROUP  BY 1,
                          2,
                          3)
        GROUP  BY 1,
                  2)
GROUP  BY 1  
This generates an error:

org.apache.druid.java.util.common.ISE: Unable to convert type [Ljava.lang.Object; to org.apache.druid.segment.data.ComparableList
        at org.apache.druid.segment.DimensionHandlerUtils.convertToList(DimensionHandlerUtils.java:405) ~[druid-xx]
Because it's an array of numbers it looks like it does the convertToList call, which looks like:

  @Nullable
  public static ComparableList convertToList(Object obj)
  {
    if (obj == null) {
      return null;
    }
    if (obj instanceof List) {
      return new ComparableList((List) obj);
    }
    if (obj instanceof ComparableList) {
      return (ComparableList) obj;
    }
    throw new ISE(""Unable to convert type %s to %s"", obj.getClass().getName(), ComparableList.class.getName());
  }
I.e. it doesn't know about arrays. Added the array handling as part of this PR.",2022-05-25T09:54:18Z
b10eb4cbd4b9a1f4d40bb182aef128601d08b6d3,Suppress false CVE on druid-indexing-hadoop artifact (#12562),2022-05-24T10:30:58Z
32fe4d132426592584d08a785f14943d639cdcb2,Use a different repository to download sigar artifacts. (#12561),2022-05-24T09:12:51Z
2f3d7a4c076316797b1cef5fc31c4ab5ac67cf59,"Emit state of replace and append for native batch tasks (#12488)

* Emit state of replace and append for native batch tasks

* Emit count of one depending on batch ingestion mode (APPEND, OVERWRITE, REPLACE)

* Add metric to compaction job

* Avoid null ptr exc when null emitter

* Coverage

* Emit tombstone & segment counts

* Tasks need a type

* Spelling

* Integrate BatchIngestionMode in batch ingestion tasks functionality

* Typos

* Remove batch ingestion type from metric since it is already in a dimension. Move IngestionMode to AbstractTask to facilitate having mode as a dimension. Add metrics to streaming. Add missing coverage.

* Avoid inner class referenced by sub-class inspection. Refactor computation of IngestionMode to make it more robust to null IOConfig and fix test.

* Spelling

* Avoid polluting the Task interface

* Rename computeCompaction methods to avoid ambiguous java compiler error if they are passed null. Other minor cleanup.",2022-05-23T19:32:47Z
5063eca5b9592215afc9913f091b2acc03a5797b,"Add error message for incorrectly ordered clause in sql (#12558)

In the case that the clustered by is before the partitioned by for an sql query, the error message is a bit confusing.

insert into foo select * from bar clustered by dim1 partitioned by all

Error: SQL parse failed

Encountered ""PARTITIONED"" at line 1, column 88.

Was expecting one of: <EOF> "","" ... ""ASC"" ... ""DESC"" ... ""NULLS"" ... ""."" ... ""NOT"" ... ""IN"" ... ""<"" ... ""<="" ... "">"" ... "">="" ... ""="" ... ""<>"" ... ""!="" ... ""BETWEEN"" ... ""LIKE"" ... ""SIMILAR"" ... ""+"" ... ""-"" ... ""*"" ... ""/"" ... ""%"" ... ""||"" ... ""AND"" ... ""OR"" ... ""IS"" ... ""MEMBER"" ... ""SUBMULTISET"" ... ""CONTAINS"" ... ""OVERLAPS"" ... ""EQUALS"" ... ""PRECEDES"" ... ""SUCCEEDS"" ... ""IMMEDIATELY"" ... ""MULTISET"" ... ""["" ... ""FORMAT"" ... ""("" ... Less...

org.apache.calcite.sql.parser.SqlParseException
This is a bit confusing and adding a check could be added to throw a more user friendly message stating that the order should be reversed.

Add error message for incorrectly ordered clause in sql.",2022-05-23T07:11:18Z
6d85ba4c00411b5333507e75daab1cd9b53dc505,Suppress CVEs (#12553),2022-05-23T07:05:23Z
37853f8de4ba801a5f6c429ccceeb58b58762109,"ConcurrentGrouper: Add mergeThreadLocal option, fix bug around the switch to spilling. (#12513)

* ConcurrentGrouper: Add option to always slice up merge buffers thread-locally.

Normally, the ConcurrentGrouper shares merge buffers across processing
threads until spilling starts, and then switches to a thread-local model.
This minimizes memory use and reduces likelihood of spilling, which is
good, but it creates thread contention. The new mergeThreadLocal option
causes a query to start in thread-local mode immediately, and allows us
to experiment with the relative performance of the two modes.

* Fix grammar in docs.

* Fix race in ConcurrentGrouper.

* Fix issue with timeouts.

* Remove unused import.

* Add ""tradeoff"" to dictionary.",2022-05-21T17:28:54Z
5073cee73f786808436187242680947263752dbb,Fix zookeeper spelling (#12556),2022-05-21T08:14:02Z
2d8dbb53e039f065716220c97d997f458cdae0f6,update to latest lz4 1.8.0 (#12557),2022-05-21T08:02:20Z
c23622790568e1fca2eeaae308903d3199093ece,"Deal with potential cardinality estimate being negative and add logging to hash determine partitions phase (#12443)

* Deal with potential cardinality estimate being negative and add logging

* Fix typo in name

* Refine and minimize logging

* Make it info based on code review

* Create a named constant for the magic number",2022-05-20T17:51:06Z
f9bdb3b236c01a32eecd98f13e42fce0e1e5c3d4,"Fix usage of maxColumnsToMerge in auto-compaction tuning config (#12551)

Issue: 
Even though `CompactionTuningConfig` allows a `maxColumnsToMerge` config
(to optimize memory usage, particulary for datasources with many dimensions),
the corresponding client object `ClientCompactionTaskQueryTuningConfig`
(used by the coordinator duty `CompactSegments` to trigger auto-compaction)
does not contain this field. Thus, the value of `maxColumnsToMerge` specified
in any datasource compaction config is ignored.

Changes:
- Add field `maxColumnsToMerge` in `ClientCompactionTaskQueryTuningConfig`
  and `UserCompactionTaskQueryTuningConfig`
- Fix tests",2022-05-20T16:53:08Z
69aac6c8dd5588ed19f0cf90f11025317133df57,"Direct UTF-8 access for ""in"" filters. (#12517)

* Direct UTF-8 access for ""in"" filters.

Directly related:

1) InDimFilter: Store stored Strings (in ValuesSet) plus sorted UTF-8
   ByteBuffers (in valuesUtf8). Use valuesUtf8 whenever possible. If
   necessary, the input set is copied into a ValuesSet. Much logic is
   simplified, because we always know what type the values set will be.
   I think that there won't even be an efficiency loss in most cases.
   InDimFilter is most frequently created by deserialization, and this
   patch updates the JsonCreator constructor to deserialize
   directly into a ValuesSet.

2) Add Utf8ValueSetIndex, which InDimFilter uses to avoid UTF-8 decodes
   during index lookups.

3) Add unsigned comparator to ByteBufferUtils and use it in
   GenericIndexed.BYTE_BUFFER_STRATEGY. This is important because UTF-8
   bytes can be compared as bytes if, and only if, the comparison
   is unsigned.

4) Add specialization to GenericIndexed.singleThreaded().indexOf that
   avoids needless ByteBuffer allocations.

5) Clarify that objects returned by ColumnIndexSupplier.as are not
   thread-safe. DictionaryEncodedStringIndexSupplier now calls
   singleThreaded() on all relevant GenericIndexed objects, saving
   a ByteBuffer allocation per access.

Also:

1) Fix performance regression in LikeFilter: since #12315, it applied
   the suffix matcher to all values in range even for type MATCH_ALL.

2) Add ObjectStrategy.canCompare() method. This fixes LikeFilterBenchmark,
   which was broken due to calls to strategy.compare in
   GenericIndexed.fromIterable.

* Add like-filter implementation tests.

* Add in-filter implementation tests.

* Add tests, fix issues.

* Fix style.

* Adjustments from review.",2022-05-20T08:51:28Z
a235aca2b3f89d3ce46232461410ae7e07d2d61f,"Web console: fix go to segments not working (#12541)

* use correct filter syntax

* fix tests",2022-05-19T21:34:03Z
5f95cc61fe676694e6ee496547eb7db6d2a1ce88,"RemoteTaskRunner: Fix NPE in streamTaskReports. (#12006)

* RemoteTaskRunner: Fix NPE in streamTaskReports.

It is possible for a work item to drop out of runningTasks after the
ZkWorker is retrieved. In this case, the current code would throw
an NPE.

* Additional tests and additional fixes.

* Fix import.",2022-05-19T21:23:55Z
65a1375b67dfa470d0eeefd078b4252e4427d74e,"SQL: Add is_active to sys.segments, update examples and docs. (#11550)

* SQL: Add is_active to sys.segments, update examples and docs.

is_active is short for:

  (is_published = 1 AND is_overshadowed = 0) OR is_realtime = 1

It's important because this represents ""all the segments that should
be queryable, whether or not they actually are right now"". Most of the
time, this is the set of segments that people will want to look at.

The web console already adds this filter to a lot of its queries,
proving its usefulness.

This patch also reworks the caveat at the bottom of the sys.segments
section, so its information is mixed into the description of each result
field. This should make it more likely for people to see the information.

* Wording updates.

* Adjustments for spellcheck.

* Adjust IT.",2022-05-19T21:23:28Z
90531fd53fafd3af37b4d403b3bb8eea5d13e456,"Do not alter query timeout in ScanQueryEngine (#12271)

Add test to detect timeout mutability",2022-05-19T16:24:42Z
ec41dfb535ceaa65405757baad6e5ee1b0793a29,"upgrade core Apache Kafka dependencies to 3.2.0 (#12538)

Announcement: https://blogs.apache.org/kafka/entry/what-s-new-in-apache8
Release notes: https://downloads.apache.org/kafka/3.2.0/RELEASE_NOTES.html",2022-05-19T16:04:52Z
1d258d2108f8ba40d3cb77fe2e602585b1ddfce5,"Slightly improve RTR log messages. (#12540)

1) Align ""Assigning task"" log messages between RTR and HRTR.

2) Remove confusing reference to ""Coordinator"".

3) Move ""Not assigning task"" message from INFO to DEBUG. It's not super
   important to see this message: we mainly want to see what _does_ get
   assigned.

4) Reword ""Task switched from pending to running"" message to better
   match the structure of the  ""Assigning task"" message from the same
   method.",2022-05-19T14:43:55Z
485de6a14a5f04a9996cdec2563d66577c162ea5,"Add builder for TaskToolbox. (#12539)

* Add builder for TaskToolbox.

The main purpose of this change is to make it easier to create
TaskToolboxes in tests. However, the builder is used in production
too, by TaskToolboxFactory.

* Fix imports, adjust formatting.

* Fix import.",2022-05-19T14:43:50Z
4631cff2a9b8cdf5850e39e7d889d951a895a468,"Free ByteBuffers in tests and fix some bugs. (#12521)

* Ensure ByteBuffers allocated in tests get freed.

Many tests had problems where a direct ByteBuffer would be allocated
and then not freed. This is bad because it causes flaky tests.

To fix this:

1) Add ByteBufferUtils.allocateDirect(size), which returns a ResourceHolder.
   This makes it easy to free the direct buffer. Currently, it's only used
   in tests, because production code seems OK.

2) Update all usages of ByteBuffer.allocateDirect (off-heap) in tests either
   to ByteBuffer.allocate (on-heap, which are garbaged collected), or to
   ByteBufferUtils.allocateDirect (wherever it seemed like there was a good
   reason for the buffer to be off-heap). Make sure to close all direct
   holders when done.

* Changes based on CI results.

* A different approach.

* Roll back BitmapOperationTest stuff.

* Try additional surefire memory.

* Revert ""Roll back BitmapOperationTest stuff.""

This reverts commit 49f846d9e3d0904df6c685d403766c07531b15e5.

* Add TestBufferPool.

* Revert Xmx change in tests.

* Better behaved NestedQueryPushDownTest. Exit tests on OOME.

* Fix TestBufferPool.

* Remove T1C from ARM tests.

* Somewhat safer.

* Fix tests.

* Fix style stuff.

* Additional debugging.

* Reset null / expr configs better.

* ExpressionLambdaAggregatorFactory thread-safety.

* Alter forkNode to try to get better info when a JVM crashes.

* Fix buffer retention in ExpressionLambdaAggregatorFactory.

* Remove unused import.",2022-05-19T14:42:29Z
c877d8a98119f2240c1335bb052a3d90e9649a86,"Updates default inputSegmentSizeBytes in Compaction config (#12534)

Fixes Cannot serialize BigInt value as JSON error while loading compaction config in console.",2022-05-19T09:13:34Z
215b90d1a4132de3524c98fe129e79dd12329e24,CVE suppression (#12535),2022-05-19T05:51:48Z
3e8d7a6d9f43f889df7d73dedb2a94e03574615e,"Sql docs items (#12530)

* touch up sql refactor

* brush up SQL refactor

* incorporate feedback

* reorder sql

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-05-17T23:56:31Z
177638f171e26718da13aa20a2a6811268ac2ce7,"Fix typo, add comma (#12529)",2022-05-17T23:42:47Z
fcb1c0b7bfc737d76e7dd956b5f4ff49055007c7,"Add cluster by support for replace syntax (#12524)

* Add cluster by support for replace syntax

* Add unit test for with list",2022-05-17T09:45:29Z
b23ddc5939d2537a51896a5082c610bf2c2bee9e,"print replication levels in coordinator segment logs (#12511)

* print replication levels in coordinator segment logs

* add served segment count to stats

* also for drops",2022-05-17T09:24:13Z
0fd4f1e3863f8f33bec69fc77dcb1ea118a42ed4,"Improve error messages from SQL REPLACE syntax (#12523)

- Add user friendly error messages for missing or incorrect OVERWRITE clause for REPLACE SQL query
- Move validation of missing OVERWRITE clause at code level instead of parser for custom error message",2022-05-17T04:25:58Z
fdfecfd9968dda992cce34b381020b1204bc5f8f,"Improved docs for range partitioning. (#12350)

* Improved docs for range partitioning.

1) Clarify the benefits of range partitioning.
2) Clarify which filters support pruning.
3) Include the fact that multi-value dimensions cannot be used for partitioning.

* Additional clarification.

* Update other section.

* Another adjustment.

* Updates from review.",2022-05-16T16:42:31Z
985640f103cbced6434123dfc239b57abf60350b,"Clarify the use of the Lookup API (#12088)

* Update lookups.md

* Update docs/querying/lookups.md

Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>

* Update docs/querying/lookups.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: 317brian <53799971+317brian@users.noreply.github.com>",2022-05-16T14:50:24Z
351e57bdb68dcb0fa8f423fd3a3808fba4a846de,"docs(fix): clarify how worker.version and minWorkerVersion comparison works (#12459)

* docs(fix): clarify how worker.version and minWorkerVersion comparison works

* Revert ""docs(fix): clarify how worker.version and minWorkerVersion comparison works""

This reverts commit cadd1fdc604de414379bffe9986ae64b9cf51fc6.

* docs(fix): clarify how worker.version and minWorkerVersion comparison works

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/configuration/index.md

fix spelling

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-05-16T14:48:33Z
5b6727f3195ac9bad906e3416bf8997b069c222f,"Enable vectorized virtual column processing by default. (#12520)

In the majority of cases, this improves performance.

There's only one case I'm aware of where this may be a net negative: for time_floor(__time, <period>) where there are many repeated __time values. In nonvectorized processing, SingleLongInputCachingExpressionColumnValueSelector implements an optimization to avoid computing the time_floor function on every row. There is no such optimization in vectorized processing.

IMO, we shouldn't mention this in the docs. Rationale: It's too fiddly of a thing: it's not guaranteed that nonvectorized processing will be faster due to the optimization, because it would have to overcome the inherent speed advantage of vectorization. So it'd always require testing to determine the best setting for a specific dataset. It would be bad if users disabled vectorization thinking it would speed up their queries, and it actually slowed them down. And even if users do their own testing, at some point in the future we'll implement the optimization for vectorized processing too, and it's likely that users that explicitly disabled vectorization will continue to have it disabled. I'd like to avoid this outcome by encouraging all users to enable vectorization at all times. Really advanced users would be following development activity anyway, and can read this issue",2022-05-16T10:13:53Z
c33ff1c745def3844c5f78007999a2bbdf676ba1,"Enforce console logging for peon process (#12067)

Currently all Druid processes share the same log4j2 configuration file located in _common directory. Since peon processes are spawned by middle manager process, they derivate the environment variables from the middle manager. These variables include those in the log4j2.xml controlling to which file the logger writes the log.

But current task logging mechanism requires the peon processes to output the log to console so that the middle manager can redirect the console output to a file and upload this file to task log storage.

So, this PR imposes this requirement to peon processes, whatever the configuration is in the shared log4j2.xml, peon processes always write the log to console.",2022-05-16T09:37:21Z
ff253fd8a32af4f74387bad14e8a4563af5c2bc0,"Add setProcessingThreadNames context parameter. (#12514)

setting thread names takes a measurable amount of time in the case where segment scans are very quick. In high-QPS testing we found a slight performance boost from turning off processing thread renaming. This option makes that possible.",2022-05-16T08:12:00Z
bb1a6def9dee55528907999e99ecf1b6c0c5f741,"Task queue unblock (#12099)

* concurrency: introduce GuardedBy to TaskQueue

* perf: Introduce TaskQueueScaleTest to test performance of TaskQueue with large task counts

This introduces a test case to confirm how long it will take to launch and manage (aka shutdown)
a large number of threads in the TaskQueue.

h/t to @gianm for main implementation.

* perf: improve scalability of TaskQueue with large task counts

* linter fixes, expand test coverage

* pr feedback suggestion; swap to different linter

* swap to use SuppressWarnings

* Fix TaskQueueScaleTest.

Co-authored-by: Gian Merlino <gian@imply.io>",2022-05-14T23:44:29Z
7ab21708021cb534ad34608b3fb06cb0273c2cd2,"Use datasketches version 3.2.0 (#12509)

Changes:
- Use apache datasketches version 3.2.0.
- Remove unsafe reflection-based usage of datasketch internals added in #12022",2022-05-13T05:58:15Z
39b3487aa9829d1d5b19733ef76319d8133dcb38,"Add replace statement to sql parser (#12386)

Relevant Issue: #11929

- Add custom replace statement to Druid SQL parser.
- Edit DruidPlanner to convert relevant fields to Query Context.
- Refactor common code with INSERT statements to reuse them for REPLACE where possible.",2022-05-13T05:26:40Z
9177515be224269dc0299eae809591cb373d83a0,"Add IPAddress java library as dependency and migrate IPv4 functions to use the new library. (#11634)

* Add ipaddress library as dependency.

* IPv4 functions to use the inet.ipaddr package.

* Remove unused imports.

* Add new function.

* Minor rename.

* Add more unit tests.

* IPv4 address expr utils unit tests and address options.

* Adjust the IPv4Util functions.

* Move the UTs a bit around.

* Javadoc comments.

* Add license info for IPAddress.

* Fix groupId, artifact and version in license.yaml.

* Remove redundant subnet in messages - fixes UT.

* Remove unused commons-net dependency for /processing project.

* Make class and methods public so it can be accessed.

* Add initial version of benchmark

* Add subnetutils package for benchmarks.

* Auto generate ip addresses.

* Add more v4 address representations in setup to avoid bias.

* Use ThreadLocalRandom to avoid forbidden API usage.

* Adjust IPv4AddressBenchmark to adhere to codestyle rules.

* Update ipaddress library to latest 5.3.4

* Add ipaddress package dependency to benchmarks project.",2022-05-12T05:06:20Z
9e5a940cf1fc04b00f9cb0216ec8766d8fed0ee2,"remake column indexes and query processing of filters (#12388)

Following up on #12315, which pushed most of the logic of building ImmutableBitmap into BitmapIndex in order to hide the details of how column indexes are implemented from the Filter implementations, this PR totally refashions how Filter consume indexes. The end result, while a rather dramatic reshuffling of the existing code, should be extraordinarily flexible, eventually allowing us to model any type of index we can imagine, and providing the machinery to build the filters that use them, while also allowing for other column implementations to implement the built-in index types to provide adapters to make use indexing in the current set filters that Druid provides.",2022-05-11T06:27:08Z
deb69d1bc03aef784a563260bed1d21505495439,"Allow coordinator to be configured to kill segments in future (#10877)

Allow a Druid cluster to kill segments whose interval_end is a date in the future. This can be done by setting druid.coordinator.kill.durationToRetain to a negative period. For example PT-24H would allow segments to be killed if their interval_end date was 24 hours or less into the future at the time that the kill task is generated by the system.

A cluster operator can also disregard the druid.coordinator.kill.durationToRetain entirely by setting a new configuration, druid.coordinator.kill.ignoreDurationToRetain=true. This ignores interval_end date when looking for segments to kill, and instead is capable of killing any segment marked unused. This new configuration is off by default, and a cluster operator should fully understand and accept the risks if they enable it.",2022-05-11T02:05:15Z
60b4fa0f753043bddb45bb508aadb2dd55433584,"Docs: Fix column name in ingestion rollup doc (#12036)

Fix the referred column name from ""count"" to ""num_rows"" as ""count"" vs. ""COUNT(*)"" might be a little confusing in this example.",2022-05-10T12:05:59Z
75836a5a06b7d41b4151eca41b83d580cdd8486f,"Add feature flag for sql planning of TimeBoundary queries (#12491)

* Add feature flag for sql planning of TimeBoundary queries

* fixup! Add feature flag for sql planning of TimeBoundary queries

* Add documentation for enableTimeBoundaryPlanning

* fixup! Add documentation for enableTimeBoundaryPlanning",2022-05-10T09:53:42Z
c68388ebcd6cc2a77d2f6c41320906b32a5f6028,"Vectorized version of string last aggregator (#12493)

* Vectorized version of string last aggregator

* Updating string last and adding testcases

* Updating code and adding testcases for serializable pairs

* Addressing review comments",2022-05-10T00:02:38Z
2dd073c2cdd1a969a703612b433e4d7820bedc8b,"Pass metrics object for Scan, Timeseries and GroupBy queries during cursor creation (#12484)

* Pass metrics object for Scan, Timeseries and GroupBy queries during cursor creation

* fixup! Pass metrics object for Scan, Timeseries and GroupBy queries during cursor creation

* Document vectorized dimension",2022-05-09T17:40:17Z
eb6de94e1f1a9d5e38f6ef16971be8d3763a83d8,Add daily stats to console (#12329),2022-05-05T22:31:21Z
2d8eb117c0bc59aa79016ed0e28519f6b7aa7afc,"Web console: add a button to get out of restricted mode, make capability detection more robust (#12503)

* allow unrestrict

* update tests",2022-05-05T22:06:59Z
0206a2da5c6211caf451751876d847f40c2e7755,"Update automatic compaction docs with consistent terminology (#12416)

* specify automatic compaction where applicable

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* update for style and consistency

* implement suggested feedback

* remove duplicate example

* Apply suggestions from code review

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/compaction.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/api-reference.md

* update .spelling

* Adopt review suggestions

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2022-05-03T23:22:25Z
35a7d863b77a692908d90ba529714210859f3f8b,"add aws-java-sdk-sts to aws-common classpath (#12482)

Fixes #11303

WebIdentityTokenProvider in the defaultAWSCredentialsProviderChain can not actually be used because the aws-java-sdk-sts jar is not in the classpath of S3 extension at runtime, since each extension has its own classpath. This results in the inability to assume STS role before generating authentication token.
The error message from getCredentials() is:

""Unable to load credentials from WebIdentityTokenCredentialsProvider: To use assume role profiles the aws-java-sdk-sts module must be on the class path""

This PR will fix multiple authentication modules that are dependent on the WebIdentityTokenProvider, including AWS IAM based RDS authentication and S3 authentication.",2022-05-03T19:25:51Z
fb08bac01a20723988b0be31452ce14a87a12207,"Web console: Misc table fixes (#12489)

* Misc table fixes

* extract default className

* table spacing updates

* fix e2e action selector

* try more times

* make the web console exist again",2022-05-03T19:08:08Z
de14f511d68fe9f8282164f53a7401bbf67011da,"Fix broken ForkingTaskRunnerTest (#12499)

A recent commit broke this test. This pr fixes the test.",2022-05-03T08:00:36Z
770ad951693f30e6b56af4db430f88f0408d10d5,"Add a metric for task duration in the pending queue (#12492)

This PR is to measure how long a task stays in the pending queue and emits the value with the metric task/pending/time. The metric is measured in RemoteTaskRunner and HttpRemoteTaskRunner.

An example of the metric:

```
2022-04-26T21:59:09,488 INFO [rtr-pending-tasks-runner-0] org.apache.druid.java.util.emitter.core.LoggingEmitter - {""feed"":""metrics"",""timestamp"":""2022-04-26T21:59:09.487Z"",""service"":""druid/coordinator"",""host"":""localhost:8081"",""version"":""2022.02.0-iap-SNAPSHOT"",""metric"":""task/pending/time"",""value"":8,""dataSource"":""wikipedia"",""taskId"":""index_parallel_wikipedia_gecpcglg_2022-04-26T21:59:09.432Z"",""taskType"":""index_parallel""}
```

------------------------------------------
Key changed/added classes in this PR

    Emit metric task/pending/time in classes RemoteTaskRunner and HttpRemoteTaskRunner.
    Update related factory classes and tests.",2022-05-03T03:47:25Z
785a1eeb9f4e70984b76a4e8900dc5e3e15acc4f,Update maven assembly plugin for druid-benchmarks (#12487),2022-05-02T16:43:19Z
39e7191f03b41580d95b28713a6f0e2cd9df52a1,"Add authentication call before cleaning up intermediate files in hadoop ingestions (#12030)

* Add authentication call before cleaning up intermediate files in hadoop ingestions

* fix checkstyle

* remove debug log",2022-05-02T13:40:44Z
dd8781f5b06b898280ecf15d6a44509441c566a8,Upgrade dependency-check-maven to 7.0.4 (#12441),2022-05-01T14:45:58Z
b97f273d5a4366c38e2d9b988d2eb51cadb2c022,docs: fix typo (#12494),2022-05-01T14:44:31Z
bb080693a9c5b4475101a9783924cbe163405b3b,"Improve build performance of modules (#12486)

* improve build performance of modules

* improve build performance of modules

* Update pom.xml

* improve build performance of modules",2022-05-01T14:43:11Z
1d1f53e7d5c3cd7f0e3c9e8e189b063be0fc50ac,Improve error messages when URI points to a file that doesn't exist (#12490),2022-05-01T05:56:16Z
529b983ad0ad8ee5b5cdcdfe81fe840fc3bd0427,"GroupBy: Reduce allocations by reusing entry and key holders. (#12474)

* GroupBy: Reduce allocations by reusing entry and key holders.

Two main changes:

1) Reuse Entry objects returned by various implementations of
   Grouper.iterator.

2) Reuse key objects contained within those Entry objects.

This is allowed by the contract, which states that entries must be
processed and immediately discarded. However, not all call sites
respected this, so this patch also updates those call sites.

One particularly sneaky way that the old code retained entries too long
is due to Guava's MergingIterator and CombiningIterator. Internally,
these both advance to the next value prior to returning the current
value. So, this patch addresses that in two ways:

1) For merging, we have our own implementation MergeIterator already,
   although it had the same problem. So, this patch updates our
   implementation to return the current item prior to advancing to the
   next item. It also adds a forbidden-api entry to ensure that this
   safer implementation is used instead of Guava's.

2) For combining, we address the problem in a different way: by copying
   the key when creating the new, combined entry.

* Attempt to fix test.

* Remove unused import.",2022-04-29T06:21:13Z
42fa5c26e1f4e09692c9752ccba6126a9ae96905,"remove arbitrary granularity spec from docs (#12460)

* remove arbitrary granularity spec from docs

* Update docs/ingestion/ingestion-spec.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-04-28T23:36:54Z
df074f2f965c71d9abfc3f5aed6d189357ce600f,"Improve exception message for native binary operators (#12335)

* Improve exception message

* Update message",2022-04-28T02:20:16Z
7b89682bbecc0feffb1996f90f6d8905458c054b,"DimensionRangeShardSpec speed boost. (#12477)

* DimensionRangeShardSpec speed boost.

Calling isEmpty() and equals() on RangeSets is expensive, because these
fall back on default implementations that call size(). And size() is
_also_ a default implementation that iterates the entire collection.

* Fix and test from code review.",2022-04-27T21:20:35Z
a2bad0b3a2c80a5ffb704ec8c4a0e18734455d38,"Reduce allocations due to Jackson serialization. (#12468)

* Reduce allocations due to Jackson serialization.

This patch attacks two sources of allocations during Jackson
serialization:

1) ObjectMapper.writeValue and JsonGenerator.writeObject create a new
   DefaultSerializerProvider instance for each call. It has lots of
   fields and creates pressure on the garbage collector. So, this patch
   adds helper functions in JacksonUtils that enable reuse of
   SerializerProvider objects and updates various call sites to make
   use of this.

2) GroupByQueryToolChest copies the ObjectMapper for every query to
   install a special module that supports backwards compatibility with
   map-based rows. This isn't needed if resultAsArray is set and
   all servers are running Druid 0.16.0 or later. This release was a
   while ago. So, this patch disables backwards compatibility by default,
   which eliminates the need to copy the heavyweight ObjectMapper. The
   patch also introduces a configuration option that allows admins to
   explicitly enable backwards compatibility.

* Add test.

* Update additional call sites and add to forbidden APIs.",2022-04-27T21:17:26Z
2e42d04038a27863e0c8f3bb7704c1a362ede27e,"SQL: Create millisecond precision timestamp literals. (#12407)

* SQL: Create millisecond precision timestamp literals.

Fixes a bug where implicit casts of strings to timestamps would use seconds
precision rather than milliseconds. The new test case
testCountStarWithBetweenTimeFilterUsingMillisecondsInStringLiterals
exercises this.

* Update sql/src/main/java/org/apache/druid/sql/calcite/planner/Calcites.java

Co-authored-by: Frank Chen <frankchen@apache.org>

* Correct precision handling.

- Set default precision to 3 (millis) for things involving timestamps.
- Respect precision specified in types when available.

* Silence, checkstyle.

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-04-27T21:17:07Z
72d15ab321851e8b97ac10fcd6c71c5828af3ab6,"JvmMonitor: Handle more generation and collector scenarios. (#12469)

* JvmMonitor: Handle more generation and collector scenarios.

ZGC on Java 11 only has a generation 1 (there is no 0). This causes
a NullPointerException when trying to extract the spacesCount for
generation 0. In addition, ZGC on Java 15 has a collector number 2
but no spaces in generation 2, which breaks the assumption that
collectors always have same-numbered spaces.

This patch adjusts things to be more robust, enabling the JvmMonitor
to work properly for ZGC on both Java 11 and 15.

* Test adjustments.

* Improve surefire arglines.

* Need a placeholder",2022-04-27T18:18:40Z
e7e49ec9c857641efe1548f438e2d203248de7ea,"For the various Yielder objects, don't create new Yielders and instead mutate state. (#12475)

Co-authored-by: imply-cheddar <86940447+imply-cheddar@users.noreply.github.com>",2022-04-27T17:52:20Z
2fe053c5cbc0845e09a8f27580e42b097a4227e8,Bump up the versions (#12480),2022-04-27T08:58:20Z
1306965c9ea3c4a4a90667cdbd2b048467c2cb8d,"Validate select columns for insert statement (#12431)

Unnamed columns in the select part of insert SQL statements currently create a table with the column name such as ""EXPR$3"". This PR adds a check for this.",2022-04-27T06:55:49Z
027935dcffd3f83b7faa94c187ab0572f16981c6,"Vectorize numeric latest aggregators (#12439)

* Vectorizing Latest aggregator Part 1

* Updating benchmark tests

* Changing appropriate logic for vectors for null handling

* Introducing an abstract class and moving the commonalities there

* Adding vectorization for StringLast aggregator (initial version)

* Updated bufferized version of numeric aggregators

* Adding some javadocs

* Making sure this PR vectorizes numeric latest agg only

* Adding another benchmarking test

* Fixing intellij inspections

* Adding tests for double

* Adding test cases for long and float

* Updating testcases

* Checkstyle oops..

* One tiny change in test case

* Fixing spotbug and rhs not being used",2022-04-26T18:33:08Z
564d6defd47749d55dd07e5549d7264cbc1c4019,"Worker level task metrics (#12446)

* * fix metric name inconsistency

* * add task slot metrics for middle managers

* * add new WorkerTaskCountStatsMonitor to report task count metrics
  from worker

* * more stuff

* * remove unused variable

* * more stuff

* * add javadocs

* * fix checkstyle

* * fix hadoop test failure

* * cleanup

* * add more code coverage in tests

* * fix test failure

* * add docs

* * increase code coverage

* * fix spelling

* * fix failing tests

* * remove dead code

* * fix spelling",2022-04-26T16:44:44Z
4868ef952977e2cb527900eff59188687a2b2183,"Enable Arm builds (#12451)

This PR enables ARM builds on Travis. I've ported over the changes from @martin-g on reducing heap requirements for some of the tests to ensure they run well on Travis arm instances.",2022-04-26T14:44:40Z
95694b5afa505aea906f05db41c8901559b8bd2b,"Convert simple min/max SQL queries on __time to timeBoundary queries (#12472)

* Support array based results in timeBoundary query

* Fix bug with query interval in timeBoundary

* Convert min(__time) and max(__time) SQL queries to timeBoundary

* Add tests for timeBoundary backed SQL queries

* Fix query plans for existing tests

* fixup! Convert min(__time) and max(__time) SQL queries to timeBoundary

* fixup! Add tests for timeBoundary backed SQL queries

* fixup! Fix bug with query interval in timeBoundary",2022-04-25T15:18:58Z
b47316b8442fb6f1f440c1418d63a5809559a2f4,"Update native-batch.md (#12478)

Fixed indent on the Granularity Spec section and removed some superfluous tabbings.",2022-04-25T13:44:17Z
4781af9921a5ed1ffe88aa9083cb93265e0ec8ba,"Fix formatting in stats.md (#12470)

* Fix formatting in stats.md

* Update stats.md

* Update docs/development/extensions-core/stats.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/development/extensions-core/stats.md

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-04-23T03:35:08Z
2473de2552ee277dda47835daacf23eecd1fb80c,"Metrics for shenandoah based on this source code: https://github.com/openjdk/jdk/blob/554caf33a01ac9ca2e3e9170557e8348750f3971/src/hotspot/share/gc/shenandoah/shenandoahMonitoringSupport.cpp#L65 (#12369)

Co-authored-by: Didip Kerabat <didip@apple.com>",2022-04-22T18:44:05Z
b7621226d28493899c1331f7bf45469706c248c5,"QueryScheduler: Log per-query message at DEBUG level. (#12467)

We generally want to avoid having any routine per-query messages at
INFO level, because they pollute logs.",2022-04-22T18:22:34Z
63a993c33a306c40b92738cbe46b09749103304f,stringFirst and stringLast supported in ingestion (#12466),2022-04-22T02:28:49Z
f95447070ed2ccfa45c44075b2b5e94dfd175369,updated docs for sql query context (#12406),2022-04-21T18:19:39Z
65d00c705cc56185c6dd9678f860b3d0415caba6,"Supress CVE 2022 26612 (#12463)

* supress CVE-2022-26612

* adding packageUrl

* suppressing CVE-2022-26612

* adding packageUrl

* moving to hadoop section",2022-04-21T15:48:20Z
73ce5df22dc64a675be2ec5e6b86b1b6ad211808,"Add support for authorizing query context params (#12396)

The query context is a way that the user gives a hint to the Druid query engine, so that they enforce a certain behavior or at least let the query engine prefer a certain plan during query planning. Today, there are 3 types of query context params as below.

Default context params. They are set via druid.query.default.context in runtime properties. Any user context params can be default params.
User context params. They are set in the user query request. See https://druid.apache.org/docs/latest/querying/query-context.html for parameters.
System context params. They are set by the Druid query engine during query processing. These params override other context params.
Today, any context params are allowed to users. This can cause 
1) a bad UX if the context param is not matured yet or 
2) even query failure or system fault in the worst case if a sensitive param is abused, ex) maxSubqueryRows.

This PR adds an ability to limit context params per user role. That means, a query will fail if you have a context param set in the query that is not allowed to you. To do that, this PR adds a new built-in resource type, QUERY_CONTEXT. The resource to authorize has a name of the context param (such as maxSubqueryRows) and the type of QUERY_CONTEXT. To allow a certain context param for a user, the user should be granted WRITE permission on the context param resource. Here is an example of the permission.

{
  ""resourceAction"" : {
    ""resource"" : {
      ""name"" : ""maxSubqueryRows"",
      ""type"" : ""QUERY_CONTEXT""
    },
    ""action"" : ""WRITE""
  },
  ""resourceNamePattern"" : ""maxSubqueryRows""
}
Each role can have multiple permissions for context params. Each permission should be set for different context params.

When a query is issued with a query context X, the query will fail if the user who issued the query does not have WRITE permission on the query context X. In this case,

HTTP endpoints will return 403 response code.
JDBC will throw ForbiddenException.
Note: there is a context param called brokerService that is used only by the router. This param is used to pin your query to run it in a specific broker. Because the authorization is done not in the router, but in the broker, if you have brokerService set in your query without a proper permission, your query will fail in the broker after routing is done. Technically, this is not right because the authorization is checked after the context param takes effect. However, this should not cause any user-facing issue and thus should be OK. The query will still fail if the user doesn’t have permission for brokerService.

The context param authorization can be enabled using druid.auth.authorizeQueryContextParams. This is disabled by default to avoid any hassle when someone upgrades his cluster blindly without reading release notes.",2022-04-21T08:51:16Z
4c6ba73823bc0561dad1ea9c0088238922438f23,Emit vectorized metric dimension by default (#12464),2022-04-21T04:14:55Z
177e1856cdaf3e5aa7a5754d129fc1945b9f7c72,"Fix GCS based ingestion if bucket name contains underscores (#12445)

GCP allows bucket names to contain underscores. When a location in such a bucket
is mapped to `java.net.URI`, `URI.getHost()` returns null. `URI.getHost()` is used as
the bucket name in `CloudObjectLocation`, leading to an NPE.

This commit uses `URI.getAuthority()` as the bucket name if `URI.getHost()` is null.",2022-04-21T03:52:35Z
5099f5aa70baf679f3b29162eaa2c6846bdf776d,"update httpclient due to cve (#12422)

https://github.com/apache/druid/issues/12421",2022-04-21T02:12:19Z
341c65738d7ac15889a3a07d119029d91a527935,"issue-12426 upgrade k8s client due to cve (#12427)

* issue-12426 upgrade k8s client due to cve

* compile issues

* try to fix license check",2022-04-21T02:11:55Z
2db02876cf95f2179c3cc2a7a443e250c3fe451a,"Updating an error msg (#12450)

* Updating an error msg

* Added an extra [] so removing it",2022-04-20T14:56:09Z
691e26d2429cd81afef092dbda32e24ad56bb510,"Suppress CVE-2021-43138 (#12437)

* Suppress CVE-2021-43138

* revert netty 3.10.5.Final",2022-04-19T03:00:06Z
0edc22179cc834f296a3b2f3a06db7bff27467c9,"Document expression post-aggregators (#11896)

* Document expression post-aggregators

* Update docs/querying/post-aggregations.md

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: Frank Chen <frankchen@apache.org>",2022-04-19T02:36:19Z
2677d279e2df3e3cdbe68007bfe2cf89820e09db,Remove h2 database from dependency (#12447),2022-04-19T02:25:17Z
7b3b71f1d5eb9cc883cb96b8b69fb71635ba781b,"Document running it tests from intellij IDE (#12440)

* document running IT tests in intellij

* clean up unnecessary changes

* address comments",2022-04-19T02:24:46Z
c86c48203edf67a696a6e64c677a4792ff26079e,recommendation for comparing strings and numbers (#12442),2022-04-18T16:28:32Z
5167d328b10c5b0fd858c06c79bc8eb253bd5a39,"Docs - query caching (#11584)

* Update caching.md

Knowledge from https://the-asf.slack.com/archives/CJ8D1JTB8/p1597781107153900

Update caching.md

A few additional updates OTBO https://the-asf.slack.com/archives/CJ8D1JTB8/p1608669046041300

* Update caching.md

Typos

* Amendments on the segment cache

Significant updates on content around the segment cache, pull process, and in-memory cache

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/basic-cluster-tuning.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/basic-cluster-tuning.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update basic-cluster-tuning.md

typo

* Update docs/querying/caching.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Whole-query caching update

Made more succinct and removed specific config to change.

* Update docs/design/historical.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-04-18T09:00:21Z
408b46ae9fdb44b0eee22d99440db0317e8e553a,"Fixes a small typo in ingestion spec doc (#12143)

* small typo

* Update docs/ingestion/ingestion-spec.md

Co-authored-by: sthetland <steve.hetland@imply.io>

Co-authored-by: sthetland <steve.hetland@imply.io>",2022-04-18T08:53:50Z
de9f12b5c6d6b1a6096c0eec04097101e4792878,"Fail fast incase a lookup load fails (#12397)

Currently while loading a lookup for the first time, loading threads blocks
for `waitForFirstRunMs` incase the lookup failed to load. If the `waitForFirstRunMs`
is long (like 10 minutes), such blocking can slow down the loading of other lookups.

This commit allows the thread to progress as soon as the loading of the lookup fails.",2022-04-18T07:44:02Z
1201c9b2e56fd39d3b5a4120360c115c2c4347fc,"Docs - added another common config property to tuningConfig (#11935)

* Update ingestion-spec.md

Added indexSpecForIntermediatePersists as a common configuration property.

* Update ingestion-spec.md

Amended to remove ""below"" and add link to the table.

* Update ingestion-spec.md

Removed passive.",2022-04-18T05:41:39Z
9f2b37f2509aa369400a187174c9b3238fcd9e8b,"Update tutorial-compaction.md to change an unclear statement (#11988)

* Update tutorial-compaction.md

Unclear statement on the explanation of tuningConfig section.

* Update docs/tutorials/tutorial-compaction.md

Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Kashif Faraz <kashif.faraz@gmail.com>",2022-04-18T05:25:09Z
c25a5568275c506115914cc5622a829c89f8e384,"Fix bug in auto compaction preserveExistingMetrics feature (#12438)

* fix bug

* fix test

* fix IT",2022-04-15T22:47:47Z
0460d45e92a15ebdadb4455afa16a7d977f74388,"Make tombstones ingestible by having them return an empty result set. (#12392)

* Make tombstones ingestible by having them return an empty result set.

* Spotbug

* Coverage

* Coverage

* Remove unnecessary exception (checkstyle)

* Fix integration test and add one more to test dropExisting set to false over tombstones

* Force dropExisting to true in auto-compaction when the interval contains only tombstones

* Checkstyle, fix unit test

* Changed flag by mistake, fixing it

* Remove method from interface since this method is specific to only DruidSegmentInputentity

* Fix typo

* Adapt to latest code

* Update comments when only tombstones to compact

* Move empty iterator to a new DruidTombstoneSegmentReader

* Code review feedback

* Checkstyle

* Review feedback

* Coverage",2022-04-15T16:08:06Z
a22d4137250b7f074fe596396755494905617e99,"Use binary search to improve DimensionRangeShardSpec lookup (#12417)

If there are many shards, mapper of IndexGeneratorJob seems to spend a lot of time in calling
DimensionRangeShardSpec.isInChunk to lookup target shard. This can be significantly improved
by using binary search instead of comparing an input row to every shardSpec.

Changes:
* Add `BaseDimensionRangeShardSpec` which provides a binary-search-based
   implementation for `createLookup`
* `DimensionRangeShardSpec`, `SingleDimensionShardSpec`, and 
   `DimensionRangeBucketShardSpec` now extend `BaseDimensionRangeShardSpec`",2022-04-15T16:07:06Z
cd6fba2f6cf6e189ba26097c73b9dbe4f1d0edbc,"Handling planning with alias for time for group by and order by (#12418)

An outer scan query, that requires ordering on a column, should be considered an invalid query.",2022-04-15T04:59:17Z
a72cc28959a5dfa639d1bff069597a97ea5d4eba,good stuff (#12435),2022-04-14T07:23:06Z
5824ab9608dc05aa6d04152e9b0357585c6823bf,fix issue with boolean expression input (#12429),2022-04-13T23:34:01Z
5d37d9f9d81cfc1d30c4f5f542fd264964cddd33,"Add docs to metric spec for auto compaction (#12415)

* add docs

* Update docs/configuration/index.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update index.md

* Update docs/configuration/index.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-04-13T20:27:00Z
5e5625f3ae9fa663697214f49e66b5c296d342fb,"Fix indexMerger to respect the includeAllDimensions flag (#12428)

* Fix indexMerger to respect flag includeAllDimensions flag; jsonInputFormat should set keepNullColumns if useFieldDiscovery is set

* address comments",2022-04-13T19:43:11Z
f24e9c68620e0e3ed81450f57081b8f75eeaac64,"Add Kinesis ListShards permission (#12387)

* add Kinesis permission

* List Kinesis IAM permissions

* Adopt review suggestions

* Fix merge conflicts",2022-04-13T09:59:56Z
a139cd22aa81d7b6e0de98a01002b0f8f00f28c6,"Web console: Misc fixes and improvements  (#12361)

* Misc fixes

* pad column numbers

* make shard_type filterable",2022-04-13T05:20:28Z
2c79d28bb772567893433602c9a39acb0d188e10,"Copy of #11309 with fixes (#12402)

* Optionally load segment index files into page cache on bootstrap and new segment download

* Fix unit test failure

* Fix test case

* fix spelling

* fix spelling

* fix test and test coverage issues

Co-authored-by: Jian Wang <wjhypo@gmail.com>",2022-04-11T15:35:24Z
665c926824375fd096db805e7140d4be1d361dc1,"Fix zulu8 set-up Dockerfile for hadoop and hadoop3 in hadoop ingestion tutorial (#12248)

Fix errors related to zulu8 installation for building the Hadoop Docker image in the Load From Apache Hadoop tutorial.

The steps to download zulu8 in the Dockerfile and setup-zulu-repo.sh were replaced with the steps in the Dockerfile released by zulu-openjdk: https://github.com/zulu-openjdk/zulu-openjdk/blob/be45d20302e42df5aa95d2de078bb5e4214f5dba/centos/8u282-8.52.0.23/Dockerfile.",2022-04-11T14:58:09Z
d2a6754692af3d14ba7622f8c7ad6a8b06eb461a,"Bump PostgreSQL JDBC driver to 42.3.3 (CVE-2022-21724) (#12410)

* Bump PostgreSQL JDBC driver to 42.3.3 (CVE-2022-21724)

* update license file",2022-04-09T10:08:26Z
b74cb7624df15aff61c0c979dac9236f3a53bb45,"Make error messages for insert statements consistent with select statements (#12414)

For a query like
INSERT INTO tablename SELECT channel, added as count FROM wikipedia the error message is Encountered ""as count"". However, for the insert statement
INSERT INTO t SELECT channel, added as count FROM wikipedia PARTITIONED BY ALL
returns INSERT statements must specify PARTITIONED BY clause explictly (incorrectly). This PR corrects this.

Add EOF to end of Druid SQL Insert statements
Rename SQL Insert statements in the parser to reflect the behaviour change",2022-04-09T06:51:40Z
36e17a20ea69881540cf8c9e01f1ca288310ba6a,"Improve metrics for Auto Compaction (#12413)

* add impl

* add docs

* fix",2022-04-09T03:14:36Z
8edea5a82dfdb34c3177c0efd7a79bae54751ab8,"Add a new flag for ingestion to preserve existing metrics (#12185)

* add impl

* add impl

* fix checkstyle

* add impl

* add unit test

* fix stuff

* fix stuff

* fix stuff

* add unit test

* add more unit tests

* add more unit tests

* add IT

* add IT

* add IT

* add IT

* add ITs

* address comments

* fix test

* fix test

* fix test

* address comments

* address comments

* address comments

* fix conflict

* fix checkstyle

* address comments

* fix test

* fix checkstyle

* fix test

* fix test

* fix IT",2022-04-08T18:02:02Z
bf96ddf5bac50e5e9ae778eb28ee300fea6fc62f,"Update index.md (#12390)

Added guidance on when to increase druid.indexer.storage.recentlyFinishedThreshold.",2022-04-08T12:31:54Z
df48e446b04ce0272a7d0c9e0a70dc5cedb07076,"Fix the other 2 python scripts that generates license. (#12340)

Fixes YAML.load_all issues on two of the Python scripts that generate license.

The broken Python files interfere with some of the Maven tasks.",2022-04-08T11:13:17Z
d98cbd90f06576b0c89eb3d82a92abbfe09f53a8,"Update basic-cluster-tuning.md (#12412)

Changed ""Other useful JVM flags"" to ""Other generally useful JVM flags"" in order to align with the introduction to the doc.",2022-04-08T09:59:55Z
d82a8185d1d4db68791658e75562e5780dc3f5ea,"fix(docs): clarify what s3 permissions are needed based on the access management type (#12405)

* fix(docs): clarify what s3 permissions are needed based on the permissions model

* fix typo

* Update docs/development/extensions-core/s3.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2022-04-07T23:22:56Z
a8e97efea9a80ca6538d9ab00f443ba36072cc12,"Bump minimist from 1.2.5 to 1.2.6 in /website (#12400)

Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.
- [Release notes](https://github.com/substack/minimist/releases)
- [Commits](https://github.com/substack/minimist/compare/1.2.5...1.2.6)

---
updated-dependencies:
- dependency-name: minimist
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-04-07T10:08:39Z
7d10e02463156a0f8bbb755eeaa95a90ec4394ad,"Bump minimist from 1.2.5 to 1.2.6 in /web-console (#12401)

Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.
- [Release notes](https://github.com/substack/minimist/releases)
- [Commits](https://github.com/substack/minimist/compare/1.2.5...1.2.6)

---
updated-dependencies:
- dependency-name: minimist
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-04-06T23:55:14Z
e8635df9e729ba7f05e3b5c5ed4b676925b1e87f,clean up some bp3 classes (#12403),2022-04-06T22:27:44Z
e6229b76a68add5dd02165b5ade78a37189173eb,"Document data format and example for featureSpec (#12394)

* add data format and example for featureSpec

* add second feature in example

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-04-06T22:17:15Z
ac6c24793e23672fa575d855d0cb5a3ba610f2bb,"docs(fix): add clarity around granularitySpec (#12362)

* fix: add clarify around granularitySpec

* fix spacing

* Update docs/ingestion/compaction.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-04-06T16:24:37Z
d326c681c1c43724266f84d3ede31ac8299cafe8,"Document config for ingesting null columns (#12389)

* config for ingesting null columns

* add link

* edit .spelling

* what happens if storeEmptyColumns is disabled",2022-04-05T16:15:42Z
7d5666109c9d4952fc66af170c7d46918d7378dd,"upgrade surefire 3.0.0-M6 (#12395)

* upgrade surefire 3.0.0-M6

* increasing memory",2022-04-05T06:56:15Z
2cc2088720e82339ecbe1a510b6312f3aa9d4c23,"Method to specify eternity in the scan query builder (#12223)

* Method to specify eternity in the scan query builder

* Fix checkstyle issue

* Renamed eterity() to eternityInterval()

* Minor fixes",2022-04-04T22:11:32Z
90680543d0086a7692101072cf804241f5a883dd,"Blueprint 4 (#12391)

* Update blueprint dependencies & LICENSES

* Switch to bp4 namespace; use bp-ns variable in overrides

* Add webpack alias for colors.scss

* Snapshots

* Update selectors in e2e tests",2022-04-04T17:34:22Z
067254b7782cad0b27abf5815771981a4fcf3cda,"Package kinesis client jar within the extension (#12370)

amazon-kinesis-client was not covered undered the apache license and required separate insertion in the kinesis extension.
This can now be avoided since it is covered, and including it within druid helps prevent incompatibilities.

Allows enabling of deaggregation out of the box by packaging amazon-kinesis-client (1.14.4) with druid for kinesis ingestion.",2022-04-04T16:01:18Z
984904779bea348905d96c95e1c3f05f44883af8,"Increase default DatasourceCompactionConfig.inputSegmentSizeBytes to Long.MAX_VALUE (#12381)

The current default value of inputSegmentSizeBytes is 400MB, which is pretty
low for most compaction use cases. Thus most users are forced to override the
default.

The default value is now increased to Long.MAX_VALUE.",2022-04-04T10:58:53Z
c5531be553caa037f4caf92361abc5252a61e202,"Add feature flag for Kinesis listShards API usage (#12383)

listShards API was used to get all the shards for kinesis ingestion to improve its resiliency as part of #12161.

However, this may require additional permissions in the IAM policy where the stream is present. (Please refer to: https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html).

A dynamic configuration useListShards has been added to KinesisSupervisorTuningConfig to control the usage of this API and prevent issues upon upgrade. It can be safely turned on (and is recommended when using kinesis ingestion) by setting this configuration to true.",2022-04-04T09:28:10Z
a1ea6581156bf415fe991cebf74182b24d5b2994,"Introducing a new config to ignore nulls while computing String Cardinality (#12345)

* Counting nulls in String cardinality with a config

* Adding tests for the new config

* Wrapping the vectorize part to allow backward compatibility

* Adding different tests, cleaning the code and putting the check at the proper position, handling hasRow() and hasValue() changes

* Updating testcase and code

* Adding null handling test to improve coverage

* Checkstyle fix

* Adding 1 more change in docs

* Making docs clearer",2022-03-29T21:31:36Z
f1841c644408fe5d3bf801e2ab695a75dc100da9,"Docs - S3 masking and nav update to S3 page (#11490)

* Docs: Masking S3 creds and some rewording

Knowledge transfer from https://groups.google.com/g/druid-user/c/FydcpFrA688

* Removed bold in one of the quote sections

* Update s3.md

* Update s3.md

Quick grammar change

* Update docs/development/extensions-core/s3.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/s3.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/s3.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/s3.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/development/extensions-core/s3.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update s3.md

Typo

* Update docs/development/extensions-core/s3.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update s3.md

Active lang

* Update s3.md

LAng nit

* Update native-batch.md

LAng nit

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Grammar tidy-up and link fix

Corrected 2 x links to old page H2s, resolved the question around precedence, and some other grammatical changes.

* Update docs/development/extensions-core/s3.md

* Update s3.md

Removed an Erroneous E

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-03-29T16:13:05Z
b9a968e7ff5b10a06298c6564ebb7a2c011a5a1e,"Docs – expressions link back and timestamp hint (#11674)

* Update math-expr.md

Link back to transformSpec

* Update ingestion-spec.md

Moved info about using the timestamp inside transforms into the actual timestamp section.

* Update ingestion-spec.md

Active language.",2022-03-29T16:12:30Z
3c55565398356d1eaa503f55b1cec514188a8448,"Update ingestion-spec.md (#12371)

* Update ingestion-spec.md

Added best practice point to dimensions description.

* Update docs/ingestion/ingestion-spec.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-03-29T16:12:02Z
49a3f4291a667ee33797ddcc83b3a274da333c2d,"Add an integration test for null-only columns (#12365)

* integration test for null-only-columns

* metadata query

* fix test",2022-03-28T23:40:45Z
9ed7aa33ecaf9e9eab09a7a5f769afcd58209d6a,"Docs for request logging (#12363)

* add docs for request logging

* remove stray character

* Update docs/operations/request-logging.md

Co-authored-by: TSFenwick <tsfenwick@gmail.com>

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: TSFenwick <tsfenwick@gmail.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2022-03-28T21:09:41Z
f2495a67d206534b6ee79b083ce49b3131165192,fix messageGap metric (#12337),2022-03-28T16:21:06Z
9c6b9abcdef1b0e995142f9819345ea270f79f67,"Use javaOptsArray provided in task context (#12326)

The `javaOpts` property is being read from task context but not `javaOptsArray`.
Changes:
- Read `javaOptsArray` from task context in `ForkingTaskRunner`.
- Add test to verify that `javaOptsArray` in task context takes precedence over `javaOpts`",2022-03-28T11:03:40Z
ee44fe45c66c10af0746bf053faed2a61df6168b,"Bump java-dogstatsd-client from 2.13.0 to 4.0.0 (#12353)

* Bump java-dogstatsd-client from 2.13.0 to 4.0.0
Bumps [java-dogstatsd-client](https://github.com/DataDog/java-dogstatsd-client) from 2.13.0 to 4.0.0.
- [Release notes](https://github.com/DataDog/java-dogstatsd-client/releases)
- [Changelog](https://github.com/DataDog/java-dogstatsd-client/blob/master/CHANGELOG.md)
- [Commits](https://github.com/DataDog/java-dogstatsd-client/compare/v2.13.0...v4.0.0)

* migrate statsd-emitter tests from easymock to mockito
* add simple init test to make diff coverage happy

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2022-03-26T23:25:13Z
ea51d8a16c77dbb4074f5f665bbefb1cdc9e3406,"Duties in Indexing group (such as Auto Compaction) does not report metrics (#12352)

* add impl

* add unit tests

* fix checkstyle

* address comments

* fix checkstyle",2022-03-24T01:18:28Z
b6eeef31e586c62853c69ade67848d31f0af18cd,"Store null columns in the segments (#12279)

* Store null columns in the segments

* fix test

* remove NullNumericColumn and unused dependency

* fix compile failure

* use guava instead of apache commons

* split new tests

* unused imports

* address comments",2022-03-23T23:54:04Z
d7308e929076b2170ba34fd1b731aa0309e09e90,"Added support in urls, and grouped metrics (#12296)",2022-03-22T18:22:05Z
0867ca75e12f20934c92a8a3ed02bad3e740684f,"Fix OOM failures in dimension distribution phase of parallel indexing (#12331)

Parallel indexing with range partitioning can often cause OOM in the
`ParallelIndexSupervisorTask` during the dimension distribution phase.
This typically happens because of too many `StringSketch` objects
obtained from the different `partial_dimension_distribution` sub-tasks.

We need not keep any of the sketches in memory until we need to compute
the PartitionBoundaries for the respective interval.

Changes
- Extract `StringDistribution` from `DimensionDistributionReport`s when they are received
  and write to disk inside the task/temp/distributions
- After all the subtasks have finished, iterate over all the intervals one by one
- For each interval, read the distributions from disk, merge them and create `PartitionBoundaries`.
- Cleanup task/temp/distributions directory when all `PartitionBoundaries` have been determined",2022-03-22T13:58:15Z
ef45a1551e96dc1a0528bfdba2b29e97fe1d1a42,"Convert inQueryThreshold into query context parameter. (#12357)

Added Calcites InQueryThreshold as a query context parameter. Setting this parameter appropriately reduces the time taken for queries with large number of values in their IN conditions.",2022-03-22T13:03:57Z
1f0447e613906425d863b8d7a2152cc41fedbf0e,"fix use of deprecated initMocks method (#12351)

follow-up to #12341
- fix use of deprecated initMocks methods and properly close mocks on teardown",2022-03-19T17:19:02Z
c3377bf744d875011cde602337c5c77600144044,"upgrade maven-pmd-plugin to fix warning (#12349)

we sometimes see warnings similar to the one mentioned
https://issues.apache.org/jira/browse/MPMD-325

Upgrading the plugin should hopefully reduce occurrence of those.",2022-03-19T17:18:26Z
4ed1abca94b3e99c6fbddff89a93a80bfaa95fc2,"Bump slf4j.version from 1.7.12 to 1.7.36 (#11594)

Bump slf4j.version from 1.7.12 to 1.7.36

- [Release notes](Release notes: https://www.slf4j.org/news.html)

Updates `jcl-over-slf4j` from 1.7.12 to 1.7.36
- [Commits](https://github.com/qos-ch/slf4j/compare/v_1.7.12...v_1.7.36)

Updates `slf4j-simple` from 1.7.12 to 1.7.36
- [Commits](https://github.com/qos-ch/slf4j/compare/v_1.7.12...v_1.7.36)

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Suneet Saldanha <suneet@apache.org>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2022-03-18T20:45:44Z
dbb9518f50d87f2a0512e8262ebc85a9f9f0e575,"Fix auto compaction by adjusting compaction task's interval to align with segmentGranularity when segmentGranularity is set (#12334)

* add impl

* add ITs

* address comments

* address comments

* address comments

* fix failure

* fix checkstyle

* fix checkstyle",2022-03-18T19:46:16Z
6f0e5f25fa5dbeda28102efbc1f61dec1469e7bb,"update surefire plugin to 3.0.0-M4 (#12342)

stay on surefire 3.0.0-M4 until we can upgrade to 3.0.0-M6
with a fix for https://issues.apache.org/jira/browse/SUREFIRE-1815
causing issues in RetryUtilsTest.",2022-03-18T15:20:28Z
c33fa116690b164454766dca69bfed2ab70e9645,"improve test compatibility with Java 17 and remove deprecated methods (#12341)

* remove use of reflection in EnvironmentVariableDynamicConfigProvider for Java 17 compatibility
* fix mocks mock objects not getting closed properly, causing issues with Java 17
* remove use of deprecated methods and rules in tests",2022-03-18T15:19:28Z
8f3a631cbf1d4ab94759070bda6cc5b09390c3d6,"Fix missing conversionFactor in prometheus emitter (#12338)

query/node/ttfb metrics are in milliseconds.",2022-03-18T04:46:06Z
192e41124995861b5ee75e2243449918ee430c9b,"fix build due to com.nimbusds:lang-tag update (#12348)

the version of com.nimbusds:oauth2-oidc-sdk we depend on does not
specific an exact version dependency for com.nimbusds:lang-tag, and
instead uses a version range (see
    https://search.maven.org/artifact/com.nimbusds/oauth2-oidc-sdk/6.5/jar)

Recently a new version of lang-tag was released requiring us to update
the license file accordingly.",2022-03-18T00:44:08Z
a5dfb911de2df2d056dacc710ff955738e8683e5,"Bump maven-site-plugin from 3.1 to 3.11.0 (#12310)

Bumps [maven-site-plugin](https://github.com/apache/maven-site-plugin) from 3.1 to 3.11.0.
- [Release notes](https://github.com/apache/maven-site-plugin/releases)
- [Commits](https://github.com/apache/maven-site-plugin/compare/maven-site-plugin-3.1...maven-site-plugin-3.11.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-site-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2022-03-17T07:17:29Z
5e23674fe53339308ba1caaca48a80e7c9680da7,"Fix a race condition in the '/tasks' Overlord API (#12330)

* finds complete and active tasks from the same snapshot

* overlord resource

* unit test

* integration test

* javadoc and cleanup

* more cleanup

* fix test and add more",2022-03-17T01:47:45Z
d745d0b3384f4649a07195ee317a6a086f91329f,Add JDK 11 (#12333),2022-03-16T22:03:04Z
69f928f50e849b7c97e7cd1958d9c2505acf070f,"Adding k8s support for human readable parsing (#12316)

* Adding k8s support for human readable parsing

* Update docs/configuration/human-readable-byte.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/configuration/human-readable-byte.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update core/src/main/java/org/apache/druid/java/util/common/HumanReadableBytes.java

Co-authored-by: Frank Chen <frankchen@apache.org>

* Changes per review

Co-authored-by: Rahul Gidwani <r_gidwani@apple.com>
Co-authored-by: Frank Chen <frankchen@apache.org>",2022-03-16T03:18:47Z
5d02a91faa58aaaf8a89deec4ea985b01f9bca21,"upgrade Error Prone to 2.11 (requires Java 11) (#12306)

The latest version of Error Prone now requires Java 11. Upgrading means we can
remove a lot of the maven profile complexity required to run checks with Java 8.
This also requires switching our strict build to use Java 11.

* update error-prone to 2.11
* remove need for specific maven profiles for Java 8 and Java 15
* fix additional Error Prone warnings with Java 11
* update strict build to use Java 11",2022-03-15T02:40:48Z
b5195c5095a1088cb06ed602704fce110232f109,"Graceful null handling and correctness in DoubleMean Aggregator (#12320)

* Adding null handling for double mean aggregator

* Updating code to handle nulls in DoubleMean aggregator

* oops last one should have checkstyle issues. fixed

* Updating some code and test cases

* Checking on object is null in case of numeric aggregator

* Adding one more test to improve coverage

* Changing one test as asked in the review

* Changing one test as asked in the review for nulls",2022-03-14T23:52:47Z
3de12729269e8446b994881bd507bc0d1422e98e,bug fix: merge results of group by limit push down (#11969),2022-03-11T17:04:34Z
db91961af70c61ebe1cbe7c42c12309e85c477fb,"kubernetes: restart watch on null response (#12233)

* kubernetes: restart watch on null response

Kubernetes watches allow a client to efficiently processes changes to
resources. However, they have some idiosyncrasies. In particular, they
can error out for various reasons leading to what would normally be seen
as an invalid result.

The Druid kubernetes node discovery subsystem does not handle a certain
case properly. The watch can return an item with a null object.  These
leads to a null pointer exception. When this happens, the provider needs
to restart the watch, because rerunning the watch from the same resource
version leads to the same result: yet another null pointer exception.

This commit changes the provider to handle null objects by restarting
the watch.

* review: add more coverage

This adds a bit more coverage to the K8sDruidNodeDiscoveryProvider watch
loop, and removes an unnecessay return.

* kubernetes: reduce logging verbosity

The log messages about items being NULL don't really deserve to be at a
level other than DEBUG since they are not actionable, particularly since
we automatically recover now. Move them to the DEBUG level.",2022-03-10T20:56:40Z
cb2b2b696d9ff391d4814552918ea6c5e94a6fc6,"Fix error message for groupByEnableMultiValueUnnesting. (#12325)

* Fix error message for groupByEnableMultiValueUnnesting.

It referred to the incorrect context parameter.

Also, create a dedicated exception class, to allow easier detection of this
specific error.

* Fix other test.

* More better error messages.

* Test getDimensionName method.",2022-03-10T19:37:24Z
2efb74ff1e4a9921e236a21475978822be57fe11,fix supervisor auto scaler config serde bug (#12317),2022-03-10T00:17:12Z
d89d4ff58894a69eda1e584628acec8eafe93168,"Git hooks should fail on errors; pass args to git hooks (#12322)

* Git hooks should fail on errors

* don't set shell to pass args",2022-03-10T00:07:50Z
6346b9561df7a92557acb51a56585084a0eb8633,"Reuse the InputEntityReader in SettableByteEntityReader (#12269)

* Reuse the InputEntityReader in SettableByteEntityReader

* Fix logic

* Fix kafka streaming ingestion

* Add Tests for kafka input format change

* Address review comments",2022-03-09T22:38:31Z
9cfb23935ffc3eace79b526dd84d912d129a9b1c,"push value range and set index get operations into BitmapIndex (#12315)

* push value range and set index get operations into BitmapIndex

* fix bug

* oops, fix better

* better like, fix test, javadocs

* fix checkstyle

* simplify and fixes

* cache

* fix tests

* move indexOf into GenericIndexed

* oops

* fix tests",2022-03-09T21:30:58Z
9f6a930462c77a96beb793b5809d878534998742,Fix join query incase of filter explosion during CNF conversion (#12324),2022-03-09T20:43:09Z
dc0372a28e3b22d7e35047ab60925fa1734d7d16,"improve FileWriteOutBytes.readFully (#12323)

* improve FileWriteOutBytes.readFully

* no need to flush if out of bounds",2022-03-09T19:45:45Z
7bf1d8c5c0adda27b94000f29113ad8915a23a4a,"Facilitate lazy initialization of connections to mitigate overwhelming of Coordinator (#12298)

Add config for eager / lazy connection initialization in ResourcePool

Description
Currently, when multiple tasks are launched, each of them eagerly initializes a full pool's worth of connections to the coordinator.

While this is acceptable when the parameter for number of eagerConnections (== maxSize) is small, this can be problematic in environments where it's a large value (say 1000) and multiple tasks are launched simultaneously, which can cause a large number of connections to be created to the coordinator, thereby overwhelming it.

Patch
Nodes like the broker may require eager initialization of resources and do not create connections with the Coordinator.
It is unnecessary to do this with other types of nodes.

A config parameter eagerInitialization is added, which when set to true, initializes the max permissible connections when ResourcePool is initialized.

If set to false, lazy initialization of connection resources takes place.

NOTE: All nodes except the broker have this new parameter set to false in the quickstart as part of this PR

Algorithm
The current implementation relies on the creation of maxSize resources eagerly.

The new implementation's behaviour is as follows:

If a resource has been previously created and is available, lend it.
Else if the number of created resources is less than the allowed parameter, create and lend it.
Else, wait for one of the lent resources to be returned.",2022-03-09T17:47:43Z
56fbd2af6f9878c0f90303cf28e110d8226672b0,"Guard against exponential increase of filters during CNF conversion (#12314)

Currently, the CNF conversion of a filter is unbounded, which means that it can create as many filters as possible thereby also leading to OOMs in historical heap. We should throw an error or disable CNF conversion if the filter count starts getting out of hand. There are ways to do CNF conversion with linear increase in filters as well but that has been left out of the scope of this change since those algorithms add new variables in the predicate - which can be contentious.",2022-03-09T07:49:52Z
0600772cceec633a7754a68d6b4ff5ed21af8795,"use a non-concurrent map for lookups-cached-global unless incremental updates are actually required (#12293)

* use a non-concurrent map for lookups-cached-global unless incremental updates are actually required
* adjustments
* fix test",2022-03-09T05:54:25Z
abe76ccb90b8d620b49564c025c59341a8d271bd,"Batch ingestion replace (#12137)

* Tombstone support for replace functionality

* A used segment interval is the interval of a current used segment that overlaps any of the input intervals for the spec

* Update compaction test to match replace behavior

* Adapt ITAutoCompactionTest to work with tombstones rather than dropping segments. Add support for tombstones in the broker.

* Style plus simple queriableindex test

* Add segment cache loader tombstone test

* Add more tests

* Add a method to the LogicalSegment to test whether it has any data

* Test filter with some empty logical segments

* Refactor more compaction/dropexisting tests

* Code coverage

* Support for all empty segments

* Skip tombstones when looking-up broker's timeline. Discard changes made to tool chest to avoid empty segments since they will no longer have empty segments after lookup because we are skipping over them.

* Fix null ptr when segment does not have a queriable index

* Add support for empty replace interval (all input data has been filtered out)

* Fixed coverage & style

* Find tombstone versions from lock versions

* Test failures & style

* Interner was making this fail since the two segments were consider equal due to their id's being equal

* Cleanup tombstone version code

* Force timeChunkLock whenever replace (i.e. dropExisting=true) is being used

* Reject replace spec when input intervals are empty

* Documentation

* Style and unit test

* Restore test code deleted by mistake

* Allocate forces TIME_CHUNK locking and uses lock versions. TombstoneShardSpec added.

* Unused imports. Dead code. Test coverage.

* Coverage.

* Prevent killer from throwing an exception for tombstones. This is the killer used in the peon for killing segments.

* Fix OmniKiller + more test coverage.

* Tombstones are now marked using a shard spec

* Drop a segment factory.json in the segment cache for tombstones

* Style

* Style + coverage

* style

* Add TombstoneLoadSpec.class to mapper in test

* Update core/src/main/java/org/apache/druid/segment/loading/TombstoneLoadSpec.java

Typo

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>

* Update docs/configuration/index.md

Missing

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>

* Typo

* Integrated replace with an existing test since the replace part was redundant and more importantly, the test file was very close or exceeding the 10 min default ""no output"" CI Travis threshold.

* Range does not work with multi-dim

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>",2022-03-09T03:07:02Z
dae53ae36a357919698cb8bb3e90934ee64b9fcf,"adjust topn heap operation when string is dictionary encoded, but not uniquely (#12291)

* add topn heap optimization when string is dictionary encoded, but not uniquely

* use array instead

* is same

* fix javadoc

* fix

* Update StringTopNColumnAggregatesProcessor.java",2022-03-08T22:32:40Z
0e097ead36a1aa044def1e85ed2ccf52eb5a25d4,"Add git hooks that can run multiple scripts (#12300)

* Add git hooks that can run multiple scripts

* scripts to install/uninstall hooks

* better message for uninstall; support pre-push params",2022-03-08T22:16:47Z
875e0696e01c4348fa31c77ec6fa333a324a53d8,"GroupBy: Cap dictionary-building selector memory usage. (#12309)

* GroupBy: Cap dictionary-building selector memory usage.

New context parameter ""maxSelectorDictionarySize"" controls when the
per-segment processing code should return early and trigger a trip
to the merge buffer.

Includes:

- Vectorized and nonvectorized implementations.
- Adjustments to GroupByQueryRunnerTest to exercise this code in
  the v2SmallDictionary suite. (Both the selector dictionary and
  the merging dictionary will be small in that suite.)
- Tests for the new config parameter.

* Fix issues from tests.

* Add ""pre-existing"" to dictionary.

* Simplify GroupByColumnSelectorStrategy interface by removing one of the writeToKeyBuffer methods.

* Adjustments from review comments.",2022-03-08T21:13:11Z
baea3ec61406ce86d187330e264a819d7e9e0bb2,"Break up parallel indexing unit test to reduce test times (#12313)

* Break up parallel indexing unit test to reduce test times

* Fix checkstyle",2022-03-07T23:26:24Z
28f8bcce9b304fd123126073619ffd5f60f59f20,"Always reopen stream in FileUtils.copyLarge, RetryingInputStream. (#12307)

* Always reopen stream in FileUtils.copyLarge, RetryingInputStream.

When an InputStream throws an exception from one of its read methods,
we should assume it's bad and reopen it.

The main changes here are:

- In FileUtils.copyLarge, replace InputStream with InputStreamSupplier.
- In RetryingInputStream, collapse retryCondition and resetCondition
  into a single condition. Also, make it required, since every usage
  is passing in a specific condition anyway.

* Test fixes.

* Fix read impl.",2022-03-05T22:39:14Z
903174de2045449e12f94d00bdca09ecaf780e64,correct errors on compaction doc (#12308),2022-03-04T23:33:35Z
3b373114dcc29e377e5926d1fcea0a580fe45b87,"Officially support Java 11. (#12232)

There aren't any changes in this patch that improve Java 11
compatibility; these changes have already been done separately. This
patch merely updates documentation and explicit Java version checks.

The log message adjustments in DruidProcessingConfig are there to make
things a little nicer when running in Java 11, where we can't measure
direct memory _directly_, and so we may auto-size processing buffers
incorrectly.",2022-03-04T22:15:45Z
ada3ae08dfc432f34e4ef1ec87f9800c91ba2c54,Retain order in TaskReport. (#12005),2022-03-04T16:06:20Z
61e1ffc7f782ab5d83b4cbb2fcca45c34b8c6bb2,"add a new query laning metrics to visualize lane assignment (#12111)

* add a new query laning metrics to visualize lane assignment

* fixes :spotbugs check

* Update docs/operations/metrics.md

Co-authored-by: Benedict Jin <asdf2014@apache.org>

* Update server/src/main/java/org/apache/druid/server/QueryScheduler.java

Co-authored-by: Benedict Jin <asdf2014@apache.org>

* Update server/src/main/java/org/apache/druid/server/QueryScheduler.java

Co-authored-by: Benedict Jin <asdf2014@apache.org>

Co-authored-by: Benedict Jin <asdf2014@apache.org>",2022-03-04T07:21:17Z
36bc41855d4d368ab6fbe0d5019bb27ba9c48440,Set Content-Type for String based response (#12295),2022-03-04T07:17:03Z
58d05d70144867b07af9617e163e1210f74b7c63,Fix ci (#12304),2022-03-04T07:05:50Z
a1cdee2a3a3367d7187e60bd626d3edd2e9e3e50,"Bump jersey.version from 1.19.3 to 1.19.4 (#12290)

* Bump jersey.version from 1.19.3 to 1.19.4

Bumps `jersey.version` from 1.19.3 to 1.19.4.

Updates `jersey-client` from 1.19.3 to 1.19.4

Updates `jersey-core` from 1.19.3 to 1.19.4

Updates `jersey-grizzly2` from 1.19.3 to 1.19.4

Updates `jersey-guice` from 1.19.3 to 1.19.4

Updates `jersey-server` from 1.19.3 to 1.19.4

Updates `jersey-servlet` from 1.19.3 to 1.19.4

Updates `jersey-json` from 1.19.3 to 1.19.4

Updates `jersey-test-framework-core` from 1.19.3 to 1.19.4

Updates `jersey-test-framework-grizzly2` from 1.19.3 to 1.19.4

---
updated-dependencies:
- dependency-name: com.sun.jersey:jersey-client
  dependency-type: direct:development
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey:jersey-core
  dependency-type: direct:development
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey:jersey-grizzly2
  dependency-type: direct:development
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey.contribs:jersey-guice
  dependency-type: direct:production
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey:jersey-server
  dependency-type: direct:production
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey:jersey-servlet
  dependency-type: direct:production
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey:jersey-json
  dependency-type: direct:production
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey.jersey-test-framework:jersey-test-framework-core
  dependency-type: direct:development
  update-type: version-update:semver-patch
- dependency-name: com.sun.jersey.jersey-test-framework:jersey-test-framework-grizzly2
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update licenses.yaml

* Update licenses.yaml

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Clint Wylie <cwylie@apache.org>",2022-03-04T01:57:20Z
1c004ea47e3eeacc7d7379b34a825019b6709948,"use virtual columns for sql simple aggregators instead of inline expressions (#12251)

* use virtual columns for sql simple aggregators instead of inline expressions

* fixes

* always use virtual columns

* add more tests",2022-03-03T23:05:28Z
36193955b6d8a03fe247157dddebea0365c7e501,perf: eliminate expensive log construction in remote-task-runner shutdown (#12097),2022-03-03T21:38:21Z
f594e7ac243f21acd0b9cb5dd795b6088cad6b27,"perf: improve RemoteTaskRunner task assignment loop performance (#12096)

* perf: improve ZkWorker task lookup performance

This improves the performance of the ZkWorker task lookup loop by
eliminating repeat calls to getRunningTasks() in toImmutable(),
and reduces the work performed in isRunningTask() to stream-parse
the id field instead of entire JSON blob.",2022-03-02T17:38:32Z
1af4c9c933cd62804d106c9a2974dc0b3cf75780,"Display row stats for multiphase parallel indexing tasks (#12280)

Row stats are reported for single phase tasks in the `/liveReports` and `/rowStats` APIs
and are also a part of the overall task report. This commit adds changes to report
row stats for multiphase tasks too.

Changes:
- Add `TaskReport` in `GeneratedPartitionsReport` generated during hash and range partitioning
- Collect the reports for `index_generate` phase in `ParallelIndexSupervisorTask`",2022-03-02T04:40:31Z
50038d9344fb745bfe47c81a59bdc29ae3dcff1d,"latest datasketches-java-3.1.0 (#12224)

These changes are to use the latest datasketches-java-3.1.0 and also to restore support for quantile and HLL4 sketches to be able to grow larger than a given buffer in a buffer aggregator and move to heap in rare cases. This was discussed in #11544.

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2022-03-02T01:14:42Z
3f709db173d779db1466e57a1564a5f557b4b0cf,"Make ParseExceptions more informative (#12259)

This PR aims to make the ParseExceptions in Druid more informative, by adding additional information (metadata) to the ParseException, which can contain additional information about the exception. For example - the path of the file generating the issue, the line number (where it can be easily fetched - like CsvReader)

Following changes are addressed in this PR:

A new class CloseableIteratorWithMetadata has been created which is like CloseableIterator but also has a metadata method that returns a context Map<String, Object> about the current element returned by next().
IntermediateRowParsingReader#read() now attaches the InputEntity and the ""record number"" which created the exception (while parsing them), and IntermediateRowParsingReader#sample attaches the InputEntity (but not the ""record number"").
TextReader (and its subclasses), which is a specific implementation of the IntermediateRowParsingReader also include the line number which caused the generation of the error.
This will also help in triaging the issues when InputSourceReader generates ParseException because it can point to the specific InputEntity which caused the exception (while trying to read it).",2022-02-28T17:01:15Z
d105519558951aa289992d05043194b8b7ceaee4,"Replace use of PowerMock with Mockito (#12282)

Mockito now supports all our needs and plays much better with recent Java versions.
Migrating to Mockito also simplifies running the kind of tests that required PowerMock in the past. 

* replace all uses of powermock with mockito-inline
* upgrade mockito to 4.3.1 and fix use of deprecated methods
* import mockito bom to align all our mockito dependencies
* add powermock to forbidden-apis to avoid accidentally reintroducing it in the future",2022-02-28T06:47:09Z
1434197ee179955987462c5c7f4030ca0bc43edb,"update airline dependency to 2.x (#12270)

* upgrade Airline to Airline 2
  https://github.com/airlift/airline is no longer maintained, updating to
  https://github.com/rvesse/airline (Airline 2) to use an actively
  maintained version, while minimizing breaking changes.

  Note, this is a backwards incompatible change, and extensions relying on
  the CliCommandCreator extension point will also need to be updated.

* fix dependency checks where jakarta.inject is now resolved first instead
  of javax.inject, due to Airline 2 using jakarta",2022-02-27T23:19:28Z
4c61878f9c16ca3ec9b55814dd974d71ef00fead,"Reduce use of mocking and simplify some tests (#12283)

* remove use of mocks for ServiceMetricEvent
* simplify KafkaEmitterTests by moving to Mockito
* speed up KafkaEmitterTest by adjusting reporting frequency in tests
* remove unnecessary easymock and JUnitParams dependencies",2022-02-27T01:23:09Z
a080fcdd7bec7010039d5e83c16215621301d18d,Fixing hadoop 3 Dockerfile (#12284),2022-02-26T13:48:29Z
e5ad862665d0b5ad400dbc66cec18e217810bb4a,"A new includeAllDimension flag for dimensionsSpec (#12276)

* includeAllDimensions in dimensionsSpec

* doc

* address comments

* unused import and doc spelling",2022-02-26T02:27:48Z
eb1b53b7f8966f20c5e4973fbbae443a10b1e494,"perf: indexing: Introduce a bulk getValuesInto function to read values (#12105)

* perf: indexing: Introduce a bulk getValuesInto function to read values in bulk

If large number of values are required from DimensionDictionary
during indexing, fetch them all in a single lock/unlock instead of
lock/unlock each individual item.

* refactor: rename key to keys in function args

* fix: check explicitly that argument length on arrays match

* refactor: getValuesInto renamed to getValues, now creates and returns a new T[] rather than filling",2022-02-25T20:19:04Z
b86f2d4c2e935346d600e51b22403150ebd1501d,Performance fixes in proto readers (#12267),2022-02-24T17:51:48Z
009dd9e09a574a44b095e29c27626a70b1e6baad,"upgrade core Apache Kafka dependencies to 3.1.0 (#12203)

Announcement: https://blogs.apache.org/kafka/entry/what-s-new-in-apache7
Release notes: https://dist.apache.org/repos/dist/release/kafka/3.1.0/RELEASE_NOTES.html

* upgrade core Apache Kafka dependencies to 3.1.0
* fix use of private Kafka APIs
* remove deprecated test rules
* remove mock calls that weren't verified in the first place
* remove the need for powermock in KafkaLookupExtractorFactoryTest
* align curator-test version with curator itself
* update easymock to 4.3.0",2022-02-24T02:42:51Z
b1640a72ee1090bd3c90240bf47a5bfd5b690f5a,Re-enable segment metadata cache when using external schema (#12264),2022-02-23T01:50:29Z
b94390ba33fe4e1cb5588f166edeb94d76b2edcf,"Adding Shared Access resource support for azure (#12266)

Azure Blob storage has multiple modes of authentication. One of them is Shared access resource
. This is very useful in cases when we do not want to add the account key in the druid properties .",2022-02-22T12:57:43Z
6e2eded277bec907466ce0b7823ce70fae6e388e,"Allow coordinator run auto compaction duty period to be configured separately from other indexing duties (#12263)

* add impl

* add impl

* add unit tests

* add impl

* add impl

* add serde test

* add tests

* add docs

* fix test

* fix test

* fix docs

* fix docs

* fix spelling",2022-02-19T07:02:57Z
1ec57cb935bd0b04d3123dfbb26a962a984422c7,"Improve kinesis task assignment after resharding (#12235)

Problem:
- When a kinesis stream is resharded, the original shards are closed.
   Any intermediate shard created in the process is eventually closed as well.
- If a shard is closed before any record is put into it, it can be safely ignored for ingestion.
- It is expensive to determine if a closed shard is empty, since it requires a call to the Kinesis cluster.

Changes:
- Maintain a cache of closed empty and closed non-empty shards in `KinesisSupervisor`
- Add config `skipIngorableShards` to `KinesisSupervisorTuningConfig`
- The caches are used and updated only when `skipIgnorableShards = true`",2022-02-18T07:07:06Z
70c40c4281d28d17b25ee19691cbfdf11a951bb2,"Fix long overflow in SegmentCostCache.Bucket.toLocalInterval (#12257)

Problem:
When using a `CachingCostBalancerStrategy` with segments of granularity ALL,
no segment gets loaded.
- With granularity ALL, segments of eternity interval are created which have 
  `start = Long.MIN_VALUE / 2` and `end = Long.MAX_VALUE / 2`.
- For cost calculation in the balancer strategy, `toLocalInterval()` method is invoked where
  `Long.MIN_VALUE / 2` or `Long.MAX_VALUE / 2` cause an overflow thus resulting in no overlap.
- The strategy is unable to find any eligible server for loading a given segment.

Fix:
- Reverse order of operations to divide by `MILLIS_FACTOR` (~10^8) first,
   then do the subtraction to prevent Long overflow.",2022-02-17T09:43:51Z
575874705f8138e002ec9ade3400f93e4d59fcfb,"Fix the flakiness in getLockedIntervals test (#12172)

Fix the flakiness in getLockedIntervals test",2022-02-17T06:38:46Z
5794331eb132b16ed6bffe34c38be12a9cf4bcec,"Adding new config for disabling group by on multiValue column (#12253)

As part of #12078 one of the followup's was to have a specific config which does not allow accidental unnesting of multi value columns if such columns become part of the grouping key.
Added a config groupByEnableMultiValueUnnesting which can be set in the query context.

The default value of groupByEnableMultiValueUnnesting is true, therefore it does not change the current engine behavior.
If groupByEnableMultiValueUnnesting is set to false, the query will fail if it encounters a multi-value column in the grouping key.",2022-02-16T15:23:26Z
8fc0e5c95c79c5ef0e8050534b3689cc405e7c9b,"Explain plan for custom insert syntax (#12243)

* Initial commit, explain plan for custom insert syntax working

* Cleanup separate SqlInsert handling",2022-02-16T05:48:34Z
eae163a7970c18003810ba495f77118a9133024b,"Moving in filter check to broker (#12195)

* Moving in filter check to broker

* Adding more unit tests, making error message meaningful

* Spelling and doc changes

* Updating default to -1 and making this feature hide by default. The number of IN filters can grow upto a max limit of 100

* Removing upper limit of 100, updated docs

* Making documentation more meaningful

* Moving check outside to PlannerConfig, updating test cases and adding back max limit

* Updated with some additional code comments

* Missed removing one line during the checkin

* Addressing doc changes and one forbidden API correction

* Final doc change

* Adding a speling exception, correcting a testcase

* Reading entire filter tree to address combinations of ANDs and ORs

* Specifying in docs that, this case works only for ORs

* Revert ""Reading entire filter tree to address combinations of ANDs and ORs""

This reverts commit 81ca8f8496777eec41907899957b39ca99ccbada.

* Covering a class cast exception and updating docs

* Counting changed

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2022-02-16T04:45:07Z
26bc4b734597480bf1185559baf7644086f24d52,"perf: cache row if it is a transformed row (#12113)

* perf: cache row if it is a transformed row

* perf: cache row if it is a transformed row (also cache DateTime object)",2022-02-15T18:08:41Z
34bc3619536c0e1b7487bd48a6ab1c53e353cf41,Update ORC to 1.7.2 (#12084),2022-02-15T18:04:12Z
393e9b68a8875e07942528720a533bc26580abb8,"Add config to limit task slots for parallel indexing tasks (#12221)

In extreme cases where many parallel indexing jobs are submitted together, it is possible
that the `ParallelIndexSupervisorTasks` take up all slots leaving no slot to schedule
their own sub-tasks thus stalling progress of all the indexing jobs.

Key changes:
- Add config `druid.indexer.runner.parallelIndexTaskSlotRatio` to limit the task slots
  for `ParallelIndexSupervisorTasks` per worker
- `ratio = 1` implies supervisor tasks can use all slots on a worker if needed (default behavior)
- `ratio = 0` implies supervisor tasks can not use any slot on a worker
   (actually, at least 1 slot is always available to ensure progress of parallel indexing jobs)
- `ImmutableWorkerInfo.canRunTask()`
- `WorkerHolder`, `ZkWorker`, `WorkerSelectUtils`",2022-02-15T17:45:09Z
47153cd7bd600135289062c009f6405a4c83f640,"Increase retries for Kinesis sharding integration tests. (#12255)

This fixes intermittent, spurious failures that we've observed in
the Kinesis sharding integration tests due to Kinesis taking
longer than the code expected to start a sharding operation. The
method that's changed is part of the integration test suite and
only used by the test cases that we've seen are flaky.

Prior to this change, the tests expected a sharding operation to
start in 9 seconds (30 retries * 300ms delay/retry). This change
bumps the number of retries to 100, giving Kinesis 30 seconds to
start the sharding.

This PR also makes a small, clarifying change to the condition
used to determine if sharding has started. Instead of checking if
the number of shards has increased (which was technically correct
even if the test is reducing the number of shards due to a Kinesis
implementation detail), we now just check if the shard count has
changed.",2022-02-15T07:33:13Z
033989eb1d8f4f91268b2d7d4d3dc73af7bf2c3f,"Adding vectorized time_shift (#12254)

* Adding vectorized time_shift

* Vectorize time shift, addressing review comments

* Remove an unused import",2022-02-11T22:44:52Z
c61b19d443bdffd9bd36409d245efa5df064846b,"Refactor SQL docs (#12239)

* refactor and link fixes

* add sql docs to left nav

* code format for needle

* updated web console script

* link fixes

* update earliest/latest functions

* edits for grammar and style

* more link fixes

* another link

* update with #12226

* update .spelling file",2022-02-11T22:43:30Z
5bd646e10a120a675bf70911b832d1eb1f51ae75,"Surface a user friendly error when PARTITIONED BY is omitted (#12246)

#12163 makes PARTITIONED BY a required clause in INSERT queries. While this is required, if a user accidentally omits the clause, it emits a JavaCC/Calcite error, since it's syntactically incorrect. The error message is cryptic. Since it's a custom clause, this PR aims to make the clause optional on the syntactic side, but move the validation to DruidSqlInsert where we can surface a friendlier error.",2022-02-11T06:19:00Z
95b388d2d1d3d211cf142667a607a9f16241fde1,"Assign partitionIds in the same order as bucketIds (#12236)

When `ParallelIndexSupervisorTask` converts `BucketNumberedShardSpecs`
to corresponding `BuildingShardSpecs`, the bucketId order gets lost.
Particularly, for range partitioning, this results in the partitionIds not being in the same order
as increasing partition boundaries.

Changes
- Refactor `ParallelIndexSupervisorTask.groupGenericPartitionLocationsPerPartition()`",2022-02-10T05:38:39Z
3ee66bb492381ea1721c3355a7a5fc404a93d852,"allow optimizing sql expressions and virtual columns (#12241)

* rework sql planner expression and virtual column handling

* simplify a bit

* add back and deprecate old methods, more tests, fix multi-value string coercion bug and associated tests

* spotbugs

* fix bugs with multi-value string array expression handling

* javadocs and adjust test

* better

* fix tests",2022-02-09T22:55:50Z
33bc9226f08d3fd013a557c85d80fb629956f2ab,Move task creation under stateChangeLock in SeekableStreamSupervisor (#12178),2022-02-09T19:24:46Z
0d237138626b58879974fdbb735ba19cb92ddf2f,"Web console: update dev dependencies (#12240)

* Update dependencies

* Set ""allowFunctions: true"" for react/jsx-no-bind

* Prettify

* npm audit fix

* Bump playwright, set testEnvironment=node

* Bump node and npm

* Revert ""Bump node and npm""

This reverts commit e93c8e00e75587524539310772f09bd3b37774ed.

* Minor/patch bump node@14, npm@6",2022-02-09T00:37:36Z
ab3d994a1769f2b87939e4b104ceeee0f67a8318,"Lazy instantiation for segmentKillers, segmentMovers, and segmentArchivers (#12207)

* working

* Lazily load segmentKillers, segmentMovers, and segmentArchivers

* more tests

* test-jar plugin

* more coverage

* lazy client

* clean up changes

* checkstyle

* i did not change the branch condition

* adjust failure rate to run tests faster

* javadocs

* checkstyle",2022-02-08T21:02:06Z
4add2510edaeef2cbbd565f1c20517f4a3d039b2,"Add syntax support for PARTITIONED BY/CLUSTERED BY in INSERT queries  (#12163)

This PR aims to add parser changes for supporting PARTITIONED BY and CLUSTERED BY as proposed in the issue #11929.",2022-02-08T10:53:15Z
ae71e05fc5d0cec8f7ae78df25ccf4a45cfecfda,"array_concat_agg and array_agg support for array inputs (#12226)

* array_concat_agg and array_agg support for array inputs
changes:
* added array_concat_agg to aggregate arrays into a single array
* added array_agg support for array inputs to make nested array
* added 'shouldAggregateNullInputs' and 'shouldCombineAggregateNullInputs' to fix a correctness issue with STRING_AGG and ARRAY_AGG when merging results, with dual purpose of being an optimization for aggregating

* fix test

* tie capabilities type to legacy mode flag about coercing arrays to strings

* oops

* better javadoc",2022-02-08T03:59:30Z
090c429c8cfd0667fb6f3526eb10e6b7b91be0a5,"Web console: make it possible to namespace local storage, auto flatten spec generator should deal better with bad data (#12238)

* improve computeFlattenExprsForData

* allow local storage namespacing

* add test",2022-02-08T02:52:41Z
ced1389d4cd64a23a196015d9890202d18147ea4,"Enable auto kill segments by default (#12187)

* Enable auto-kill by default

* tests

* wip

* test

* fix IT

* fix it

* remove from docs

* make coverage bot happy",2022-02-07T14:57:54Z
2b8e7fc0b4ab76af836594d3b14e9213fa64cff0,"Add a flag to allow auto compaction task slot ratio to consider auto scaler slots (#12228)

* add impl

* fix checkstyle

* add unit tests

* checkstyle

* add IT

* fix IT

* add comments

* fix checkstyle",2022-02-07T04:46:05Z
159f97dcb025dfa5c8aabe04a923e637331ae8d5,"Update docs for druid.processing.numThreads in brokers (#12231)

* Update docs for druid.processing.numThreads

* error msg

* one more reference",2022-02-05T01:34:21Z
de82c611de82f91f2f5e36fefc67b981d0408a4d,"Harmonize implementations of ""visit"" for Exprs from ExprMacros. (#12230)

* Harmonize implementations of ""visit"" for Exprs from ExprMacros.

Many of them had bugs where they would not visit all of the original
arguments. I don't think this has user-visible consequences right now,
but it's possible it would in a future world where ""visit"" is used
for more stuff than it is today.

So, this patch all updates all implementations to a more consistent
style that emphasizes reapplying the macro to the shuttled args.

* Test fixes, test coverage, PR review comments.",2022-02-04T16:08:54Z
290130b1faf5a474f731687deb92b9c8cc68bc6a,"Fix bug while adding `Range` header in HttpEntity (#12215)

Changes:
- Add `Range` header to the request before opening the connection
- Use header `Content-Range` instead of `Accept-Ranges` as `Content-Range` is guaranteed to be populated if the server is returning a partial response",2022-02-04T12:47:51Z
a3affe1471ec3e4c92e5c3305b55f5fa7e150850,"make EncodedKeyComponent constructor public, remove nullable from DimensionIndexer.processRowValsToUnsortedEncodedKeyComponent  (#12229)",2022-02-03T23:02:32Z
8fd587b28cc5ee3562362682555d7f843f4d4a68,"remove duplicate Broker ServerInventoryView, improve HttpServerInventoryView logging (#12209)

* changes:
* remove SystemSchema duplicate ServerInventoryView in broker
* suppress duplicate segment added/removed warnings in HttpServerInventoryView when doing a full sync

* fixes",2022-02-03T20:57:34Z
37176936330d4241947ea2de48f13441e6b2933e,"Fix java.lang.ClassCastException error when using useApproximateCountDistinct false for aggregation query (#12216)

* add imply

* add test

* add unit test

* add test",2022-02-03T20:01:13Z
fc76b014d15caf5662800706237eb336aef426e4,"Web console: fix supervisor stats table pagination (#12227)

* fixes #11627 supervisor stats table pagination

* use spread instead of assign",2022-02-03T08:09:21Z
e648b01afba52ee5b980d28b16b636e346a86819,"Improve memory estimates in Aggregator and DimensionIndexer (#12073)

Fixes #12022  

### Description
The current implementations of memory estimation in `OnHeapIncrementalIndex` and `StringDimensionIndexer` tend to over-estimate which leads to more persistence cycles than necessary.

This PR replaces the max estimation mechanism with getting the incremental memory used by the aggregator or indexer at each invocation of `aggregate` or `encode` respectively.

### Changes
- Add new flag `useMaxMemoryEstimates` in the task context. This overrides the same flag in DefaultTaskConfig i.e. `druid.indexer.task.default.context` map
- Add method `AggregatorFactory.factorizeWithSize()` that returns an `AggregatorAndSize` which contains
  the aggregator instance and the estimated initial size of the aggregator
- Add method `Aggregator.aggregateWithSize()` which returns the incremental memory used by this aggregation step
- Update the method `DimensionIndexer.processRowValsToKeyComponent()` to return the encoded key component as well as its effective size in bytes
- Update `OnHeapIncrementalIndex` to use the new estimations only if `useMaxMemoryEstimates = false`",2022-02-03T05:04:02Z
bc408bacc8d70d9769c30494fa84eda5b0e3f8aa,"Web console: Adding a shard detail column to the segments view (#12212)

* shard spec details

* improve pattern match

* refactor spec cleanup

* better format detection

* update JSONbig

* add multiline option to autoform",2022-02-03T02:46:17Z
801d9e7f1b3a4720718362194f651e11e1f6818d,"[Web Console] fix deprecated keyboard event method ""keyCode"" with ""key"" (#11947)

* 11946 fix keyboard event keyCode method

* fix with key and respective cases

* e.which method required since it's anyway deprecated too.

* updated as per feedback",2022-02-03T02:26:21Z
f47e1e0dcc0640feebbe4893a37b54c9a00148eb,"Reduce RemoteTaskRunnerTest flakiness (#12211)

* * add more logging to start / stop of RemoteTaskRunner

* * add more logging

* Increase timeout on RemoteTaskRunnerTest

* Apply suggestions from code review

Co-authored-by: Suneet Saldanha <suneet@apache.org>

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2022-02-01T23:35:18Z
f9b406c8f2c2bc84f54d2e8f5f2a2720f49eeba3,add backwards compatibility mode for multi-value string array null value coercion (#12210),2022-02-01T06:38:15Z
978b8f7ddee7fcad822975e93d053779f69591ef,"do not explode if mysql transient exception class does not exist (#12213)

Follow up to #12205 to allow druid-mysql-extensions to work with mysql connector/j 8.x again, which does not contain MySQLTransientException, and while would have had the same problem as mariadb if a transient exception was checked, the new check eagerly loads the class when starting up, causing immediate failure.",2022-02-01T03:36:24Z
c4fa3ccfc4a8df0da3968b817dbb057e4ada79fc,"Fix load-drop-load sequence for same segment and historical in http loadqueue peon (#11717)

Fixes an issue where a load-drop-load sequence for a segment and historical doesn't work correctly for http based load queue peon. The first cycle of load-drop works fine - the problem comes when there is an attempt to reload the segment. The historical caches load success for some recent segments and makes the reload as a no-op. But it doesn't consider that fact that the segment was also dropped in between the load requests.
This change invalidates the cache after a client tries to fetch a success result.",2022-01-31T07:46:58Z
fe8530dac40b77a05e76fc213064c84d2968d728,Change link to Apache Druid Slack (#12206),2022-01-28T05:10:40Z
eeed156dc006510a9e944e50a992ddc65b2b6836,Fix compile error in VirtualizedColumnSelectorFactoryTest (#12208),2022-01-28T01:35:50Z
99a5c2f3d393cc1e980340679879765c12c4ec6d,"Harmonize behavior when virtual columns reference each other. (#11955)

* VirtualizedColumnSelectorFactory: Allow virtual columns to reference each other.

This matches the behavior of QueryableIndex and IncrementalIndex based cursors.

* Fixes to getColumnCapabilities.",2022-01-27T22:31:48Z
5d2291991ea08c8b474364c084bdafc1e3b45f33,"use reflection to check for mysql transient exception type (#12205)

* use reflection to check for mysql transient exception type

* better

* oops",2022-01-27T21:13:16Z
24716bfedcfffe8dc79070e70c174e1543cb1b72,"Doc updates for metadata cleanup and storage (#12190)

* doc updates for metadata storage/cleanup

* Add comments for disabling cleanup

* Apply suggestions from code review

* updated for https://github.com/apache/druid/pull/12201

* Apply suggestions from code review

Co-authored-by: Maytas Monsereenusorn <maytasm@apache.org>

* move retention period line earlier; more concise text

* fix typo

Co-authored-by: Maytas Monsereenusorn <maytasm@apache.org>",2022-01-27T19:40:54Z
fac6a48a8ffe7018dd84e7a2b41e225bd47744d3,add impl (#12201),2022-01-27T19:39:59Z
f906f2f577144ff20e5487c98c15c3abaa8680f5,"Fix HttpRemoteTaskRunner LifecycleStart / LifecycleStop race condition (#12184)

* * stop workers, remove listener, and call exitStop() on HttpRemoteTaskRunner @LifecycleStop

* * fix test failure",2022-01-27T19:15:14Z
1b8808cce8b4880f92d9e8e7dda5be7b65a24b19,"Fix SQL queries for inline datasource with null values (#12092)

Fixes a bug because of which some SQL queries cannot be parsed using druid convention. Specifically, these queries translate to an inline datasource and have some null values. Calcite internally uses NULL as SQL type for these literals and that is not supported by the druid.
I am now allowing null column types to be returned while building RowSignature in org.apache.druid.sql.calcite.table.RowSignatures#fromRelDataType. RowSignature already allows null column type for any column. Doing so should also fix bindable queries such as select (1,2). When such queries are run with headers set to true, we get an exception in org.apache.druid.sql.http.ArrayWriter#writeHeader. This is again a similar exception to the one addressed in this PR. Because SQL type for the result column is RECORD and that doesn't have a corresponding columnType.",2022-01-27T12:34:12Z
a813816fb13713e338fe2364a915239783f1070e,"add module test for QueryableModule to allow for better runtime.properties testing (#12202)

added a default GetRequestLoggerProviderTest and GetEmitterRequestLoggerProviderTest",2022-01-26T06:26:11Z
96b3498a4048b4f8d2d72a06ceda2df1868db799,"Grouping on arrays as arrays (#12078)

* init multiValue column group by

* Changing sorting to Lexicographic as default

* Adding initial tests

* 1.Fixing test cases adding
2.Optimized inmem structs

* Linking SQL layer to native layer

* Adding multiDimension support to group by column strategy

* 1. Removing array coercion in Calcite layer
2. Removing ResultRowDeserializer

* 1. Supporting all primitive array types
2. Removing dimension spec as part of columnSelector

* 1. Supporting all primitive array types
2. Removing dimension spec as part of columnSelector

* 1. Checkstyle things
2. Removing flag

* Minor naming things

* CheckStyle Things

* Fixing test case

* Fixing hashing

* 1. Adding the MV function
2. Added few test cases

* 1. Adding MV function test cases

* Adding Selector strategy function test cases

* Fixing ClientQuerySegmentWalkerTest

* Adding GroupByQueryRunnerTest test cases

* Fixing test cases

* Adding few more test cases

* Fixing Exception asset statement and intellij inspection

* Adding null compatibility tests

* Review comments

* Fixing few failing tests

* Fixing few failing tests

* Do no convert to topN Q incase of group by on array

* Fixing checkstyle

* Fixing differences between jdk's class cast exception message

* 1. Fixing ordering if the grouping key is an array

* Fixing DefaultLimitSpec

* Fixing CalciteArraysQueryTest

* Dummy commit for LGTM

* changes:
* only coerce multi-value string null values when `ExpressionPlan.Trait.NEEDS_APPLIED` is set
* correct return type inference for ARRAY_APPEND,ARRAY_PREPEND,ARRAY_SLICE,ARRAY_CONCAT
* fix bug with ExprEval.ofType when actual type of object from binding doesn't match its claimed type

* Review comments

* Fixing test cases

* Fixing spot bugs

* Fixing strict compile

Co-authored-by: Clint Wylie <cwylie@apache.org>",2022-01-26T04:30:56Z
8ae5de5114f1758ac7699236b3a0995851022cf7,"Web console: fix multi-value dimension column detection and tidy up (#12160)

* streamline services view query

* better column type detection

* fix query view page size bug

* fill out MetricSpec interface

* fix pagination in status dialog

* update tests

* adjust pagination

* better type guessing

* better test fixtures

* add Avg. row size to segments view",2022-01-25T23:46:29Z
fce62b26434cc9ce533857f4f91e1da2816df992,fix StringAnyAggregatorFactory to use single value selector for non-existent columns (#12194),2022-01-25T20:52:30Z
20347e0c86375693c7a23489559ff199299b7a45,"Wait for datasource to be ready for SQL in integration tests (#12189)

* Wait for datasource to be ready for SQL in integration tests

* add limit to the check query",2022-01-25T18:14:26Z
2b32d86f3bcbee83b800614f9862f7130635cd92,Enable automatic metdata cleanup by default (#12188),2022-01-25T04:04:17Z
cc8b9c0b6e0e631d0c1cdfd512006bdd36039431,"Handling OOM error in ExpressionVector setup by reducing number of rows (#12186)

* Handling OOM error in ExpressionVector setup by reducing number of rows

* Removing row size to 10K in sanity tests",2022-01-24T16:37:13Z
dc1703d5f9723634bae123e9a11a6899b2abf05a,"Change value of `druid.sql.planner.useGroupingSetForExactDistinct` in common.runtime.properties (#12182)

This PR changes the value of the property `druid.sql.planner.useGroupingSetForExactDistinct` from `false` to `true` in the runtime.properties files, so that newer installations have this property as `true`, while the default still remains as `false`.

The flag determines how queries which contain an aggregation over `DISTINCT` like `SELECT COUNT(DISTINCT foo.dim1) FILTER(WHERE foo.cnt = 1), SUM(foo.cnt) FROM druid.foo` get planned by Calcite. With the flag being set to false, it plans it via joins, whereas with it being set to true, the query is set using grouping sets.

There is a known issue with Calcite (https://github.com/apache/druid/issues/7953), where an NPE is thrown while planning the above query with joins. There is no such issue while planning the query using grouping sets.",2022-01-24T08:30:03Z
ac87bdd7366c4b39001e364eb46a923fdd4d1a86,fix typo in materialized view (#12174),2022-01-22T03:32:22Z
1f63b447c45cb852924d5d3101a1005b670a054b,"Mitigate Kinesis stream LimitExceededException by using listShards API (#12161)

Makes kinesis ingestion resilient to `LimitExceededException` caused by resharding.
Replace `describeStream` with `listShards` (recommended) to get shard related info.
`describeStream` has a limit (100) to the number of shards returned per call and a low default TPS limit of 10.
`listShards` returns the info for at most 1000 shards and has a higher TPS limit of 100 as well.

Key changed/added classes in this PR
 * `KinesisRecordSupplier`
 * `KinesisAdminClient`",2022-01-21T04:45:51Z
376d7c069de3b87b21db262cca4b72ddc49e3b66,"Close provisioner during HttpRemotetaskRunner LifecycleStop (#12176)

Fixed an issue where the provisionerService which can be used to spawn resources as needed is left running on a non-leader coordinator/overlord, after it is removed from leadership. Provisioning should only be done by the leader. To fix the issue, a call to stop the provisionerService was added to the stop() method of HttpRemoteTaskRunner class. The provisionerService was properly closed on other TaskRunner types.",2022-01-20T18:32:08Z
6ce14e6b17fa227c51407eecbcbecf71191156bb,allow W in durations (#12175),2022-01-20T03:47:43Z
1f7dd6d86c68d26e2466fc40b7d593455e0b632d,Forbiddenapis: Split the guava16-only signatures file from main signatures file (#12170),2022-01-20T01:50:28Z
cacfcfcdabe9c54e610e9a48370474b8022dd591,ignore hadoop-gcs directory already exists error for integration tests (#12169),2022-01-19T17:35:50Z
cc2ffc6c0f6f542718e1bb1cdf1063db7cc79021,"Fix node discovery to ignore unknown DruidServices (#12157)

* Fix node discovery to ignore unknown DruidServices

* ignore all runtime exceptions

* fix test

* add custom deserializer

* custom serializer

* log host for unparseable druidService",2022-01-19T06:08:59Z
53c0e489c2f2f804e218600e4e87432c8f8a83ce,"Fix infinite retrying during task pausing (#12167)

This fixes a bug that causes TaskClient in overlord to continuously retry to pause tasks. This can happen when a task is not responding to the pause command. Ideally, in such a case when the task is unresponsive, the overlord would have given up after a few retries and would have killed the task. However, due to this bug, retries go on forever.",2022-01-19T03:33:36Z
cf7191d2bc52f61cd9a81f7830c1c89f9f3c826e,Validate target dataSource for INSERT. (#12129),2022-01-18T17:34:23Z
7bdb9ebdf1b072924d62855e028f3de3aa8c851e,Suppress Avro CVEs (#12166),2022-01-18T15:39:48Z
bd7fe45da0f16cfc2b80d934110c1248aff94e02,"Support adding metrics in Auto Compaction (#12125)

* add impl

* add impl

* add unit tests

* add unit tests

* add unit tests

* add unit tests

* add unit tests

* add integration tests

* add integration tests

* fix LGTM

* fix test

* remove doc",2022-01-18T04:19:31Z
b55f7a25febec8979263e4edf1d8b4ec7692f968,"Fix forbiddenapis causing travis failing (#12158)

* Fix forbiddenapis causing travis failing

* Use failOnUnresolvableSignatures instead",2022-01-16T00:13:37Z
d2ac14636535a2293171166dee4019e7210d69a8,"Docs for cluster tiering to improve query concurrency (#12128)

* add new doc

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* reorder query laning properties

* rename doc

* new name in doc header

* organize material into ""service tiering"" section

* text edits and update sidebars.json

* update query laning

* how queries get assigned to lanes

* add more details to intro; use more consistent terminology

* more content

* Apply suggestions from code review

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/operations/mixed-workloads.md

* Apply suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* typo

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: Jihoon Son <jihoonson@apache.org>",2022-01-15T04:22:08Z
6a938725861f0cafbe97e5ff8c3417fe65405cca,"OpenTelemetry emitter extension (#12015)

* Add OpenTelemetry emitter extension

* Fix build

* Fix checkstyle

* Add used undeclared dependencies

* Ignore unused declared dependencies",2022-01-15T04:18:04Z
e0c4c568cba8a149fd5ae51321ffc6e483c5d011,fix incorrect ColumnInspector in IncrementalIndex.makeColumnSelectorFactory (#12155),2022-01-14T02:09:06Z
eb4fafe08fd0827ff88937a0e3c07910c59f9b65,"Upgrading follow-redirects to 1.14.7 (#12153)

* Upgrading follow-redirects to 1.14.7

* removed the existing follow-redirects i.e. 1.14.4 from package-lock.json",2022-01-13T22:01:36Z
74c876e57804617ccb3af2b5af026cacd0320ff4,"Throw parse exceptions on schema get errors for SchemaRegistryBasedAvroBytesDecoder (#12080)

* Add option to throw parse exceptions on schema get errors for SchemaRegistryBasedAvroBytesDecoder

* Remove option",2022-01-13T18:36:51Z
1dba089a6218ecfc3387c445b564b6179d4962a6,"fix array type strategy write size tracking (#12150)

* fix array type strategy write size tracking

* fix checkstyle",2022-01-13T18:22:40Z
e56ea3169778d25bd6b13053d902070f4e5a9b25,"follow-up to fix formatting broken in #12147 (#12148)

follow-up to #12147 to fix the build",2022-01-13T04:59:32Z
58378aa9675a7e37ab1627824f605f9235652058,Move gcs-connector from lib to hadoop-dependencies for integration test (#12144),2022-01-13T00:47:34Z
168187e6df714a04a2a80dffc892a49fce8cb217,"avoid unnecessary String.format calls in IdUtils.validateId (#12147)

Based on profiling data, about 25% of the time de-serializing DataSchema
is spent on formatting strings in validateId.

This can add up quickly, especially when de-serializing task information
in the overlord, where in can consume almost 2% of CPU if there are many
tasks.

Since the formatting is unnecessary unless the checks fail, we can
leverage the built-in formatting of Preconditions.checkArgument instead
to avoid the cost.",2022-01-13T00:34:40Z
9cd52ed914cbf4ecb6e0cd3f4451eb44ed78d1f8,"Web console: make range partitioning a first class citizen of the console (#12146)

* first class support for range partitioning

* update e2e tests",2022-01-12T11:50:10Z
f2ce76966cf06134dbe712782edf46a7c8d72563,"add EARLIEST_BY/LATEST_BY to make EARLIEST/LATEST function signatures less ambiguous (#12145)

* add EARLIEST_BY/LATEST_BY to make EARLIEST/LATEST function signatures unambiguous

* switcheroo

* EARLIEST_BY/LATEST_BY use timestamp instead of numeric types, update docs

* revert unintended change

* fix docs

* fix docs better",2022-01-12T11:48:53Z
fae73800a7791e386c2b0c6bce3de06f85b525d3,"Set plannerContext error when cannot query external datasources and when insert is not supported.  (#12136)

This PR aims to add plannerContext.setPlanningError whenever external table scan rule is invoked, without the queryMaker having the ability to do so.",2022-01-12T09:41:17Z
81f0aba6cb2fa8fecc3f9daff341f88cfc2c692b,"Use ListFilteredVirtualColumn for left/fact table expression in join condition (#12127)

* Pass VirtualColumnRegistry in PlannerContext for join expression planning

* Allow for including VCs from join fact table expression

* Optmize MV_FILTER functions to use a VC when in join fact table expression

* fixup! Allow for including VCs from join fact table expression

* Address review comments",2022-01-11T22:47:13Z
b153cb2342cd5f33c79c063db3ae49ebaf498bb1,"Add a small LRU cache and use utf8 bytes in ArrayOfDoubles (#12130)

* Add a small LRU cache and use utf8 bytes in ArrayOfDoubles

* Add tests for extra branches

* Even more tests for branch coverage

* Fix Style",2022-01-11T21:04:11Z
08fea7a46a0dddbf9449b791bca8c9e783054642,"input type validation for datasketches hll ""build"" aggregator factory (#12131)

* Ingestion will fail for HLLSketchBuild instead of creating with incorrect values

* Addressing review comments for HLL< updated error message introduced test case",2022-01-11T20:00:14Z
eb0bae49eca5013c7121994e20f9cd8146df8424,"Update PostAggregator to be backwards compat (#12138)

This change mimics what was done in PR #11917 to
fix the incompatibilities produced by #11713. #11917
fixed it with AggregatorFactory by creating default
methods to allow for extensions built against old
jars to still work.  This does the same for PostAggregator",2022-01-11T10:18:14Z
7cf9192765a47d9a63cdd87c12e964de78a08d2f,"fix delegated smoosh writer and some new facilities for segment writeout medium (#12132)

* fix delegated smoosh writer and some new facilities for segment writeout medium
changes:
* fixed issue with delegated `SmooshedWriter` when writing files that look like paths, causing `NoSuchFileException` exceptions when attempting to open a channel to the file
* `FileSmoosher.addWithSmooshedWriter` when _not_ delegating now checks that it is still open when closing, making it a no-op if already closed (allowing column serializers to add additional files and avoid delegated mode if they are finished writing out their own content and ned to add additional files)
* add `makeChildWriteOutMedium` to `SegmentWriteOutMedium` interface, which allows users of a shared medium to clean up `WriteOutBytes` if they fully control the lifecycle. there are no callers of this yet, adding for future functionality
* `OnHeapByteBufferWriteOutBytes` now can be marked as not open so it `OnHeapMemorySegmentWriteOutMedium` can now behave identically to other medium implementations

* fix to address nit - use AtomicLong",2022-01-11T06:25:19Z
c8ddf60851a6ac59a15ee93964f2314f13b7aba0,"Upgrade RSA Key from 1024 bit to 4096 to eliminate warnings (#11743)

* eliminate warnings

* Change the keyStore type to PKCS12",2022-01-11T05:24:09Z
e5830332319e680f2475f541840ee1a23d289117,"add 'TypeStrategy' to types (#11888)

* add TypeStrategy - value comparators and binary serialization for any TypeSignature",2022-01-11T01:12:14Z
2a41b7bffa176c48b1d11edfac65e29c6cb01a3b,"Web console: correctly cancel JSON shaped SQL queries (#12134)

* misc fixes

* type typo",2022-01-10T22:24:05Z
7c17341caa7d8255389128eb99f24863593abcbd,"Return empty result when a group by gets optimized to a timeseries query (#12065)

Related to #11188

The above mentioned PR allowed timeseries queries to return a default result, when queries of type: select count(*) from table where dim1=""_not_present_dim_"" were executed. Before the PR, it returned no row, after the PR, it would return a row with value of count(*) as 0 (as expected by SQL standards of different dbs).

In Grouping#applyProject, we can sometimes perform optimization of a groupBy query to a timeseries query if possible (when the keys of the groupBy are constants, as generated by automated tools). For example, in select count(*) from table where dim1=""_present_dim_"" group by ""dummy_key"", the groupBy clause can be removed. However, in the case when the filter doesn't return anything, i.e. select count(*) from table where dim1=""_not_present_dim_"" group by ""dummy_key"", the behavior of general databases would be to return nothing, while druid (due to above change) returns an empty row. This PR aims to fix this divergence of behavior.

Example cases:

select count(*) from table where dim1=""_not_present_dim_"" group by ""dummy_key"".
CURRENT: Returns a row with count(*) = 0
EXPECTED: Return no row

select 'A', dim1 from foo where m1 = 123123 and dim1 = '_not_present_again_' group by dim1
CURRENT: Returns a row with ('A', 'wat')
EXPECTED: Return no row

To do this, a boolean droppedDimensionsWhileApplyingProject has been added to Grouping which is true whenever we make changes to the original shape with optimization. Hence if a timeseries query has a grouping with this set to true, we set skipEmptyBuckets=true in the query context (i.e. donot return any row).",2022-01-07T16:23:48Z
2299eb321e092748d6c192c663cb9ea771bbc1a9,"Standardizing SQL function docs (#12091)

* fix typos in SQL function docs

* more code

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* a few more expr, fixes

* more fixes

* quote TIME_SHIFT

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* undo header change

Co-authored-by: Frank Chen <frankchen@apache.org>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2022-01-07T07:57:03Z
c28b2834a11e88c020fcb5411424a89be1030eef,"Add http response status code to org.eclipse.jetty.server.RequestLog (#12116)

* Add http response status code to org.eclipse.jetty.server.RequestLog

* http response code is expressed as an int. Set log msg interpolation based on digit

* trying to add an unit test to verify if the logger.debug method is called

* trying to add an unit test to verify if the logger.debug method is called

* fix compilation issues

* remove test",2022-01-06T12:10:01Z
4a74c5adccf71bc5098da06638bc5dcd3473914b,"Use Druid's extension loading for integration test instead of maven (#12095)

* Use Druid's extension loading for integration test instead of maven

* fix maven command

* override config path

* load input format extensions and kafka by default; add prepopulated-data group

* all docker-composes are overridable

* fix s3 configs

* override config for all

* fix docker_compose_args

* fix security tests

* turn off debug logs for overlord api calls

* clean up stuff

* revert docker-compose.yml

* fix override config for query error test; fix circular dependency in docker compose

* add back some dependencies in docker compose

* new maven profile for integration test

* example file filter",2022-01-06T07:33:04Z
6846622080f00270e0722bd77dbbecb15f060ec3,"Docs: add FILTER to sql query syntax (#12093)

* docs: add FILTER to sql query syntax

* Update docs/querying/sql.md

* Update docs/querying/sql.md

* Update docs/querying/sql.md

* Update docs/querying/sql.md

* move and update FILTER section",2022-01-05T20:59:41Z
b53e7f4d12f9c4922e7ef8f540b178d0dbc21410,"Support overlapping segment intervals in auto compaction (#12062)

* add impl

* add impl

* fix more bugs

* add tests

* fix checkstyle

* address comments

* address comments

* fix test",2022-01-04T19:47:38Z
fe71fc414fbe0627290487cce59055dd65794ff8,"Update log4j2 to 2.17.1 (#12106)

Signed-off-by: frank chen <frank.chen021@outlook.com>",2021-12-31T01:18:16Z
476d0bf4be4199e97695bd568d165cda98523d37,"Web console: remove console.log (#12094)

* rm console.log

* force path-parse to 1.0.7",2021-12-23T03:31:23Z
37112d24e27a1d54db64889353dade198ff76da6,"Web console: new Ace, diff view, and cleanup. Decorating the console for the holidays ✨ 🎁  (#12085)

* Add diff view and upgrade AceEditor

* fix test

* function doc parsing fixes

* escape args

* allowKeys

* everyone gets a diff

* update snapshot",2021-12-23T00:31:17Z
9b598407c1a0fced304f2cfe59d16a0973ba4245,"Add interface for external schema provider to Druid SQL (#12043)

* Add interfce for external schema provider to Druid SQL

* Add annotations",2021-12-22T16:47:57Z
1871a1ab18067c3db1e65e52538a861af2f5800d,ARRAY_AGG and STRING_AGG will through errors if invoked on a complex datatype (#12089),2021-12-22T01:41:04Z
c267b65f97998f7e6b43b102a0e16c331825fb14,"Removing unused processing threadpool on broker (#12070)

* Thread pool for broker

* Updating two tests to improve coverage for new method added

* Updating druidProcessingConfigTest to cover coverage

* Adding missed spelling errors caused in doc

* Adding test to cover lines of new function added",2021-12-21T21:07:53Z
f34575936091f7e6944e4458b91396e904620727,Update to 2.17.0 (#12081),2021-12-20T04:27:08Z
c0b15141778ffd9fd7141027d64755618597ed27,"Segment pruning for multi-dim partitioning given query domain (#12046)

Segment pruning for multi-dim partitioning for a given query

DimensionRangeShardSpec#possibleInDomain has been modified to enhance pruning when multi-dim partitioning is used.

Idea
While iterating through each dimension,

If query domain doesn't overlap with the set of permissible values in the segment, the segment is pruned.
If the overlap happens on a boundary, consider the next dimensions.
If there is an overlap within the segment boundaries, the segment cannot be pruned.",2021-12-17T07:14:43Z
5d043cefbc63c9d1e18936dcdd4426ceaaaed431,Fix test in ResponseContextTest (#12077),2021-12-17T06:51:51Z
acbeae23b828db0856fcb360a31f163f89746335,"New doc for troubleshooting query execution (#12075)

* new doc for troubleshooting query execution

* add doc to sidebar

* Apply suggestions from code review",2021-12-17T01:34:34Z
60a3a802b6a4fdda243ec27f1ccfa26d29f5cb79,"Modifying index from druid_segments(datasource, used, end) to druid_segments(datasource, used, end, start) to support kill task (#11894)

This index helps in faster query results during kill task's query on interval based unused segment listing. This can become a bottleneck in some production loads causing coordinator to wait longer for metadata db replies and impacting  Kafka ingestion. The modified index has helped reduce the query times for such queries.",2021-12-16T18:28:20Z
0cc998d8a1dad781cf509a739229cc07fbf74641,improve spec upgrading (#12072),2021-12-15T18:28:21Z
3f794535060ec2011a5c02653edad298712d35bf,"Lock count guardrail for parallel single phase/sequential task (#12052)

* Lock count guardrail for parallel single phase/sequential task

* PR comments",2021-12-15T17:12:21Z
377edff0423b25e0ac5f6f67ec646d165040d778,"Ingestion metrics doc fix (#12066)

* Ingestion metrics doc fix.

* Fixing typo

* Adding missed keywords in ignore list",2021-12-15T07:21:53Z
16642fb2780b11ade62c8d46d3dd7f90e424add4,"Fix incorrect type conversion in DruidLogicalValueRule (#11923)

DruidLogicalValuesRule while transforming to DruidRel can return incorrect values, if during the creation of the literal it was created from a float value. The BigDecimal representation stores 123.0, and it seems that using RexLiteral's method while conversion returns the inflated value (which is 1230). I am unsure if this is intentional from Calcite's perspective, and the actual change should be done somewhere else.

Extract the values of INT/LONG from the RexLiteral in the DruidLogicalValuesRule, via BigDecimal.longValue() method.",2021-12-15T05:14:35Z
4ede3bbff69a9eb1e7f3108f3a46d180d783aba7,"Docs updates (#12069)

* minor updates to docs

* remove en.json",2021-12-14T22:38:18Z
d917e0433ed7bf5e2068c7914f5e7d21bf58c1b6,"Update to log4j 2.16.0. (#12061)

* Update to log4j 2.16.0.

* Update licenses.yaml",2021-12-14T03:06:00Z
e77bdfa70dff767056ee9f29e5ab285dfd9b2d62,"Document query context parameters related to join filters (#12057)

* docs update for query context and filters

* updates from review

* Update docs/querying/filters.md",2021-12-14T01:47:21Z
e53c3e80ca246c0bc9efd18d23858b791eb6e1a2,"set log4j2.is.webapp to false if not set so that shutdown hooks are run (#12056)

* set log4j2.is.webapp to false if not set so that shutdown hooks are run",2021-12-11T05:55:35Z
761fe9f144d56e8c7c2f0a8e4838dc3f2c2d5d31,"Add new metric that quantifies how long batch ingest jobs waited for segment availability and whether or not that wait was successful (#12002)

* add a unit test that tests that new metric is emitted

* remove unused import

* clarify in doc that this is for batch tasks

* fix IndexTaskTest",2021-12-10T17:40:52Z
ffa4783ce8924ac02441817793e88c2acc790f04,"Adjust log4j version in licenses.yaml. (#12053)

Co-authored-by: Gian Merlino <gian@imply.io>",2021-12-10T16:12:54Z
19316018b842126514cf3479cd14223422492d0e,update log4j to 2.15.0 to address security vulnerabilities (#12051),2021-12-10T06:34:54Z
244c2559e991038c52401fd45d4c7606cb55bf36,"fix IncrementalIndex performance regression (#12048)

changes:
* IncrementalIndex is now a ColumnInspector
* fixes performance regression from using map of ColumnCapabilities from IncrementalIndex as a RowSignature",2021-12-10T06:04:32Z
25ac04e067ce86fe2fb3d1d348f8f57ddd2ce239,MySqlFirehoseDatabaseConnector uses configured driver class name (#12049),2021-12-10T04:58:55Z
58245b46173959bde30376ead92a3765614f5309,"Support JsonPath functions in JsonPath expressions (#11722)

* Add jsonPath functions support

* Add jsonPath function test for Avro

* Add jsonPath function length() to Orc

* Add jsonPath function length() to Parquet

* Add more tests to ORC format

* update doc

* Fix exception during ingestion

* Add IT test case

* Revert ""Fix exception during ingestion""

This reverts commit 5a5484b9ea9d984622149c8113a566269cc10842.

* update IT test case

* Add 'keys()'

* Commit IT test case

* Fix UT",2021-12-10T02:53:23Z
a8b916576dc8be48ea49c4b7e22fd1f53140261b,"Allow for appending tasks to co-exist with each other. (#12041)

* Allow for appending tasks to co-exist with each other.

Add a config parameter for appending tasks to allow them to
use a SHARED lock.  This will allow multiple appending tasks
to add segments to the same datasource at the same time.

This config should actually be the default, but it is added
as a config to enable a smooth transition/validation in
production settings before forcing it as the default
behavior going forward.

This change leverages the TaskLockType.SHARED that existed
previously, this used to carry the semantics of a READ lock,
which was ""escalated"" when the task wanted to actually
persist the segment.  As of many moons before this diff, the
SHARED lock had stopped being used but was still piped into
the code.  It turns out that with a few tweaks, it can be
adjusted to be a shared lock for append tasks to allow them
all to write to the same datasource, so that is what this does.

* Can only reuse the shared lock if using the same groupId

* Need to serialize out the task lock type

* Adjust Unit tests to expect new field in JSON",2021-12-10T00:46:40Z
229f82a6f0d339f13508985b5e3fd5da5082a6b5,"Add parse error list API for stream supervisors, use structured object for parse exceptions, simplify parse exception message (#11961)

* Add parse error list API for stream supervisors, simplify parse exception message

* Add input string to parse exception

* Use structured ParseExceptionReport

* Fix tests

* Add test

* PR comments, add ParseExceptionReport equals verifier

* Fix test",2021-12-09T21:42:55Z
ffc5ade5066f6f145846f7b42ab8491da81c69aa,"Remove use of deprecated PMD ruleset (#12044)

* Remove use of deprecated PMD ruleset

This fixes annoying warnings we were getting during build.

- Use a custom PMD ruleset, since the built-in one uses deprecated rules.
- UnnecessaryImport replaces most of the deprecated rules
- Update maven-pmd-plugin to 3.15
- Exclude ancient asm version from caliper, since this was causing
  incompatibility warnings with PMD and could also affect our tests runs
  in unexpected ways",2021-12-09T21:04:27Z
6ac4e2dbb8d2e390f0f4a9c0130ce2fb223c297b,"Web console: use query actions in query view (#12037)

* use query actions

* feedback fixes",2021-12-08T21:01:29Z
25c9eba2f7fafb6db244974f4be32b3b65ecbb68,clarify time format for intervals (#12035),2021-12-08T16:31:21Z
7abf847eaefbab84500b7fa245106a30f10bf5c8,"Return 400 when SQL query cannot be planned (#12033)

In this PR, we will now return 400 instead of 500 when SQL query cannot be planned. I also fixed a bug where error messages were not getting sent to the users in case the rules throw UnsupportSQLQueryException.",2021-12-08T16:19:54Z
ca260dfef6161d6cfb4856e88a779b7a58b4294d,"Intern RowSignature in DruidSchema to reduce its memory footprint (#12001)

DruidSchema consists of a concurrent HashMap of DataSource -> Segement -> AvailableSegmentMetadata. AvailableSegmentMetadata contains RowSignature of the segment, and for each segment, a new object is getting created. RowSignature is an immutable class, and hence it can be interned, and this can lead to huge savings of memory being used in broker, since a lot of the segments of a table would potentially have same RowSignature.",2021-12-08T09:41:13Z
45be2be3681a31724bc7a8a362fcf9ddd146473c,"fix issues with multi-value string constant expressions (#12025)

* add specialized constant selector for multi-valued string constants",2021-12-08T08:10:26Z
0565f0e6a1aa809697174346662b32ac62e6d3d5,"fix build warnings for forbidden-apis (#12034)

* replace deprecated forbidden-apis config failOnUnresolvableSignatures
with ignoreSignaturesOfMissingClasses which avoids warnings for
classes not present in a particular sub-module

* fix incorrect signature for Files.createTempDirectory",2021-12-08T06:21:01Z
150902b95ccac2cca7f77185f7f578d0bacf3b0f,"clean up the balancing code around the batched vs deprecated way of sampling segments to balance (#11960)

* clean up the balancing code around the batched vs deprecated way of sampling segments to balance

* fix docs, clarify comments, add deprecated annotations to legacy code

* remove unused variable

* update dynamic config dialog in console to state percentOfSegmentsToConsiderPerMove deprecated

* fix dynamic config text for percentOfSegmentsToConsiderPerMove

* run prettier to cleanup coordinator-dynamic-config.tsx changes

* update jest snapshot

* update documentation per review feedback",2021-12-07T22:47:46Z
a8815f671eb88d24f264d07f5d8dd7bd2277c886,"Fix druid client timeout zero (#12023)

* fix bug where queries fail immediately when timeout is 0 instead of using default timeout

* fix to use serverside max

* more better

* less flaky test

* oops",2021-12-07T20:41:01Z
1d3c8c187b9c07ee1adc6a6669f756421ec9f324,"Web console: query view improvements and other fixes (#12031)

* don't copy commas

* use numeric type information

* add VALUES keyword

* propogate rollup config into spec

* fix

* cleanup

* understand range partitioning

* update snapshots

* better comp apis

* fix segment pages

* update snapshots",2021-12-07T18:16:16Z
0b3f0bbbd81cc3ec33e1a4716ee33b149d1a2940,"Docs - Metrics docs layout and info about query/bytes (#11481)

* Metrics docs layout and info about query/bytes

Knowledge transfer from https://groups.google.com/g/druid-user/c/8fiflmSEoTQ - updated the layout of the Metrics part, adding links between docs pages.

Update index.md

Amended typo

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/metrics.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/metrics.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/operations/metrics.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Feedback applied

Http --> HTTP and moved content / removed >

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-12-07T17:45:24Z
c209db3a1de153604d33c3f8afdcdf38b454573a,"Docs - roll-up tip (#11677)

* Update rollup.md

Added SE tip around roll-up.

* Update docs/ingestion/rollup.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-12-07T17:17:36Z
d7463c99e9c743a3d3159902fb93442962829d31,"Docs - Task ref logs correction (#11746)

* Update tasks.md

Removed confusing backreference

* Update tasks.md

Changed silly grammar.",2021-12-07T17:15:19Z
65cadbe42a23fc4dca0d1f703b755293f54f15c4,"Fix bad lookup config fails task (#12021)

This PR fixes an issue in which if a lookup is configured incorreclty; does not serialize properly when being pulled by peon node, it causes the task to fail. The failure occurs because the peon and other leaf nodes (broker, historical), have retry logic that continues to retry the lookup loading for 3 minutes by default. The http listener thread on the peon task is not started until lookup loading completes, by default, the overlord waits 1 minute by default, to communicate with the peon task to get the task status, after which is orders the task to shut down, causing the ingestion task to fail.

To fix the issue, we catch the exception serialization error, and do not retry. Also fixed an issue in which a bad lookup config interferes with any other good lookup configs from being loaded.",2021-12-07T05:55:34Z
834aae096a9315ea924847ffebca6ec9fb743d59,"Human-readable and actionable SQL error messages (#11911)

This PR does two things

1. It adds the capability to surface missing features in SQL to users - The calcite planner will explore through multiple rules to convert a logical SQL query to a druid native query. Some rules change the shape of the query itself, optimize it and some rules are responsible for translating the query into a druid native query. These are DruidQueryRule, DruidOuterQueryRule, DruidJoinRule, DruidUnionDataSourceRule, DruidUnionRule etc. These rules will look at SQL and will do the necessary transformation. But if the rule can't transform the query, it returns back the control to the calcite planner without recording why was it not able to transform. E.g. there is a join query with a non-equal join condition. DruidJoinRule will look at the condition, see that it is not supported, and return back the control. The reason can be that a query can be planned in many different ways so if one rule can't parse it, the query may still be parseable by other rules. In this PR, we are intercepting these gaps and passing them back to the user if the query could not be planned at all.

2. The said capability has been used to generate actionable errors for some common unsupported SQL features. However, not all possible errors are covered and we can keep adding more in the future.",2021-12-07T04:14:08Z
34a3d45737c260497ca01eb6904d77bd628b9ee2,"Refactor ResponseContext (#11828)

* Refactor ResponseContext

Fixes a number of issues in preparation for request trailers
and the query profile.

* Converts keys from an enum to classes for smaller code
* Wraps stored values in functions for easier capture for other uses
* Reworks the ""header squeezer"" to handle types other than arrays.
* Uses metadata for visibility, and ability to compress,
  to replace ad-hoc code.
* Cleans up JSON serialization for the response context.
* Other miscellaneous cleanup.

* Handle unknown keys in deserialization

Also, make ""Visibility"" into a boolean.

* Revised comment

* Renamd variable",2021-12-07T01:03:12Z
44b2fb71abeafd874c1ba3b67fb977551f56c13d,"Fix the error case when there are multi top level unions (#12017)

This is a follow up to the PR #11908. This fixes the bug in top level union all queries when there are more than 2 SQL subqueries are present.",2021-12-06T19:42:02Z
590cf993c0e9e9286008978e1ab282518d8dc78c,"Replace source call to make scripts more portable (#12014)

Fixes #10744

Fixes:
./bin/node.sh: 44: ./bin/node.sh: source: not found
Could not find java - please run /opt/druid/apache-druid-0.20.0/bin/verify-java to confirm it is installed.",2021-12-06T08:11:25Z
2539b7a748a7f24b72a1e21c4ded334c3125e1f8,"Adding ToString() to ExceptionEvent (#12027)

For readable output for exception events, while generating the report in SeekableStreamSupervisor",2021-12-06T08:07:16Z
1f052b43c5d7b6e0ca578e8c2597e687a6a8ab92,"Better serverView exec name; remove SingleServerInventoryView (#11770)

Druid currently has 2 serverViews, regular serverView and filtered serverView. The regular serverView is used to monitor all segment announcements from all data nodes (historicals, tasks, indexers). The filtered serverView is used when you want to watch segment announcements from particular tiers. Since these server views keep track of different sets of druidServers and segments in memory, they should be maintained separately. However, they currently share the same name for their executorService, which can cause confusion and make debugging harder especially in the broker since it is using both serverViews, the filtered view for normal query processing and the regular view to serve the servers table (I'm unsure whether this is intended or whether this is a good behavior). This PR changes it to a more obvious name.

This PR also removes SingleServerInventoryView. This view was deprecated a long time ago and has not been documented at least since 0.13 (#6127). I also don't think this can be better in any case than BatchServerInventoryView. Finally, I merged AbstractCuratorServerInventoryView and BatchServerInventoryView as we no longer need AbstractCuratorServerInventoryView after SingleServerInventoryView is removed.",2021-12-04T13:13:05Z
76d281d64fe9615f022167f9d7cafbbe83a881ea,"Enable allocating segments at ALL granularity. (#12003)

* Enable allocating segments at ALL granularity.

The main change is that Granularity.granularitiesFinerThan will return ALL if ALL
is passed in.

Allocating segments at ALL granularity is somewhat unconventional, but there
is nothing wrong with it, and it actually makes a lot of sense for tables that
are meant to be used for lookups or dimensions rather than main fact tables.
This change enables ALL segmentGranularity to work properly in appendToExisting
mode.

Also clarifies behavior in javadocs and tests.

* Move tests to improve coverage.",2021-12-03T22:15:05Z
bc2cc47db6f26313d6249594aef5a58e0b512ef8,"SeekableStreamSupervisor: Coalesce adjacent RunNotices. (#12018)

The idea is that if multiple notices come in around the same time due
to rapid task status changes, we only need to execute one of them.",2021-12-03T21:42:03Z
fc9513b6cd71aff57a542ad892f5ae859bfeee76,"Make NodeRole available during binding; add support for dynamic registration of DruidService (#12012)

* Make nodeRole available during binding; add support for dynamic registration of DruidService

* fix checkstyle and test

* fix customRole test

* address comments

* add more javadoc",2021-12-03T19:59:00Z
e0e05aad995d82d40fb54b960120d6c7d1050932,"Enhancements to IndexTaskClient. (#12011)

* Enhancements to IndexTaskClient.

1) Ability to use handlers other than StringFullResponseHandler. This
   functionality is not used in production code yet, but is useful
   because it will allow tasks to communicate with each other in
   non-string-based formats and in streaming fashion. In the future,
   we'll be able to use this to make task-to-task communication
   more efficient.

2) Truncate server errors at 1KB, so long errors do not pollute logs.

3) Change error log level for retryable errors from WARN to INFO. (The
   final error is still WARN.)

4) Harmonize log and exception messages to have a more consistent format.

* Additional tests and improvements.",2021-12-03T17:14:32Z
f7f55056312ccb1bd3d12b7736f6f311a6adbc89,"Add avro_ocf to supported Kafka/Kinesis InputFormats (#11865)

* Update docs - Kinesis InputFormat ingestion

* Add avro_ocf to list of supported Kafka InputFormats

* Remove extra whitespace.

* Update kafka-supervisor-reference.md

* Delete extra whitespace.",2021-12-03T15:57:26Z
c2cea25a6b4f1d1a85692d83e92d277fba79f673,"Improve exception message when loading data from web-console (#11723)

* Improve exception handling

* Revert some changes

* Resolve comments

* Update indexing-service/src/main/java/org/apache/druid/indexing/overlord/sampler/SamplerExceptionMapper.java

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>

* Update indexing-service/src/main/java/org/apache/druid/indexing/overlord/sampler/SamplerExceptionMapper.java

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>

* Address review comments

Co-authored-by: Karan Kumar <karankumar1100@gmail.com>",2021-12-03T13:33:49Z
4631a66723d9a4123a92c61cab5b7fbf4b81153e,"Support rolling log files (#10147)

* apply log file rolling strategy

* fix doc

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Use absolute log path and allow spaces in log path

* Update log4j2 configuration

* apply FileAppender to ZooKeeper

* DO NOT redirect application's console log to file in supervisor",2021-12-03T13:32:01Z
7ed46800c398cf61b38d9b2acb80117fc3c09c58,"Docs: Add multi-dimension partitioning doc; refactor native batch and separate into smaller topics. (#11983)

Adds documentation for multi-dimension partitioning. cc: @kfaraz
Refactors the native batch partitioning topic as follows:

Native batch ingestion covers parallel-index
Native batch simple task indexing covers index
Native batch input sources covers ioSource
Native batch ingestion with firehose covers deprecated firehose",2021-12-03T11:07:14Z
503384569aea81bc20b786e050bb47de37c898f2,"Fix classNotFoundException when connecting to secure LDAP (#11978)

This PR fixes a problem where the com.sun.jndi.ldap.Connection tries to build BasicSecuritySSLSocketFactory when calling LDAPCredentialsValidator.validateCredentials since BasicSecuritySSLSocketFactory is in extension class loader and not visible to system classloader.",2021-12-03T06:38:19Z
af6541a2368a3730483b76ad750b7f4b9f6e97a4,"allow `DruidSchema` to fallback to segment metadata 'type' if 'typeSignature' is null (#12016)

* allow `DruidSchema` to fallback to segment metadata type if typeSignature is null, to avoid producing incorrect SQL schema if broker is upgraded to 0.23 before historicals

* mmm, forbidden tests",2021-12-03T01:42:01Z
84b4bf56d8be710cf793d26106b2c475fa901469,"vectorize logical operators and boolean functions (#11184)

changes:
* adds new config, druid.expressions.useStrictBooleans which make longs the official boolean type of all expressions
* vectorize logical operators and boolean functions, some only if useStrictBooleans is true",2021-12-03T00:40:23Z
f47afd7b98221e08acd41787402d403ad0ee5556,HttpResponseHandler: Fill out truncated javadoc. (#12004),2021-12-02T22:05:51Z
1f95a42bb8b32c314934e8e2ecdeb6569c7e8db3,"Web console: updated the explain dialog to use new explain output (#12009)

This is the UI followup to the work done in #11908

Updated the Explain dialog to use the new output format.",2021-12-01T18:48:11Z
ffa553593f84a65f32dd2e32d3ce7fb6f9cdf801,Use one factory in json reader (#11999),2021-12-01T10:47:48Z
11746b8536b1eea36e832a2a084f46dd9223b827,"Update datasketches-hll.md (#12010)

under ""Aggregators"", about the lgK setting, it said ""Must be a power of 2 from 4 to 21 inclusively.""  21 is not a power of 2, nor is 12, the given default.  I think there may have been confusion because lgK represents log2 of K.  We could say ""K must be a power of 2..."", or just say lgK must be between 4 and 21.",2021-12-01T02:52:00Z
a66f10eea1001bc1710fb538ca63b7cba5039c4f,"Code cleanup from query profile project (#11822)

* Code cleanup from query profile project

* Fix spelling errors
* Fix Javadoc formatting
* Abstract out repeated test code
* Reuse constants in place of some string literals
* Fix up some parameterized types
* Reduce warnings reported by Eclipse

* Reverted change due to lack of tests",2021-11-30T19:35:38Z
f6e6ca2893f726201c55f33d2fffedddcf427c70,"Use intermediate-persist IndexSpec during multiphase merge. (#11940)

* Use intermediate-persist IndexSpec during multiphase merge.

The main change is the addition of an intermediate-persist IndexSpec
to the main ""merge"" method in IndexMerger. There are also a few minor
adjustments to the IndexMerger interface to encourage more harmonious
usage of its methods in the future.

* Additional changes inspired by the test coverage checker.

- Remove unused-in-production IndexMerger methods ""append"" and ""convert"".
- Add additional unit tests to UnifiedIndexerAppenderatorsManager.

* Additional adjustments.

* Even more additional adjustments.

* Test fixes.",2021-11-29T23:08:49Z
f536f31229cc4b842762646fa9ec0ba28148b1ed,"clarify avro support & general style improvements (#11975)

* clarify avro support & general style improvements

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/avro.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update avro.md

remove redundancy

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2021-11-28T08:10:18Z
93aeaf4801f65826f01cac0a3eedb4b4d3fdecef,"Improve on-heap aggregator footprint estimates. (#11950)


Add a ""guessAggregatorHeapFootprint"" method to AggregatorFactory that
mitigates #6743 by enabling heap footprint estimates based on a specific
number of rows. The idea is that at ingestion time, the number of rows
that go into an aggregator will be 1 (if rollup is off) or will likely
be a small number (if rollup is on).

It's a heuristic, because of course nothing guarantees that the rollup
ratio is a small number. But it's a common case, and I expect this logic
to go wrong much less often than the current logic. Also, when it does
go wrong, users can fix it by lowering maxRowsInMemory or
maxBytesInMemory. The current situation is unintuitive: when the
estimation goes wrong, users get an OOME, but actually they need to
*raise* these limits to fix it.",2021-11-28T07:51:24Z
8eff6334f7750f1be00a283456d7a78c031317d4,"AWS ""Data read has a different length than the expected"" error should reset stream and try again (#11941)

* Add support for custom reset condition & support for other args to have defaults to make the method api consistent

* Add support for custom reset condition to InputEntity

* Fix test names

* Clarifying comments to why we need to read the message's content to identify S3's resettable exception

* Add unit test to verify custom resettable condition for S3Entity

* Provide a way to customize retries since they are expensive to test",2021-11-26T19:45:34Z
9bc18a93a29f1eea699894733fdd50035ce473e5,warn when segment cannot be loaded by Historical nodes (#11849),2021-11-26T09:27:17Z
b48f5a576b300149e92167e16ecf70b8c6c34b27,"Fix: Do not require time condition on InlineDataSource (#11982)

For queries on logical values, e.g. SELECT 1337, we need not check for
a filter on __time column even if requireTimeCondition is true.",2021-11-25T15:40:06Z
c381cae51b93251e8ae6e5bd84d15a6bd30e8d28,"Improve the output of SQL explain message (#11908)

Currently, when we try to do EXPLAIN PLAN FOR, it returns the structure of the SQL parsed (via Calcite's internal planner util), which is verbose (since it tries to explain about the nodes in the SQL, instead of the Druid Query), and not representative of the native Druid query which will get executed on the broker side.

This PR aims to change the format when user tries to EXPLAIN PLAN FOR for queries which are executed by converting them into Druid's native queries (i.e. not sys schemas).",2021-11-25T15:38:33Z
98957be0443b669cc7464886ef9ee21d3d21f762,"Return HTTP 404 instead of 400 for supervisor/task endpoints (#11724)

* Use 404 instead of 400

* Use 404 instead of 400

* Add UT test cases

* Add IT testcases

* add UT for task resource filter

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Using org.testing.Assert instead of org.junit.Assert

* Resolve comments and fix test

* Fix test

* Fix tests

* Resolve comments",2021-11-25T05:09:47Z
2c08055962f1c23e2749ba4e647ec85853723e5b,"Specify time column for first/last aggregators (#11949)

Add the ability to pass time column in first/last aggregator (and latest/earliest SQL functions). It is to support cases where the time to query upon is stored as a part of a column different than __time. Also, some other logical time column can be specified.",2021-11-25T04:14:14Z
3d72e66f5677f01e835f2594ad3db9abd9f39f34,"Consolidate a bunch of ad-hoc segments metadata SQL; fix some bugs. (#11582)

* Consolidate a bunch of ad-hoc segments metadata SQL; fix some bugs.

This patch gathers together a variety of SQL from SqlSegmentsMetadataManager
and IndexerSQLMetadataStorageCoordinator into a new class SqlSegmentsMetadataQuery.
It focuses on SQL related to retrieving segment payloads and marking
segments used and unused.

In addition to cleaning up the code a bit, this patch also fixes a bug
with years before 0 or after 9999. The prior SQL did not work properly
because dates outside this range cannot be compared as strings. The new
code does work for these far-past and far-future years.

So, if you're ever interested in using Druid to analyze things from
ancient Babylon, you better apply this patch first!

* Fix test compiling.

* Fixes and improvements.

* Fix forbidden API.

* Additional fixes.",2021-11-24T22:51:53Z
12e2228510fa9bccb9321f7ac987b0408e0ac29c,"RowBasedGrouperHelper: Set hasMultipleValues = false in capabilities. (#11954)

Useful because it enables anything that consumes groupBy results to
potentially operate more efficiently.",2021-11-24T21:14:58Z
5e168b861a333c68141cacceca155b280fdc427a,"StorageAdapter: Add getRowSignature method. (#11953)

Simplifies logic for callers that only want to get a list of all the
column names, or column names and types. Updated callers SegmentAnalyzer,
HashJoinSegmentStorageAdapter, and DruidSegmentReader.",2021-11-24T21:14:25Z
0354407655db335d6a99da3f7d81bd6aeae81fa0,"SQL INSERT planner support. (#11959)

* SQL INSERT planner support.

The main changes are:

1) DruidPlanner is able to validate and authorize INSERT queries. They
   require WRITE permission on the target datasource.

2) QueryMaker is now an interface, and there is a QueryMakerFactory that
   creates instances of it. There is only one production implementation
   of each (NativeQueryMaker and NativeQueryMakerFactory), which
   together behave the same way as the former QueryMaker class. But this
   opens the door to executing queries in ways other than the Druid
   query stack, and is used by unit tests (CalciteInsertDmlTest) to
   test the INSERT planning functionality.

3) Adds an EXTERN table macro that allows references external data using
   InputSource and InputFormat from Druid's batch ingestion API. This is
   not exposed in production yet, but is used by unit tests.

4) Adds a QueryFeature concept that enables the planner to change its
   behavior slightly depending on the capabilities of the execution
   system.

5) Adds an ""AuthorizableOperator"" concept that enables SqlOperators
   to require additional permissions. This is used by the EXTERN table
   macro.

Related odds and ends:

- Add equals, hashCode, toString methods to InlineInputSource. Aids in
  the ""from external"" tests in CalciteInsertDmlTest.
- Add JSON-serializability to RowSignature.
- Move the SQL string inside PlannerContext so it is ""baked into"" the
  planner when the planner is created. Cleans up the code a bit, since
  in practice, the same query is passed in every time to the
  same planner anyway.

* Fix up calls to CalciteTests.createMockQueryLifecycleFactory.

* Fix checkstyle issues.

* Adjustments for CI.

* Adjust DruidAvaticaHandlerTest for stricter test authorizations.",2021-11-24T20:14:04Z
bb3d2a433ac24aa28d84fa386523a5f98f9c923a,"Support filtering data in Auto Compaction (#11922)

* add impl

* fix checkstyle

* add test

* add test

* add unit tests

* fix unit tests

* fix unit tests

* fix unit tests

* add IT

* add IT

* add comments

* fix spelling",2021-11-24T18:56:38Z
48dbe0ea45aca63b352ce599a832ae2bec889957,"Handle null values in Range Partition dimension distribution (#11973)

This PR adds support for handling null dimension values while creating partition boundaries
in range partitioning.

This means that we can now have partition boundaries like [null, ""abc""] or [""abc"", null, ""def""].",2021-11-24T09:00:02Z
e6570cadc4eee13b450810b26d24bb52944829d0,"Update LifecycleModule.java (#11972)

Update the javadoc on LifecycleModule to be more clear about why the register methods exist and why they should always be used instead of Guice's eager instantiation.",2021-11-24T01:03:37Z
b6a0fbc8b6d677b391115c4ff7467774b0a5fb7c,"Break down CalciteQueryTest  (#11979)

* Refactor calciteQueryTest

* Move more tests to CalciteJoinQueryTest",2021-11-23T18:45:42Z
311d9a2370884f97599805cfdcf87c66107d4d50,Log correct hydrant count (#11976),2021-11-23T16:22:17Z
6607e4cc7538761dd0065a68e311f03e1a1ecd94,"Docs: Remove reference to deprecated field `targetPartitionSize` (#11974)

* Remove reference to deprecated field `targetPartitionSize`

* Fix spelling of LeaderLatch",2021-11-23T10:02:16Z
e22abb68b07487c0cd736ac3c0738420bcedf924,Update .spelling (#11977),2021-11-23T06:28:51Z
b5a25f24f238e409efc514dbf87fa915a49a1800,"Improve the DruidRexExecutor w.r.t handling of numeric arrays (#11968)

DruidRexExecutor while reducing Arrays, specially numeric arrays, doesn't convert the value from ExprResult's type to BigDecimal, which causes makeLiteral to cast the values. Also, if NaN or Infinite values are present in the array, the error is a generic NumberFormatException. For example:

SELECT ARRAY[1.11, 2.22] returns [1, 2]
SELECT SQRT(-1) throws a generic NumberFormatException instead of IAE

This PR introduces change to cast the numeric values to BigDecimal since Calcite's library understands that easily, and doesn't perform casts.",2021-11-23T06:10:59Z
ed0606db6964d0a0a34b2974841b113c4a20b5fa,"Docs - Corrected admonition issue (#11926)

* Corrected admonition issue

* Update data-formats.md

Removed all admonition bits, and took out sf linebreaks.

* Update data-formats.md

Changed the shocker line into something a little more practical.",2021-11-22T20:14:30Z
706d057ccca2f794a3aaf22d4ccfc08e5b369255,corrected leaderlatch name (#11966),2021-11-22T19:58:42Z
35b610ada76fb678bd79f797f47ffdbe0b49d58e,"QueryableIndexColumnSelectorFactory: Double-check cached column class. (#11957)

Important because an earlier call to getCachedColumn may have been
done with a different class, leading to a ClassCastException on the
second call. In the prior code, this could happen if a complex column
had makeDimensionSelector called on it after makeColumnValueSelector had
already been called.",2021-11-22T19:31:24Z
d6507c9428b5db6cba929d72b40197279aa3ea65,"PrioritizedExecutorService: Properly wrap on direct calls to ""execute"". (#11956)

Usually, ""execute"" is called by methods defined in the superclass
AbstractExecutorService, and the passed-in Runnable has been wrapped
by newTaskFor inside a PrioritizedListenableFutureTask. But this method
can also be called directly, and if so, the same wrapping is necessary
for the delegate to get a Runnable that can be entered into a priority
queue with the others.",2021-11-22T18:30:12Z
a4cb1de87a53c12d235920c35ec397331e8a36b7,get rid of class cast exception and add a new testcase for that issue (#11951),2021-11-22T16:44:20Z
0a9a90803140f67cbf6dee02f06476d18022904f,"Add inline native query example to tutorial (#11642)

* Add inline native query example to tutorial

Minor change to the tutorial that adds an example of a native HTTP query request body, and adds a link to the more detailed ""native query over HTTP"" documentation.

* cleanup

* Apply suggestions from code review.

Co-authored-by: sthetland <steve.hetland@imply.io>

Co-authored-by: sthetland <steve.hetland@imply.io>",2021-11-22T13:35:05Z
b1de56a3beb4ffc242784c54254811b5ba1904ce,"update Druid Chart README doc and removes unnecessary lock file (#11945)

* update Druid Chart README doc and removes unnecessary lock file

* update Druid Chart README doc and removes unnecessary lock file",2021-11-22T13:34:26Z
f1cf1c8f39c271cc0f0086cdb56dcc997b769821,"update count distinct tests (#11927)

Co-authored-by: wangxiao060 <wangxiao060@ke.com>",2021-11-22T13:34:00Z
0c0001579d7cd19685ff00c838887418b7085d7b,"Update compaction.md (#11937)

Removed superfluous tabs that caused issues in rendering
Added nav to the `inputSpec`",2021-11-22T13:33:47Z
3aee5d9ec32eaa31bccb7f5174de72d76774fbd2,"Fix: invalid JSON in ingestion spec doc example (#11880)

* Fix: invalid JSON in ingestion spec doc example

* Update ingestion-spec.md",2021-11-22T13:33:26Z
e77938b205559827ed67ed82d72ae010088746b1,"Add thread count to pre-push hook to speed up checking (#11808)

* Add thread count to accelerate checking

* add comment",2021-11-22T13:33:01Z
cfd60f1222e68181fe031d8c75ef99b0beaa4b6b,"Improve README for integration test (#11860)

* Optimize IT readme

* Resolve comments",2021-11-22T13:32:36Z
b13f07a05744ad1662b84bb9714b7fa51b798d53,"Harmonize local input sources; fix batch index integration test. (#11965)

* Make LocalInputSource.files a List instead of Set and adjust wikipedia_index_task to use file list.

Rationale: the behavior of wikipedia_index_task.json is order-dependent with regard to its input
files; some orders produce 4 segments and some produce 5 segments. Some integration tests, like
ITSystemTableBatchIndexTaskTest and ITAutoCompactionTest, are written assuming that the
4-segment case will always happen. Providing the file list in a specific order ensures that this
will happen as expected by the tests.

I didn't see a specific reason why the LocalInputSource.files parameter needed to be a Set, so
changing it to a List was the simplest way to achieve the consistent ordering. I think it will
also make the behavior make more sense if someone does specify the same input file multiple
times in a spec: I think they'd expect it to be loaded multiple times instead of deduped. This
is consistent with the behavior of other input sources like S3, GCS, HTTP.

* Sort files in LocalFirehoseFactory.",2021-11-22T06:26:31Z
cb0a2af6441fbcfed46934a70f834105f01775d8,"TestKafkaExtractionCluster: Shut down Kafka, ZK in @After. (#11963)",2021-11-20T23:17:05Z
2e3767bef07e2e7ab8f1858a55708e83a76ea7d1,Use the last ip as docker host ip (#11742),2021-11-20T05:31:39Z
b3502c3e50d7dc5e0f685e07e2fe2eb8ad22ef1d,"DruidViewMacro: Remove unused escalator field. (#11931)

* DruidViewMacro: Remove unused escalator field.

* Remove additional unused fields.",2021-11-20T00:06:29Z
f260bbed23c32edf7ae3f8caf30bbb1368053e27,"restore and deprecate AggregatorFactory methods (#11917)

* add back and deprecate aggregator factory methods so i can say i told you so when i delete these later

* rename to make less ambiguous, fix fill method

* adjust",2021-11-19T23:59:35Z
36ee0367ffa567c3af5d01fb33dbdf9870a39f8f,"Scan: Add ""orderBy"" parameter. (#11930)

* Scan: Add ""orderBy"" parameter.

This patch adds an API for requesting non-time orderings, although it
does not actually add the ability to execute such queries.

The changes are done in such a way that no matter how Scan query objects
are constructed, they will have a correct ""getOrderBy"". This will enable
us to switch the execution to exclusively use ""getOrderBy"" later on when
it's implemented.

Scan queries are serialized such that they only include ""order"" (time
order) if the ordering is time-based, and they only include ""orderBy"" if
the ordering is non-time-based. This maximizes compatibility with
the existing API while also providing a clean look for formatted queries.

Because this patch does not include execution logic, if someone actually
tries to run a query with non-time ordering, then they will get an error
like ""Cannot execute query with orderBy [quality ASC]"".

* SQL module fixes.

* Add spotbugs-exclude.

* Remove unused method.",2021-11-19T16:19:12Z
3c511360989a5710e47f7d40cdaa5873f60652d5,"Add worker category dimension (#11554)

* Add worker category as dimension in TaskSlotCountStatsMonitor

* Change description

* Add workerConfig as field

* Modify HttpRemoteTaskRunnerTest to test worker category in taskslot metrics

* Fixing tests

* Fixing alerts

* Adding unit test in SingleTaskBackgroundRunnerTest for task slot metrics APIs

* Resolving false positive spell check

* addressing comments

* throw UnsupportedOperationException for tasklotmetrics APIs in SingleTaskBackgroundRunner

Co-authored-by: Nikhil Navadiya <nnavadiya@twitter.com>",2021-11-19T06:59:07Z
a4353aa1f42a51a1d218547b3a033550e49e5025,"Fix bug Unrecognized token 'No': was expecting (JSON String,...) when… (#11934)

* Fix bug Unrecognized token 'No': was expecting (JSON String,...) when calling the API /druid/indexer/v1/task/taskId/reports and the report is not found

* Also log other non-OK statuses",2021-11-18T17:29:28Z
a04f99a95047fa417b9effeca109ed334cbbfa74,Indexer: Demote WARN to DEBUG for tasks that don't register Appenderators. (#11939),2021-11-18T15:54:43Z
29710789a438bd2c16bf2d1e556b96f8ccb57611,"Adding safe divide function (#11904)

* IMPLY-4344: Adding safe divide function along with testcases and documentation updates

* Changing based on review comments

* Addressing review comments, fixing coding style, docs and spelling

* Checkstyle passes for all code

* Fixing expected results for infinity

* Revert ""Fixing expected results for infinity""

This reverts commit 5fd5cd480dd29706dd6e4b3c736611fe8dc74c85.

* Updating test result and a space in docs",2021-11-17T16:22:41Z
d76e6467004094aef7279903e64532515fde1e95,"Fix TestServerInventoryView behavioral discrepancy. (#11932)

Unlike a real one, TestServerInventoryView would call segmentRemoved
any time _any_ segment was removed. It should only be called when _all_
segments have been removed.",2021-11-17T02:08:35Z
7f0bede878fbc0365c487235d60837566135333d,"autocompaction support for complex dimensions (#11924)

* autocompaction support for complex dimensions

* more test",2021-11-16T23:57:44Z
00c976a3fe675f56ac6146066892f8a6147ebc5a,only get bitmap index for string dictionary encoded columns (#11925),2021-11-16T23:50:02Z
54fead354612c6bd013a90665c8417426d401a74,sql skip reduce of complex literal expressions (#11928),2021-11-16T23:40:42Z
1487f558b1261a751c0bbcd3f551278498913c44,"Use a simple class to sanitize JDBC exceptions and also log them (#11843)

* Use a simple class to sanitize sanitizable errors and log them

The purpose of this is to sanitize JDBC errors, but can sanitize other errors
if they implement SanitizableError Interface

add a class to log errors and sanitize them
added a simple test that tests out that the error gets sanitized
add @NonNull annotation to serverconfig's ErrorResponseTransfromStrategy

* return less information as part of too many connections, and instead only log specific details

This is so an end user gets relevant information but not too much info since they might now how
many brokers they have

* return only runtime exceptions

added new error types that need to be sanitized
also sanitize deprecated and unsupported exceptions.

* dont reqrewite exceptions unless necessary for checked exceptions

add docs
avoid blanket turning all exceptions into runtime exceptions

* address comments, to fix up docs.

add more javadocs
add support UOE sanitization

* use try catch instead and sanitize at public methods

* checkstyle fixes

* throw noSuchStatement and NoSuchConnection as Avatica is affected by those

* address comments. move log error back to druid meta

clean up bad formatting and commented code. add missed catch for NoSuchStatementException
clean up comments for error handler and add comment explainging not wanting to santize avatica exceptions

* alter test to reflect new error message",2021-11-16T21:13:03Z
02b578a3dd0161366788ce5738fdadcdc528d89a,"Fixing a few typos and style issues (#11883)

* grammar and format work

* light writing touchup

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-11-16T18:13:35Z
3abca73ee8d12b3b2777dbcbcaa0a8da897c6fa6,Upgrade ORC to 1.7.1 (#11919),2021-11-15T17:13:03Z
3042c1776ccb5d54a0fc913cfcef8f60afb252f5,"upgrade app version to 0.22.0 (#11872)

Co-authored-by: Benedict Jin <asdf2014@apache.org>",2021-11-13T14:44:00Z
400e90dc93ba2ec3b3286c928afc9721588203b0,Remove Druid chart deprecation message and flag (#11897),2021-11-13T14:38:13Z
6f6e88e02ed0a767ed3d08bfeecca9ad16ce1cda,"SQL: Add type headers to response formats. (#11914)

This allows clients to interpret the results of SQL queries without having to guess types.",2021-11-13T06:00:57Z
f91868602d1bf848a6d71b7882c7ae3a79dcf24f,Remove stale warning for HTTP inputSource (#11907),2021-11-13T02:27:14Z
33a5cda061234028241f2eb341524eca3646881e,"Docs: Splits Kafka topic. Adds detailed example for kafka inputFormat (#11912)

* Splits Kafka topic according to function. Adds detailed example for kafka inputFormat

* Apply suggestions from code review

accept suggestions from review

Co-authored-by: sthetland <steve.hetland@imply.io>
Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Apply suggestions from code review

accept suggestions

Co-authored-by: sthetland <steve.hetland@imply.io>
Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* accept suggestions

* accept suggestions

* final typos and clarifications

* bringing forward some syntax fixes

Co-authored-by: sthetland <steve.hetland@imply.io>
Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2021-11-12T21:02:23Z
a13a96d5e090e3fc73df3419a19907112efa4fda,"Avoid materializing list of segment files when finding a partition file during shuffle (#11903)

* Avoid materializing list of segment files (it can cause OOM/memory pressure) as well as looping over the files.

* Validate subTaskId",2021-11-11T17:51:52Z
223c5692a8292a210a770dc0702f75b4484ae347,"Add dimension partitioningType to metrics to track usage of different partitioning schemes (#11902)

Add method ShardSpec.getType() to get name of shard spec type
List all names of shard spec types in the interface ShardSpec itself
for easy reference and maintenance
Add dimension partitioningType to metric segment/added/bytes",2021-11-11T13:04:27Z
fe2f7742f7828b986d63098b9da2aaabdbb5113b,"Fix incorrect comparison in RowSignature. (#11905)

PR #11882 introduced a type comparison using ==, but while it was in flight,
another PR #11713 changed the type enum to a class. So the comparison should
properly be done with ""equals"".",2021-11-11T12:30:42Z
57ed5127a783a461ae79098107fc367d3bc4a5c3,"Make subquery IDs more comprehensive (#11809)

There are 3 types of query IDs - id, subQueryId, sqlQueryId. Currently, whenever a query generates subqueries, the subquery's subQueryId is populated randomly. Also, subquery's Id is not set to the parent query Id. Therefore there is no way of linking the subqueries to the parent query, and one loses the ability to look at end to end view of the query.

This PR aims to implement following couple of things:

Populate the subqueries with it's parent's id (and sqlQueryId if present)
Populate the subqueryId such that it forms a hierarchical relationship amongs themselves. For example, if there is a query which launches a subquery, which in turn launches a couple of subqueries, then the ids and subQueryIds should have following structure.",2021-11-11T11:01:56Z
f9941c12c3f995a170398c74f374f53feff62cec,"Reduce list operation calls when pulling segments from S3 (#11899)

* Lazy lists

* Fix objectsummary init",2021-11-11T03:13:46Z
5baa22148e7d8c1ff0919e516656ec460457ab6c,"revert ColumnAnalysis type, add typeSignature and use it for DruidSchema (#11895)

* revert ColumnAnalysis type, add typeSignature and use it for DruidSchema

* review stuffs

* maybe null

* better maybe null

* Update docs/querying/segmentmetadataquery.md

* Update docs/querying/segmentmetadataquery.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* fix null right

* sad

* oops

* Update batch_hadoop_queries.json

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-11-11T02:46:29Z
cdd1c2876c10b1cae740c6b64d82eb59347f412b,"catch throwable because calcite is throwing an error not exception (#11892)

* catch throwable because calcite is throwing an error not exception

* add test case",2021-11-11T01:22:04Z
13bec7468a69b73bf254c0fe21407ee7296ecaf0,"Fix NPE for SQL queries when a query parameter is missing in the mid (#11900)

* Fix NPE for SQL queries when a query parameter is missing in the mid

* checkstyle

* Throw SqlPlanningException instead of IAE",2021-11-10T18:02:26Z
14b0b4aee2fde0d0600247c5a2a0f161972da907,"RowBasedSegment: Use Sequence instead of Iterable. (#11886)

* RowBasedSegment: Use Sequence instead of Iterable.

The main reason this is good is that Sequences can include baggage that
must be closed after iteration is finished. This enables creating
RowBasedSegments on top of closeable sequences of rows.

To preserve the optimization that allows reversing a List without
copying it, this patch also makes SimpleSequence its own class and allows
extracting the Iterable that was used to create it.

* Fix tests.",2021-11-10T14:06:52Z
db4d157be6f2f1d3eedbd99fe86fc03a835f7c10,"Add Finalization option to RowSignature.addAggregators. (#11882)

* Add Finalization option to RowSignature.addAggregators.

This make type signatures more useful when the caller knows whether it will
be reading aggregation results in their finalized or intermediate types.

* Fix call site.",2021-11-10T14:05:29Z
d3914c1a78ac4460665c910056b8976a31115483,"Ensure backward compatibility of multi dimension partitioning (#11889)

This PR has changes to ensure backward compatibility of multi dimension partitioning
such that if some middle managers are upgraded to a newer version, the cluster still
functions normally for single_dim use cases.",2021-11-10T04:53:34Z
a8805ab60d2cab7c9835c666a8dbe2f50da36f92,"add missing json type for ListFilteredVirtualColumn (#11887)

* add missing json type for ListFilteredVirtualColumn, and tests to try to avoid this happening again

* fixes

* ugly, but maybe this

* oops

* too many mappers",2021-11-10T01:25:12Z
a36a41da733ebb805b75797f6d2d21cd61c6be87,"Support routing data through an HTTP proxy (#11891)

* Support routing data through an HTTP proxy

* Support routing data through an HTTP proxy

This adds the ability for the HttpClient to connect through an HTTP proxy.  We
augment the channel factory to check if it is supposed to be proxied and, if so,
we connect to the proxy host first, issue a CONNECT command through to the final
recipient host and *then* give the channel to the normal http client for usage.

* add docs

* address comments

Co-authored-by: imply-cheddar <86940447+imply-cheddar@users.noreply.github.com>",2021-11-10T01:24:06Z
6c196a5ea2100b5b5c5e81fe75b30ad5d3a63f83,"Remove StorageAdapter.getColumnTypeName. (#11893)

* Remove StorageAdapter.getColumnTypeName.

It was only used by SegmentAnalyzer, and isn't necessary anymore due to
the recent improvements to ColumnCapabilities.

Also: tidy ColumnDescriptor.read slightly by removing an instanceof
check, and moving the relevant logic into ComplexColumnPartSerde.

* Fix spellings.",2021-11-09T23:18:07Z
324d4374f6b189ff367c24121c4927bb7bd087e6,"HashJoinEngine: Fix extraneous advance of left cursor. (#11890)

This could happen for right or full outer joins in certain cases. Tests
weren't catching this because existing Cursor implementations generally
ignore extraneous calls to ""advance"". So, to help catch this in tests,
extra state validations are also added to RowWalker, which is used by
RowBasedSegment.",2021-11-09T19:34:11Z
babf00f8e3a368e44afdd3eddf7356dad36a67b1,"Migrate File.mkdirs to FileUtils.mkdirp. (#11879)

* Migrate File.mkdirs to FileUtils.mkdirp.

* Remove unused imports.

* Fix LookupReferencesManager.

* Simplify.

* Also migrate usages of forceMkdir.

* Fix var name.

* Fix incorrect call.

* Update test.",2021-11-09T19:10:49Z
945a341acdf423496483ca611874e46e4f6ecbf5,"RowBasedCursor: Add column-value-reuse optimization. (#11884)

* RowBasedCursor: Add column-value-reuse optimization.

Most of the logic is in RowBasedColumnSelectorFactory, although in this
patch its only user is RowBasedCursor. This improves performance of
features that use RowBasedSegment, like lookup and inline datasources.
It's especially helpful for inline datasources that contain lengthy
arrays, due to the fact that the transformed array can be reused.

* Changes from code review.

* Fixes for ColumnCapabilitiesImplTest.",2021-11-09T15:18:09Z
ddc68c6a816bb1d0a0d657c80feee5e7fbd199b7,"Support changing dimension schema in Auto Compaction  (#11874)

* add impl

* add unit tests

* fix checkstyle

* add impl

* add impl

* add impl

* add impl

* add impl

* add impl

* fix test

* add IT

* add IT

* fix docs

* add test

* address comments

* fix conflict",2021-11-09T05:17:08Z
a5bd0b8cc023b771ef95f1e46c19961f50e05900,"RowAdapter: Add a default implementation for timestampFunction. (#11885)

Enables simpler implementations for adapters that want to treat the
timestamp as ""just another column"".",2021-11-08T18:25:13Z
7237dc837cf335558fa7981c4297d2d3b40a730e,"complex typed expressions (#11853)

* complex typed expressions

* add built-in hll collector expressions to get coverage on druid-processing, more types, more better

* rampage!!!

* more javadoc

* adjustments

* oops

* lol

* remove unused dependency

* contradiction?

* more test",2021-11-08T08:33:06Z
8e7e679984e95465f87dd97dad9022aacd00af04,"Add more metrics for Jetty server thread pool usage (#11113)

Add more metrics for jetty server thread pool usage so we know if we have allocated enough http threads to handle requests.",2021-11-07T11:21:44Z
2d77e1a3c6a8b5cec32649d0bd9fc64bff820610,"Add support for multi dimension range partitioning (#11848)

This PR adds support for range partitioning on multiple dimensions. It extends on the
concept and implementation of single dimension range partitioning.

The new partition type added is range which corresponds to a set of Dimension Range Partition classes. single_dim is now treated as a range type partition with a single partition dimension.

The start and end values of a DimensionRangeShardSpec are represented
by StringTuples, where each String in the tuple is the value of a partition dimension.",2021-11-06T07:20:17Z
1c12dd97dc39c447027baf578177fd5ea0a989a9,"Add javadocs to StringUtils.fromUtf8. (#11881)

They clarify that the methods advance the position of the buffer.",2021-11-05T22:27:24Z
897105676375112422bb362f4cc2163fc981a6ca,Properly count segment references in tests. (#11870),2021-11-05T19:49:10Z
907e4ca0c5624bc35cc81b7b465edb850b739ad5,"use correct DimensionSpec with for column value selectors created from dictionary encoded column indexers (#11873)

* use correct dimension spec for column value selectors of dictionary encoded column indexers",2021-11-05T08:51:15Z
1d6df48145ca37db9051e623761b56a5587e3081,"Warn if cache size of lookup is beyond max size (#11863)

Enhanced the ExtractionNamespace interface in lookups-cached-global core extension with the ability to set a maxHeapPercentage for the cache of the respective namespace. The reason for adding this functionality, is make it easier to detect when a lookup table grows to a size that the underlying service cannot handle, because it does not have enough memory. The default value of maxHeap for the interface is -1, which indicates that no maxHeapPercentage has been set. For the JdbcExtractionNamespace and UriExtractionNamespace implementations, the default value is null, which will cause the respective service that the lookup is loaded in, to warn when its cache is beyond mxHeapPercentage of the service's configured max heap size. If a positive non-null value is set for the namespace's maxHeapPercentage config, this value will be honored for all services that the respective lookup is loaded onto, and consequently log warning messages when the cache of the respective lookup grows beyond this respective percentage of the services configured max heap size. Warnings are logged every time that either Uri based or Jdbc based lookups are regenerated, if the maxHeapPercentage constraint is violated. No other implementations will log warnings at this time. No error is thrown when the size exceeds the maxHeapPercentage at this time, as doing so could break functionality for existing users. Previously the JdbcCacheGenerator generated its cache by materializing all rows of the underling table in memory at once; this made it difficult to log warning messages in the case that the results from the jdbc query were very large and caused the service to run out of memory. To help with this, this pr makes it so that the jdbc query results are instead streamed through an iterator.",2021-11-04T01:32:22Z
652e1491e08705b3fb2d73c4704ccf265165d50c,Update default values for tuning parameters in kinesis data loader (#11867),2021-11-02T18:21:28Z
cf27366b35a48d33147536af79decae8260f9fd7,Fixing typos in docker build scripts (#11866),2021-11-02T18:20:52Z
88bbc8e9e1124d8fb31b9db8b38077387951ebfd,"Add info for compation config dialog (#11847)

* add-info-for-compation-config-dialog

* correct the info

* remove space typo

* Revert ""remove space typo""

This reverts commit 28b28733ae21dda809b03995e804a65555ff9092.

* remove typo space

* update snapshots for jest-test",2021-11-02T17:03:29Z
a22687ecbebe79196f6a246cb62d2ddb19bbb7a3,"Add Broker config `druid.broker.segment.watchRealtimeNodes` (#11732)

The new config is an extension of the concept of ""watchedTiers"" where
the Broker can choose to add the info of only the specified tiers to its timeline.
Similarly, with this config, Broker can choose to skip the realtime nodes and
thus it would query only Historical processes for any given segment.",2021-11-02T07:08:42Z
5e1dc843d1b6dab41ec814e3acf44a23d3d97260,Fix quickstart link (#11864),2021-11-02T05:27:53Z
cd6867844f29b50d3931ce90396c2789e374058f,"docs: update helm flag (#11721)

In helm v3 the --name doesn't exist",2021-11-02T05:25:49Z
52539de521c891fdc36f5001d4a21670c9fbf535,fixes data validation error using correct way to comment the license under templates (#11839),2021-11-02T01:32:47Z
ba2874ee1f022d483961fe77a44b052b801f8902,"Support changing query granularity in Auto Compaction (#11856)

* add queryGranularity

* fix checkstyle

* fix test",2021-11-01T22:18:44Z
9bd2ccbb9be47a76f8dc59df8b12af165e01d742,SqlAggregationModuleTest now extends CalciteTestBase to ensure consistent string encoding (#11861),2021-11-01T22:11:40Z
7af36fecff5e4709c0a22d4f7cf06a12ac20ad62,Fix travis' link behind build badge (#11858),2021-11-01T14:26:30Z
90640bb316283d7377cb0f1fee3c45dd4b87e68a,"Support for hadoop 3  via maven profiles (#11794)

Add support for hadoop 3 profiles . Most of the details are captured in #11791 .
We use a combination of maven profiles and resource filtering to achieve this. Hadoop2 is supported by default and a new maven profile with the name hadoop3 is created. This will allow the user to choose the profile which is best suited for the use case.",2021-10-30T17:16:24Z
33d9d9bd74ade384ef5feb31748b989122deb160,"Add rollup config to auto and manual compaction (#11850)

* add rollup to auto and manual compaction

* add unit tests

* add unit tests

* add IT

* fix checkstyle",2021-10-29T17:22:25Z
a96aed021ea544498114359fcddf918a7ea79c21,"Fix indefinite WAITING batch task when lock is revoked (#11788)

* Fix indefinite WAITING batch task when lock is revoked

* Use revoked property on TaskLock

* Update TimeChunkLockAcquireAction to return TaskLock for revoked locks",2021-10-27T22:49:15Z
9ca8f1ec9768233e9f1bb6716b22db3f0592420b,"Remove IncrementalIndex template modifier (#11160)

Co-authored-by: Liran Funaro <liran.funaro@verizonmedia.com>",2021-10-27T20:10:37Z
fc95c928069537b3f3a6baf86f220b893d42fdc5,"Remove OffheapIncrementalIndex and clarify aggregator thread-safety needs. (#11124)

* Remove OffheapIncrementalIndex and clarify aggregator thread-safety needs.

This patch does the following:

- Removes OffheapIncrementalIndex.
- Clarifies that Aggregators are required to be thread safe.
- Clarifies that BufferAggregators and VectorAggregators are not
  required to be thread safe.
- Removes thread safety code from some DataSketches aggregators that
  had it. (Not all of them did, and that's OK, because it wasn't necessary
  anyway.)
- Makes enabling ""useOffheap"" with groupBy v1 an error.

Rationale for removing the offheap incremental index:

- It is only used in one rare scenario: groupBy v1 (which is non-default)
  in ""useOffheap"" mode (also non-default). So you have to go pretty deep
  into the wilderness to get this code to activate in production. It is
  never used during ingestion.
- Its existence complicates developer efforts to reason about how
  aggregators get used, because the way it uses buffer aggregators is so
  different from how every other query engine uses them.
- It doesn't have meaningful testing.

By the way, I do believe that the given way the offheap incremental index
works, it actually didn't require buffer aggregators to be thread-safe.
It synchronizes on ""aggregate"" and doesn't call ""get"" until it has
stopped calling ""aggregate"". Nevertheless, this is a bother to think about,
and for the above reasons I think it makes sense to remove the code anyway.

* Remove things that are now unused.

* Revert removal of getFloat, getLong, getDouble from BufferAggregator.

* OAK-related warnings, suppressions.

* Unused item suppressions.",2021-10-26T15:05:56Z
8ea9309168fe0b4e182991d4c71a27467675a769,"Web console: update typescript 4.4 for faster build speeds (#11725)

* update typescript

* do not show pagination when there is only one page

* update snapshots

* fix pagination",2021-10-26T04:53:38Z
4baebb231b595ac9d3da22b4fb3647d7470a8aed,"add `prometheus-emitter` to distribution (#11812)

* add `prometheus-emitter` to distribution

Signed-off-by: Đặng Minh Dũng <dungdm93@live.com>

* add `druid-momentsketch` to distribution

Signed-off-by: Đặng Minh Dũng <dungdm93@live.com>",2021-10-26T04:16:17Z
07a232d7b4cad698545bad7e23d58767a288149b,"Bump netty4 to 4.1.68; suppress CVE-2021-37136 and CVE-2021-37137 for netty3 (#11844)

* bump netty4 to 4.1.68

* suppress CVE-2021-37136 and CVE-2021-37137 for netty3

* license",2021-10-26T04:09:15Z
f2106d76219655bc7388fc3d812711adeacd1de2,"Web console: Add segment size in bytes column and hide it by default (#11797)

* add segment size column

* allow hidden default column

* fix tests

* update e2e tests",2021-10-25T20:24:44Z
000a5551fa1d8b46a825c52ad8e1bc753d5ff707,"docker mem reqs (#11827)

* docker mem reqs

* Update docs/tutorials/docker.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Sergio Ferragut <sergio.ferragut@imply.io>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-10-25T19:23:25Z
8276c031c52af5ab1bc8398c28f4fce2f0d72702,"Add druid.sql.approxCountDistinct.function property. (#11181)

* Add druid.sql.approxCountDistinct.function property.

The new property allows admins to configure the implementation for
APPROX_COUNT_DISTINCT and COUNT(DISTINCT expr) in approximate mode.

The motivation for adding this setting is to enable site admins to
switch the default HLL implementation to DataSketches.

For example, an admin can set:

  druid.sql.approxCountDistinct.function = APPROX_COUNT_DISTINCT_DS_HLL

* Fixes

* Fix tests.

* Remove erroneous cannotVectorize.

* Remove unused import.

* Remove unused test imports.",2021-10-25T19:16:21Z
43383c73a84006d54022629475053b122994d4f0,"refactor BalanceSegments#balanceServers to exit early if there is no work to be done  (#11768)

* remove useless call to balanceServers for move from decom servers when there are no decom servers

* refactor approach to this PR but accomplish the same thing",2021-10-25T15:06:35Z
abac9e39ed878daa06dde1483319c3b9f47ef33a,"Revert permission changes to Supervisor and Task APIs (#11819)

* Revert ""Require Datasource WRITE authorization for Supervisor and Task access (#11718)""

This reverts commit f2d6100124dbe7cbc92ad91d28bd12a1800a1f2a.

* Revert ""Require DATASOURCE WRITE access in SupervisorResourceFilter and TaskResourceFilter (#11680)""

This reverts commit 6779c4652d531b4d2c7056a69660f4e318f4aef6.

* Fix docs for the reverted commits

* Fix and restore deleted tests

* Fix and restore SystemSchemaTest",2021-10-25T09:20:38Z
10c5fa93f155f4ed0477f00a45c8c791f256b2b8,remove dupe sentence (#11821),2021-10-25T09:18:20Z
4354e43983c884ff83c6646c9dedf69afc307291,Use existing queryId if it exists (#11834),2021-10-24T02:02:39Z
d4cace385fa8f314a947aae4d9b55d0ef71cb111,"SQL: Allow Scans to be used as outer queries. (#11831)

* SQL: Allow Scans to be used as outer queries.

This has been possible in the native query system for a while, but the capability
hasn't yet propagated into the SQL layer. One example of where this is useful is
a query like:

  SELECT * FROM (... LIMIT X) WHERE <filter>

Because this expands the kinds of subquery structures the SQL layer will consider,
it was also necessary to improve the cost calculations. These changes appear in
PartialDruidQuery and DruidOuterQueryRel. The ideas are:

- Attach per-column penalties to the output signature of each query, instead of to
  the initial projection that starts a query. This encourages moving projections
  into subqueries instead of leaving them on outer queries.
- Only attach penalties to projections if there are actually expressions happening.
  So, now, projections that simply reorder or remove fields are free.
- Attach a constant penalty to every outer query. This discourages creating them
  when they are not needed.

The changes are generally beneficial to the test cases we have in CalciteQueryTest.
Most plans are unchanged, or are changed in purely cosmetic ways. Two have changed
for the better:

- testUsingSubqueryWithLimit now returns a constant from the subquery, instead of
  returning every column.
- testJoinOuterGroupByAndSubqueryHasLimit returns a minimal set of columns from
  the innermost subquery; two unnecessary columns are no longer there.

* Fix various DS operator conversions.

These were all implemented as direct conversions, which isn't appropriate
because they do not actually map onto native functions. These are only
usable as post-aggregations.

* Test case adjustment.",2021-10-24T00:18:43Z
98ecbb21cd5715139da40ede8b24759f8ea4e47a,"Remove CloseQuietly and migrate its usages to other methods. (#10247)

* Remove CloseQuietly and migrate its usages to other methods.

These other methods include:

1) New method CloseableUtils.closeAndWrapExceptions, which wraps IOExceptions
   in RuntimeExceptions for callers that just want to avoid dealing with
   checked exceptions. Most usages were migrated to this method, because it
   looks like they were mainly attempts to avoid declaring a throws clause,
   and perhaps were unintentionally suppressing IOExceptions.
2) New method CloseableUtils.closeInCatch, designed to properly close something
   in a catch block without losing exceptions. Some usages from catch blocks
   were migrated here, when it seemed that they were intended to avoid checked
   exception handling, and did not really intend to also suppress IOExceptions.
3) New method CloseableUtils.closeAndSuppressExceptions, which sends all
   exceptions to a ""chomper"" that consumes them. Nothing is thrown or returned.
   The behavior is slightly different: with this method, _all_ exceptions are
   suppressed, not just IOExceptions. Calls that seemed like they had good
   reason to suppress exceptions were migrated here.
4) Some calls were migrated to try-with-resources, in cases where it appeared
   that CloseQuietly was being used to avoid throwing an exception in a finally
   block.

🎵 You don't have to go home, but you can't stay here... 🎵

* Remove unused import.

* Fix up various issues.

* Adjustments to tests.

* Fix null handling.

* Additional test.

* Adjustments from review.

* Fixup style stuff.

* Fix NPE caused by holder starting out null.

* Fix spelling.

* Chomp Throwables too.",2021-10-24T00:03:21Z
44a7b091908f8602d28ce4bffe791764e0ee57ad,"Revert ""Missing Loader parameter in generate-binary-license and generate-binary-notice py scripts (#11815)"" (#11832)

This reverts commit a7ee646927cfbdfc7d68f899ac0a0b90fd91812d.",2021-10-23T15:34:26Z
b7a4c79314fb52e88f53f84b56c362e5abc205c2,"Null handling fixes for DS HLL and Theta sketches. (#11830)

* Null handling fixes for DS HLL and Theta sketches.

For HLL, this fixes an NPE when processing a null in a multi-value dimension.

For both, empty strings are now properly treated as nulls (and ignored) in
replace-with-default mode. Behavior in SQL-compatible mode is unchanged.

* Fix expectation.",2021-10-23T02:09:00Z
cb9bc15e95efdb61916056c0b9331facc5063275,"Fix task report streaming in https setups. (#11739)

* Fix task report streaming in https setups.

* Trivial change to re-trigger ITs.",2021-10-23T02:07:29Z
02b205737124f42f5cdebe7beec31dc66cfc9a8a,"extract generic dictionary encoded column indexing and merging stuffs (#11829)

* extract generic dictionary encoded column indexing and merging stuffs to pave the path towards supporting other types of dictionary encoded columns

* spotbugs and inspections fixes

* friendlier

* javadoc

* better name

* adjust",2021-10-23T00:31:22Z
43103632fbd87b672574bc76c66194cacbdf3dbe,"Docs - add description on time origin (#11826)

* add description on time origin

* reorder parameter descriptions

* add example of origin value",2021-10-22T21:57:13Z
741b4ed516044ef95e685419ef5cf4aa5c0d1e8e,"add output type information to ExpressionPostAggregator (#11818)

* add ColumnInspector argument to PostAggregator.getType to allow post-aggs to compute their output type based on input types

* add test for test for coverage

* simplify

* Remove unused imports.

Co-authored-by: Gian Merlino <gian@imply.io>",2021-10-22T20:52:51Z
df4894afff5efb31264e98f39f4f14dd934ecc3d,"Fallback to /sys/fs root when looking for cgroups (#11810)

ProcCgroupDiscoverer builds the cgroup directory by concatenating the proc mounts and proc cgroup paths together. This doesn't seem to work in Kubernetes if the execution context is within the container. Also this isn't consistent across all Linux OSes. The fix is to fallback to / as the root and it seems to work empirically.",2021-10-21T04:21:16Z
8cf1cbc4a9e586f0576705a22f2be0570f5c6986,"latest datasketches-java and datasketches-memory (#11773)

* latest datasketches-java and datasketches-memory

* updated versions of datasketches-java and datasketches-memory

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2021-10-20T06:42:30Z
a7ee646927cfbdfc7d68f899ac0a0b90fd91812d,Missing Loader parameter in generate-binary-license and generate-binary-notice py scripts (#11815),2021-10-19T18:55:17Z
187df58e303c9338e7c2e107d7725b4638404bb1,"better types (#11713)

* better type system

* needle in a haystack

* ColumnCapabilities is a TypeSignature instead of having one, INFORMATION_SCHEMA support

* fixup merge

* more test

* fixup

* intern

* fix

* oops

* oops again

* ...

* more test coverage

* fix error message

* adjust interning, more javadocs

* oops

* more docs more better",2021-10-19T08:47:25Z
17459a84d3bb8ccc4cbdfbb11197de5bdd0d6f32,Update link to helm chart quickstart guide (#11801),2021-10-19T08:40:40Z
7d4841471fd271ac24edde376f234abd00010233,"Optimize supervisor history retrieval for specific id (#11807)

Optimization. Fetch from the metadata store only the relevant history items for the requested supervisor id.",2021-10-19T08:38:25Z
9c15f938fdaa1665f54629d661aaeaf88d3b8908,"fix test issue where JettyTest would fail if JettyWithResponseFilterEnabledTest ran before it (#11803)

this change ensures that JettyTest is setting the properties it needs in case some other test overwrites them
this also changes up the ordering of the call for setProperties to call super's first in case super is setting the same property",2021-10-18T19:42:41Z
938c1493e53f61cb9e16f94616995dade0318b10,"edits to kafka inputFormat (#11796)

* edits to kafka inputFormat

* revise conflict resolution description

* tweak for clarity

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* style fixes

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/ingestion/data-formats.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>",2021-10-15T21:01:10Z
6089a168ea65867a0d2f8e2a83069ee34afda9dd,"Docs - update dynamic config provider topic (#11795)

* update dynamic config provider

* update topic

* add examples for dynamic config provider:

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/dynamic-config-provider.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/dynamic-config-provider.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/dynamic-config-provider.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/dynamic-config-provider.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>

* Update docs/operations/dynamic-config-provider.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Update docs/operations/dynamic-config-provider.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Update kafka-ingestion.md

Co-authored-by: Katya Macedo  <38017980+ektravel@users.noreply.github.com>
Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-10-15T00:51:32Z
4f62905be08173366f19dec7d3a8d6dc13f8ab32,Fix the travis build (#11799),2021-10-14T11:01:51Z
887cecf29e8b813029911fb05745764cce155c94,"Simplify ITHttpInputSourceTest to mitigate flakiness (#11751)

* Increment retry count to add more time for tests to pass

* Re-enable ITHttpInputSourceTest

* Restore original count

* This test is about input source, hash partitioning takes longer and not required thus changing to dynamic

* Further simplify by removing sketches",2021-10-12T16:51:27Z
adb223762867915b8c73a689c45ac70aae154bec,"Fix CVE-2021-3749 reported in security vulnerabilities job (#11786)

* Fix CVE-2021-3749 reported in security vulnerabilities job

* test why test fail

* update axios

* remove console log for testing",2021-10-09T06:02:58Z
7352c83e118cb3a0dfceda3087e9a94a5dd0c0bf,"Do not log sensitive property value if JsonConfigurator fails to parse (#11787)

* Do not log property value if JsonConfigurator fails to parse

* Add comment to explain log change

* Fix log language",2021-10-09T04:29:03Z
b6b42d39367f1ff1d7a1aa7e0064ca0ed9c2e92f,"Minor processor quota computation fix + docs (#11783)

* cpu/cpuset cgroup and procfs data gathering

* Renames and default values

* Formatting

* Trigger Build

* Add cgroup monitors

* Return 0 if no period

* Update

* Minor processor quota computation fix + docs

* Address comments

* Address comments

* Fix spellcheck

Co-authored-by: arunramani-imply <84351090+arunramani-imply@users.noreply.github.com>",2021-10-09T03:52:03Z
42e44269bee7119af21a99ef9d94b7a5fae6d9de,"Docs update for druid-basic-security (#11782)

* update druid-basic-security

* typo

* revisions from review",2021-10-08T21:45:09Z
c2c724c0656360a404c8309f8022f032346414a3,"Fix docs to explain that WRITE permissions do not include READ (#11785)

* Fix docs to explain that WRITE and READ are exclusive

* Fix indentation

* Use suggested doc style",2021-10-08T21:10:20Z
989297edc37e31814d817686f306b8aa2bd76861,"Docker copy before env and respect JAVA_OPTS (#11364)

* Change ordering of config file vs env vars in Docker

Currently if you provide a config file it negates any settings set via environment variables.
This change allows use of a config file as a base and allow environment variables to override.
Additionally this allows dynamic features such as DRUID_SET_HOST to function correctly when a config file has been provided.

* Custom JAVA_OPTS should override service jvm.config",2021-10-08T21:05:37Z
3ecbd3aec457c0b22410456c436b68345b2db5f0,"docs for changes to authorization in #11718 and #11720 (#11779)

* security recommendation

* Update docs/operations/security-overview.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/operations/security-user-auth.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/operations/security-user-auth.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update security-user-auth.md

add newline

* Update docs/operations/security-overview.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update security-overview.md

add suggestion for environment variable dynamic config provider

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>
Co-authored-by: Clint Wylie <cwylie@apache.org>",2021-10-08T21:04:04Z
f2d6100124dbe7cbc92ad91d28bd12a1800a1f2a,"Require Datasource WRITE authorization for Supervisor and Task access (#11718)

Follow up PR for #11680

Description
Supervisor and Task APIs are related to ingestion and must always require Datasource WRITE
authorization even if they are purely informative.

Changes
Check Datasource WRITE in SystemSchema for tables ""supervisors"" and ""tasks""
Check Datasource WRITE for APIs /supervisor/history and /supervisor/{id}/history
Check Datasource for all Indexing Task APIs",2021-10-08T05:09:48Z
45d0ecbefbaf82e74ca0c1a6766f17bdf4ca9d3f,"clarify hadoop input paths (#11781)

Co-authored-by: Katya Macedo <katya.macedo@imply.io>",2021-10-08T03:22:51Z
ad6609a606c0ca945c6aa57f1b7c40593ba29f80,"Kafka Input Format for headers, key and payload parsing (#11630)

### Description

Today we ingest a number of high cardinality metrics into Druid across dimensions. These metrics are rolled up on a per minute basis, and are very useful when looking at metrics on a partition or client basis. Events is another class of data that provides useful information about a particular incident/scenario inside a Kafka cluster. Events themselves are carried inside kafka payload, but nonetheless there are some very useful metadata that is carried in kafka headers that can serve as useful dimension for aggregation and in turn bringing better insights.

PR(https://github.com/apache/druid/pull/10730) introduced support of Kafka headers in InputFormats.

We still need an input format to parse out the headers and translate those into relevant columns in Druid. Until that’s implemented, none of the information available in the Kafka message headers would be exposed. So first there is a need to write an input format that can parse headers in any given format(provided we support the format) like we parse payloads today. Apart from headers there is also some useful information present in the key portion of the kafka record. We also need a way to expose the data present in the key as druid columns. We need a generic way to express at configuration time what attributes from headers, key and payload need to be ingested into druid. We need to keep the design generic enough so that users can specify different parsers for headers, key and payload.

This PR is designed to solve the above by providing wrapper around any existing input formats and merging the data into a single unified Druid row.

Lets look at a sample input format from the above discussion

""inputFormat"":
{
    ""type"": ""kafka"",     // New input format type
    ""headerLabelPrefix"": ""kafka.header."",   // Label prefix for header columns, this will avoid collusions while merging columns
    ""recordTimestampLabelPrefix"": ""kafka."",  // Kafka record's timestamp is made available in case payload does not carry timestamp
    ""headerFormat"":  // Header parser specifying that values are of type string
    {
        ""type"": ""string""
    },
    ""valueFormat"": // Value parser from json parsing
    {
        ""type"": ""json"",
        ""flattenSpec"": {
          ""useFieldDiscovery"": true,
          ""fields"": [...]
        }
    },
    ""keyFormat"":  // Key parser also from json parsing
    {
        ""type"": ""json""
    }
}

Since we have independent sections for header, key and payload, it will enable parsing each section with its own parser, eg., headers coming in as string and payload as json. 

KafkaInputFormat will be the uber class extending inputFormat interface and will be responsible for creating individual parsers for header, key and payload, blend the data resolving conflicts in columns and generating a single unified InputRow for Druid ingestion. 

""headerFormat"" will allow users to plug parser type for the header values and will add default header prefix as ""kafka.header.""(can be overridden) for attributes to avoid collision while merging attributes with payload.

Kafka payload parser will be responsible for parsing the Value portion of the Kafka record. This is where most of the data will come from and we should be able to plugin existing parser. One thing to note here is that if batching is performed, then the code is augmenting header and key values to every record in the batch.

Kafka key parser will handle parsing Key portion of the Kafka record and will ingest the Key with dimension name as ""kafka.key"".

## KafkaInputFormat Class: 
This is the class that orchestrates sending the consumerRecord to each parser, retrieve rows, merge the columns into one final row for Druid consumption. KafkaInputformat should make sure to release the resources that gets allocated as a part of reader in CloseableIterator<InputRow> during normal and exception cases.

During conflicts in dimension/metrics names, the code will prefer dimension names from payload and ignore the dimension either from headers/key. This is done so that existing input formats can be easily migrated to this new format without worrying about losing information.",2021-10-07T15:56:27Z
15789137a3f257081044d141f7e92c092d73b46a,"Add cpu/cpuset cgroup and procfs data gathering (#11763)

* cpu/cpuset cgroup and procfs data gathering

* Renames and default values

* Formatting

* Trigger Build

* Add cgroup monitors

* Return 0 if no period

* Update

Co-authored-by: arunramani-imply <84351090+arunramani-imply@users.noreply.github.com>",2021-10-07T03:27:36Z
8fd17fe0af7a77d4a5385c56c9c0c5b15c9d923a,fix a few typos in Kinesis doc (#11776),2021-10-07T02:43:20Z
1930ad1f47126210524a1a9b0bd56627355b51e0,"Implement configurable internally generated query context (#11429)

* Add the ability to add a context to internally generated druid broker queries

* fix docs

* changes after first CI failure

* cleanup after merge with master

* change default to empty map and improve unit tests

* add doc info and fix checkstyle

* refactor DruidSchema#runSegmentMetadataQuery and add a unit test",2021-10-06T16:02:41Z
b688db790bbb8b1f9e6f08fa1ef05550a23eea61,"Add Broker config `druid.broker.segment.ignoredTiers` (#11766)

The new config is an extension of the concept of ""watchedTiers"" where
the Broker can choose to add the info of only the specified tiers to its timeline.
Similarly, with this config, Broker can choose to ignore the segments being served
by the specified historical tiers. By default, no tier is ignored.

This config is useful when you want a completely isolated tier amongst many other tiers.

Say there are several tiers of historicals Tier T1, Tier T2 ... Tier Tn
and there are several brokers Broker B1, Broker B2 .... Broker Bm

If we want only Broker B1 to query Tier T1, instead of setting a long list of watchedTiers
on each of the other Brokers B2 ... Bm, we could just set druid.broker.segment.ignoredTiers=[""T1""]
for these Brokers, while Broker B1 could have druid.broker.segment.watchedTiers=[""T1""]",2021-10-06T04:36:32Z
104c9a07f0116b781ec509baab603e9023a52af1,"Fix broken anchor and heading levels in Kafka/Kinesis ingestion (#11748)

* Fix broken anchor and heading levels

* Fix CI",2021-10-06T02:30:50Z
635490d568f89c554c6a84ef5c19d8c243859bed,don't throw local storage errors (#11752),2021-10-06T01:49:16Z
c1e0e6825f6bed825534b2cd454872c1172bcdf0,auto refresh in foreground only (#11750),2021-10-06T01:48:23Z
2593df5e5bf99b4c3a083d18c3f39e361744bc7b,"add utility to aid in formatting release notes to be linkable (#11728)

* add utility to aid in formatting release notes to be linkable

* add docs",2021-10-06T01:26:41Z
621e5ac63fec7a38748d1b2fd0258edc987258fd,"docs: clarify RealtimeMetricsMonitor, HistoricalMetricsMonitor (#11565)

* docs: clarify RealtimeMetricsMonitor, HistoricalMetricsMonitor

* Update docs/configuration/index.md",2021-10-06T00:38:23Z
f60b3b3babdfbc714c8213b3120ad452a2ff9090,fix doc (#11772),2021-10-05T22:42:11Z
f82baf174e230c6f336096ad62fa81a2f2fa6b91,"Support real query cancelling for web console (#11738)

* Support real query cancelling for web console

* use uuid for queryId, create isSql reuse variable, and add catch for rejectionhandled promise

* remove delete api promise.then() response

* slove conflicts

* update read me with debug

* add degub code to test why CI failed

* included a druid extension called druid-testing-tools and it is not build nor loaded by default

* remove unuse variable

* remove debug log",2021-10-05T17:28:49Z
bc3b03871276e7228f194ad6089378f635628e14,"Update Apache Kafka client libraries to 3.0.0 (#11735)

Release notes:
https://downloads.apache.org/kafka/3.0.0/RELEASE_NOTES.html
https://blogs.apache.org/kafka/entry/what-s-new-in-apache6",2021-10-05T17:23:19Z
a31d99fb373cc6e7aad1abd79831b551e3fcdfde,"update docs with X-Druid-SQL-Query-Id (#11761)

* update docs with X-Druid-SQL-Query-Id

* review comments

* update header description

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-10-05T17:15:05Z
ffbe303828dae2ad3f7ee567a19c92354eb9171c,"Update balancer strategy recommendations (#11759)

* Update balancer strategy recommendations

* Update docs/configuration/index.md

* Update docs/configuration/index.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-10-05T16:47:37Z
3c4bba1478dcd95ca087ec161da55420c309875d,"Update kinesis-ingestion.md (#11767)

* Update kinesis-ingestion.md

It seems that we are declaring (a final int) recordsPerFetch as 400 and fetchDelayMillis as 0 in https://github.com/implydata/druid/blob/imply-2021.09/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskIOConfig.java#L36

```
public static final int DEFAULT_RECORDS_PER_FETCH = 4000;
public static final int DEFAULT_FETCH_DELAY_MILLIS = 0;
```

updating `recordsPerFetch` and `fetchDelayMillis` to actual default values as hardcoded above .

* Update docs/development/extensions-core/kinesis-ingestion.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-10-04T18:26:53Z
d02d2d9d56f668b9d45c51be4360ad0822fe4710,"Design/architecture doc touchups (#11762)

* rearrange design content

* casing consistency

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-10-04T18:09:35Z
129911a20ee8fcfbe9b693cdc7a5eb2ce63aebe8,"Add documentations for config to filter internal Druid-related messages from error response (#11755)

* add doc

* add doc

* address comments

* fix typo

* address comments",2021-10-01T10:49:02Z
1c0b76ba9349e00d330a2ed9c757a6836f79a6ea,Add killAndRestart for container for integration tests (#11754),2021-09-30T20:47:57Z
8cc58a4368428e155ba0d44490dfbbf4e98eb8fc,"Add sql query id to response header for failed sql query (#11756)

* add impl

* add impl",2021-09-30T06:43:39Z
11017ef00a5f02cf56737b96f402e05410449dc3,"support jdbc even if trailing / is missing (#11737)

* support jdbc even if trailing / is missing

* fix tests",2021-09-29T20:59:26Z
335b582377b2efed91f1e0baa31b92733b29299b,suppress hive-storage-api thrift security vulnerability (#11753),2021-09-29T06:54:13Z
a04b08e45ce82c6c27eca94b735e624349846bc5,"Add new config to filter internal Druid-related messages from Query API response (#11711)

* add impl

* add impl

* add tests

* add unit test

* fix checkstyle

* address comments

* fix checkstyle

* fix checkstyle

* fix checkstyle

* fix checkstyle

* fix checkstyle

* address comments

* address comments

* address comments

* fix test

* fix test

* fix test

* fix test

* fix test

* change config name

* change config name

* change config name

* address comments

* address comments

* address comments

* address comments

* address comments

* address comments

* fix compile

* fix compile

* change config

* add more tests

* fix IT",2021-09-29T05:55:49Z
988623b7ae845e588133854b92606e308ad56469,ITHttpInputSourceTest instability blocking the development pipeline (#11749),2021-09-28T20:42:01Z
c641657bae2e2738baa1dba2b8409a4fd599a4b7,"Fix router documentation for `druid.router.sql.enable` (#11716)

* Rename field, fix router documentation

* Add more lines to doc

* Apply doc suggestions from code review

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-09-28T17:24:13Z
9bff6bd70ec0994be220608532757c4ff0eb675a,"Upgrade ORC to 1.7.0 (#11726)

* Upgrade ORC to 1.7.0

* address comments

* address comments

* Add import",2021-09-27T20:20:09Z
2355a60419fe423faae9af7d95b97199b11309d7,"Avoid primary key violation in segment tables under certain conditions when appending data to same interval (#11714)

* Fix issue of duplicate key  under certain conditions when loading late data in streaming. Also fixes a documentation issue with skipSegmentLineageCheck.

* maxId may be null at this point, need to check for that

* Remove hypothetical case (it cannot happen)

* Revert compaction is simply ""killing"" the compacted segment and previously, used, overshadowed segments are visible again

* Add comments",2021-09-23T00:21:48Z
3525c0b195b450ce6c6a4588ea90b3489568c124,make authorization integration test more extensible (#11730),2021-09-22T15:15:30Z
5de26cf6d9ba94bdfb34ec9fcc76a2e7aa32db79,"add optional system schema authorization (#11720)

* add optional system schema authorization

* remove unused

* adjust docs

* doc fixes, missing ldap config change for integration tests

* style",2021-09-21T20:28:26Z
3c487ff5b473c9ac303f896de16c1b96a7efb93b,fix broken build (#11727),2021-09-21T15:59:51Z
5c3f3da146a3206f5619825586d9b677b1257965,"Add handoff wait time to IngestionStatsAndErrorsTaskReportData (#11090)

* Add handoff wait time to ingestion stats report. Refactor some code for batch handoff

* fix checkstyle

* Add assertion to AbstractITBatchIndexTask to make sure report reflects wait for segments happened

* add docs to the task reports section of doc",2021-09-21T05:48:44Z
392f0ca1b52ee66aa8b3affed58eb117bb44d910,"refactor sql authorization to get resource type from schema, resource type to be string (#11692)

* refactor sql authorization to get resource type from schema, refactor resource type from enum to string

* information schema auth filtering adjustments

* refactor

* minor stuff

* Update SqlResourceCollectorShuttle.java",2021-09-17T16:53:25Z
abd19a889698a2d3f54415eeb7b79323c258283d,"Docs - SYS query examples (#11673)

* Update sql.md

Added two example queries and adjusted formatting of one that was already there

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>

* Update sql.md

Co-authored-by: Frank Chen <frankchen@apache.org>",2021-09-17T15:27:34Z
22b41ddbbfe2b07b085e295ba171bcdc07e04900,"Task reports for parallel task: single phase and sequential mode (#11688)

* Task reports for parallel task: single phase and sequential mode

* Address comments

* Add null check for currentSubTaskHolder",2021-09-16T18:58:11Z
757720fae5b76841603bbeebe671292d9a989ad1,"Suppress stacktrace of InterruptedException in CommonCacheNotifier (#11715)

When CommonCachedNotifier is being stopped while the thread is waiting on updateQueue.take(),
an InterruptedException is thrown. The stack trace from this exception gives the wrong idea that something went wrong with the shutdown.",2021-09-16T16:57:08Z
5e092ccb9b9bd6f44b32637ecfd8d5317a542570,"add MV_FILTER_ONLY, MV_FILTER_NONE, ListFilteredVirtualColumn (#11650)

* add MV_FILTER_ONLY SQL function, and list filter virtual column

* MV_FILTER_NONE and more tests

* formatting

* o yeah, forgot can do easy thing

* style

* hmm why was that there

* test filtering on virtual column

* style

* meh

* do it right

* good bot",2021-09-16T16:31:53Z
3044372fc10671dc2ab2778dd5fd9cfa10b415b6,"improved JDBC logging (#11676)

* improve jdbc and router query debug logging

* log errors too

* no stacktrace

* trace those stacks",2021-09-16T08:28:16Z
1ae1bbfc4f582242bef898f4b500f7775260669f,"docs: delete / cancel query (#11708)

* draft delete query

* Update docs/querying/sql.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* Update docs/querying/sql.md

Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>

* address comments

* Update docs/querying/sql.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/querying/sql.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update sql.md

fix port for router

* Update sql.md

remove authorization until it is 403

* Update sql.md

add 403 message

Co-authored-by: Jihoon Son <jihoonson@apache.org>
Co-authored-by: Victoria Lim <vtlim@users.noreply.github.com>",2021-09-16T03:26:04Z
1370fcf9bfb19aa42d0d178e75be9af3173fd38a,dependency check with inhert instead of aggregate (#11709),2021-09-15T11:18:59Z
0cbd71ebda5888a1decafbbd1269cfa50a1c8065,"Return forbidden when authorization fails for sql query canceling (#11710)

Switching http response code for authorization failures for sql query canceling to match to sql query posting.",2021-09-15T10:32:19Z
7220d0466bc31dda4b5396742ad08e18f9e01250,"Fix truncation detectability for SQL array, object formats. (#11685)

The SQL ""array"" and ""object"" formats are intended to return invalid JSON
(lacking a ] terminator) if an error occurs midstream. This enables callers
to detect truncated responses. But JsonGenerators, by default, close JSON
arrays even when not explicitly told to.

This patch disables automatic array closing, which fixes the problem with
truncated response detection. It also adds tests for truncated responses
for all result formats.",2021-09-14T22:59:05Z
b54d989cdaeabef95c9a7f0f68f9b3fc03d73645,"Web console: Account for segment granularity all (#11697)

* accont for segment granularity all

* reverse granularity list to align with ranking",2021-09-14T03:46:11Z
6b959f09e529df5d02a0f9541094e9d122ac415d,"suppress false positive cve (#11699)

* suppress false positive cve

* update comment, dont run tests on changes to owasp-dependency-check-suppressions.xml",2021-09-14T03:45:38Z
779fe8e6adf8ab0c5b50da763d6cb885d4a9841e,fix segment timeline in FireFox (#11701),2021-09-14T03:45:18Z
ee009ec18e64516f8a447e50826f20f84b73af10,"Docs - ingestion task log config and process (#11678)

* Update index.md

Moved H4s underneath the H3 for the task log location and added hyperlinks.

* Update tasks.md

Added process information around log file generation, and subsumed text from the configuration guide into this explanatory text instead.

* Update tasks.md

.html > .md

* Update docs/ingestion/tasks.md

Co-authored-by: Frank Chen <frankchen@apache.org>

Co-authored-by: Frank Chen <frankchen@apache.org>",2021-09-13T22:49:09Z
f9329fbf9e2298cbfe9212f6a86ef0ea1cdce1de,"add clarification for maxSubqueryRows (#11687)

* add clarification for maxSubqueryRows",2021-09-13T18:49:30Z
531d11abaf8d7b64f2e1f30e02d21d2ae05f4d60,"Update description of batchProcessingMode (#11686)

* Update description of batchProcessingMode 

Update the description to explicitly mention a released version of Druid that the original version was referencing

* Update docs/configuration/index.md

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-09-10T23:55:48Z
f16cd2a815789ecb39be15f38342a0bb3afb5917,"Docs - granularities link back to segmentGranularity (#11672)

* Update granularities.md

Link-back to the ingestion spec as well as Native queries plus examples.

* Update docs/querying/granularities.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/granularities.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-09-10T17:40:11Z
6779c4652d531b4d2c7056a69660f4e318f4aef6,"Require DATASOURCE WRITE access in SupervisorResourceFilter and TaskResourceFilter (#11680)

* Require DATASOURCE WRITE access in SupervisorResourceFilter and TaskResourceFilter

* Remove unused imports

* Add SupervisorResourceFilterTest

* Verify mocks in test",2021-09-09T18:55:30Z
b3b96ce8ba9c4e77d38dd26176e2db67fd5c95c0,"add missing stuff to docs sidebar (#11681)

* add missing stuff to docs sidebar

* Update sidebars.json",2021-09-09T18:43:49Z
155a0c7a5ca73bbd9a564ed16e52538cc17484af,return underlying object instead of the Optional object (#11596),2021-09-09T05:30:57Z
3c46577eecf08526fe1612f384f3674afc909185,Fix moving average extension loading in middle manager and overlord (#11662),2021-09-09T05:09:22Z
bbb86c87313ff48cab141f8465d96b84384da311,"more tests for LimitedBufferHashGrouper (#11654)

* more tests for LimitedBufferHashGrouper

* fix style",2021-09-08T23:31:34Z
fe1d8c206af763b4aeef810a06feee7e1ba6bae3,bump version to 0.23.0-SNAPSHOT (#11670),2021-09-08T22:56:04Z
9efa6cc9c85aab66b325e9f37f7bad13826aea39,"Make persists concurrent with adding rows in batch ingestion (#11536)

* Make persists concurrent with ingestion

* Remove semaphore but keep concurrent persists (with add) and add push in the backround as well

* Go back to documented default persists (zero)

* Move to debug

* Remove unnecessary Atomics

* Comments on synchronization (or not) for sinks & sinkMetadata

* Some cleanup for unit tests but they still need further work

* Shutdown & wait for persists and push on close

* Provide support for three existing batch appenderators using batchProcessingMode flag

* Fix reference to wrong appenderator

* Fix doc typos

* Add BatchAppenderators class test coverage

* Add log message to batchProcessingMode final value, fix typo in enum name

* Another typo and minor fix to log message

* LEGACY->OPEN_SEGMENTS, Edit docs

* Minor update legacy->open segments log message

* More code comments, mostly small adjustments to naming etc

* fix spelling

* Exclude BtachAppenderators from Jacoco since it is fully tested but Jacoco still refuses to ack coverage

* Coverage for Appenderators & BatchAppenderators, name change of a method that was still using ""legacy"" rather than ""openSegments""

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-09-08T20:31:52Z
dcee99df7871946f1f697817e84f30ce79ea65e3,"Improve error message when buckets are null for cloud objects (#11644)

* Add error message

* Add test

* Checkstyle",2021-09-08T00:31:17Z
60efbb51d0282c1af9c132e7bd37a43e69867622,Add test for IS NOT NULL filter on join column in left join (#11636),2021-09-06T06:50:41Z
82049bbf0a6409c09889ba9b3ea6131c9da86705,"Cancel API for sqls (#11643)

* initial work

* reduce lock in sqlLifecycle

* Integration test for sql canceling

* javadoc, cleanup, more tests

* log level to debug

* fix test

* checkstyle

* fix flaky test; address comments

* rowTransformer

* cancelled state

* use lock

* explode instead of noop

* oops

* unused import

* less aggressive with state

* fix calcite charset

* don't emit metrics when you are not authorized",2021-09-05T17:57:45Z
59d257816b85dbeeca336b8e25d341d67bbc5697,"fix goldilocks bug with HashVectorGrouper improperly initializing memory (#11649)

* fix goldilocks bug with HashVectorGrouper improperly initializing memory that causes failure when there exists room to only grow one time

* fix unintended change

* cleanup",2021-09-02T09:25:26Z
3ff1c2b8ce7fbcf6e184b0e25fe81691cca18e6c,Fix bug which produces vastly inaccurate query results when forceLimitPushDown is enabled and order by clause has non grouping fields (#11097),2021-09-02T04:19:38Z
7e90d00cc0e3e9a01d1a3a7730f5bbf6d276999b,"Configurable maxStreamLength for doubles sketches (#11574)

* Configurable maxStreamLength for doubles sketches

* fix equals/hashcode and it test failure

* fix test

* fix it test

* benchmark

* doc

* grouping key

* fix comment

* dependency check

* Update docs/development/extensions-core/datasketches-quantiles.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/querying/sql.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-31T21:56:37Z
fc86a7a97fe887fba73df3ad19aaa8cc50e422a2,fix custom coordinator duty (#11641),2021-08-31T07:04:00Z
6997fd787de50dbb2dd69bfd9994626583d4cdaa,"Add functionality for integration test to run command inside the Docker container (#11640)

* add run cmd for IT

* fix checksyle

* fix checksyle",2021-08-31T06:26:26Z
2405a9f25ed649e7db62107bddfe9e569c450e7e,"Fix create segment phase of batch ingestion to take segment identifiers that have a non UTC interval… (#11635)

* Fix create segment phase of batch ingestion to take segment identifiers with non UTC time zones

* Fix  comment and LGTM forbidden error",2021-08-31T06:19:07Z
adeae3960fa64564ca8955742d9445ab5c7e563e,"DataSchema: improve rollup WARN message (#11631)

* improve rollup WARN message

* Update server/src/main/java/org/apache/druid/segment/indexing/DataSchema.java

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update server/src/main/java/org/apache/druid/segment/indexing/DataSchema.java

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update server/src/main/java/org/apache/druid/segment/indexing/DataSchema.java

Co-authored-by: Caroline <caroline@Caroline-Harris.attlocal.net>
Co-authored-by: Suneet Saldanha <suneet@apache.org>
Co-authored-by: Caroline <caroline@Caroline-Harris.local>",2021-08-31T03:22:11Z
c7e5fee4527c0d91b6fd12be58a67eb081984a44,"Fix an exception when using redis cluster as cache (#11369)

* Redis mget problem in cluster mode

* Format code

* push down implementation of getBulk to sub-classes

* Add tests

* revert some changes

* Fix intelllij inspections

* Fix comments

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Update extensions-contrib/redis-cache/src/main/java/org/apache/druid/client/cache/RedisClusterCache.java

Co-authored-by: Benedict Jin <asdf2014@apache.org>

* Update extensions-contrib/redis-cache/src/test/java/org/apache/druid/client/cache/RedisClusterCacheTest.java

Co-authored-by: Benedict Jin <asdf2014@apache.org>

* Update extensions-contrib/redis-cache/src/main/java/org/apache/druid/client/cache/AbstractRedisCache.java

Co-authored-by: Benedict Jin <asdf2014@apache.org>

* returns empty map in case of internal exception

Co-authored-by: Benedict Jin <asdf2014@apache.org>",2021-08-30T23:59:53Z
6d14ea2d1490e1d5420c8c7567af12ed6fc85faf,"Dynamic auto scale Kinesis-Stream ingest tasks (#10985)

* ready to test

* revert misc.xml

* document kinesis md

* Update docs/development/extensions-core/kafka-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update docs/development/extensions-core/kinesis-ingestion.md

* Update kafka-ingestion.md

remove leading `

* Update kinesis-ingestion.md

add missing `

Co-authored-by: yuezhang <yuezhang@freewheel.tv>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-30T22:44:29Z
e4ec3527a4c41b56c2dc3fefea89a2469975aff3,"Web console: Improve the lookup view UX (#11620)

* polish lookup view UX

* update snapshots

* add snapshot to git

* fixes

* update sanpshots

* restore column treatment

* update snapshot

* add gs",2021-08-30T21:36:23Z
a09688862e9257b6651ca35ee0e0515940ba7450,"fix integration tests (#11638)

* Update Dockerfile

* Update docker_build_containers.sh

* Update Dockerfile",2021-08-30T20:53:13Z
e1d80d05a2ba045e333ed182a906f2959baa9f4c,"Docs - note when partitioning using concatenated dimensions (#11506)

LGTM

* Update native-batch.md

Knowledge from https://the-asf.slack.com/archives/CJ8D1JTB8/p1595434977062400

* Update native-batch.md

* Fixed broken link + some grammar

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* Update native-batch.md

Some grammatical wizardry.

* Update native-batch.md

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/ingestion/native-batch.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Apply suggestions from code review

remove orphaned links

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>
Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-30T18:59:24Z
ca5e55cc8ca558ab6ced785f0b8cdced2094a508,"Fix TRIM help broken in Console SQL Editor (#11628)

* delete escape

* bug fix

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-08-30T05:04:35Z
ec6c6e2d535ab84ea5441e752bd953887398cc88,"Docs: Clarify segmentMetadata cardinality, minmax, and size behavior. (#11549)

* Docs: Clarify segmentMetadata cardinality, minmax, and size behavior.

* Further clarifications.

* Update docs/querying/segmentmetadataquery.md

style update

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-26T22:39:40Z
9032a0b079f1d8665cac1cf51fb5ab609153bd7d,"updates Kafka and Kinesis to use . Fixes some typos and other style i… (#11624)

* updates Kafka and Kinesis to use . Fixes some typos and other style issues for Kafka.

* fix spelling

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kinesis-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kinesis-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* address comments

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2021-08-26T20:22:30Z
ac2b65e837731074b9604b0cc290e448adcba703,"fixes possible data truncation (#11462)

* fixes possible data truncation

* fixes possible data truncation

* add unit test case to catch the possible data truncation",2021-08-26T12:16:26Z
2a658acad4cd419951d2d9d3f17a67cc26f18727,"Put sleep in an extension (#11632)

* Put sleep in an extension

* dependency",2021-08-25T08:27:45Z
1d5438ae7c4ee93b47f7b9bae52b0ce1dd675880,"Add details to the Docker tutorial (#11463)

* Add details to the Docker tutorial

Added links, explanations and other details to the Docker
tutorial to make it easier for first-time users.

* Fix spelling error

And add ""Jupyter"" to the spelling dictionary.

* Update docs/tutorials/docker.md

* Update docs/tutorials/docker.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/tutorials/docker.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/tutorials/docker.md

* Update docs/tutorials/docker.md

Co-authored-by: sthetland <steve.hetland@imply.io>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>
Co-authored-by: sthetland <steve.hetland@imply.io>",2021-08-24T15:49:29Z
adb2f5c884773f285cd18152e5845da97131eb33,"Add prometheus-emitter docs (#11618)

* Add prometheus-emitter docs

* Update docs/development/extensions.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-24T15:48:03Z
78b4be467eb5c93dc63e171b9ed758140c40b84b,"Add sleep function for testing (#11626)

* Add sleep function for testing

* sql function

* javadoc",2021-08-24T07:30:31Z
59e560e24d1de85297d86cf928eae65608f806c0,"fix for numShards description (#11611)

Co-authored-by: devin-kim <devin.kim@kakaocorp.com>",2021-08-23T21:05:03Z
66964a261b99c532103c2c9c900a909ca6d6aa38,"fixes syntax for TRIM (#11619)

* fixes syntax for TRIM

* trim erroneous quote

* fix typo",2021-08-23T18:44:19Z
b36242b404c77453b3464b17da32be076e57d39e,"Fix bug in Variance Buffer Aggregator resulting in intermittent NaN when druid.generic.useDefaultValueForNull=false (#11617)

* Fix bug in Variance Aggregator resulting in intermittent NaN when druid.generic.useDefaultValueForNull=false

* fix checkstyle

* address comments",2021-08-20T16:13:51Z
ec334a641b3f56077d2693980128e872f08d8611,"MySQL extension with MariaDB connector docs (#11608)

* add docs for mariadb support via mysql extensions

* add logging so you know what druid knows

* homogenize

* spelling

* missed a couple",2021-08-19T08:52:26Z
38ebaee0fd8716e133a982a4782af706c4d22247,"VirtualColumnRegistry reuse virtual column should take account of value type (#11546)

Co-authored-by: huangqixiang.871 <huangqixiang.871@bytedance.com>",2021-08-19T08:46:27Z
ce4dd48bb8b33110f66737820aec936f536fa75c,"Support custom coordinator duties (#11601)

* impl

* fix checkstyle

* fix checkstyle

* fix checkstyle

* add test

* add test

* add test

* add integration tests

* add integration tests

* add more docs

* address comments

* address comments

* address comments

* add test

* fix checkstyle

* fix test",2021-08-19T04:54:11Z
91cd5734727f2b0fc8aab999c711f3d5babaf82e,"fixes web console introduction and addresses linking issues (#11609)

* fixes web console introduction and addresses  linking issues

* fix merge conflict",2021-08-18T15:37:05Z
504e54402becd88dba5c17a82f80112dc0c09b28,"update default compression format for bitmap (#11610)

Co-authored-by: azheng <azheng@adobe.com>",2021-08-18T09:24:27Z
d1bad928804e727a34fa440db00f7b748b979843,Made the instructions of adding extra resources as part of extensions simpler (#11577),2021-08-17T12:03:55Z
332e68edb58a4b7ce6930365437229ec4254bd44,improve the metric definition (#11602),2021-08-17T05:31:42Z
bf863343f824988cf2af8d51a1e7e39448a9568a,"delete some code (#11552)

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-08-16T17:40:40Z
4e5f9cdacf43248abdb2d1b632e30b3962957b72,"Add pushes to DataSketches in SQL docs. (#11578)

* Add pushes to DataSketches in SQL docs.

These notices were already in the native docs, but they were missing
from the SQL docs.

* Grammar fix.",2021-08-16T17:38:56Z
177264c6490871e6a557f087270dfbd29723e60b,"resultFormat name in camel case (#11585)

* resultFormat name in camel case

* test for letter case",2021-08-14T10:30:21Z
776ddf76f441d5cf3d0368a19a3aa0952d31f645,"Bump parquet.version from 1.11.1 to 1.12.0 (#11346)

* Bump parquet.version from 1.11.1 to 1.12.0

Bumps `parquet.version` from 1.11.1 to 1.12.0.

Updates `parquet-column` from 1.11.1 to 1.12.0
- [Release notes](https://github.com/apache/parquet-mr/releases)
- [Changelog](https://github.com/apache/parquet-mr/blob/master/CHANGES.md)
- [Commits](https://github.com/apache/parquet-mr/compare/apache-parquet-1.11.1...apache-parquet-1.12.0)

Updates `parquet-avro` from 1.11.1 to 1.12.0
- [Release notes](https://github.com/apache/parquet-mr/releases)
- [Changelog](https://github.com/apache/parquet-mr/blob/master/CHANGES.md)
- [Commits](https://github.com/apache/parquet-mr/compare/apache-parquet-1.11.1...apache-parquet-1.12.0)

Updates `parquet-hadoop` from 1.11.1 to 1.12.0
- [Release notes](https://github.com/apache/parquet-mr/releases)
- [Changelog](https://github.com/apache/parquet-mr/blob/master/CHANGES.md)
- [Commits](https://github.com/apache/parquet-mr/compare/apache-parquet-1.11.1...apache-parquet-1.12.0)

---
updated-dependencies:
- dependency-name: org.apache.parquet:parquet-column
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: org.apache.parquet:parquet-avro
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: org.apache.parquet:parquet-hadoop
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update license

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-08-14T02:17:57Z
8aaefb91e3fa7721e28f3c9d24358ea419b9039b,"Docs - MiddleManager Affinity ""strong"" definition (#11480)

* Affinity ""strong"" definition

Reworded ""strong"" to emphasise meaning and consequences - OTBO https://the-asf.slack.com/archives/CJ8D1JTB8/p1609558156092800

* Spelling corrections

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-14T02:17:16Z
95c5bc3a6ddeb2ce10f696a352bcda492dba853a,"Clarify when changes to credentialIterations take effect (#11590)

This change updates doc to clarify when and how a change to druid.auth.authenticator.basic.credentialIterations takes effect: changes apply only to new users or existing users upon changing their password via the credentials API, which may not be the expectation.",2021-08-14T00:02:07Z
c7b46671b311e841f7ddc3596dc4e9b4cf96b24d,"option to use deep storage for storing shuffle data (#11507)

Fixes #11297.
Description

Description and design in the proposal #11297
Key changed/added classes in this PR

    *DataSegmentPusher
    *ShuffleClient
    *PartitionStat
    *PartitionLocation
    *IntermediaryDataManager",2021-08-13T20:40:25Z
e40be0ae2813722a08d185e1f69255eff87094e5,"Add SQL functions to format numbers into human readable format (#10635)

* add binary_byte_format/decimal_byte_format/decimal_format

* clean code

* fix doc

* fix review comments

* add spelling check rules

* remove extra param

* improve type handling and null handling

* remove extra zeros

* fix tests and add space between unit suffix and number as most size-format functions do

* fix tests

* add examples

* change function names according to review comments

* fix merge

Signed-off-by: frank chen <frank.chen021@outlook.com>

* no need to configure NullHandling explicitly for tests

Signed-off-by: frank chen <frank.chen021@outlook.com>

* fix tests in SQL-Compatible mode

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Resolve review comments

* Update SQL test case to check null handling

* Fix intellij inspections

* Add more examples

* Fix example",2021-08-13T17:27:49Z
6524d838d71829a7d182b608fdbd9e1b5357f54f,"Docs refactor of ingestion. Carries #11541 (#11576)

* Docs refactor of ingestion. Carries #11541

* Update docs/misc/math-expr.md

* add Apache license

* fix header, add topics to sidebar

* Update docs/ingestion/partitioning.md

* pick up changes to  and  md from c7fdf1d, #11479

Co-authored-by: Suneet Saldanha <suneet@apache.org>
Co-authored-by: Jihoon Son <jihoonson@apache.org>",2021-08-13T15:42:03Z
aaf0aaad8f3936358ab77415df7dcc68d3ee7800,"Enable routing of SQL queries at Router (#11566)

This PR adds a new property druid.router.sql.enable which allows the
Router to handle SQL queries when set to true.

This change does not affect Avatica JDBC requests and they are still routed
by hashing the Connection ID.

To allow parsing of the request object as a SqlQuery (contained in module druid-sql),
some classes have been moved from druid-server to druid-services with
the same package name.",2021-08-13T13:14:39Z
ccd362d228ba996b51bd406845f824571871cf40,Fix FileIteratingFirehoseTest to extend NullHandlingTest (#11581),2021-08-12T15:26:04Z
9da7199142594aa952649949f99d7631e588aa4b,Lock hadoop dependencies to 2.8.5 (#11583),2021-08-12T09:46:47Z
faebefecae65e92ae13c95cfd1248e8a855917c4,Docs: add pointers from api-reference to sql docs. (#11548),2021-08-11T16:00:33Z
2a6421d0d970bd788cdf56dd6763ddbf0aa22d6f,"Suppress CVEs for jdom2, kafka-clients, libthrift, solr-solrj (#11572)",2021-08-11T10:16:57Z
640f63094a8ddc36a22f242215ee0407b31de37a,"fix little typo (#11573)

* fix little typo

* Update docs/misc/math-expr.md

Co-authored-by: Charles Smith <techdocsmith@gmail.com>

Co-authored-by: Charles Smith <techdocsmith@gmail.com>",2021-08-11T04:43:01Z
9af7ba9d2a35e0fe7fc60cb0c737d10ffa794190,"STRING_AGG SQL aggregator function (#11241)

* add string_agg

* oops

* style and fix test

* spelling

* fixup

* review stuffs",2021-08-10T20:47:09Z
2004a94675df8bd6596686445d4b5364a1697ed0,"Cleanup test dependencies in hdfs-storage extension (#11563)

* Cleanup test dependencies in hdfs-storage extension

* Fix working directory in LocalFileSystem in indexing-hadoop test",2021-08-10T14:52:32Z
bef6f43e3d219ac910a04255897cd799692abb54,"Update math-expr.md (#11254)

* Update math-expr.md",2021-08-10T00:46:05Z
bf5d829b718b78a2d06d74bedd52577159b84d53,"Add more guidelines on the use of aliyun-oss-extensions (#11420)

* Add more description

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Update prefixes usage and Add troubleshooting section

* Add endpoint configuration recommendation

* Fix link

* resolve review comments",2021-08-10T00:27:35Z
941c5ffb05078d8abf6da1a133509c07bca56998,"clarify JVM tmp dir requires execute on files (#11542)

* clarify JVM tmp dir requires execute on files

* code SysMonitor for spellcheck",2021-08-10T00:25:10Z
f2ac6cd96edfacca6ba7880d5eb9c532ea0b95f2,"fix parse exception handling for stream parsers (#11556)

* fix parse exception handling

* fix style and inspections",2021-08-09T19:40:44Z
06bae29979eed20ccc4a75374a5259af02c71014,"Fix ingestion task failure when no input split to process (#11553)

* fix ingestion task failure when no input split to process

* add IT

* fix IT",2021-08-09T16:11:08Z
3e7cba738ff543941cf37af2ee7b9bafd68a530b,"Minor edits to architecture page to improve flow (#11465)

* Minor edits to architecture page to improve flow

* Fixed spelling issue",2021-08-09T14:48:29Z
2eff0902aa1865d0878dc53a9fca93fb1e5c0afa,"suppress kafka-clients CVE (#11562)

The CVE details are here - https://nvd.nist.gov/vuln/detail/CVE-2021-26291. I am marking it suppressed since we are only using kafka-clients jar in druid. We use maven-artifact jar ourselves but it is only used for comparing versions",2021-08-09T13:32:25Z
e9d964d504cb510226d58b2caa299cecfec99e15,"Improve concurrency between DruidSchema and BrokerServerView (#11457)

* Improve concurrency between DruidSchema and BrokerServerView

* unused imports and workaround for error prone faiure

* count only known segments

* add comments",2021-08-06T21:07:13Z
39a3db79437a4d331bd68da6c627ad3c83019858,Add unit test for config `druid.broker.segment.watchedTiers` (#11555),2021-08-06T18:42:40Z
59c8430d296d14f8d63748770f7a04ec67818fda,"change document (#11545)

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-08-06T14:57:12Z
257bc5c62fda5966e6c22b2d95be3fcf433be1c8,"Web console: fix count aggregation input in the data loader (#11485)

* add typeIs

* fix unused field in count metric

* better types

* typos

* work with readonly types

* factor out apply cancel buttons

* form editor

* selection type

* unsaved changes

* form editor spec

* tidy up sampler

* more menu controls

* update e2e test",2021-08-05T19:30:30Z
60e3955adba81153906f23f394329d380b6a39f2,"Docs - clarify datasource API sources (#11489)

* Update api-reference.md

Added note OTBO Druid slack

* Update api-reference.md

Changed to an alternative explanation

* Update api-reference.md

Oops fixed.

* Update docs/operations/api-reference.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/operations/api-reference.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-08-05T18:29:33Z
e423e99997e0faf54856fb6b525bc0c03471e78a,"Update default maxSegmentsInNodeLoadingQueue (#11540)

* Update default maxSegmentsInNodeLoadingQueue

Update the default maxSegmentsInNodeLoadingQueue from 0 (unbounded) to 100.

An unbounded maxSegmentsInNodeLoadingQueue can cause cluster instability.
Since this is the default druid operators need to run into this instability
and then look through the docs to see that the recommended value for a large
cluster is 1000. This change makes it so the default will prevent clusters
from falling over as they grow over time.

* update tests

* codestyle",2021-08-05T18:26:58Z
32579137378a9c2e44784489c81b358eaeb75f29,"Improve query error logging (#11519)

* Improve query error logging

* add docs

* address comments

* address comments",2021-08-05T15:51:09Z
4470ca6a92c0f47c80a949134f5462589daedcee,"Fix hostname validation not skipping with `druid.client.https.validateHostnames=false` in java 8u275 and later (#11538)

* fix skip hostname validation in java 8u275 and later

* add unit test

* fix checkstyle",2021-08-05T08:42:55Z
23d7d71ea5cb104b47f46b8bed359687f9ebc86c,"Add Environment Variable DynamicConfigProvider (#11377)

* add_environment_variable_DynamicConfigProvider

* fix code

* code fixed

* code fixed

* add document

* fix doc

* fix doc

* add more unit test

* fix style

* fix document

* bug fixed

* fix unit test

* fix comment

* fix test

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-08-05T03:26:58Z
578625b77167d78d57112d4f4c2d8ae91c65c25d,"Replace TestInputRowHandler with mocking object (#11529)

* Replace TestInputRowHandler with mocking object

* Change EasyMock object to Mockito object. Make test logic concise

* correct code format",2021-08-04T23:45:22Z
361bfdcaa5f79e531f4eba2359cf1f967606c8e6,"Better logging for lookups (#11539)

* Better logging for lookups

The default pollPeriod of 0 means that lookups are loaded once only at startup

Add a warning message to warn operators about this. I suspect that most
operators using jdbc or uri would expect eventual consistency with the source
of the lookups if using jdbc or uri. So make this a warning to make it easier
to debug if an operator notices a data inconsistency issue.

* oops",2021-08-04T23:44:54Z
590583699f51905d76c9833ff59df16233536977,"Bump maven-enforcer-plugin from 3.0.0-M3 to 3.0.0 (#11543)

Bumps [maven-enforcer-plugin](https://github.com/apache/maven-enforcer) from 3.0.0-M3 to 3.0.0.
- [Release notes](https://github.com/apache/maven-enforcer/releases)
- [Commits](https://github.com/apache/maven-enforcer/compare/enforcer-3.0.0-M3...enforcer-3.0.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-enforcer-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-08-04T15:43:49Z
1a562f444c4e349348f7d909720eb5f368ecb8ef,"Cleanup hadoop dependencies in indexing modules (#11516)

* Remove hadoop-yarn-common dependency

(cherry picked from commit d767c8f3d204d9d27d8122d55680c3c9f1cfe473)

* Remove hdfs dependency from druid core",2021-08-04T00:56:54Z
eceacf74c0acaa2a669ea59283438312ef553a11,"Bump java-dogstatsd-client from 2.6.1 to 2.13.0 (#11533)

Bumps [java-dogstatsd-client](https://github.com/DataDog/java-dogstatsd-client) from 2.6.1 to 2.13.0.
- [Release notes](https://github.com/DataDog/java-dogstatsd-client/releases)
- [Changelog](https://github.com/DataDog/java-dogstatsd-client/blob/master/CHANGELOG.md)
- [Commits](https://github.com/DataDog/java-dogstatsd-client/compare/java-dogstatsd-client-2.6.1...v2.13.0)

---
updated-dependencies:
- dependency-name: com.datadoghq:java-dogstatsd-client
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-08-04T00:53:45Z
511bc964ff6f33d8b09c2bfbaee5290cb86ad9d1,"Bump docker-java-transport-netty from 3.2.8 to 3.2.11 (#11532)

Bumps [docker-java-transport-netty](https://github.com/docker-java/docker-java) from 3.2.8 to 3.2.11.
- [Release notes](https://github.com/docker-java/docker-java/releases)
- [Changelog](https://github.com/docker-java/docker-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/docker-java/docker-java/compare/3.2.8...3.2.11)

---
updated-dependencies:
- dependency-name: com.github.docker-java:docker-java-transport-netty
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-08-04T00:53:22Z
aa7cb50f24a7e1a2c2506310fe3468c60f16766c,"Add DynamicConfigProvider for Schema Registry (#11362)

* add_DynamicConfigProvider_for_schema_registry

* bug fixed

* add document

* fix document

* fix spot bug

* fix document

* inject ObjectMapper

* add DynamicConfigProviderUtils

* add UT

* bug fixed

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-08-03T20:24:52Z
55a01a030a0d43717c4605990186588659764eeb,"Clarify that Broker caching for groupBy v2 queries does not work (#11370)

* Add a note

* Update docs/configuration/index.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* clarify that both of non-result level cache and result level cache are not supported

Co-authored-by: sthetland <steve.hetland@imply.io>",2021-08-03T17:01:15Z
f1e52ab35607dca55d87cb3ba1be7a62ac3de3ed,"add doc (#11531)

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-08-03T04:20:29Z
a2da407b704db8eed85b97cd7c1d22541f2b1102,"Add error msg to parallel task's TaskStatus (#11486)

* Add error msg to parallel task's TaskStatus

* Consolidate failure block

* Add failure test

* Make it fail

* Add fail while stopped

* Simplify hash task test using a runner that fails after so many runs (parameter)

* Remove unthrown exception

* Use runner names to identify phase

* Added range partition kill test & fixed a timing bug with the custom runner

* Forbidden api

* Style

* Unit test code cleanup

* Added message to invalid state exception and improved readability  of the phase error messages for the parallel task failure unit tests",2021-08-02T19:11:28Z
cf674c833cc6012631b345744bd82a484e13841f,"Bump maven-resources-plugin from 3.1.0 to 3.2.0 (#11525)

Bumps [maven-resources-plugin](https://github.com/apache/maven-resources-plugin) from 3.1.0 to 3.2.0.
- [Release notes](https://github.com/apache/maven-resources-plugin/releases)
- [Commits](https://github.com/apache/maven-resources-plugin/compare/maven-resources-plugin-3.1.0...maven-resources-plugin-3.2.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-resources-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-08-02T16:38:34Z
2e850b56550313bb469d1bebeb8e7255ff9a24dd,"Bump aws.sdk.version from 1.11.884 to 1.12.37 (#11367)

* Bump aws.sdk.version from 1.11.884 to 1.12.8

Bumps `aws.sdk.version` from 1.11.884 to 1.12.8.

Updates `aws-java-sdk-core` from 1.11.884 to 1.12.8
- [Release notes](https://github.com/aws/aws-sdk-java/releases)
- [Changelog](https://github.com/aws/aws-sdk-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/aws/aws-sdk-java/compare/1.11.884...1.12.8)

Updates `aws-java-sdk-ec2` from 1.11.884 to 1.12.8
- [Release notes](https://github.com/aws/aws-sdk-java/releases)
- [Changelog](https://github.com/aws/aws-sdk-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/aws/aws-sdk-java/compare/1.11.884...1.12.8)

Updates `aws-java-sdk-s3` from 1.11.884 to 1.12.8
- [Release notes](https://github.com/aws/aws-sdk-java/releases)
- [Changelog](https://github.com/aws/aws-sdk-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/aws/aws-sdk-java/compare/1.11.884...1.12.8)

Updates `aws-java-sdk-sts` from 1.11.884 to 1.12.8
- [Release notes](https://github.com/aws/aws-sdk-java/releases)
- [Changelog](https://github.com/aws/aws-sdk-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/aws/aws-sdk-java/compare/1.11.884...1.12.8)

Updates `aws-java-sdk-kinesis` from 1.11.884 to 1.12.8
- [Release notes](https://github.com/aws/aws-sdk-java/releases)
- [Changelog](https://github.com/aws/aws-sdk-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/aws/aws-sdk-java/compare/1.11.884...1.12.8)

Updates `aws-java-sdk-rds` from 1.11.884 to 1.12.8
- [Release notes](https://github.com/aws/aws-sdk-java/releases)
- [Changelog](https://github.com/aws/aws-sdk-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/aws/aws-sdk-java/compare/1.11.884...1.12.8)

---
updated-dependencies:
- dependency-name: com.amazonaws:aws-java-sdk-core
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: com.amazonaws:aws-java-sdk-ec2
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: com.amazonaws:aws-java-sdk-s3
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: com.amazonaws:aws-java-sdk-sts
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: com.amazonaws:aws-java-sdk-kinesis
  dependency-type: direct:production
  update-type: version-update:semver-minor
- dependency-name: com.amazonaws:aws-java-sdk-rds
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Fix license and bump to latest aws

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-08-01T07:12:57Z
dbed4424b58ca0d43794ec9c0afa14a912e073fe,Upgrade ORC to 1.6.9 (#11518),2021-08-01T06:33:03Z
8ba7f6a48c95074a6632b14fa93447487923b18c,Fix incorrect result of exact topN on an inner join with limit (#11517),2021-07-31T22:55:49Z
98312d54cf1cea57662322b64a7ab4510bacf7e8,Fix CI for master (#11522),2021-07-30T22:41:21Z
949484728f41826b024f732394b4b1204349a900,"docs fix for doubleMean description (#11513)

* fix for doubleMean description

* include quantile aggregator description from Suneet

* update hyperlink to quantiles aggregator",2021-07-30T19:39:44Z
05a7da792f953be3b0bbb9035aff09c0a031958b,"compaction/status API retains status for datasources that no longer existed causing in-memory used to grow unbounded (#11510)

* fix compaction status api

* fix checkstyle

* address comment",2021-07-30T15:19:24Z
995d99d9e44145fcb89b2fd6060f4d38f6c39e21,add ingest/notices/queueSize metric to give visibility into supervisor notices queue size (#11417),2021-07-30T14:59:26Z
b83742179a9035812875b4a77ce68be44ba5989f,"Reduce method invocation of reservoir sampling (#11257)

* reduce method invocation of reservoir sampling

* add a dynamic parameter and add benchmark

* rebase",2021-07-30T14:09:50Z
59e61e127a14ff4dd41e76a2ff1bfd90ea3ac8af,Add a section for updating the release branch before making a tag in the release process (#11449),2021-07-30T00:05:33Z
4bca7f014e8ae767ce7725a158a902b70dc25beb,"update error-prone to 2.8.0 with fix for crashing check (#11494)

* error-prone 2.8.0 fixes https://github.com/google/error-prone/issues/2396
* fix for a few ignored return values
* fix unknown args in sub-modules",2021-07-29T16:13:46Z
9b250c54aa1b18c21ff8369ee4a4a6015bbafc40,"Allow kill task to mark segments as unused (#11501)

* Allow kill task to mark segments as unused

* Add IndexerSQLMetadataStorageCoordinator test

* Update docs/ingestion/data-management.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Add warning to kill task doc

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2021-07-29T15:48:43Z
280c08045fb4384db0389b12bf50ec82168ae996,Update awesome-code-style (#11503),2021-07-28T16:25:18Z
0de1837ff7e8bffbd74524be824b1dc08b2f661d,"Docs - partitioning note re: skew / dim concatenation + nav update (#11488)

* Update native-batch.md

Knowledge from https://the-asf.slack.com/archives/CJ8D1JTB8/p1595434977062400

* Update native-batch.md

* Fixed broken link + some grammar",2021-07-27T16:17:01Z
8a4e27f51df32f783d4acabf844b8137297ba436,"Select broker based on query context parameter `brokerService` (#11495)

This change allows the selection of a specific broker service (or broker tier) by the Router.

The newly added ManualTieredBrokerSelectorStrategy works as follows:

Check for the parameter brokerService in the query context. If this is a valid broker service, use it.
Check if the field defaultManualBrokerService has been set in the strategy. If this is a valid broker service, use it.
Move on to the next strategy",2021-07-27T15:26:05Z
60fdf7a734bfac9f7dbb0bf1f9dd077f8977c8e2,"Rollup measurement query amended (#11479)

By user request from https://groups.google.com/g/druid-user/c/bFkOtE-1eQg - gives the measure as a floating point instead of an integer.",2021-07-27T13:29:29Z
676efb1b3fb92ba7fec2dbf33357b949f70ddba9,"Fix integration test credential resource path handling (#11487)

This PR fixes an issue with the integration test copy_resources.sh script.

The ""install druid jars"" portion was removing the $SHARED_DIR/docker directory, which wipes out the $SHARED_DIR/docker/extensions and $SHARED_DIR/docker/credentials directories created just before, which leads to issues later in the script when copying resources to the $SHARED_DIR/docker/credentials/ dir.",2021-07-27T07:02:34Z
c068906fca4082737e059418d369eb0711500c07,"Make intermediate store for shuffle tasks an extension point (#11492)

* add interface

* add docs

* fix errors

* fix injection

* fix injection

* update javadoc",2021-07-27T04:29:43Z
3f456fe3050604436695c6d6d741f577c4293d4a,"Address CVE-2021-35515 CVE-2021-36090 (#11496)

* Address CVE-2021-35515 CVE-2021-36090

Bump commons-compress to deal with new CVEs

* fix licenses",2021-07-26T21:54:32Z
973e5bf7d06c6cb021c242360b2035deb571541d,"Docs - HLL lgK tip and slight layout change (#11482)

* HLL lgK and a tip

Knowledge transfer from https://the-asf.slack.com/archives/CJ8D1JTB8/p1600699967024200.  Attempted to make a connection between the SQL HLL function and the HLL underneath without getting too complicated.  Also added a note about using K over 16 being pretty much pointless.

* Corrected spelling

* Create datasketches-hll.md

Put roll-up back to rollup

* Update docs/development/extensions-core/datasketches-hll.md

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2021-07-26T19:28:53Z
fcb908d505e48c383f3a2e41c254a0e32821c02f,"Make buildQueryRunnerForSegment protected in ServerManager(#11493)

This is a minor change in ServerManager. Any sub-class can access the buildQueryRunnerForSegment in an extension if required.",2021-07-24T05:38:28Z
c98e7c3aa3d1b883f76f0edaafe29cf426fb119d,"Fix left join SQL queries with IS NOT NULL filter (#11434)

This PR fixes the incorrect results for query : 

SELECT dim1, l1.k FROM foo LEFT JOIN (select k || '' as k from lookup.lookyloo group by 1) l1 ON foo.dim1 = l1.k WHERE l1.k IS NOT NULL (in CalciteQueryTests)
In the current code, the WHERE clause gets removed from the top of the left join and is pushed to the table foo
leading to incorrect results.
The fix for such a situation is done by :

Converting such left joins into inner joins (since logically the mentioned left join query is equivalent to an inner join) using Calcite while maintaining that the druid execution layer can execute such inner joins.
Preferring converted inner joins over original left joins in our cost model",2021-07-23T15:27:19Z
161f4dbc0ef5d429d8f16b43e0baf8efbacf5d13,"Add integration tests for S3 Assume Role ingestion feature (#11472)

* add IT for S3 assume role

* fix checkstyle

* fix test

* fix pom

* fix test",2021-07-23T03:09:09Z
9767b42e85a91d4e2b71b3f718d072a9b52d140d,"Add a new metric query/segments/count that is not emitted by default (#11394)

* Add a new metric query/segments/count that is not emitted by default

* docs

* test the default implementation of the metric

* fix spelling error in docs

* document the fact that query retries will result in additional metric emissions

* update using recommended text from @jihoonson",2021-07-23T00:57:35Z
ce1faa56352766522610e3ae306c15b55df19fb0,"Make SegmentLoader extensible and customizable (#11398)

This PR refactors the code related to segment loading specifically SegmentLoader and SegmentLoaderLocalCacheManager. SegmentLoader is marked UnstableAPI which means, it can be extended outside core druid in custom extensions. Here is a summary of changes

SegmentLoader returns an instance of ReferenceCountingSegment instead of Segment. Earlier, SegmentManager was wrapping Segment objects inside ReferenceCountingSegment. That is now moved to SegmentLoader. With this, a custom implementation can track the references of segments. It also allows them to create custom ReferenceCountingSegment implementations. For this reason, the constructor visibility in ReferenceCountingSegment is changed from private to protected.
SegmentCacheManager has two additional methods called - reserve(DataSegment) and release(DataSegment). These methods let the caller reserve or release space without calling SegmentLoader#getSegment. We already had similar methods in StorageLocation and now they are available in SegmentCacheManager too which wraps multiple locations.
Refactoring to simplify the code in SegmentCacheManager wherever possible. There is no change in the functionality.",2021-07-22T12:30:49Z
167c45260c76057b9856bd073661365663bd80f2,"Update druid-vs-kudu.md (#11470)

small typo - ""need"" to ""needed""",2021-07-21T14:58:14Z
6ce3b6ca2d448ff0e097b669ae05067041584176,"Improve documentation for druid.indexer.autoscale.workerCapacityHint config (#11444)

* fix doc

* address comments

* Update docs/configuration/index.md

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-07-21T05:48:56Z
0453e461f6130a07ff126d43c0937411cbdca892,"Add errorMessage in taskStatus for task failures in middleManagers/indexers/peons (#11446)

* Add error message; add unit tests for ForkingTaskRunner

* add tests

* fix comment

* unused import

* add exit code in error message

* fix test",2021-07-21T04:34:53Z
84c957f541cb46b7bbaea59c0a1ca54943ea7a46,"Add more sql tests for groupby queries (#11454)

* Add more sql tests for simple groupby queries

* unused import

* fix tests

* javadocs

* unused import",2021-07-21T04:05:11Z
a2538d264d7dad829bcc48968100043694b55475,"Add back missing unit test coverage in AvroFlattenerMakerTest (#11451)

* Add back missing unit test coverage in AvroFlattenerMakerTest

Adds back test coverage for Avro flattener that was mistakenly removed in https://github.com/apache/druid/pull/10505. Recfactored the tests a bit too.

* resolve checkstyle warnings",2021-07-21T01:27:00Z
aa8c615ac24a10415c98b34070bfec0a9c9f5103,"Updates to source and doc build pages (#11464)

* Updates to source and doc build pages.

Clarifies a few points for newbies.

* Fixed spelling error

And added spellcheck info to website README file.",2021-07-21T01:07:34Z
aee2f2e24f4230156a46d8f570a8d4a37b5f0385,"Web console: better handle BigInt math (#11450)

* better handle BigInt math

* correctly brace bigint

* feedback fixes and tests",2021-07-21T00:17:19Z
1937b5c0da5a933ebf150e62963f419781aecfde,"Pin Jetty version to 9.4.x (#11453)

Major version bumps in jetty are too scary for now. So let's keep up to date with the latest 9.4.x",2021-07-20T21:50:39Z
94c1671eaf7b050972602fdedcb1971cdbde692d,"Split SegmentLoader into SegmentLoader and SegmentCacheManager (#11466)

This PR splits current SegmentLoader into SegmentLoader and SegmentCacheManager.

SegmentLoader - this class is responsible for building the segment object but does not expose any methods for downloading, cache space management, etc. Default implementation delegates the download operations to SegmentCacheManager and only contains the logic for building segments once downloaded. . This class will be used in SegmentManager to construct Segment objects.

SegmentCacheManager - this class manages the segment cache on the local disk. It fetches the segment files to the local disk, can clean up the cache, and in the future, support reserve and release on cache space. [See https://github.com/Make SegmentLoader extensible and customizable #11398]. This class will be used in ingestion tasks such as compaction, re-indexing where segment files need to be downloaded locally.",2021-07-20T18:44:19Z
69b0c6a47bb96d4e2955a8a651af34bcf81376e0,"""druid.request.logging.type"" should allow ""noop"" value (#10774)",2021-07-20T16:10:46Z
c7fdf1d6858bb654237c36bc7be743105b141b8e,"Fix typo in ingestion spec sample (#11433)

* Update index.md

Fix typo in the ingestion spec sample

* fixed more typos",2021-07-20T05:02:21Z
5037493e459703a561aad1816774f2134c3363d9,"Bump commons-io to 2.11.0 (#11460)

* Bump commons-io to 2.11.0

* Address comments

* Remove try catch

* Fix checkstyle",2021-07-19T22:47:14Z
2705fe98fa4513c506ac4ffb4c71fc2be51f7738,Fix avro json serde issues (#11455),2021-07-19T16:32:05Z
8729b4089319a0bbb4e5c0b9a59c8cfa15dc0bd7,"Add the error message in taskStatus for task failures in overlord (#11419)

* add error messages in taskStatus for task failures in overlord

* unused imports

* add helper message for logs to look up

* fix tests

* fix counting the same task failures more than once

* same fix for HttpRemoteTaskRunner",2021-07-15T20:14:28Z
a366753ba5803a761f9580434a965b814fd78986,"Consolidate multi-value dimension doc and highlight configurability  (#11428)

* Clarify options for multi-value dims
* Add first example",2021-07-15T17:19:10Z
8d7d60d18edae638d645ec1d59fbbc5a500fa5d4,"Improve Auto scaler pendingTaskBased provisioning strategy to handle when there are no currently running worker node better (#11440)

* fix pendingTaskBased

* fix doc

* address comments

* address comments

* address comments

* address comments

* address comments

* address comments

* address comments",2021-07-14T23:52:25Z
d3e82b1114dcdf7a04723c5227255552c369d0be,speed up test (#11442),2021-07-14T14:14:38Z
ace4b807f4a2798728ecbf28c65420423dc2b482,"update dependency-check cron job to purge cache before checking (#11436)

The dependency-check cron job now purges any caches NVD before performing dependency check. Without this, a high CVE vulernability was reported in this job a few months after the nvd was updated for it.",2021-07-13T08:43:31Z
73711a456a03410e942a3464be01a1dea16f0200,"Suppress CVE-2021-27568 from json-smart 2.3 dependency (#11438)

Dependency on hadoop 2.8.5 is preventing us form updating this dependency to a later version. We don't believe that this is a major concern since Druid eats uncaught exceptions, and only displays them in logs. This issue also should only affect ingestion jobs, which can only be run by admin type users.",2021-07-13T02:58:06Z
05d5dd9289c03c62bab8f5a8caf80804382e4829,"compaction/status API retains status for datasources that no longer existed causing in-memory used to grow unbounded (#11426)

* compaction/status API retains status for datasources that no longer existed causing in-memory used to grow unbounded

* compaction/status API retains status for datasources that no longer existed causing in-memory used to grow unbounded

* compaction/status API retains status for datasources that no longer existed causing in-memory used to grow unbounded

* fix test

* fix test",2021-07-13T02:48:06Z
f5d53569ca82c073d3af973dfedaf98a4eb96e83,"Supervisor metadata auto cleanup failing as missing Guice injection (#11424)

* Fix Supervisor metadata auto cleanup failing as missing Guice injection

* Fix Supervisor metadata auto cleanup failing as missing Guice injection

* fix IT

* fix IT

* Update services/src/main/java/org/apache/druid/cli/CliCoordinator.java

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* fix

* fix

* fix

* fix

* fix

* fix

* fix

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-07-13T02:47:49Z
2236cf2234f7421f401b71c95fb1c7360860e185,eliminate extra object instantiation (#11345),2021-07-13T01:31:39Z
18b8ac5349fd649ab5399e26beaf2ce4471a4bcf,"removes unnecessary checks (#11431)

* removes unnecessary checks

* removes unnecessary checks",2021-07-13T01:21:16Z
d0b4e55a6f69d8a8d02eda8f357cacc38bff61eb,fix pom version reference (#11435),2021-07-13T00:37:57Z
e39ff44481703499394feac82d467e6999d05d47,"improve groupBy query granularity translation with 2x query performance improve when issued from sql layer (#11379)

* improve groupBy query granularity translation when issued from sql layer

* fix style

* use virtual column to determine timestampResult granularity

* dont' apply postaggregators on compute nodes

* relocate constants

* fix order by correctness issue

* fix ut

* use more easier understanding code in DefaultLimitSpec

* address comment

* rollback use virtual column to determine timestampResult granularity

* fix style

* fix style

* address the comment

* add more detail document to explain the tradeoff

* address the comment

* address the comment",2021-07-11T17:22:47Z
e228a84d9178cad085497b2aa6e89d246bcf0b36,"Fix retry sleep when callable throws exception (#11430)

If the callable throws an exception, we neither increase the retry count nor sleep the thread.",2021-07-11T09:36:10Z
377b5e708c926fea3b53e6f22cc1e12262fb62e0,"Web console: Data loading walkthrough fixes (#11416)

* fix quotes

* fix sql doc parsing

* prevent array-input from losing position while the user is typing

* make group filter click-to-filterable

* fix casing bug in exact table search

* do not sort columns in smaples

* can bypass transform step

* fixed string json parsing

* improve PartitionMessage

* better error messages

* feedback fixes

* tool to order dimensions in schema view",2021-07-10T14:56:50Z
49e8732e4fa8756c3c0e8f1d4e00a8bb9eba81fd,"Display errors for invalid timezones in TIME_FORMAT (#11423)

Users sometimes make typos when picking timezones - like `America/Los Angeles`
instead of `America/Los_Angeles` instead of defaulting to UTC, this change
makes it so that an error is thrown instead notifying the user of their mistake.",2021-07-09T13:07:13Z
7e61042794f3c25d3287496b56c2d44be2913d56,"Bound memory utilization for dynamic partitioning (i.e. memory growth is constant) (#11294)

* Bound memory in native batch ingest create segments

* Move BatchAppenderatorDriverTest to indexing service... note that we had to put the sink back in sinks in mergeandpush since the persistent data needs to be dropped and the sink is required for that

* Remove sinks from memory and clean up intermediate persists dirs manually after sink has been merged

* Changed name from RealtimeAppenderator to StreamAppenderator

* Style

* Incorporating tests from StreamAppenderatorTest

* Keep totalRows and cleanup code

* Added missing dep

* Fix unit test

* Checkstyle

* allowIncrementalPersists should always be true for batch

* Added sinks metadata

* clear sinks metadata when closing appenderator

* Style + minor edits to log msgs

* Update sinks metadata & totalRows when dropping a sink (segment)

* Remove max

* Intelli-j check

* Keep a count of hydrants persisted by sink for sanity check before merge

* Move out sanity

* Add previous hydrant count to sink metadata

* Remove redundant field from SinkMetadata

* Remove unneeded functions

* Cleanup unused code

* Removed unused code

* Remove unused field

* Exclude it from jacoco because it is very hard to get branch coverage

* Remove segment announcement and some other minor cleanup

* Add fallback flag

* Minor code cleanup

* Checkstyle

* Code review changes

* Update batchMemoryMappedIndex name

* Code review comments

* Exclude class from coverage, will include again when packaging gets fixed

* Moved test classes to server module

* More BatchAppenderator cleanup

* Fix bug in wrong counting of totalHydrants plus minor cleanup in add

* Removed left over comments

* Have BatchAppenderator follow the Appenderator contract for push & getSegments

* Fix LGTM violations

* Review comments

* Add stats after push is done

* Code review comments (cleanup, remove rest of synchronization constructs in batch appenderator, reneame feature flag,
remove real time flag stuff from stream appenderator, etc.)

* Update javadocs

* Add thread safety notice to BatchAppenderator

* Further cleanup config

* More config cleanup",2021-07-09T07:10:29Z
4c90c0c21d8271b7908122e6104e85a12cd6c248,Adding more debug logs to increase visibility into StreamSupervisor notices queue size and processing time. (#11415),2021-07-08T23:15:15Z
63fcd77c3817c209c294159aa0578486225bded3,"support using mariadb connector with mysql extensions (#11402)

* support using mariadb connector with mysql extensions

* cleanup and more tests

* fix test

* javadocs, more tests, etc

* style and more test

* more test more better

* missing pom

* more pom",2021-07-08T19:25:37Z
3481bb0440057043964a3db53acca83649cefc87,"Better error message for unsupported double values (#11409)

A constant expression may evaluate to Double.NEGATIVE_INFINITY/Double.POSITIVE_INFINITY/Double.NAN e.g. log10(0). When using such an expression in native queries, the user will get the corresponding value without any error. In SQL, however, the user will run into NumberFormatException because we convert the double to big-decimal while constructing a literal numeric expression. This probably should be fixed in calcite - see https://issues.apache.org/jira/browse/CALCITE-2067. This PR adds a verbose error message so that users can take corrective action without scratching their heads.",2021-07-08T11:25:17Z
d5e8d4d68007899df17f390a756422d511d746d5,"Avro union support (#10505)

* Avro union support

* Document new union support

* Add support for AvroStreamInputFormat and fix checkstyle

* Extend multi-member union test schema and format

* Some additional docs and add Enums to spelling

* Rename explodeUnions -> extractUnions

* explode -> extract

* ByType

* Correct spelling error",2021-07-07T05:05:41Z
17efa6f5569d21fffdbb263d6e12db5982d7529b,"add single input string expression dimension vector selector and better expression planning (#11213)

* add single input string expression dimension vector selector and better expression planning

* better

* fixes

* oops

* rework how vector processor factories choose string processors, fix to be less aggressive about vectorizing

* oops

* javadocs, renaming

* more javadocs

* benchmarks

* use string expression vector processor with vector size 1 instead of expr.eval

* better logging

* javadocs, surprising number of the the

* more

* simplify",2021-07-06T18:20:49Z
497f2a10519a88c83739e3adba46cd388b7a565c,"Allow spaces in java home. (#11407)

Quote the $java_exec var in examples/bin/verify-java to support spaces in DRUID_JAVA_HOME/JAVA_HOME. At present, the steps before and after the version check properly quote the path, but the version check spuriously fails when pointing to a Java 8 install that has a space in its path.",2021-07-05T13:20:36Z
d3220693f3728dd28244d810cb18edc18de9df39,"perf: improve concurrency and improve perf for task query in HeapMemoryTaskStorage (#11272)

* perf: improve concurrency and reduce algorithmic cost for task querying in HeapMemoryTaskStorage

* fix: address intellij linter concern regarding use of ConcurrentMap interface

* nit: document thread safety of HeapMemoryTaskStorage

* empty to trigger ci",2021-07-05T02:07:26Z
a9c4b478ab7f992d8eeafa3703daff46a72d5812,"Fix expiration logic for ldap internal credential cache (#11395)

* Fix expiration logic for ldap internal credential cache

* Removed sleeps from tests

* Make method package scoped so it can be used in unit tests

* Removed unused thrown exceptions",2021-07-01T21:34:29Z
03a6a6d6e1f7024c2691e6fef0685bd137d223e7,"Replace Processing ExecutorService with QueryProcessingPool (#11382)

This PR refactors the code for QueryRunnerFactory#mergeRunners to accept a new interface called QueryProcessingPool instead of ExecutorService for concurrent execution of query runners. This interface will let custom extensions inject their own implementation for deciding which query-runner to prioritize first. The default implementation is the same as today that takes the priority of query into account. QueryProcessingPool can also be used as a regular executor service. It has a dedicated method for accepting query execution work so implementations can differentiate between regular async tasks and query execution tasks. This dedicated method also passes the QueryRunner object as part of the task information. This hook will let custom extensions carry any state from QuerySegmentWalker to QueryProcessingPool#mergeRunners which is not possible currently.",2021-07-01T10:33:08Z
906a704c5546a984a03e10f18f38f1506e4196ad,"Eliminate ambiguities of KB/MB/GB in the doc (#11333)

* GB ---> GiB

* suppress spelling check

* MB --> MiB, KB --> KiB

* Use IEC binary prefix

* Add reference link

* Fix doc style",2021-06-30T20:42:45Z
8037a54525bf3031064aa9ec084d8519d173d056,"revert commons-io to 2.6 (#11392)

* * revert commons-io to 2.6

* * fix failing tests",2021-06-30T06:04:38Z
3ad6a3d74feff0a86a2a5d3a98d38bf60e46d9a9,switch to netty-bom instead of individual dependencies (#11356),2021-06-29T19:52:12Z
561cc718389e6556cdd8246e140f59c06f2d7d29,"Web console: allow encoding of ASCII control chars (#10795)

* allow encoding of ascii control chars

* change to JSON

* make json escpaes work

* update snapshot

* break out component

* fix test

* update test script

* update formatter to be more chill",2021-06-27T01:54:41Z
af2ab98574582099557932e6a6370bf8dcdf3fab,"Use ExecutorService variables to assign ExecutorService Instances (#11373)

* Added inspection rule to prohibit ExecutorService assignment to Executor

* Use ExecutorService type variable to assign ExecutorService

* Changed : Variable => variable

* Removed unused Executor import",2021-06-25T23:56:34Z
df9b57aa1a25f3c7fd41becb5aab9e87291f9841,"bitwise aggregators, better null handling options for expression agg (#11280)

* bitwise aggregators, better nulls for expression agg

* correct behavior

* rework deserialize, better names

* fix json, share mask",2021-06-25T23:51:16Z
fd0931d35ee42223669af790170336a4309a9b3c,"Azure data lake input source (#11153)

* Mention Azure Data Lake

* Make consistent with other entries

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-06-25T22:54:34Z
ed0a57e1063bd4da5700a7c5727cdaffcadac7e8,"Update kafka-ingestion.md to clarify PasswordProvider support limitation (#11374)

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-06-25T04:54:48Z
de8daf8139dcb8a497f1191587dcd5e7ea992092,"Delete buildV9Directly in Kafka and Kinesis Indexing Service (#11351)

* delete_buildV9Directly_in_kafka_and_kinesis_indexing_service

* delete

* delete them from server

* delete buildV9Directly from hadoop indexing

* bug fixed

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-06-23T23:36:46Z
911a0c6c8ce31f48ddf360a17a35145cbee2292f,"Fix bug in auto compaction needsCompaction method that can skip segments incorrectly (#11366)

* fix bug in needsCompaction

* fix bug in needsCompaction",2021-06-23T20:03:41Z
267c298293dd26e571e41fc2dbf09f653823775c,define superuser permissions set in druid-server instead of druid-basic-auth extension (#11376),2021-06-22T23:03:58Z
c8b3f8cc008b58c0138f8581aff95ff8a7511917,"avoid logging pause message multiple times (#11375)

In some instances the ingestion thread could be woken up spuriously,
resulting in the ""Received pause command..."" log message getting logged
multiple times. This change ensures we only log it once the first time
the pause is requested.",2021-06-22T16:30:38Z
f0b105ec63657643c85d82686ae1dea3e588a5f5,"Temporarily skip compaction for locked intervals (#11190)

* Add overlord API /lockedIntervals. Skip compaction for locked intervals

* Revert formatting changes

* Add license info

* Fix checkstyle

* Remove invalid API invocation

* Fix checkstyle

* Add DatasourceIntervalsTest

* Fix checkstyle

* Remove LockedIntervalsResponse

* Add integration tests for lockedIntervals

* Add ITAutoCompactionLockContentionTest

* Add config druid.coordinator.compaction.skipLockedIntervals

* Add test for TaskQueue",2021-06-21T00:21:59Z
f56a5b9ba2236364fff5f8467ddcb8dc654ffd4a,"Web console: Better hotkeys and library upgrades (#11365)

* improve hotkeys

* fix test name

* refactor explain dialog

* explain tests

* small fixes

* update to popover2

* use resize sensor 2

* misc cleanup",2021-06-18T01:24:29Z
2e98d3c1ad95a3ba756d0d6409947dc3dea9066a,"Web console: Make segment timeline work over all time intervals (#11359)

* tidy up

* add to segments view

* add unit tests for date

* better util export

* fix ds view

* fix tests

* fix test in time

* unset untermediate state",2021-06-17T23:10:06Z
a1c20d7457f5fb30728f0b29f59e3427543bd08b,"update jackson dependencies to use bom (#11353)

Switching to the bom dependency declaration simplifies managing jackson
dependencies. It also removes the need to override individual library
versions for CVE fixes, since the bom takes care of that internally.

This change aligns our jackson dependency versions on 2.10.5(.x):
- updates jackson libraries from 2.10.2 to 2.10.5
- jackson-databind remains at 2.10.5.1 as defined in the bom

Release notes: https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.10",2021-06-17T01:37:30Z
712f2a5d000c1362ddce4748842d190d55b826df,"upgrade error-prone to 2.7.1 and support checks with Java 11+ (#11363)

* upgrade error-prone to 2.7.1 and support checks with Java 11+

- upgrade error-prone to 2.7.1
- support running error-prone with Java 11 and above using -Xplugin
  instead of custom compiler
- add compiler arguments to ignore warnings/errors in Java 15/16
- introduce strictCompile property to enable strict profiles since we
  now need multiple strict profiles for Java 8
- properly exclude all generated source files from error-prone
- fix druid-processing overriding annotation processors from parent pom
- fix druid-core disabling most non-default checks
- align plugin and annotation errorprone versions
- fix / suppress additional issues found by error-prone:
  * fix bug in SeekableStreamSupervisor initializing ArrayList size with
    the taskGroupdId
  * fix missing @Override annotations
- remove outdated compiler plugin in benchmarks
- remove deleted ParameterPackage error-prone rule
- re-enable checks on benchmark module as well

* fix IntelliJ inspections

* disable LongFloatConversion due to bug in error-prone with JDK 8

* add comment about InsecureCrypto",2021-06-16T19:55:34Z
bfbd7ec4329b4f083e1c2044b847a04b9f8912cc,"fix a bugs related to SQL type inference return type nullability (#11327)

* fix a bunch of type inference nullability bugs

* fixes

* style

* fix test

* fix concat",2021-06-15T19:26:59Z
920aa414ca5eab60149239f448891afd01b736ee,"enrich expression cache key information to support expressions which depend on external state (#11358)

* enrich expression cache key information to support expressions which depend on external state such as lookups

* cache rules everything around me

* low carb

* rename",2021-06-15T00:26:43Z
6edc017fadf7df26d7e840b177147f9ee2b6b999,update jacoco for Java 15/16 support (#11361),2021-06-12T05:57:41Z
50327b8f6334f9bb89ab60e262ed47983a7711ee,"ignore bySegment query context for SQL queries (#11352)

* ignore bySegment query context for SQL queries

* revert unintended change",2021-06-11T20:49:03Z
a1ed3a407dc3031810bf3db6e18be13c2f859c25,clarify bySegment is native only (#11331),2021-06-11T20:48:17Z
ac9b1f81b41b160039a79cdf30696f1b093e9e70,"Web console: Remove support for IE11 and other older browsers (#11357)

* Use common browserlist and update to drop IE11

* Change TypeScript target to ES2016

* Update browserslist for ""supports es6"" support

* Show a warning if accessed from an unsupported browser

* Inline browser-update styles; detect SyntaxErrors too

* Better wording

* Upgrade to the latest Blueprint

* Refactor RunButton to be FC, use useHotkeys

* Remove dead license

* Update snapshots

* Address feedback

* Wording

Co-authored-by: Vadim Ogievetsky <vadimon@gmail.com>

Co-authored-by: Vadim Ogievetsky <vadimon@gmail.com>",2021-06-11T02:05:40Z
6b272c857f14a79eceefd1ee24957332a49abef5,"adjust topn heap algorithm to only use known cardinality path when dictionary is unique (#11186)

* adjust topn heap algorithm to only use known cardinality path when dictionary is unique

* better check and add comment

* adjust comment more",2021-06-10T23:32:22Z
51f983101e2f47d73e128562778104cec6bb60cf,Fix wrong encoding in PredicateFilteredDimensionSelector.getRow (#11339),2021-06-10T16:14:34Z
167044f715a5635eb07ed6d1c8f2e7a9bd2bfa9c,"Bump fastutil from 8.2.3 to 8.5.4 (#11347)

* Bump fastutil from 8.2.3 to 8.5.4

Bumps [fastutil](https://github.com/vigna/fastutil) from 8.2.3 to 8.5.4.
- [Release notes](https://github.com/vigna/fastutil/releases)
- [Changelog](https://github.com/vigna/fastutil/blob/master/CHANGES)
- [Commits](https://github.com/vigna/fastutil/compare/8.2.3...8.5.4)

---
updated-dependencies:
- dependency-name: it.unimi.dsi:fastutil
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml
* update maven dependency list for -core and -extra libraries to pass maven dependency checks

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2021-06-10T14:43:18Z
db5ee83ca6a8ee8f4145a0ff7fcbdd334e240fed,pin ZooKeeper dependencies to 3.5.x (#11354),2021-06-10T14:41:53Z
8de0d36c529056b14150a82435dc57b889a88551,"Allow query through router when load moving average extension (#11276)

* init commit

* change NoopQuerySegmentWalker name

* change doc

* move NoopQuerySegmentWalker and add document

* fix doc

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-06-10T10:46:53Z
9047fa3d9c8d9bbfc8b20279cb38bb9683f9b68b,"S3 ingestion can assume role (#10995)

* feature s3 assume role

* feature s3 assume role

* feature s3 assume role

* feature s3 assume role

* feature s3 assume role

* feature s3 assume role

* tests fix

* spelling fix

* sts fix

Co-authored-by: egor-ryashin <egor.ryashin@rilldata.com>",2021-06-09T10:32:35Z
651810f9e5f6c6989cf25f7a9edf6ee821d9b9dd,remove DEPRECATION part (#11326),2021-06-09T07:52:43Z
1a27ed0b862e5218b0315a255fde83568247e62a,"Bump junit from 4.12 to 4.13.2 (#11344)

Bumps [junit](https://github.com/junit-team/junit4) from 4.12 to 4.13.2.
- [Release notes](https://github.com/junit-team/junit4/releases)
- [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.12.md)
- [Commits](https://github.com/junit-team/junit4/compare/r4.12...r4.13.2)

---
updated-dependencies:
- dependency-name: junit:junit
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-06-09T01:18:39Z
8f4662d05abf6395c17ea92b6e87e61e6a9dce54,restrict travis builds to main and release branches (#11349),2021-06-08T23:34:17Z
be10a236d50cfae89c699deda21780d227527b2e,"Bump commons-io from 2.6 to 2.9.0 (#11338)

* Bump commons-io from 2.6 to 2.9.0

Bumps commons-io from 2.6 to 2.9.0.

---
updated-dependencies:
- dependency-name: commons-io:commons-io
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* update licenses.yaml to reflect version bumps
* fix tests relying on specific log messages

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Xavier Léauté <xvrl@apache.org>",2021-06-08T17:02:59Z
145cf9e5c3f4f45fddd9e042c67522fe413d8461,"fix document about input format (#11342)

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-06-08T15:44:54Z
c82ede9afc4a1c7618a7664b27290b20d30f8a95,"Bump maven-antrun-plugin from 1.8 to 3.0.0 (#11336)

Bumps [maven-antrun-plugin](https://github.com/apache/maven-antrun-plugin) from 1.8 to 3.0.0.
- [Release notes](https://github.com/apache/maven-antrun-plugin/releases)
- [Commits](https://github.com/apache/maven-antrun-plugin/compare/maven-antrun-plugin-1.8...maven-antrun-plugin-3.0.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-antrun-plugin
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-06-08T15:28:11Z
2ee7e31e5b95b31388cc75ccdc48553c35ee48d8,Fix syntax error (#11332),2021-06-08T05:35:02Z
1e8b5360b328f4596e450dcf6557010f90e0548a,"Bump docker-java-transport-netty from 3.2.0 to 3.2.8 (#11337)

Bumps [docker-java-transport-netty](https://github.com/docker-java/docker-java) from 3.2.0 to 3.2.8.
- [Release notes](https://github.com/docker-java/docker-java/releases)
- [Changelog](https://github.com/docker-java/docker-java/blob/master/CHANGELOG.md)
- [Commits](https://github.com/docker-java/docker-java/compare/3.2.0...3.2.8)

---
updated-dependencies:
- dependency-name: com.github.docker-java:docker-java-transport-netty
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-06-08T01:58:38Z
dbec8da7ea5e7b9a6c982a527e17cf95ae6d61dd,"enable dependabot for dependency updates (#11079)

* enable dependabot for dependency updates
* exclude dependabot config from license checks",2021-06-07T20:56:32Z
7ffe402b87f96b438fe378e64b0f5b2e8f67262a,Fix priority parsing in HiLoQueryLaningStrategy (#11302),2021-06-07T09:57:27Z
44d629319d4fa274276f11951b0141c420e073c4,"handle timestamps of complex types when parsing protobuf messages (#11293)

* handle timestamps correctly when parsing protobuf

* Add timestamp handling to ProtobufReader

* disable checkstyle for generated sourcecode

* Fix test

* try this

* refactor tests",2021-06-07T09:49:39Z
0c5d1c9725303111df69198a232166ddf00672d2,"Web console: add more query fixing auto suggestions (#11203)

* add more query fixing auto suggestions

* update query gen

* update toolkit

* update licenses

* fix funky quotes

* funky => fancy

* revert engine change

* separate web-console and website npm and node deps",2021-06-04T16:29:00Z
d5139c9543b1e7d51e78312044e329f2a3ecb070,"Fix permission problems in docker (#11299)

* Create /opt/data to fix permission problem

* eliminate symlink to avoid compatibility problem on AWS Fargate

* Add a workaround section

* Update instruction for named volume

* Use named volume in docker-compose

* Revert some doc change

* Resolve review comments",2021-06-02T00:33:27Z
27f1b6cbf377fb9698076d0eefb3f72545efb6ed,"Fix Index hadoop failing with index.zip is not a valid DFS filename (#11316)

* * Fix bug

* * simplify class loading

* * fix example configs for integration tests

* Small classloader cleanup

Co-authored-by: jon-wei <jon.wei@imply.io>",2021-06-01T23:14:50Z
a24817d20ac3aace04ba7a6f9aab1ee98bd43bc7,"Migrate helm chart from helm v2 to v3 (#11290)

* move all files from helm to helm/druid

* migrate druid helm chart from helm v2 to v3

* add license headers

* bump version to 0.3.0",2021-05-28T05:46:02Z
e664bfd433c88cf78d64a5f2ecd877fc478acb70,"Improve doc of movingAverage (#11262)

* Make doc more directive

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Add limitation

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Suppress spelling check error",2021-05-28T05:10:55Z
04fefb0ca3d07e61f76a7aea50828b77d2629dad,"Fix ClassCastException (#11266)

Signed-off-by: frank chen <frank.chen021@outlook.com>",2021-05-28T04:25:51Z
31c811d8946180e7d89c9b4c9ab8357938798f3b,"Web console: Fix maxRowsPerSegment validation in hashed compaction spec (#11308)

* allow defining of maxRowsPerSegment for now

* use common util

* update snapshots

* fix test

* fix e2e test",2021-05-27T23:36:42Z
e5633d7842f44464ed463a8718051c7542a81ccb,"Fix bug: 502 bad gateway thrown when we edit/delete any auto compaction config created 0.21.0 or before (#11311)

* fix bug

* add test

* fix IT

* fix checkstyle

* address comments",2021-05-27T23:34:32Z
60843bd11ff04abb7ceeb275343491889c2b8ec9,Add configuration suggestion to `druid.indexer.storage.type` (#11304),2021-05-27T13:44:47Z
7a2bcb3ca1525cbb6d940fa2e3453ee156d1761b,"chill, travis (#11283)

* maybe make ci more selective in what it do

* maybe this

* skip self and travis config

* can it be in before_script? lets find out

* nope

* fixes

* oops

* only skip stuff for PR builds, add some tests

* revert unintended change

* more comments, more tests, more better",2021-05-27T12:40:40Z
6c7177714f9fe88c39eac6061e49d48cf38415f7,Add test for join on __time column (#11289),2021-05-27T05:20:39Z
b517c3339b4f4ce79c5ff62ae1eb045f795e8cb6,"remove ZooKeeper 3.4 support + pass tests with Java 15 (#11073)

With this change, Druid will only support ZooKeeper 3.5.x and later.

In order to support Java 15 we need to switch to ZK 3.5.x client libraries and drop support for ZK 3.4.x
(see #10780 for the detailed reasons) 

* remove ZooKeeper 3.4.x compatibility
* exclude additional ZK 3.5.x netty dependencies to ensure we use our version
* keep ZooKeeper version used for integration tests in sync with client library version
* remove the need to specify ZK version at runtime for docker
* add support to run integration tests with JDK 15
* build and run unit tests with Java 15 in travis",2021-05-25T19:49:49Z
82380b67e07e9983d507ca2cdf93ddbbf3c18fdc,"Improve IT job 79 ITNestedQueryPushDownTest integration test (#11268)

* improve occasional failure caused by resource competition

* adjust more configs in tiny-cluters.yaml

Co-authored-by: yfhanfei <yfhanfei@ZBMac-C02DW5SMMD6P.local>",2021-05-24T02:12:34Z
2bfcee58245912a0fa645d548abedc0608920d3b,Fix issue with empty array converting to string expression instead of string array (#11270),2021-05-22T01:31:28Z
4ba5738ffbf7e8b977480e8d9cc0b4e97def15f0,Add an issues section to deal with common issues when building druid (#11271),2021-05-21T16:04:51Z
403dcf5cfb466a903945d1192d9da90f5d7eba49,"fixes some typos, edits for style (#11258)",2021-05-21T15:58:39Z
fcb4eaa3d481793d4f73ea67f4eabbc83f1745e1,"add docs for high-churn datasource cleanup (#11245)

* add docs for high-churn datasource cleanup

* fix most comments except for task log

* address  comments

* update strategy recommendation

* address addtional comments

* fix

* address comments

* address comments from @sthetland",2021-05-20T16:48:42Z
259207753dc0866430981c3b64274feaa3c804b6,"Fix is null selector returning incorrect value for Long data type (#11170)

* Fix is null selector returning incorrect value for Long data type

* Fix style errors

* Refactor getObject method to also cache null column values

* Make lastInput variable nullable

* Refactor unit test

* Use new boolean lastInputIsNull instead of Long for lastInput to avoid boxing

* Refactor to remove Long for input variable

* Make a separate null caching variable

* Cleaner null caching implementation",2021-05-20T03:47:02Z
383daa4029e5c496078986194a444ce4fe58674b,"Catch exception inside ITRetryUtil to fix one of the causes for flaky integration tests (#11265)

* Do not stop retrying when an exception is encountered. Save & propagate last exception if retry count is exceeded.

* Add one more log message to help with debugging

* Limit schema registry heap to attempt to control OOMs",2021-05-19T20:56:02Z
4c3077390f6ee9b7ad27e57957a18788efdc172a,Update check-licenses.py (#11269),2021-05-19T20:52:00Z
933350d106d38ce27642e64de64ff10438ce43d0,"integration test runner xmx (#11273)

* integration test runner xmx

* smaller",2021-05-19T19:59:50Z
3be8e29269f0865798840312a8475f9c2db7d0a7,"Add integration test for protobuf (#11126)

* add file test

* test

* for test

* bug fixed

* test

* test

* test

* bug fixed

* delete auto scaler

* add input format

* add extensions

* bug fixed

* bug fixed

* bug fixed

* revert

* add schema registry test

* bug fixed

* bug fixed

* delete desc

* delete change

* add desc

* bug fixed

* test inputformat

* bug fixed

* bug fixed

* bug fixed

* bug fixed

* delete io exception

* change builder not static

* change pom

* bug fixed

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-05-17T22:45:07Z
6d08a7051e2d0bf50cfea3fc6d1ed7ebde864a05,"fix bug with aggregator expressions on realtime index with string columns always producing 0 values (#11185)

* fix bug with aggregator expressions on realtime index with string columns always producing 0 values

* more test

* rework some stuff

* javadocs",2021-05-17T18:59:13Z
aa62073faad2d64474a6065f20c4ce1573263bc7,"fix sql planner bug with inner offset causing loop (#11259)

* fix sql planner bug with inner offset causing loop

* move check up",2021-05-15T21:26:41Z
d85e8b708b6233dea812f24521eaabf0cfefcfbd,"Web console: fix SegmentTimeline query (#11204)

* fix SegmentTimeline query

* test query",2021-05-14T21:48:23Z
3649c608d2285e7d4249fa38a33e4f375fd9622e,"array handling improvements (#11233)

* fix jdbc array handling, split handling for some array and multi value operator, split and add more tests

* formatting",2021-05-14T01:50:32Z
4100c5edc0598c3cb13820e803d535cdfe67d5b6,"Fix taskQueue to honor (#11243)

useLineageBasedSegmentAllocation in default taskContext",2021-05-14T01:30:50Z
4a3c834ecffcca1c50ad6223de088a5500c3c9e3,"i dig the optimism, but need more time (#11250)",2021-05-13T18:16:10Z
790262e5d0a8b537531291580895bc2e84946721,add estimated byte size limit enforcement for heap based expression aggregator (#11236),2021-05-12T08:21:50Z
3455352241f774cfc581de7cf7b328d5cf061e3d,"Add feature to automatically remove compaction configurations for inactive datasources (#11232)

* add auto cleanup

* add auto cleanup

* add auto cleanup

* add tests

* add tests

* use retryutils

* use retryutils

* use retryutils

* address comments",2021-05-12T01:49:18Z
d11be88c4b343e0c84355e5b2aa735adba816a87,Fix required field treatment (#11228),2021-05-12T00:58:37Z
8e5048e643f95c25cc95be91317475fecbdce456,"Avoid memory mapping hydrants after they are persisted & after they are merged for native batch ingestion (#11123)

* Avoid mapping hydrants in create segments phase for native ingestion

* Drop queriable indices after a given sink is fully merged

* Do not drop memory mappings for realtime ingestion

* Style fixes

* Renamed to match use case better

* Rollback memoization code and use the real time flag instead

* Null ptr fix in FireHydrant toString plus adjustments to memory pressure tracking calculations

* Style

* Log some count stats

* Make sure sinks size is obtained at the right time

* BatchAppenderator unit test

* Fix comment typos

* Renamed methods to make them more readable

* Move persisted metadata from FireHydrant class to AppenderatorImpl. Removed superfluous differences and fix comment typo. Removed custom comparator

* Missing dependency

* Make persisted hydrant metadata map concurrent and better reflect the fact that keys are Java references. Maintain persisted metadata when dropping/closing segments.

* Replaced concurrent variables with normal ones

* Added   batchMemoryMappedIndex ""fallback"" flag with default ""false"". Set this to ""true"" make code fallback to previous code path.

* Style fix.

* Added note to new setting in doc, using Iterables.size (and removing a dependency), and fixing a typo in a comment.

* Forgot to commit this edited documentation message",2021-05-11T21:34:26Z
4326e699bd3e146e1899f014e8765c52241f3cd3,"Add feature to automatically remove datasource metadata based on retention period (#11227)

* add auto clean up datasource metadata

* add test

* fix checkstyle

* add comments

* fix error

* address comments

* Address comments

* fix test

* fix test

* fix typo

* add comment

* fix test

* fix test",2021-05-11T08:22:33Z
fae7ebf489ee327fcc8d0e25e4b127374ffa78d6,change errant 'none' configuration to 'manual': (#11218),2021-05-11T05:04:18Z
3a660bc6ee4fd3320240805e0727ed248002522d,"Make sure updating coordinator config is protected against race condition (#11144)

* Make sure changing coordinator config is protected against concurrent updates

* Make sure updating coordinator config is protected against race condition

* add retry

* fix checkstyle

* add tests

* add tests

* add more tests

* add tests

* fix

* fix checkstyle",2021-05-10T20:58:08Z
f6662b4893a9b8cc8a0ebb77e63daddde882148d,"fix count and average SQL aggregators on constant virtual columns (#11208)

* fix count and average SQL aggregators on constant virtual columns

* style

* even better, why are we tracking virtual columns in aggregations at all if we have a virtual column registry

* oops missed a few

* remove unused

* this will fix it",2021-05-10T20:41:48Z
15de29a2c4f26e3e5a89cb8f435d3af8c47da33f,Handle not having default rules better (#11214),2021-05-10T19:13:15Z
691d7a1d548909951468005348a603380f4d6d74,"SQL timeseries no longer skip empty buckets with all granularity (#11188)

* SQL timeseries no longer skip empty buckets with all granularity

* add comment, fix tests

* the ol switcheroo

* revert unintended change

* docs and more tests

* style

* make checkstyle happy

* docs fixes and more tests

* add docs, tests for array_agg

* fixes

* oops

* doc stuffs

* fix compile, match doc style",2021-05-10T17:13:37Z
fa113fb4a9c9c64c89236c418b64ada48b56072f,Fix default value (#11220),2021-05-10T17:11:26Z
14f1f2aa766a1078245db96ada452807233902a0,Fix a broken link in the development doc (#11226),2021-05-10T08:14:06Z
8647040f4d0b2a80ef1807d7af18230a487bac60,"Allow user to set group.id for Kafka ingestion task (#11147)

* allow user to set group.id for Kafka ingestion task

* fix test coverage by removing deprecated code and add doc

* fix typo

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: frank chen <frankchen@apache.org>

Co-authored-by: frank chen <frankchen@apache.org>",2021-05-09T03:56:19Z
2df42143aec6c50e9ac31d89cd75749d10d37a3d,"Fix idempotence of segment allocation and task report apis in native batch ingestion (#11189)

* Fix idempotence of segment allocation and task report apis in native
batch ingestion

* better error and javadoc

* checkstyle and dependency

* fix tests and add more tests

* task config instead of context; add doc

* unused import and dependency

* typo in doc

* fix unintended changes

* fix wrong import

* remove unnecessary error handling

* add task context back

* default task context

* fix test and doc

* address comments

* unused imports",2021-05-07T21:29:48Z
cf2cde1d2d2f19b533cbd1466dc4e2137e808c38,"add links to release notes, light refactor of landing page (#11051)

* add links to release notes, light refactor of landing page

* Update docs/design/index.md",2021-05-07T21:26:47Z
3b9dad4c9e6962c5191c8408140d6626bc253bc6,"Consolidate the number of Dockerfiles (#11187)

* Consolidate the number of Dockerfiles

* add build-arguments to choose which Java base image to use at runtime
* default to building image with Java 11
* base k8s integration test image off of the default image: this ensures
  our docker image now gets tested as part of integration tests.

* upgrade maven help plugin to 3.2.0",2021-05-07T17:41:34Z
a1f850d707bfe4cb471a5d9796d70995b3e9b84b,"Fix vectorized cardinality bug on certain string columns. (#11199)

* Fix vectorized cardinality bug on certain string columns.

Fixes a bug introduced in #11182, related to the fact that in some cases,
ColumnProcessors.makeVectorProcessor will call ""makeObjectProcessor""
instead of ""makeSingleValueDimensionProcessor"" or
""makeMultiValueDimensionProcessor"". CardinalityVectorProcessorFactory
improperly ignored calls to ""makeObjectProcessor"".

In addition to fixing the bug, I added this detail to the javadocs for
VectorColumnProcessorFactory, to prevent others from running into the
same thing in the future. They do not currently call out this case.

* Improve test coverage.

* Additional fixes.",2021-05-07T15:37:10Z
a8c00d8d9b4fa8527bb78523a318bd5da96ebf15,chore: fix case of GitHub (#10928),2021-05-07T08:15:43Z
49c8307b727aaef6bc1e6b468b7391608c1a7dec,"Update datasource.md (#10864)

* Update datasource.md

Change ""table"" to ""datasource"" in join discussion: This means that all datasources
other than the leftmost ""base"" table must fit in memory.

According to docs on datasources, ""datasource"" is the more general term, and a table is a kind of datasource.  In the context here, then, ""datasource"" is applicable.

* left-hand table -> left-hand datasource

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

Co-authored-by: sthetland <steve.hetland@imply.io>
Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-05-07T08:14:45Z
9be2a5cdc2a5fbae5d6e38885f75e9f674da1e8f,Add documentation re alphabetical sorted of MV dimensions (#10695),2021-05-07T08:12:32Z
d73f72e50892fe0b7450d8d4bf5678c3f8270cfe,"Add feature to automatically remove supervisor based on retention period (#11200)

* add auto clean up

* add test

* add test

* fix test

* Address comments

* Address comments",2021-05-07T05:25:23Z
351059ca435233a5ddf60ef998b2fd4f3612f1e2,"Suppressing false positive CVE-2020-7791 (#11215)

* suppressing false positive CVE-2020-7791

* add comments",2021-05-06T22:24:12Z
ac95f99d591a2dc7f23d1680ebb522ce369441da,Upgrade jetty version (#11207),2021-05-06T10:21:36Z
4adb121234947402a65a9fad4f7c765e9a0dc922,"Fix example of prefixes for Cloud Input Sources(eg. S3) (#11192)

Fixed a syntax error in ""prefix"" lines in docs/ingestion/native-batch.md

S3 requires a trailing slash for directory like structures, so this updates the examples to include the trailing slashes.",2021-05-06T04:19:31Z
34169c8550dbe0a3fc9043aa21d221b9c7502039,"fix doc (#11202)

(cherry picked from commit ffb3c049726b5e461c6f7f8b6f4b75d2cb907dcc)",2021-05-05T13:17:07Z
bb3c810b368f2f49d33d24df38b078640d7d38d4,"Create dynamic config that can limit number of non-primary replicants loaded per coordination cycle (#11135)

* lay the groundwork for throttling replicant loads per RunRules execution

* Add dynamic coordinator config to control new replicant threshold.

* remove redundant line

* add some unit tests

* fix checkstyle error

* add documentation for new dynamic config

* improve docs and logs

* Alter how null is handled for new config. If null, manually set as default",2021-05-05T12:39:36Z
6f0b4d90d8640328daf6ed72fbc3e2d28f7e4925,clarify that appenderator persist byte sizes are estimations (#11198),2021-05-05T09:44:04Z
99f39c720261923a4f908ad2ae33b03b372989b0,"Hadoop segment index file rename (#11194)

* Do stuff

* Do more stuff

* * Do more stuff

* * Do more stuff

* * working

* * cleanup

* * more cleanup

* * more cleanup

* * add license header

* * Add unit tests

* * add java docs

* * add more unit tests

* * Cleanup test

* * Move removing of workingPath to index task rather than in hadoop job.

* * Address review comments

* * remove unused import

* * Address review comments

* Do not overwrite segment descriptor for segment if it already exists.

* * add comments to FileSystemHelper class

* * fix local hadoop integration test

* * Fix failing test failures when running with java11

* Revert ""Revert ""Adjust HadoopIndexTask temp segment renaming to avoid potential race conditions (#11075)"" (#11151)""

This reverts commit 49a9c3ffb7b2da3401696d583bc2cd52e83f77bf.

* * remove JobHelperPowerMockTest

* * remove FileSystemHelper class",2021-05-05T00:22:18Z
cd1ddcd36bda3dff1602e0676ef5b2b0ec0d39b6,"Web Console: allow pollPeriod to be defined in JDBC lookup config (#11193)

* allow pollPeriod to be defined in JDBC lookup config

* add test

* save the whales",2021-05-04T07:11:26Z
204901a602bfb151d473adef8586bc13a065d4d0,"Fix Smile encoding for HTTP response (#10980)

* fix Smile encoding bug

Signed-off-by: frank chen <frank.chen021@outlook.com>

* Add unit tests

* Add IT for smile encoding

* Fix cases

* Update javadoc

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* resolve comments

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2021-05-04T05:43:47Z
554f1ffeee94fab1ca0fa641a51f584766e504f2,"ARRAY_AGG sql aggregator function (#11157)

* ARRAY_AGG sql aggregator function

* add javadoc

* spelling

* review stuff, return null instead of empty when nil input

* review stuff

* Update sql.md

* use type inference for finalize, refactor some things",2021-05-04T05:17:10Z
6f7701e74242b78bd3e7c73d6a5723d181a4c75b,fixed array syntax (#11191),2021-05-04T04:38:16Z
bef7cc911ff0f0ee76347050e9021fa505aec941,"Vectorize the cardinality aggregator. (#11182)

* Vectorize the cardinality aggregator.

Does not include a byRow implementation, so if byRow is true then
the aggregator still goes through the non-vectorized path.

Testing strategy:

- New tests that exercise both styles of ""aggregate"" for supported types.
- Some existing tests have also become active (note the deleted
  ""cannotVectorize"" lines).

* Adjust whitespace.",2021-05-04T03:27:02Z
ca1412d5741f259ed6fba91996a99bd8054a341d,"Reduce visibility of Tranquility documentation (#11134)

* reduce visibility of tranquility doc

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-05-03T23:48:24Z
84aac4832d66d2bf2c9e2903b9772bb5882c5ccf,"Add feature to automatically remove rules based on retention period (#11164)

* Add feature to automatically remove rules based on retention period

* Add feature to automatically remove rules based on retention period

* address comments",2021-05-03T18:50:45Z
809e001939be9196a4c3c620037606ab6e5af3b8,"Vectorize the DataSketches quantiles aggregator. (#11183)

* Vectorize the DataSketches quantiles aggregator.

Also removes synchronization for the BufferAggregator and VectorAggregator
implementations, since it is not necessary (similar to #11115).

Extends DoublesSketchAggregatorTest and DoublesSketchSqlAggregatorTest
to run all test cases in vectorized mode.

* Style fix.",2021-05-02T23:14:21Z
046069f35a4890659968333125ed30aa2416e2a6,"Add a way to retrieve UTF-8 bytes directly via DimensionDictionarySelector. (#11172)

* Add a way to retrieve UTF-8 bytes directly via DimensionDictionarySelector.

The idea is that certain operations (like count distinct on strings) will
be faster if they are able to run directly on UTF-8 bytes instead of on
Java Strings decoded by ""lookupName"".

* Add license header.

* Updates suggested by robots.",2021-04-30T17:56:11Z
6d82c3cbf1821d4f79ae1f460d1c7e4232b316fc,"StringComparators: No need to convert to UTF-8 for lexicographic comparison. (#11171)

Lexicographic ordering of UTF-8 byte sequences and in-memory UTF-16
strings are equivalent. So, we can skip the (expensive) conversion and
get an equivalent result. Thank you, Unicode!",2021-04-30T17:54:20Z
fdab95ea99197045abbea8fcfd39a7b71120540c,"Update index.md (#11174)

tiny change for readability",2021-04-30T16:40:19Z
aec65242fc2b1e7a78c6e2c4b80586619168d374,"fix docker volume permissions (#11167)

Docker volume directory was accidentally removed due to reordering of statements.
This causes ownership and permissions on the volume directory to be reset, preventing startup.

fixes #11166
Signed-off-by: frank chen <frank.chen021@outlook.com>",2021-04-30T15:51:53Z
ed81548ff7d1fa12fb84d11aacafc86733f30e71,"Add helm chart for Apache Druid (#11163)

* Add helm chart for Apache Druid

* Add license headers",2021-04-29T04:38:50Z
941440afb6b68b7b0c1fd32806047e5dd9d59fba,Suggest using svn mv; clarify the process for doc updating (#11162),2021-04-29T02:08:23Z
7d808e357c214300391c4c7bb81d544bad82f225,"InDimFilter: Fix cache key computation to avoid collisions. (#11168)

The prior code did not include separation between values, and encoded
null ambiguously. This patch fixes both of those issues by encoding
strings as length + value instead of just value.

I think cache key computation was OK prior to #9800. Prior to that
patch, the cache key was computed using CacheKeyBuilder.appendStrings,
which encodes strings as UTF-8 and inserts a separator byte (0xff)
between them that cannot appear in a UTF-8 stream.",2021-04-29T00:28:29Z
ad028de53842cb7709cd1db04976aa689fc5ad6d,"InDimFilter: Fix NPE involving certain Set types. (#11169)

* InDimFilter: Fix NPE involving certain Set types.

Normally, InDimFilters that come from JSON have HashSets for ""values"".
However, programmatically-generated filters (like the ones from #11068)
may use other set types. Some set types, like TreeSets with natural
ordering, will throw NPE on ""contains(null)"", which causes the
InDimFilter's ValueMatcher to throw NPE if it encounters a null value.

This patch adds code to detect if the values set can support
contains(null), and if not, wrap that in a null-checking lambda.

Also included:

- Remove unneeded NullHandling.needsEmptyToNull method.
- Update IndexedTableJoinable to generate a TreeSet that does not
  require lambda-wrapping. (This particular TreeSet is how I noticed
  the bug in the first place.)

* Test fixes.

* Improve test coverage",2021-04-28T21:13:42Z
7139c60868381715273cccb95df68da6bdccdf92,"Change the `id` for `kubernetes` doc link to work (#11176)

* Change the `id` for doc link to work

* Added `druid-kubernetes-extensions` to the list",2021-04-28T17:12:28Z
8215cc3238d4f922d032649653d7f5cb98220f68,"Unit test for DefaultOperandTypeChecker (#11152)

* Less strict operand type check and implicit casting

* fix ci

* Clean up unnecessary changes

* more cleanup

* unused import",2021-04-28T01:47:38Z
261c1f271f1b06fed79ed24e11adadd5fecf18c6,Keep traitSet of logicalValues (#11138),2021-04-28T01:45:23Z
57ddae782e591fa95db23f418dbd2691f3e337b8,"fix serde issues with time-min-max extension (#11146)

* fix serde issues with time-min-max extension

* fix pom dependencies",2021-04-27T17:33:13Z
1b07d554a845edf20845e5f383d219d02950bcb7,Misc QueryView UX improvments (#11158),2021-04-27T17:26:01Z
0296f205511a2c75f150d978f4cb74757736c54f,"upgrade Apache Kafka to 2.8.0 (#11139)

* upgrade to Apache Kafka 2.8.0 (release notes:
  https://downloads.apache.org/kafka/2.8.0/RELEASE_NOTES.html)
* pass Kafka version as a Docker argument in integration tests
  to keep in sync with maven version
* fix use of internal Kafka APIs in integration tests",2021-04-24T15:27:07Z
31042cddf58b75b11eb24646cef08b285143c374,Fix `defaultMetricDimensions.json` path link (#11156),2021-04-24T03:08:03Z
a47c0d25797794043f1ca985ce5f71da7775ad83,"Clarify meaning of ""root-level fields"" in the documentation. (#11143)",2021-04-24T03:06:08Z
8a3be6bccc78f1bd44c5ffdc46418f9f20cca000,Fix TimeSeriesUnionQueryRunnerTest by extending InitializedNullHandlingTest (#11154),2021-04-23T15:56:03Z
9745d9e1c3f9e7664e289a82acffc1130db4a11e,"Web console: Switch to ESLint (#11142)

* Initial eslint config

* I guess eslint sorts underscores differently

* Trim curlies (in jsx)

* Re-organize rules

* Use consistent quote props

* Restructure eslint rules as additions/overrides to recommended configs

* Fix the 'recommended' stuff

* Add prefer-readonly

* Add prefer-object-spread

* Prettify

* Add eslint-plugin-react-hooks

* Switch to eslint-plugin-simple-sort-order

So much better

* Add no-extraneous-dependencies

* ban-tslint-comment for funzies

* If we enabled no-shadow, we'd probably want this option

* Not prefer-for-of

* no-confusing-void-expression, no-confusing-non-null-assertion

* Add some no-unnecessary-* rules

* non-nullable-type-assertion-style!

* prefer-includes

* Reorganize

* prefer-things

* switch-exhaustiveness-check

* We don't need the jsdoc plugin, prettier has our backs

* Remove a useless rule

* Drop TSLint and (temporarily) awesome-code-style

* Removing Object.assign revealed a type issue

* Bring back awesome-code-style for sasslint config

* Disable react/jsx-no-target-blank

* Add prettify-check script

* Add license to eslint config

* Format readme

* Update README for eslint, IDE settings

* Add 'autofix' script

* Switch to @awesome-code-style",2021-04-23T02:33:03Z
57ff1f9cdb45370df1467fef03222909700fa768,"expression aggregator (#11104)

* add experimental expression aggregator

* add test

* fix lgtm

* fix test

* adjust test

* use not null constant

* array_set_concat docs

* add equals and hashcode and tostring

* fix it

* spelling

* do multi-value magic for expression agg, more javadocs, tests

* formatting

* fix inspection

* more better

* nullable",2021-04-23T01:30:16Z
49a9c3ffb7b2da3401696d583bc2cd52e83f77bf,"Revert ""Adjust HadoopIndexTask temp segment renaming to avoid potential race conditions (#11075)"" (#11151)

This reverts commit a2892d9c40793027ba8a8977c85b3de4a949e11c.",2021-04-22T22:33:27Z
a2892d9c40793027ba8a8977c85b3de4a949e11c,"Adjust HadoopIndexTask temp segment renaming to avoid potential race conditions (#11075)

* Do stuff

* Do more stuff

* * Do more stuff

* * Do more stuff

* * working

* * cleanup

* * more cleanup

* * more cleanup

* * add license header

* * Add unit tests

* * add java docs

* * add more unit tests

* * Cleanup test

* * Move removing of workingPath to index task rather than in hadoop job.

* * Address review comments

* * remove unused import

* * Address review comments

* Do not overwrite segment descriptor for segment if it already exists.

* * add comments to FileSystemHelper class

* * fix local hadoop integration test",2021-04-21T19:24:31Z
6d2b5cdd7e080401bce64d352e3a65788ff110c4,"Add feature to automatically remove audit logs based on retention period (#11084)

* add docs

* add impl

* fix checkstyle

* fix test

* add test

* fix checkstyle

* fix checkstyle

* fix test

* Address comments

* Address comments

* fix spelling

* fix docs",2021-04-21T00:10:43Z
09dcf6aa365fd01cfffe07d5c6ed2cf4fb4c4308,fix syntax error for loadstatus api (#11136),2021-04-20T06:17:20Z
4caa221d72473f8307489d814f58bcfabde4c57e,"Web console: Better inline docs (#11128)

* better highlight

* better highlighting

* add spec",2021-04-19T21:36:53Z
fdc3c2f36281059c020df1d4e74eb940d4c922e8,"Web console: update dev dependencies (#11119)

* Update some dev dependencies, prettify, tslint-fix

* Sort tsconfig keys for easy comparison

* Set noImplicitThis

* Slightly more accurate types

* Bump Jest and related

* Bump react to latest on v16

* Bump node-sass, sass-loader for node14 support

* Remove node-sass-chokidar (unused)

* More unused dependencies

* Fix blueprint imports

* Webpack 5

* Update webpack config for 'process' usage

* Update playwright-chromium

* Emit esnext modules for tree shaking

* Enable source maps in development

* Dedupe

* Bump babel and things

* npm audit fix

* Add .editorconfig file to match prettier settings

* Update licenses (tslib is 0BSD as of 1.11.2)

https://github.com/microsoft/tslib/pull/96

* Require node >= 10

* Use Node 10 to run e2e tests

* Use 'ws' transport mode for dev server (will be default in next version)

* Remove an 'any'

* No sourcemaps in prod

* Exclude .editorconfig from license checks

* Try nvm for setting node version",2021-04-17T03:15:19Z
f2b54de205eff996e76bd3d634360cc59c6b3577,"Vectorized versions of HllSketch aggregators. (#11115)

* Vectorized versions of HllSketch aggregators.

The patch uses the same ""helper"" approach as #10767 and #10304, and
extends the tests to run in both vectorized and non-vectorized modes.

Also includes some minor changes to the theta sketch vector aggregator:

- Cosmetic changes to make the hll and theta implementations look
  more similar.
- Extends the theta SQL tests to run in vectorized mode.

* Updates post-code-review.

* Fix javadoc.",2021-04-17T01:45:46Z
26d1074ade7eb963d55f4afbde2dbd707bfc6c3a,[Security] Bump netty4.version from 4.1.48.Final to 4.1.63.Final (#11117),2021-04-16T02:32:22Z
cb7c6ac3145edbdfe10017ca1cde4056283a26b6,"Doc updates for union datasources. (#11103)

The main one is updating datasources.md to talk about SQL. (It still said
that table unions are not supported in SQL.) Also, this doc update adds
some clarifying details on limitations.",2021-04-15T01:18:14Z
202c78c8f32bd3ec5e70e021b1494d878f38d678,"Enable rewriting certain inner joins as filters. (#11068)

* Enable rewriting certain inner joins as filters.

The main logic for doing the rewrite is in JoinableFactoryWrapper's
segmentMapFn method. The requirements are:

- It must be an inner equi-join.
- The right-hand columns referenced by the condition must not contain any
  duplicate values. (If they did, the inner join would not be guaranteed
  to return at most one row for each left-hand-side row.)
- No columns from the right-hand side can be used by anything other than
  the join condition itself.

HashJoinSegmentStorageAdapter is also modified to pass through to
the base adapter (even allowing vectorization!) in the case where 100%
of join clauses could be rewritten as filters.

In support of this goal:

- Add Query getRequiredColumns() method to help us figure out whether
  the right-hand side of a join datasource is being used or not.
- Add JoinConditionAnalysis getRequiredColumns() method to help us
  figure out if the right-hand side of a join is being used by later
  join clauses acting on the same base.
- Add Joinable getNonNullColumnValuesIfAllUnique method to enable
  retrieving the set of values that will form the ""in"" filter.
- Add LookupExtractor canGetKeySet() and keySet() methods to support
  LookupJoinable in its efforts to implement the new Joinable method.
- Add ""enableRewriteJoinToFilter"" feature flag to
  JoinFilterRewriteConfig. The default is disabled.

* Test improvements.

* Test fixes.

* Avoid slow size() call.

* Remove invalid test.

* Fix style.

* Fix mistaken default.

* Small fixes.

* Fix logic error.",2021-04-14T17:49:27Z
b51632b0bf38d1ef396e62a4851d84433029713d,"Update security overview with additional recommendations (#11016)

* updatee security overview with additional recommendations for improved security

* address first set of review questions

* Update docs/operations/security-overview.md

* Update docs/operations/security-overview.md

* apply changes from review

* Update docs/operations/security-overview.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/operations/security-overview.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update docs/operations/security-overview.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update security-overview.md

fix additional comments & typos cc: @suneet-s, @jihoonsoon

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-04-14T15:58:17Z
f96840017017806d2bbe35cf344e682995e8a9c1,"Introduce a new configuration that skip storing audit payload if payload size exceed limit and skip storing null fields for audit payload (#11078)

* Add config to skip storing audit payload if exceed limit

* fix checkstyle

* change config name

* skip null fields for audit payload

* fix checkstyle

* address comments

* fix guice

* fix test

* add tests

* address comments

* address comments

* address comments

* fix checkstyle

* address comments

* fix test

* fix test

* address comments

* Address comments

Co-authored-by: Jihoon Son <jihoonson@apache.org>

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2021-04-14T03:18:28Z
08d378673819f0da53d7f53c381994f5d517afc4,"improve bitmap vector offset to report contiguous groups (#11039)

* improve bitmap vector offset to report contiguous groups

* benchmark style

* check for contiguous in getOffsets, tests for exceptions",2021-04-13T18:47:01Z
b8423a38dfd1f2292df3f30bdafa329456d0a123,"add round test (#11088)

* add round test

* code style

* handle null val for round function

* handle null val for round function

* support null for round

* fix compatiblity

* fix test

* fix test

* code style

* optimize format",2021-04-13T18:36:32Z
c158207ab60871e75b71a8c88824235c3bf14092,"Rename BitmapOperationTest base class to avoid flaky test. (#11102)

PR #10936 renamed BitmapBenchmark, the parent of a couple of bitmap tests, to
BitmapOperationTest. This patch renames it to BitmapOperationTestBase so JUnit
doesn't pick it up as a test case. When JUnit picks it up, it becomes a flaky
test, since its behavior and correctness depends on whether it runs before
or after its subclasses.",2021-04-13T15:01:15Z
c8e394015d84eb9658aac882699f80410bab515c,"LongsLongEncodingReader: Implement ""duplicate"", fixing concurrency bug. (#11098)

Regression introduced in #11004 due to overzealous optimization. Even though
we replaced stateful usage of ByteBuffer with stateless usage of Memory, we
still need to create a new object on ""duplicate"" due to semantics of setBuffer.",2021-04-13T15:01:01Z
f60d8ea1c3cb1682fd7bbf2a34a492b0ace5357d,"Update index.md (#11105)

Fix json typo in readme for granularitySpec in compaction config example",2021-04-13T08:26:36Z
25db8787b3d7eac87aa3be8e32d48d0e823298af,"Fix CAST being ignored when aggregating on strings after cast (#11083)

* Fix CAST being ignored when aggregating on strings after cast

* fix checkstyle and dependency

* unused import",2021-04-13T05:21:24Z
0e0c1a1aaf468d2e082fffa9cab8a98013f2b536,"add protobuf inputformat (#11018)

* add protobuf inputformat

* repair pom

* alter intermediateRow to type of Dynamicmessage

* add document

* refine test

* fix document

* add protoBytesDecoder

* refine document and add ser test

* add hash

* add schema registry ser test

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-04-13T05:03:13Z
d0a94a8c141c4aa4e666c3d34d5fc099b80480a0,"add avro stream input format (#11040)

* add avro stream input format

* bug fixed

* add document

* doc fix

* change doc

* add integretion test

* bug fixed

* bug fixed

* add string as binary getter

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-04-13T04:53:41Z
c3faa24f269ad2e8fb7102255cb3738dd01e0536,"DataSchema: Improve duplicate-column error message. (#11082)

* DataSchema: Improve duplicate-column error message.

Now, when duplicate columns are specified, the error message will include
information about where those duplicate columns were seen. Also, if there
are multiple duplicate columns, all will be listed in the error message
instead of just the first one encountered.

* Fix style for checkstyle.

* Further improve error message.",2021-04-13T02:03:15Z
c86178aaeb325f68b3c79a4ca9ecd5f2fb492c37,Suppress CVE in libthrift (#11093),2021-04-13T01:13:42Z
a6a275809558907054ba0a767c6112d827849d33,"More unit tests for JsonParserIterator; Integration tests for query errors (#11091)

* unit tests for timeout exception in init

* integration tests

* run integraion test on travis

* fix inspection",2021-04-12T22:08:50Z
8432d82c48bf971fb9be1ffd777cc987e1d88b11,"Web console: Do not put __time in the dimensions list (#11085)

* Do not make time dimensions

* update e2e test",2021-04-12T16:48:10Z
d33fdd093bb0b5d459bf18059959195e1b136245,"Nested GroupBy query got wrong/empty result when using virtual column and filter (#11081)

* fix nested groupby got empty result when using virtual column

* move to query.getVirtualColumns().wrap instead of new VirtualizedColumnSelectorFactory

* move test to GroupByQueryRunnerTest

* Update processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java

Co-authored-by: huagnhui.bigrey <huanghui.bigrey@bytedance.com>
Co-authored-by: Jihoon Son <jihoonson@apache.org>",2021-04-11T04:29:41Z
95b82dd325ee7f808f4fc4891c966a93fe4b06fb,"Add missing API references for coordinator (#10967)

* add miss API references for coordinator

* add miss API references for coordinator

* add miss API references for coordinator

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-04-10T01:20:47Z
d939420f23421ac13325a14cd23b27236f095928,"Update SketchAggregator.java for removing duplicated parentheses (#11021)

* Update SketchAggregator.java

* Add test for sketches aggregator update unoin with double",2021-04-10T00:11:25Z
e7b2ecd0fd3f79069aa8f6065b85e8072ee773eb,Add retry around query loop in ITWikipediaQueryTest.testQueryLaningLaneIsLimited (#11077),2021-04-09T17:54:34Z
4576152e4a0213d17048a330e7089aa9d89f3972,"Make dropExisting flag for Compaction configurable and add warning documentations (#11070)

* Make dropExisting flag for Compaction configurable

* fix checkstyle

* fix checkstyle

* fix test

* add tests

* fix spelling

* fix docs

* add IT

* fix test

* fix doc

* fix doc",2021-04-09T07:12:28Z
8264203cee688607091232897749e959e7706010,"Allow client to configure batch ingestion task to wait to complete until segments are confirmed to be available by other (#10676)

* Add ability to wait for segment availability for batch jobs

* IT updates

* fix queries in legacy hadoop IT

* Fix broken indexing integration tests

* address an lgtm flag

* spell checker still flagging for hadoop doc. adding under that file header too

* fix compaction IT

* Updates to wait for availability method

* improve unit testing for patch

* fix bad indentation

* refactor waitForSegmentAvailability

* Fixes based off of review comments

* cleanup to get compile after merging with master

* fix failing test after previous logic update

* add back code that must have gotten deleted during conflict resolution

* update some logging code

* fixes to get compilation working after merge with master

* reset interrupt flag in catch block after code review pointed it out

* small changes following self-review

* fixup some issues brought on by merge with master

* small changes after review

* cleanup a little bit after merge with master

* Fix potential resource leak in AbstractBatchIndexTask

* syntax fix

* Add a Compcation TuningConfig type

* add docs stipulating the lack of support by Compaction tasks for the new config

* Fixup compilation errors after merge with master

* Remove erreneous newline",2021-04-09T04:03:00Z
338886fd5f1bc32cd6c5cadbc408838723099e75,"vector group by support for string expressions (#11010)

* vector group by support for string expressions

* fix test

* comments, javadoc",2021-04-09T02:23:39Z
de691808cea7e270250be43685599e33a4d680c5,"[Bug]Kinesis-data-format IT can not work (#11071)

* start schema-resgity and replace json template

* add docs

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-04-08T22:50:04Z
dd4c5f2a1746c932b22cc1679fdc01c2cb166461,Update using-caching.md (#11069),2021-04-08T21:48:26Z
15bdd6bc2fa04d3a9051a8f614c59a839cfca10f,"Fix unit tests and GC settings for Java 15 (#11074)

* JavaScript script engine support was removed in JDK 15: skip those tests for JDKs without it
* Fix flaky HTTP client tests with Java 15
* Switch from CMS to G1GC in integration tests, since CMS is no longer available in JDK 15",2021-04-08T17:33:37Z
fb6751fa4590d3fbcf940d492e9cfcc630176524,"Fix old broken link (#11048)

* link check fixes

* updated link target

* Update aggregations.md

* spelling error",2021-04-08T03:40:50Z
a0d52c3def4ddfb7a7e3d59e81dd6c0cd8ad74e3,"k8s discovery module: fix issue for druid.host being more than 63chars not permitted as k8s resource label value (#10961)

* k8s discovery module: fix issue for druid.host being more than 63chars not permitted as k8s resource label value

* update doc

* fix test",2021-04-08T00:45:28Z
786207995eedd177ed354e916c1d1721f53f9a71,"add minimal documentation for expression filters (#11045)

* add minimal documentation for expression filters

* Update docs/querying/filters.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Update docs/querying/filters.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/filters.md

Co-authored-by: Alejandro Lujan <andanthor@gmail.com>

* Update docs/querying/filters.md

Co-authored-by: Alejandro Lujan <andanthor@gmail.com>

Co-authored-by: Clint Wylie <cjwylie@gmail.com>
Co-authored-by: sthetland <steve.hetland@imply.io>
Co-authored-by: Alejandro Lujan <andanthor@gmail.com>",2021-04-07T23:58:28Z
b51ede5b49c0a5e5dbdd6e3bcc5b513fc85e2803,"Add a planner rule to handle empty tables (#11058)

* Add a planner rule to handle empty tables

* adjust comment

* type handling

* add tests

* unused imports and fix test

* fix more tests

* fix more test

* javadoc",2021-04-07T17:04:47Z
0df0bff44b0bbf3b6655bb0cffc384f58e69ac1f,"Enable multiple distinct aggregators in same query (#11014)

* Enable multiple distinct count

* Add more tests

* fix sql test

* docs fix

* Address nits",2021-04-07T07:52:19Z
d28d4e8ed3823bd6730de522cfdc1e14a8d8b3e9,Upgrade jetty to 9.4.39.v20210325 (#11076),2021-04-07T03:20:40Z
cc12a5703454bf89e95455540452fa18b27e167a,"Enforce allow list for JDBC properties by default (#11063)

* Enforce allow list for JDBC properties by default

* fix tests",2021-04-07T02:46:19Z
053af6815d17dbab30816ced9401b4f180ba8e57,"bug fixed (#11066)

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-04-06T02:39:06Z
8cf1e835431edac3290a6dfbe0b4cbb134ba19a8,"Add paramter to loadstatus API to compute underdeplication against cluster view (#11056)

* Add paramter to loadstatus API to compute underdeplication against cluster view

This change adds a query parameter `computeUsingClusterView` to loadstatus apis
that if specified have the coordinator compute undereplication for segments based
on the number of services available within cluster that the segment can be replicated
on, instead of the configured replication count configured in load rule. A default
load rule is created in all clusters that specified that all segments should be
replicated 2 times. As replicas are forced to be on separate nodes in the cluster,
this causes the loadstatus api to report that there are under-replicated segments
when there is only 1 data server in the cluster. In this case, calling loadstatus
api without this new query parameter will always result in a response indicating
under-replication of segments

* * fix exception mapper

* * Address review comments

* * update external API docs

* Apply suggestions from code review

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* * update more external docs

* * update javadoc

* Apply suggestions from code review

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-04-05T04:02:43Z
470d659ca0b23ecffc4c6ecf9cea81685a73f0d4,add documentation for coordinator dynamic configuration (#11052),2021-04-03T05:01:43Z
450535073edeae866484f5c0ddfdc52b7d6a7d42,"fix lookup nullable (#11060)

* fix lookup nullable

* fix lookup unit test

* test null case",2021-04-03T04:56:42Z
cfcebc40f67a38eb0a3a23ae8919100bd432d533,"Allow list for JDBC connection properties to address CVE-2021-26919 (#11047)

* Allow list for JDBC connection properties to address CVE-2021-26919

* fix tests for java 11",2021-04-02T00:30:47Z
d7f529336463dad273a742808b49d524bdc4ae11,"Add an option for ingestion task to drop (mark unused) all existing segments that are contained by interval in the ingestionSpec (#11025)

* Auto-Compaction can run indefinitely when segmentGranularity is changed from coarser to finer.

* Add option to drop segments after ingestion

* fix checkstyle

* add tests

* add tests

* add tests

* fix test

* add tests

* fix checkstyle

* fix checkstyle

* add docs

* fix docs

* address comments

* address comments

* fix spelling",2021-04-01T19:29:36Z
67dd61e6e491b6e34ca89e673066601c87dc89d0,"remove outdated info from faq (#11053)

* remove outdated info from faq",2021-04-01T15:13:29Z
b35486fa81e12dd9d1236b0f5e02ac5f8aff75fd,"request logs through kafka emitter (#11036)

* request logs through kafka emitter

* travis fixes

* review comments

* kafka emitter unit test

* new line

* travis checks

* checkstyle fix

* count request lost when request topic is null",2021-04-01T06:01:32Z
071b6f56852b6a030561b257d5e5e44f0bb9cfee,"bump to latest of same version node and npm versions, bump frontend-maven-plugin (#11057)",2021-03-31T23:42:18Z
782a1d4e6ca53076cfe100e391f3b77ab39a055f,Add Calcite Avatica protobuf handler (#10543),2021-03-31T19:46:25Z
43ea184b748e0e7ba90411a0b323212e60a29cf7,Add explicit EOF and use assert instead of exception (#11041),2021-03-31T16:41:57Z
6789ed0a05fde97a70d084d54a0cb7f693c7b682,"Update reset-cluster.md (#10990)

fixed Error: Could not find or load main class org.apache.druid.cli.Main",2021-03-30T03:38:35Z
1d79ca906a7772dd481370fb146a5bfb1fdbca1c,Bump aliyun SDK to 3.11.3 (#11044),2021-03-30T03:33:24Z
8544d29bc7c7f5f762981b408c939a3988a0758f,"remove experimental from Kinesis with caveats (#10998)

* remove experimental from Kinesis with caveats

* add suggested known issue

* spelling fixes",2021-03-29T20:57:58Z
2fdc313e4d9dab5b005826497508db7f9fbd33a3,"GCS lookup support (#11026)

* GCS lookup support

* checkstyle fix

* review comments

* review comments

* remove unused import",2021-03-29T20:10:41Z
74ae2eb71a3d4515a84aaf33d8a03f2b16922ae9,Fix Integration Tests (#11046),2021-03-29T19:33:49Z
c0e6d1c7f81c8e19fdcf6f1bd2c11fd3eb926bb0,"vectorize 'auto' long decoding (#11004)

* Vectorize LongDeserializers.

Also, add many more tests.

* more faster

* more more faster

* more cleanup

* fixes

* forbidden

* benchmark style

* idk why

* adjust

* add preconditions for value >= 0 for writers

* add 64 bit exception

Co-authored-by: Gian Merlino <gian@imply.io>",2021-03-27T01:39:13Z
e2c4466fbd6df9db262ac2682596f54d8f9418ba,Add missing config (#11020),2021-03-26T11:45:53Z
248af387774ccc97d1a8e11212dd30febac8f843,"Fix subquery with order by (#11017)

* fix subquery with order by

* fix parameter",2021-03-26T11:43:46Z
cc23befaa41cc69f3efba75c5ccf11a9e457db0b,Open Zookeeper and Peon ports. (#11027),2021-03-26T10:57:44Z
bacad04aa29f797f80f484ead0e265912be0b9e5,"make SqlResource laning test less sensitive to timing (#11032)

* make laning test less sensitive to timing

* style",2021-03-26T10:43:28Z
f160548231e550cd815a836fef9436eebc4ee472,maybe fix leadership integration test flakes (#11031),2021-03-26T10:43:06Z
bf20f9e9798417c9293a195690b6adcb48f44d3f,"DruidInputSource: Fix issues in column projection, timestamp handling. (#10267)

* DruidInputSource: Fix issues in column projection, timestamp handling.

DruidInputSource, DruidSegmentReader changes:

1) Remove ""dimensions"" and ""metrics"". They are not necessary, because we
   can compute which columns we need to read based on what is going to
   be used by the timestamp, transform, dimensions, and metrics.
2) Start using ColumnsFilter (see below) to decide which columns we need
   to read.
3) Actually respect the ""timestampSpec"". Previously, it was ignored, and
   the timestamp of the returned InputRows was set to the `__time` column
   of the input datasource.

(1) and (2) together fix a bug in which the DruidInputSource would not
properly read columns that are used as inputs to a transformSpec.

(3) fixes a bug where the timestampSpec would be ignored if you attempted
to set the column to something other than `__time`.

(1) and (3) are breaking changes.

Web console changes:

1) Remove ""Dimensions"" and ""Metrics"" from the Druid input source.
2) Set timestampSpec to `{""column"": ""__time"", ""format"": ""millis""}` for
   compatibility with the new behavior.

Other changes:

1) Add ColumnsFilter, a new class that allows input readers to determine
   which columns they need to read. Currently, it's only used by the
   DruidInputSource, but it could be used by other columnar input sources
   in the future.
2) Add a ColumnsFilter to InputRowSchema.
3) Remove the metric names from InputRowSchema (they were unused).
4) Add InputRowSchemas.fromDataSchema method that computes the proper
   ColumnsFilter for given timestamp, dimensions, transform, and metrics.
5) Add ""getRequiredColumns"" method to TransformSpec to support the above.

* Various fixups.

* Uncomment incorrectly commented lines.

* Move TransformSpecTest to the proper module.

* Add druid.indexer.task.ignoreTimestampSpecForDruidInputSource setting.

* Fix.

* Fix build.

* Checkstyle.

* Misc fixes.

* Fix test.

* Move config.

* Fix imports.

* Fixup.

* Fix ShuffleResourceTest.

* Add import.

* Smarter exclusions.

* Fixes based on tests.

Also, add TIME_COLUMN constant in the web console.

* Adjustments for tests.

* Reorder test data.

* Update docs.

* Update docs to say Druid 0.22.0 instead of 0.21.0.

* Fix test.

* Fix ITAutoCompactionTest.

* Changes from review & from merging.",2021-03-25T17:32:21Z
efc5d7d1124b28aa4a90de210a707fa0f402ac5a,"Suppress CVEs for Solr and org.codehaus.jackson (#11030)

* Suppress CVEs for Solr and org.codehaus.jackson

* add a comment",2021-03-24T23:44:05Z
d69533dbd94fc69fea3a9d6b858d98b42532ec89,"First refactor of compaction (#10935)

* first pass compaction refactor. includes updated behavior for queryGranularity. removes duplicated doc

* fix links, typos, some reorganization

* fix spelling. TBD still there for work in progress

* updates tutorial examples, adds more clarification around compaction use cases

* add granularity spec to automatic compaction config

* final edits

* spelling fixes

* apply suggestions from review

* upadtes from review

* last edits

* move note

* clarify null

* fix links & spelling

* latest review

* edits to auto-compaction config

* add back rollup

* fix links & spelling

* Update compaction.md

add granularityspec to example",2021-03-24T18:41:44Z
c87ac0823f554095ba2f77c35234c4f7c31aa523,"Auto-compaction with segment granularity retrieve incomplete segments from timeline when interval overlap (#11019)

* Fix Auto-compaction with segment granularity retrieve incomplete segments from timeline when interval overlap

* Fix Auto-compaction with segment granularity retrieve incomplete segments from timeline when interval overlap

* Fix Auto-compaction with segment granularity retrieve incomplete segments from timeline when interval overlap

* Fix Auto-compaction with segment granularity retrieve incomplete segments from timeline when interval overlap

* address comments",2021-03-24T18:37:29Z
8296123d895db7d06bc4517db5e767afb7862b83,Add resources used to EXPLAIN PLAN FOR output (#11024),2021-03-24T00:21:15Z
6aec8f0c1b3968c94a1cdb741281af907299978c,allow multiple ldap bootstrap files for integration tests (#11023),2021-03-23T20:18:36Z
a04193301732b08977b2085f2f858751ab614141,"Allow overlapping intervals for the compaction task (#10912)

* Allow overlapping intervals for the compaction task

* unused import

* line indentation

Co-authored-by: Maytas Monsereenusorn <maytasm@apache.org>",2021-03-23T18:21:54Z
51d2c61f1cd03f2d3fe396c5bb4738293dc92107,"Auto-compaction with segment granularity should skip segments that already have the configured segmentGranularity  (#11009)

* Auto-compaction with segment granularity should skip segments that already have the configured segmentGranularity

* Auto-compaction with segment granularity should skip segments that already have the configured segmentGranularity

* Auto-compaction with segment granularity should skip segments that already have the configured segmentGranularity

* address comments

* address comments

* address comments

* address comments

* address comments",2021-03-20T00:38:28Z
5fae7dfcf247f61053a83a46bec94a69c019e234,"Fix regression introduced by #11008 (#11013)

* Fix regression introduced by #11008

* Add back and tweak the check to not inspect resources for authorization when AllowAllAuthorizer is configured.
Add a unit test to validate that the change doesn't introduce new behavior.",2021-03-20T00:15:03Z
82c4d9dd92b11f336c658f904498aeafa07925bd,"Fix a resource leak in JobHelper (#10913)

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-03-20T00:02:31Z
8b4f9667080e599d1fdfb273c73d00d73aab07fa,"[BUG FIX]Kinesis lag keep increasing when there is no more new data for kinesis stream (#11006)

* fix kinesis lag metrics bug and modify current UT

* done

* revert misc.xml

* code review

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-03-19T14:47:27Z
f19c2e9ce40b711b5cf1ac1ad1cef9d50167c371,"If ingested data has sparse columns, the ingested data with forceGuaranteedRollup=true can result in imperfect rollup and final dimension ordering can be different from dimensionSpec ordering in the ingestionSpec (#10948)

* add IT

* add IT

* add the fix

* fix checkstyle

* fix compile

* fix compile

* fix test

* fix test

* address comments",2021-03-19T00:04:28Z
83fcab1d0f81081b5a307042ec1bdcbfa3f7d9cf,"Improve performance of queries against SYSTEM.SEGMENT table. (#11008)

Size HashMap and HashSet appropriately. Perf analysis of the queries
revealed that over 25% of the query time was spent in resizing HashMap and HashSet
collections. Also, prevent the need to examine and authorize all resources when
AllowAllAuthorizer is the configured authorizer.",2021-03-18T05:24:02Z
3d7e7c2c836d73cb77dbd412d6eb2d61f6912a69,"Avoid deletion of load/drop entry from CuratorLoadQueuePeon in case of load timeout (#10213)

* Skip queue removal on timeout

* Clarify error

* Add new config to control replication

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2021-03-17T18:34:05Z
1061faa6ba97106aec79d48aac158e88faa965c8,"prefer string concatenation over String.format in performance sensitive code (#10997)

String.format relies on regex parsing, which makes these calls expensive
at higher request volumes.",2021-03-17T05:06:26Z
694605e815f56aed49f51441317b2e37b8c869a4,suppress (#11002),2021-03-17T01:17:57Z
6b0c2e8996aeac3e947a7edfecebeab4b1f16935,"CompactionTask throws exception on conflicting segmentGranularity (#10996)

* CompactionTask throws exception on conflicting segmentGranularity

* add comment",2021-03-16T19:51:50Z
f37713dc6d136ea87ee3b56d8bef54ab4f1d56cc,Fix auto compaction with mixed versions in the same time chunk based on new segment granularity (#11000),2021-03-16T19:48:19Z
4cd4a22f87616ad6b4a722a8a47bad9ce25fa790,"expression filter support for vectorized query engines (#10613)

* expression filter support for vectorized query engines

* remove unused codes

* more tests

* refactor, more tests

* suppress

* more

* more

* more

* oops, i was wrong

* comment

* remove decorate, object dimension selector, more javadocs

* style",2021-03-16T18:46:50Z
68781a0d20aeae0ea8a53f66b115b745615209ea,"update testing frameworks for Java 15 support (#10984)

* update jacoco to 0.8.6
* update easymock to 4.2
* update equalsverifier to 3.5.5
* update mockito to 3.8.0
* update powermock to 2.0.9
* update assertj-core to 3.19.0
* update testng to 7.3.0
  - fix DTD url security for testng 7.x
  - fix backwards incompatibility in testng 7.x",2021-03-13T04:18:13Z
ed91a2bb384df8c70a39abdb1813cff7d3d48a17,"Fix Kinesis should not increment throwAway count on EOS record (#10976)

* fix Kinesis increament throwAway on EOS record

* fix checkstyle

* fix IT

* fix test

* fix IT

* fix IT

* fix IT

* fix IT",2021-03-12T06:04:58Z
3277479ff762991c972bb1dd8e95a00438d13306,"[Minor]Add metadata-related logs and missing UT for kill tasks. (#10956)

* logs more info when delete segments && add deleteSegments-related UT

* revert msic.xml

* code review

* use log.debugSegments

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-03-12T02:00:52Z
b0432be07aa449213f36280b89890f14272dc14a,"Apache archive mirror (#10979)

* Ability to use mirror of archive.apache.org

* Ability to use mirror of archive.apache.org: documentation

* Ability to use mirror of archive.apache.org: fix int test Dockerfile: missing COPY instruction",2021-03-11T17:07:51Z
d26e1bc70d039d3ab54159291c8c5081953ca670,"update code check plugins for Java 15 support (#10978)

* update maven-forbidden-api plugin to 3.1
* update maven-pmd-plugin to 3.14
* update spotbugs to 4.2.2
* fixes validation failures newly caught by those updates
  - fix SpotBugs NP_NONNULL_PARAM_VIOLATION
  - fix PMD UnnecessaryFullyQualifiedName",2021-03-11T15:31:41Z
7a68cd8b86fba6850be559ebc7912acab43171cc,"use maven enforcer to check maven version (#10977)

* removes a warning about prerequisites only being allowed for plugins
* update maven enforcer plugin to the latest version (3.0.0-M3)",2021-03-11T15:30:10Z
b808fd2ef9863720770623e7bed39d3380be6f34,"Fix NPE in the constructor of TopNQuery (#10969)

* fix NPE

* Add unit tests to cover parameter checking",2021-03-11T08:04:49Z
dfad38d561c294512856cd17280c81024a6051cb,"Fix unclear documentation of human readable byte (#10825)

* Fix unclear documentation of human readable byte

Follows https://github.com/apache/druid/pull/10203 ;
See https://github.com/apache/druid/pull/10203#issuecomment-771080634 .

* Fix sentence style

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-03-11T08:01:38Z
b79b7e6dfbe8482b176eab1b1419cffbecfc8eae,"Improve exception handling in IT to reduce excessive stack trace messages (#10955)

* Suppress logging for some exceptions to reduce excessive stack trace messages

Signed-off-by: frank chen <frank.chen021@outlook.com>

* log message for channel disconnected exception

Signed-off-by: frank chen <frank.chen021@outlook.com>",2021-03-11T05:27:55Z
4897731e376b80c37ea7713419bd89c7835809b9,"Make web console fast around sys.segments (#10909)

* do not load all the segments

* fix filtering

* update datasource view

* updated tests

* remove trimmedSegments

* Availability detail

* be smart about when showing smart modes

* fix tests

* add coordinator overlord mode",2021-03-11T03:59:50Z
43638cc6f969dc9c1fde1ef9b39e334427ad371a,"license.yaml fixes for code introduced related to AWS RDS token based password provider in PR #9518 (#10885)

* license.yaml fixes for code introduced related to AWS RDS token based password provider in PR #9518

* add notice for commons-dbcp in license file

* add version and update NOTICE file",2021-03-10T20:59:25Z
c0fb326788582c614ba8c8c854ff26e03b59e044,"Web console: fix service view actions when grouping (#10898)

* fix service view actions when grouping

* fix test",2021-03-10T05:38:56Z
58294329b77a563c5eb9327e9365c48ad60c0021,"fix SQL issue for group by queries with time filter that gets optimized to false (#10968)

* fix SQL issue for group by queries with time filter that gets optimized to false

* short circuit always false in CombineAndSimplifyBounds

* adjust

* javadocs

* add preconditions for and/or filters to ensure they have children

* add comments, remove preconditions",2021-03-10T03:41:16Z
9c083783c9907b046bc087fbe575480d08f53eb8,"Don't fail on invalid views in InformationSchema (#10960)

* Don't fail on invalid views in InformationSchema

* Fix test",2021-03-10T00:19:59Z
7f96ca8f5e8471a2e54b317bb7614b765cdabcd4,"Update topnquery.md (#10944)

minor edits of the English, no meanings changed (imo)",2021-03-09T23:19:02Z
36e86a2880de52e8270ffa26904f179cdd243b75,"Add protobuf schema registry (#10839)

* dd_protobuf_schema_registry

* change licese

* delete some annotation

* nodify tests

* delete extra exception

* add licenses

* add descriptor and protoMessageType in ProtobufInputRowParser for adopt to old version

* seperate kafka-protobuf-provider

* modify protobuf.md

* refine protobuf.md

* add config and header

* bug fixed

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-03-09T23:15:51Z
a57c28e9ce2829f45e31d29276bf14d9f7afbb50,"prometheus metric exporter (#10412)

* prometheus-emitter

* use existing jetty server to expose prometheus collection endpoint

* unused variables

* better variable names

* removed unused dependencies

* more metric definitions

* reorganize

* use prometheus HTTPServer instead of hooking into Jetty server

* temporary empty help string

* temporary non-empty help.  fix incorrect dimension value in JSON (also updated statsd json)

* added full help text.  added metric conversion factor for timers that are not using seconds. Correct metric dimension name in documentation

* added documentation for prometheus emitter

* safety for invalid labelNames

* fix travis checks

* Unit test and better sanitization of metrics names and label values

* add precondition to check namespace against regex

* use precompiled regex

* remove static imports. fix metric types

* better docs. fix possible NPE in PrometheusEmitterConfig. Guard against multiple calls to PrometheusEmitter.start()

* Update regex for label-value replacements to allow internal numeric values.  Additional tests

* Adds missing license header
updates website/.spelling to add words used in prometheus-emitter docs.
updates docs/operations/metrics.md to correct the spelling of
bufferPoolName

* fixes version in extensions-contrib/prometheus-emitter

* fix style guide errors

* update import ordering

* add another word to website/.spelling

* remove unthrown declared exception

* remove unused import

* Pushgateway strategy for metrics

* typo

* Format fix and nullable strategy

* Update pom file for prometheus-emitter

* code review comments. Counter to gauge for cache metrics, periodical task to pushGateway

* Syntax fix

* Dimension label regex include numeric character back, fix previous commit

* bump prometheus-emitter pom dev version

* Remove scheduled task inside poen that push metrics

* Fix checkstyle

* Unit test coverage

* Unit test coverage

* Spelling

* Doc fix

* spelling

Co-authored-by: Michael Schiff <michael.schiff@tubemogul.com>
Co-authored-by: Michael Schiff <schiff.michael@gmail.com>
Co-authored-by: Tianxin Zhao <tianxin.zhao@tubemogul.com>
Co-authored-by: Tianxin Zhao <tizhao@adobe.com>",2021-03-09T22:37:31Z
c66951a59e2963369bbb447dba51ea7651a1cdb1,"Add flag in SQL to disable left base filter optimization for joins (#10947)

* Add flag to disable left base filter

* code coverage

* Draft

* Review comments

* code coverage

* add docs

* Add old tests",2021-03-09T21:07:34Z
4dd22a850b2e5acc8d9732513303fe6e3560d3d0,"Fix streaming ingestion fails if it encounters empty rows (Regression) (#10962)

* Fix streaming ingestion fails and halt if it  encounters empty rows

* address comments",2021-03-09T20:11:58Z
80ec28578a9dc5975cfeb90c6d856469cfa4e6bf,"show leader in Services Tab (#10951)

Signed-off-by: frank chen <frank.chen021@outlook.com>",2021-03-09T16:03:56Z
0f81ce32a082b78d32cb60a9cc57879d16340978,"refactor query caching docs (#10848)

* refactor query caching

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* Update docs/querying/using-caching.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* add description for context link

* accept suggestions

* reword, rework some awkward language

* incorporate feedback, fix errors

* add back perf considerations

* Apply suggestions from code review

applying @suneet-s 's changes

Co-authored-by: Suneet Saldanha <suneet@apache.org>

* Update caching.md

fix link

Co-authored-by: sthetland <steve.hetland@imply.io>
Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-03-09T06:25:48Z
489f5b1a03c8c3d35374c9eb6fd140f33c4f3fb1,"Avoid expensive findEntry call in segment metadata query (#10892)

* Avoid expensive findEntry call in segment metadata query

* other places

* Remove findEntry

* Fix add cost

* Refactor a bit

* Add performance test

* Add comment

* Review comments

* intellij",2021-03-09T06:08:33Z
ae620921df2230dfb05a4396012cb72aae428069,"Fix classCastException when inputs to union are join (#10950)

* Fix union queries

* Add tests",2021-03-09T05:20:26Z
756ac6ef30b0ceedde23a4e276dd16e74347c604,Remove flaky arm64 test job (#10953),2021-03-08T22:09:33Z
96889cdebce68cee839b350205b60823227e142b,"add avro + kafka + schema registry integration test (#10929)

* add avro + schema registry integration test

* style

* retry init

* maybe this

* oops heh

* this will fix it

* review stuffs

* fix comment",2021-03-08T16:12:12Z
9946306d4b2c16a7fc8bac97c9f4815ed4b46570,"Add configurations for allowed protocols for HTTP and HDFS inputSources/firehoses (#10830)

* Allow only HTTP and HTTPS protocols for the HTTP inputSource

* rename

* Update core/src/main/java/org/apache/druid/data/input/impl/HttpInputSource.java

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* fix http firehose and update doc

* HDFS inputSource

* add configs for allowed protocols

* fix checkstyle and doc

* more checkstyle

* remove stale doc

* remove more doc

* Apply doc suggestions from code review

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* update hdfs address in docs

* fix test

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>
Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-03-06T19:43:00Z
bddacbb1c3abccf6ad035a4756a6960761fd43a2,"Dynamic auto scale Kafka-Stream ingest tasks (#10524)

* druid task auto scale based on kafka lag

* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig

* druid task auto scale based on kafka lag

* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig

* test dynamic auto scale done

* auto scale tasks tested on prd cluster

* auto scale tasks tested on prd cluster

* modify code style to solve 29055.10 29055.9 29055.17 29055.18 29055.19 29055.20

* rename test fiel function

* change codes and add docs based on capistrant reviewed

* midify test docs

* modify docs

* modify docs

* modify docs

* merge from master

* Extract the autoScale logic out of SeekableStreamSupervisor to minimize putting more stuff inside there &&  Make autoscaling algorithm configurable and scalable.

* fix ci failed

* revert msic.xml

* add uts to test autoscaler create && scale out/in and kafka ingest with scale enable

* add more uts

* fix inner class check

* add IT for kafka ingestion with autoscaler

* add new IT in groups=kafka-index named testKafkaIndexDataWithWithAutoscaler

* review change

* code review

* remove unused imports

* fix NLP

* fix docs and UTs

* revert misc.xml

* use jackson to build autoScaleConfig with default values

* add uts

* use jackson to init AutoScalerConfig in IOConfig instead of Map<>

* autoscalerConfig interface and provide a defaultAutoScalerConfig

* modify uts

* modify docs

* fix checkstyle

* revert misc.xml

* modify uts

* reviewed code change

* reviewed code change

* code reviewed

* code review

* log changed

* do StringUtils.encodeForFormat when create allocationExec

* code review && limit taskCountMax to partitionNumbers

* modify docs

* code review

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-03-06T09:06:52Z
16acd6686a337fc9a12e9aeda443fca973bdc625,"Remove stale 'namespace' config for JDBC lookups from doc (#10886)

* Remove stale 'namespace' config for JDBC lookups from doc and web-console

* revert webconsole change

* address comments",2021-03-05T01:16:34Z
2c30f8b3b7eadf8281a0bb64380973d5bca1d79b,"Migrate bitmap benchmarks to JMH (#10936)

* Migrate bitmap benchmarks to JMH

* add concise",2021-03-04T20:50:55Z
1a15987432fab044fc83a99af8ab497d887aeda1,"Supporting filters in the left base table for join datasources (#10697)

* where filter left first draft

* Revert changes in calcite test

* Refactor a bit

* Fixing the Tests

* Changes

* Adding tests

* Add tests for correlated queries

* Add comment

* Fix typos",2021-03-04T18:39:21Z
6040c30fcd29f74b9a2efb5d8cabce46972ea633,"Upgrade jetty to latest version (#10937)

* Upgrade jetty

* Fix license",2021-03-04T14:28:50Z
be2ac8d6ce828aa48d702f6aae2ab05c5802a83c,"Document type inference issues with dynamic params in SQL (#10801)

* Clarify docs

* Apply suggestions from code review

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-03-04T11:48:11Z
87a2abff795993e37fa12b95e069101954a5d515,"Fix runtime error when IndexedTableJoinMatcher matches long selector to unique string index. (#10942)

* Fix runtime error when IndexedTableJoinMatcher matches long selector to unique string index.

The issue arises when matching against a long selector on the left-hand side to a string
typed Index on the right-hand side, and when that Index also returns true from areKeysUnique.
In this case, IndexedTableJoinMatcher would generate a ConditionMatcher that implements
matchSingleRow by calling findUniqueLong on the Index. This is inappropriate because the Index
is actually string typed. The fix is to check the type of the Index before deciding how to
implement the ConditionMatcher.

The patch adds ""testMatchSingleRowToUniqueStringIndex"" to IndexedTableJoinMatcherTest, which
explores this case.

* Update tests.",2021-03-04T08:57:59Z
d6e591220b44e722947abfb2c9cde09f15778bf1,"Add instructions for updating licenses (#10894)

* Add instructions for updating licenses

* updating license

* pull request template",2021-03-03T08:57:09Z
8831c0d05760b0e4b4df7afd08549a95daab9d5f,"Update PR template to include the contributing doc; suggestion to not use force push (#10769)

* Update PR template to include the contributing doc; suggestion to not use force push

* make it a comment

* moved it to top

* address review comment",2021-03-03T06:26:49Z
23333914c7ac960ddf3b0bacfd1ac89c99479c16,add javadoc and test (#10938),2021-03-03T03:34:00Z
7d9a61cf7f7a5f623d341ca9fe248ab11f03589f,Suppress CVE-2017-15288 and upgrade bcprov-ext-jdk15o (#10933),2021-03-03T00:18:27Z
b7b0ee83627dd7887392e8f9d6fb5cb29465c28c,"Add query granularity to compaction task (#10900)

* add query granularity to compaction task

* fix checkstyle

* fix checkstyle

* fix test

* fix test

* add tests

* fix test

* fix test

* cleanup

* rename class

* fix test

* fix test

* add test

* fix test",2021-03-02T19:23:52Z
05e8f8fe068e2f00088aca941fcec67dc1d56efa,"CsvInputFormat: Create a parser per InputEntityReader. (#10923)

RFC4180Parser is not thread safe and cannot be shared across readers.",2021-02-28T02:37:05Z
99198c02af141bc2f6579bc9070cd34fbbf33e43,"Add config and header support for confluent schema registry.  (#10314)

* Add config and header support for confluent schema registry. (porting code from https://github.com/apache/druid/pull/9096)

* Add Eclipse Public License 2.0 to license check

* Update licenses.yaml, revert changes to check-licenses.py and dependencies for integration-tests

* Add spelling exception and remove unused dependency

* Use non-deprecated getSchemaById() and remove duplicated license entry

* Update docs/ingestion/data-formats.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* Added check for schema being null, as per Confluent code

* Missing imports and whitespace

* Updated unit tests with AvroSchema

Co-authored-by: Sergio Spinatelli <sergio.spinatelli.extern@7-tv.de>
Co-authored-by: Sergio Spinatelli <sergio.spinatelli.extern@joyn.de>
Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-02-27T22:25:35Z
573de3bc0da892e4575f72afe46ceab480ca29ce,"clarify security requirements around HTTPInputSource (#10914)

* clarify security requirements around HTTPInputSource

* explicitly mention write/datasource in best practices. clarify that the ingestion task is the risk

* Update docs/operations/security-overview.md

Co-authored-by: Suneet Saldanha <suneet@apache.org>

Co-authored-by: Suneet Saldanha <suneet@apache.org>",2021-02-26T17:37:47Z
f930cf14d68a9b30e4a146877b3d3b8c2ac14f54,"Use the latest Apache DataSketches release 2.0.0 (#10917)

* use the latest Apache DataSketches release 2.0.0

* updated datasketches version

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2021-02-26T13:52:00Z
07902f607bd72fe905c9ff0f8953975253d9cc7e,"Granularity: Introduce primitive-typed bucketStart, increment methods. (#10904)

* Granularity: Introduce primitive-typed bucketStart, increment methods.

Saves creation of unnecessary DateTime objects in timestamp_floor and
timestamp_ceil expressions.

* Fix style.

* Amp up the test coverage.",2021-02-25T15:59:20Z
67eff4110dfb2112586af9a8e6753e539cee509f,"Improve Druid ldap auth documentation (#10915)

* Improve Druid ldap auth documentation

Improved the ldap auth docs by clarifying that the object classes and
attributes noted are specific to Microsoft Active Directory, and could
be different depending on the specific ldap server being used. Also
emphasized the importance of the memberOf field and noted that the
step about adding users to roles is only needed in certain circumstances.

* * add another note

* Apply suggestions from code review

Co-authored-by: sthetland <steve.hetland@imply.io>

* * simplify

* * Address review comments

Co-authored-by: sthetland <steve.hetland@imply.io>",2021-02-24T23:28:41Z
0ecc90142ef0882dc58242835e75cc6395bcb086,"basic security extension ignore permissions that use unknown ResourceType or Action (#10896)

* suppress unknown ResourceType and Action for basic-security authorizer stuff

* fix pom

* print failed role, test logs",2021-02-23T22:49:09Z
553f5c8570970a951cfef35b60dd5cc217999587,"Ldap integration tests (#10901)

* Add integration tests for ldap extension

* * refactor

* * add ldap-security integration test to travis

* * fix license error

* * Fix failing other integration test

* * break up large tests
* refactor
* address review comments

* * fix intellij inspections failure

* * remove dead code",2021-02-23T21:29:57Z
f34c6eb3c0b83e8a118c98bf071bd55aa637057a,"add druid jdbc handler config for minimum number of rows per frame (#10880)

* add druid jdbc handler config for minimum number of rows per frame

* javadocs and docs adjustments

* spelling

* adjust docs per review with minor tweaks

* adjust more",2021-02-23T10:11:04Z
3a0a0c033f9dd6633e554fb694ec9853494ee320,"Reload segment usage when starting the process (#10884)

* Reload segment usage when starting the process

* doc

* Add more tests

* remove forbidden method

* Add alert",2021-02-22T08:08:44Z
b7e9f5bc852f516e1ab1ce80b09572e7b473b277,"BoundDimFilter: Simplify the various DruidLongPredicates. (#10906)

They all use Long.compare, but they don't need to. Changing to
regular comparisons simplifies the code and also removes branches.
(Internally, Long.compare has two branches.)",2021-02-20T00:44:56Z
f5bfccc7208f29e352808d4de93ab64e8134cd50,"Fix maxBytesInMemory for heap overhead of all sinks and hydrants check (#10891)

* fix maxBytesInMemory

* fix maxBytesInMemory check

* fix maxBytesInMemory check

* fix test",2021-02-19T05:48:57Z
cbbef80c7f717e9bc554aa58595f86cd68cb537f,"add SQL operators for bitwise expressions (#10823)

* add SQL operators for bitwise expressions

* more test

* fix spelling

* more tests",2021-02-19T04:56:33Z
84341737d56b7279c9ccdd2f0f48a8aa5a517859,"Add property for binding view manager type (#10895)

* Add property for binding view manager type

* Checkstyle

* Fix constructor

* Add @Test",2021-02-18T23:57:45Z
eabad0fb352ee7f1f32658edb95d236fe1837662,"Keep query granularity of compacted segments after compaction (#10856)

* Keep query granularity of compacted segments after compaction

* Protect against null isRollup

* Fix bugspot check RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN & edit an existing comment

* Make sure that NONE is also included when comparing for the finer granularity

* Update integration test check for segment size due to query granularity propagation affecting size

* Minor code cleanup

* Added functional test to verify queryGranlarity after compaction

* Minor style fix

* Update unit tests",2021-02-18T09:35:10Z
1a4c43f9fd4c7bc8ca8934aad635331e63dc9e5e,"Web console: remove namespace prop that does not exist from JDBC lookup (#10888)

* remove namespace prop that does not exist from JDBC lookup

* remove namespace from tests",2021-02-18T01:07:32Z
32e801ceabf37d5a9cbadd3623452077f7bd921d,Bump Apache Parquet from 1.11.0 to 1.11.1 (#10889),2021-02-17T04:18:17Z
bc7004006f7a505f31b27ad07a526c3212a58d88,"Update dependency-check plugin (#10883)

* Use dependency-check aggregate

* oops",2021-02-17T03:22:04Z
8ad68135c8c1394445029d941f29723a377523b2,"Filter unauthorized views in InformationSchema (#10874)

* Filter unauthorized views in InformationSchema

* Use fixed name for view schema

* Remove unused string",2021-02-17T01:36:45Z
1e40f51e6577173cbc3f23e482448ba95b84c64e,"Fix example names of security artifacts in docs (#10882)

* replacing example names

* unrelated typos

* unintended changes

* a few more typo fixes",2021-02-16T22:58:50Z
c8d2654605224a2bcaff9c0f7b07c2896a5b78d6,"Use native git for git-commit-id-plugin to speed up build (#10881)

* Segment timeline doesn't show results older than 3 months

* Adoption testing patch for web segment timeline view and also refactoring default time config

* Changing git-commit-id-plugin to use native git, shaving off 15% off build time

Co-authored-by: dev <dev@dev.minitoken.com>",2021-02-12T17:31:07Z
6541178c21839530a42af4b4675a9bc680bffca6,"Support segmentGranularity for auto-compaction (#10843)

* Support segmentGranularity for auto-compaction

* Support segmentGranularity for auto-compaction

* Support segmentGranularity for auto-compaction

* Support segmentGranularity for auto-compaction

* resolve conflict

* Support segmentGranularity for auto-compaction

* Support segmentGranularity for auto-compaction

* fix tests

* fix more tests

* fix checkstyle

* add unit tests

* fix checkstyle

* fix checkstyle

* fix checkstyle

* add unit tests

* add integration tests

* fix checkstyle

* fix checkstyle

* fix failing tests

* address comments

* address comments

* fix tests

* fix tests

* fix test

* fix test

* fix test

* fix test

* fix test

* fix test

* fix test

* fix test",2021-02-12T11:03:20Z
e684b83e296987decac17f79b234e632af1ad781,Add the ability to supply client certificate to dsql comand line tool. (#10765),2021-02-12T04:16:47Z
64774037c100b7e63a948a4064d22a120b4469f5,"Add config option to specify zk version in integration tests (#10870)

* Update integration-tests README

Updated the integration-tests README file to include instructions
for setting the `ZK_VERSION` property which is now required to be
set prior to executing any integration test. Also added a note
about the importance of setting the test group parameter when
running integration tests, even when running single tests.

* * revert change made to DOCKER_IP doc

* * Add default value for zk version

* * update travis config to use new zk.version property when running
  integration tests

* Remove doc about needing to set ZK_VERSION variable when running
  integration tests",2021-02-11T18:31:49Z
9526fd38dbe73fd3f17865be507a638fa1288eef,"Exclude redundant jars from integration-tests build (#10878)

* Exclude redundant jars from integration-tests build

* changes",2021-02-11T07:53:34Z
8718155f8ffa8c9d34877cbdb7f8eb86df383e29,"Allow for empty keys in hash map (#10869)

* allow for empty keys in hash map

* fix serde test",2021-02-10T19:19:57Z
1ec3f0bd7388ceedcedd1554d94569ad9423866c,"Revert ""Add support for Blacklisting some domains for HTTPInputSource (#10535)"" (#10871)

This reverts commit 6b14bdb3a53d6aec45e485e6849956a69720ba3f.",2021-02-10T01:51:26Z
41a0c1d4b57dff9eca32511dacb3a705189108e2,reword appendToExisting for clarity. add failure behavior (#10748),2021-02-08T21:00:01Z
d9c8fa8f42c7090c5bb0bf283ff93bf8b2aac655,Better stages for travis (#10815),2021-02-06T01:50:29Z
5d8a69ecf9fa1bbe212bc1ee433092be0425f3b6,"fixed input source sampler buildReader exp (#10651)

* fixed input source sampler buildReader exp

* sampler exception unit test

* styling

Co-authored-by: egor-ryashin <egor.ryashin@rilldata.com>",2021-02-05T21:33:55Z
fe30f4b4144b782075db2c7e068f2bd9565a6cfd,"refactor sql lifecycle, druid planner, views, and view permissions (#10812)

* before i leaped i should've seen, the view from halfway down

* fixes

* fixes, more test

* rename

* fix style

* further refactoring

* review stuffs

* rename

* more javadoc and comments",2021-02-05T20:56:55Z
3785ad5812f1ab1c2a20a409eefa13d259f49dca,"Add log message when local input's filter does not match any files (#10837)

* Add log message when local input's filter does not match any files

* Re-use previously defined fileIterator",2021-02-05T17:35:19Z
ac41e4123231f7e0e6692a8f9bd9481e5e65ad74,"Update doc for query errors and add unit tests for JsonParserIterator (#10833)

* Update doc for query errors and add unit tests for JsonParserIterator

* static constructor for convenience

* rename method",2021-02-05T10:55:32Z
96d26e53380aea78337ff098f239df29b7076382,"Fix kinesis ingestion bugs (#10761)

* add offsetFetchPeriod to kinesis ingestion doc

* Remove jackson dependencies from extensions

* Use fixed delay for lag collection

* Metrics reset after finishing processing

* comments

* Broaden the list of exceptions to retry for

* Unit tests

* Add more tests

* Refactoring

* re-order metrics

* Doc suggestions

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>

* Add tests

Co-authored-by: Charles Smith <38529548+techdocsmith@users.noreply.github.com>",2021-02-05T10:49:58Z
a3af2ad2bd93e25d3805631f2b362731f2a69f92,"Clearer instructions to update website for release (#10819)

* Clearer instructions to update website for release

* more about branches

* Update distribution/asf-release-process-guide.md

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-02-05T02:40:05Z
a2b5e011428567cfcbfa16d6264770a32a9b251b,Bump DataSketches memory to 1.3.0 (#10789),2021-02-05T02:39:52Z
6c24b6f0234a2ed898d78e79e5e4291b684d9af9,Build distribution separately (#10841),2021-02-04T23:01:47Z
3f8f00a231c4b47981e0e2e48f18f1221249e6f3,Fix CVE-2021-25646 (#10818),2021-02-04T19:21:43Z
397e7455bab7cb60aeef2b22add2e3eacd13b931,Increase heap to 64m for custom node (#10846),2021-02-04T00:23:19Z
ad946559bff5301afa36a67517c46f4231ee82f8,Suppress CVE-2020-9492 for hadoop-mapreduce-client-core (#10847),2021-02-03T23:54:25Z
a1a49811d92511bd5e1865ce6086450b4b3d6325,"Address CVE-2020-8570, suppress CVE-2020-8554 (#10826)

* Address CVE-2020-8570, suppress CVE-2020-8554

* Update licenses.yaml",2021-02-03T23:17:06Z
5f5977dc8723a6c6615f252635b6d51a5cb3abb3,"Update NOTICE copyright year (#10834)

the future is now",2021-02-02T22:02:26Z
77946f92649c8deba307f99eaf5320d6e76fe390,"K8s IT Test enhance  (#10785)

* do build and stop action in IT

* change base dir from druidHome to druidHome/integration-tests

* add env DRUID_HOME

* bug fix

* modify stop_sh

* ready to test

* bug fix

* modify dir

* tested on dev

* modify dir

* move DRUID_HOME env

* done

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-02-01T23:48:42Z
c346ce64b1497f8bbd547bee16fa98cc0d3c74f2,"move integration tests from ZooKeeper 3.4.x to 3.5.x (#10786)

* move integration tests from ZooKeeper 3.4.x to 3.5.x
* run a subset of our integration tests with ZK 3.4 for backwards compatibility testing.
* remove need to build separate docker-base image
- use multi-stage build for the base image
- use openjdk base image instead of building our own JDK base
- workaround Debian not including MySQL by using MariaDB
- download mysql connector directly instead of using distro version
* fix incorrect openssl command failing on Debian
* keep mysql connector version in sync with pom version",2021-01-31T16:35:39Z
6c0c6e60b3604515571db062915767e9550b52cf,"Vectorized theta sketch aggregator + rework of VectorColumnProcessorFactory. (#10767)

* Vectorized theta sketch aggregator.

Also a refactoring of BufferAggregator and VectorAggregator such that
they share a common interface, BaseBufferAggregator. This allows
implementing both in the same file with an abstract + dual subclass
structure.

* Rework implementation to use composition instead of inheritance.

* Rework things to enable working properly for both complex types and
regular types.

Involved finally moving makeVectorProcessor from DimensionHandlerUtils
into ColumnProcessors and harmonizing the two things.

* Add missing method.

* Style and name changes.

* Fix issues from inspections.

* Fix style issue.",2021-01-29T17:30:09Z
0e4750bac208d99f4a07545cc2f401f9bcdc1381,"Granularity interval materialization (#10742)

* Prevent interval materialization for UniformGranularitySpec inside the overlord

* Change API of bucketIntervals in GranularitySpec to return an Iterable<Interval>

* Javadoc update, respect inputIntervals contract

* Eliminate dependency on wrappedspec (i.e. ArbitraryGranularity) in UniformGranularitySpec

* Added one boundary condition test to UniformGranularityTest and fixed Travis forbidden method errors in IntervalsByGranularity

* Fix Travis style & other checks

* Refactor TreeSet to facilitate re-use in UniformGranularitySpec

* Make sure intervals are unique when there is no segment granularity

* Style/bugspot fixes...

* More travis checks

* Add condensedIntervals method to GranularitySpec and pass it as needed to the lock method

* Style & PR feedback

* Fixed failing test

* Fixed bug in IntervalsByGranularity iterator that it would return repeated elements (see added unit tests that were broken before this change)

* Refactor so that we can get the condensed buckets without materializing the intervals

* Get rid of GranularitySpec::condensedInputIntervals ... not needed

* Travis failures fixes

* Travis checkstyle fix

* Edited/added javadoc comments and a method name (code review feedback)

* Fixed jacoco coverage by moving class and adding more coverage

* Avoid materializing the condensed intervals when locking

* Deal with overlapping intervals

* Remove code and use library code instead

* Refactor intervals by granularity using the FluentIterable, add sanity checks

* Change !hasNext() to inputIntervals().isEmpty()

* Remove redundant lambda

* Use materialized intervals here since this is outside the overlord (for performance)

* Name refactor to reflect the fact that bucket intervals are sorted.

* Style fixes

* Removed redundant method and have condensedIntervalIterator throw IAE when element is null for consistency with other methods in this class (as well that null interval when condensing does not make sense)

* Remove forbidden api

* Move helper class inside common base class to reduce public space pollution",2021-01-29T14:02:10Z
f773497e2c3253b50420d621a923f9ad8131a264,Do not run integration tests in cron stage (#10814),2021-01-29T04:11:36Z
0080e333cc193ef538b57322f2cf256866ed7f66,"Fix cardinality estimation (#10762)

* Fix cardinality estimation

* Add unit test

* code coverage

* fix typo",2021-01-28T23:06:10Z
2a1e47afc3aaea5addf16b956c75a8dbced4cce7,"Web console: Remove first / last suggestions (#10794)

* Remove first / last suggestions

* remove commened out code",2021-01-28T21:37:10Z
2ce7b3dcf47f1991616df51227e1a13a82ace66a,"bitwise math function expressions (#10605)

* expressions: adding bitwise expressions

* double handling and vectorization

* move conversion to Evals

* revert unintended changes

* less magic, split convert functions, fix parser for funny exponent doubles

* fix spelling exceptions list

* more spelling

* fix grammar, add more test, fix docs

* fix docs

Co-authored-by: Max Kaplan <max@maxkaplan.me>",2021-01-28T19:16:53Z
a46d561bd7e2b045a08a2e475847d4a7505a1c93,"Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead (#10740)

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* fix checkstyle

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* fix test

* fix test

* add log

* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead

* address comments

* fix checkstyle

* fix checkstyle

* add config to skip overhead memory calculation

* add test for the skipBytesInMemoryOverheadCheck config

* add docs

* fix checkstyle

* fix checkstyle

* fix spelling

* address comments

* fix travis

* address comments",2021-01-27T08:34:56Z
5efaaab561f08bbc48495e18edb6e6d2c4376227,"Run integration tests in a second stage (#10791)

* Run integration tests in a second stage

* maybe run the integration tests

* better

* drop sudo",2021-01-27T07:11:54Z
a7542652ffb8e150467d41a2f70395543c4b625a,"Fix dependabot warnings (#10796)

* Bump http-proxy from 1.18.0 to 1.18.1 in /web-console (#7)

Bumps [http-proxy](https://github.com/http-party/node-http-proxy) from 1.18.0 to 1.18.1.
- [Release notes](https://github.com/http-party/node-http-proxy/releases)
- [Changelog](https://github.com/http-party/node-http-proxy/blob/master/CHANGELOG.md)
- [Commits](https://github.com/http-party/node-http-proxy/compare/1.18.0...1.18.1)

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* Bump elliptic from 6.5.1 to 6.5.3 in /web-console (#6)

Bumps [elliptic](https://github.com/indutny/elliptic) from 6.5.1 to 6.5.3.
- [Release notes](https://github.com/indutny/elliptic/releases)
- [Commits](https://github.com/indutny/elliptic/compare/v6.5.1...v6.5.3)

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* Bump dot-prop from 4.2.0 to 4.2.1 in /web-console (#5)

Bumps [dot-prop](https://github.com/sindresorhus/dot-prop) from 4.2.0 to 4.2.1.
- [Release notes](https://github.com/sindresorhus/dot-prop/releases)
- [Commits](https://github.com/sindresorhus/dot-prop/compare/v4.2.0...v4.2.1)

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* Bump bl from 1.2.2 to 1.2.3 in /website (#4)

Bumps [bl](https://github.com/rvagg/bl) from 1.2.2 to 1.2.3.
- [Release notes](https://github.com/rvagg/bl/releases)
- [Commits](https://github.com/rvagg/bl/compare/v1.2.2...v1.2.3)

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* Bump prismjs from 1.20.0 to 1.23.0 in /website (#3)

Bumps [prismjs](https://github.com/PrismJS/prism) from 1.20.0 to 1.23.0.
- [Release notes](https://github.com/PrismJS/prism/releases)
- [Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)
- [Commits](https://github.com/PrismJS/prism/compare/v1.20.0...v1.23.0)

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",2021-01-27T07:11:26Z
1c1b396eaaca7b2d858dba9286e38e1887383707,"AWS Web Identity / IRSA Support (#10541)

* AWS Web Identity Support

required for AWS IRSA

* Update kinesis-ingestion.md

* disabling coverage tests

https://github.com/apache/druid/pull/10541#issuecomment-737558213

* exclude coverage

* Update licenses.yaml",2021-01-25T13:14:02Z
8c227bc566b5f225cd375ed697a2447e5dcca29a,use new example manifest (#10787),2021-01-24T20:38:13Z
99494e3d16d6f3857065a281cd8468956236bb21,suggest index parallel for native batch reindexing > 1GB (#10788),2021-01-23T05:54:28Z
cd6af932749d38b2e631e62e3723a662bbbb57bb,add leftover tests from #10743 (#10766),2021-01-22T17:20:48Z
bf1d1d583b9e1fcc2a95da92dff7980a390e422e,"modify (#10778)

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-01-22T17:20:13Z
8c6153d511e4bd9ea365190a59f4e29bdb402f97,"[Bug Fix] Broker will not wait for its SQL metadata view to fully initialize before starting up, even though set awaitInitializationOnStart true (#10779)

* enhance the logic of Start up DruidSchema immediately if there are no segments.

* add UT to test DruidSchema init

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-01-22T16:48:21Z
8b808c48799b04b53e763fd49c766e1e6a26d1cb,"Retain order of AND, OR filter children. (#10758)

* Retain order of AND, OR filter children.

If we retain the order, it enables short-circuiting. People can put a
more selective filter earlier in the list and lower the chance that
later filters will need to be evaluated.

Short-circuiting was working before #9608, which switched to unordered
sets to solve a different problem. This patch tries to solve that
problem a different way.

This patch moves filter simplification logic from ""optimize"" to
""toFilter"", because that allows the code to be shared with Filters.and
and Filters.or. The simplification has become more complicated and so
it's useful to share it.

This patch also removes code from CalciteCnfHelper that is no longer
necessary because Filters.and and Filters.or are now doing the work.

* Fixes for inspections.

* Fix tests.

* Back to a Set.",2021-01-20T16:59:20Z
2590ad4f67fab99760eb4562d84b34e8aa55f6c1,"Historical unloads damaged segments automatically when lazy on start. (#10688)

* ready to test

* tested on dev cluster

* tested

* code review

* add UTs

* add UTs

* ut passed

* ut passed

* opti imports

* done

* done

* fix checkstyle

* modify uts

* modify logs

* changing the package of SegmentLazyLoadFailCallback.java to org.apache.druid.segment

* merge from master

* modify import orders

* merge from master

* merge from master

* modify logs

* modify docs

* modify logs to rerun ci

* modify logs to rerun ci

* modify logs to rerun ci

* modify logs to rerun ci

* modify logs to rerun ci

* modify logs to rerun ci

* modify logs to rerun ci

* modify logs to rerun ci

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-01-17T03:53:30Z
2b24dc3764faf3aa42dd682941e1d28754d96790,SegmentAnalyzer: Properly close column after retrieving it. (#10772),2021-01-17T03:26:34Z
95065bdf1afcbd3e593697179b855b1b26f012f7,Bump dev version to 0.22.0-SNAPSHOT (#10759),2021-01-15T21:16:23Z
c5ecbf67944b4d4e1a550553fa1cf8a1b2a7f928,"fix task metric types in statsd emitter (#10764)

except success and failure stats, task count metrics should all be
gauges, since they represent the current state and not some aggregate
counter over time.",2021-01-15T19:39:51Z
a82910e06532429c90937584db67d663104a0a7d,"OrFilter: Properly handle child matchers that return the original mask. (#10754)

* OrFilter: Properly handle child matchers that return the original mask.

This happens when a child matcher is literally true (for example,
BooleanVectorValueMatcher). In this case, OrFilter would throw this
exception from its call to removeAll while processing the next filter:

  java.lang.IllegalStateException: 'other' must be a different instance from 'this'

Also update the javadocs for VectorValueMatcher to call out that the
returned object may be the same as the input mask.

* Fix style.",2021-01-15T07:28:13Z
7354953b1bff619993b7887a15f10a6f52341d8e,"VectorMatch: Disallow ""copyFrom"", ""addAll"" on self; improve tests. (#10755)

No existing code relies on being able to call these methods in this way.

The new tests exhaustively test all vectors up to size 7, and also test
behavior the run-on-self behavior that has been adjusted by this patch.",2021-01-15T02:29:13Z
2bbf89db81ee527ba4c080c7f0b3a1bc7a77997a,"Remove FalseVectorMatcher, TrueVectorMatcher in favor of BooleanVectorValueMatcher. (#10757)",2021-01-15T02:28:25Z
e52db1982382a11d83b9669b1e583c56825d6eeb,treat null as not defined (#10751),2021-01-15T02:22:59Z
4437c6af60316e86980d3ed75ca5fa7816f93697,"use actual dataInterval in cache key (#10714)

* use actual dataInterval in cache key

* fix ut fail

* fix segmentMaxTime exclusive",2021-01-14T02:31:36Z
b3325c160171f8a91972b5590c481cb121e58eae,"Add a config for monitorScheduler type (#10732)

* Add a config for monitorScheduler type

* check interrupted

* null check

* do not schedule monitor if the previous one is still running

* checkstyle

* clean up names

* change default back to basic

* fix test",2021-01-14T01:20:43Z
149306c9db2daf65d9e10fc632aa1240b4f7d208,"Tidy up HTTP status codes for query errors (#10746)

* Tidy up query error codes

* fix tests

* Restore query exception type in JsonParserIterator

* address review comments; add a comment explaining the ugly switch

* fix test",2021-01-14T01:20:00Z
8c3c9b40601942d78d2213098d095db578acda3b,"fix limited queries with subtotals (#10743)

* i put my thing down, flip it and reverse it

* oops",2021-01-13T20:55:24Z
9362dc7968f02f4fad6b1821c529a8ee18bed8de,"re-use expression vector evaluation results for the same offset in expression vector selectors (#10614)

* cache expression selector results by associating vector expression bindings to underlying vector offset

* better coverage, fix floats

* style

* stupid bot

* stupid me

* more test

* intellij threw me under the bus when it generated those junit methods

* narrow interface instead of passing around offset",2021-01-13T20:44:56Z
2fc2938b01dd4c4f16d3b2db2f49e6fd232bd9c8,"Web console: fix bad results if there is not native bigint (#10741)

* fix bigint when it does not exist

* add test",2021-01-13T00:32:23Z
aecc9e5e7e009b28f5e7d9b848c5d086622dfc97,"Remove legacy code from LogUsedSegments duty (#10287)

* allow the LogUsedSegments duty to be skippped

* Fixes for TravisCI coverage checks and documentation spell checking

* prameterize DruidCoordinatorTest in order to achieve coverage

* update config name to remove duty ref and improve documentation

* refine documentation for new config with reviewer advice

* add default column to docs for new config

* remove legacy code in LogUsedSegments and remove config to disbale duty

* fix makeHistoricalMangementDuties now that the returned list is always the same",2021-01-12T22:09:19Z
ca32652932c8a760719209147cc47c40c5cbc269,"Fix potential deadlock in batch ingestion (#10736)

* Fix potential deadlock in batch ingestion

* fix checkstyle and comment

* this is better",2021-01-12T20:50:45Z
3984457e5bea1f73d4340edb010a4debab054596,"Add missing unit tests for segment loading in historicals (#10737)

* Add missing unit tests for segment loading in historicals

* unused import",2021-01-12T00:20:13Z
fe0511b16a2d34446d11e3fe4e71c248481c0fa8,"Coordinator Dynamic Config changes to ease upgrading with new config value (#10724)

* Coordinator Dynamic Config changes to ease upgrading with new config value

* change a log to debug level following review

* changes based on review feedback

* fix checkstyle",2021-01-11T04:05:39Z
118b50195e5c2989e04e0f5290aa72cae114db39,"Introduce KafkaRecordEntity to support Kafka headers in InputFormats (#10730)

Today Kafka message support in streaming indexing tasks is limited to
message values, and does not provide a way to expose Kafka headers,
timestamps, or keys, which may be of interest to more specialized
Druid input formats. For instance, Kafka headers may be used to indicate
payload format/encoding or additional metadata, and timestamps are often
omitted from values in Kafka streams applications, since they are
included in the record.

This change proposes to introduce KafkaRecordEntity as InputEntity,
which would give input formats full access to the underlying Kafka record,
including headers, key, timestamps. It would also open access to low-level
information such as topic, partition, offset if needed.

KafkaEntity is a subclass of ByteEntity for backwards compatibility with
existing input formats, and to avoid introducing unnecessary complexity
for Kinesis indexing tasks.",2021-01-09T00:04:37Z
2837a9b62fe6ec779bcab837d51ceffadcb83f25,"[Minor Doc Fix] Correct the default value of `druid.server.http.gracefulShutdownTimeout` (#10661)

* done

* done

* done

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-01-08T23:23:08Z
d5192640cb753a1335d2cd22af71a12a3319ec63,"remove extra comma (#10670)

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2021-01-08T23:15:08Z
3624acbcf84781f1e9780aeea28c8d6d6ccf44b3,"fix web-console show json bug (#10710)

* fix web-console show json bug

* replace all JSON.stringify

Co-authored-by: yuanyi <yuanyi@freewheel.tv>",2021-01-08T22:55:55Z
c62b7c19c375a2efb6250b41789429a58e410fc3,"javascript filter result convert to java boolean (#10721)

* javascript filter result convert to java boolean

* use type convert replace script convert, and add more unit test

Co-authored-by: qinzhen <qinzhen@kuaishou.com>",2021-01-08T22:30:09Z
f66fdbfa5d1a95ccb1892ac73bbce1c27ea24a19,add offsetFetchPeriod to kinesis ingestion doc (#10734),2021-01-08T22:19:26Z
6eef0e4c9f85677a5c1e5c9c5de2b21a18a8bd0b,Fix collision between #10689 and #10593. (#10738),2021-01-08T17:52:27Z
26bcd47e511f01f72f2382d32f7568b2248503aa,Thread-safety for ResponseContext.REGISTERED_KEYS (#9667),2021-01-08T08:37:49Z
08ab82f55ca856d60dfe1088c1c0393428b0bb6d,"IncrementalIndex Tests and Benchmarks Parametrization (#10593)

* Remove redundant IncrementalIndex.Builder

* Parametrize incremental index tests and benchmarks

- Reveal and fix a bug in OffheapIncrementalIndex

* Fix forbiddenapis error: Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]

* Fix Intellij errors: declared exception is never thrown

* Add documentation and validate before closing objects on tearDown.

* Add documentation to OffheapIncrementalIndexTestSpec

* Doc corrections and minor changes.

* Add logging for generated rows.

* Refactor new tests/benchmarks.

* Improve IncrementalIndexCreator documentation

* Add required tests for DataGenerator

* Revert ""rollupOpportunity"" to be a string",2021-01-08T06:18:47Z
01e25f1e69574d4649919957b7f39c92e2acc28d,reuse DataSegment object when a segment found on another server (#10715),2021-01-08T05:55:25Z
c7f2d3fbb57a7d40d5d89fab115cba3771a8eaa3,"Update deps for CVE-2020-28168 and CVE-2020-28052 (#10733)

* Update deps for CVE-2020-28168 and CVE-2020-28052

* Make BC runtime scope",2021-01-08T04:31:44Z
1905b80ec33118105c0113dd803812ac0abffd6a,"Update badge for travis in README.md (#10717)

* Update README for updating travis badge

Update README cause
> This repository was migrated and is now building on travis-ci.com

* Update README.md",2021-01-08T02:39:58Z
c7b1212a4354180663e9b23dda6c93566936c054,"AWS RDS token based password  provider (#9518)

* refresh db pwd

* aws iam token password provider

* fix analyze-dependencies build

* fix doc build

* add  ut for BasicDataSourceExt

* more doc updates

* more  doc update

* moving aws  token password  provider to new extension

* remove duplicate changes

* make  all config inline

* extension docs

* refresh db  password  in SQL Firehose code path as well

* add ut

* fix build

* add new extension to distribution

* rds lib is not provided

* fix license build

* add version to license

* change parent version to 0.19.0-snapshot

* address review comments

* fix core/ code coverage

* Update server/src/main/java/org/apache/druid/metadata/BasicDataSourceExt.java

Co-authored-by: Clint Wylie <cjwylie@gmail.com>

* address review comments

* fix spellchecker

* remove inadvertant website file change

Co-authored-by: Clint Wylie <cjwylie@gmail.com>",2021-01-07T05:15:29Z
48e576a307da0efba1cb036c274327733658c1d6,"Scan query: More accurate error message when segment per time chunk limit is exceeded. (#10630)

* Scan query: More accurate error message when segment per time chunk limit is exceeded.

* Add guardrail test.",2021-01-06T22:11:28Z
f9fc1892d1157ad3fd8fbf04418cf1f60c9c3e65,Typo: missing comma in json (#10711),2021-01-06T21:49:50Z
68bb038b314c26bcc57aa96e1078c22d2f24fd35,"Multiphase segment merge for IndexMergerV9 (#10689)

* Multiphase merge for IndexMergerV9

* JSON fix

* Cleanup temp files

* Docs

* Address logging and add IT

* Fix spelling and test unloader datasource name",2021-01-06T06:19:09Z
d2e6240caccbc718bcb7717661f02964432f9856,"k8s-int-test-build: zk-less druid cluster and http based segment/task managment (#10686)

* zk-less druid cluster in k8s build

* attempt to fix build and use http based remote task management

* mm/router logs for debugging

* add default account k8s role and binding for pod, configMap access

* fix issue

* change router port to 8088 for common readinessProbe

* break build_run_k8s_cluster.sh into separate scripts

* revert changes to K8sDruidNodeAnnouncer.java

* k8s extension doc update

* add license to new file

* address review comments

* do not try to load lookups at startup to improve cluster startup time",2021-01-06T02:51:47Z
ea2d51d61f580d469e2b147cdca942b51a857b6e,Better error message for compaction task when it sees no segments for compaction (#10728),2021-01-06T00:49:57Z
769c21cc87b28e8c21e1340508ece8153b560c4e,"Add sample method to IndexingServiceClient (#10729)

* Add sample method to IndexingServiceClient

* Add unit test

* Fix LGTM",2021-01-05T23:02:44Z
045b29fa95acf57b192e2e338ef63dedea60d0df,"Correctly handle null values in time column results (#10642)

* handle null case

* test this case

* test sql resource

* fix style",2021-01-05T06:22:46Z
26b911a3840e0f681cabeb34c2f25b830a8c0b3f,"Make some additions to IT suite to make Hadoop related testing more understandable (#10667)

* Make some additions to IT suite to make Hadoop related testing more understandable

* add start.hadoop.docker to mvn arg tips in doc

* fix issues preventing ITIndexHadoopTest from running in local mode",2020-12-28T18:25:47Z
edfbdbfc97861e36e8d3ad6240cd45427c99a0d9,fix NPE when calling TaskLocation.hashCode with null host (#10708),2020-12-24T23:30:54Z
74fbdd322dd31bcd3f8b79463cdfdeae8ad85ab5,"refactor NodeRole so extensions can participate in disco and announcement (#10700)

* refactor NodeRole so extensions can participate in disco and announcement

* fixes, maybe

* retries

* javadoc

* fix

* spelling",2020-12-24T23:29:32Z
797371598d6d53cc62180f7b2d4639840904686a,update syntax for golbal cached uri lookups (#10629),2020-12-24T17:49:01Z
b7a16d08a62da33f2f8328af426f2b36a09b0735,"Update Apache Kafka to 2.7.0 (#10701)

- align scala versions to match Kafka",2020-12-22T21:56:00Z
58ce2e55d8f49e1cb0de0b1579dff049ac9c873d,"Add dynamic coordinator config that allows control over how many segments are considered when picking a segment to move. (#10284)

* dynamic coord config adding more balancing control

add new dynamic coordinator config, maxSegmentsToConsiderPerMove. This
config caps the number of segments that are iterated over when selecting
a segment to move. The default value combined with current balancing
strategies will still iterate over all provided segments. However,
setting this value to something > 0 will cap the number of segments
visited. This could make sense in cases where a cluster has a very large
number of segments and the admins prefer less iterations vs a thorough
consideration of all segments provided.

* fix checkstyle failure

* Make doc more detailed for admin to understand when/why to use new config

* refactor PR to use a % of segments instead of raw number

* update the docs

* remove bad doc line

* fix typo in name of new dynamic config

* update RservoirSegmentSampler to gracefully deal with values > 100%

* add handler for <= 0 in ReservoirSegmentSampler

* fixup CoordinatorDynamicConfigTest naming and argument ordering

* fix items in docs after spellcheck flags

* Fix lgtm flag on missing space in string literal

* improve documentation for new config

* Add default value to config docs and add advice in cluster tuning doc

* Add percentOfSegmentsToConsiderPerMove to web console coord config dialog

* update jest snapshot after console change

* fix spell checker errors

* Improve debug logging in getRandomSegmentBalancerHolder to cover all bad inputs for % of segments to consider

* add new config back to web console module after merge with master

* fix ReservoirSegmentSamplerTest

* fix line breaks in coordinator console dialog

* Add a test that helps ensure not regressions for percentOfSegmentsToConsiderPerMove

* Make improvements based off of feedback in review

* additional cleanup coming from review

* Add a warning log if limit on segments to consider for move can't be calcluated

* remove unused import

* fix tests for CoordinatorDynamicConfig

* remove precondition test that is redundant in CoordinatorDynamicConfig Builder class",2020-12-22T16:27:55Z
5bd792429664d8f5274ffea314f8bdeb296eb88a,"Fix kinesis integration test (#10696)

* fix kinesis IT

* fix checkstyle",2020-12-21T20:57:40Z
92e5700e1efa2d6924a47c95f64bb284ad7dc803,fix integration test override config which requires environment variables before calling compose (#10694),2020-12-19T01:57:07Z
ca3b925133dac9c2855e61100f97d8de7dc5cf7d,"allow server selection to be aware of query (#10428)

* add query through to server selector

* add nullable extensions, deprecate old methods with defaults

* style changes

* add nullable to ServerSelectorStrategy

* fix test coverage

* missing override in test

* add null check",2020-12-18T21:56:19Z
6f2ce8f0a56d0c0da099221132fb04e69cc46ec8,fix Kinesis It (#10692),2020-12-18T21:47:00Z
57ee8ce4e75aad2fa196be1da55f1e98ca48b470,"CompressionUtils: Read the entire stream when unzipping from a stream. (#10664)

* CompressionUtils: Read the entire stream when unzipping from a stream.

Should fix #6905 by making sure we avoid closing partially-read streams.

* CHECKSTYLE!",2020-12-18T06:52:04Z
da0eabaa01615f34145b14d585e5f3df14ef15b1,"integration test for coordinator and overlord leadership client (#10680)

* integration test for coordinator and overlord leadership, added sys.servers is_leader column

* docs

* remove not needed

* fix comments

* fix compile heh

* oof

* revert unintended

* fix tests, split out docker-compose file selection from starting cluster, use docker-compose down to stop cluster

* fixes

* style

* dang

* heh

* scripts are hard

* fix spelling

* fix thing that must not matter since was already wrong ip, log when test fails

* needs more heap

* fix merge

* less aggro",2020-12-18T06:50:12Z
796c25532ede771c6b9b6dbadfcec030a70084d0,"Fix post-aggregator computation when used with subtotals (#10653)

* Fix post-aggregator computation

* remove commented code

* Fix numeric null handling

* Add test when subquery returns null long",2020-12-18T04:10:26Z
6ae8059c0924bc91ac7854fe08d349a4e7038533,"cleaning up and fixing links (#10528)

* cleaning up and fixing links

* reverting local link

* Update indexer.md

* link checking

* Fixing one more stale link for PostgreSQL",2020-12-17T21:37:43Z
1884c356984695cf31ef63dd0075602b5087ec4b,"Do Integrate test for Druid base on K8s cluster (#10669)

* add a travls job to do integrate test on K8s

* revert build_run_cluster.sh

* revert msic

* run IT test

* ready to test

* modify before/after script

* done

* change mod for script

* done

* add env DRUID_OPERATOR_VERSION=0.0.3

* change version

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-12-17T00:00:42Z
55b8cc428a6f06a23d71c21a415fbd87df7cab21,remove extra word (#10682),2020-12-16T07:02:33Z
7a8e9bb156249ca042da7ed8ccb473cc7594afde,Fix hadoop docker copy script (#10671),2020-12-15T07:08:50Z
ac1882bf74fa7e95ff23b61c58d588a0dbd70bd2,"kubernetes based discovery druid extension to run Druid on K8S without Zookeeper (#10544)

* honor zk enablement config in more places in druid code

* kubernetes based discovery module

* fix spotbugs check

* fix intellij checks error

* fix doc link to kubernetes.md from extension

* make spellchecker happy

* update license.yaml

* fix dependency check errors

* update extension coverage

* UTs for BaseNodeRoleWatcher

* fix forbidden-api check

* update k8s module coverage ignores

* add Bouncy Castle License being same as MIT License for license checking purposes

* further update licenses.yaml

* label/annotation pre-existence assumption

* address review comment",2020-12-15T05:10:31Z
c2e26d2e1cc2218dbb1b25dc2794787fc43e24fa,"Add status/selfDiscovered endpoint to indexer for self discovery of indexer (#10679)

Added the status/selfDiscovered endpoint to indexer. Per the api-reference doc, all services support status/selfDiscovered endpoint. So this change would fix that expected behavior.

Also added example config files for indexer process that can be used to spin up the indexer process.",2020-12-15T03:04:14Z
0ad27c06da4e0bb195a67ed623cc8fbba5967e27,"Historical load Segments enhancement (#10650)

* load segments with segment files check

* add more java docs

* done

* add java docs

* revert misc

* resolve ci failures

* resolve ci failures

* done

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-12-14T21:56:03Z
64f97e7003ebc922e404ff49a31969993669747c,"fix DruidSchema incorrectly listing tables with no segments (#10660)

* fix race condition with DruidSchema tables and dataSourcesNeedingRebuild

* rework to see if it passes analysis

* more better

* maybe this

* re-arrange and comments",2020-12-11T22:14:00Z
753fa6b3bd3512ab8e8112e55be2aff667a845c4,"IdUtils: Forbid characters that cannot be used in znodes. (#10659)

* IdUtils: Forbid characters that cannot be used in znodes.

* Fix whitespace.",2020-12-10T18:49:40Z
be019760bb878e33c4bce49d9d724b7fd789be4b,"document DynamicConfigProvider for kafka consumer properties (#10658)

* document DynamicConfigProvider for kafka consumer properties

* Update docs/development/extensions-core/kafka-ingestion.md

Co-authored-by: Jihoon Son <jihoonson@apache.org>

* Update docs/development/extensions-core/kafka-ingestion.md

* fix doc build

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2020-12-10T16:24:33Z
abcf624a2efab267755631c937321bcbca477cbf,"Bump up jackson-databind to 2.10.5.1 (#10655)

* Bump up jackson version to 2.10.5.1

* only jackson-databind

* license",2020-12-09T21:54:47Z
577cd66002b3caf2e68a3d71ed1327aab11083e1,"Web console: reflect the changes to interval requirement in the data loader flow (#10647)

* no need for intervals

* don't set redundant fields

* fix tests

* better filter control

* work with not

* wrap callout with form group

* update snapshot

* add split hint

* highlight issues with spec

* fixes

* fix default value

* move intervals back to partition step

* work with all sorts of chars

* fix enabled view",2020-12-09T18:18:42Z
9d2df506eaf77c5625ce9ca9f77b79f1759d7137,"Return appropriate config directory path for indexer process. (#10657)

Currently `getConfPath` function returns an empty string for `indexer` service. So the config directory path for this service is not set properly when installed using docker environment.",2020-12-09T17:30:36Z
44df05b8b2d01ffb3725e860540b044460b37d78,Clarify split hint spec behavior (#10656),2020-12-09T14:24:32Z
4ea1ab85310f02432c6925e4922553b4d35cbfcc,Fix links in the grouping function doc (#10654),2020-12-09T06:56:32Z
96a387d972ba69ab92f95ebf75bfb03cd9bb5807,"Fixes and tests related to the Indexer process. (#10631)

* Fixes and tests related to the Indexer process.

Three bugs fixed:

1) Indexers would not announce themselves as segment servers if they
   did not have storage locations defined. This used to work, but was
   broken in #9971. Fixed this by adding an ""isSegmentServer"" method
   to ServerType and updating SegmentLoadDropHandler to always announce
   if this method returns true.

2) Certain batch task types were written in a way that assumed ""isReady""
   would be called before ""run"", which is not guaranteed. In particular,
   they relied on it in order to initialize ""taskLockHelper"". Fixed this
   by updating AbstractBatchIndexTask to ensure ""isReady"" is called
   before ""run"" for these tasks.

3) UnifiedIndexerAppenderatorsManager did not properly handle complex
   datasources. Introduced DataSourceAnalysis in order to fix this.

Test changes:

1) Add a new ""docker-compose.cli-indexer.yml"" config that spins up an
   Indexer instead of a MiddleManager.

2) Introduce a ""USE_INDEXER"" environment variable that determines if
   docker-compose will start up an Indexer or a MiddleManager.

3) Duplicate all the jdk8 tests and run them in both MiddleManager and
   Indexer mode.

4) Various adjustments to encourage fail-fast errors in the Docker
   build scripts.

5) Various adjustments to speed up integration tests and reduce memory
   usage.

6) Add another Mac-specific approach to determining a machine's own IP.
   This was useful on my development machine.

7) Update segment-count check in ITCompactionTaskTest to eliminate a
   race condition (it was looking for 6 segments, which only exist
   together briefly, until the older 4 are marked unused).

Javadoc updates:

1) AbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX
   that make it clear when taskLockHelper will be initialized as a side
   effect. (Related to the second bug above.)

2) Task: Clarified that ""isReady"" is not guaranteed to be called before
   ""run"". It was already implied, but now it's explicit.

3) ZkCoordinator: Clarified deprecation message.

4) DataSegmentServerAnnouncer: Clarified deprecation message.

* Fix stop_cluster script.

* Fix sanity check in script.

* Fix hashbang lines.

* Test and doc adjustments.

* Additional tests, and adjustments for tests.

* Split ITs back out.

* Revert change to druid_coordinator_period_indexingPeriod.

* Set Indexer capacity to match MM.

* Bump up Historical memory.

* Bump down coordinator, overlord memory.

* Bump up Broker memory.",2020-12-09T00:02:26Z
5324785eacaa0891e332d5dc62ac674c9da18362,"integration tests fix: update base image for hadoop containers to centos 7 (#10638)

LGTM",2020-12-08T19:00:51Z
c4106486306df6fadf92994f7d33a88c6d952551,"fix injection failure of StorageLocationSelectorStrategy objects (#10363)

* fix to allow customer storage location selector strategy

* add test cases to check instance of selector strategy

* update doc

* code format

* resolve code review comments

* inject StorageLocation

* fix CI

* fix mismatched license item reported by CI

* change property path from druid.segmentCache.locationSelectorStrategy.type to druid.segmentCache.locationSelector.strategy

* using a helper method to bind to correct property path",2020-12-08T17:48:31Z
e3f721754691f0f9f946f59c74c1dc41f5164173,"Web console: Improve the handling of extreme data (funky datasources, longs) (#10641)

* better API escape

* fix escaping issue, bigints

* update licenses

* fix align

* do not show Query with SQL if no SQL

* add prettify script

* update dev readme

* add ordering to the datasource list

* add ordering to supervisor table",2020-12-08T17:25:14Z
9acab0b646c826085cb6fd2f1ec94ef2924364c0,"DruidInputSource: Sort segments by ID before grouping into splits. (#10646)

This is useful because it groups up segments for the same time chunk
into the same splits, which in turn is useful because it minimizes the
number of time chunks that each task will have to deal with.",2020-12-07T21:48:24Z
26d74b358093697a2bd791b50767bd2b1342f272,"Add grouping_id function (#10518)

* First draft of grouping_id function

* Add more tests and documentation

* Add calcite tests

* Fix travis failures

* bit of a change

* Add documentation

* Fix typos

* typo fix",2020-12-07T19:46:29Z
b681861f0551ed4f6b0c3abdc1b787107b819bbe,"Speed up integration tests in two ways. (#10648)

1) Accelerate coordinator runs to speed up segment load after publishing.

2) For streaming ingestion tests, Instead of waiting 3 minutes for data to
   load, wait until the expected number of rows is loaded.

Also updates segment-count check in ITCompactionTaskTest to eliminate a
race condition (it was looking for 6 segments, which only exist together
briefly, until the older 4 are marked unused).",2020-12-07T18:59:29Z
f46cc4faaf9985cc1ae0d32acb945b93627d8f98,"Revert ""fixed input source sampler buildReader exp""

This reverts commit e688db8",2020-12-07T15:34:59Z
e688db85037acb4b3b039be30f4b51e564f38efc,fixed input source sampler buildReader exp,2020-12-07T15:28:25Z
b7641f644cc19a80b33b3607ef6ef23d977236c6,"Two fixes related to encoding of % symbols. (#10645)

* Two fixes related to encoding of % symbols.

1) TaskResourceFilter: Don't double-decode task ids. request.getPathSegments()
   returns already-decoded strings. Applying StringUtils.urlDecode on
   top of that causes erroneous behavior with '%' characters.

2) Update various ThreadFactoryBuilder name formats to escape '%'
   characters. This fixes situations where substrings starting with '%'
   are erroneously treated as format specifiers.

ITs are updated to include a '%' in extra.datasource.name.suffix.

* Avoid String.replace.

* Work around surefire bug.

* Fix xml encoding.

* Another try at the proper encoding.

* Give up on the emojis.

* Less ambitious testing.

* Fix an additional problem.

* Adjust encodeForFormat to return null if the input is null.",2020-12-07T06:35:11Z
17f39ab91eb9fe7253986ca6e62a081630bafdf1,"Fix misspellings in druid-forbidden-apis. (#10634)

These caused certain APIs to not actually be properly forbidden.

Also removed two MoreExecutors entries for methods that don't exist in
our version of Guava.",2020-12-05T23:26:57Z
7eb5f59a9a6ec272b723f21cf4b12ac33d19d03e,"Fix string byte calculation in StringDimensionIndexer (#10623)

* fix string byte calculation

* fix tests

* fix test",2020-12-04T08:51:48Z
52d46cebc31026b8dd39c7d9fb82c62bd77965fb,"Move common configurations to TuningConfig (#10478)

* Move common methods that are used in HadoopTuningConfig and in AppenderatorConfig to TuningConfig
* Rename rowFlushBoundary in HadoopTuningConfig to maxRowsInMemory to match TuningConfig API",2020-12-04T02:13:32Z
229b5f359f3ae2c1dec641c7c62bef8458ef81ff,"Remove hard limitation that druid(after 0.15.0) only can consume Kafka version 0.11.x or better (#10551)

* remove build in kafka consumer config :

* modify druid docs of kafka indexing service

* yuezhang

* modify doc

* modify docs

* fix kafkaindexTaskTest.java

* revert uncessary change

* add more logs and modify docs

* revert jdk version

* modify docs

* modify-kafka-version v2

* modify docs

* modify docs

* modify docs

* modify docs

* modify docs

* done

* remove useless import

* change code and add UT

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-12-04T01:37:59Z
ae6c43de71f9983564b440f8db851e5e7f1ae16d,Add an integration test for HTTP inputSource (#10620),2020-12-03T23:51:56Z
2cd017b7aa2babc8a44d83cf32eb78c7339ea7fe,Fix the config initialization on container restart (#10458),2020-12-03T20:03:00Z
813e18774e86811bfd82ca87160a0a82d24e6201,"make dimension column extensible with COMPLEX type (#10277)

* make dimension column extensible with COMPLEX type

* more changes

Change-Id: I9707dd644b8d71030b74a8c1d6fff0c0020d960d

* processing module changes for build fix

Change-Id: I146f95a41b79d20edb1721be13f0e9641f788e0e

* rename ColumnCapabilities.getTypeName() to getComplexTypeName()

* rename ColumnBuilder.setTypeName(..) -> ColumnBuilder.setComplexTypeName(..)",2020-12-03T16:58:17Z
c94be8a94571d5f47d8260f656b6abd165dfb14e,"Revert ""Update google client libraries (#10536)"" (#10599)

This reverts commit 4537016cad4e17786b81e74b0e99013838afe788.",2020-12-03T14:44:52Z
7e9522870f019db444b4b6eb5cb3945d6545cf7a,"introduce DynamicConfigProvider interface and make kafka consumer props extensible (#10309)

* introduce DynamicConfigProvider interface and make kafka consumer props extensible

* fix intellij inspection error

* make DynamicConfigProvider generic

Change-Id: I2e3e89f8617b6fe7fc96859deca4011f609dc5a3

* deprecate PasswordProvider",2020-12-03T00:38:27Z
f965464f369dc75ce00d50492704cbfc451da364,"Fix empty directory handling (#10319)

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-12-02T18:37:08Z
2e02eebd9d09d27dd2e8f73b40dc95eec6d56531,"Add context dimension to DefaultQueryMetrics (#10578)

* Add context dimension to DefaultQueryMetrics

* remove redundant addition of context dimension from DruidMetrics now that QueryMetrics adds it by default

* update SearchQueryMetrics to reflect the same pattern as other default dimensions in QueryMetrics

* add PublicApi annotation for context in QueryMetrics Interface",2020-12-02T02:34:03Z
e7e07eab111d29063baa5c81e8505e3c89f6d1d2,"[Improve Doc] : Modify the disadvantages of the lazyLoadOnStart feature. (#10608)

* modify docs

* modify docs

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-12-02T02:33:22Z
24f1e35b5dbfc2437899e63a3ca667b38f0737e1,fix desc of 'required' for granularity property (#10616),2020-12-02T02:29:51Z
5b06c7a3a9597d12f92645bc5229bb8456930020,"Web console: improve how code is imported, use API instance (#10597)

* fix imports

* clean up imports

* update DQT to fix escaping",2020-12-01T21:16:14Z
d47d6cf081d386a1523e2d16904962eab987eb82,Add time-to-first-result benchmark for groupBy (#10612),2020-12-01T18:32:37Z
2560bf0a1919c36b824bd0e4f9286e2899deddd3,"Add new coordinator metrics for coordinator duty runtimes (#10603)

* Add new coordinator metrics for duty runtimes

* fix spelling for a constant variable value

* add comment clarifying why the global runtime metric is emitted where it is

* Remove duty alias in lieu of using the class name for metrics

* fix docs

* CoordinatorStats tests + add duty stats to accumulate() logic",2020-11-29T22:47:35Z
30bcb0fd74daf4f50f7e81d8acaea9577b03cbb3,DataSourcesSnapshotBenchmark to measure iterateAllUsedSegmentsInSnapshot perf (#10604),2020-11-29T22:42:14Z
7462b0b953e87890a683a0bee7b7480465450342,"Allow missing intervals for Parallel task with hash/range partitioning (#10592)

* Allow missing intervals for Parallel task

* fix row filter

* fix tests

* fix log",2020-11-25T22:50:22Z
d0c2ede50c94bef89b72261fe3e553c60e7f0013,"Added CronScheduler support as a proof to clock drift while emitting metrics (#10448)

Co-authored-by: Ayush Kulshrestha <ayush.kulshrestha@miqdigital.com>",2020-11-25T11:31:38Z
fe693a4f01a60d5a93dfa9225bf7f6c33fae7843,"Improve doc and exception message for invalid user configurations (#10598)

* improve doc and exception message

* add spelling check rules and remove unused import

* add a test to improve test coverage",2020-11-23T23:03:13Z
31740b3b29cac6d81d3cc19374dbf04836e41436,"Fix : Druid throws java.util.concurrent.RejectedExecutionException when ingest task is stopping. (#10555)

* check exec status before return Signal

* add more log

* change log level to debug and add UT

* change log leverl to warn and merge master

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-11-23T22:52:03Z
4537016cad4e17786b81e74b0e99013838afe788,"Update google client libraries (#10536)

modify license.yaml

Update google oauth client version",2020-11-20T23:23:30Z
111b431c079f1839f7923da012cfa1a9f53ab260,"Introduce query/timeout/count metric (#10567)

* Add timeout metric

* Add tests",2020-11-20T23:17:26Z
3cafd531deb816579fa1fe5ffbc5b69169718d39,"fix issue causing incorrect config in Docker (#10595)

Previously, when the Docker entrypoint script generated the config
files, it would append the configuration without including a newline.
This could result in incorrect configuration. This has been fixed by
always appending a newline before any configuration.

Co-authored-by: Bryson Chen <brysonjackychen@gmail.com>

Co-authored-by: Bryson Chen <brysonjackychen@gmail.com>",2020-11-20T22:52:38Z
2201ffa2f01bb24b849ab6408afe98416f0cddcf,"druid-docker-image: add DRUID_DIRS_TO_CREATE variable to customize directories created on startup (#10591)

* druid-docker-image: add DRUID_DIRS_TO_CREATE variable to customize directories created on startup

* address review comment

* remove unintentional change",2020-11-20T22:46:19Z
ba915b7f56545b781a3c1e0858121c854bed4bba,"Security overview documentation (#10339)

* initial file

* initial file

* security overview added

* ldap added

* spacing adjustments

* nits

* security graphics and doc review

* Update docs/operations/security-overview.md

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>

* Update docs/operations/security-user-auth.md

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>

* Update docs/operations/security-overview.md

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>

* Update docs/operations/security-overview.md

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>

* updates frm review

* review comments

* finish up review and light edits

* broken links

* spell check

Co-authored-by: Jonathan Wei <jon-wei@users.noreply.github.com>",2020-11-19T23:24:58Z
2f4d6da33fb2121120b364e58b367fe66c4b436c,"Updates segment metadata query documentation  (#10589)

* updates segment metadata query documentation to be clearer about cardinality estimation

* typo in documentation",2020-11-19T18:38:27Z
abb03d38b07624f1b875c4f9e73b9118200fb035,"double confirm before delete all the ununsed segmensts (#10581)

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-11-19T16:07:52Z
d7d2c804ad10853cb9241766ae0602fb84e146ff,"Add zero period support to TIMESTAMPADD (#10550)

* Allow zero period for TIMESTAMPADD

* update test cases

* add empty zone test case

* add unit test cases for TimestampShiftMacro",2020-11-19T02:26:53Z
1272fb17e57cc7542ad0da6e33ab9a8d94a172fe,"modify druid.historical.cache.maxEntrySize property in Unified format (#10590)

Co-authored-by: yuezhang <yuezhang@freewheel.tv>",2020-11-17T22:36:50Z
9964dd4cb260058194772c7cee638542205b5e33,"Web console: fix data loader schema table column ordering bug and other polish (#10588)

* remove unused fields

* keep tables live

* advanced

* fix schema view

* better indication

* tests pass

* Show more instead of show advanced

* fix tests

* extract dynamic configs

* update snapshots

* fix issues

* update snapshot

* reword without >",2020-11-17T21:25:03Z
3447934a75f970b5853d7c217f3c861f81316acf,Ensure Krb auth before killing YARN apps in graceful shutdown (#9785),2020-11-16T17:59:14Z
9e6978609a6a47e2c13ba1e9582e683a939691d6,Add TravisCI job that builds and tests on ARM64 CPU architecture (#10562),2020-11-16T15:38:43Z
e83d5cb59e07d605f6198dfade87d2d71eb31c01,"Fix ingestion failure of pretty-formatted JSON message (#10383)

* support multi-line text

* add test cases

* split json text into lines case by case

* improve exception handle

* fix CI

* use IntermediateRowParsingReader as base of JsonReader

* update doc

* ignore the non-immutable field in test case

* add more test cases

* mark `lineSplittable` as final

* fix testcases

* fix doc

* add a test case for SqlReader

* return all raw columns when exception occurs

* fix CI

* fix test cases

* resolve review comments

* handle ParseException returned by index.add

* apply Iterables.getOnlyElement

* fix CI

* fix test cases

* improve code in more graceful way

* fix test cases

* fix test cases

* add a test case to check multiple json string in one text block

* fix inspection check",2020-11-13T21:59:23Z
21e3c4b39ca051d62345e32b22b844245fb5efb5,"Add missing docs for timeout exceptions (#10554)

* Add missing docs for timeout exceptions

* Add info on auth failures",2020-11-13T14:45:40Z
c3cad461bc1745a2f1a87f85299a6754310d1827,Correct getRandomBalancerSegmentHolderTest (#10569),2020-11-12T17:51:05Z
6563599de46ae113e09a4aabbcb27e339905c6d3,"modify access to protected SQLMetadataConnector methods to allow extensions to create SQL metadata tables using implementation specific constructs (payload type, serial type, etc) (#10573)",2020-11-12T17:50:01Z
f1b5745eb6c8e21003b0b632cf8f1f47fe82a1f3,Add helm shield (#10526),2020-11-10T22:18:36Z
20e7e53ede1d9ef746078c1bacc7e97e18c205b2,"Use FileUtils.createTempDir in IndexGeneratorJob. (#10568)

Simplifies code by using a method designed for this purpose.",2020-11-10T06:40:28Z
cd231d851145041f0638705403c48010deb400e3,"Run integration test queries once (#10564)

* Run integration test queries once

* missed a few",2020-11-10T01:34:27Z
83667172ce707ec32cbee23f3d2cba343fb8b4ed,"Add missing coordinator dynamic config to the web-console dialog for dynamic coordinator config (#10545)

* Add missing coordinator dynamic config to the web-console dialog for dynamic coordinator config

* update jest snapshots after making console change",2020-11-09T19:00:52Z
6c8a77b7a9223ac13480a12f59ee0663f5f86f74,"Bump jetty to latest version (#10563)

This addresses CVE-2020-27216 which was flagged by the security vulnerability
job.",2020-11-09T16:51:36Z
34362973549d976f479422b8b2732a43e3654160,"Clarify how ORDER BY works with UNION ALL (#10561)

Hopefully a bit clearer.",2020-11-06T04:12:03Z
6ccddedb7a1752dc130d939066b04da16eb6b1bd,"Improved exception handling in case of query timeouts (#10464)

* Separate timeout exceptions

* Add more tests

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-11-03T15:00:33Z
d8e5a159e8a8aede43bbdfb381785fddae50e2cb,"Update index.md (#10549)

Removing the extra `_` in the default for middlemanager category",2020-11-03T08:14:47Z
928615314559ea8ca79da5ceb81275fe6ce47fcf,doc wrong description of configuration (#10546),2020-11-03T01:57:16Z
6b14bdb3a53d6aec45e485e6849956a69720ba3f,"Add support for Blacklisting some domains for HTTPInputSource (#10535)

fix inspections

refactor class name

change name

 add allowList as well

distinguish between empty and null list

Fix CI",2020-11-02T16:17:25Z
ee61a165e3142149595362a01211227f2ce3b07a,"Web console: improve make type preservation in ingestion configs in the data loader (#10533)

* improve validation

* move to druid modals

* adjust specs

* oneOf

* move transform

* segment grans

* tidy up webpack

* add Partitioning

* break out druid models

* tidy up

* rename to Expression

* move druid time

* cleanup

* update format

* better detail

* fix e2e test

* remove forceGuaranteedRollup from e2e tests

* clean up imports

* shardSpec -> shard_spec

* fix css

* adjust snapshot

* add granularity to segments view

* rename to Time span

* use OFFSET in segments view query

* update doc links

* simplify require

* more oneOf",2020-10-31T02:02:44Z
835b328851da35ad4d4a3c5d2878496f493f15c1,docs/: use tuningConfig (#10540),2020-10-30T14:39:21Z
9c51047cc8f1aa49b77bbfc7a1f0cc14df691a6b,"Document correlation between credential iterations and query latency (#10532)

use link / heading instead of footnote",2020-10-29T19:47:24Z
65a42f9eb175f7550500eccd98fd79ad95f7d780,Update overlord api docs (#10539),2020-10-29T16:19:12Z
4de4d4d11178638f022f1e9c5ad9dec751529d71,remove ServerDiscoverySelector from DruidLeaderClient (#10537),2020-10-28T17:55:11Z
aa9c0ec6504cea90086c255fd6025c8d90dd2450,"update quickstart docker-compose example, add to release instructions (#10527)

* update quickstart docker-compose example, add to release instructions

* adjust

* spelling",2020-10-27T06:14:07Z
ee136303bb561d02dcfc8e4cd7f7b7af907e4e28,"optionally disable all of hardcoded zookeeper use (#9507)

* optionally disable all of hardcoded zookeeper use

* fix DruidCoordinatorTest compilation

* fix test in DruidCoordinatorTest

* fix strict compilation

Co-authored-by: Himanshu Gupta <fill email>",2020-10-27T05:35:59Z
d0821de8540686eb64a9b3e22fe4a637b58920ef,"support for vectorizing expressions with non-existent inputs, more consistent type handling for non-vectorized expressions (#10499)

* support for vectorizing expressions with non-existent inputs, more consistent type handling for non-vectorized expressions

* inspector

* changes

* more test

* clean",2020-10-27T02:55:24Z
a966de5319e833409c9513b6616b2d2e192f7adf,"Add https to druid-influxdb-emitter extension (#9938)

* Add https to druid-influxdb-emitter extension

* address CI failures

* increase test coverage

* tests for being unable to load trustStore

* fix EqualsVerifier test

* fix intellij inspection error

* use try-with-resources when loading trustStore",2020-10-27T02:49:26Z
f3a2903218573f5d336b082b1c9b8a60a19e8c54,"Configurable Index Type (#10335)

* Introduce a Configurable Index Type

* Change to @UnstableApi

* Add AppendableIndexSpecTest

* Update doc

* Add spelling exception

* Add tests coverage

* Revert some of the changes to reduce diff

* Minor fixes

* Update getMaxBytesInMemoryOrDefault() comment

* Fix typo, remove redundant interface

* Remove off-heap spec (postponed to a later PR)

* Add javadocs to AppendableIndexSpec

* Describe testCreateTask()

* Add tests for AppendableIndexSpec within TuningConfig

* Modify hashCode() to conform with equals()

* Add comment where building incremental-index

* Add ""EqualsVerifier"" tests

* Revert some of the API back to AppenderatorConfig

* Don't use multi-line comments

* Remove knob documentation (deferred)",2020-10-24T01:34:26Z
1b9a8c46874520d22b65573eeabfa3a62e16a5e0,"Fix compaction integration test CI timeout (#10517)

* fix flaky IT Compaction test

* fix flaky IT Compaction test

* test

* test

* test

* test

* Fix compaction integration test CI timeout

* address comments

* test

* test

* Add print logs

* add error msg

* add taskId to logging",2020-10-22T05:38:11Z
f391e896533962af1652ac6b21fe1db0fab053e9,"Web console: refresh and tighten up the console styles ✨💅💫 (#10515)

* no hardcoded dark mode

* update blueprint

* style pass

* add open sans font

* fix public path

* update licenses

* add comment

* allow zero bsd

* add new lines

* update tests

* remove default mods

* use variables

* fix background

* fix query init style

* pad fracional part

* paginate braces

* update to latest blueprint, fix column tree

* Smart query limit -> Auto limit

* adjust gutter color for dark mode

* fix spelling

* update snapshot

Co-authored-by: asherbitter <ofir@imply.io>",2020-10-21T05:11:29Z
04546b65ec481c511ebaf38eac346f351854d92b,"Additional documentation for query caching (#10503)

* Add documentation for when caching is unsupported

* Minor changes

* Minor doc fix

* Review comments

* Add more details

* Fix spelling check

* Fix doc for union query

* Trailing dot",2020-10-20T20:49:13Z
c3cb0e8b02c641746a5225bd3651e6e441437f19,reduce docker image size (#10506),2020-10-19T17:29:20Z
bbe23c652c5810325b1c6b6daa30d8b02244b351,"Fix negative queuedSize problem in CuratorLoadQueuePeon (#10362)

* fix negative queuedSize problem in CuratorLoadQueuePeon

* add comment and optimize test case

* fix typo

Co-authored-by: huagnhui.bigrey <huanghui.bigrey@bytedance.com>",2020-10-16T20:38:49Z
3538abd5d064d11a03cea6458782e5f4b52d3c45,"Make sure all fields in sys.segments are JSON-serialized  (#10481)

* fix JSON format

* Change all columns in sys segments to be JSON

* Change all columns in sys segments to be JSON

* add tests

* fix failing tests

* fix failing tests",2020-10-14T20:49:46Z
9056d113d0a605671e7ee3fb2d4341671e600997,"Add docs and integration tests for Auto-compaction snapshot status API (#10510)

* add docs and IT for Auto-compaction snapshot status API

* fix spellings

* fix test

* address comments",2020-10-14T13:42:22Z
e8c5893c34db2482ed80cd0a01c6d44c411515aa,"Web console: show segment sizes in rows not bytes (#10496)

* added query error suggestions

* simplify the SQLs

* change segment size display to rows

* suggestion tests

* update snapshot

* make error detection more robust

* remove errant console log

* fix imports

* put suggestion on top

* better error rendering

* format as millions

* add .druid.pid to gitignore

* rename segment_size to segment_rows, fix visability, fix divide by zero

* update snapshots",2020-10-13T20:19:39Z
567e38170500d3649cbfaa28cf7aa6f5275d02e7,"Any virtual column on ""__time"" should be a pre-join virtual column (#10451)

* Virtual column on __time should be in pre-join

* Add unit test",2020-10-12T20:04:55Z
b45a56f989934ed62dfb58e3dd8c222c341067ed,"Web console: targetRowsPerSegment for hashed partionin (#10500)

* Web console: targetRowsPerSegment for hashed partionin

Added `targetRowsPerSegment` to the web console for hashed partition for both
the auto compaction view and as part of the ingestion workflow.

The help text was also updated to indicate when a user should care about
updating these fields

* code review

* update test snapshots

* oops",2020-10-11T23:55:28Z
ad437dd655ef24d8d9a4120fa8e99885ec353eb3,"Add shuffle metrics for parallel indexing (#10359)

* Add shuffle metrics for parallel indexing

* javadoc and concurrency test

* concurrency

* fix javadoc

* Feature flag

* doc

* fix doc and add a test

* checkstyle

* add tests

* fix build and address comments",2020-10-11T02:35:17Z
4d2a92f46a121fc8b3f5a02f1480156ccc62bb4a,"Add caching support to join queries (#10366)

* Proposed changes for making joins cacheable

* Add unit tests

* Fix tests

* simplify logic

* Pull empty byte array logic out of CachingQueryRunner

* remove useless null check

* Minor refactor

* Fix tests

* Fix segment caching on Broker

* Move join cache key computation in Broker

Move join cache key computation in Broker from ResultLevelCachingQueryRunner to CachingClusteredClient

* Fix compilation

* Review comments

* Add more tests

* Fix inspection errors

* Pushed condition analysis to JoinableFactory

* review comments

* Disable join caching for broker and add prefix key to BroadcastSegmentIndexedTable

* Remove commented lines

* Fix populateCache

* Disable caching for selective datasources

Refactored the code so that we can decide at the data source level, whether to enable cache for broker or data nodes",2020-10-10T00:42:30Z
4c78b514c962d8d93b6b9686c4125061a3d20712,"Update README.md (#10357)

Compile scss files before npm start.",2020-10-09T14:51:59Z
0aa2a8e2c641aa8eb8722b76b205f70f7bbff8cf,Suppress CVE-2018-11765 for hadoop dependencies (#10485),2020-10-08T04:55:34Z
7ce9ac4548a4ec0c60ec7cf6dcfcd45eac6fd54e,"Fix Avro support in Web Console (#10232)

* Fix Avro OCF detection prefix and run formation detection on raw input

* Support Avro Fixed and Enum types correctly

* Check Avro version byte in format detection

* Add test for AvroOCFReader.sample

Ensures that the Sampler doesn't receive raw input that it can't
serialize into JSON.

* Document Avro type handling

* Add TS unit tests for guessInputFormat",2020-10-08T04:08:22Z
2e50ada407fa16c25be3b7f64f287c3e77b5b5e7,"Web console: fix compaction status when no compaction config, and small cleanup (#10483)

* move timed button to icons

* cleanup redundant logic

* fix compaction status text

* remove extra style",2020-10-07T21:54:08Z
0ab8b6e0a969024c5cb0b2034204f108c153a3c0,Improve test (#10480),2020-10-07T13:40:02Z
e9e7d82714e48de48bcf3c159a8e2d04ab7dc35e,"Fix compaction task slot computation in auto compaction (#10479)

* Fix compaction task slot computation in auto compaction

* add tests for task counting",2020-10-07T04:56:03Z
d78fedd13c2271c04dce4b49d6d123d17228570f,"Web console: Don't include realtime segments in size calculations. (#10482)

It's always zero, and so it messes up averages, mins, and counts.",2020-10-07T01:56:54Z
1deed9fbcd23420509d23d632409daa1a534cb69,"Close aggregators in HashVectorGrouper.close() (#10452)

* Close aggregators in HashVectorGrouper.close()

* reuse grouper

* Add missing dependency",2020-10-06T17:17:33Z
207ef310f221f105e534914cdcb3650748a23c71,"vectorized group by support for nullable numeric columns (#10441)

* vectorized group by support for numeric null columns

* revert unintended change

* adjust

* review stuffs",2020-10-06T04:53:53Z
307c1b072006115dc0780913bb3fd7d1831849b4,"adjustments to Kafka integration tests to allow running against Azure Event Hubs streams (#10463)

* adjustments to kafka integration tests to allow running against azure event hubs in kafka mode

* oops

* make better

* more better",2020-10-05T15:54:29Z
1c77491da691e774e5ce5ea1c7d2f398d9d1e3ba,"Test UI to trigger auto compaction (#10469)

In the web console E2E tests, Use the new UI to trigger auto compaction
instead of calling the REST API directly so that the UI is covered by
tests.",2020-10-04T07:06:07Z
65c0d64676080ae618c76ecd08fb4dfb9decc679,"Update version to 0.21.0-SNAPSHOT (#10450)

* [maven-release-plugin] prepare release druid-0.21.0

* [maven-release-plugin] prepare for next development iteration

* Update web-console versions",2020-10-03T23:08:34Z
9ec5c08e2a3c1210fefc78e26fbafe75702c7c2f,"fix array types from escaping into wider query engine (#10460)

* fix array types from escaping into wider query engine

* oops

* adjust

* fix lgtm",2020-10-03T22:30:34Z
f77c16bc6c6fa1a56f678cb311944460810251b3,"Web console: fix lookup edit dialog version setting (#10461)

* fix lookup edit dialog

* update snapshots

* clean up test",2020-10-03T15:35:20Z
d11537b5f77a2168b8e1f30ecf0a8835fc9d10fa,"Improve UI E2E test usability (#10466)

- Update playwright to latest version
- Provide environment variable to disable/enable headless mode
- Allow running E2E tests against any druid cluster running on standard
  ports (tutorial-batch.spec.ts now uses an absolute instead of relative
  path for the input data)
- Provide environment variable to change target web console port
- Druid setup does not need to download zookeeper",2020-10-03T15:21:44Z
20ca9aaaf7b8faffea21179957ea14243dab683a,Allow using jsonpath predicates with AvroFlattener (#10330),2020-10-02T09:14:48Z
ede25f1b457467915cbde44ab7a283fb2fa38d40,"Fix UI datasources view edit action compaction (#10459)

Restore the web console's ability to view a datasource's compaction
configuration via the ""action"" menu. Refactoring done in
https://github.com/apache/druid/pull/10438 introduced a regression that
always caused the default compaction configuration to be shown via the
""action"" menu instead.

Regression test is added in e2e-tests/auto-compaction.spec.ts.",2020-10-02T06:59:21Z
7385af027250440ff66573789fc0543ee056777f,"Web console reindexing E2E test (#10453)

Add an E2E test for the web console workflow of reindexing a Druid
datasource to change the secondary partitioning type.  The new test
changes dynamic to single dim partitions since the autocompaction test
already does dynamic to hashed partitions.

Also, run the web console E2E tests in parallel to reduce CI time and
change naming convention for test datasources to make it easier to map
them to the corresponding test run.

Main changes:

1) web-consolee2e-tests/reindexing.spec.ts
   - new E2E test

2) web-console/e2e-tests/component/load-data/data-connector/reindex.ts
   - new data loader connector for druid input source

3) web-console/e2e-tests/component/load-data/config/partition.ts
   - move partition spec definitions from compaction.ts
   - add new single dim partition spec definition",2020-10-01T22:14:41Z
e282ab5695bf18e3bd8b64e00a0333c1f713ff81,"Fix the task id creation in CompactionTask (#10445)

* Fix the task id creation in CompactionTask

* review comments

* Ignore test for range partitioning and segment lock",2020-10-01T22:02:04Z
d057c5149fe5a20c98f3e60af9189e4a1f7ad9ce,"Fix the offset setting in GoogleStorage#get (#10449)

* Fix the offset in get of GCP object

* upgrade compute dependency

* fix version

* review comments

* missed",2020-10-01T15:38:58Z
d09fd8b03581d93270fbd1375e7117ce2e15daf9,"Web console: switch to switches instead of checkboxes (#10454)

* switch to switches

* add img alt

* add relative

* change icons

* update snapshot",2020-09-30T22:13:22Z
753bce324bdf8c7c5b2b602f89c720749bfa6e22,vectorize constant expressions with optimized selectors (#10440),2020-09-29T20:19:06Z
2be1ae128ff03b881c3dce04f3e7abdd8e4fe227,"RowBasedIndexedTable: Add specialized index types for long keys. (#10430)

* RowBasedIndexedTable: Add specialized index types for long keys.

Two new index types are added:

1) Use an int-array-based index in cases where the difference between
   the min and max values isn't too large, and keys are unique.

2) Use a Long2ObjectOpenHashMap (instead of the prior Java HashMap) in
   all other cases.

In addition:

1) RowBasedIndexBuilder, a new class, is responsible for picking which
   index implementation to use.

2) The IndexedTable.Index interface is extended to support using
   unboxed primitives in the unique-long-keys case, and callers are
   updated to use the new functionality.

Other key types continue to use indexes backed by Java HashMaps.

* Fixup logic.

* Add tests.",2020-09-29T17:46:47Z
8168e14e9224c9459efda07b038269815975cf50,"Adding task slot count metrics to Druid Overlord (#10379)

* Adding more worker metrics to Druid Overlord

* Changing the nomenclature from worker to peon as that represents the metrics that we want to monitor better

* Few more instance of worker usage replaced with peon

* Modifying the peon idle count logic to only use eligible workers available capacity

* Changing the naming to task slot count instead of peon

* Adding some unit test coverage for the new test runner apis

* Addressing Review Comments

* Modifying the TaskSlotCountStatsProvider apis so that overlords which are not leader do not emit these metrics

* Fixing the spelling issue in the docs

* Setting the annotation Nullable on the TaskSlotCountStatsProvider methods",2020-09-29T06:50:38Z
729bcba7acd7fa4bccd1fd7769bfeb03d29b4011,"Web console: Display compaction status (#10438)

* init compaction status

* % compacted

* final UI tweaks

* extracted utils, added tests

* add tests to general foramt functions",2020-09-29T05:19:28Z
599aacce0fc911f2b1d4712063d1ab37465f2eb2,"Remove Expr.visit. (#10437)

* Remove Expr.visit.

It isn't used and doesn't have tests.

* Remove Visitor too.",2020-09-29T05:13:10Z
1d6cb624f4a455f45f41ef4b773cf21859a09ef4,"add vectorizeVirtualColumns query context parameter (#10432)

* add vectorizeVirtualColumns query context parameter

* oops

* spelling

* default to false, more docs

* fix test

* fix spelling",2020-09-29T01:48:34Z
cbe2b44e29f1dba0b1882a6afe771cca85083278,"Compaction config UI optional numShards (#10446)

* Compaction config UI optional numShards

Specifying `numShards` for hashed partitions is no longer required after
https://github.com/apache/druid/pull/10419. Update the UI to make
`numShards` an optional field for hash partitions.

* Update snapshot",2020-09-29T00:15:48Z
d16c78ba98c58abc69258c81b1b8af9c40bb73af,"Add intent for web console IntervalInput (#10447)

When using the web console to load data by reindexing from Druid, the
`Datasource` and `Interval` inputs are required during the `Connect`
step. Unlike the `Datasource` input, the `Interval` input did not have a
blue outline to indicate that it was required as the `IntervalInput`
component did not support an `intent` property.",2020-09-29T00:13:07Z
5356d8821bf48a3995dc2928c2c091be005b557f,"fix typo in docker/druid.sh (#10433)

DRUID_NEWSIZE should not set MaxNewSize.",2020-09-28T21:38:21Z
b95bf444b24d425157052ed1bf5e705c6b6bb042,add docs for kinesis lag metrics (#10435),2020-09-28T20:13:53Z
64df71f25fb76e44f33f38e4abd9b51c2fbf834c,more timeout handling in JsonParserIterator (#10426),2020-09-28T20:12:42Z
3d700a5e31eaea131f1152e90b6c78a572edd7fc,"vectorize remaining math expressions (#10429)

* vectorize remaining math expressions

* fixes

* remove cannotVectorize() where no longer true

* disable vectorized groupby for numeric columns with nulls

* fixes",2020-09-27T06:30:14Z
cbd9ac8592f4e7cc8eb8ace4cfa42355cf0fffb6,"Web console autocompaction E2E test (#10425)

Add an E2E test for the common case web console workflow of setting up
autocompaction that changes the partitions from dynamic to hashed.

Also fix an issue with the async test setup to properly wait for the web
console to be ready.",2020-09-26T01:28:25Z
0cc9eb4903e7bddb4c1484984bf87c8fab7648df,"Store hash partition function in dataSegment and allow segment pruning only when hash partition function is provided (#10288)

* Store hash partition function in dataSegment and allow segment pruning only when hash partition function is provided

* query context

* fix tests; add more test

* javadoc

* docs and more tests

* remove default and hadoop tests

* consistent name and fix javadoc

* spelling and field name

* default function for partitionsSpec

* other comments

* address comments

* fix tests and spelling

* test

* doc",2020-09-24T23:32:56Z
cb30b1fe2353dc28601c50984def9e83adb89571,"Automatically determine numShards for parallel ingestion hash partitioning (#10419)

* Automatically determine numShards for parallel ingestion hash partitioning

* Fix inspection, tests, coverage

* Docs and some PR comments

* Adjust locking

* Use HllSketch instead of HyperLogLogCollector

* Fix tests

* Address some PR comments

* Fix granularity bug

* Small doc fix",2020-09-24T20:47:53Z
89160c2f9bc50a2c3c21e2e61f63829170cf38c0,better query view initial state (#10431),2020-09-24T16:49:58Z
dad69481f0023cb76ed03bbab2e51642f6a3fa67,"add light weight version of /druid/coordinator/v1/lookups/nodeStatus (#10422)

* add light weight version /druid/coordinator/v1/lookups/nodeStatus

* review stuffs",2020-09-24T06:36:53Z
72f1b55f569719b8e0e1920f382bdf98e418924e,"Add last_compaction_state to sys.segments table (#10413)

* Add is_compacted to sys.segments table

* change is_compacted to last_compaction_state

* fix tests

* fix tests

* address comments",2020-09-23T22:29:36Z
19c4b1664086539a3bb495eb402616cf8b6f2a77,"vectorized expressions and expression virtual columns (#10401)

* vectorized expression virtual columns

* cleanup

* fixes

* preserve float if explicitly specified

* oops

* null handling fixes, more tests

* what is an expression planner?

* better names

* remove unused method, add pi

* move vector processor builders into static methods

* reduce boilerplate

* oops

* more naming adjustments

* changes

* nullable

* missing hex

* more",2020-09-23T20:56:38Z
a60d034d01014a383341d9f1de460f2fb993dde0,"Web console: compaction dialog update (#10417)

* compaction dialog update

* fix test snapshot

* Update web-console/src/dialogs/compaction-dialog/compaction-dialog.tsx

Co-authored-by: Chi Cao Minh <chi.caominh@imply.io>

* Update web-console/src/dialogs/compaction-dialog/compaction-dialog.tsx

Co-authored-by: Chi Cao Minh <chi.caominh@imply.io>

* feedback changes

Co-authored-by: Chi Cao Minh <chi.caominh@imply.io>",2020-09-23T16:34:19Z
1af2eace4110d9fe8e6e9846a48480b6ceae99a7,"Include Sequence-building time in CPU time metric. (#10377)

* Include Sequence-building time in CPU time metric.

Meaningful work can be done while building Sequences, and we should
count this work. On the Broker, this includes subquery processing
work done by the mergeResults call of the GroupByQueryQueryToolChest.

* Add test.",2020-09-23T06:33:55Z
ac0a45471e12598d7f2847fa26f628582281c28d,"Web console: add sort to tiers list (#10416)

* add sort to tiers list

* update snapshot",2020-09-23T02:00:55Z
7cc0a7be68d37d07b18a7f3e75989534f2ec626d,"Web console: clean up styling imports (#10410)

* fix styling for importing

* fix quotes",2020-09-22T00:30:25Z
49a09302f3f239b83e2b2d21e6ae30798f6e532d,Issue fix  for CSV loading with header and skip header not parsing well. (#10398),2020-09-21T22:14:22Z
6c5c86d80093410b93aa18b68379e787951ead4f,"Web console: fix lookup edit dialog, allow column renaming (#10406)

* column rename

* update licenses file

* remove empty file

* update license file

* move comment",2020-09-20T21:10:05Z
ae247b6e6339660a42fd9f0942ded9e9a9eec21f,"Document change in results of groupBy queries with subtotalsSpec (#10405)

* subtotalsSpec results with null values

Document the format change in results of a groupBy query with a subtotalsSpec. This update applies to 0.18 and later.

* Review catches",2020-09-19T17:51:23Z
e78d7862a8ae60b8504355cbd969a6f49cda6065,"Auto-compaction snapshot status API (#10371)

* Auto-compaction snapshot API

* Auto-compaction snapshot API

* Auto-compaction snapshot API

* Auto-compaction snapshot API

* Auto-compaction snapshot API

* Auto-compaction snapshot API

* Auto-compaction snapshot API

* fix when not all compacted segments are iterated

* add unit tests

* add unit tests

* add unit tests

* add unit tests

* add unit tests

* add unit tests

* add some tests to make code cov happy

* address comments

* address comments

* address comments

* address comments

* make code coverage happy

* address comments

* address comments

* address comments

* address comments",2020-09-18T23:37:58Z
d0ee2e3a4807a8f09aeaddb45b556130961a21cd,Upgrade ORC to 1.5.10 version (#10291),2020-09-18T20:38:45Z
f3eb0cfb3be9c3d28cfaa6d5cbca4b9faff09a6f,"Avoid large limits causing int overflow in buffer size checks (#10356)

* Avoid large limits causing int overflow in buffer size checks

* fix lgtm overflow warning

Co-authored-by: Dylan <dwylie@spotx.tv>",2020-09-18T20:08:49Z
74368d95af79526baa7ea5597c5c90b744670483,Remove JODA Time Dependency from Avro Extensions (#10010),2020-09-18T19:41:42Z
d9beda7f2449ddf5f4e6c7f60de293a431ca2c00,"Adding the missing sqlQueryContext api (#10368)

* Adding the missing sqlQueryContext api

* Adding a serialization test for DefaultRequestLogEvent

* Fixing the unit test failure",2020-09-18T07:46:31Z
14072d3ab058298033c8928a92799d23ee4b8839,"Adding more dimensions to the audit log entry (#10373)

* Adding more dimensions to the audit log entry

* Making adding payload in audit metric optional

* Changing the name of the parameter to includePayloadAsDimensionInMetric. Adding a unit test

* Fixing the intellij code introspection issues",2020-09-18T01:36:28Z
0b4c897fbe046c109c8e63f51221b2955cd5fe39,"Vectorized variance aggregators (#10390)

* wip vectorize

* close but not quite

* faster

* unit tests

* fix complex types for variance",2020-09-17T22:05:40Z
1b05d6e542fa3164a562f7112ee2d7a13c91d11e,"recreate the balancer executor only when needed (#10280)

* recreate the balancer executor only when needed

* fix UT error

* shutdown the balancer executor in stopBeingLeader and stop

* remove commented code

* remove comments",2020-09-16T19:25:57Z
94226f1b3d0aadb3a77cabfd5c4c81c1c3388326,"Disable sending server version in response headers (#9832)

* Toggle sending of server version

* Remove config

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-09-16T05:48:00Z
b6ad790dc7f49762ef0531219838dc0ce2e4a183,"Support combining inputsource for parallel ingestion (#10387)

* Add combining inputsource

* Fix documentation

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-09-15T23:25:35Z
8657b23ab215668c5ac5adb4b8f91096d5fb4733,"Integration tests and docs for auto compaction with different partitioning (#10354)

* Working

* add test

* doc

* fix test

* split other integration test

* exclude other-index from other tests

* doc anchor fix

* adjust task slots and number of merge tasks

* spell check

* reduce maxNumConcurrentSubTasks to 1

* maxNumConcurrentSubtasks for range partitinoing

* reduce memory for historical

* change group name",2020-09-15T18:28:09Z
e465f057170052537c98e779373d441a449ce780,"Web console: Improve number alignment in tables (#10389)

* Improve tables

* removed unused state interfaces

* better copy

* one more functional component

* updated e2e tests

* extract braced text correctly",2020-09-15T02:53:38Z
5751d0edc1d9aa659088bf3a62e3c6beae9f87d0,"Skip coverage check for tag builds (#10397)

The code coverage diff calculation assumes the TRAVIS_BRANCH environment
variable is the name of a branch; however, for tag builds it is the name
of the tag so the diff calculation fails. Since builds triggered by tags
do not have a code diff, the coverage check should be skipped to avoid
the error and to save some CI resources.",2020-09-15T02:46:33Z
f71ba6f2c202d3edc0cdf8efa2274d0e247ddca8,"Vectorized ANY aggregators (#10338)

* WIP vectorized ANY aggregators

* tests

* fix aggs

* cleanup

* code review + tests

* docs

* use NilVectorSelector when needed

* fix spellcheck

* dont instantiate vectors

* cleanup",2020-09-15T02:44:58Z
e012d5c41bbc5a056e3c99bf6073ac19ba523c7d,"allow vectorized query engines to utilize vectorized virtual columns (#10388)

* allow vectorized query engines to utilize vectorized virtual column implementations

* javadoc, refactor, checkstyle

* intellij inspection and more javadoc

* better

* review stuffs

* fix incorrect refactor, thanks tests

* minor adjustments",2020-09-15T02:29:35Z
184b202411ffe6d04037e6b670985a58c3bf53e5,"add computed Expr output types (#10370)

* push down ValueType to ExprType conversion, tidy up

* determine expr output type for given input types

* revert unintended name change

* add nullable

* tidy up

* fixup

* more better

* fix signatures

* naming things is hard

* fix inspection

* javadoc

* make default implementation of Expr.getOutputType that returns null

* rename method

* more test

* add output for contains expr macro, split operation and function auto conversion",2020-09-15T01:18:56Z
084b23deedcc99a2a81b05a7dd857e73ed2c4a79,"benchmark for indexed table experiments (#10327)

* benchmark for indexed table experiments

* fix style

* teardown outside of measurement",2020-09-14T22:14:38Z
f5e2645bbb92254dfd2de8696d85acc2be71e68d,"Support SearchQueryDimFilter in sql via new methods (#10350)

* Support SearchQueryDimFilter in sql via new methods

* Contains is a reserved word

* revert unnecessary change

* Fix toDruidExpression method

* rename methods

* java docs

* Add native functions

* revert change in dockerfile

* remove changes from dockerfile

* More tests

* travis fix

* Handle null values better",2020-09-14T16:57:54Z
3d4b48e0aa5109e3b09c6d1c8d04264f8d9121cd,TransformSpecTest should extends InitializedNullHandlingTest (#10392),2020-09-14T15:22:24Z
3c8eacb2d419012d562d1631cbd2a8f2926b95a5,"Web console: improve query manager (convert to React hook) (#10360)

* Better query running

* update licenses

* update tests

* updated tests v2

* fade in cancel

* add exemplary tests

* update mkcomp

* fix inconsistent state update

* remove lastParsedQuery

* work if not a valid literal

* remove unused params

* fix licenses

* better state update

* get error message

* isEmpty tidy

* add tests around error message highlighting

* pull live query selector into a component

* add LiveQueryModeSelector tests

* update snapshots",2020-09-12T02:42:50Z
e3735602f26ee4dcc4730180e20c007e698baa80,Fix typo (#10385),2020-09-11T23:31:36Z
8f14ac814e1fdf11878a5ba9bdba58fb745b4c8f,"More structured way to handle parse exceptions (#10336)

* More structured way to handle parse exceptions

* checkstyle; add more tests

* forbidden api; test

* address comment; new test

* address review comments

* javadoc for parseException; remove redundant parseException in streaming ingestion

* fix tests

* unnecessary catch

* unused imports

* appenderator test

* unused import",2020-09-11T23:31:10Z
8aea8cf1c691b0ad25d0eaffc6f5d61d7dd66ff6,"Unit tests fail due to missing extend InitializedNullHandlingTest (#10382)

* CsvInputFormatTest should extend InitializedNullHandlingTest

* FirehoseFactoryToInputSourceAdaptorTest should extends InitializedNullHandlingTest",2020-09-11T23:23:46Z
690e070c43ce728a01c6e9c228db2b133e965b3e,Fix doc for name of dynamic config to pause coordination (#10345),2020-09-11T13:40:06Z
a5c46dc84b903ffd934c312a51f53dac74227e57,"Add vectorization for druid-histogram extension (#10304)

* First draft

* Remove redundant code from FixedBucketsHistogramAggregator classes

* Add test cases for new classes

* Fix tests in sql compatible mode

* Typo fix

* Fix comment

* Add spelling

* Vectorize only for supported types

* Rename internal aggregator files

* Fix tests",2020-09-09T20:56:33Z
e5f0da30ae15369f66c7e9ecc05a41c3d49eb2e6,"Fix stringFirst/stringLast rollup during ingestion (#10332)

* Add IndexMergerRollupTest

This changelist adds a test to merge indexes with StringFirst/StringLast aggregator.

* Fix StringFirstAggregateCombiner/StringLastAggregateCombiner

The segment-level type for stringFirst/stringLast is SerializablePairLongString,
not String. This changelist fixes it.

* Fix EarliestLatestAnySqlAggregator to handle COMPLEX type

This changelist allows EarliestLatestAnySqlAggregator to accept COMPLEX
type as an operand. For its return type, we set it to VARCHAR, since
COMPLEX column is only generated by stringFirst/stringLast during ingestion
rollup.

* Return value with smaller timestamp in StringFirstAggregatorFactory.combine function

* Add integration tests for stringFirst/stringLast during ingestion

* Use one EarliestLatestReturnTypeInference instance

Co-authored-by: Joy Kent <joy@automonic.ai>",2020-09-09T00:36:04Z
d32d1e7004760ceebc50a29e619dce363e7e5024,"Fix result-level caching (#10341)

* create baseSequence early

* unit test

* add comment and a new test",2020-09-08T18:04:00Z
176b7156249fdcd2a148c9d825f1f828df44709a,"Ignore CVEs from htrace and ambari transitive deps (#10353)

* Ignore CVEs from htrace and ambari transitive deps

htrace CVEs are suppressed for now as addressing them requires updating
the hadoop version.

ambari CVEs are suppressed for now since ambari is updated to the latest
version and is no longer actively maintained.

* Fix compilation issue from ambari upgrade

* Add missing test coverage",2020-09-04T22:22:26Z
91a153820ef2b2d938cd2e6e0eb1e5a53dcd0fb2,"fix NPE in StringGroupByColumnSelectorStrategy#bufferComparator (#10325)

* fix NPE in StringGroupByColumnSelectorStrategy#bufferComparator

* Add tests

* javadocs",2020-09-04T20:23:40Z
d7fcff3aba47dbd840c1cdca24f4802168ce1d9c,"StringFirstAggregatorFactory: Fix incorrect ""combine"" method. (#10351)

* StringFirstAggregatorFactory: Fix incorrect ""combine"" method.

There was a test, but it was wrong.

* Fix superclass.",2020-09-04T03:03:26Z
a3bb6ee4a61960b1c361ebe8a33c4a738e692acb,Add missing comma between JSON members in data-formats.md (#10343),2020-09-04T03:03:06Z
a5cd5f1e8404157f1f3ff6bda5ad6bb4cbfa1ff6,"Fix VARIANCE aggregator comparator (#10340)

* Fix VARIANCE aggregator comparator

The comparator for the variance aggregator used to compare values using the
count. This is now fixed to compare values using the variance. If the variance
is equal, the count and sum are used as tie breakers.

* fix tests + sql compatible mode

* code review

* more tests

* fix last test",2020-09-04T00:38:37Z
3fc8bc0701938b532282b6b50398c0ee6503a517,"optimize announceHistoricalSegments (#9935)

* optimize announceHistoricalSegment

* optimize announceHistoricalSegment

* revert offline SegmentTransactionalInsertAction uses a separate lock

* optimize segmentExistsBatch: Avoid too many elements in the in condition

* add unit test && Modified according to cr

Co-authored-by: xiangqiao <xiangqiao@kuaishou.com>",2020-09-02T20:07:10Z
a7924a9dee055aaaa26c46af93e493f4feb04c71,"add link to Docker quickstart in github README (#10299)

Per suggestion in comment https://github.com/apache/druid/pull/9262#issuecomment-675732237, I think this should eventually result in the copy mirrored on dockerhub to also be updated, if I understand how things work. Only the github `README.md` has been updated, not the `README.template` used for src and bin packages because presumably if you are reading from either of those you are just going to run locally and so the local quickstart is appropriate.",2020-09-02T08:17:34Z
e81a9df507e8f5c30cf5eebdc6d29cedf34626ba,"Web console: add tile for Azure Event Hubs (via Kafka API) (#10317)

* Add Azure Event Hubs

* better note

* update icon",2020-09-01T03:58:52Z
475d86a4f76cd736ca5b2e953744eb7a0c581e02,split up Expr.java (#10333),2020-08-31T19:51:53Z
8ab19793043c65bd79315de6fb26683f561a8a58,"Remove implied profanity from error messages. (#10270)

i.e. WTF, WTH.",2020-08-28T18:38:50Z
5cd7610fb61405108820de4b2173e690b8df3011,"SQL support for union datasources. (#10324)

* SQL support for union datasources.

Exposed via the ""UNION ALL"" operator. This means that there are now two
different implementations of UNION ALL: one at the top level of a query
that works by concatenating subquery results, and one at the table level
that works by creating a UnionDataSource.

The SQL documentation is updated to discuss these two use cases and how
they behave.

Future work could unify these by building support for a native datasource
that represents the union of multiple subqueries. (Today, UnionDataSource
can only represent the union of tables, not subqueries.)

* Fixes.

* Error message for sanity check.

* Additional test fixes.

* Add some error messages.",2020-08-28T14:57:06Z
f82fd22fa7de175200b7127c34c2eb2900bf7317,"Move tools for indexing to TaskToolbox instead of injecting them in constructor (#10308)

* Move tools for indexing to TaskToolbox instead of injecting them in constructor

* oops, other changes

* fix test

* unnecessary new file

* fix test

* fix build",2020-08-27T00:08:12Z
21703d81ac4aabb8c2dfc66cacd18a42b3c38fbd,"Fix handling of 'join' on top of 'union' datasources. (#10318)

* Fix handling of 'join' on top of 'union' datasources.

The problem is that unions are typically rewritten into a series of
individual queries on the underlying tables, but this isn't done when
the union is wrapped in a join.

The main changes are in UnionQueryRunner:

1) Replace an instanceof UnionQueryRunner check with DataSourceAnalysis.
2) Replace a ""query.withDataSource"" call with a new function, ""Queries.withBaseDataSource"".

Together, these enable UnionQueryRunner to ""see through"" a join.

* Tests.

* Adjust heap sizes for integration tests.

* Different approach, more tests.

* Tweak.

* Styling.",2020-08-26T21:23:54Z
b9ff3483ac353c4c7098d5caa1802befa5943ef0,"Add support for all partitioing schemes for auto compaction  (#10307)

* Add support for all partitioing schemes for auto compaction

* annotate last compaction state for multi phase parallel indexing

* fix build and tests

* test

* better home",2020-08-26T20:19:18Z
69d8645425ec13e546b4065d96e4b35d5458bbd9,"Adding supported compression formats for native batch ingestion (#10306)

* Adding supported compression formats for native batch ingestion

* Update docs/ingestion/native-batch.md

Co-authored-by: sthetland <steve.hetland@imply.io>

* fix spellcheck

Co-authored-by: Suneet Saldanha <suneet@apache.org>
Co-authored-by: sthetland <steve.hetland@imply.io>",2020-08-26T19:39:48Z
d4ac62f284e4e8038239082f6371c440d9ffef18,"Handle internal kinesis sequence numbers when reporting lag (#10315)

* Handle internal kinesis sequence numbers when reporting lag

* add unit test",2020-08-26T18:27:37Z
ab606610089f7bb9b4b1b68ac488764f394723fd,"refactor internal type system (#9638)

* better type tracking: add typed postaggs, finalized types for agg factories

* more javadoc

* adjustments

* transition to getTypeName to be used exclusively for complex types

* remove unused fn

* adjust

* more better

* rename getTypeName to getComplexTypeName

* setup expression post agg for type inference existing

* more javadocs

* fixup

* oops

* more test

* more test

* more comments/javadoc

* nulls

* explicitly handle only numeric and complex aggregators for incremental index

* checkstyle

* more tests

* adjust

* more tests to showcase difference in behavior

* timeseries longsum array",2020-08-26T17:53:44Z
a9de00d43ab34f6d9c5c1ba749617b7f2e1f1559,"Remove NUMERIC_HASHING_THRESHOLD (#10313)

* Make NUMERIC_HASHING_THRESHOLD configurable

Change the default numeric hashing threshold to 1 and make it configurable.

Benchmarks attached to this PR show that binary searches are not more faster
than doing a set contains check. The attached flamegraph shows the amount of
time a query spent in the binary search. Given the benchmarks, we can expect
to see roughly a 2x speed up in this part of the query which works out to
~ a 10% faster query in this instance.

* Remove NUMERIC_HASHING_THRESHOLD

* Remove stale docs",2020-08-26T03:05:39Z
91bb27cdf7b2c4bfc7152054c91b7772fe1060ec,"Clarify SQL behavior for multi-value dimensions. (#10276)

There are some known inconsistencies between SQL and native that
users should be aware of.",2020-08-25T17:11:16Z
f53785c52cef372dd5c456260329dfd5e39011e2,"ExpressionFilter: Use index for expressions of single multi-value columns. (#10320)

Previously, this was disallowed, because expressions treated multi-values
as nulls. But now, if there's a single multi-value column that can be
mapped over, it's okay to use the index. Expression selectors already do
this.",2020-08-25T06:29:31Z
707b5aae2b2c92479876212331eedb60b8e453cd,"Optimize large InDimFilters (#10312)

* Optimize large InDimFilters

For large InDimFilters, in default mode, the filter does a linear check of the
set to see if it contains either an empty or null. If it does, the empties are
converted to nulls by passing through the entire list again.

Instead of this, in default mode, we attempt to remove an empty string from the
values that are passed to the InDimFilter. If an empty string was removed, we
add null to the set

* code review

* Revert ""code review""

This reverts commit 61fe33ebf762764bb89108ddd966937f3313be71.

* code review - less brittle",2020-08-24T23:39:27Z
028442e75ec7ef2510d1bb8902f9b0010fe71875,"Redis cache extension enhancement (#10240)

* support redis cluster

* add 'password', 'database' properties

* test cases passed

* update doc

* some improvements

* fix CI

* add more test cases to improve branch coverage

* fix dependency check for test

* resolve review comments",2020-08-24T02:29:04Z
a607e9e7ff92c0be47e1717f63dd74108d5d3a30,introduce interning of internal files names in SmooshedFileMapper (#10295),2020-08-22T00:37:49Z
0910d22f487ab2ac603708d51a16da0d8bf942dc,"Add SQL ""OFFSET"" clause. (#10279)

* Add SQL ""OFFSET"" clause.

Under the hood, this uses the new offset features from #10233 (Scan)
and #10235 (GroupBy). Since Timeseries and TopN queries do not currently
have an offset feature, SQL planning will switch from one of those to
Scan or GroupBy if users add an OFFSET.

Includes a refactoring to harmonize offset and limit planning using an
OffsetLimit wrapper class. This is useful because it ensures that the
various places that need to deal with offset and limit collapsing all
behave the same way, using its ""andThen"" method.

* Fix test and add another test.",2020-08-21T21:11:54Z
b5b3e6ecce6f5346c4a1ed440b27656dd3b130a5,"Add maxNumFiles to splitHintSpec (#10243)

* Add maxNumFiles to splitHintSpec

* missing link

* fix build failure; use maxNumFiles for integration tests

* spelling

* lower default

* Update docs/ingestion/native-batch.md

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>

* address comments; change default maxSplitSize

* spelling

* typos and doc

* same change for segments splitHintSpec

* fix build

* fix build

Co-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>",2020-08-21T16:43:58Z
7620b0c54e31ed466adf149b2b7fbd815c4c70ce,"Segment backed broadcast join IndexedTable (#10224)

* Segment backed broadcast join IndexedTable

* fix comments

* fix tests

* sharing is caring

* fix test

* i hope this doesnt fix it

* filter by schema to maybe fix test

* changes

* close join stuffs so it does not leak, allow table to directly make selector factory

* oops

* update comment

* review stuffs

* better check",2020-08-20T21:12:39Z
618c04a99e4b6cb4ff5aff659feb655b37273fc0,"Fix CombiningFirehose compatibility (#10264)

* Fix CombiningFirehose

* Add integration test

* Fix path

* Add full datasource name

* Fix input location

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-08-20T17:37:38Z
b36dab0fe65557e4aaf675423d61bdaa51501a71,"fix connectionId issue with JDBC prepared statement queries and router  (#10272)

* fix router jdbc prepared statement connectionId issue

* column metadata too

* style

* remove tls

* try tls again

* add keystore stuffs

* use keyManager password

* add unit test

* simplify",2020-08-19T07:18:06Z
9a81740281d8ee8eafafbf71ccfdb90cb87e34d6,"Don't log the entire task spec (#10278)

* Don't log the entire task spec

* fix lgtm

* fix serde

* address comments and add tests

* fix tests

* remove unnecessary codes",2020-08-18T18:03:13Z
0891b1f833e1b292d8a74b69f8e6dbcabc88ab2c,"Add note about aggregations on floats (#10285)

* Add note about aggreations on floats

Floating point math is known to be unstable. Due to the way aggregators work
across segments it's possible for the same query operating on the same data to
produce slightly different results.

The same problem exists with any aggregators that are not commutative since
the merge order across segments is not guaranteed.

* Also talk about doubles

* Apply suggestions from code review",2020-08-17T20:29:57Z
ee40d00be1a449c1ca5787339ee84a250581aace,"typo fix from hear to here (#10292)

Should be `There are no other changes that need to be made here`",2020-08-17T14:54:21Z
225490474da3587cdde73f0e7593eff965221808,"Update Kafka dependencies to 2.6.0 (#10286)

* update Kafka dependencies to Kafka 2.6.0
* switch to Scala 2.13 build of Kafka
* update integration tests
* update Kafka tutorial",2020-08-15T14:56:40Z
12ae84165e8da0d775f5e5e1c5c042d903f260f4,"remove DruidLeaderClient.goAsync(..) that does not follow redirect. Replace its usage by DruidLeaderClient.go(..) with InputStreamFullResponseHandler (#9717)

* remove DruidLeaderClient.goAsync(..) that does not follow redirect.
Replace its usage by DruidLeaadereClient.go(..) with
InputStreamFullResponseHandler

* remove ByteArrayResponseHolder dependency from JsonParserIterator

* add UT to cover lines in InputStreamFullResponseHandler

* refactor SystemSchema to reduce branches

* further reduce branches

* Revert ""add UT to cover lines in InputStreamFullResponseHandler""

This reverts commit 330aba3dd98ce15a13cd6ca607824bc07036ee81.

* UTs for InputStreamFullResponseHandler

* remove unused imports",2020-08-14T17:51:18Z
6cca7242de629ad07478c6792b01dc1f37dc6b40,"Add ""offset"" parameter to the Scan query. (#10233)

* Add ""offset"" parameter to the Scan query.

It works by doing the query as normal and then throwing away the first
""offset"" number of rows on the broker.

* Fix constructor call.

* Fix up JSONs.

* Fix call to ScanQuery.

* Doc update.

* Fix javadocs.

* Spotbugs, LGTM suppressions.

* Javadocs.

* Fix suppression.

* Stabilize Scan query result order, add tests.

* Update LGTM comment.

* Fixup.

* Test different batch sizes too.

* Nicer tests.

* Fix comment.",2020-08-13T21:56:24Z
e053348f747f6428e14362e4844e916f8790b726,"add hasNulls to ColumnCapabilities, ColumnAnalysis (#10219)

* add isNullable to ColumnCapabilities, ColumnAnalysis

* better builder

* fix segment metadata queries in integration tests

* adjustments

* cleanup

* fix spotbugs

* treat unknown as true in segmentmetadata

* rename to hasNulls, add docs

* fixup

* test the dim indexer selector isNull fix for numeric columns

* fixes

* oof",2020-08-13T21:55:32Z
a61263b4a97ef456e383dddb8a270082e122f4db,"Allow forceLimitPushDown in SQL (#10253)

* Allow forceLimitPushDown in SQL

* fix test

* fix test

* review comments

* fix test",2020-08-13T20:30:41Z
748a83cb78832f098cac6ab24c9db6713509d38e,"Web console: fix json input (#10271)

* fix json input

* tidy up

* add error extraction test",2020-08-13T19:20:58Z
89860b7d6a9114f43af08daa39ad0c9b945fa5cf,"Fix javadoc mistake in DefaultLimitSpec. (#10269)

Javadoc for getLimit should say it's a limit, not an offset.",2020-08-13T19:17:26Z
d36a0f61da2cf1001738fb3bf54231a1ac7e6678,"Clarify documentation on dimensions, dimensionExclusions. (#10265)

In particular: exclusions are ignored if dimensions are set.",2020-08-12T15:06:53Z
e273264332f5d1e619c50c6ee9727058ccdfb9b2,"Fix two id-over-maxId errors in StringDimensionIndexer. (#10245)

1) lookupId could return IDs beyond maxId if called with a recently added value.
2) getRow could return an ID for null beyond maxId, if null was recently
   encountered in a dimension that initially didn't appear at all. (In this case,
   the dictionary ID for null can be > 0).

Also add a comment explaining how this stuff is supposed to work.",2020-08-12T03:32:10Z
6baea0b4d510e81095c13ece59c8426d63216f8f,"Fix broken sampler for re-indexing (#10196)

* Fix broken sampler for re-indexer

When re-indexing a Druid datasource, the web-console would generate an
invalid inputFormat since the type is not specified.

* code review",2020-08-12T02:22:26Z
c72f96a4babdf5055912bb0fb5eb2236cfe0ef23,"fix bug with expressions on sparse string realtime columns without explicit null valued rows (#10248)

* fix bug with realtime expressions on sparse string columns

* fix test

* add comment back

* push capabilities for dimensions to dimension indexers since they know things

* style

* style

* fixes

* getting a bit carried away

* missed one

* fix it

* benchmark build fix

* review stuffs

* javadoc and comments

* add comment

* more strict check

* fix missed usaged of impl instead of interface",2020-08-11T18:07:17Z
35284e51668b7315808176a1a04464ad48fb15d2,Make stale bot less aggressive (#10261),2020-08-11T03:59:02Z
dc16abae34ca9f4159f692ee866a122f70de9cdf,"Vectorization support for long, double, float min & max aggregators. (#10260)

* LongMaxVectorAggregator support and test case.

* DoubleMinVectorAggregator and test cases.

* DoubleMaxVectorAggregator and unit test.

* FloatMinVectorAggregator and FloatMaxVectorAggregator.

* Documentation update to include the other vector aggregators.

* Bug fix.

* checkstyle formatting fixes.

* CalciteQueryTest cases update.

* Separate test classes for FloatMaxAggregation and FloatMniAggregation.

* remove the cannotVectorize for float max/min aggregator in test.

* Tests in GroupByQueryRunner, GroupByTimeseriesQueryRunner and TimeseriesQueryRunner.",2020-08-10T22:18:55Z
06539bc8286a5b934b32a3680e8973c32f1c7b22,"Set default server.maxsize to the sum of segment cache (#10255)

* Default server.maxsize

* Remove maxsize refs from config

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-08-10T16:21:22Z
1fae0e15c9240d9a1e47149465276f30574966b5,improve JSON paste (#10256),2020-08-08T00:01:06Z
170031744e8a2ed5fc4c06062df014bcfcfe2e1f,"Combine InDimFilter, InFilter. (#10119)

* Combine InDimFilter, InFilter.

There are two motivations:

1. Ensure that when HashJoinSegmentStorageAdapter compares its Filter
   to the original one, and it is an ""in"" type, the comparison is by
   reference and does not need to check deep equality. This is useful
   when the ""in"" filter is very large.
2. Simplify things. (There isn't a great reason for the DimFilter and
   Filter logic to be separate, and combining them reduces some
   duplication.)

* Fix test.",2020-08-07T01:34:21Z
b6aaf59e8cdc4b2965ec9f54d8b824a51baaa594,"Add ""offset"" parameter to GroupBy query. (#10235)

* Add ""offset"" parameter to GroupBy query.

It works by doing the query as normal and then throwing away the first
""offset"" number of rows on the broker.

* Stabilize GroupBy sorts.

* Fix inspections.

* Fix suppression.

* Fixups.

* Move TopNSequence to druid-core.

* Addl comments.

* NumberedElement equals verification.

* Changes from review.",2020-08-05T22:39:58Z
9a29496b6c6bca6fe6a3eb63047fbbacdacf1c57,"Web console: Improve retention rules dialog in all sorts of ways (#10226)

* improve ret rules

* tidy up tests",2020-08-04T23:43:31Z
4bb198eb4cf87138181db54f46f29ac78b2cb842,change search filter to includes (#10141),2020-08-04T23:37:07Z
34a41137522fca463c6af1df5edb2f41297491f5,"Add vectorization support for the longMin aggregator. (#10211)

* Fix minor formatting in docs.

* Add Nullhandling initialization for test to run from IDE.

* Vectorize longMin aggregator.

- A new vectorized class for the vectorized long min aggregator.
- Changes to AggregatorFactory to support vectorize functionality.
- Few changes to schema evolution test to add LongMinAggregatorFactory.

* Add longSum to the supported vectorized aggregator implementations.

* Add MIN() long min to calcite query test that can vectorize.

* Add simple long aggregations test.

* Fixup formatting per checkstyle guide.

* fixup and add more tests for long min aggregator.

* Override test for groupBy since timestamps are handled differently.

* Null compatibility check in test.

* Review comment: Add a test case to LongMinAggregationTest.",2020-08-01T22:32:09Z
cfb7a893e7892bfefb6b22fba4d575f0aaa012e6,"fill out missing test coverage for druid-datasketches postaggs (#9730)

* fill out missing test coverage for druid-datasketches postaggs

* fixup

* fixup merge

* oops

* oops again",2020-07-31T17:08:07Z
646fa84d043a075e64efa0d65205a17b066204e9,"Support unit on byte-related properties (#10203)

* support unit suffix on byte-related properties

* add doc

* change default value of byte-related properites in example files

* fix coding style

* fix doc

* fix CI

* suppress spelling errors

* improve code according to comments

* rename Bytes to HumanReadableBytes

* add getBytesInInt to get value safely

* improve doc

* fix problem reported by CI

* fix problem reported by CI

* resolve code review comments

* improve error message

* improve code & doc according to comments

* fix CI problem

* improve doc

* suppress spelling check errors",2020-07-31T01:58:48Z
271f90f2052ad4288e4981e12fea8c5d0786a601,"Add segment pruning for hash based shard spec (#9810)

* Add segment pruning for hash based partitioning

* Update doc

* Add additional test

* Address comments

* Fix unit test failure

Co-authored-by: Jian Wang <jwang@pinterest.com>",2020-07-31T01:44:26Z
574b062f1f6f1cf0637d99d4ea540a95971c7489,"Cluster wide default query context setting (#10208)

* Cluster wide default query context setting

* Cluster wide default query context setting

* Cluster wide default query context setting

* add docs

* fix docs

* update props

* fix checkstyle

* fix checkstyle

* fix checkstyle

* update docs

* address comments

* fix checkstyle

* fix checkstyle

* fix checkstyle

* fix checkstyle

* fix checkstyle

* fix NPE",2020-07-29T22:19:18Z
63c1746fe40fc40d60dbc77f411e58949c102bfa,"Fix timeseries query constructor when postAggregator has an expression reading timestamp result column (#10198)

* Fix timeseries query constructor when postAggregator has an expression reading timestamp result column

* fix npe

* Fix postAgg referencing timestampResultField and add a test for it

* fix test

* doc

* revert doc",2020-07-27T17:54:44Z
2f28be3f2aad2e2dc09e5506cb06e86a214c3ef0,"Suppress CVE-2020-7692 (#10214)

Druid is not a native app, so this CVE should not apply.",2020-07-27T17:52:44Z
79dffefbf8d51e3f46e235ec6741a810adcbd8f2,"add explicit example for jdbc query context on connection properties (#10182)

* add explicit example for jdbc query context on connection properties

* make comment clearer

* Update sql.md

* Update sql.md",2020-07-24T20:43:04Z
6d8799f2dfec72c234f408a3433cf93f69c99ddb,"Update QueryView to use latest DruidQueryToolkit (#10201)

* Update to latest DruidQueryToolkit

* add THEN keyword

* do not crash on invalid JSON",2020-07-24T05:45:01Z
e363b1cd2075e6fac2d4adeeb72565c6f1da5a22,Update RoaringBitmap to 0.9.0 (#9987),2020-07-24T02:29:25Z
6fdce36e41b109f74077c0a68fc2d2ec5d771e29,"Add integration tests for query retry on missing segments (#10171)

* Add integration tests for query retry on missing segments

* add missing dependencies; fix travis conf

* address comments

* Integration tests extension

* remove unused dependency

* remove druid_main

* fix java agent port",2020-07-23T05:30:35Z
26d099f39b8a0c86f16cc434bf997ba26104b6d6,"Fix sys.servers table to not throw NPE and handle brokers/indexers/peons properly for broadcast segments (#10183)

* Fix sys.servers table to not throw NPE and handle brokers/indexers/peons properly for broadcast segments

* fix tests and add missing tests

* revert null handling fix

* unused import

* move out util methods from DiscoveryDruidNode",2020-07-22T00:52:51Z
d4bd6e52070394a651724697ce588c9fe4f81436,ingestion and tutorial doc update (#10202),2020-07-22T00:52:23Z
266243ac752b4556fc953798bb2e3eaaa0e05bdf,include staged maven artifacts in example vote thread (#10200),2020-07-21T23:30:28Z
dd7a32ad48e759b6e9e533c77397af3268d34e48,"Fix ITSqlInputSourceTest (#10194)

* Fix ITSqlInputSourceTest.java

* Fix ITSqlInputSourceTest.java

* Fix ITSqlInputSourceTest.java

* fix

* fix

* fix

* fix

* fix

* fix

* fix

* fix",2020-07-21T16:52:13Z
41982116f4ff7a05dbf292db71b1bcab2cbe7c66,"Report missing segments when there is no segment for the query datasource in historicals (#10199)

* Report missing segments when there is no segment for the query
datasource in historicals

* test

* missing part for test

* another test",2020-07-21T04:02:52Z
0deefd64084cf2ccefebc8f57edb90e0be8ac0a8,update release process guide to include web-console versions (#10176),2020-07-20T20:59:06Z
0cabc53bd56b49ef32e63ff536d0d193c9144baf,"Add integration tests for Appends (#10186)

* append test

* add append IT

* fix checkstyle

* fix checkstyle

* Remove parallel

* fix checkstyle

* fix

* fix

* address comments

* fix

* fix

* fix

* fix

* fix

* fix

* fix

* fix

* fix

* fix

* fix",2020-07-20T20:43:13Z
eeb9012743e0d2f3cf1f594c3dfd82eb20cb6f99,"Change color of Run button for native queries (#10170)

* Change color of Run button for native queries

When a user tries to run a native query, change the color of the button to
Druid's secondary color to indicate that the user is not running a SQL query.

Before this change, the web-console would indicate this by changing the text
of the button from Run (SQL queries) to Rune (native queries). Rune could be
confusing to users as this appears to be a typo.

* Update web-console/src/views/query-view/run-button/run-button.scss

* Update web-console/src/views/query-view/run-button/run-button.scss

* Update web-console/src/views/query-view/run-button/run-button.scss

* code review",2020-07-15T22:46:02Z
454eed06a872e369e4d2fc2e3b955457ffa081ee,JettyTest.testNumConnectionsMetricHttp is rarely flaky (#10169),2020-07-14T17:36:46Z
e6c9142129f1462feabefb4b13aa8a037fbe793f,"Add validation for authenticator and authorizer name (#10106)

* Add validation for authorizer name

* fix deps

* add javadocs

* Do not use resource filters

* Fix BasicAuthenticatorResource as well

* Add integration tests

* fix test

* fix",2020-07-14T04:15:54Z
971d8a353b27bbb61f934978978ea83371651248,"Add groupBy limitSpec to queryCache key (#10093)

* Add groupBy limitSpec to queryCache key

* Only add limitSpec to cache key if pushdown is set to true

* review comment",2020-07-14T02:15:09Z
2b48de074a855d3c36ff588e90846644fc4b5f42,"Add additional properties for Kafka AdminClient and consumer from test config file (#10137)

* Add kafka test configs from file for AdminClient and consumer

* review comment",2020-07-13T12:46:05Z
f3023c6058699f6bd6d75fc41dff489e5e57b15c,"Fix formatting in druid-pac4j documentation (#10174)

Superfluous column broke table formatting.",2020-07-13T01:51:42Z
0a8fd62f2239199750e310197d0b430ebc571dc4,"split web-console e2e-tests from unit tests (#10173)

* split web-console e2e-test from unit test

* fix stuff

* smaller change

* oops",2020-07-13T01:51:08Z
ebea73d0817d8679aa6b183e9b5142272288138b,"fix website build (#10172)

* fix mvn website build to use mvn supplied nodejs, fix broken redirects, move block from custom.css to custom.scss so will be correctly generated

* sidebar

* fix lol",2020-07-12T05:01:43Z
58f2e5116126fee868b39e268341db0e60c8425f,"Do not echo back username on auth failure (#10097)

* Do not echo back username on auth failure

* use bad username

* Remove username from exception messages

* fix tests

* fix the tests

* hopefully this time

* this time the tests work

* fixed this time

* fix

* upgrade to Jetty 9.4.30

* Unknown users echo back Unauthorized

* fix",2020-07-10T19:19:10Z
b7f4ce70cc4c4f2106b0cd7eac133fb8f3021e7e,"Update ambari-metrics-common to version 2.6.1.0.0  (#10165)

* Switch to apache version of ambari-metrics-common

* Add test

* Fix intellij inspection

* Fix intellij inspection",2020-07-10T19:18:40Z
54a8fb827df6ca2d7b0f1e86656d0cd5a978f273,"Fix flaky tests in DruidCoordinatorTest (#10157)

* Fix flaky tests in DruidCoordinatorTest

* Imporve fail msg

* Fix flaky tests in DruidCoordinatorTest",2020-07-09T03:03:52Z
88d20a61a6845870b08fae5bbfcaa52b07a1d70c,renamed authenticationChain to authenticatorChain (#10143),2020-07-09T02:58:21Z
9587fc0b84664c49b12555744bb564f6c5f55d78,"Fix documentation for Kinesis fetchThreads. (#10156)

* Fix documentation for Kinesis fetchThreads

The default was changed in #9819, but the documentation wasn't updated.

* Add 'procs' to spelling.",2020-07-09T02:47:09Z
53a25505719f05b7041c35b2cb783dcb1466c7cd,"Follow-up for RetryQueryRunner fix (#10144)

* address comments; use guice instead of query context

* typo

* QueryResource tests

* address comments

* catch queryException

* fix spell check",2020-07-08T20:28:11Z
4e8570b71b6b8b6ab1299faed051d7287395013a,"Add integration tests for all InputFormat (#10088)

* Add integration tests for Avro OCF InputFormat

* Add integration tests for Avro OCF InputFormat

* add tests

* fix bug

* fix bug

* fix failing tests

* add comments

* address comments

* address comments

* address comments

* fix test data

* reduce resource needed for IT

* remove bug fix

* fix checkstyle

* add bug fix",2020-07-08T19:50:29Z
859ff6e9c052f7331cfe8eb55b341ab628b9cd15,"Reduce memory footprint of integration test by not starting unneeded containers (#10150)

* Reduce memory footprint of integration test

* fix README

* fix README

* fix error in script

* fix security IT",2020-07-08T16:46:18Z
1b9aacb1cd1d16b23de2f4485e1398640e97f8bd,"Fix avg sql aggregator (#10135)

* new average aggregator

* method to create count aggregator factory

* test everything

* update other usages

* fix style

* fix more tests

* fix datasketches tests",2020-07-08T15:38:56Z
c776e412e089ee73b40b75f6245df3dc55ee6993,Update dictionary for spell check (#10152),2020-07-08T06:12:39Z
11c0da809711c03f21e7e60ec1d4bfd2826fe8f2,"Add availability and consistency docs. (#10149)

* Add availability and consistency docs.

Describes transactional ingestion and atomic replacement. Also, this patch
deletes some bad advice from the javadocs for SegmentTransactionalInsertAction.

* Fix missing word.",2020-07-07T22:22:52Z
d54a5e009f775288117018db032b632a66c181fd,"ui: fix missing columns during Transform step (#10086)

Co-authored-by: egor-ryashin <egor.ryashin@metamarkets.com>",2020-07-07T22:16:52Z
eeaf609fc0a48949a841db8ff3b1e559d7285369,"Update Jetty to 9.4.30.v20200611. (#10098)

* Update Jetty to 9.4.30.v20200611.

This is the latest version currently available in the 9.4.x line.

* Various adjustments.

* Class name fixes.

* Remove unused HttpClientModule code.

* Add coverage suppressions.

* Another coverage suppression.

* Fix wildcards.",2020-07-07T21:24:02Z
98ac7dfeff95e46bc0ca94d3932473621767e52b,"mask secrets in MM task command log (#10128)

* mask secrets in MM task command log

* unit test for masked iterator

* checkstyle fix",2020-07-07T17:25:15Z
010fe047e196d3cd2478892113bd400913055fc7,AbstractOptimizableDimFilter should be public (#10142),2020-07-06T22:19:32Z
c86e7ce30b7a37a9e42a64aecf2c16032c6487a4,bump version to 0.20.0-SNAPSHOT (#10124),2020-07-06T22:08:32Z
ddda2a4f18597257633b55536d8a54e1a3f61eb3,"VersionedIntervalTimeline: Fix thread-unsafe call to ""lookup"". (#10130)",2020-07-05T16:32:18Z
bcf41922ce31b9ff89955dbe850e48d5fa4111c7,Remove unsupported task types in doc (#10111),2020-07-05T01:13:53Z
2b93dc60193d50b8f8d20a658b7837b152d75bec,"Fix CachingClusteredClient when querying specific segments (#10125)

* Fix CachingClusteredClient when querying specific segments

* delete useless test

* roll back timeout",2020-07-03T00:50:50Z
ed981ef88e1005d1b1e5235da4995b18288d6bf9,"Add DimFilter.toOptimizedFilter(), ensure that join filter pre-analysis operates on optimized filters (#10056)

* Ensure that join filter pre-analysis operates on optimized filters, add DimFilter.toOptimizedFilter

* Remove aggressive equality check that was used for testing

* Use Suppliers.memoize

* Checkstyle",2020-07-02T05:26:17Z
367eaedbb412bdd1d5172e3a6e39649d2f246f24,"Clarify change in behavior for druid.server.maxSize (#10105)

* Clarify maxSize docs

* Add info about maxSize

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-07-02T05:22:18Z
60c6bd5b4c44f28f5dbff48e70c6138ce35204b6,"support Aliyun OSS service as deep storage (#9898)

* init commit, all tests passed

* fix format

Signed-off-by: frank chen <frank.chen021@outlook.com>

* data stored successfully

* modify config path

* add doc

* add aliyun-oss extension to project

* remove descriptor deletion code to avoid warning message output by aliyun client

* fix warnings reported by lgtm-com

* fix ci warnings

Signed-off-by: frank chen <frank.chen021@outlook.com>

* fix errors reported by intellj inspection check

Signed-off-by: frank chen <frank.chen021@outlook.com>

* fix doc spelling check

Signed-off-by: frank chen <frank.chen021@outlook.com>

* fix dependency warnings reported by ci

Signed-off-by: frank chen <frank.chen021@outlook.com>

* fix warnings reported by CI

Signed-off-by: frank chen <frank.chen021@outlook.com>

* add package configuration to support showing extension info

Signed-off-by: frank chen <frank.chen021@outlook.com>

* add IT test cases and fix bugs

Signed-off-by: frank chen <frank.chen021@outlook.com>

* 1. code review comments adopted
2. change schema from 'aliyun-oss' to 'oss'

Signed-off-by: frank chen <frank.chen021@outlook.com>

* add license info

Signed-off-by: frank chen <frank.chen021@outlook.com>

* fix doc

Signed-off-by: frank chen <frank.chen021@outlook.com>

* exclude execution of IT testcases of OSS extension from CI

Signed-off-by: frank chen <frank.chen021@outlook.com>

* put the extensions under contrib group and add to distribution

* fix names in test cases

* add unit test to cover OssInputSource

* fix names in test cases

* fix dependency problem reported by CI

Signed-off-by: frank chen <frank.chen021@outlook.com>",2020-07-02T05:20:53Z
e2c5bcc22d2c175bba51fbb2a9c90303ecdf6f44,"Fix UnknownComplexTypeColumn#makeVectorObjectSelector. Add a warning … (#10123)

* Fix UnknownComplexTypeColumn#makeVectorObjectSelector. Add a warning message to indicate failure in deserializing.",2020-07-02T03:06:23Z
c5540f46ed041cc15f0286375b12b496d6c106af,fixes for ranger docs (#10109),2020-07-02T01:26:41Z
1676ba22e300ea95cc92c0808f390aaa769546f9,"Fix Stack overflow with infinite loop in ReduceExpressionsRule of HepProgram (#10120)

* Fix Stack overflow with SELECT ARRAY ['Hello', NULL]

* address comments",2020-07-02T00:48:09Z
477335abb4fe3e872a1b8f71d9c2bd90e4315fbc,"update links datasketches.github.io to datasketches.apache.org (#10107)

* update links datasketches.github.io to datasketches.apache.org

* now with more apache

* oops

* oops",2020-07-01T21:56:17Z
3e92cdf1cfcde8447e3a61dfe36eb813716ad202,"Revert ""Fix UnknownTypeComplexColumn#makeVectorObjectSelector"" (#10121)

This reverts commit 7bb7489afc7a2cc496be93ae69681b6ab13a7c66.",2020-07-01T21:33:17Z
a337ef351cddaec51263cac363fd1b40f11ee010,"Closing yielder from ParallelMergeCombiningSequence should trigger cancellation (#10117)

* cancel parallel merge combine sequence on yielder close

* finish incomplete comment

* Update core/src/test/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequenceTest.java

Fixes checkstyle

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2020-07-01T21:07:44Z
657f8ee80fa86779cf26a01072814b1530277aa7,"Fix RetryQueryRunner to actually do the job (#10082)

* Fix RetryQueryRunner to actually do the job

* more javadoc

* fix test and checkstyle

* don't combine for testing

* address comments

* fix unit tests

* always initialize response context in cachingClusteredClient

* fix subquery

* address comments

* fix test

* query id for builders

* make queryId optional in the builders and ClusterQueryResult

* fix test

* suppress tests and unused methods

* exclude groupBy builder

* fix jacoco exclusion

* add tests for builders

* address comments

* don't truncate",2020-07-01T21:02:21Z
7bb7489afc7a2cc496be93ae69681b6ab13a7c66,Fix UnknownTypeComplexColumn#makeVectorObjectSelector,2020-07-01T19:02:23Z
d3497a6581c69f810090f5180f1f18328b06c781,"Filter on metrics doc (#10087)

* add note about filter on metrics to filter docs

* edit doc to include having and filtered aggregator links",2020-07-01T02:52:40Z
5faa897a342096b2ac88587ad62e6e15022b01dd,"Join filter pre-analysis simplifications and sanity checks. (#10104)

* Join filter pre-analysis simplifications and sanity checks.

- At pre-analysis time, only compute pre-analysis for the innermost
  root query, since this is the one that will run on the join that involves
  the base datasource. Previously, pre-analyses were computed for multiple
  levels of the query, some of which were unnecessary.
- Remove JoinFilterPreAnalysisGroup and join query level gathering code,
  since they existed to support precomputation of multiple pre-analyses.
- Embed JoinFilterPreAnalysisKey into JoinFilterPreAnalysis and use it to
  sanity check at processing time that the correct pre-analysis was done.

Tangentially related changes:

- Remove prioritizeAndLaneQuery functionality from LocalQuerySegmentWalker.
  The computed priority and lanes were not being used.
- Add ""getBaseQuery"" method to DataSourceAnalysis to support identification
  of the proper subquery for filter pre-analysis.

* Fix compilation errors.

* Adjust tests.",2020-07-01T02:14:22Z
7b4edc93fccd7334d413e46dd6ba58a4be676c3a,Update web address to datasketches.apache.org (#10096),2020-07-01T02:05:23Z
2c1b45842f1d402b22da44e8da1d53c41de96b89,Prevent unknown complex types from breaking DruidSchema refresh (#9422),2020-06-30T21:06:17Z
84290a233296e29be3e7d0424ebbd95cff381887,"Enabling Static Imports for Unit Testing DSLs (#331) (#9764)

* Enabling Static Imports for Unit Testing DSLs (#331)

Co-authored-by: mohammadshoaib <mohammadshoaib@miqdigital.com>

* Feature 8885 - Enabling Static Imports for Unit Testing DSLs (#435)

* Enabling Static Imports for Unit Testing DSLs

* Using suppressions checkstyle to allow static imports only in the UTs

Co-authored-by: mohammadshoaib <mohammadshoaib@miqdigital.com>

* Removing the changes in the checkstyle because those are not needed

Co-authored-by: mohammadshoaib <mohammadshoaib@miqdigital.com>",2020-06-30T20:59:35Z
c01fd561825286a9b8888c3b3c14d3d63eb93af5,"Web console: allow link overrides for docs, and more (#10100)

* link overrides

* change doc version

* fix snapshots",2020-06-30T19:46:50Z
fc555980e8cadc61fcb8cee9d6dadec9cf0e0496,"Remove payload field from table sys.segment (#9883)

* remove payload field from table sys.segments

* update doc

* fix test

* fix CI failure

* add necessary fields

* fix doc

* fix comment",2020-06-30T05:20:23Z
4a625751e89243a910b0d54971ae621bdf435fff,"Information schema doc update (#10081)

* add docs for IS_JOINABLE and IS_BROADCAST to INFORMATION_SCHEMA docs

* fixes

* oops

* revert noise

* missed one

* spellbot",2020-06-30T04:08:13Z
363d0d86be9e83a5d24d5cf002cac57d99a43baa,"QueryCountStatsMonitor can be injected in the Peon (#10092)

* QueryCountStatsMonitor can be injected in the Peon

This change fixes a dependency injection bug where there is a circular
dependency on getting the MonitorScheduler when a user configures the
QueryCountStatsMonitor to be used.

* fix tests

* Actually fix the tests this time",2020-06-30T04:03:07Z
69f2b1ef00dea82e88db4be87052cb710f513c15,"Correct the position of the double quotation in distinctcount.md file (#10094)

```
""dimensions"": ""[sample_dim]""
```
should be
```
""dimensions"": [""sample_dim""]
```",2020-06-30T03:59:56Z
b91a16943b03abbaea6215e9517f8bf62a442c71,"Make 0.19 brokers compatible with 0.18 router (#10091)

* Make brokers backwards compatible

In 0.19, Brokers gained the ability to serve segments. To support this change,
a `BROKER` ServerType was added to `druid.server.coordination`.

Druid nodes prior to this change do not know of this new server type and so
they would fail to deserialize this node's announcement.

This change makes it so that the broker only announces itself if the segment
cache is configured on the broker. It is expected that a Druid admin will only
configure the segment cache on the broker once the cluster has been upgraded
to a version that supports a broker using the segment cache.

* make code nicer

* Add tests

* Ignore icode coverage for nitialization classes

* Revert ""Ignore icode coverage for nitialization classes""

This reverts commit aeec0c2ac2b07c1b9262e32201913c7194167271.

* code review",2020-06-30T03:57:33Z
0841c89df6de4cd6c8dba6b62651874e00ac3ed5,"Fix nullhandling exception (#10095)

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-06-30T03:55:38Z
33a37d85d7ae3155e5f5d38814feade8e08e1d71,"Fix native batch range partition segment sizing (#10089)

* Fix native batch range partition segment sizing

Fixes #10057.

Native batch range partitioning was only considering the partition
dimension value when grouping rows instead of using all of the row's
partition values. Thus, for schemas with multiple dimensions, the rollup
was overestimated, which would cause too many dimension values to be
packed into the same range partition. The resulting segments would then
be overly large (and not honor the target or max partition sizes).

Main changes:

- PartialDimensionDistributionTask: Consider all dimension values when
  grouping row

- RangePartitionMultiPhaseParallelIndexingTest: Regression test by
  having input with rows that should roll up and rows that should not
  roll up

* Use hadoop & native hash ingestion row group key",2020-06-30T00:49:52Z
8ef3598c0555068f4b0a5a86811a157778ece2a1,"Move shardSpec tests to core (#10079)

* Move shardSpec tests to core

* checkstyle

* inject object mapper for testing

* unused import",2020-06-30T00:31:37Z
15a0b4ffe21a39d830504153033529523e3d69c6,"Filter http requests by http method (#10085)

* Filter http requests by http method

Add a config that allows a user which http methods to allow against their
Druid server.

Druid will only accept http requests with the method: GET, PUT, POST, DELETE
and OPTIONS.
If a Druid admin wants to allow other methods, they can do so by using the
ServerConfig#allowedHttpMethods config.

If a Druid user would like to disallow OPTIONS, this can be done by changing
the AuthConfig#allowUnauthenticatedHttpOptions config

* Exclude OPTIONS from always supported HTTP methods

Add HEAD as an allowed method for web console e2e tests

* fix docs

* fix security IT

* Actually fix the web console e2e tests

* Ignore icode coverage for nitialization classes

* code review",2020-06-29T23:59:31Z
35c7c0ec25405bed6f9a379a135d9cf42bea5d16,"Segment timeline doesn't show results older than 3 months (#9956)

* Segment timeline doesn't show results older than 3 months

* Adoption testing patch for web segment timeline view and also refactoring default time config",2020-06-28T08:45:05Z
a4c6d5f37e88a8152967ba68b150fcf4077092cf,"fix query memory leak (#10027)

* fix query memory leak

* rollup ./idea

* roll up .idea

* clean code

* optimize style

* optimize cancel function

* optimize style

* add concurrentGroupTest test case

* add test case

* add unit test

* fix code style

* optimize cancell method use

* format code

* reback code

* optimize cancelAll

* clean code

* add comment",2020-06-27T06:30:59Z
20fd72bd13a1953a6df8b0cca9b3108456d24472,Fix NPE when brokers use custom priority list (#9878),2020-06-27T00:28:54Z
405ebdcaafba5237530831f5e559cdbc9ad78fb4,"fix MaterializedView gropuby query return arry result by default (#9936)

* fix bug:MaterializedView gropuby query return map result by default

* add unit test

* add unit test

* add unit test

* fix bug:MaterializedView gropuby query return map result by default

* add unit test

* add unit test

* add unit test

* update pr

* update pr

Co-authored-by: xiangqiao <xiangqiao@kuaishou.com>",2020-06-26T23:52:04Z
4b99c6d3efa66312d9b6c2ecf34d02dd194e573f,"ensure ParallelMergeCombiningSequence closes its closeables (#10076)

* ensure close for all closeables of ParallelMergeCombiningSequence

* revert unneeded change

* consolidate methods

* catch throwable instead of exception",2020-06-26T21:37:20Z
ec46d82c710d3bb3481c0dace029729ba49aadd8,"Add integration tests for SqlInputSource (#10080)

* Add integration tests for SqlInputSource

* make it faster",2020-06-26T20:32:42Z
c591ff8ea8f4c2051c2c4721b2b6b82bea54d107,"Add NonnullPair (#10013)

* Add NonnullPair

* new line

* test

* make it consistent",2020-06-26T16:52:06Z
b7d771f633fb3c54490ea1a1f8df6691ea4bb4e1,"More prominent instructions on code coverage failure (#10060)

* More prominent instructions on code coverage failure

* Update .travis.yml",2020-06-26T02:48:30Z
f6594fff608d4b2e071c7bdd6d86d7f87398ce4f,"Fix missing temp dir for native single_dim (#10046)

* Fix missing temp dir for native single_dim

Native single dim indexing throws a file not found exception from
InputEntityIteratingReader.java:81.  This MR creates the required
temporary directory when setting up the
PartialDimensionDistributionTask.  The change was tested on a Druid
cluster.  After installing the change native single_dim indexing
completes successfully.

* Fix indentation

* Use SinglePhaseSubTask as example for creating the temp dir

* Move temporary indexing dir creation in to TaskToolbox

* Remove unused dependency

Co-authored-by: Morri Feldman <morri@appsflyer.com>",2020-06-25T21:41:22Z
aaee72c781dea0f06bd5781d085b356d5d4241d0,"Allow append to existing datasources when dynamic partitioning is used (#10033)

* Fill in the core partition set size properly for batch ingestion with
dynamic partitioning

* incomplete javadoc

* Address comments

* fix tests

* fix json serde, add tests

* checkstyle

* Set core partition set size for hash-partitioned segments properly in
batch ingestion

* test for both parallel and single-threaded task

* unused variables

* fix test

* unused imports

* add hash/range buckets

* some test adjustment and missing json serde

* centralized partition id allocation in parallel and simple tasks

* remove string partition chunk

* revive string partition chunk

* fill numCorePartitions for hadoop

* clean up hash stuffs

* resolved todos

* javadocs

* Fix tests

* add more tests

* doc

* unused imports

* Allow append to existing datasources when dynamic partitioing is used

* fix test

* checkstyle

* checkstyle

* fix test

* fix test

* fix other tests..

* checkstyle

* hansle unknown core partitions size in overlord segment allocation

* fail to append when numCorePartitions is unknown

* log

* fix comment; rename to be more intuitive

* double append test

* cleanup complete(); add tests

* fix build

* add tests

* address comments

* checkstyle",2020-06-25T20:37:31Z
0f51b3c1908b1c88f06ec2e3638d206d97bcb6c0,"fix dropwizard emitter jvm bufferpoolName metric (#10075)

* fix dropwizard emitter jvm bufferpoolName metric

* fixes",2020-06-25T19:20:25Z
422a8af14e932d4da0cd7b78d4b729884dd25a34,"Fix balancer strategy (#10070)

* fix server overassignment

* fix random balancer strategy, add more tests

* comment

* added more tests

* fix forbidden apis

* fix typo",2020-06-25T11:15:00Z
ec1f443a5ccd8db08f2003385b814d9947d2725e,"update avatica to handle additional character sets over jdbc (#10074)

* update avatica to handle additional character sets over jdbc

* update license yaml, fix test

* oops",2020-06-25T02:58:34Z
572cd16e6fa1d186b14af991beebf3dba911ae1a,fix dimension names for jvm monitor metrics (#10071),2020-06-25T02:56:16Z
1596b3eacdb1ec127a9b1f4aa99ee8b8dd7a8b76,"Optimize protobuf parsing for flatten data (#9999)

* optimize for protobuf parsing

* fix import error and maven dependency

* add unit test in protobufInputrowParserTest for flatten data

* solve code duplication (remove the log and main())

* rename 'flatten' to 'flat' to make it clearer

Co-authored-by: xionghuilin <xionghuilin@bytedance.com>",2020-06-25T01:01:31Z
9be5039f680f4741c80019fa33d8269580d0fcd5,"Enable query vectorization by default (#10065)

* Enable query vectorization by default

* update docs",2020-06-24T20:08:49Z
f80c02da02351cbf5c430f293b6c20418321ef47,"Fix HyperUniquesAggregatorFactory.estimateCardinality null handling to respect output type (#10063)

* fix return type from HyperUniquesAggregator/HyperUniquesVectorAggregator

* address comments

* address comments",2020-06-24T01:54:37Z
978b494b465f346b5d89ffb792321d699eb626f1,"Druid user permissions (#10047)

* Druid user permissions apply in the console

* Update index.md

* noting user warning in console page; some minor shuffling

* noting user warning in console page; some minor shuffling 1

* touchups

* link checking fixes

* Updated per suggestions",2020-06-24T00:39:48Z
d96aa1586aa17433562ebbfbac4182b6975243bb,"retry 500 and 503 errors against kinesis (#10059)

* retry 500 and 503 errors against kinesis

* add test that exercises retry logic

* more branch coverage

* retry 500 and 503 on getRecords request when fetching sequence numberu

Co-authored-by: Harshpreet Singh <hrshpr@twitch.tv>",2020-06-23T22:49:34Z
0470fcc9da8136f6508a6de7be81efe54b4241d4,"change default number of segment loading threads (#9856)

* change default number of segment loading threads

* fix docs

* missed file

* min -> max for segment loading threads

Co-authored-by: Dylan <dwylie@spotx.tv>",2020-06-23T20:56:44Z
eee99ff0d5b365b4568c75c64985ab730c2fbdca,"minor rework of topn algorithm selection for clarity and more javadocs (#10058)

* minor refactor of topn engine algorithm selection for clarity

* adjust

* more javadoc",2020-06-22T16:08:50Z
5600e1c204c0b4c5f1060c89ad9f623d81aaae73,"fix docs error in hadoop-based part (#9907)

* fix docs error: google to azure and hdfs to http

* fix docs error: indexSpecForIntermediatePersists of tuningConfig in hadoop-based batch part

* fix docs error: logParseExceptions of tuningConfig in hadoop-based batch part

* fix docs error: maxParseExceptions of tuningConfig in hadoop-based batch part",2020-06-20T09:14:54Z
9bab6b6371d5e572031444cbf1b6a1ee7202c53f,SketchAggregator.updateUnion should handle null inside List update object (#10055),2020-06-20T03:29:25Z
191572ad5e250628ce7ab27259d1fe175a10b7a6,"Add safeguard to make sure new Rules added are aware of Rule usage in loadstatus API (#10054)

* Add safeguard to make sure new Rules added are aware of Rule usuage in loadstatus API

* address comments

* address comments

* add tests",2020-06-20T03:18:56Z
c2f5d453f87d0863fba532e9ff4f3e7369db12e3,"fix topn on string columns with non-sorted or non-unique dictionaries (#10053)

* fix topn on string columns with non-sorted or non-unique dictionaries

* fix metadata tests

* refactor, clarify comments and code, fix ci failures",2020-06-19T18:35:18Z
37e150c0755c0efba609601b1122cd6bc8a271fb,"Fix join filter rewrites with nested queries (#10015)

* Fix join filter rewrites with nested queries

* Fix test, inspection, coverage

* Remove clauses from group key

* Fix import order

Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2020-06-19T04:32:29Z
d644a27f1a545105a4b1a4110f3ed83d7c46a46f,"Create packed core partitions for hash/range-partitioned segments in native batch ingestion (#10025)

* Fill in the core partition set size properly for batch ingestion with
dynamic partitioning

* incomplete javadoc

* Address comments

* fix tests

* fix json serde, add tests

* checkstyle

* Set core partition set size for hash-partitioned segments properly in
batch ingestion

* test for both parallel and single-threaded task

* unused variables

* fix test

* unused imports

* add hash/range buckets

* some test adjustment and missing json serde

* centralized partition id allocation in parallel and simple tasks

* remove string partition chunk

* revive string partition chunk

* fill numCorePartitions for hadoop

* clean up hash stuffs

* resolved todos

* javadocs

* Fix tests

* add more tests

* doc

* unused imports",2020-06-19T01:40:43Z
b8a3223f2487be75363ef96dcc5e11616f493599,Remove changes from #9114 (#10050),2020-06-19T01:18:12Z
857e5204bf2e71b83da6eecb71105f4947bbd1d6,"Coordinator loadstatus API full format does not consider Broadcast rules (#10048)

* Coordinator loadstatus API full format does not consider Broadcast rules

* address comments

* fix checkstyle

* minor optimization

* address comments",2020-06-19T00:52:33Z
b5e6569d2c1b52abcf41495a01fe0dc383ab037c,"global table only if joinable (#10041)

* global table if only joinable

* oops

* fix style, add more tests

* Update sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java

* better information schema columns, distinguish broadcast from joinable

* fix javadoc

* fix mistake

Co-authored-by: Jihoon Son <jihoonson@apache.org>",2020-06-19T00:32:10Z
a4bd144ebed53e6329da49fd65db15bbe809933f,"fix docs (#9114)

Co-authored-by: tomscut <tomscut@gmail.com>",2020-06-18T16:48:47Z
2c384b61ff47f858a0adb6f8b389c84f2acc84d1,"IntelliJ inspection and checkstyle rule for ""Collection.EMPTY_* field accesses replaceable with Collections.empty*()"" (#9690)

* IntelliJ inspection and checkstyle rule for ""Collection.EMPTY_* field accesses replaceable with Collections.empty*()""

* Reverted checkstyle rule

* Added tests to pass CI

* Codestyle",2020-06-18T16:47:07Z
3527458f85f2cfcdffbfa4278a0c439cc3c100c4,"Druid Avatica - Handle escaping of search characters correctly (#10040)

Fix Avatica based metadata queries by appending ESCAPE '\' clause to the LIKE expressions",2020-06-18T03:01:31Z
7569ee3ec6e8955bb704f9b8ab2e88a344d1ed52,"All aggregators should check if column can be vectorize (#10026)

* All aggregators should use vectorization-aware column processor

* All aggregators should use vectorization-aware column processor

* fix canVectorize

* fix canVectorize

* add tests

* revert back default

* address comment

* address comments

* address comment

* address comment",2020-06-17T11:52:02Z
1a2620606d8187da7725088e9c52ce41b8a692b0,"API to verify a datasource has the latest ingested data (#9965)

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* fix checksyle

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* API to verify a datasource has the latest ingested data

* fix spelling

* address comments

* fix checkstyle

* update docs

* fix tests

* fix doc

* address comments

* fix typo

* fix spelling

* address comments

* address comments

* fix typo in docs",2020-06-17T06:48:30Z
68aa3841904cc08c2d4ab43b37994a868574fb91,"global table datasource for broadcast segments (#10020)

* global table datasource for broadcast segments

* tests

* fix

* fix test

* comments and javadocs

* review stuffs

* use generated equals and hashcode",2020-06-17T00:58:05Z
4e483a70b452e50eb11d4cdb5b099854800913e4,"ROUND and having comparators correctly handle special double values (#10014)

* ROUND and having comparators correctly handle doubles

Double.NaN, Double.POSITIVE_INFINITY and Double.NEGATIVE_INFINITY are not real
numbers. Because of this, they can not be converted to BigDecimal and instead
throw a NumberFormatException.

This change adds support for calculations that produce these numbers either
for use in the `ROUND` function or the HavingSpecMetricComparator by not
attempting to convert the number to a BigDecimal.

The bug in ROUND was first introduced in #7224 where we added the ability to
round to any decimal place. This PR changes the behavior back to using
`Math.round` if we recognize a number that can not be converted to a
BigDecimal.

* Add tests and fix spellcheck

* update error message in ExpressionsTest

* Address comments

* fix up round for infinity

* round non numeric doubles returns a double

* fix spotbugs

* Update docs/misc/math-expr.md

* Update docs/querying/sql.md",2020-06-16T23:09:46Z
9330ca971724a5235b32279045a31b42c2143879,"Remove LegacyDataSource. (#10037)

* Remove LegacyDataSource.

Its purpose was to enable deserialization of strings into TableDataSources.
But we can do this more straightforwardly with Jackson annotations.

* Slight test improvement.",2020-06-16T21:40:35Z
9468df4721c478a9c96ed2ce713c4ee79f2bb99c,make phaser of ReferenceCountingCloseableObject protected instead of private so subclasses can do stuff with it (#10035),2020-06-16T02:56:49Z
cad9eea15d88d93d14b5b312ff0661fb74d2fe7e,"Integration test docker compose readme (#10016)

* Integration Tests. Docker-compose readme part

* Readme updates. PR fixes

Co-authored-by: agritsenko <agritsenko@provectus.com>",2020-06-16T00:48:34Z
0035f39e25eac84338542de7ba038a9a505494d2,"lpad and rpad functions match postrges behavior in SQL compatible mode (#10006)

* lpad and rpad functions deal with empty pad

Return null if the pad string used by the `lpad` and `rpad` functions is
an empty string

* Fix rpad

* Match PostgreSQL behavior in SQL compliant null handling mode

* Match PostgreSQL behavior for pad -ve len

* address review comments",2020-06-15T17:47:57Z
9a10f8352bd0c8c0fd5199226a4ff3a4cf2e6d46,"Set the core partition set size properly for batch ingestion with dynamic partitioning (#10012)

* Fill in the core partition set size properly for batch ingestion with
dynamic partitioning

* incomplete javadoc

* Address comments

* fix tests

* fix json serde, add tests

* checkstyle",2020-06-13T04:39:37Z
8a7e7e773ab29f896e7df0dc6465c38d456ce708,fix balancer + broadcast segments npe (#10021),2020-06-12T20:09:22Z
fe2f65642785ca80452126716ac287455e8a1c02,"Fix broadcast rule drop and docs (#10019)

* Fix broadcast rule drop and docs

* Remove racy test check

* Don't drop non-broadcast segments on tasks, add overshadowing handling

* Don't use realtimes for overshadowing

* Fix dropping for ingestion services",2020-06-12T09:33:28Z
67669b4ad4b4dec5b22b1c6557b173c169434894,"Fix CVE-2020-13602 (#10024)

Upgrade postgres jdbc driver to latest version to address CVE, which was
fixed in 42.2.13.",2020-06-12T00:30:13Z
5d35f3e0801e186389003b97981708f78e392865,Remove colocated datasources from web console for broadcast indexed tables (#10018),2020-06-12T00:08:03Z
369ed2503e356bf0292bfbbb701e1ca62fbd2369,"Remove duplicate parameters from test (#10022)

Commit 771870ae2d312d643e6d98f3d0af8a9618af9681 removed constructor
arguments from the rules. Therefore multiple parameters of the test are
now the same and can be removed.",2020-06-11T21:15:02Z
c6d2b94d7b6d2e7d4516f5659cc3f8e3cbbc39ed,"Add instruction for code coverage checks (#9995)

* Add instruction for code coverage checks

* address comments",2020-06-11T04:17:36Z
96eb69e4757b4f6c9c31e0262007df39109d4454,ignore brokers in broker views (#10017),2020-06-10T19:29:30Z
5da78d13afb3f446a9b86575eedc0c60f049f8c4,Update password-provider.md (#9857),2020-06-10T16:32:49Z
7282e2f2f9776fc3763f510b1de81706f1740fce,"Simplify CompressedVSizeColumnarIntsSupplierTest (#10003)

The parameters generator uses CompressionStrategy.noNoneValues() instead
of CompressionStrategyTest.compressionStrategies() which wrapped each
strategy in a single element array. This improves readability of the
test.",2020-06-10T16:32:00Z
d4d00043383172bf393513fb33e95918807bb10c,"Fix failed tests in TimestampParserTest when running locally (#9997)

* fix failed tests in TimestampPaserTest due to timezone

* remove unneeded -Duser.country=US

Co-authored-by: huagnhui.bigrey <huanghui.bigrey@bytedance.com>",2020-06-10T16:19:38Z
f8b643ec720bf34acf84fda01a3d876f98e81bb9,"make joinables closeable (#9982)

* make joinables closeable

* tests and adjustments

* refactor to make join stuffs impelement ReferenceCountedObject instead of Closable, more tests

* fixes

* javadocs and stuff

* fix bugs

* more test

* fix lgtm alert

* simplify

* fixup javadoc

* review stuffs

* safeguard against exceptions

* i hate this checkstyle rule

* make IndexedTable extend Closeable",2020-06-10T03:12:36Z
1c9ca55247f7d90cf15d65e43aba0c1853d85629,"remove incorrect and unnecessary overrides from BooleanVectorValueMatcher (#9994)

* remove incorrect and unnecessary overrides from BooleanVectorValueMatcher

* add test case

* add unit tests for ... part of VectorValueMatcherColumnProcessorFactory

* Update VectorValueMatcherColumnProcessorFactoryTest.java",2020-06-10T02:32:16Z
c5d6163c76e565f21d2d829c128c4c97e49f3eb1,"add a GeneratorInputSource to fill up a cluster with generated data for testing (#9946)

* move benchmark data generator into druid-processing, add a GeneratorInputSource to fill up a cluster with data

* newlines

* make test coverage not fail maybe

* remove useless test

* Update pom.xml

* Update GeneratorInputSourceTest.java

* less passive aggressive test names",2020-06-10T02:31:04Z
17cf8ea8f2cc6a4fe8e2c6e29e3b9f066a6ccc2b,"Add Sql InputSource (#9449)

* Add Sql InputSource

* Add spelling

* Use separate DruidModule

* Change module name

* Fix docs

* Use sqltestutils for tests

* Add additional tests

* Fix inspection

* Add module test

* Fix md in docs

* Remove annotation

Co-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>",2020-06-09T19:55:20Z
2ae1d26aa87d482aa51e10a8b50a82ad53a75b6a,small fixes to configuration documentation (#9975),2020-06-09T17:31:08Z
771870ae2d312d643e6d98f3d0af8a9618af9681,"Load broadcast datasources on broker and tasks (#9971)

* Load broadcast datasources on broker and tasks

* Add javadocs

* Support HTTP segment management

* Fix indexer maxSize

* inspection fix

* Make segment cache optional on non-historicals

* Fix build

* Fix inspections, some coverage, failed tests

* More tests

* Add CliIndexer to MainTest

* Fix inspection

* Rename UnprunedDataSegment to LoadableDataSegment

* Address PR comments

* Fix",2020-06-09T03:15:59Z
7f51e44b008a0e6cf7d7d128ef3c97f8a4e12c65,fix NilVectorSelector filter optimization (#9989),2020-06-09T00:40:29Z
ee7bda5d8a7e68692cf29182bdbb5dcbe29400f4,"Fix compact partially overlapping segments (#9905)

* fix compact overlapping segments

* fix comment

* fix CI failure",2020-06-08T16:54:39Z
45b699fa4a1330a7c002fb3dabc99c05fb4fc4cd,"Add git pre-commit hook to source control (#9554)

* Add git pre-commit hook to source control

* Changed hook to pre-push and simply hook to run all checkstyle

* Clean up setup-hooks

* Add apache header

* Add apache header

* add documentation to intellij-setup.md

* retrigger tests

* update

Co-authored-by: Maytas Monsereenusorn <52679095+maytasm3@users.noreply.github.com>",2020-06-05T21:19:42Z
bcc066a27fb9dcde76558c2616189d0b2389a644,"Empty partitionDimension has less rollup compared to when explicitly specified (#9861)

* Empty partitionDimension has less rollup compared to the case when it is explicitly specified

* Adding a unit test for the empty partitionDimension scenario. Fixing another test which was failing

* Fixing CI Build Inspection Issue

* Addressing all review comments

* Updating the javadocs for the hash method in HashBasedNumberedShardSpec",2020-06-05T19:42:42Z
77dd5b06ae8fd7c81474cb03c0fc399cdf21646a,"ColumnCapabilities.hasMultipleValues refactor (#9731)

* transition ColumnCapabilities.hasMultipleValues to Capable enum, remove ColumnCapabilities.isComplete

* remove artifical, always multi-value capabilities from IncrementalIndexStorageAdapter and fix up fallout from that, fix ColumnCapabilities merge in index merger

* fix typo

* remove unused method

* review stuffs, revert IncrementalIndexStorageAdapater capabilities change, plumb lame workaround to SegmentAnalyzer

* more comment

* use volatile booleans

* fix line length

* correctly handle missing columns for vector processors

* return ColumnCapabilities.Capable for BitmapIndexSelector.hasMultipleValues, fix vector processor selection for complex

* false on non-existent",2020-06-05T06:52:37Z
e72f490be0d8066aa0f6db36e7bf3c6d64d902dc,"Integration Tests. Small fixes for CI. (#9988)

Co-authored-by: agritsenko <agritsenko@provectus.com>",2020-06-05T00:10:56Z
9738a03c833ee6e7ba421413b811c2522a01d873,"Fix groupBy with literal in subquery grouping (#9986)

* fix groupBy with literal in subquery grouping

* fix groupBy with literal in subquery grouping

* fix groupBy with literal in subquery grouping

* address comments

* update javadocs",2020-06-04T23:28:05Z
790e9482ea18d87d59eeeeab4ceec14e4b1e192d,"Fix Subquery could not be converted to groupBy query (#9959)

* Fix join

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* Fix Subquery could not be converted to groupBy query

* add tests

* address comments

* fix failing tests",2020-06-03T23:46:28Z
474f6fc99bafa2df8095c801da52f0ba52cfc0a8,"Fix shutdown reason for unknown tasks in taskQueue (#9954)

* Fix shutdown reason for unknown tasks in taskQueue

* unused imports",2020-06-03T22:40:28Z
3dfd7c30c00238d35dc9e3d25bfd136e0b5f7240,"Add REGEXP_LIKE, fix bugs in REGEXP_EXTRACT. (#9893)

* Add REGEXP_LIKE, fix empty-pattern bug in REGEXP_EXTRACT.

- Add REGEXP_LIKE function that returns a boolean, and is useful in
  WHERE clauses.
- Fix REGEXP_EXTRACT return type (should be nullable; causes incorrect
  filter elision).
- Fix REGEXP_EXTRACT behavior for empty patterns: should always match
  (previously, they threw errors).
- Improve error behavior when REGEXP_EXTRACT and REGEXP_LIKE are passed
  non-literal patterns.
- Improve documentation of REGEXP_EXTRACT.

* Changes based on PR review.

* Fix arg check.

* Important fixes!

* Add speller.

* wip

* Additional tests.

* Fix up tests.

* Add validation error tests.

* Additional tests.

* Remove useless call.",2020-06-03T21:31:37Z
0d22462e07bef0d162a81c4f1a061c83c6f733d0,"Document unsupported Join on multi-value column (#9948)

* Document Unsupported Join on multi-value column

* Document Unsupported Join on multi-value column

* address comments

* Add unit tests

* address comments

* add tests",2020-06-03T19:55:52Z
a934b2664ca930dfa04c65bd47c225b4cb8dfed1,"remove ListenableFutures and revert to using the Guava implementation (#9944)

This change removes ListenableFutures.transformAsync in favor of the
existing Guava Futures.transform implementation. Our own implementation
had a bug which did not fail the future if the applied function threw an
exception, resulting in the future never completing.

An attempt was made to fix this bug, however when running againts Guava's own
tests, our version failed another half dozen tests, so it was decided to not
continue down that path and scrap our own implementation.

Explanation for how was this bug manifested itself:

An exception thrown in BaseAppenderatorDriver.publishInBackground when
invoked via transformAsync in StreamAppenderatorDriver.publish will
cause the resulting future to never complete.

This explains why when encountering https://github.com/apache/druid/issues/9845
the task will never complete, forever waiting for the publishFuture to
register the handoff. As a result, the corresponding ""Error while
publishing segments ..."" message only gets logged once the index task
times out and is forcefully shutdown when the future is force-cancelled
by the executor.",2020-06-03T17:46:03Z
3d81564a14253515f9dc849334fa7db073eb5f58,"Fix various processing buffer leaks and simplify BlockingPool. (#9928)

* - GroupByQueryEngineV2: Fix leak of intermediate processing buffer when
  exceptions are thrown before result sequence is created.
- PooledTopNAlgorithm: Fix leak of intermediate processing buffer when
  exceptions are thrown before the PooledTopNParams object is created.
- BlockingPool: Remove unused ""take"" methods.

* Add tests to verify that buffers have been returned.",2020-06-03T01:26:18Z
309fc04d54e7f909eb38c4655f414cfcdc986f69,"Fix various Yielder leaks. (#9934)

* Fix various Yielder leaks.

- CombiningSequence leaked the input yielder from ""toYielder"" if it ran
  into an exception while accumulating the last value from the input
  yielder.
- MergeSequence leaked input yielders from ""toYielder"" if it ran into
  an exception while building the initial priority queue.
- ScanQueryRunnerFactory leaked the input yielder in its
  ""priorityQueueSortAndLimit"" strategy if it ran into an exception
  while scanning and sorting.
- YieldingSequenceBase.accumulate chomped IOExceptions thrown in
  ""accumulate"" during yielder closing.

* Add tests.

* Fix braces.",2020-06-03T01:26:06Z
3d513b0bec2d27fa3957b35453546786489a8be2,"Adjust code coverage check (#9969)

Since there is not currently a good way to have fine-grain code coverage
check exclusions, lower the coverage thresholds to make the check more
lenient for now. Also, display the code coverage report in the Travis CI
logs to make it easier to understand how to improve coverage.",2020-06-02T22:34:58Z
4ecf1900c3d41d1185bbc8b13ca0523e794a02bc,"fix nullhandling exceptions related to test ordering (#9964)

follow-up to https://github.com/apache/druid/pull/9570",2020-06-02T17:13:54Z
56a9cad5329d97318502bd45bcafdb9d3adf88ee,"Integration Tests. (#9854)

* Integration Tests.
Added docker-compose with druid-cluster configuration.
Refactored shell scripts. split code in a few files

* Integration Tests.
Added environment variable: DRUID_INTEGRATION_TEST_GROUP

* Integration Tests. Removed nit

* Integration Tests. Updated if block in docker_run_cluster.sh.

* Integration Tests. Readme. Added Docker-compose section.

* Integration Tests. removed yml files for s3, gcs, azure.
Renamed variables for skip start/stop/build docker.
Updated readme.
Rollback maven profile: int-tests-config-file

* Integration Tests. Removed docker-compose.test-env.yml file.
Added DRUID_INTEGRATION_TEST_GROUP variable to docker-compose.yml

* Integration Tests. Readme. Added details about docker-compose

* Integration Tests. cleanup shell scripts

Co-authored-by: agritsenko <agritsenko@provectus.com>",2020-06-02T16:38:53Z
c690d10a7d0de09db90a265e81ee162e23f1706e,"support customized factory.json via IndexSpec for segment persist (#9957)

* support customized factory.json via IndexSpec for segment persist

* equals verifier",2020-06-01T23:36:32Z
821c5d5a5cf7e70b501a57e2ff1901f2ec7f6404,"Prevent JOIN reducing to a JOIN with constant in the ON condition (#9941)

* Prevent Join reducing to on constant condition

* Prevent Join reducing to on constant condition

* addreess comments

* set queryContext in tests",2020-06-01T16:39:06Z
acfcfd35b1ff09b681920bc08d6fa9216f934715,"fix unsafe concurrent access in StreamAppenderatorDriver (#9943)

during segment publishing we do streaming operations on a collection not
safe for concurrent modification. To guarantee correct results we must
also guard any operations on the stream itself.

This may explain the issue seen in https://github.com/apache/druid/issues/9845",2020-05-31T16:12:25Z
c2c38f6ac2f7ef1a4cead361f543d7ee7e311c80,only close exec if it exists (#9952),2020-05-30T03:09:34Z
e03d38b6c83bd84b1752d1a51baf61b194234548,"Optimize join queries where filter matches nothing (#9931)

* Refactor JoinFilterAnalyzer

This patch attempts to make it easier to follow the join filter analysis code
with the hope of making it easier to add rewrite optimizations in the future.

To keep the patch small and easy to review, this is the first of at least 2
patches that are planned.

This patch adds a builder to the Pre-Analysis, so that it is easier to
instantiate the preAnalysis. It also moves some of the filter normalization
code out to Fitlers with associated tests.

* fix tests

* Refactor JoinFilterAnalyzer - part 2

This change introduces the following components:
 * RhsRewriteCandidates - a wrapper for a list of candidates and associated
     functions to operate on the set of candidates.
 * JoinableClauses - a wrapper for the list of JoinableClause that represent
     a join condition and the associated functions to operate on the clauses.
 * Equiconditions - a wrapper representing the equiconditions that are used
     in the join condition.

And associated test changes.

This refactoring surfaced 2 bugs:
 - Missing equals and hashcode implementation for RhsRewriteCandidate, thus
   allowing potential duplicates in the rhs rewrite candidates
 - Missing Filter#supportsRequiredColumnRewrite check in
   analyzeJoinFilterClause, which could result in UnsupportedOperationException
   being thrown by the filter

* fix compile error

* remove unused class

* Refactor JoinFilterAnalyzer - Correlations

Move the correlation related code out into it's own class so it's easier
to maintain.
Another patch should follow this one so that the query path uses the
correlation object instead of it's underlying maps.

* Optimize join queries where filter matches nothing

Fixes #9787

This PR changes the Joinable interface to return an Optional set of correlated
values for a column.
This allows the JoinFilterAnalyzer to differentiate between the case where the
column has no matching values and when the column could not find matching
values.

This PR chose not to distinguish between cases where correlated values could
not be computed because of a config that has this behavior disabled or because
of user error - like a column that could not be found. The reasoning was that
the latter is likely an error and the non filter pushdown path will surface the
error if it is.",2020-05-29T23:53:03Z
9c40bebc02dfd13e1bd58f2f45fd24424e4530a4,"Refactor JoinFilterAnalyzer - part 2 (#9929)

* Refactor JoinFilterAnalyzer

This patch attempts to make it easier to follow the join filter analysis code
with the hope of making it easier to add rewrite optimizations in the future.

To keep the patch small and easy to review, this is the first of at least 2
patches that are planned.

This patch adds a builder to the Pre-Analysis, so that it is easier to
instantiate the preAnalysis. It also moves some of the filter normalization
code out to Fitlers with associated tests.

* fix tests

* Refactor JoinFilterAnalyzer - part 2

This change introduces the following components:
 * RhsRewriteCandidates - a wrapper for a list of candidates and associated
     functions to operate on the set of candidates.
 * JoinableClauses - a wrapper for the list of JoinableClause that represent
     a join condition and the associated functions to operate on the clauses.
 * Equiconditions - a wrapper representing the equiconditions that are used
     in the join condition.

And associated test changes.

This refactoring surfaced 2 bugs:
 - Missing equals and hashcode implementation for RhsRewriteCandidate, thus
   allowing potential duplicates in the rhs rewrite candidates
 - Missing Filter#supportsRequiredColumnRewrite check in
   analyzeJoinFilterClause, which could result in UnsupportedOperationException
   being thrown by the filter

* fix compile error

* remove unused class",2020-05-29T22:03:35Z
a33705f0e3a74e30be4e247335253ca7b8d9327b,"Querying doc refresh tutorial (#9879)

* Update tutorial-query.md

* First full pass complete

* Smoothing over, a bit

* link and spell checking

* Update querying.md

* Review comments; screenshot fixes

* Making ports consistent, pending confirmation 

Switching to the Router port, to make this be consistent with the tutorial ports, but can switch back here and there if it should be 8082 instead.

* Resizing screenshot

* Update querying.md

* Review feedback incorporated.",2020-05-29T21:32:21Z
ff551ae4127265a70a6912cccc9b9f73cda8abf1,Modify information schema doc to specify correct value of TABLE_CATALOG (#9950),2020-05-29T17:10:28Z
faef31a0afd599c674790a2ab8d6835c92eb03f7,"Refactor JoinFilterAnalyzer (#9921)

* Refactor JoinFilterAnalyzer

This patch attempts to make it easier to follow the join filter analysis code
with the hope of making it easier to add rewrite optimizations in the future.

To keep the patch small and easy to review, this is the first of at least 2
patches that are planned.

This patch adds a builder to the Pre-Analysis, so that it is easier to
instantiate the preAnalysis. It also moves some of the filter normalization
code out to Fitlers with associated tests.

* fix tests",2020-05-29T05:32:09Z
880a7943b38d8119d60b00f821dce2ba1c49b8ae,Fix type restriction for Pattern hashcode inspection (#9947),2020-05-29T05:26:32Z
cbd587dbd64ea7e5b1a316d19752786f01e50dec,"Add parameterized Calcite tests for join queries (#9923)

* Add parameterized Calcite tests for join queries

* new tests

* review comments",2020-05-29T02:10:26Z
65280a6953a285142008d86a729dabb248dd5c29,"update kafka client version to 2.5.0 (#9902)

- remove dependency on deprecated internal Kafka classes
- keep LZ4 version in line with the version shipped with Kafka",2020-05-27T20:20:32Z
b5dfa5322b2611eb7626dbe8c4023f4946ea46f9,"Make it easier for devs to add CalciteQueryTests (#9922)

* Add ingestion specs for CalciteQueryTests

This PR introduces ingestion specs that can be used for local testing
so that CalciteQueryTests can be built on a druid cluster.

* Add README

* Update sql/src/test/resources/calcite/tests/README.md",2020-05-27T20:03:53Z
b8c2266aa0d8de2802766bf38557e18054099d20,"Disable function code coverage check (#9933)

As observed in https://github.com/apache/druid/pull/9905 and
https://github.com/apache/druid/pull/9915, the function code coverage
check flags false positive issues, so it should be disabled for now.",2020-05-27T03:13:08Z
6130a834c26c9856ec6b41842e2ede4074b81c79,"Update doc on tmp dir (java.io.tmpdir) best practice (#9910)

* Update doc on tmp dir best practice

* remove local recommendation",2020-05-26T16:37:01Z
fd6fffc4b8faf2f026ef4649d8f5c52751e4c52e,"Suppress CVEs for openstack-keystone (#9903)

CVE-2020-12689, CVE-2020-12691, and CVE-2020-12690 can be ignored for
openstack-keystone as they are for the python SDK and druid uses the
java SDK.",2020-05-22T17:32:17Z
132a1c9fe770209792973f52b8aee6f36f06aa3d,"Re-order and document format detection in web console (#9887)

Motivation for this change is to not inadvertently identify binary
formats that contain uncompressed string data as TSV or CSV.

Moving detection of magic byte headers before heuristics should be more
robust in general.",2020-05-21T23:29:39Z
63baa29ad157f53639d3461f43875783038bb92b,"Fix web console query view crashing on simple query (#9897)

* only parse full queries

* upgraded sql parser",2020-05-21T19:57:07Z
b91d50044e16ca025e71cc87cf8e1bfc714271ca,"add some details to the build doc (#9885)

* update initial build command

* add some details for building

* fix spelling check errors

* fix spelling check warnings

Signed-off-by: frank chen <frank.chen021@outlook.com>",2020-05-21T19:35:54Z
ca5e66dfcbc39d546e299a12ce09ba5a04b40bea,Fixed the Copyright year of Druid (#9859),2020-05-21T04:13:34Z
9db29b93bff7efe83ade06ee75b1968f0fd6ab88,Fix Hadoop IT Legacy test query json was not parameterized (#9901),2020-05-21T04:09:17Z
f470bcd11fbf1be98e364a7acbb20757d91e6e0b,"Fix deleting a data node tier causes load rules to display incorrectly (#9891)

* Fix Deleting a data node tier causes load rules to malfunction & display incorrectly

* add tests

* fix style",2020-05-20T23:49:28Z
2050f2b00a4e3c699618b059efd3d65e5be95bc0,fix docs error: google to azure and hdfs to http (#9881),2020-05-20T17:17:39Z
427239f4518cfd4642389e55e20f0cb19813e0d9,"Enforce code coverage (#9863)

* Enforce code coverage

Add an automated way of checking if new code has adequate unit tests,
since merging code coverage reports and check coverage thresholds via
coveralls or codecov is unreliable.

The following minimum unit test code coverage is now enforced:
- 80% functions
- 65% branch
- 65% line

Branch and line coverage thresholds are slightly lower for now as they
are harder to achieve.

After the code coverage check looks reliable, the thresholds can be
increased later if needed.

* Add comments",2020-05-20T16:31:37Z
5b4b5d77a81817baf4359574d61e2dd2acabddba,"Fails creation of TaskResource if availabilityGroup is null (#9892)

* Fails creation of TaskResource if availabilityGroup is null

* add check for requiredCapacity",2020-05-20T05:19:22Z
82e5b0573efffd6f87ce4aead6a05b0c1d7381c7,"Number based columns representing time in custom format cannot be used as timestamp column in Druid. (#9877)

* Number based columns representing time in custom format cannot be used as timestamp column in Druid.

Prior to this fix, if an integer column in parquet is storing dateint in format yyyyMMdd, it cannot be used as timestamp column in Druid as the timestamp parser interprets it as a number storing UTC time instead of treating it as a number representing time in yyyyMMdd format. Data formats like TSV or CSV don't suffer from this problem as the timestamp is passed in an as string which the timestamp parser is able to parse correctly.",2020-05-18T18:17:28Z
2e9548d93d5a27e824cc93293e1de55af63d158f,"refactor SeekableStreamSupervisor usage of RecordSupplier (#9819)

* refactor SeekableStreamSupervisor usage of RecordSupplier to reduce contention between background threads and main thread, refactor KinesisRecordSupplier, refactor Kinesis lag metric collection and emitting

* fix style and test

* cleanup, refactor, javadocs, test

* fixes

* keep collecting current offsets and lag if unhealthy in background reporting thread

* review stuffs

* add comment",2020-05-16T21:09:39Z
522df300c20d10c7c82862105f0edc471abafe35,"Datasketches 1 3 0 (#9880)

* use the latest datasketches release

* new sketch debug print

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2020-05-16T21:09:23Z
793f386d6a0c359e891a313cdbbc70cb25b36d51,"Add support for Avro OCF using InputFormat (#9671)

* Add AvroOCFInputFormat

* Support supplying a reader schema in AvroOCFInputFormat

* Add docs for Avro OCF input format

* Address review comments

* Address second round of review",2020-05-16T21:09:12Z
46beaa06408f814936ce5171bbec25887d7aec94,"Fix potential resource leak in ParquetReader (#9852)

* Fix potential resource leak in ParquetReader

* add test

* never thrown exception

* catch potential exceptions",2020-05-16T16:57:12Z
0a8bf83bc589fb899a7d96e426682708c636f0eb,"Bad plan for table-lookup-lookup join with filter on first lookup and outer limit (#9773)

* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit

* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit

* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit

* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit

* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit

* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit

* address comments

* address comments

* fix checkstyle

* address comments

* address comments",2020-05-14T23:56:40Z
80b212fe43af1f6d3272f84de506fd124f33fbd4,"druid.storage.maxListingLength should default to 1000 for s3 (#9858)

* druid.storage.maxListingLength should default to 1000 for s3

* * Address review comments

* * Address review comments

* * Address comments",2020-05-14T14:00:51Z
41cf8269289a9b05d81961a9efc8ed6f6c3b39f7,Console E2E test docs (#9864),2020-05-13T23:41:04Z
d38d77cb3a9ad9d6efd4b38c33c44d57290933fb,Add back FieldMayBeFinal inspection (#9865),2020-05-13T23:32:35Z
b0167295d7c621bfa9722b7203bc7ca08fc76495,"Fail incorrectly constructed join queries (#9830)

* Fail incorrectly constructed join queries

* wip annotation for equals implementations

* Add equals tests

* fix tests

* Actually fix the tests

* Address review comments

* prohibit Pattern.hashCode()",2020-05-13T21:23:04Z
6bc1d1b33f7483a7ca137c97c84d701594f9e154,fix license registry for com.nimbusds lang-tag (#9860),2020-05-13T16:18:18Z
c06d3f14b148d7b68ab4a9c45bbb082ba33618aa,Add javadoc for stream ingestion integration tests (#9795),2020-05-12T15:56:43Z
6f25a84d2ef6963484677d8dcf31e70715cfcf94,Add TaskCountStatsMonitor to config docs (#9447),2020-05-11T21:08:46Z
16d293d6e0d81963af3b3d468efd658317d91052,"Directly rewrite filters on RHS join columns into LHS equivalents (#9818)

* Directly rewrite filters on RHS join columns into LHS equivalents

* PR comments

* Fix inspection

* Revert unnecessary ExprMacroTable change

* Fix build after merge

* Address PR comments",2020-05-09T06:45:35Z
28be107a1c18ef1fd9fd268c8b04e232efb63695,"add flag to flattenSpec to keep null columns (#9814)

* add flag to flattenSpec to keep null columns

* remove changes to inputFormat interface

* add comment

* change comment message

* update web console e2e test

* move keepNullColmns to JSONParseSpec

* fix merge conflicts

* fix tests

* set keepNullColumns to false by default

* fix lgtm

* change Boolean to boolean, add keepNullColumns to hash, add tests for keepKeepNullColumns false + true with no nuulul columns

* Add equals verifier tests",2020-05-09T04:53:39Z
339876b69d5aa9aed67e6e67c9f13f9cbb32c217,"fill out missing test coverage for druid-stats, druid-momentsketch, druid-tdigestsketch postaggs (#9740)

* postagg test coverage for druid-stats, druid-momentsketch, druid-tdigestsketch and fixes

* style fixes

* fix comparator for TDigestQuantilePostAggregator",2020-05-07T20:48:33Z
267a6cc175736dccb16e8e43abd2772c0f44f611,low hanging fruit - presize hash map for DruidSegmentReader (#9836),2020-05-07T19:39:14Z
2c0746cfab89db05dff90bc47a6a8041d98a6182,increase druid-histogram postagg test coverage (#9732),2020-05-07T07:10:29Z
accd710115efea87120d58f01b08342065d6ae5f,"Add equivalent test coverage for all RHS join impls (#9831)

* Add equivalent test coverage for all RHS join impls

* address comments",2020-05-06T23:10:41Z
6674d721bcc93ff959ae6d63c3eb71255179363d,"Avoid sorting values in InDimFilter if possible (#9800)

* Avoid sorting values in InDimFilter if possible

* tests

* more tests

* fix and and or filters

* fix build

* false and true vector matchers

* fix vector matchers

* checkstyle

* in filter null handling

* remove wrong test

* address comments

* remove unnecessary null check

* redundant separator

* address comments

* typo

* tests",2020-05-06T22:26:36Z
ce03f31a73133cd9aa5062b13dcc6c74af0483e0,"Clarifying workerThreads and a few other nits (#9804)

* Update data-formats.md

Per Suneet, ""Since you're editing this file can you also fix the json on line 177 please - it's missing a comma after the }""

* Light text cleanup

* Removing discussion of sample data, since it's repeated in the data loading tutorial, and not immediately relevant here.

* Clarifying accepted values for URI lookup

* Update index.md

* original quickstart full first pass

* original quickstart full first pass

* first pass all the way through

* straggler

* image touchups and finished old tutorial

* a bit of finishing up

* druid-caffeine-cache ext previously removed

* Sample MaxDirectMemorySize value unrealistic

* Review comments

* fixing links

* spell checking gymnastics

* workerThreads desc slightly expanded

* typo

* Typo

* Reversing Kafka config order

* Changing order of configs for Kinesis

* Trying this again: ioConfig then tuningConfig",2020-05-06T16:05:18Z
1e857c530300d2de16d8b62fea73031dffed88dc,Ignore druid-processing benchmarks in tests (#9821),2020-05-06T15:59:48Z
964a1fc9df69520e54e10edd33e0404ed6e8330d,"Remove ParseSpec.toInputFormat() (#9815)

* Remove toInputFormat() from ParseSpec

* fix test",2020-05-05T18:17:57Z
c6caae9a24ed0363380d2a6b1b12f5f8af9bd425,"Fix filtering on boolean values in transformation (#9812)

* Fix filter on boolean value in Transform

* assert

* more descriptive test

* remove assert

* add assert for cached string; disable tests

* typo",2020-05-05T01:47:10Z
844d62673888899a4b7be8b50929adcf057e7808,"added number of bins parameter (#9436)

* added number of bins parameter

* addressed review points

* test equals

Co-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>",2020-05-04T23:53:09Z
85dfbb64cb9233d5477e3981a57047eeb9a76bd2,Update documention for metricCompression (#9811),2020-05-03T19:56:48Z
9341ea828aaa1ce87dcb28ec05ba391f508fde8d,Fixed flaky BlockingPoolTest.testConcurrentTakeBatch() (#9692),2020-05-03T19:54:27Z
ee9a721accfec9d5900c6169700f1f861110756f,"fix npe in IncrementalIndexReadBenchmark (#9754)

Co-authored-by: 黄辉 <huanghui.bigrey@bytedance.com>",2020-05-03T19:52:50Z
9ab49b34dbea0795dc05dbb49586eb36d8164ad8,Update notice; fix version of druid-query-toolkit (#9799),2020-05-03T03:00:43Z
9a293d554df3d267ffeee71edc79f3cc5b1fa875,remove UnionMergeRule rules from SQL planner (#9797),2020-05-01T19:50:11Z
61295bd00262d10a57f38a4c18add412dc85ceb5,"More Hadoop integration tests (#9714)

* More Hadoop integration tests

* Add missing s3 instructions

* Address PR comments

* Address PR comments

* PR comments

* Fix typo",2020-04-30T21:33:01Z
c61365c1e07850575820c0d57aea9edc322f2b48,"Druid Quickstart refactor and update (#9766)

* Update data-formats.md

Per Suneet, ""Since you're editing this file can you also fix the json on line 177 please - it's missing a comma after the }""

* Light text cleanup

* Removing discussion of sample data, since it's repeated in the data loading tutorial, and not immediately relevant here.

* Update index.md

* original quickstart full first pass

* original quickstart full first pass

* first pass all the way through

* straggler

* image touchups and finished old tutorial

* a bit of finishing up

* Review comments

* fixing links

* spell checking gymnastics",2020-04-30T19:07:28Z
39722bd0646464ca67d1a0bf6966c0b7e4aedaf9,"Integration tests for stream ingestion with various data formats (#9783)

* Integration tests for stream ingestion with various data formats

* fix npe

* better logging; fix tsv

* fix tsv

* exclude kinesis from travis

* some readme",2020-04-29T20:18:01Z
7510e6e722fa3829d809e7151b870ebcf947194c,"Fix potential NPEs in joins (#9760)

* Fix potential NPEs in joins

intelliJ reported issues with potential NPEs. This was first hit in testing
with a filter being pushed down to the left hand table when joining against
an indexed table.

* More null check cleanup

* Optimize filter value rewrite for IndexedTable

* Add unit tests for LookupJoinable

* Add tests for IndexedTableJoinable

* Add non null assert for dimension selector

* Supress null warning in LookupJoinMatcher

* remove some null checks on hot path",2020-04-29T18:03:13Z
0642f778fa8ac6df5454112791d56aad1d8a30b4,changed Preview to Apply (#9757),2020-04-29T16:53:25Z
6bc64b731fdb6c51cb91cffc4170002c199ba591,"Improve ""waiting for tasks complete"" logic in integration tests (#9759)

* improve waiting for tasks complete logic in integration tests

* improve waiting for tasks complete logic in integration tests

* fix forbidden check",2020-04-29T15:53:45Z
a107ee3ed2c1106fd6e6a9195c3519c86fff0de3,"Fix problem when running single integration test using -Dit.test= (#9778)

* fix running single it

* fix checksyle",2020-04-29T15:53:25Z
b279e04a314c8fc289fbb5f01ba7d0961158fb0d,table fix (#9769),2020-04-28T18:23:24Z
e7e41e3a369c236b444dc44338c443c2e46904f1,"Adding support for autoscaling in GCE (#8987)

* Adding support for autoscaling in GCE

* adding extra google deps also in gce pom

* fix link in doc

* remove unused deps

* adding terms to spelling file

* version in pom 0.17.0-incubating-SNAPSHOT --> 0.18.0-SNAPSHOT

* GCEXyz -> GceXyz in naming for consistency

* add preconditions

* add VisibleForTesting annotation

* typos in comments

* use StringUtils.format instead of String.format

* use custom exception instead of exit

* factorize interval time between retries

* making literal value a constant

* iter all network interfaces

* use provided on google (non api) deps

* adding missing dep

* removing unneded this and use Objects methods instead o 3-way if in hash and comparison

* adding import

* adding retries around getRunningInstances and adding limit for operation end waiting

* refactor GceEnvironmentConfig.hashCode

* 0.18.0-SNAPSHOT -> 0.19.0-SNAPSHOT

* removing unused config

* adding tests to hash and equals

* adding nullable to waitForOperationEnd

* adding testTerminate

* adding unit tests for createComputeService

* increasing retries in unrelated integration-test to prevent sporadic failure (hopefully)

* reverting queryResponseTemplate change

* adding comment for Compute.Builder.build() returning null",2020-04-28T10:13:39Z
8b78eebdbdab87cd663f3ddf5c5fb7f6e9bcdc34,"Test reading from empty kafka/kinesis partitions (#9729)

* add test for stream sequence number returns null

* fix checkstyle

* add index test for when stream returns null

* retrigger test",2020-04-27T17:23:56Z
fe000a9e4bf1d2681760f72e9c593bd2aa5a1416,"Adjust string comparators used for ingestion (#9742)

* Adjust string comparators used for ingestion

* Small tweak

* Fix inspection, more javadocs

* Address PR comment

* Add rollup comment

* Add ordering test

* Fix IncrementaIndexRowCompTest",2020-04-25T20:47:07Z
7711f776a033806acf307f82181e5c3926d2bb43,"fix issue where CloseableIterator.flatMap does not close inner CloseableIterator (#9761)

* fix issue where CloseableIterator.flatMap does not close inner CloseableIterator

* more test

* style

* clarify test",2020-04-24T20:52:50Z
fc5383cd00615712cd5ca3773aa3dd7eccf91216,"revert datasketches-java version to 1.1.0-incubating until new version is released (#9751)

* revert datasketches-java version to 1.1.0-incubating until fix is in place

* fix tests

* checkstyle",2020-04-24T19:52:12Z
7fa72fbf15f627d25e860eb249922bea9331d623,"Initialize SettableByteEntityReader only when inputFormat is not null (#9734)

* Lazy initialization of SettableByteEntityReader to avoid NPE

* toInputFormat for tsv

* address comments

* common code",2020-04-24T17:22:51Z
c5bfe3601135193de8527126dc6a1f7d3ffa5d5b,"Optimize FileWriteOutBytes to avoid high system cpu usage (#9722)

* optimize FileWriteOutBytes to avoid high sys cpu

* optimize FileWriteOutBytes to avoid high sys cpu -- remove IOException

* optimize FileWriteOutBytes to avoid high sys cpu -- remove IOException in writeOutBytes.size

* Revert ""optimize FileWriteOutBytes to avoid high sys cpu -- remove IOException in writeOutBytes.size""

This reverts commit 965f7421

* Revert ""optimize FileWriteOutBytes to avoid high sys cpu -- remove IOException""

This reverts commit 149e08c0

* optimize FileWriteOutBytes to avoid high sys cpu -- avoid IOEception never thrown check

* Fix size counting to handle IOE in FileWriteOutBytes + tests

* remove unused throws IOException in WriteOutBytes.size()

* Remove redundant throws IOExcpetion clauses

* Parameterize IndexMergeBenchmark

Co-authored-by: huanghui.bigrey <huanghui.bigrey@bytedance.com>
Co-authored-by: Suneet Saldanha <suneet.saldanha@imply.io>",2020-04-24T03:18:42Z
4087a015e88d12288957b010ffc5a5412d4d1b70,"Datasource doc structure adjustments. (#9716)

- Reorder both the datasource and query-execution page orderings to
table, lookup, union, inline, query, join. (Roughly increasing order
of conceptual ""fanciness"".)
- Add more crosslinks from datasource page to query-execution page:
one per datasource type.",2020-04-23T23:04:59Z
16f5ae440510951b247920d41833da98804897d0,"Add integration tests for kafka ingestion (#9724)

* add kafka admin and kafka writer

* refactor kinesis IT

* fix typo refactor

* parallel

* parallel

* parallel

* parallel works now

* add kafka it

* add doc to readme

* fix tests

* fix failing test

* test

* test

* test

* test

* address comments

* addressed comments",2020-04-22T17:43:34Z
479c290fb93d51a1602830dd214fb6370bf717e2,Add QueryResource to log4j2 template. (#9735),2020-04-22T16:18:45Z
cff39892bade491a8e3c0a5e586027340b83facb,"Fixes intermittent failure in ITAutoCompactionTest (#9739)

* fix intermittent failure in ITAutoCompactionTest

* fix typo

* update javadoc",2020-04-22T03:56:17Z
b146f8a2a746f4b35ca102373edcd73638caf670,"Align library version  (#9636)

* align JUnitParams version 1.1.1,1.0.4 to 1.1.1

* aligin junit version 4.8.1,4.12 to 4.12

* exclude explicitly specified version",2020-04-22T03:19:38Z
8abcbf671dceedb945d04b113dca2f3c5a52055a,Fix numbered list formatting in markdown. (#9664),2020-04-22T03:18:12Z
68cc0b2e1cc0a844351b2d529447e2e03dc5cd16,"fixes for inline subqueries when multi-value dimension is present (#9698)

* fixes for inline subqueries when multi-value dimension is present

* fix test

* allow missing capabilities for vectorized group by queries to be treated as single dims since it means that column doesnt exist

* add comment",2020-04-22T01:44:26Z
28f56978ab1e6814877001881e4b4cf5268ea749,web-console clean coverage report on build clean (#9718),2020-04-22T00:02:05Z
b9ad250c009d7b689dcabf90c855e0d1955c5e3e,"Fix misuse of Integer.SIZE in FileWriteOutBytes.writeInt (#9723)

* change Integer.SIZE to Integer.BYTES in FileWriteOutBytes#writeInt

* Add ASF header

Co-authored-by: jenson <junstan@paypal.com>",2020-04-19T10:16:53Z
e677c62484bf02379ff8cb7855de1e3e43a4b4b1,"document useFilterCNF query context parameter (#9647)

* document useFilterCNF query context parameter

* move context key to QueryContexts

* Update .spelling",2020-04-17T05:12:20Z
b7fdb294237eccc39149da3fd7751ddd31e2fc2d,"add joins to column tree menu (#9705)

* add joins to column tree menu

* fix capitalization

* add keyword, keep columns if replaced

* actually fix capitalization

* add keywords",2020-04-17T00:51:59Z
b89ad49396387bfb931ea936a65986700ca1ff9e,"disable group by config applyLimitPushDownToSegment by default (#9711)

* disable group by config applyLimitPushDownToSegment by default

* document",2020-04-16T10:03:35Z
42590ae64b4293ebc5a2c0cfbb4c03630d1e5c25,"Refresh query docs. (#9704)

* Refresh query docs.

Larger changes:

- New doc: querying/datasource.md describes the various kinds of
datasources you can use, and has examples for both SQL and native.
- New doc: querying/query-execution.md describes how native queries
are executed at a high level. It doesn't go into the details of specific
query engines or how queries run at a per-segment level. But I think it
would be good to add or link that content here in the future.
- Refreshed doc: querying/sql.md updated to refer to joins, reformatted
a bit, added a new ""Query translation"" section that explains how
queries are translated from SQL to native, and removed configuration
details (moved to configuration/index.md).
- Refreshed doc: querying/joins.md updated to refer to join datasources.

Smaller changes:

- Add helpful banners to the top of query documentation pages telling
people whether a given page describes SQL, native, or both.
- Add SQL metrics to operations/metrics.md.
- Add some color and cross-links in various places.
- Add native query component docs to the sidebar, and renamed them so
they look nicer.
- Remove Select query from the sidebar.
- Fix Broker SQL configs in configuration/index.md. Remove them from
querying/sql.md.
- Combined querying/searchquery.md and querying/searchqueryspec.md.

* Updates.

* Fix numbering.

* Fix glitches.

* Add new words to spellcheck file.

* Assorted changes.

* Further adjustments.

* Add missing punctuation.",2020-04-15T23:12:20Z
b082262a2a244aee5108a09600462ca582618eef,druid-pac4j:add custom SSL handling to com.nimbusds.oauth2.sdk.http.HTTPRequest objects (#9695),2020-04-15T22:59:24Z
8328d91b30e91d0bb12eb3b7efb2a3c57df81824,"Add missing integration tests for the compaction by the coordinator (#9644)

* Add API to trigger a compaction by the coordinator for integration tests

* Add missing integration tests for the compaction by the coordinator

* address comments",2020-04-15T21:27:33Z
b8f7128b2d8f340d40ddabff7fea3282e82fa606,"Revert ""remove ServerDiscoverySelector from DruidLeaderClient (#9481)"" (#9702)

* Revert ""remove ServerDiscoverySelector from DruidLeaderClient (#9481)""

This reverts commit 072bbe210f162228e85391b464f114da448df24a.

* fix build",2020-04-15T03:42:56Z
cda9f41e69ebc0513782805fca9ead378c1910ab,"s/S3/GCS/g (#9700)

fix typo [ at least I hope this was a typo… ]",2020-04-15T01:39:54Z
2262e333164c7404a4807fd1ed2c563817bf66e1,"Fix flaky web console E2E test (#9685)

web-console/e2e-tests/tutorial-batch.spec.ts would occasionally timeout
between the transition from the data loader ""configure schema"" and
""partition"" steps due to missing waits when toggling the rollup setting.

Also, fix shellcheck warnings for script/druid.",2020-04-14T22:27:16Z
d930f04e6ae598f1461560c8a1fff55c6d740372,"Test file format extensions for inputSource (orc, parquet) (#9632)

* Test file format extensions for inputSource (orc, parquet)

* Test file format extensions for inputSource (orc, parquet)

* fix path

* resolve merge conflict

* fix typo",2020-04-13T20:03:56Z
6a52bdc6058e045270431c7e23f0c07f8a4b98c9,Skip license check for dependency reduced pom files (#9687),2020-04-12T01:11:53Z
e6dd6a41197e8f3417571de557550ff3f33a0f2f,"Skip node dev dependency vulnerability scan (#9684)

Since they are not production dependencies, security vulnerabilities in
the dev dependencies can be ignored.",2020-04-11T21:24:25Z
cbbfd63bedca115fff046b5c55a96c03233a2731,Add 0.18.0 to .backportrc.json to facilitate backport. (#9661),2020-04-11T20:49:04Z
0ff926b1a1367be88fb6f5f4baaa74ca849bd8bf,"fix issue with group by limit pushdown for extractionFn, expressions, joins, etc (#9662)

* fix issue with group by limit pushdown for extractionFn, expressions, joins, etc

* remove unused

* fix test

* revert unintended change

* more tests

* consider capabilities for StringGroupByColumnSelectorStrategy

* fix test

* fix and more test

* revert because im scared",2020-04-11T08:18:11Z
1b60148ec617fae881cc517e10140f1b31d34e6a,Missing license changes for sources in licenses.yaml (#9678),2020-04-11T06:06:33Z
5249155284fcdcd3cbcb4115ee267f23bc43c2e6,"Fix off-by-one in IndexedTableJoinMatcher.getCardinality. (#9674)

* Fix off-by-one in IndexedTableJoinMatcher.getCardinality.

It would report a cardinality that is one lower than the actual cardinality.
The missing value is the phantom null that can be generated by outer joins.

* Fix tests.",2020-04-11T01:11:05Z
ca369e57683cdb907d2bf2fcd32c39fac48a94e6,"druid-pac4j: add ability to use custom ssl trust store while talking to auth  server (#9637)

* druid-pac4j: add ability for custom ssl trust store for talking to auth
server

* fix nimbusds DefaultResourceRetriever name in comment",2020-04-11T01:01:59Z
332ca196217da4c312775c06ac906a2f8e865c26,"Fix potential integer overflow issues (#9609)

ApproximateHistogram - seems unlikely
SegmentAnalyzer - unclear if this is an actual issue
GenericIndexedWriter - unclear if this is an actual issue
IncrementalIndexRow and OnheapIncrementalIndex are non-issues becaus it's very
unlikely for the number of dims to be large enough to hit the overflow
condition",2020-04-10T18:47:08Z
22d3eed80c20a2cdea75a4c875b47cec8d2e659d,"Do not use external input in format strings (#9665)

https://lgtm.com/rules/7900080/",2020-04-10T17:46:04Z
bd1cff24a21e2c14ce55955eb0135363e753b851,"Remove no-op assert statement in ClientQuerySegmentWalker (#9607)

* Remove no-op assert statement

The assert statement in ClientQuerySegmentWalker will always be true because
of the preceeding while loop which has the same condition.
This change removes dead code to fix an error reported by LGTM

* Suppress lgtm

* cleanup whitespace",2020-04-10T17:41:29Z
642fe838979fd3bc0890f53ef31737a0ed4354c1,"Indexing Service validates externally received taskId (#9666)

Addresses issues flagged by https://lgtm.com/rules/5970070/",2020-04-10T17:36:26Z
1ced3b33fb1642ee71e542940e4e2a4840e7a48c,"IntelliJ inspections cleanup (#9339)

* IntelliJ inspections cleanup

* Standard Charset object can be used
* Redundant Collection.addAll() call
* String literal concatenation missing whitespace
* Statement with empty body
* Redundant Collection operation
* StringBuilder can be replaced with String
* Type parameter hides visible type

* fix warnings in test code

* more test fixes

* remove string concatenation inspection error

* fix extra curly brace

* cleanup AzureTestUtils

* fix charsets for RangerAdminClient

* review comments",2020-04-10T17:04:40Z
e157fb089a8f1863b49ea14841d7653582a60117,"Fix wrong cardinality computation in BufferArrayGrouper (#9655)

* Fix wrong cardinality computation in BufferArrayGrouper

* fix javadoc",2020-04-10T16:05:38Z
8ccc0b241a38838e2e4031050f08d8b82b9c8fce,"Fix some flaws of KafkaEmitter (#9573)

* fix flaws of KafkaEmitter

* fix flaws of KafkaEmitter

* fix flaws of KafkaEmitter

* Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java

Co-Authored-By: Himanshu <g.himanshu@gmail.com>

* Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java

Co-Authored-By: Himanshu <g.himanshu@gmail.com>

Co-authored-by: Himanshu <g.himanshu@gmail.com>",2020-04-10T06:31:32Z
65de636893a4f389eb33dba81e951e5a5aefdfe4,"Fix potential integer overflow in BufferArrayGrouper (#9605)

This change fixes a potential integer overflow in BufferArrayGrouper that
was flagged by LGTM. It also adds a check that the vectorized arrays are
initialized before aggregateVector is called.

The changes in HashTableUtils should not have any effect since the numbers
being multiplied are small, but the change will remove the warnings from
being flagged in LGTM.",2020-04-10T00:46:15Z
9888268000d0b983e19f9888af9d576a49d7e5f5,"Suppress LGTM warnings about stack trace exposure (#9631)

Since Druid is an open source project, these warnings are not concerning
as the information it may potentially leak is already available in the open.",2020-04-10T00:31:03Z
75c543b50f40d7b6739ff0d6e10a81315be29736,"SQL: More straightforward handling of join planning. (#9648)

* SQL: More straightforward handling of join planning.

Two changes that simplify how joins are planned:

1) Stop using JoinProjectTransposeRule as a way of guiding subquery
removal. Instead, add logic to DruidJoinRule that identifies removable
subqueries and removes them at the point of creating a DruidJoinQueryRel.
This approach reduces the size of the planning space and allows the
planner to complete quickly.

2) Remove rules that reorder joins. Not because of an impact on the
planning time (it seems minimal), but because the decisions that the
planner was making in the new tests were sometimes worse than the
user-provided order. I think we'll need to go with the user-provided
order for now, and revisit reordering when we can add more smarts to
the cost estimator.

A third change updates numeric ExprEval classes to store their
value as a boxed type that corresponds to what it is supposed to be.
This is useful because it affects the behavior of ""asString"", and
is included in this patch because it is needed for the new test
""testInnerJoinTwoLookupsToTableUsingNumericColumnInReverse"". This
test relies on CAST('6', 'DOUBLE') stringifying to ""6.0"" like an
actual double would.

Fixes #9646.

* Fix comments.

* Fix tests.",2020-04-09T23:21:43Z
eb45981b606a4f95f35745ccb8955672b2e70d90,Upgrade netty 4 to fix CVE-2020-11612 (#9651),2020-04-09T20:26:14Z
84c1c2505d30f3efbfbcede7557ad4dd90f19cff,"Web console basic end-to-end-test (#9595)

Load data and query (i.e., automate
https://druid.apache.org/docs/latest/tutorials/tutorial-batch.html) to
have some basic checks ensuring the web console is wired up to druid
correctly.

The new end-to-end tests (tutorial-batch.spec.ts) are added to
`web-console/e2e-tests`. Within that directory:
- `components` represent the various tabs of the web console. Currently,
  abstractions for `load data`, `ingestion`, `datasources`, and `query`
  are implemented.
- `components/load-data/data-connector` contains abstractions for the
  different data source options available to the data loader's `Connect`
  step. Currently, only the `Local file` data source connector is
  implemented.
- `components/load-data/config` contains abstractions for the different
  configuration options available for each step of the data loader flow.
  Currently, the `Configure Schema`, `Partition`, and `Publish` steps
  have initial implementation of their configuration options.
- `util` contains various helper methods for the tests and does not
  contain abstractions of the web console.

Changes to add the new tests to CI:
- `.travis.yml`: New ""web console end-to-end tests"" job
- `web-console/jest.*.js`: Refactor jest configurations to have
  different flavors for unit tests and for end-to-end tests. In
  particular, the latter adds a jest setup configuration to wait for the
  web console to be ready (`web-console/e2e-tests/util/setup.ts`).
- `web-console/package.json`: Refactor run scripts to add new script for
  running end-to-end tests.
- `web-console/script/druid`: Utility scripts for building, starting,
  and stopping druid.

Other changes:
- `pom.xml`: Refactor various settings disable java static checks and to
  disable java tests into two new maven profiles. Since the same
  settings are used in several places (e.g., .travis.yml, Dockerfiles,
  etc.), having them in maven profiles makes it more maintainable.
- `web-console/src/console-application.tsx`: Fix typo (""the the"").",2020-04-09T19:38:09Z
ab5ac7f890f88d6a07b18e78a44f88b52ddb8b9c,"Document possible vulnerabilities for the druid-ranger-security (#9649)

* Document possible vulnerabilities for the druid-ranger-security

In certain configurations the ranger plugin can expose vulnerabilities due
to some of its dependencies having CVEs.

* Spelling checker is a bit tight",2020-04-09T17:43:11Z
a6790ff22a9d883d789f3b5de0da02b9d8d19b69,"More optimize CNF conversion of filters (#9634)

* More optimize CNF conversion of filters

* update license

* fix build

* checkstyle

* remove unnecessary code

* split helper

* license

* checkstyle

* add comments on cnf conversion",2020-04-09T04:31:17Z
08851c0198711025ecced3b7b47942d5247c94df,"Preserve the null values for numeric type dimensions post-compaction. (#9622)

* Add selector null check to preserve null values as-is.

* Fix typo.

* add wrapping dimension selector test.

* Address review comments.

* nit: replace exception type.

* uh, float is indeed NOT a special case.",2020-04-09T01:56:06Z
6f3d403491e83bcd8c8839dea745f3f5f5486db8,"Use auto-form for add an edit lookups (#9587)

* use auto form

* jest -u

* fix unreachable statment

* complete the owl

* jest -u

* remove changes to query-view

* fix permissions

* add test, fix info

* add cool highlights

* fix formatting

* fix capitalization

* add optional placeholder

* add space",2020-04-08T23:34:59Z
2b2b9efcd7918007b50340c8987821ebb06a6500,add new text to lookup action dialog (#9643),2020-04-08T18:30:47Z
7bf2dfa3b1a1bb324cc6cb802964ddb13d188d2d,fix flaky jetty test (#9633),2020-04-08T17:07:06Z
b95a1b9878588ccc975fd6724a02b18b89c4d46f,"Fix NPE in RemoteTaskRunner event handler causes JVM shutdown (#9610)

* Fix NPE in RemoteTaskRunner event handler causes JVM shutdown

* address comments

* fix compile

* fix checkstyle

* fix lgtm

* fix merge

* fix test

* fix tests

* change scope

* address comments

* address comments",2020-04-07T21:53:51Z
6e50d29b4e95597337cb389689459b2bc33a4834,"fix global filter input (#9567)

* fix global filter input

* remove clear

* close global filters after clicking apply

* add restFilter",2020-04-07T20:31:19Z
73a6baaeb641889b86afc55934e78502825b042b,change hadoop inputSource IT to use parallel batch ingestion (#9616),2020-04-07T18:37:37Z
d267b1c414b9b55b129729692755273d2a35e304,"check paths used for shuffle intermediary data manager get and delete (#9630)

* check paths used for shuffle intermediary data manager get and delete

* add test

* newline

* meh",2020-04-07T16:47:18Z
79522f3e25f434caa2e7e56aa97a064a91af805f,"Integration-tests: typo (#9624)

* QA-57: change $ to # as comment

* QA-57: fix haddop to hadoop",2020-04-07T00:40:05Z
82ce60b5c1756a3eda06e075e2071a11feee368c,"Reuse transformer in stream indexing (#9625)

* Reuse transformer in stream indexing

* remove unused method

* memoize complied pattern",2020-04-06T23:36:08Z
7bf1ebb0b86f3b5af224cc4ae56868a4d703a061,"Add tests for valid and invalid datasource names (#9614)

* Add tests for valid and invalid datasource names

* code review

* clean up dependencies",2020-04-06T23:02:50Z
fc2897da1d27e5846ee5b6ad10ffb45ee65f0be5,pac4j: be noop if a previous authenticator in chain has successfully authenticated (#9620),2020-04-06T18:55:55Z
40e84a171b8be8e87db20b0c5c189aef1b860f41,Eliminate common subfilters when converting it to a CNF (#9608),2020-04-06T05:29:41Z
2d999669333fc7bd344e5bec0d74f0fbcd916272,Add Apache Ranger Authorization (#9579),2020-04-04T16:02:24Z
4d277dbf9901a592789fbcc6b1dff1ebebb5e00e,"Fix double count ssl connection metrics (#9594)

* fix double counted jetty/numOpenConnections metric for ssl connections

* tests

* more better

* style",2020-04-04T06:29:23Z
b5419962f0995daf0d4361a137f5f6c123fd9aa0,"Suppress CVEs for jackson-mapper-asl:1.9.13 (#9604)

The jackson-mapper-asl:1.9.13 CVEs via curator-x-discovery are all
suppressed for now as fixing them requires updating the curator version.",2020-04-03T17:33:52Z
1852bf33ea43cfc155e38ede45a2a2c61b081597,"Add Integration Test for functionality of kinesis ingestion (#9576)

* kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* Kinesis IT

* fix kinesis timeout

* Kinesis IT

* Kinesis IT

* fix checkstyle

* Kinesis IT

* address comments

* fix checkstyle",2020-04-03T16:45:22Z
af3337dac8091d7499a86014de125b26ed90fbdc,"DruidInputSource can add new dimensions during re-ingestion (#9590)

* WIP integration tests

* Add integration test for ingestion with transformSpec

* WIP almost working tests

* Add ignored tests

* checkstyle stuff

* remove newPage from index task ingestion spec

* more test cleanup

* still not quite working

* Actually disable the tests

* working tests

* fix codestyle

* dont use junit in integration tests

* actually fix the bug

* fix checkstyle

* bring index tests closer to reindex tests",2020-04-03T00:32:31Z
dbaabdd24710fef726c5730c609937706f456a44,Fix for [CVE-2020-1958]: Apache Druid LDAP injection vulnerability (#9600),2020-04-01T21:52:01Z
e855c7fe1bd481cdc79d38343563db661a1ccc43,"Allow Cloud Deep Storage configs without segment bucket or path specified (#9588)

* Allow Cloud SegmentKillers to be instantiated without segment bucket or path

This change fixes a bug that was introduced that causes ingestion
to fail if data is ingested from one of the supported cloud storages
(Azure, Google, S3), and the user is using another type of storage
for deep storage. In this case the all segment killer implementations
are instantiated. A change recently made forced a dependency between
the supported cloud storage type SegmentKiller classes and the
deep storage configuration for that storage type being set, which
forced the deep storage bucket and prefix to be non-null. This caused
a NullPointerException to be thrown when instantiating the
SegmentKiller classes during ingestion.

To fix this issue, the respective deep storage segment configs for the
cloud storage types supported in druid are now allowed to have nullable
bucket and prefix configurations

* * Allow google deep storage bucket to be null",2020-04-01T18:57:32Z
0da8ffc3ff53c79b2a7f29cee1257824cc5ed0ed,Bump up development version to 0.19.0-SNAPSHOT (#9586),2020-03-30T23:24:04Z
839379246a59221664cef1c482455ffe98e6e562,remove commons-lang3  usage from DoubleMeanAggregatorFactoryTest (#9578),2020-03-30T21:31:50Z
fa5da6693ca4dbb614c6398e50e34b772298f5ae,"add lane enforcement for joinish queries (#9563)

* add lane enforcement for joinish queries

* oops

* style

* review stuffs",2020-03-30T18:58:16Z
c0195a19e4e9bef50dd1bb5f1b63d03b4f3e318f,"Fix HDFS input source split (#9574)

Fixes an issue where splitting an HDFS input source for use in native
parallel batch ingestion would cause the subtasks to get a split with an
invalid HDFS path.",2020-03-28T22:45:57Z
9081b5f25c3d79e634ccc039a7d53e90cf43926d,"fix MAX_INTERMEDIATE_SIZE for DoubleMeanHolder (#9568)

* fix MAX_INTERMEDIATE_SIZE for DoubleMeanHolder

* byte[] type handling in deserialize and finalizeComputation for DoubleMeanAggregatorFactory

* DoubleMeanAggregatorFactory tests: Max Intermediate Size, Deserialize, finalizeComputation

* moved byte[] check to first position

Co-authored-by: Stanislav <S.Poryadnyi@abcconsulting.ru>",2020-03-28T05:26:31Z
b4ad3d0d88259588d0e6d08a075654d1f12a4ad3,"fix nullhandling exceptions related to test ordering (#9570)

* fix nullhandling exceptions related to test ordering

Tests might get executed in different order depending on the maven
version and the test environment. This may lead to ""NullHandling module
not initialized"" errors for some tests where we do not initialize
null-handling explicitly.

* use InitializedNullHandlingTest",2020-03-27T16:46:31Z
2c49f6d89acdf1e15f6bc339321f0e78066e2e42,error on value counter overflow instead of writing sad segments (#9559),2020-03-26T23:54:48Z
e6e2836b0e25f2b27816c514c5064e6516e60d7b,"Instructions to run integration tests against quickstart (#9560)

* Instructions to run integration tests against quickstart

* Address review comments

* actually exclude the test group

* Revert ""actually exclude the test group""

This reverts commit 66f366409ee2e51af1ec0285276309bb6acc15c4.

* update comment",2020-03-26T20:22:53Z
55c08e07461e773309c3070ea3891ea304b343de,"DruidSegmentReader should work if timestamp is specified as a dimension (#9530)

* DruidSegmentReader should work if timestamp is specified as a dimension

* Add integration tests

Tests for compaction and re-indexing a datasource with the timestamp column

* Instructions to run integration tests against quickstart

* address pr",2020-03-25T20:47:34Z
3f521943fc4b5eaa445f060948cc141636bf33ca,"S3 ingestion spec should not uses the default credentials provider chain when environment value password provider is misconfigured. (#9552)

* fix s3 optional cred

* S3 ingestion spec uses the default credentials provider chain when environment value password provider is misconfigured.

* fix failing test",2020-03-24T22:09:02Z
e1b201c27956c9eed2dfd2e2859282ac613a0d08,"Add view values to lookup actions menu (#9549)

* add test, add query

* jest -u

* add limit, explicitly get columns, remoove map",2020-03-24T16:57:33Z
0ac875a8b4d0b101199be15cf2c19b1031a40b04,"Update docker.md readme to note memory requirements (#9529)

* Update docker.md readme to note memory requirements

* Fix grammatical error

Co-Authored-By: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>

Co-authored-by: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>",2020-03-24T10:33:29Z
e97695d9da40303c96da9e81cf019f071be36a6f,"fix Hadoop ingestion fails due to error 'JavaScript is disabled' on certain config (#9553)

* fix Hadoop ingestion fails due to error 'JavaScript is disabled', if determine partition hadoop job is run

* add test

* fix checkstyle

* address comments

* address comments",2020-03-24T06:09:21Z
57018adf23fc0d0dc089d72e511e8ba2c44f97ff,change backtick() and fix broken links (#9550),2020-03-24T03:57:03Z
2bc29543e596892749b9c3582a231e3ad771013d,"modify QueryCapacityExceededException to provide better messaging (#9547)

* modify QueryCapacityExceededException to provide better messaging

* style",2020-03-24T03:05:11Z
bf85ea19b283ffc6e26c6aef28d264233a1509db,"roaring bitmaps by default (#9548)

* it is finally time

* fix it

* more docs

* fix doc",2020-03-24T01:15:57Z
5604ac796367eb7b0523247fcedd82f3d00cf3c0,"druid extension for OpenID Connect auth using pac4j lib (#8992)

* druid pac4j security extension for OpenID Connect OAuth 2.0 authentication

* update version in druid-pac4j pom

* introducing unauthorized resource filter

* authenticated but authorized /unified-webconsole.html

* use httpReq.getRequestURI() for matching callback path

* add documentation

* minor doc addition

* licesne file updates

* make dependency analyze succeed

* fix doc build

* hopefully fixes doc build

* hopefully fixes license check build

* yet another try on fixing license build

* revert unintentional changes to website folder

* update version to 0.18.0-SNAPSHOT

* check session and its expiry on each request

* add crypto service

* code for encrypting the cookie

* update doc with cookiePassphrase

* update license yaml

* make sessionstore in Pac4jFilter private non static

* make Pac4jFilter fields final

* okta: use sha256 for hmac

* remove incubating

* add UTs for crypto util and session store impl

* use standard charsets

* add license header

* remove unused file

* add org.objenesis.objenesis to license.yaml

* a bit of nit changes  in CryptoService  and embedding EncryptionResult for clarity

* rename alg  to cipherAlgName

* take cipher alg name, mode and padding as input

* add java doc  for CryptoService  and make it more understandable

* another  UT for CryptoService

* cache pac4j Config

* use generics clearly in Pac4jSessionStore

* update cookiePassphrase doc to mention PasswordProvider

* mark stuff Nullable where appropriate in Pac4jSessionStore

* update doc to mention jdbc

* add error log on reaching callback resource

* javadoc  for Pac4jCallbackResource

* introduce NOOP_HTTP_ACTION_ADAPTER

* add correct module name in license file

* correct extensions folder name in licenses.yaml

* replace druid-kubernetes-extensions to druid-pac4j

* cache SecureRandom instance

* rename UnauthorizedResourceFilter to AuthenticationOnlyResourceFilter",2020-03-24T01:15:45Z
cdf4a26904b5129e038a1f32944101c51df0ec58,clean up spec before reopening in data loader (#9536),2020-03-23T23:57:51Z
d8833316c427ef0fbba7d65236d721343a402299,"fix broken links (#9537)

* fix broken links

* missing /

* adjustment",2020-03-23T00:41:18Z
54c9325256c33622bc8d198dc0252a157f68f196,"SQL support for joins on subqueries. (#9545)

* SQL support for joins on subqueries.

Changes to SQL module:

- DruidJoinRule: Allow joins on subqueries (left/right are no longer
  required to be scans or mappings).
- DruidJoinRel: Add cost estimation code for joins on subqueries.
- DruidSemiJoinRule, DruidSemiJoinRel: Removed, since DruidJoinRule can
  handle this case now.
- DruidRel: Remove Nullable annotation from toDruidQuery, because
  it is no longer needed (it was used by DruidSemiJoinRel).
- Update Rules constants to reflect new rules available in our current
  version of Calcite. Some of these are useful for optimizing joins on
  subqueries.
- Rework cost estimation to be in terms of cost per row, and place all
  relevant constants in CostEstimates.

Other changes:

- RowBasedColumnSelectorFactory: Don't set hasMultipleValues. The lack
  of isComplete is enough to let callers know that columns might have
  multiple values, and explicitly setting it to true causes
  ExpressionSelectors to think it definitely has multiple values, and
  treat the inputs as arrays. This behavior interfered with some of the
  new tests that involved queries on lookups.
- QueryContexts: Add maxSubqueryRows parameter, and use it in druid-sql
  tests.

* Fixes for tests.

* Adjustments.",2020-03-22T23:43:55Z
5f127a1829839c402f16c7e6aab95be445d12216,"Add integration tests for HDFS (#9542)

* HDFS IT

* HDFS IT

* HDFS IT

* fix checkstyle",2020-03-20T22:46:08Z
4870ad7b56f6c9e40f08be2a9d485b1112b8ba31,"Azure deep storage does not work with datasource name containing non-ASCII chars (#9525)

* Azure deep storage does not work with datasource name containing non-ASCII chars

Fixed a bug where recording the segment file location fails when
using Azure Deep Storage, if the datasource has any special
characters

* * update jacoco thresholds

* * resolve merge conflicts
* address review comments",2020-03-19T19:32:35Z
1e667362ebabd6f4348e9f46cf613a2f18cb70ba,Do not use UnmodifiableList in auto compaction (#9535),2020-03-19T18:43:33Z
68013fbc64ac28e0033d7eca3099806609ba96f4,"fix issue where total limit was being applied even when not configured (#9534)

* fix issue where total limit was being applied even when not configured

* fix inspection

* add reserved lane name check to manual laning strategy",2020-03-19T01:05:59Z
838735411f495e355820da35ab0765a56a95b090,"Ability to Delete task logs and segments from Google Storage (#9519)

* Ability to Delete task logs and segments from Google Storage

* implement ability to delete all tasks logs or all task logs
  written before a particular date when written to Google storage

* implement ability to delete all segments from Google deep storage

* * Address review comments",2020-03-19T01:00:43Z
b18dd2b7a935b7802a32ca099b5bd771126788fb,"Ability to Delete task logs and segments from Azure Storage (#9523)

* Ability to Delete task logs and segments from Azure Storage

* implement ability to delete all tasks logs or all task logs
  written before a particular date when written to Azure storage

* implement ability to delete all segments from Azure deep storage

* * Address review comments",2020-03-19T00:59:17Z
3b536eea7f5bdb4c6f299fd39fffbe7c67c982a9,"Web console: expose props for S3 (#9432)

* expose props for S3

* added env inputs

* add scarry warning

* use .password

* put the warning front and center

* Update web-console/src/views/load-data-view/load-data-view.tsx

Co-Authored-By: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>

* let prettier rewrap the text

Co-authored-by: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>",2020-03-18T22:32:12Z
1ef25a438fd9456f40f2adb36549eeaf86fef4f2,"Broker: Add ability to inline subqueries. (#9533)

* Broker: Add ability to inline subqueries.

The main changes:

- ClientQuerySegmentWalker: Add ability to inline queries.
- Query: Add ""getSubQueryId"" and ""withSubQueryId"" methods.
- QueryMetrics: Add ""subQueryId"" dimension.
- ServerConfig: Add new ""maxSubqueryRows"" parameter, which is used by
  ClientQuerySegmentWalker to limit how many rows can be inlined per
  query.
- IndexedTableJoinMatcher: Allow creating keys on top of unknown types,
  by assuming they are strings. This is useful because not all types are
  known for fields in query results.
- InlineDataSource: Store RowSignature rather than component parts. Add
  more zealous ""equals"" and ""hashCode"" methods to ease testing.
- Moved QuerySegmentWalker test code from CalciteTests and
  SpecificSegmentsQueryWalker in druid-sql to QueryStackTests in
  druid-server. Use this to spin up a new ClientQuerySegmentWalkerTest.

* Adjustments from CI.

* Fix integration test.",2020-03-18T22:06:45Z
4c620b8f1c67e06e039b260de991c0e90f087010,"Adding s3, gcs, azure integration tests (#9501)

* exclude pulling s3 segments for tests that doesnt need it

* fix script

* fix script

* fix script

* add s3 test

* refactor sample data script

* add tests

* add tests

* add license header

* fix failing tests

* change bucket and path to config

* update integration test readme

* fix typo",2020-03-17T10:08:44Z
b1847364b0816cfc3c2ac376cd888033a06fb93f,"More efficient join filter rewrites (#9516)

* More efficient join filter rewrites

* Rebase

* Remove unused functions

* PR comments, fix compile

* Adjust comment

* Allow filter rewrite when join condition has LHS expression

* Fix inspections

* Fix tests",2020-03-17T05:16:14Z
142742f291daaf1ac9afea319cacbbe2a3077952,"add kinesis lag metric (#9509)

* add kinesis lag metric

* fixes

* heh

* do it right this time

* more test

* split out supervisor report lags into lagMillis, remove latest offsets from kinesis supervisor report since always null, review stuffs",2020-03-17T04:39:53Z
7626be26caccdb5fe90d4e4c48e9138abcf975e7,"Web console: add config control for the query context (#9499)

* add default and mandetory query contexts

* added config docs",2020-03-16T21:34:19Z
09600db8f2bedd6965f15d8d7fe81b39bcd89ac9,"Add the option to start Hadoop docker container when running integration tests (#9513)

* hadoop docker it

* hadoop docker container it

* fix hadoop container",2020-03-16T19:04:05Z
e7b3dd9cd1c8a95855ee672e2fcbfe1b895ccc37,Update to mysql connector 5.1.48 (#9514),2020-03-16T17:38:31Z
100d5875837c4b351557cd0e683e0cc663b87656,"Suppress CWE-400 for node-sass:4.13.1 (#9517)

The vulnerability is fixed in 4.13.1:
https://github.com/sass/node-sass/issues/2816#issuecomment-575136455

But the dependency check plugin thinks its still broken as the
affected/fixed versions has not been updated yet on Sonatype OSS Index:
https://ossindex.sonatype.org/vuln/c97f4ae7-be1f-4f71-b238-7c095b126e74",2020-03-16T16:42:33Z
69af760a19bfaa9de8dcc1c38d70d03be22d2ecd,"add manual laning strategy, integration test (#9492)

* add manual laning strategy, integration test, json config test

* share percent conversion method

* wrong assert

* review stuffs

* doc adjustments

* more tests

* test adjustment

* adjust docs

* Update index.md",2020-03-14T03:06:55Z
bcb9a632c7f1f9682854359feaccf30c333191c3,"Web console: update druid-query-toolkit to version 0.4.x  (#9500)

* add support for new version of DQT

* update druid-query-toolkit

* fix direction css

* fix remove

* update package

* remove useless conditional

* bump package

* jest -u

Co-authored-by: Maggie Brewster <maggiebrewster@implydata20sMBP.attlocal.net>",2020-03-14T01:09:47Z
6afd55c8f4b49802d873ca181727231670abd566,"threshold based automatic query prioritization (#9493)

* threshold based automatic query prioritization

* fixes

* spelling and fixes

* fix docs

* spelling

* checkstyle

* adjustments

* doc fix",2020-03-13T08:41:54Z
6b02991464839188ae815242adeef5b43da16341,"Match GREATEST/LEAST function behavior to other DBs (#9488)

* Match GREATEST/LEAST function behavior

Change the behavior of the GREATEST / LEAST functions to be similar to
how it is implemented in other databases (as functions instead of
aggregators). The GREATEST/LEAST functions are not in the SQL standard,
but users will expect behavior similar to what other databases provide.

* Match postgres behavior & handle more SQL types

* Fix imports",2020-03-12T22:10:11Z
ddc6f87920a285c5c16a615906dd2526a413a26d,"Web console: standardize the spec format (#9477)

* standerdize the spec format

* fix spec upgrade",2020-03-12T21:21:23Z
1ba1a3c523f42595f6e9b2961e7a3e10517dfb16,fix worker category on Indexer node (#9510),2020-03-12T21:11:02Z
ff59d2e78bd3949e46858bc2f9882db9a7d2a186,"Move RowSignature from druid-sql to druid-processing and make use of it. (#9508)

* Move RowSignature from druid-sql to druid-processing and make use of it.

1) Moved (most of) RowSignature from sql to processing. Left behind the SQL-specific
   stuff in a RowSignatures utility class. It also picked up some new convenience
   methods along the way.
2) There were a lot of places in the code where Map<String, ValueType> was used to
   associate columns with type info. These are now all replaced with RowSignature.
3) QueryToolChest's resultArrayFields method is replaced with resultArraySignature,
   and it now provides type info.

* Fix up extensions.

* Various fixes",2020-03-12T18:06:44Z
3082b9289a19e91a32bc874be187730ff47c6428,"Fix NPE when using IndexedTable and all left rows are filtered out (#9490)

* Fix NPE when using IndexedTable and all left rows are filtered out

* Fix compile

* Add constant for uninitialized current row

* Fix checkstyle",2020-03-12T02:23:05Z
2ef5c17441a450171523653787743db76a3e3bdb,"Link up row-based datasources to serving layer. (#9503)

* Link up row-based datasources to serving layer.

- Add SegmentWrangler interface that allows linking of DataSources to Segments.
- Add LocalQuerySegmentWalker that uses SegmentWranglers to compute queries on
  data that is available locally.
- Modify ClientQuerySegmentWalker to use LocalQuerySegmentWalker when the base
  datasource is concrete and not a table.
- Add SegmentWranglerModule to the Broker so it has them available and can
  properly instantiate . LocalQuerySegmentWalkers.
- Set InlineDataSource and LookupDataSource to concrete, since they can be
  directly queried now.

* Fix tests.",2020-03-11T18:32:27Z
e9888f41cb5f82474b2a42ab8f053e89dbc98434,"Modify check java version script to indicate experimental support for Java 11 (#9455)

* Modify check java version script to indicate experimental support for Java 11

* update docs",2020-03-11T16:22:39Z
9231f2acb3ade6c21748ced383449af0ee6ded00,"Integration test compile with Java 8 and run with Java 8 and 11 (#9491)

* test integration compile with 8 and run with 11

* Integration test compile with Java 8 and run with Java 8 and 11",2020-03-11T16:22:27Z
4f085896c6aa8821e2425f6e223d318a157a9807,"Ability to directly query row-based datasources. (#9502)

* Ability to directly query row-based datasources.

Includes:

- Foundational classes RowBasedSegment, RowBasedStorageAdapter,
  RowBasedCursor provide a queryable interface on top of a
  RowBasedColumnSelectorFactory.
- Add LookupSegment: A RowBasedSegment that is built on lookup data.
- Improve capability reporting in RowBasedColumnSelectorFactory.

* Fix import.

* Remove unthrown IOException.",2020-03-11T03:39:01Z
c74749f0f45e04dab605253fdb2c8f7e064ffe41,Don't exclude null dimension values from the map based query response (#9438),2020-03-10T22:06:03Z
7401bb3f9315bf0622b6e0fe7c7fd855d1c65052,"Improve OvershadowableManager performance (#9441)

* Use the iterator instead of higherKey(); use the iterator API instead of stream

* Fix tests; fix a concurrency bug in timeline

* fix test

* add tests for findNonOvershadowedObjectsInInterval

* fix test

* add missing tests; fix a bug in QueueEntry

* equals tests

* fix test",2020-03-10T20:22:19Z
7e0e767cc28d3c94e46e3a0645a89abf7a3f449e,"Ability to Delete task logs and segments from S3 (#9459)

* Ability to Delete task logs and segments from S3

* implement ability to delete all tasks logs or all task logs
  written before a particular date when written to S3
* implement ability to delete all segments from S3 deep storage
* upgrade version of aws SDK in use

* * update licenses for updated AWS SDK version

* * fix bug in iterating through results from S3
* revert back to original version of AWS SDK

* * Address review comments

* * Fix failing dependency check",2020-03-10T20:13:46Z
75a55914480aadeeff581391ac570db94011444a,"remove old unused zookeeper dependent lookups code (#9480)

* remove old unused zookeeper dependent lookups code

* make  intellij inspector happy",2020-03-10T19:12:48Z
559c7b64cc9bbe25e54b84b4e8fcde5bbe543d95,"Suppress CVEs for htrace-core4 and openstack-swift (#9489)

CVE-2013-7109 can be ignored for openstack-swift as it is for the python
SDK and druid uses the java SDK.

The jackson-databind:2.4.0 CVEs via htrace-core4 are all suppressed for
now as fixing them requires updating the hadoop version.",2020-03-10T17:55:41Z
c6c2282b59cda107089a9b3944477fd630bc0657,"Harmonization and bug-fixing for selector and filter behavior on unknown types. (#9484)

* Harmonization and bug-fixing for selector and filter behavior on unknown types.

- Migrate ValueMatcherColumnSelectorStrategy to newer ColumnProcessorFactory
  system, and set defaultType COMPLEX so unknown types can be dynamically matched.
- Remove ValueGetters in favor of ColumnComparisonFilter doing its own thing.
- Switch various methods to use convertObjectToX when casting to numbers, rather
  than ad-hoc and inconsistent logic.
- Fix bug in RowBasedExpressionColumnValueSelector: isBindingArray should return
  true even for 0- or 1- element arrays.
- Adjust various javadocs.

* Add throwParseExceptions option to Rows.objectToNumber, switch back to that.

* Update tests.

* Adjust moment sketch tests.",2020-03-10T14:15:57Z
8b9fe6f58461f1fc3f453c14f1634f9e779aeb71,"query laning and load shedding (#9407)

* prototype

* merge QueryScheduler and QueryManager

* everything in its right place

* adjustments

* docs

* fixes

* doc fixes

* use resilience4j instead of semaphore

* more tests

* simplify

* checkstyle

* spelling

* oops heh

* remove unused

* simplify

* concurrency tests

* add SqlResource tests, refactor error response

* add json config tests

* use LongAdder instead of AtomicLong

* remove test only stuffs from scheduler

* javadocs, etc

* style

* partial review stuffs

* adjust

* review stuffs

* more javadoc

* error response documentation

* spelling

* preserve user specified lane for NoSchedulingStrategy

* more test, why not

* doc adjustment

* style

* missed review for make a thing a constant

* fixes and tests

* fix test

* Update docs/configuration/index.md

Co-Authored-By: sthetland <steve.hetland@imply.io>

* doc update

Co-authored-by: sthetland <steve.hetland@imply.io>",2020-03-10T09:57:16Z
75e2051195075c14171d5b8ab7f97abef79e80a0,"Convert array_contains() and array_overlaps() into native filters if possible (#9487)

* Convert array_contains() and array_overlaps() into native filters if
possible

* make spotbugs happy and fix null results when null compatible",2020-03-10T05:50:38Z
2db20afbb7082bdbbcaf6fb53908764bfa6a99c7,"Integration test cluster supports override config (#9473)

* integration test refactor

* integration test refactor

* refactor integration test

* refactor integration test

* refactor integration test

* refactor integration test

* refactor integration test

* refactor integration test

* refactor integration test

* refactor integration test

* address comments",2020-03-10T04:17:49Z
95406ca20a13dbffb3b02a6ecd55327058e0898b,[IMPLY-2285] fix maxRowsPerSegment tool tip (#9468),2020-03-10T03:12:05Z
96ed7210d3badf835123cf0c0bcc082187b9557e,"Fix history dialog overflow (#9471)

* [IMPLY-1661] fix history dialog overflow

* jest -u",2020-03-10T02:09:59Z
814f5a9717618f4451b94cf46dd1bf1d97d5f29c,add password provider reference to s3 optional cred docs (#9439),2020-03-10T00:56:42Z
f8b1f2f7f3fe6d49cbb5f19bfe6196a5b716b3ef,"fix issue when distinct grouping dimensions are optimized into the same virtual column expression (#9429)

* fix issue when distinct grouping dimensions are optimized into the same virtual column expression

* fix tests

* more better

* fixes",2020-03-10T00:48:29Z
0136dba95d5271027b2ee0d0266a8a66fe88d4ca,"Add option to control join filter rewrites (#9472)

* Add option to control join filter rewrites

* Fix inspections",2020-03-10T00:36:07Z
a676d16226e38c6ff7ccd197142dcdaec74e90ab,[IMPLY-1767] fix popover direction (#9470),2020-03-10T00:35:02Z
da0ea627d03d90f237d5d7bec1e928572207a667,"Add disabled run button during loading state (#9474)

* [IMPLY-1782] add disabled run button during loading state

* jest -u",2020-03-10T00:10:35Z
072bbe210f162228e85391b464f114da448df24a,remove ServerDiscoverySelector from DruidLeaderClient (#9481),2020-03-09T19:13:59Z
f456d2fcf892e7125c9851938435b743b148bfed,"Resource leak in DruidSegmentReader (#9476)

* Close the Yielder in DruidSegmentReader

* forbidden api",2020-03-09T17:05:25Z
a6776648112917b72c077ba3ac0cb7f61993a2d0,"allow optimization of single multi-value column input expr with repeated identifier (#9425)

* allow optimization of single multi-value column input expr with repeated identifier

* add test",2020-03-06T20:53:32Z
eda03630d0d49b7b9165caa3e3274f7754ef7f12,"Add OnHeapMemorySegmentWriteOutMediumFactory (#9454)

* Add OnHeapMemorySegmentWriteOutMediumFactory

Add a factory for OnHeapMemorySegmentWriteOutMedium to support direct writing via Spark.

* Register OnHeapMemorySegmentWriteOutMediumFactory.

Register OnHeapMemorySegmentWriteOutMediumFactory with SegmentWriteOutMediumFactory.

* Remove unnecessary throws

The base `makeSegmentWriteOutMedium` throws an IOException, but the particular implementation of OnHeapMemorySegmentWriteOutMediumFactory does not throw a checked exception.

* Update SegmentWriteOutMedium docs to include onHeapMemory

Update the SegmentWriteOutMedium section of the indexing docs to include a description of the new OnHeapSegmentMediumWriteOut option.",2020-03-06T06:34:08Z
64afc0508049d28de89d6cbe9d68b880c7e4bf68,Open the licenses.yaml with an explicit encoding (#9462),2020-03-06T01:13:44Z
32cd47bc8eeb0d2b79390a70ba98c687a528dc64,Fix home view styling (#9444),2020-03-05T03:39:36Z
301605717834127ca0db4a8d05d978571d03c771,"Make Transform an ExtensionPoint (#9319)

* Make Transform an ExtensionPoint

* Add transform to the list of documented extensions

* Add example transform implementation",2020-03-04T20:13:14Z
4ed83f6af67b307b25b9481d5d6762f8bd536cec,"Fix superbatch merge last partition boundaries (#9448)

* Fix superbatch merge last partition boundaries

A bug in the computation for the last parallel merge partition could
cause an IndexOutOfBoundsException or precondition failure due to an
empty partition.

* Improve comments and tests",2020-03-04T18:35:21Z
9466ac7c9b2b1d86b06cfa7c7f5eeb35d588dd22,"Skip empty files for local, hdfs, and cloud input sources (#9450)

* Skip empty files for local, hdfs, and cloud input sources

* split hint spec doc

* doc for skipping empty files

* fix typo; adjust tests

* unnecessary fluent iterable

* address comments

* fix test

* use the right lists

* fix test

* fix test",2020-03-04T04:51:06Z
99095c4ac5d57a828538d88a611baa22e1afe30f,"Add Azure ingestion flow to web console (#9437)

* add support for azure

* change bucket to container

* add azure to input menu

* remove static-azure",2020-03-03T19:06:00Z
1fd865b7c127c140e241db2c0942378e20a5799d,"BufferArrayGrouper: Fix potential overflow in requiredBufferCapacity. (#9435)

* BufferArrayGrouper: Fix potential overflow in requiredBufferCapacity.

If cardinality was high, the computation could overflow an int. There
were tests for this, but the tests were wrong.

* Nicer.",2020-02-28T22:27:52Z
81d8be6e393b00b7509ffb77ab48988aa79a26b6,"CacheStrategy: Improve Javadocs. (#9280)

* CacheStrategy: Improve Javadocs.

* Update processing/src/main/java/org/apache/druid/query/CacheStrategy.java

Co-Authored-By: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>

Co-authored-by: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>",2020-02-28T19:30:58Z
c294e0b7c6d35d866033ac9575a024d5e4887ded,"Web console: Column counter (#9334)

* Column counter

* more general test",2020-02-27T20:04:27Z
ef3d24e88668c150f65b844574cad665b6d498c4,Add javadocs for enableFilterPushDown. (#9423),2020-02-27T06:07:33Z
ae617bf5dd47a76560f842e1356949979ec27f3d,"Clarify InputSource.isSplittable usage. (#9424)

Also removes TimedShutoffInputSource, which had a bug in isSplittable (it
improperly returned true, even though it didn't implement SplittableInputSource).
This bug had no user-visible impact, since the code wasn't used.",2020-02-27T06:05:47Z
5d05b40e6dca1c8cd663838cfa923fc943121440,Remove druid incubating references (#9405),2020-02-27T05:47:58Z
063811710effe2e9ff9a78364bf7e3ea102ec14a,"#8690 use utc interval when create pedding segments (#9142)

Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2020-02-26T21:21:00Z
b924161086ec460ba1da9b5f61a7f50f9664dc9b,Add main method to VersionedIntervalTimelineBenchmark (#9404),2020-02-26T20:01:02Z
e506fc9fdf6034782c7e4fd6224d86a68c064122,"fix cursor position after function autocomplete (#9396)

Closes #9395",2020-02-26T17:41:24Z
c9faf3e148ad1a1931b3fa5e6e7f00fb1370426c,"Add SQL GROUPING SETS support. (#9122)

* Add SQL GROUPING SETS support.

Built on top of the subtotalsSpec feature in the groupBy query. This also involves
two changes to subtotalsSpec:

- Alter behavior so limitSpec is applied after subtotalsSpec, rather than applied to
  each grouping set. This is more in line with SQL standard behavior. I think it is okay
  to make this change, since the old behavior was not documented, so users should
  hopefully not be depending on it.
- Fix a bug where virtual columns were included in the subtotal queries, but they
  should not have been.

Also fixes two bugs in query equality checking:

- BaseQuery: Use getDuration() instead of ""duration"" in equals and hashCode, since the
  latter is lazily initialized and might be null in one query but not the other.
- GroupByQuery: Include subtotalsSpec in equals and hashCode.

* Fix bugs.

* Fix tests.

* PR updates.

* Grouping class hygiene.",2020-02-26T16:52:39Z
92fb83726b0275cb936fbed21a183c81b55df419,"Add support for optional aws credentials for s3 for ingestion (#9375)

* Add support for optional cloud (aws, gcs, etc.) credentials for s3 for ingestion

* Add support for optional cloud (aws, gcs, etc.) credentials for s3 for ingestion

* Add support for optional cloud (aws, gcs, etc.) credentials for s3 for ingestion

* fix build failure

* fix failing build

* fix failing build

* Code cleanup

* fix failing test

* Removed CloudConfigProperties and make specific class for each cloudInputSource

* Removed CloudConfigProperties and make specific class for each cloudInputSource

* pass s3ConfigProperties for split

* lazy init s3client

* update docs

* fix docs check

* address comments

* add ServerSideEncryptingAmazonS3.Builder

* fix failing checkstyle

* fix typo

* wrap the ServerSideEncryptingAmazonS3.Builder in a provider

* added java docs for S3InputSource constructor

* added java docs for S3InputSource constructor

* remove wrap the ServerSideEncryptingAmazonS3.Builder in a provider",2020-02-26T04:59:53Z
5ce9c81b6823a2c2aa647ca382bb62563d0b2462,"Add join prefix duplicate/shadowing check (#9384)

* Add join prefix duplicate/shadowing check

* Fix format string

* PR comments

* PR comment

* Optimize loop PR comment",2020-02-26T02:17:23Z
d771b42ed148fc28abf6e246a8e2895b2734cf3c,"Move Azure extension into Core (#9394)

* Move Azure extension into Core

Moving the azure extension into Core.

* * Fix build failure

* * Add The MIT License (MIT) to list of compatible licenses

* * Address review comments

* * change reference to contrib azure to core azure

* * Fix spelling mistakes.",2020-02-26T01:49:16Z
14accb50ad435ca05f58afec00c9fc4c79e3cbf6,"Improves on the fix for 8918 (#9387)

* Improves on the fix for 8918

* factorize constants for ITRetryUtil.retryUntil call

* increasing retries and sleep in HttpUtil to cope with 401s in testing

* adding retries in EventReceiverFirehoseTestClient

* adding missing space",2020-02-25T23:50:27Z
f619903403f957a41d569972a58a03221d395273,Updated the configuration documentation on coordinator kill tasks to clarify whether they delete only unused segments. (#9400),2020-02-25T21:15:56Z
7fc99ee206f3934c502b1c0c342303c4f0a5cff2,"Add common optional dependencies for extensions (#9399)

* Add common optional dependencies for extensions

Include hadoop-aws and postgres JDBC connector jar to improve
out-of-the-box experience for extensions. The mysql JDBC connector jar
is not bundled as it is GPL.

* Update docs

* Fix typo",2020-02-25T08:04:00Z
3bc7ae782c9e5989da88999fa91ddfb6fa559a31,"Create splits of multiple files for parallel indexing (#9360)

* Create splits of multiple files for parallel indexing

* fix wrong import and npe in test

* use the single file split in tests

* rename

* import order

* Remove specific local input source

* Update docs/ingestion/native-batch.md

Co-Authored-By: sthetland <steve.hetland@imply.io>

* Update docs/ingestion/native-batch.md

Co-Authored-By: sthetland <steve.hetland@imply.io>

* doc and error msg

* fix build

* fix a test and address comments

Co-authored-by: sthetland <steve.hetland@imply.io>",2020-02-25T01:34:39Z
806dfe6de65513f481f7a7e590c0ae03d39a8711,"Bump Apache Avro to 1.9.2 (#9381)

* Bump Apache Avro 1.9.2

Bugfixes that where discovered in other projects

* Update missing license",2020-02-24T09:04:22Z
6d8dd5ec10042a827aca20429b3ea19dd39b5827,"string -> expression -> string -> expression (#9367)

* add Expr.stringify which produces parseable expression strings, parser support for null values in arrays, and parser support for empty numeric arrays

* oops, macros are expressions too

* style

* spotbugs

* qualified type arrays

* review stuffs

* simplify grammar

* more permissive array parsing

* reuse expr joiner

* fix it",2020-02-21T23:43:02Z
05258dca37803da656f5d64f0ba08aeac16b57d7,"Improved the readability and fixed few java warnings (#9163)

* Improved the readability and fixed few java warnings

* Fix the checkstyle

Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2020-02-21T22:30:11Z
f707064bed89f668cf152ae18b445bceb540d529,"Add Azure config options for segment prefix and max listing length (#9356)

* Add Azure config options for segment prefix and max listing length

Added configuration options to allow the user to specify the prefix
within the segment container to store the segment files. Also
added a configuration option to allow the user to specify the
maximum number of input files to stream for each iteration.

* * Fix test failures

* * Address review comments

* * add dependency explicitly to pom

* * update docs

* * Address review comments

* * Address review comments",2020-02-21T22:12:03Z
141d8dd8752b602a3addc49d5d2c29a83ee06fab,"Enable druid.coordinator.kill.pendingSegments.on by default (#9385)

* Enable druid.coordinator.kill.pendingSegments.on by default

* checkstyle",2020-02-21T21:13:49Z
3f848e6a7ca5971b9aa5e0e9d1c2aa397fb04c35,"Suppress CVE-2020-8840 for htrace-core-4.0.1 (#9379)

CVE-2020-8840 was updated on 19 Feb 2020, which now gets flagged by the
security vulnerability scan. Since the CVE is for jackson-databind, via
htrace-core-4.0.1, it can be added to the existing list of security
vulnerability suppressions for that dependency.",2020-02-21T19:05:00Z
30c24df4d33197ec4b0d37f0ec36bc2e64dce56f,"Add config option for namespacePrefix (#9372)

* Add config option for namespacePrefix

opentsdb emitter sends metric names to opentsdb verbatim as what druid
names them, for example ""query.count"", this doesn't fit well with a
central opentsdb server which might have namespaced metrics, for example
""druid.query.count"". This adds support for adding an optional prefix.

The prefix also gets a trailing dot (.), after it, so the metric name
becomes <namespacePrefix>.<metricname>

configureable as ""druid.emitter.opentsdb.namespacePrefix"", as
documented.

Co-authored-by: Martin Gerholm <martin.gerholm@deltaprojects.com>
Signed-off-by: Martin Gerholm <martin.gerholm@deltaprojects.com>
Signed-off-by: Björn Zettergren <bjorn.zettergren@deltaprojects.com>

* Spelling for PR #9372

Added ""namespacePrefix"" to .spelling exceptions, it's a variable name
used in documentation for opentsdb-emitter.

* fixing tests for PR #9372

changed naming of variables to be more descriptive
added test of prefix being an empty string: """".
added a conditional to buildNamespacePrefix to check for empty string
being fed if EventConverter called without OpentsdbEmitterConfig
instance.

* fixing checkstyle errors for PR #9372

used == to compare literal string, should be equals()

* cleaned up and updated PR #9372

Created a buildMetric function as suggested by clintropolis, and
removed redundant tests for empty strings as they're only used when
calling EventConverter directly without going through
OpentsdbEmitterConfig.

* consistent naming of tests PR #9372

Changed names of tests in files to match better with what it was
actually testing

changed check for Strings.isNullOrEmpty to just check for `null`, as
empty string valued `namespacePrefix` is handled in
OpentsdbEmitterConfig.

Co-authored-by: Martin Gerholm <inspector-martin@users.noreply.github.com>",2020-02-20T22:01:41Z
cab08f941d28266a65a39bd62e7e9487067573b1,"Fix join filter push down post-join virtual column handling (#9373)

* Fix join filter push down post-join virtual column handling

* Remove unused adapter param, update javadocs

* Fix TC

* Update processing/src/main/java/org/apache/druid/segment/join/filter/JoinFilterAnalyzer.java

Co-Authored-By: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>

* Address PR comments

Co-authored-by: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>",2020-02-19T23:51:05Z
26eeba636a7cddfae45320c4d7d236dcd3ecdfd9,"Make java version check work on all shells (#9376)

* Make java version check work on all shells

Previously, ""perl verify-java"" would fail on shells like zsh, which
would cause the quickstart scripts (e.g., bin/start-micro-quickstart) to
fail unless the DRUID_SKIP_JAVA_SKIP environment variable is set.

* Support dash (ubuntu)",2020-02-19T21:44:00Z
b408a6d774e43e574bf8092584fae76d582cfd8f,"sql support for dynamic parameters (#6974)

* sql support for dynamic parameters

* fixup

* javadocs

* fixup from merge

* formatting

* fixes

* fix it

* doc fix

* remove druid fallback self-join parameterized test

* unused imports

* ignore test for now

* fix imports

* fixup

* fix merge

* merge fixup

* fix test that cannot vectorize

* fixup and more better

* dependency thingo

* fix docs

* tweaks

* fix docs

* spelling

* unused imports after merge

* review stuffs

* add comment

* add ignore text

* review stuffs",2020-02-19T21:09:20Z
e7eb45e64875dcffe7a1e00672a1b0c78e35beb2,"Run IntelliJ inspections on Travis (#9179)

* Run IntelliJ inspections on Travis

Running IntelliJ inspections currently takes about 90 minutes, but they
can be run in about 30 minutes on Travis.

* Restore assert statements",2020-02-19T08:34:19Z
73a0181e34f1e0816011b778bc1d3ecbe9d7ad97,"Fix handling for columns that appear multiple times in join conditions (#9362)

* Fix handling for columns that appear multiple times in join conditions

* Remove unneeded comment

* Fix test",2020-02-17T18:54:04Z
5befd406384c8717cec558fa3f7d3d86d18145f0,Issue 4909 popped up again. I applied PR 5451 liberally to all new Calcite test classes introduced in PR 9279 to fix (#9324),2020-02-17T06:29:43Z
3bb9e7e53af4d5926995931e05294f83f756d85c,"Inject things instead of subclassing everything for parallel task testing (#9353)

* Inject things instead of subclassing everything for parallel task
testing

* javadoc

* fix compilation

* fix wrong merge

* Address comments",2020-02-16T21:00:12Z
b1be88d79cf06aa294cb9b09b2c180837edec347,"fix Expressions.toQueryGranularity to be more correct, improve javadocs of Expr.getIdentifierIfIdentifier and Expr.getBindingIfIdentifier (#9363)",2020-02-16T16:36:40Z
6d52edddab2fdc5e9ca897b576e83d0a95c5bccf,"Remove references to Docker Machine (#9366)

* Remove references to Docker Machine

Removing a broken link to an obsolete repo. 

While at it, removing references to Docker Machine, which was obsolete as of Docker v1.12 (avail. 2016). This version introduced Docker as native MacOS and Windows apps.

* Update README.md

Wording nit.",2020-02-15T11:08:43Z
043abd5529d21544384e6116b18ece109629906f,"Fix compatibility issues with SqlFirehose (#9365)

* Make SqlFirehose compatible with FiniteFirehose

* Fix build",2020-02-15T01:45:12Z
2e54755a03635d24cb78e893946988110a8fe2b5,"add docker tutorial, friendlier docker-compose.yml, experimental java 11 dockerfile (#9262)

* add docker tutorial, experimental java 11 dockerfile

* fix typo

* spelling

* doc adjustments",2020-02-14T05:24:45Z
4221573317caadbf82679f5d3437746ae1962954,"Update web-console dependencies (#9361)

Fixes security vulnerabilities as flagged by the ""security
vulnerability"" travis cron job.",2020-02-14T05:02:34Z
bcf8f91e46712cf8a91a2e55622453ff57b503dc,Add unit tests for CoordinatorRuleManager (#9318),2020-02-14T03:29:57Z
e9aebd994aa0e243446b4f76d819a503401104e3,"Fix for building in Eclipse & VS Code. (#7481)

Fixes #6866
Reverse dependencies from /main/ to /test/
Add generated-test-sources to source path for Eclipse",2020-02-13T22:58:32Z
48a0681f7eddcc32cbc57a8882b85a191d2336aa,Fix basic auth polling to skip retries when cachedSerializedGroupMappingMap returns 404 (#9354),2020-02-13T00:52:03Z
31528bcdaf6a07480578d779ad207b91698637bd,"Integration tests for JDK 11 (#9249)

* Integration tests for JDK 11

* fix vm option

* fix superviosrd

* fix pom

* add integration tests for java 11

* add logs

* update docs

* Update dockerfile to ack AdoptOpenJdk for Java 11 install commands",2020-02-13T00:36:31Z
b1f38131af0e37d4b4b9f59e51a96e38b81ce45a,"Fix timestamp extract fn to match postgreSQL (#9337)

* Fix timestamp extract fn to match postgres

Update the timestamp extract function so that it matches the PostgreSQL docs.
Examples from the PostgreSQL docs were added as tests for DECADE, CENTURY
and MILLENIUM extraction.

There were bugs in CENTURY and MILLENIUM that were spotted because of intelliJ
inspections - 'Integer division in floating point context'

* Update CalciteQueryTest

* remove useless round

* mark integer division as an error",2020-02-12T23:39:19Z
c30579e47b2df3c8c86b782a015a5a989102f0fb,"ANY Aggregator should not skip null values implementation (#9317)

* ANY Aggregator should not skip null values implementation

* add tests

* add more tests

* Update documentation

* add more tests

* address review comments

* optimize StringAnyBufferAggregator

* fix failing tests

* address pr comments",2020-02-12T22:01:41Z
c3ebb5eb650d7d71fdf2a096b6678e485f6ca92a,"variance aggregator support for double columns (#9076)

* variance aggregator support for double column instead of casting to float

* docs

* everything in its right place

* checkstyle

* adjustments",2020-02-12T17:32:42Z
d268ff729754288132a84fa1bb9b949d1fc5b824,"Use ExecutorService instead of ScheduledExecutorService where necessary (#9325)

* Use ExecutorService instead of ScheduledExecutorService where necessary - #9286

* Added inspection rule to prohibit ScheduledExecutorService assignment to ExecutorService",2020-02-12T03:05:48Z
5c202343c96e59694808b7c232d85c72704b9926,"implement Azure InputSource reader and deprecate Azure FireHose (#9306)

* IMPLY-1946: Improve code quality and unit test coverage of the Azure extension

* Update unit tests to increase test coverage for the extension
* Clean up any messy code
* Enfore code coverage as part of tests.

* * Update azure extension pom to remove unnecessary things
* update jacoco thresholds

* * updgrade version of azure-storage library version uses to
  most upto-date version

* implement Azure InputSource reader and deprecate Azure FireHose

* implement azure InputSource reader
* deprecate Azure FireHose implementation

* * exclude common libraries that are included from druid core

* Implement more of Azure input source.

* * Add tests

* * Add more tests

* * deprecate azure firehose

* * added more tests

* * rollback fix for google cloud batch ingestion bug. Will be
  fixed in another PR.

* * Added javadocs for all azure related classes
* Addressed review comments

* * Remove dependency on org.apache.commons:commons-collections4
* Fix LGTM warnings
* Add com.google.inject.extensions:guice-assistedinject to licenses

* * rename classes as suggested in review comments

* * Address review comments

* * Address review comments

* * Address review comments",2020-02-12T01:41:58Z
b2c00b3a791555e35d2ac92d35e02aafe5c09721,Add query context option to disable join filter push down (#9335),2020-02-11T23:31:34Z
a5c49cc4bd7d3c718228931e3192d7e8a86d0c64,"Change security vulnerability scan to cron job (#9340)

* Change security vulnerability scan to cron job

Previously, when new CVEs were reported, the security vulnerability scan
would unfortunately block PRs that did not modify any dependencies. To
prevent this issue, the security scan is now run as a Travis cron job
that runs on master and notifies the druid dev list if it fails. The
security scan has also been added to the ""apache-release"" maven profile,
to ensure that it passes before a release.

Also adjusted some Travis CI job failure help messages to not be folded
in the Travis CI job logs.

* Dedup plugin configuration definition",2020-02-11T21:43:08Z
ebd199da739e218f4c75b5619af400353d48c20f,docs: extensions-core: mysql: fix MySQL connector library Maven Central URL (#9344),2020-02-11T05:54:46Z
7968524b013d95e0f4701a1c2752960e8be92850,"Add Pig-specific file handling to Avro parser (#9258)

* Add processing for data files from AvroStorage

* Add words to spellings file",2020-02-11T05:53:11Z
e8146d5914d832a14ba5e63cce6d5ffc31b18520,"More superbatch range partitioning tests (#9266)

More functional tests to cover handling of input data that has a
partition dimension that contains:

1) Null values: Should be in first partition

2) Multi values: Should cause superbatch task to abort",2020-02-10T23:17:54Z
ea006dc72a4aea46f49470c4c55d2ca73bcf5677,"Optimize TimeExtractionTopNAlgorithm (#9336)

When the time extraction Top N algorithm is looking for aggregators, it makes
2 calls to hashCode on the key. Use Map#computeIfAbsent instead so that the
hashCode is calculated only once",2020-02-10T22:26:10Z
51d786493531bdb3240afb6367e8fe8001bfb9ec,"Codestyle - use java style array declaration (#9338)

* Codestyle - use java style array declaration

Replaced C-style array declarations with java style declarations and marked
the intelliJ inspection as an error

* cleanup test code",2020-02-10T22:25:26Z
831ec172f15ae852f1cc9510337f7afc99b39460,"Logging large segment list handling (#9312)

* better handling of large segment lists in logs

* more

* adjust

* exceptions

* fixes

* refactor

* debug

* heh

* dang",2020-02-08T05:42:45Z
ad8afc565c631c826bb1db0ebac611398a7ec9f3,"Join filter pushdown initial implementation (#9301)

* Join filter pushdown initial implementation

* Fix test and spotbugs check

* Address PR comments

* More PR comments

* Address some PR comments

* Address more PR comments

* Fix TC failures and address PR comments",2020-02-08T00:23:37Z
e81230f9abd092b2ac742258abf534f6e17f35e8,"Refactoring some codes around ingestion (#9274)

* Refactoring codes around ingestion:

- Parallel index task and simple task now use the same segment allocator implementation. This is reusable for the future implementation as well.
- Added PartitionAnalysis to store the analysis of the partitioning
- Move some util methods to SegmentLockHelper and rename it to TaskLockHelper

* fix build

* fix SingleDimensionShardSpecFactory

* optimize SingledimensionShardSpecFactory

* fix test

* shard spec builder

* import order

* shardSpecBuilder -> partialShardSpec

* build -> complete

* fix comment; add unit tests for partitionBoundaries

* add more tests and fix javadoc

* fix toString(); add serde tests for HashBasedNumberedPartialShardSpec and SegmentAllocateAction

* fix test

* add equality test for hash and range partial shard specs",2020-02-08T00:23:07Z
b55657cc267cda89fd616a25c23da72a05570a44,"fix protobuf extension packaging and docs (#9320)

* fix protobuf extension packaging and docs

* fix paths

* Update protobuf.md

* Update protobuf.md",2020-02-07T17:26:52Z
53bb45fc9ac1b26c36c0ad172355cbdcddc061f3,"Forbid easily misused HashSet and HashMap constructors (#9165)

* Forbid easily misused HashSet and HashMap constructors

* Add two LinkedHashMap constructors to forbidden-apis and create utility method as replacement for them

* Fix visibility of constant in CollectionUtils.java

* Make an exception for an instance of LinkedHashMap#<init>(int) because proper sizing is used

* revert changes to sql module tests that should be in separate PR

* Finish reverting changes to sql module tests that were flagged in checkstyle during CI

* Add netty dependency resulting from SupressForbidden",2020-02-07T07:44:09Z
57765a499b4bc328a543c0988e0e2ce64b7834d5,Allow overriding default JoinableFactory in SpecificSegmentsQuerySegmentWalker (#9330),2020-02-07T02:35:26Z
0aa7a2a3ee388e9896780f53c53ed2b0b4a6d58f,"Add HashVectorGrouper based on MemoryOpenHashTable. (#9314)

* Add HashVectorGrouper based on MemoryOpenHashTable.

Additional supporting changes:

1) Modifies VectorGrouper interface to use Memory instead of ByteBuffers.
2) Modifies BufferArrayGrouper to match the new VectorGrouper interface.
3) Removes ""implements VectorGrouper"" from BufferHashGrouper.

* Fix comment.

* Fix another comment.

* Remove unused stuff.

* Include hoisted bounds checks.

* Checks against too-large keySpaces.",2020-02-06T23:29:14Z
2e1dbe598ce26a4668dffcbd996ec2b57cf3761a,"Create new dynamic config to pause coordinator helpers when needed (#9224)

* Create new dynamic config to pause coordinator helpers when needed

* Fix spelling mistakes flagged in Travis build

* Add an integration test for coordinator pause dynamic config

* Improve documentation for new dynamic coordinator config and remove un-needed info logs in favor of debug

* address naming convention of 'deep store' vs 'deep storage' in new configs doc line

* Fix newline at end of configuration index.md

* Last try to resolve newline issue in configuration readme

* fix spell checks from travis build

* Fix another flagges spelling error from Travis",2020-02-05T23:33:42Z
98cefc61fa48c74d468cd6f452290e88b5b35ebf,Not use ConcurrentHashMap in CoordinatorRuleManager.rules (#9302),2020-02-05T23:33:31Z
54bc4dc71b3a55d8fbb4bbd4aa0e1bf12762c2fc,"use the latest datasketches-java-1.2.0-incubating (#9269)

Co-authored-by: Gian Merlino <gianmerlino@gmail.com>",2020-02-05T16:48:38Z
475b90c3a65519036a03664e9e6716c8659811cf,"Remove EasyMock dependency from CalciteTests. (#9310)

* Remove EasyMock dependency from CalciteTests.

Useful because CalciteTests is used by other modules (e.g. druid-benchmarks)
and we don't want them to have to pull in EasyMock.

* CalciteTests no longer needs curator-x-discovery either.",2020-02-05T06:10:17Z
48b95f02f280d6ec496ec04fbf0f900460e73531,Remove unnecessary casts (#9208),2020-02-05T05:52:33Z
3ef5c2f2e87d07c48eccdcafd8c08ce9bf657162,"Add MemoryOpenHashTable, a table similar to ByteBufferHashTable. (#9308)

* Add MemoryOpenHashTable, a table similar to ByteBufferHashTable.

With some key differences to improve speed and design simplicity:

1) Uses Memory rather than ByteBuffer for its backing storage.
2) Uses faster hashing and comparison routines (see HashTableUtils).
3) Capacity is always a power of two, allowing simpler design and more
   efficient implementation of findBucket.
4) Does not implement growability; instead, leaves that to its callers.
   The idea is this removes the need for subclasses, while still giving
   callers flexibility in how to handle table-full scenarios.

* Fix LGTM warnings.

* Adjust dependencies.

* Remove easymock from druid-benchmarks.

* Adjustments from review.

* Fix datasketches unit tests.

* Fix checkstyle.",2020-02-05T03:58:00Z
0d2b16c1d06a46c4d862f7637f55bfc1dd1c7f41,"Speed up joins on indexed tables with string keys (#9278)

* Speed up joins on indexed tables with string keys

When joining on index tables with string keys, caching the computation
of row id to row numbers improves performance on the
JoinAndLookupBenchmark.joinIndexTableStringKey* benchmarks by about 10%
if the column cache is enabled an by about 100% if the column cache is
disabled.

* Faster cache impl and handle unknown cardinality

* Remove unused dependency

* Hoist cardinality check outside of hot loop

* Fix dummy DimensionSelector for tests",2020-02-05T01:34:55Z
868fdeb3848433beefdea5fb08784d61f9275d53,"GREATEST/LEAST post-aggregators in SQL (#8719)

* implement shell for greatest sql aggregator with hardcoded long values

* implement functional long greatest aggregator for direct access columns

* implement greatest & least sql aggregators for long & double types using abstract base class

* add javadocs, unit tests & handling for floats for greatest/least postaggregations

* minor checkstyle fix

* improve naming for the test cases

* make inner class static

* remove blank lines to retest travis build

* change trivial text to rerun travis build

* implement suggested updates for greatest/least sql aggs & fix checkstyle issues

* fix stale comments in greatest/least sql aggs abstract base

* Update sql.md

* improve sql function definitions for greatest/least sql aggs

* add more tests for greatest/least sql aggs

* add tests to cover invalid greatest/least sql expressions

* rename & reorder greatest least sql tests",2020-02-05T01:08:53Z
7e53f23f07b4d284f6219dfd5e87225b249d9931,"Web console: make supervisor reset really scary in the UI (#9253)

* make supervisor reset really scary

* change warnings

* add text",2020-02-04T23:33:52Z
556a3861ed6eca91c49e5827ddaca121a313943f,"Make docs on reset supervisor operation scarier (#9288)

* Update kafka-ingestion.md

Companion doc update to #9253, intended to make a supervisor reset scarier

* Update kinesis-ingestion.md",2020-02-04T23:30:32Z
768d60c7b405bca3ff71ac7fc062a0d0015fdb2d,"Get larger batch of input files when using native batch with google cloud (#9307)

By default native batch ingestion was only getting a batch of 10
files at a time when used with google cloud. The Default for other
cloud providers is 1024, and should be similar for google cloud.
The low batch size was caused by mistype. This change updates the
batch size to 1024 when using google cloud.",2020-02-04T20:03:32Z
5c541f556baf043f9c09b1ef9220490c8673d6cb,remove log.info from FixedBucketsHistogramAggregator aggregate method (#9309),2020-02-04T19:52:50Z
33a97dfaae00d88fb3001f55e1fa23211edc7640,"Guicify druid sql module (#9279)

* Guicify druid sql module

Break up the SQLModule in to smaller modules and provide a binding that
modules can use to register schemas with druid sql.

* fix some tests

* address code review

* tests compile

* Working tests

* Add all the tests

* fix up licenses and dependencies

* add calcite dependency to druid-benchmarks

* tests pass

* rename the schemas",2020-02-04T19:33:48Z
a085685182d62e5dd1b716f1bbb9bcbbaeb1c661,"Improve code quality and unit test coverage of the Azure extension (#9265)

* IMPLY-1946: Improve code quality and unit test coverage of the Azure extension

* Update unit tests to increase test coverage for the extension
* Clean up any messy code
* Enfore code coverage as part of tests.

* * Update azure extension pom to remove unnecessary things
* update jacoco thresholds

* * updgrade version of azure-storage library version uses to
  most upto-date version

* * exclude common libraries that are included from druid core

* * address review comments",2020-02-03T17:40:00Z
b411443d228c14de746311e09db28b437c2746a5,"SQL join support for lookups. (#9294)

* SQL join support for lookups.

1) Add LookupSchema to SQL, so lookups show up in the catalog.
2) Add join-related rels and rules to SQL, allowing joins to be planned into
   native Druid queries.

* Add two missing LookupSchema calls in tests.

* Fix tests.

* Fix typo.",2020-02-01T07:51:16Z
660f8838f4b3c313f8608ed5ccf35ae25920ab9e,"Allow HdfsDataSegmentKiller to be instantiated without storageDirectory set. (#9296)

This is important because if a user has the hdfs extension loaded, but is not
using hdfs deep storage, then they will not have storageDirectory set and will
get the following error:

  IllegalArgumentException: Can not create a Path from an empty string
    at io.druid.storage.hdfs.HdfsDataSegmentKiller.<init>(HdfsDataSegmentKiller.java:47)

This scenario is realistic: it comes up when someone has the hdfs extension
loaded because they want to use HdfsInputSource, but don't want to use hdfs for
deep storage.

Fixes #4694.",2020-02-01T07:50:48Z
4963a113dc4b48d6dfcac2eb12f39b0973095fc7,"Make JoinableFactoryModule tests look at all the actual mappings. (#9295)

By depending on JoinableFactoryModule.FACTORY_MAPPINGS, we verify that the bound
JoinableFactory can actually handle and create all default classes.",2020-02-01T01:15:38Z
0f0554f8fae79d3b26c8202eb42fcf6dfc5e5e26,LimitedSequence: Improve suppression comment. (#9298),2020-02-01T00:21:08Z
85d0d57fc9ac1b7661226460626b0ad04c23235d,Fix timestamp_format expr outside UTC timeZone. (#9282),2020-02-01T00:20:35Z
74ac9151c906119cd5ab6396ff1809110093a905,"Fix / suppress netty CVEs CVE-2019-20445 and CVE-2019-20444 (#9300)

* Suppress netty 3 vulnerabilites and upgrade netty 4 version

* Upgrade netty 4 version to fix vulnerabilities CVE-2019-20445
  and CVE-2019-20444
* suppress these CVEs for netty 3

* * simplify suppression xml file
* update licenses file with new version of netty

* * fix type in licenses.yaml",2020-01-31T22:51:54Z
7d91b8f281d3698a057608924c745a0b31c67560,"Suppress false-alarm inspection. (#9297)

I think a mid-air collision between #9260 and #9293 has led to
master being unable to pass insepctions in TeamCity. Hopefully
this fixes it.",2020-01-31T17:24:21Z
204ba9966f94d3e99be980ec9b2817eda0931ee2,"Add LookupJoinableFactory. (#9281)

* Add LookupJoinableFactory.

Enables joins where the right-hand side is a lookup. Includes an
integration test.

Also, includes changes to LookupExtractorFactoryContainerProvider:

1) Add ""getAllLookupNames"", which will be needed to eventually connect
   lookups to Druid's SQL catalog.
2) Convert ""get"" from nullable to Optional return.
3) Swap out most usages of LookupReferencesManager in favor of the
   simpler LookupExtractorFactoryContainerProvider interface.

* Fixes for tests.

* Fix another test.

* Java 11 message fix.

* Fixups.

* Fixup benchmark class.",2020-01-30T22:46:21Z
b856853f091209aa476af240eb29bda6370f288b,"Add Datasketch aggregator integration test (#9277)

* add datasketch integration test

* added datasketch integration tests",2020-01-30T21:50:33Z
07a91f90226da1eb56255b6a4e8f77cf5fd8d659,"Fix early return from YieldingSequenceBase#accumulate. (#9293)

Fixes #9291.",2020-01-30T20:01:18Z
6b44d4aa804997a47545b70ae44e83d3882bf819,"Add getRightEquiConditionKeys to JoinConditionAnalysis (#9287)

* Add getRightColumns to JoinConditionAnalysis

This change other implementations of JoinableFactory to ask the analysis
for the right key columns instead of having to calculate it themselves.

* Address some review comments

* more code review stuff",2020-01-30T06:31:29Z
a1494c30e04acca6e5515eacde1a030b57e7b50b,"Join microbenchmark (#9267)

Add microbenchmark for joins. Enabling the column cache improves
performance by ~70% for the benchmarks for joins with string keys.
Adjusting LookupJoinMatcher.matchCondition() to have fewer branches,
improves performance by ~10% for the benchmarks for joins with lookups.",2020-01-29T22:08:19Z
303b02eba16bb639e5adee37cc7ecbab89b00b64,"intelliJ inspections cleanup (#9260)

* intelliJ inspections cleanup

- remove redundant escapes
- performance warnings
- access static member via instance reference
- static method declared final
- inner class may be static

Most of these changes are aesthetic, however, they will allow inspections to
be enabled as part of CI checks going forward

The valuable changes in this delta are:
- using StringBuilder instead of string addition in a loop
    indexing-hadoop/.../Utils.java
    processing/.../ByteBufferMinMaxOffsetHeap.java
- Use class variables instead of static variables for parameterized test
    processing/src/.../ScanQueryLimitRowIteratorTest.java

* Add intelliJ inspection warnings as errors to druid profile

* one more static inner class",2020-01-29T19:50:52Z
6ee0afa8e5cdfd36409ef78b236bba085c40c892,Rename MapDataSourceJoinableFactoryWarehouse (#9275),2020-01-29T03:00:07Z
0ccfe5ca8980a8cbe57d00c2d560555d71e8fcdc,"Expose JoinableFactory through Guice Bindings (#9271)

* Make JoinableFactory an extension point

This change makes it so that extensions can register a JoinableFactory that
should be used for a DataSource.

Extensions can provide the factories via DruidBinders#joinableFactoryBinder
Known DataSources - like InlineDataSource are provided in the
JoinableFactoryModule. This module installs a FactoryWarehouse that is
used to decide which factory should be used to generate the Joinable for
the provided DataSource.

The ExtensionPoint is marked as Beta since it is not yet clear if this
needs to remain available to other extensions or if the best way to
register a factory is by using the datasource class.

* Add module test

* remove useless bindings in test

* remove ExtensionPoint annotation

* Make LifecycleLock not final to help with testing",2020-01-28T21:59:06Z
14253c63d699df523f246257d47ec2c7f64a98ac,removed AsyncQueryRunner since was only used by removed interval chunking stuff (#9252),2020-01-28T02:53:17Z
36c5efe2ab88e03b804eb20bf1f138fae2ef1cf9,"fix some issues with filters on numeric columns with nulls (#9251)

* fix issue with long column predicate filters and nulls

* dang

* uncomment a thing

* styles

* oops

* allcaps

* review stuff",2020-01-28T02:01:01Z
b9186f8f9ff2ff52aceda42bc5f24ffd47a7d17e,"Reconcile terminology and method naming to 'used/unused segments'; Rename MetadataSegmentManager to MetadataSegmentsManager (#7306)

* Reconcile terminology and method naming to 'used/unused segments'; Don't use terms 'enable/disable data source'; Rename MetadataSegmentManager to MetadataSegments; Make REST API methods which mark segments as used/unused to return server error instead of an empty response in case of error

* Fix brace

* Import order

* Rename withKillDataSourceWhitelist to withSpecificDataSourcesToKill

* Fix tests

* Fix tests by adding proper methods without interval parameters to IndexerMetadataStorageCoordinator instead of hacking with Intervals.ETERNITY

* More aligned names of DruidCoordinatorHelpers, rename several CoordinatorDynamicConfig parameters

* Rename ClientCompactTaskQuery to ClientCompactionTaskQuery for consistency with CompactionTask; ClientCompactQueryTuningConfig to ClientCompactionTaskQueryTuningConfig

* More variable and method renames

* Rename MetadataSegments to SegmentsMetadata

* Javadoc update

* Simplify SegmentsMetadata.getUnusedSegmentIntervals(), more javadocs

* Update Javadoc of VersionedIntervalTimeline.iterateAllObjects()

* Reorder imports

* Rename SegmentsMetadata.tryMark... methods to mark... and make them to return boolean and the numbers of segments changed and relay exceptions to callers

* Complete merge

* Add CollectionUtils.newTreeSet(); Refactor DruidCoordinatorRuntimeParams creation in tests

* Remove MetadataSegmentManager

* Rename millisLagSinceCoordinatorBecomesLeaderBeforeCanMarkAsUnusedOvershadowedSegments to leadingTimeMillisBeforeCanMarkAsUnusedOvershadowedSegments

* Fix tests, refactor DruidCluster creation in tests into DruidClusterBuilder

* Fix inspections

* Fix SQLMetadataSegmentManagerEmptyTest and rename it to SqlSegmentsMetadataEmptyTest

* Rename SegmentsAndMetadata to SegmentsAndCommitMetadata to reduce the similarity with SegmentsMetadata; Rename some methods

* Rename DruidCoordinatorHelper to CoordinatorDuty, refactor DruidCoordinator

* Unused import

* Optimize imports

* Rename IndexerSQLMetadataStorageCoordinator.getDataSourceMetadata() to retrieveDataSourceMetadata()

* Unused import

* Update terminology in datasource-view.tsx

* Fix label in datasource-view.spec.tsx.snap

* Fix lint errors in datasource-view.tsx

* Doc improvements

* Another attempt to please TSLint

* Another attempt to please TSLint

* Style fixes

* Fix IndexerSQLMetadataStorageCoordinator.createUsedSegmentsSqlQueryForIntervals() (wrong merge)

* Try to fix docs build issue

* Javadoc and spelling fixes

* Rename SegmentsMetadata to SegmentsMetadataManager, address other comments

* Address more comments",2020-01-27T19:24:29Z
c6c8b8064425f93a5bf74cc7ee6a207cab406b09,"fix build by updating kafka client to 2.2.2 for CVE-2019-12399 (#9259)

* fix build by updating kafka client to 2.2.2 for CVE-2019-12399

* one kafka version to rule them all

* notice",2020-01-27T19:07:02Z
20eb201d00da776f1532bf2bbed65ad6624df397,Fix DRUID_CONFIG to DRUID_CONFIG_COMMON (#9193),2020-01-27T10:52:01Z
19b427e8f371bed0b0100272ac890b3775471654,"Add JoinableFactory interface and use it in the query stack. (#9247)

* Add JoinableFactory interface and use it in the query stack.

Also includes InlineJoinableFactory, which enables joining against
inline datasources. This is the first patch where a basic join query
actually works. It includes integration tests.

* Fix test issues.

* Adjustments from code review.",2020-01-24T21:10:01Z
3daf0f8e12d3882fdd84978fc13099531b4757a7,"Update ingestion-view.tsx (#9250)

Grammar and accuracy updates.",2020-01-24T09:21:55Z
f0f68570ec1e897348ab7c2825c7063e1330355e,"Use DataSourceAnalysis throughout the query stack. (#9239)

Builds on #9235, using the datasource analysis functionality to replace various ad-hoc
approaches. The most interesting changes are in ClientQuerySegmentWalker (brokers),
ServerManager (historicals), and SinkQuerySegmentWalker (indexing tasks).

Other changes related to improving how we analyze queries:

1) Changes TimelineServerView to return an Optional timeline, which I thought made
   the analysis changes cleaner to implement.
2) Added QueryToolChest#canPerformSubquery, which is now used by query entry points to
   determine whether it is safe to pass a subquery dataSource to the query toolchest.
   Fixes an issue introduced in #5471 where subqueries under non-groupBy-typed queries
   were silently ignored, since neither the query entry point nor the toolchest did
   anything special with them.
3) Removes the QueryPlus.withQuerySegmentSpec method, which was mostly being used in
   error-prone ways (ignoring any potential subqueries, and not verifying that the
   underlying data source is actually a table). Replaces with a new function,
   Queries.withSpecificSegments, that includes sanity checks.",2020-01-23T22:07:14Z
479c09751cc854910e55971c86a32ff51d4b52ff,"Add MostAvailableSizeStorageLocationSelectorStrategy (#8879)

* Add MostAvailableSize LocationSelectorStrategy

* Add doc for mostAvailableSize strategy

* Fix docs for mostAvailableSize",2020-01-23T21:42:03Z
83ddc8de1e96fe6b9d0654c3ba635eac190d13c5,"Update data-formats.md (#9238)

* Update data-formats.md

Field error and light rewording of new Avro material (and working through the doc authoring process).

* Update data-formats.md

Make default statements consistent. Future change: s/=/is.",2020-01-22T23:00:53Z
d886463253e1f537e32b8aedac60c8ee741f6cc7,"Add join-related DataSource types, and analysis functionality. (#9235)

* Add join-related DataSource types, and analysis functionality.

Builds on #9111 and implements the datasource analysis mentioned in #8728. Still can't
handle join datasources, but we're a step closer.

Join-related DataSource types:

1) Add ""join"", ""lookup"", and ""inline"" datasources.
2) Add ""getChildren"" and ""withChildren"" methods to DataSource, which will be used
   in the future for query rewriting (e.g. inlining of subqueries).

DataSource analysis functionality:

1) Add DataSourceAnalysis class, which breaks down datasources into three components:
   outer queries, a base datasource (left-most of the highest level left-leaning join
   tree), and other joined-in leaf datasources (the right-hand branches of the
   left-leaning join tree).
2) Add ""isConcrete"", ""isGlobal"", and ""isCacheable"" methods to DataSource in order to
   support analysis.

Other notes:

1) Renamed DataSource#getNames to DataSource#getTableNames, which I think is clearer.
   Also, made it a Set, so implementations don't need to worry about duplicates.
2) The addition of ""isCacheable"" should work around #8713, since UnionDataSource now
   returns false for cacheability.

* Remove javadoc comment.

* Updates reflecting code review.

* Add comments.

* Add more comments.",2020-01-22T22:54:47Z
d541cbe436bf97779a03eca0ec848fe911768884,"Support both IndexTuningConfig and ParallelIndexTuningConfig for compaction task (#9222)

* Support both IndexTuningConfig and ParallelIndexTuningConfig for compaction task

* tuningConfig module

* fix tests",2020-01-21T21:56:54Z
0b0056b77f4c071bc1005844e09fe6a559a78423,"More tests for range partition parallel indexing (#9232)

Add more unit tests for range partition native batch parallel indexing.

Also, fix a bug where ParallelIndexPhaseRunner incorrectly thinks that
identical collected DimensionDistributionReports are not equal due to
not overriding equals() in DimensionDistributionReport.",2020-01-21T20:59:43Z
a2939bbd1acc1dbda89ca0c4d5a7d82b3c15f025,"Optimize JoinCondition matching (#9200)

* Optimize JoinCondition matching

The LookupJoinMatcher needs to check if a condition is always true or false
multiple times. This can be pre-computed to speed up the match checking

This change reduces the time it takes to perform a for joining on a long key
from ~ 36 ms/op to 23 ms/ op

* Rename variables

* fix typo",2020-01-21T17:11:50Z
f511af1306cb200657ff2524b693fbacc6d3b5a9,"Fix DOCKER_HOST_IP handling for multihomed machines. (#9225)

By picking one. Otherwise, when a machine has multiple IP addresses, DOCKER_HOST_IP
would have a newline in the middle, causing havoc in configuration files.",2020-01-21T17:01:19Z
8011211a0ca26ae6fd221e3dfcaf64119609c120,"first/last aggregators and nulls (#9161)

* null handling for numeric first/last aggregators, refactor to not extend nullable numeric agg since they are complex typed aggs

* initially null or not based on config

* review stuff, make string first/last consistent with null handling of numeric columns, more tests

* docs

* handle nil selectors, revert to primitive first/last types so groupby v1 works...",2020-01-20T19:51:54Z
180c622e0fc93f35e01b19a30c51166f8ac83c4b,"Minor doc updates (#9217)

* update string first last aggs

* update kafka ingestion specs in docs

* remove unnecessary parser spec",2020-01-20T19:34:37Z
d21054f7c5f72f9db1ecfb72b46ee866876f1e4b,"Remove the deprecated interval-chunking stuff. (#9216)

* Remove the deprecated interval-chunking stuff.

See https://github.com/apache/druid/pull/6591, https://github.com/apache/druid/pull/4004#issuecomment-284171911 for details.

* Remove unused import.

* Remove chunkInterval too.",2020-01-20T01:14:23Z
d64bed79f0d1a9aa65815d420f27bd73ac5d5cdd,"Update docs for extensions (#9218)

* Update docs for s3 and avro extensions

* More doc updates - google + cleanup",2020-01-19T20:55:45Z
df3c1075a8e7f352e21e7abbe5b048e166bd8bd5,"Update docs for extensions (#9218)

* Update docs for s3 and avro extensions

* More doc updates - google + cleanup",2020-01-19T20:55:01Z
bade2c802b7583855b59a7fce7cf0db103a0b68e,"Update docs for extensions (#9218)

* Update docs for s3 and avro extensions

* More doc updates - google + cleanup",2020-01-19T20:53:21Z
f98b664bb0a6b584cd6e48ebe4647364828013fc,"Update docs for extensions (#9218)

* Update docs for s3 and avro extensions

* More doc updates - google + cleanup",2020-01-19T20:52:49Z
de231d3c80d22c1c86af9d7d7dc1f6945761cf45,"Update docs for extensions (#9218)

* Update docs for s3 and avro extensions

* More doc updates - google + cleanup",2020-01-19T20:50:06Z
93167188ea9c8b3abe1469c41ed28bf93fcc5d65,"Update docs for extensions (#9218)

* Update docs for s3 and avro extensions

* More doc updates - google + cleanup",2020-01-19T20:49:33Z
f0dddaa51aef07aec59dc1dc60ace3543945e3bf,"fix topn aggregation on numeric columns with null values (#9183)

* fix topn issue with aggregating on numeric columns with null values

* adjustments

* rename

* add more tests

* fix comments

* more javadocs

* computeIfAbsent",2020-01-18T02:12:24Z
153495068b89b77bb0bcc5c8dd57c14168ec026e,"Doc update for the new input source and the new input format (#9171)

* Doc update for new input source and input format.

- The input source and input format are promoted in all docs under docs/ingestion
- All input sources including core extension ones are located in docs/ingestion/native-batch.md
- All input formats and parsers including core extension ones are localted in docs/ingestion/data-formats.md
- New behavior of the parallel task with different partitionsSpecs are documented in docs/ingestion/native-batch.md

* parquet

* add warning for range partitioning with sequential mode

* hdfs + s3, gs

* add fs impl for gs

* address comments

* address comments

* gcs",2020-01-17T23:52:05Z
84ff0d2352bfb542b03e621440fbee335f09f00d,"Fix TSV bugs (#9199)

* working

* - support multi-char delimiter for tsv
- respect ""delimiter"" property for tsv

* default value check for findColumnsFromHeader

* remove CSVParser to have a true and only CSVParser

* fix tests

* fix another test",2020-01-17T23:35:14Z
936b9bdfd0e5791d2956ddc6c356fce186ff8302,add deets about the keyfile (#9209),2020-01-17T19:24:49Z
12b84cfb333e6c44d54213a74fcb69c08ec30515,Bump Jackson to 2.10.2 (#9173),2020-01-17T10:39:32Z
ab2672514b306243b8b72d64e7419fd8e8a18fe4,allow empty values to be set in the auto form (#9198),2020-01-17T05:06:51Z
68ed2a2c8fd1337d87f8fcb62ce1f91701b8e472,"Fix LATEST / EARLIEST Buffer Aggregator does not work on String column  (#9197)

* fix buff limit bug

* add tests

* add test

* add tests

* fix checkstyle",2020-01-17T05:02:37Z
448da787654ef6ebcab7bb5cba340b931c454320,"Speed up String first/last aggregators when folding isn't needed. (#9181)

* Speed up String first/last aggregators when folding isn't needed.

Examines the value column, and disables fold checking via a needsFoldCheck
flag if that column can't possibly contain SerializableLongStringPairs. This
is helpful because it avoids calling getObject on the value selector when
unnecessary; say, because the time selector didn't yield an earlier or later
value.

* PR comments.

* Move fastLooseChop to StringUtils.",2020-01-17T05:02:02Z
486c0fd149d9837a64550ecb9e85d9b6cd4beb24,"Bump Apache Parquet to 1.11.0 (#9129)

* Bump Parquet to 1.11.0

* Update licenses.yaml

* Add parquet-format-structures",2020-01-17T00:24:25Z
bd49ec03bcb16930e4c25eab2d62c17b177724e3,"Move result-to-array logic from SQL layer into QueryToolChests. (#9130)

* Move result-to-array logic from SQL layer into QueryToolChests.

* Checkstyle adjustment.

* Fix typo.",2020-01-16T23:42:10Z
bfcb30e48fe4af06c9b96d811ba4f5a74a832b72,"Add javadocs and small improvements to join code. (#9196)

A follow-up to #9111.",2020-01-16T23:25:38Z
42359c93dd53f16e52ed79dcd8b63829f4bf2f7b,"Implement ANY aggregator (#9187)

* Implement ANY aggregator

* Add copyright headers

* Add unit tests

* fix BufferAggregator

* Fix bug in BufferAggregator

* hook up the SQL command

* add check for buffer aggregator

* Address comment

* address comments

* add docs

* Address comments

* add more tests for numeric columns that have null values when run in sql compatible null mode

* fix checkstyle errors

* fix failing tests

* fix failing tests",2020-01-16T22:40:32Z
a87db7f353cdee4dfa9b541063f59d67706d1b07,"Add HashJoinSegment, a virtual segment for joins. (#9111)

* Add HashJoinSegment, a virtual segment for joins.

An initial step towards #8728. This patch adds enough functionality to implement a joining
cursor on top of a normal datasource. It does not include enough to actually do a query. For
that, future patches will need to wire this low-level functionality into the query language.

* Fixups.

* Fix missing format argument.

* Various tests and minor improvements.

* Changes.

* Remove or add tests for unused stuff.

* Fix up package locations.",2020-01-16T21:14:20Z
09efd20b4209e014aaf20b61429105f8658d8d49,fix refresh button (#9195),2020-01-16T18:13:47Z
92ac22d06006d8397baafe45aa7cfeb45bfa15e3,"Link javaOpts to middlemanager runtime.properties docs (#9101)

* Link javaOpts to middlemanager runtime.properties docs

* fix broken link

* reword config links",2020-01-16T05:22:49Z
85a3d416b000e2e7378c9cd92c71f1c1815f6fb8,"Tutorials use new ingestion spec where possible (#9155)

* Tutorials use new ingestion spec where possible

There are 2 main changes
  * Use task type index_parallel instead of index
  * Remove the use of parser + firehose in favor of inputFormat + inputSource

index_parallel is the preferred method starting in 0.17. Setting the job to
index_parallel with the default maxNumConcurrentSubTasks(1) is the equivalent
of an index task

Instead of using a parserSpec, dimensionSpec and timestampSpec have been
promoted to the dataSchema. The format is described in the ioConfig as the
inputFormat.

There are a few cases where the new format is not supported
 * Hadoop must use firehoses instead of the inputSource and inputFormat
 * There is no equivalent of a combining firehose as an inputSource
 * A Combining firehose does not support index_parallel

* fix typo",2020-01-15T22:08:29Z
4716e0b5857cebaee50cf999f679941d8b2fff1a,Fix concurrency of ComplexMetrics.java (#9134),2020-01-15T14:19:45Z
b2877119d07a973b19aa48cb1e278779bf88e874,"Suppress CVE-2019-20330 for htrace-core-4.0.1 (#9189)

CVE-2019-20330 was updated on 14 Jan 2020, which now gets flagged by the
security vulnerability scan. Since the CVE is for jackson-databind, via
htrace-core-4.0.1, it can be added to the existing list of security
vulnerability suppressions for that dependency.",2020-01-15T05:15:24Z
1fd05bef9ab978641359b3d82108fb86efe15041,"Add jackson-mapper-asl for hdfs-storage extension (#9178)

Previously jackson-mapper-asl was excluded to remove a security
vulnerability; however, it is required for functionality (e.g.,
org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator).",2020-01-14T17:50:45Z
ea51bc45bff8b0b5c373d1121fa88b6d507fcabe,Fix nullhandling in tests (#9119),2020-01-13T04:19:12Z
b642b1aa5bf613be745a4a9abfe5752100d6cebe,"Fix deserialization of maxBytesInMemory (#9092)

* Fix deserialization of maxBytesInMemory

* Add maxBytes check",2020-01-13T04:08:07Z
85219ece136fddd258c4110e55d45b1c36fc8b2a,"fix null handling for arithmetic post aggregator comparator (#9159)

* fix null handling for arithmetic postagg comparator, add test for comparator for min/max/quantile postaggs in histogram ext

* fix",2020-01-10T21:49:19Z
8c53818fa9e4efabce8ef7745bba1cd2c044ffb4,"Add numeric nulls to sample data, fix some numeric null handling issues (#9154)

* Fix LongSumAggregator comparator null handling

* Remove unneeded GroupBy test change

* Checkstyle

* Update other processing tests for new sample data

* Remove unused code

* Fix SearchQueryRunner column selectors

* Fix DimensionIndexer null handling and ScanQueryRunnerTest

* Fix TeamCity errors",2020-01-10T21:49:06Z
f245292e5d22cf1485df4cd7084ccd8edfb5c046,add middle manager and indexer worker category to tier column of services view (#9158),2020-01-09T20:20:42Z
e27a1e8604cfad395f8c0123e777eb0e1ec03199,"Fix handling nullable writableComparable in OrcStructConverter (#9138)

* Handle nullable writableComparable in OrcStructConverter

* add missing dependency",2020-01-08T21:40:24Z
7439f73c234aa8a3b9047fb63b4051606bbaf7e5,web console services tab treat indexer as a real service (#9139),2020-01-08T02:14:04Z
28edd3b44ef9ad4eaf35b7ff834913d5daad2048,data loader style fix for double typed columns (#9137),2020-01-08T00:07:30Z
d1500c1328d908f4a44dd8061e1ce48b0543b727,Update Kinesis resharding information about task failures (#9104),2020-01-07T23:44:48Z
f5402169319737381d005ab9a69a84c3857d4ba1,fix InputFormat serde issue with SeekableStream based supervisors (#9136),2020-01-07T22:18:54Z
c248e009841e5464eb7ec0c53246af67accf78ea,fix moment sketch null handling (#9075),2020-01-07T20:15:59Z
7af85250cb3e3b27752136e13c4d385ce448913b,"null handling for doubles sketch and array of doubles sketch aggs (#9112)

* doubles sketch and array of doubles sketch aggs now skip rows with nulls in sql compatible null handling mode

* formatting",2020-01-07T20:15:32Z
14702429a0937f02030d23523a9a4edd724e1624,fix web console data loader dimension types (#9135),2020-01-07T04:56:58Z
58d337186bea12d96e464bf70c19957dca88383d,"Graduation update for ASF release process guide and download links (#9126)

* Graduation update for ASF release process guide and download links

* Fix release vote thread typo

* Fix pom.xml",2020-01-06T21:00:33Z
66657012bf50c42b5d847a379f33f8a5bdda2dda,"Replace CaseFilteredAggregatorRule with Calcite equivalent. (#9113)

AggregateCaseToFilterRule was added to Calcite in https://issues.apache.org/jira/browse/CALCITE-3144,
and was originally copied from Druid's CaseFilteredAggregatorRule. So there isn't a good reason to
keep using our version.",2020-01-05T03:11:18Z
bdd0d0d8a50f0b27e5b54cd8c88596b3cffbbd9f,"Add avro dependency to parquet extension (#9124)

* Add avro dependency to parquet extension

If the parquet extension is loaded and an ingestionSpec uses the older format
specifying a 'parser' instead of using an 'inputFormat' the job fails
with the following error

java.lang.TypeNotPresentException: Type org.apache.avro.generic.GenericRecord not present

This change removes the exclusion of the avro package so that the missing
class can be found.

* Address review comments and add dependency version",2020-01-04T02:11:13Z
aa539177ec67184cdc13516e5508551c9913eb0c,"De-incubation cleanup in code, docs, packaging (#9108)

* De-incubation cleanup in code, docs, packaging

* remove unused docs script",2020-01-03T17:33:19Z
eb124a3068fffc7d2587700f0c5693496dfd539f,"Fix DistinctCountGroupByQueryTest Y2020 bug. (#9120)

It used data with the current timestamp alongside a query that had an end
instant of 2020-01-01.",2020-01-03T02:10:32Z
4e8368a5d98b13738223f138e1b0703a43e5240c,Set version to 0.18.0-SNAPSHOT (#9109),2020-01-02T22:55:10Z
18eb456fe6190e6db5d8e76324cc7b83cc4e0a35,"S3: Improvements to prefix listing (including fix for an infinite loop) (#9098)

* S3: Improvements to prefix listing (including fix for an infinite loop)

1) Fixes #9097, an infinite loop that occurs when more than one batch
   of objects is retrieved during a prefix listing.

2) Removes the Access Denied fallback code added in #4444. I don't think
   the behavior is reasonable: its purpose is to fall back from a prefix
   listing to a single-object access, but it's only activated when the
   end user supplied a prefix, so it would be better to simply fail, so
   the end user knows that their request for a prefix-based load is not
   going to work. Presumably the end user can switch from supplying
   'prefixes' to supplying 'uris' if desired.

3) Filters out directory placeholders when walking prefixes.

4) Splits LazyObjectSummariesIterator into its own class and adds tests.

* Adjust S3InputSourceTest.

* Changes from review.

* Include hamcrest-core.",2020-01-01T00:06:49Z
dec619ebf4972fb59257b31649a4d416319b00a2,"Optimize CachingLocalSegmentAllocator#getSequenceName (#8909)

* Optimize CachingLocalSegmentAllocator#getSequenceName

Replace StringUtils#format with string addition to generate the sequence
name for an interval and partition. This is faster because format uses a
Matcher under the covers to replace the string format with the variables.

* fix imports and add test

* Add comment about optimization

* Use renamed function for TaskToolbox

* Move tests after refactor

* Rename tests",2019-12-24T02:33:22Z
320c50d24a1932cc7b3dfb12417f244b1defd73f,"Web console: fix spec reset (#9081)

* extract spec type

* better text

* better copy

* de incubate the console

* fix status dialog scss",2019-12-24T02:23:14Z
9ec9619143dcff4106b032cef6497489cc9ac88c,"Handle null values for metrics in TDigest aggregators. (#9073)

Add support for rollup during ingestion.",2019-12-24T01:49:06Z
a24e2f347f75485ce20dbd1a8b62a23f717cf755,make supervisor statistics dialog more robust (#9089),2019-12-24T01:43:08Z
7a7c948595aba062dc36ed40fa1f98724d092bbd,Exclude .asf.yaml from the configuration of the rat plugin (#9088),2019-12-23T21:08:23Z
2231e69b7f7e66e335ce0aeb1e54b6015a4c395e,Update README.md,2019-12-21T04:56:53Z
513bb1f6da56d6fe3120d376669309e6d1aaff67,"Get proper Kinesis index task AWS credentials (#9082)

Previously, the configured S3 credentials would be used instead of the
ones configured for Kinesis for Kinesis index tasks.",2019-12-21T03:35:05Z
342107b4c2e816930c261bb96575679ca2513094,"Add .asf.yaml. (#9083)

Based on the docs at https://cwiki.apache.org/confluence/display/INFRA/.asf.yaml+features+for+git+repositories.",2019-12-21T00:45:38Z
8ccce9857a472ffa2f8679e972cf6c09314d4d0f,"fix vectorized query engine numeric filter matchers against null values (#9063)

* fix druid-sql issue with filtering numeric columns by null values

* fix vector numeric column matchers to check null vector for null matches",2019-12-20T21:15:48Z
60d896a67c6bccd9c4b04343d63909d8da4e0fd7,Update README.md,2019-12-20T06:32:08Z
c2e9ab810090efdc876c982a8c8676610532d956,"benchmark schema with numeric dimensions and null column values (#9036)

* benchmark schema with null column values

* oops

* adjustments

* rename again, different null percentage so rows more variety

* more schema",2019-12-20T01:45:19Z
3c31493772a9fd9318cd16aa480e234f2f6f4104,"Add missing docs for http client configurations (#9054)

* Add missing docs for http client configurations

* fix typo

* backticks",2019-12-20T01:41:04Z
3c134441671df22c136f4050779b4e1c4fd2a213,"Fix flaky ITBasicAuthConfigurationTest (#9072)

This test was failing to authenticate using the admin credentials. These
should be available by default in the metadata store. This indicates that
the credentials are not successfully being syncd before the test is run.

This change increases the number of retries to 20 so that the services
are syncd before the test runs",2019-12-20T01:38:55Z
176bc8fd97a63e129a3c72053edd6308752f35e3,"Remove resolve-ip dependency for integration-tests (#9065)

* Remove resolve-ip dependency for integration-tests

* use host hostname and fallback to dscacheutil

* better shell script comparisons",2019-12-19T22:53:36Z
256b8f69b6fda0857b649dbafe6d3adc8d768f3e,Update README.md (#9078),2019-12-19T21:00:27Z
d20d2ff71d74a58fd7f29cfc0f39fe041e4d27ac,Update README.md (#9077),2019-12-19T19:54:14Z
de18f76c8b74e7d8c2a28cfeb2938731297d0185,"Update README.md (#9074)

Updates to readme",2019-12-19T19:39:27Z
84ef8b819e961cf9e2684197c534875e82bf3461,"fix druid-sql issue with filtering numeric columns by null values (#9061)

* fix druid-sql issue with filtering numeric columns by null values

* fix tests

* fix tests for reals",2019-12-18T21:30:34Z
94a23fb17ee000908b2c1630515be6ffa82a19b0,"Fix flaky realtime index task tests (#8999)

* Fix flaky realtime index task tests

* fix ITAppenderatorDriverRealtimeIndexTaskTest

* fix comment

* address comments",2019-12-18T21:25:00Z
15884f6d10649916f1b25c1821788c4628dcba55,Fix hadoop ingestion property handling when using indexers (#9059),2019-12-18T20:13:19Z
b1547a76b14db64f307b9fba8459004b6e13e23d,Update GPG key instructions for ASF release guide (#9006),2019-12-18T20:12:48Z
1fb93d56c3abaad226bd85afbf417b0d5bd69f41,"Add instructions to backport a PR (#9052)

* Add instructions to backport a PR

* Clearer image

* Add period in backport instructions",2019-12-18T19:57:01Z
6178f05da6ad86337c8bf83e0360bb66f5ffaa39,"Fail superbatch range partition multi dim values (#9058)

* Fail superbatch range partition multi dim values

Change the behavior of parallel indexing range partitioning to fail
ingestion if any row had multiple values for the partition dimension.
After this change, the behavior matches that of hadoop indexing.
(Previously, rows with multiple dimension values would be skipped.)

* Improve err msg, rename method, rename test class",2019-12-18T18:14:03Z
131b3f13be2b1654fbef7be3b9da2d386e9ee005,Skip non-Apache repo PRs in milestone tagging script (#9064),2019-12-18T02:28:11Z
e7b1653d88930e247aa5b9a14c7f393406c5e15e,add button to reapply retention rules (#9055),2019-12-18T02:08:57Z
24be55834785f2c9a9240c7c739e7bcf470fed69,"Fix NPE for subquery with limit (#8775)

* Fix NPE for subquery with limit

* Mark it as unplannable by returning null

* Migrate testcases from SqlResourceTest to CalciteQueryTest

* Throw CannotBuildQueryException

* Fix typo

* Patch comments",2019-12-17T18:21:12Z
301c0649a718205aff4b9e5aea64fa61721dbcc8,"Fix equalsAndHashCode in ClientCompactQueryTuningConfig (#9035)

* Fix equalsAndHashCode in ClientCompactQueryTuningConfig

This change introduces a dependency to EqualsVerifier for the test scope.
The dependency is licensed under Apache 2. The library makes it trivial
to add equals and hashCode checks to prevent bugs like this from happening
in the future

* fix checkstyle

* fix test name",2019-12-16T22:33:00Z
298425a33abacfe3ceda8e884548a5aacc44ade5,Fix handling interruptedException in resource pool (#9044),2019-12-16T17:41:13Z
bc16ff5e7cbbe980d17dd106ac0324e057890739,"sql auto limit wrapping fix (#9043)

* sql auto limit wrapping fix

* fix tests and style

* remove setImportance",2019-12-16T09:38:24Z
6881535b48272c795be501143e9cbf9ba6290737,docs - clarify cache parameters (#9020),2019-12-14T00:53:45Z
d452cbbb821a872a703453cd4ba22ac77f7737dc,GenericIndexedWriter: Fix issue when writing large values to large columns. (#9029),2019-12-13T23:33:14Z
3325da17189ae308350b83f7faf165925ccb6f94,"Allow startup scripts to specify java home (#9021)

* Allow startup scripts to specify java home

The startup scripts now look for java in 3 locations. The order is from
most related to druid to least, ie
    ${DRUID_JAVA_HOME}
    ${JAVA_HOME}
    ${PATH}

* Update fn names and clean up code

* final round of fixes

* fix spellcheck",2019-12-13T05:36:00Z
41f30e53a6b9eb20e9c9694857bd0f8f7ae3812c,"[bugfix]fix getAvgSizePerGranularity logic in DerivativeDataSourceManager(materializedview) (#8929)

* fix getAvgSizePerGranularity in DerivativeDataSourceManager

* revert

* redo",2019-12-13T01:27:02Z
9236dd9467d5d941159a2e10c0de8fae13f3f55e,"optionally enable Jetty ForwardedRequestCustomizer (#9010)

* optionally enable Jetty ForwardedRequestCustomizer

* fix doc build",2019-12-13T01:00:08Z
45101183bc76639c86e4eaa59cbf401f6fe90c18,"HRTR: make pending task execution handling to go through all tasks on not finding worker slots (#8697)

* HRTR: make pending task execution handling to go through all tasks on
not finding worker slots

* make HRTR methods package private that are meant to be used only in HttpRemoteTaskRunnerResource

* mark HttpRemoteTaskRunnerWorkItem.State global variables final

* hrtr: move immutableWorker NULL check outside of try-catch or finally block could have NPE

* add some explanatory comments

* add comment on explaining mechanics around hand off of pending tasks from submission to it getting picked up by a task execution thread

* fix spelling",2019-12-12T22:58:52Z
810b85a352a056adea4403286341e4f3458add1d,"allow druid.host to be undefined to use canonical hostname (#9019)

It is currently not possible to unset the druid.host property in the docker image to let Druid default to the canonical hostname. It always gets set to the container's IP address. Passing the override environment variable druid_host= unfortunately does not solve the problem, as this gets interpreted as empty string and does not let the default kick in.

This change adds the option to pass DRUID_SET_HOST=0 as environment variable to disable the default behavior, and allows passing a common runtime.properties file without druid.host.",2019-12-12T21:51:57Z
13c33c176633481aede7a76d5a74ea326772c705,Update architecture.md (#9015),2019-12-12T03:05:50Z
66056b282620e82fa464d79b0f76b1687b92530e,"Using annotation to distinguish Hadoop Configuration in each module (#9013)

* Multibinding for NodeRole

* Fix endpoints

* fix doc

* fix test

* Using annotation to distinguish Hadoop Configuration in each module",2019-12-12T01:30:44Z
e5e1e9c4eed5aa844911454a24d712390f690945,"Fix broken master (#9005)

* Multibinding for NodeRole

* Fix endpoints

* fix doc

* fix test",2019-12-11T23:56:36Z
8af41d7cd03d25697db464b757de0d28d2fe8473,Update version to 0.18.0-incubating-SNAPSHOT (#9009),2019-12-11T22:04:03Z
24fe824055b8e7cca4288bcbe96aa63b02a5b10f,add readiness endpoints to processes having initialization delays (#8841),2019-12-11T01:26:13Z
3de7ab852358bb0065abc63723cc178167ac2787,"DataSketches jars in core (#9003)

Having DataSketches jars in core will allow potential improvements, for
example:
- Provide an alternative implementation of HLL:
  https://datasketches.github.io/docs/HLL/HllSketchVsDruidHyperLogLogCollector.html
- Range partitioning for native parallel batch indexing without having
  the user load extensions on the classpath

Dev mailing list discussion:
https://lists.apache.org/thread.html/301410d71ff799cf616bf17c4ebcf9999fc30829f5fa62909f403e6c%40%3Cdev.druid.apache.org%3E",2019-12-10T22:02:34Z
bab78fc80e8ee2929d6d2c277d3999695c8402a4,"Parallel indexing single dim partitions (#8925)

* Parallel indexing single dim partitions

Implements single dimension range partitioning for native parallel batch
indexing as described in #8769. This initial version requires the
druid-datasketches extension to be loaded.

The algorithm has 5 phases that are orchestrated by the supervisor in
`ParallelIndexSupervisorTask#runRangePartitionMultiPhaseParallel()`.
These phases and the main classes involved are described below:

1) In parallel, determine the distribution of dimension values for each
   input source split.

   `PartialDimensionDistributionTask` uses `StringSketch` to generate
   the approximate distribution of dimension values for each input
   source split. If the rows are ungrouped,
   `PartialDimensionDistributionTask.UngroupedRowDimensionValueFilter`
   uses a Bloom filter to skip rows that would be grouped. The final
   distribution is sent back to the supervisor via
   `DimensionDistributionReport`.

2) The range partitions are determined.

   In `ParallelIndexSupervisorTask#determineAllRangePartitions()`, the
   supervisor uses `StringSketchMerger` to merge the individual
   `StringSketch`es created in the preceding phase. The merged sketch is
   then used to create the range partitions.

3) In parallel, generate partial range-partitioned segments.

   `PartialRangeSegmentGenerateTask` uses the range partitions
   determined in the preceding phase and
   `RangePartitionCachingLocalSegmentAllocator` to generate
   `SingleDimensionShardSpec`s.  The partition information is sent back
   to the supervisor via `GeneratedGenericPartitionsReport`.

4) The partial range segments are grouped.

   In `ParallelIndexSupervisorTask#groupGenericPartitionLocationsPerPartition()`,
   the supervisor creates the `PartialGenericSegmentMergeIOConfig`s
   necessary for the next phase.

5) In parallel, merge partial range-partitioned segments.

   `PartialGenericSegmentMergeTask` uses `GenericPartitionLocation` to
   retrieve the partial range-partitioned segments generated earlier and
   then merges and publishes them.

* Fix dependencies & forbidden apis

* Fixes for integration test

* Address review comments

* Fix docs, strict compile, sketch check, rollup check

* Fix first shard spec, partition serde, single subtask

* Fix first partition check in test

* Misc rewording/refactoring to address code review

* Fix doc link

* Split batch index integration test

* Do not run parallel-batch-index twice

* Adjust last partition

* Split ITParallelIndexTest to reduce runtime

* Rename test class

* Allow null values in range partitions

* Indicate which phase failed

* Improve asserts in tests",2019-12-10T07:05:49Z
a6dcc9996284b8d8acb2a3681f7a65b0193ac660,better input format detection (#9007),2019-12-10T06:31:28Z
4327892b84dcb2e96e58017d5238afcc80c81a5b,modify multi-value expression transformation behavior to not treat re-use of the same input as a candidate for cartesian mapping (#8957),2019-12-10T04:38:15Z
03307447932ffb57935cb0761b2cf173f6c8989e,"Docs: bold Java 8 requirement (#8996)

* bold Java 8 req

* add warning box",2019-12-10T04:23:07Z
9640f9649a85dac9efd19b151c521e48aeddba90,"fix npe while logging sql/query request (#9001)

* fix npe while logging sql/query request

* forbid forbidden DateTime API",2019-12-09T20:02:11Z
ca77d576c6bedf7d755c406bc5752e1ec81e71dc,"add customize separator for TSV inputFormat (#8993)

* add customize separator for TSV inputFormat

* fix spotbug

* code refactor

* code refactor

* add argument check for delimiter

* refine null check

* add check for delimiter and listdelimiter can not be same

* add unit tests",2019-12-09T19:24:09Z
1c62987783e85867856f567b04aad807a26bb2e3,"Add SelfDiscoveryResource; rename org.apache.druid.discovery.No… (#6702)

* Add SelfDiscoveryResource

* Rename org.apache.druid.discovery.NodeType to NodeRole. Refactor CuratorDruidNodeDiscoveryProvider. Make SelfDiscoveryResource to listen to updates only about a single node (itself).

* Extended docs

* Fix brace

* Remove redundant throws in Lifecycle.Handler.stop()

* Import order

* Remove unresolvable link

* Address comments

* tmp

* tmp

* Rollback docker changes

* Remove extra .sh files

* Move filter

* Fix SecurityResourceFilterTest",2019-12-08T15:47:58Z
441515cb50e67dcb5d485acdd4e74c766a363ba2,"update dump-segment docs so example command works (#8998)

* update dump-segment docs so example command works

* not everyone uses bash",2019-12-07T14:36:46Z
06cd30460ef51f9e316e86d4b417882efc9b861c,"add query metrics for broker parallel merges, off by default (#8981)

* add a bunch of metrics for broker parallel merges, off by default, and tests

* fix tests

* review stuffs

* propogateIfPossible",2019-12-06T21:42:53Z
cefcfe26dc4c122027aaf49473a770a951f59445,"update web-console data loader to support unified s3 and google input sources (#8994)

* update web-console data loader to support unified s3 and google input source

* fixes

* add placeholder for objects

* only show objects if it already exists",2019-12-06T15:25:26Z
ca2a7a1f082255ca8e6984bfddd7b1e4d7b2b4f8,"more flush timeout for emitter tests (#8991)

* more flush timeout for emitter tests

* share constant",2019-12-06T00:52:35Z
c949a252105a61db64849abdf38648f92b49d30b,"Add DruidInputSource (replacement for IngestSegmentFirehose) (#8982)

* Add Druid input source and format

* Inherit dims/metrics from segment

* Add ingest segment firehose reindexing test

* Remove unnecessary module

* Fix unit tests, checkstyle

* Add doc entry

* Fix dimensionExclusions handling, add parallel index integration test

* Add spelling exclusion

* Address some PR comments

* Checkstyle

* wip

* Address rest of PR comments

* Address PR comments",2019-12-06T00:50:00Z
af74acaa8509cb86763843cd214af862bdcd3bbc,"Address security vulnerabilities CVSS >= 7 (#8980)

* Address security vulnerabilities CVSS >= 7

Update dependencies to address security vulnerabilities with CVSS scores
of 7 or higher. A new Travis CI job is added to prevent new
high/critical security vulnerabilities from being added.

Updated dependencies:
- api-util 1.0.0 -> 1.0.3
- jackson 2.9.10 -> 2.10.1
- kafka 2.1.0 -> 2.1.1
- libthrift 0.10.0 -> 0.13.0
- protobuf 3.2.0 -> 3.11.0

The following high/critical security vulnerabilities are currently
suppressed (so that the new Travis CI job can be added now) and are left
as future work to fix:
- hibernate-validator:5.2.5
- jackson-mapper-asl:1.9.13
- libthrift:0.6.1
- netty:3.10.6
- nimbus-jose-jwt:4.41.1

* Rename EDL1 license file

* Fix inspection errors",2019-12-05T22:34:35Z
5ecdf94d835446cd00798be283323473a20d62fa,"add 'prefixes' support to google input source (#8930)

* add prefixes support to google input source, making it symmetrical-ish with s3

* docs

* more better, and tests

* unused

* formatting

* javadoc

* dependencies

* oops

* review comments

* better javadoc",2019-12-05T05:01:10Z
1cff73f3e0556e1e76074bb6974a4b61db3717e1,"Web console: support new ingest spec format (#8828)

* converter v1

* working v1

* update tests

* update tests

* upgrades

* adjust to new API

* remove hack

* fwd

* step

* neo cache

* fix time selection

* smart reset

* parquest autodetection

* add binaryAsString option

* partitionsSpec

* add ORC support

* ingestSegment -> druid

* remove index tasks

* better min

* load data works

* remove downgrade

* filter on group_id

* fix group_id in test

* update auto form for new props

* add dropBeforeByPeriod rule

* simplify

* prettify json",2019-12-05T04:21:07Z
8dd9a8cb15876d96a644bb5656c4ffeda90046c9,Small doc fix for baseTaskDir conf (#8978),2019-12-04T22:07:03Z
a48784a1fde2bc736d5516c8b90c2789f0755754,dropwizard-emitter doc fixes (#8988),2019-12-04T20:52:58Z
391646123ef23f2c13bfeb750678e48cbcc2bf84,"Fix double-checked locking in predicate suppliers in BoundDimFi… (#8974)

* Fix double-checked locking in predicate suppliers in BoundDimFilter

* Fix double-checked locking in predicate suppliers in BoundDimFilter

* 1. Use Suppliers.memoize() to initialize and publish singleton.

2. Fix coding style.

* Fix coding style

* Fix double-checked locking bug for predicate suppliers in InDimFilter",2019-12-04T17:01:52Z
d0a6fe7f120b29f92efdf17d6eb909568e93a3b4,"fix bug with sqlOuterLimit, use sqlOuterLimit in web console (#8919)

* fix bug with sqlOuterLimit, use sqlOuterLimit instead of wrapping sql query for web console

* fixes, refactors, tests

* meh

* better name

* fix comment location

* fix copy and paste",2019-12-04T02:36:28Z
187cf0dd3f6079077c07a6c8ef10621c26383d17,"[Improvement] historical fast restart by lazy load columns metadata(20X faster) (#6988)

* historical fast restart by lazy load columns metadata

* delete repeated code

* add documentation for druid.segmentCache.lazyLoadOnStart

* fix unit test fail

* fix spellcheck

* update docs

* update docs mentioning a catch",2019-12-03T17:47:01Z
b4efaa698b33af89ffd2bf15886d769e2a9e6456,unexclude necessary jackson mapper-asl jars (#8977),2019-12-03T01:01:11Z
4b7e79a4e6f2c473ca1123eb0222e5d76b5c1c96,"Exclude unneeded hadoop transitive dependencies (#8962)

* Exclude unneeded hadoop transitive dependencies

These dependencies are provided by core:
- com.squareup.okhttp:okhttp
- commons-beanutils:commons-beanutils
- org.apache.commons:commons-compress
- org.apache.zookepper:zookeeper

These dependencies are not needed and are excluded because they contain
security vulnerabilities:
- commons-beanutils:commons-beanutils-core
- org.codehaus.jackson:jackson-mapper-asl

* Simplify exclusions + separate unneeded/vulnerable

* Do not exclude jackson-mapper-asl",2019-12-03T00:08:21Z
6997b167b1b3e857e1c0db7d56d3ae833732f9c4,add hdfs client dependency for native batch parquet when using hdfs (#8964),2019-11-28T21:12:45Z
00ce18a0ea1b984a07479489d43d9901575d3d28,"Additional Kinesis resharding fixes (#8870)

* Additional Kinesis resharding fixes

* Address PR comments

* Remove unused method

* Adjust SegmentTransactionalInsertAction null handling

* Check for unchanged metadata on empty publish

* Add logs for empty publish

* Fix javadoc

* Clear offset when invalid endOffsets are seen

* Fix LGTM alert

* Fix build

* Add resharding note to Kinesis docs

* Checkstyle

* Spelling

* Address PR comments

* Checkstyle",2019-11-28T20:59:01Z
86e8903523fc3d2d177963d2f95fd56441605102,"Support orc format for native batch ingestion (#8950)

* Support orc format for native batch ingestion

* fix pom and remove wrong comment

* fix unnecessary condition check

* use flatMap back to handle exception properly

* move exceptionThrowingIterator to intermediateRowParsingReader

* runtime",2019-11-28T20:45:24Z
55ecaafff087f1410663f1640d79540744fe4fb7,Add licenses.yaml entry for Wikipedia sample data (#8968),2019-11-28T19:41:42Z
dfbc06616381f634c570133a3cbc38c0393b4345,"Revert ""[maven-release-plugin] prepare release druid-0.16.1-incubating-rc1""

This reverts commit a0f21d9b07bb4b4efd8ef98d0effd0c28f2f7d43.",2019-11-28T07:22:43Z
0402ff85b859e151f6582e0916ad9e5261425ee4,"Revert ""[maven-release-plugin] prepare for next development iteration""

This reverts commit 8ffa71e7e6ed140446acaa94baf47b779e6f24a3.",2019-11-28T07:22:32Z
8ffa71e7e6ed140446acaa94baf47b779e6f24a3,[maven-release-plugin] prepare for next development iteration,2019-11-28T07:18:48Z
a0f21d9b07bb4b4efd8ef98d0effd0c28f2f7d43,[maven-release-plugin] prepare release druid-0.16.1-incubating-rc1,2019-11-28T07:18:37Z
923c003213477ffc5ebf46c880edbb691d1aa816,add flush timeout to emitter test (#8963),2019-11-28T03:30:09Z
a5b40a6099f0bdcc7cc6ed38362dc21832799417,Remove null handling check (#8960),2019-11-27T20:09:33Z
fba876b60738581642ae1978cb9fed5df83b8188,"Update jackson to 2.9.10 (#8940)

Addresses security vulnerabilities:

- sonatype-2016-0397:
  https://github.com/FasterXML/jackson-core/issues/315

- sonatype-2017-0355:
  https://github.com/FasterXML/jackson-core/pull/322",2019-11-27T05:41:14Z
adb72fe8d5f3dc3886977ec6177c78dd7cc57b99,Improve verify-default-ports to check both INADDR_ANY and 127.0.0.1. (#8942),2019-11-27T00:05:15Z
50f7cf694756240b2da5a8e3ef4511ba8e43f1c6,"Adding quick links to readme (#8946)

* quick links

* added download

* add twitter also",2019-11-27T00:04:54Z
52ef043be1fec3c1c26c8c22d8dad576633dd1e8,"add license for tutorial wiki data (#8944)

* add license for tutorial wiki data

* tweaks",2019-11-26T21:33:24Z
4458113375ee24cc11d8d5a3a6ddd3577d0571be,"S3 input source (#8903)

* add s3 input source for native batch ingestion

* add docs

* fixes

* checkstyle

* lazy splits

* fixes and hella tests

* fix it

* re-use better iterator

* use key

* javadoc and checkstyle

* exception

* oops

* refactor to use S3Coords instead of URI

* remove unused code, add retrying stream to handle s3 stream

* remove unused parameter

* update to latest master

* use list of objects instead of object

* serde test

* refactor and such

* now with the ability to compile

* fix signature and javadocs

* fix conflicts yet again, fix S3 uri stuffs

* more tests, enforce uri for bucket

* javadoc

* oops

* abstract class instead of interface

* null or empty

* better error",2019-11-26T06:31:19Z
282b838b3fee3229b20e35ca18c799bc569fc368,fix home view tabs (#8938),2019-11-26T04:21:32Z
4a9da3f3fcdc1dac44243b05af6c744749aab805,"use the latest release of datasketches (#8647)

* use the latest release of datasketches

* added datasketches-memory dependency

* updated datasketches entries

* use datasketches-memory-1.2.0

* updated dependencies

* fixed tests",2019-11-26T03:45:51Z
cd31bcc093406b82ddcf73ed620fdc0e7ad26e06,un-exclude necessary parquet jackson dependencies instead of relying on curator (#8939),2019-11-25T23:57:34Z
a2e6de4b162912c582c23aa54a18006ea874032e,"Fix the potential race between SplittableInputSource.getNumSplits() and SplittableInputSource.createSplits() in TaskMonitor (#8924)

* Fix the potential race SplittableInputSource.getNumSplits() and SplittableInputSource.createSplits() in TaskMonitor

* Fix docs and javadoc

* Add unit tests for large or small estimated num splits

* add override",2019-11-23T09:38:08Z
e0eb85ace72322c80a7f2f0555d411f2067f83ea,"Add FileUtils.createTempDir() and enforce its usage. (#8932)

* Add FileUtils.createTempDir() and enforce its usage.

The purpose of this is to improve error messages. Previously, the error
message on a nonexistent or unwritable temp directory would be
""Failed to create directory within 10,000 attempts"".

* Further updates.

* Another update.

* Remove commons-io from benchmark.

* Fix tests.",2019-11-23T03:48:49Z
0514e5686e58e384a1b7b05ec0a89612040e65e5,"add TsvInputFormat (#8915)

* add TsvInputFormat

* refactor code

* fix grammar

* use enum replace string literal

* code refactor

* code refactor

* mark abstract for base class meant not to be instantiated

* remove constructor for test",2019-11-23T02:01:40Z
72500103886693609d1e05927491907f584b4229,"add parquet support to native batch (#8883)

* add parquet support to native batch

* cleanup

* implement toJson for sampler support

* better binaryAsString test

* docs

* i hate spellcheck

* refactor toMap conversion so can be shared through flattenerMaker, default impls should be good enough for orc+avro, fixup for merge with latest

* add comment, fix some stuff

* adjustments

* fix accident

* tweaks",2019-11-22T18:49:16Z
9955107e8ef28d9b9fd8e95cd21c3501de6ab5d8,RandomLocationSelectorStrategy to Choose an available disk(location) to store a segment. With unit tests. (#8461),2019-11-22T11:46:54Z
934547a2159e0580845055cbc12f5bcdf7b705cd,"RetryingInputEntity to retry on transient errors (#8923)

* RetryingInputEntity to retry on transient errors

* fix some javadoc and httpEntity

* Make it interface

* Javadoc for offset",2019-11-22T05:32:18Z
dc6178d1f2332fe03e18576713ad517c87d4d031,"Upgrade Calcite to 1.21 (#8566)

* Upgrade Calcite to 1.21

* Checkstyle, test fix'

* Exclude calcite yaml deps, update license.yaml

* Add method for exception chain handling

* Checkstyle

* PR comments, Add outer limit context flag

* Revert project settings change

* Update subquery test comment

* Checkstyle fix

* Fix test in sql compat mode

* Fix test

* Fix dependency analysis

* Address PR comments

* Checkstyle

* Adjust testSelectStarFromSelectSingleColumnWithLimitDescending",2019-11-21T05:22:55Z
ff6217365bb5803dae364dddbe7bfc870bd406bc,"Refactor parallel indexing perfect rollup partitioning (#8852)

* Refactor parallel indexing perfect rollup partitioning

Refactoring to make it easier to later add range partitioning for
perfect rollup parallel indexing. This is accomplished by adding several
new base classes (e.g., PerfectRollupWorkerTask) and new classes for
encapsulating logic that needs to be changed for different partitioning
strategies (e.g., IndexTaskInputRowIteratorBuilder).

The code is functionally equivalent to before except for the following
small behavior changes:

1) PartialSegmentMergeTask: Previously, this task had a priority of
   DEFAULT_TASK_PRIORITY. It now has a priority of
   DEFAULT_BATCH_INDEX_TASK_PRIORITY (via the new PerfectRollupWorkerTask
   base class), since it is a batch index task.

2) ParallelIndexPhaseRunner: A decorator was added to
   subTaskSpecIterator to ensure the subtasks are generated with unique
   ids. Previously, only tests (i.e., MultiPhaseParallelIndexingTest)
   would have this decorator, but this behavior is desired for non-test
   code as well.

* Fix forbidden apis and pmd warnings

* Fix analyze dependencies warnings

* Fix IndexTask json and add IT diags

* Fix parallel index supervisor<->worker serde

* Fix TeamCity inspection errors/warnings

* Fix TeamCity inspection errors/warnings again

* Integrate changes with those from #8823

* Address review comments

* Address more review comments

* Fix forbidden apis

* Address more review comments",2019-11-21T01:24:12Z
ac6d703814ccb5b258c586b63e0bc33d669e0f57,"Support inputFormat and inputSource for sampler (#8901)

* Support inputFormat and inputSource for sampler

* Cleanup javadocs and names

* fix style

* fix timed shutoff input source reader

* fix timed shutoff input source reader again

* tidy up timed shutoff reader

* unused imports

* fix tc",2019-11-20T22:51:25Z
d628bebbd7ca1f103227d3d73fc938f580e4f7c6,"Make supervisor API similar to submit task API (#8810)

* accept spec or dataSchema, tuningConfig, ioConfig while submitting task json

* fix test

* update docs

* lgtm warning

* Add original constructor back to IndexTask to minimize changes

* fix indentation in docs

* Allow spec to be specified in supervisor schema

* undo IndexTask spec changes

* update docs

* Add Nullable and deprecated annotations

* remove deprecated configs from SeekableStreamSupervisorSpec

* remove nullable annotation",2019-11-20T18:04:41Z
ee8f0483815743bb45ef374d577e6b2b0dffa883,"Web console: rename Tasks to Ingestion (#8896)

* rename Tasks to Ingestion

* rename local storage key also

* align ordering",2019-11-20T14:53:40Z
d67c3c7aed25d7890f03adb423233a520d1e9380,"document SQL compatible null handling mode (#8894)

* document SQL compatible null handling mode

* adjustments

* fix docs

* review changes",2019-11-20T14:52:20Z
3fcaa1a61b9b8b72bbff385a8c7b61cd97840345,"fix sql compatible null handling config work with runtime.properties (#8876)

* fix sql compatible null handling config work with runtime.properties

* fix npe

* fix tests

* add friendly error

* comment, and friendlier still

* fix compile

* fix from merges",2019-11-20T11:55:29Z
f5fbd0bea0715bc3fd3d7ac63028e168cf257712,"Handle missing values for delimited text files when Nullhandling is enabled (#8779)

* Handle missing values

* Fix multi value tests

* Fix firehose tests

* Fix conflicts",2019-11-20T06:35:22Z
4ae6466ae2cd4a8f547f2bdf5cdbbd3c811d9deb,"HDFS input source (#8899)

* HDFS input source

Add support for using HDFS as an input source. In this version, commas
or globs are not supported in HDFS paths.

* Fix forbidden api

* Address review comments",2019-11-20T06:19:39Z
074a45219db4f7e6a3438323dea61c63ec8f8859,"add google cloud storage InputSource for native batch (#8907)

* add google cloud storage InputSource for native batch

* rename

* checkstyle

* fix

* fix spelling

* review comments",2019-11-20T03:49:43Z
baefc65f8053aff32f94fe15d24bdea239626e27,"Retrying with a backward compatible task type on unknown task type error in parallel indexing (#8905)

* Retrying with a backward compatible task type on unknown task type error in parallel indexing

* Register legacy class; add a serde test",2019-11-20T03:29:25Z
d0913475b7af52e0639fc224c1da02ccfece03c8,"sampler returns nulls in CSV (#8871)

* sampler returns nulls in CSV

* fixed kafka sampler test

* fix Kinesis test

* sql compatibility fix

* remove null to empty string conversion, use null

* fix sql compatibility",2019-11-19T21:59:44Z
c44452f0c1b051b03343d8bb479828f01461d68f,"Tidy up lifecycle, query, and ingestion logging. (#8889)

* Tidy up lifecycle, query, and ingestion logging.

The goal of this patch is to improve the clarity and usefulness of
Druid's logging for cluster operators. For more information, see
https://twitter.com/cowtowncoder/status/1195469299814555648.

Concretely, this patch does the following:

- Changes a lot of INFO logs to DEBUG, and DEBUG to TRACE, with the
  goal of reducing redundancy and improving clarity by avoiding
  showing rarely-useful log messages. This includes most ""starting""
  and ""stopping"" messages, and most messages related to individual
  columns.
- Adds new log4j2 templates that show operators how to enabled DEBUG
  logging for certain important packages.
- Eliminate stack traces for query errors, unless log level is DEBUG
  or more. This is useful because query errors often indicate user
  error rather than system error, but dumping stack trace often gave
  operators the impression that there was a system failure.
- Adds task id to Appenderator, AppenderatorDriver thread names. In
  the default log4j2 configuration, this will put them in log lines
  as well. It's very useful if a user is using the Indexer, where
  multiple tasks run in the same JVM.
- More consistent terminology when it comes to ""sequences"" (sets of
  segments that are handed-off together by Kafka ingestion) and
  ""offsets"" (cursors in partitions). These terms had been confused in
  some log messages due to the fact that Kinesis calls offsets
  ""sequence numbers"".
- Replaces some ugly toString calls with either the JSONification or
  something more operator-accessible (like a URL or segment identifier,
  instead of JSON object representing the same).

* Adjustments.

* Adjust integration test.",2019-11-19T21:57:58Z
cf6643eb9a03f330af4566922bd2a7029cad203b,"add sequenceName and currentCheckPoint for backwards compatibility (#8864)

* add sequenceName and currentCheckPoint for backwards compatibility

* Add serde unit test in kafka

* fix checkstyle

* add hashcode

* update javadoc",2019-11-19T21:11:31Z
8365bdf62aff71dcce6db838a7bcd4f74688c2a3,"Address security vulnerabilities (#8878)

* Address security vulnerabilities

Security vulnerabilities addressed by upgrading 3rd party libs:

- Upgrade avro-ipc to 1.9.1
  - sonatype-2019-0115
- Upgrade caffeine to 2.8.0
  - sonatype-2019-0282
- Upgrade commons-beanutils to 1.9.4
  - CVE-2014-0114
- Upgrade commons-codec to 1.13
  - sonatype-2012-0050
- Upgrade commons-compress to 1.19
  - CVE-2019-12402
  - sonatype-2018-0293
- Upgrade hadoop-common to 2.8.5
  - CVE-2018-11767
- Upgrade hadoop-mapreduce-client-core to 2.8.5
  - CVE-2017-3166
- Upgrade hibernate-validator to 5.2.5
  - CVE-2017-7536
- Upgrade httpclient to 4.5.10
  - sonatype-2017-0359
- Upgrade icu4j to 55.1
  - CVE-2014-8147
- Upgrade jackson-databind to 2.6.7.3:
  - CVE-2017-7525
- Upgrade jetty-http to 9.4.12:
  - CVE-2017-7657
  - CVE-2017-7658
  - CVE-2017-7656
  - CVE-2018-12545
- Upgrade log4j-core to 2.8.2
  - CVE-2017-5645:
- Upgrade netty to 3.10.6
  - CVE-2015-2156
- Upgrade netty-common to 4.1.42
  - CVE-2019-9518
- Upgrade netty-codec-http to 4.1.42
  - CVE-2019-16869
- Upgrade nimbus-jose-jwt to 4.41.1
  - CVE-2017-12972
  - CVE-2017-12974
- Upgrade plexus-utils to 3.0.24
  - CVE-2017-1000487
  - sonatype-2015-0173
  - sonatype-2016-0398
- Upgrade postgresql to 42.2.8
  - CVE-2018-10936

Note that if users are using JDBC lookups with postgres, they may need
to update the JDBC jar used by the lookup extension.

* Fix license for postgresql",2019-11-19T17:14:33Z
98580ffe719eeb744a50d0e9d83243892b44a717,adding search to docs (#8906),2019-11-19T15:04:40Z
4bdb890f1b123fe428e22e26eaeb97b2e2b2b1db,Add license header for LGTM yaml config file (#8902),2019-11-19T02:26:45Z
f1399037a6261011f6d60e567d11aad78eaaa904,"LGTM: Skip console during Java build. (#8900)

* LGTM: Skip console during Java build.

* More nesting.

* One-line command.

* Avoid using semmle_data.",2019-11-18T23:42:14Z
8515a03c6b5bb9d1538337ed3eb3ae23ecde76aa,"Modify batch index task naming to accomodate simultaneous tasks  (#8612)

* Change hadoop task naming

* Remove unused

* Add timestamp

* Fix build",2019-11-18T23:07:16Z
d60978343ae363f86d91f75bbcf6270bcf4ac090,"Improve missing JDBC driver error for lookups (#8872)

If the JDBC drivers are missing from the lookup extensions, throw an
exception that directs the user how to resolve the issue. This change is
a follow up to #8825.",2019-11-18T19:42:38Z
ea8e4066f6a6f50487ec6cd2bc4e0ea78731b025,"Use earliest offset on kafka newly discovered partitions (#8748)

* Use earliest offset on kafka newly discovered partitions

* resolve conflicts

* remove redundant check cases

* simplified unit tests

* change test case

* rewrite comments

* add regression test

* add junit ignore annotation

* minor modifications

* indent

* override testableKafkaSupervisor and KafkaRecordSupplier to make the test runable

* modified test constructor of kafkaRecordSupplier

* simplify

* delegated constructor",2019-11-18T19:05:31Z
80fc04be71db967fd30ba8179c8d31f3fc34e3a0,bump typescript (#8890),2019-11-18T00:23:47Z
17d773dca2e10529912d0e645170fe0eb5a13d35,"Web console: replace (and remove) old consoles (#8838)

* first steps

* clean licenses

* fix capabilities

* fix specs

* more tests

* new web console on coordinator and overlord, remove setup for old consoles, old configs

* better message

* update licenses

* sync license files

* more button

* fix tslint issue

* jetty-rewrite dependency to add redirects for old console paths

* put dependency in the right place

* fix overlord detection

* fix notices, dedupe licenses

* make segment timeline work in no SQL mode

* update license

* revert hard coded coordinator mode from testing

* update restricted mode copy",2019-11-16T03:45:14Z
7fa3182fe5891679a4b3601a67c997c8d19921ba,"refactor InputFormat and InputEntityReader implementations (#8875)

* refactor InputFormat and InputReader to supply InputEntity and temp dir to constructors instead of read/sample

* fix style",2019-11-16T01:08:26Z
1611792855ad9def8b6f5b1375862d05d1acca0a,"Add InputSource and InputFormat interfaces (#8823)

* Add InputSource and InputFormat interfaces

* revert orc dependency

* fix dimension exclusions and failing unit tests

* fix tests

* fix test

* fix test

* fix firehose and inputSource for parallel indexing task

* fix tc

* fix tc: remove unused method

* Formattable

* add needsFormat(); renamed to ObjectSource; pass metricsName for reader

* address comments

* fix closing resource

* fix checkstyle

* fix tests

* remove verify from csv

* Revert ""remove verify from csv""

This reverts commit 1ea7758489cc8c9d708bd691fd48e62085fd9455.

* address comments

* fix import order and javadoc

* flatMap

* sampleLine

* Add IntermediateRowParsingReader

* Address comments

* move csv reader test

* remove test for verify

* adjust comments

* Fix InputEntityIteratingReader

* rename source -> entity

* address comments",2019-11-15T17:22:09Z
ce4ee42459f397b844d0e531fe98c3ba773624de,Fix LIKE filter wildcards to match newlines. (#8863),2019-11-14T07:00:54Z
00f6a56370fee974dc98bc37068fad5e9ca9d868,"Use RFC4180Parser as CSVParser (#8803)

* Use RFC4180Parser as CSVParser, add unit test

* change test file location, use assertEquals",2019-11-13T20:44:37Z
cc54b2a9dfc2b3ac10bc8097e077151def8389a9,"support for array expressions in TransformSpec with ExpressionTransform (#8744)

* transformSpec + array expressions

changes:
* added array expression support to transformSpec
* removed ParseSpec.verify since its only use afaict was preventing transform expr that did not replace their input from functioning
* hijacked index task test to test changes

* remove docs about being unsupported

* re-arrange test assert

* unused imports

* imports

* fix tests

* preserve types

* suppress warning, fixes, add test

* formatting

* cleanup

* better list to array type conversion and tests

* fix oops",2019-11-13T19:04:37Z
9ed9a80b9d4b74df37523b3bca4ed23f0730fd93,"optimize numeric column null value checking for low filter selectivity (more rows) (#8822)

* use peekable iterator for numeric column selector null checking instead of bitmap.get for those sweet sweet nanoseconds

* remove unused method

* slight optimization i think

* remove clone from wrappers since we do not use and is confusing

* fixes and tests

* int instead of Integer

* fix it

* fixes, more tests

* fix",2019-11-13T18:53:47Z
80dbf44fca8af97f3c11fa3662f828e6f62fc2be,"Add reference to druid.storage.type (#8857)

* Add reference to `druid.storage.type`

This should be in here. Without setting storage type to S3 globally it will obviously not be used, even if all other parameters are correct.

* Update s3.md

Add global storage parameter to knob table.

* Update s3.md",2019-11-13T18:03:41Z
cc2bdb5f515b94555c4828eb5adfc9642854fd08,"Fix hadoop task jdk11 compatible (#8799)

* Fix hadoop task jdk11 compatible

* Fix HadoopTaskTest",2019-11-13T10:32:46Z
8cb213aa9fddbd6158c31a31fcdfc03e9eda25c9,"Web console: Fix missing include future flag for byPeriod rules (#8859)

* Add missing button for include future, and handle logic for default true case

* Remove duplicate go to tasks button

* Fix lgtm issue

* Revert changes on old console

* Made changes based on PR comments",2019-11-13T04:34:30Z
a066cc5648f763935c8e56c23c3810ea90e4955b,Fix groupMapping endpoint URIs in druid-basic-security doc (#8847),2019-11-12T15:42:34Z
df2f77c58d599e74b097027aea46368d378bbeea,"Web console: better json-input feedback (#8851)

* better json-input feedback

* seamless Hjson

* fix tests",2019-11-12T01:06:03Z
e9e1625e961eac2d8237657e5914430e2c4aa070,"Docs: Add docsearch version (#8850)

* Add docsearch version

* remove open snas stylesheet",2019-11-10T03:51:06Z
75ea0d592a8d6a97ae08e1e1f8d19dfce21d0aaa,"Add more datasketches doubles sketch SQL functions (#8843)

* Add more datasketches doubles sketch SQL postaggs

* style and lgtm",2019-11-09T02:05:06Z
0e8c3f74d05a3232153e884044e3d905e590ee1c,"SQL: EARLIEST, LATEST aggregators. (#8815)

* SQL: EARLIEST, LATEST aggregators.

I chose these names instead of FIRST, LAST because those are already
reserved functions in Calcite that mean something different. I think
these are also better names anyway.

* Finalify.

* SQL updates.

* Adjust aggregator calls.

* Validations, test updates.

* Review docs.",2019-11-09T00:29:25Z
6eacaf446f6c30194c8d1480af712ea7131ea55a,Use more efficient tasks API (#8844),2019-11-08T16:21:53Z
c204d6837613ef2a36eb093707e66db78407311b,"Fixes, adjustments to numeric null handling and string first/last aggregators. (#8834)

There is a class of bugs due to the fact that BaseObjectColumnValueSelector
has both ""getObject"" and ""isNull"" methods, but in most selector implementations
and most call sites, it is clear that the intent of ""isNull"" is only to apply
to the primitive getters, not the object getter. This makes sense, because the
purpose of isNull is to enable detection of nulls in otherwise-primitive columns.
Imagine a string column with a numeric selector built on top of it. You would
want it to return isNull = true, so numeric aggregators don't treat it as
all zeroes.

Sometimes this design leads people to accidentally guard non-primitive get
methods with ""selector.isNull"" checks, which is improper.

This patch has three goals:

1) Fix null-handling bugs that already exist in this class.
2) Make interface and doc changes that reduce the probability of future bugs.
3) Fix other, unrelated bugs I noticed in the stringFirst and stringLast
   aggregators while fixing null-handling bugs. I thought about splitting this
   into its own patch, but it ended up being tough to split from the
   null-handling fixes.

For (1) the fixes are,

- Fix StringFirst and StringLastAggregatorFactory to stop guarding getObject
  calls on isNull, by no longer extending NullableAggregatorFactory. Now uses
  -1 as a sigil value for null, to differentiate nulls and empty strings.
- Fix ExpressionFilter to stop guarding getObject calls on isNull. Also, use
  eval.asBoolean() to avoid calling getLong on the selector after already
  calling getObject.
- Fix ObjectBloomFilterAggregator to stop guarding DimensionSelector calls
  on isNull. Also, refactored slightly to avoid the overhead of calling
  getObject followed by another getter (see BloomFilterAggregatorFactory for
  part of this).

For (2) the main changes are,

- Remove the ""isNull"" method from BaseObjectColumnValueSelector.
- Clarify ""isNull"" doc on BaseNullableColumnValueSelector.
- Rename NullableAggregatorFactory -> NullbleNumericAggregatorFactory to emphasize
  that it only works on aggregators that take numbers as input.
- Similar naming changes to the Aggregator, BufferAggregator, and AggregateCombiner.
- Similar naming changes to helper methods for groupBy, ValueMatchers, etc.

For (3) the other fixes for StringFirst and StringLastAggregatorFactory are,

- Fixed buffer overrun in the buffer aggregators when some characters in the string
  code into more than one byte (the old code used ""substring"" to apply a byte limit,
  which is bad). I did this by introducing a new StringUtils.toUtf8WithLimit method.
- Fixed weird IncrementalIndex logic that led to reading nulls for the timestamp.
- Adjusted weird StringFirst/Last logic that worked around the weird IncrementalIndex
  behavior.
- Refactored to share code between the four aggregators.
- Improved test coverage.
- Made the base stringFirst, stringLast aggregators adaptive, and streamlined the
  xFold versions into aliases. The adaptiveness is similar to how other aggregators
  like hyperUnique work.",2019-11-08T01:46:59Z
b03aa060bdef0d8aebd97010895a1b8674f34826,"Web console: Interval input component (#8777)

* Created temporary interval input component

* Make reusable interval component

* Fixed errors with typing invalid dates

* Fix interval input styling and place into autoform

* Fix styling of popover calendar that opens off the page

* Add snapshot test and change interval to required props

* Add functionality to enter hours minutes second

* Fix min date limit

* Remove console log

* Fix difference in timezone

* Update snapshot test

* Fixed snapshot test without changing min max date

* Made changes based on discussion before converting to hooks

* Rewrote using hooks and deleted duplicate states

* Remove unused states

* Change sql query view numbers to monospace

* Made changes based on discussion

* Removed duplicate state",2019-11-07T21:07:17Z
7aafcf8bcae3d57a8992a2634c7b73869c9a4117,"parallel broker merges on fork join pool (#8578)

* sketch of broker parallel merges done in small batches on fork join pool

* fix non-terminating sequences, auto compute parallelism

* adjust benches

* adjust benchmarks

* now hella more faster, fixed dumb

* fix

* remove comments

* log.info for debug

* javadoc

* safer block for sequence to yielder conversion

* refactor LifecycleForkJoinPool into LifecycleForkJoinPoolProvider which wraps a ForkJoinPool

* smooth yield rate adjustment, more logs to help tune

* cleanup, less logs

* error handling, bug fixes, on by default, more parallel, more tests

* remove unused var

* comments

* timeboundary mergeFn

* simplify, more javadoc

* formatting

* pushdown config

* use nanos consistently, move logs back to debug level, bit more javadoc

* static terminal result batch

* javadoc for nullability of createMergeFn

* cleanup

* oops

* fix race, add docs

* spelling, remove todo, add unhandled exception log

* cleanup, revert unintended change

* another unintended change

* review stuff

* add ParallelMergeCombiningSequenceBenchmark, fixes

* hyper-threading is the enemy

* fix initial start delay, lol

* parallelism computer now balances partition sizes to partition counts using sqrt of sequence count instead of sequence count by 2

* fix those important style issues with the benchmarks code

* lazy sequence creation for benchmarks

* more benchmark comments

* stable sequence generation time

* update defaults to use 100ms target time, 4096 batch size, 16384 initial yield, also update user docs

* add jmh thread based benchmarks, cleanup some stuff

* oops

* style

* add spread to jmh thread benchmark start range, more comments to benchmarks parameters and purpose

* retool benchmark to allow modeling more typical heterogenous heavy workloads

* spelling

* fix

* refactor benchmarks

* formatting

* docs

* add maxThreadStartDelay parameter to threaded benchmark

* why does catch need to be on its own line but else doesnt",2019-11-07T19:58:46Z
a9aa416c3d52f5a4e2786bd6f1dada100e0bfda5,"In DirectDruidClient, don't run Future cancellation listener in… (#8700)

* In DirectDruidClient, don't run Future cancellation listener in HTTP library executor

* extract cancelQuery as a method of DirectDruidClient

* Fix testCancel

* Add exception as the first argument to log.error",2019-11-07T18:12:18Z
fca23d0c32ddb99a9aa8f600ea4886c1355218e4,"use copy-on-write list in InMemoryAppender (#8808)

* use copy-on-write synchronized list in InMemoryAppender

* use copy-on-write list in InMemoryAppender

* Fix comment",2019-11-07T18:11:40Z
517c14632eb627e355840c4991520606608d4caf,"Upgrade joda-time to 2.10.5 (#8821)

* Upgrade joda

* Update license",2019-11-06T22:30:22Z
ce3c0dae4d5a0fa78dd6e081d879240898ef6dcb,"Add note on JDBC libs for lookups (#8825)

* Add note on JDBC libs for lookups

* Fix directory and additional ""the""",2019-11-06T21:31:26Z
5adc8212b4a57b127a9bfc9e6b964db4791ae903,"add documentation for druid docker and k8s operator (#8802)

* add documentation for druid docker and k8s operator

* address review comment and add Kubernetes to spelling file",2019-11-06T20:56:21Z
5c0fc0a13ab4d259b430bf50b322f631504c4529,"Fix ambiguity about IndexerSQLMetadataStorageCoordinator.getUsedSegmentsForInterval() returning only non-overshadowed or all used segments (#8564)

* IndexerSQLMetadataStorageCoordinator.getTimelineForIntervalsWithHandle() don't fetch abutting intervals; simplify getUsedSegmentsForIntervals()

* Add VersionedIntervalTimeline.findNonOvershadowedObjectsInInterval() method; Propagate the decision about whether only visible segmetns or visible and overshadowed segments should be returned from IndexerMetadataStorageCoordinator's methods to the user logic; Rename SegmentListUsedAction to RetrieveUsedSegmentsAction, SegmetnListUnusedAction to RetrieveUnusedSegmentsAction, and UsedSegmentLister to UsedSegmentsRetriever

* Fix tests

* More fixes

* Add javadoc notes about returning Collection instead of Set. Add JacksonUtils.readValue() to reduce boilerplate code

* Fix KinesisIndexTaskTest, factor out common parts from KinesisIndexTaskTest and KafkaIndexTaskTest into SeekableStreamIndexTaskTestBase

* More test fixes

* More test fixes

* Add a comment to VersionedIntervalTimelineTestBase

* Fix tests

* Set DataSegment.size(0) in more tests

* Specify DataSegment.size(0) in more places in tests

* Fix more tests

* Fix DruidSchemaTest

* Set DataSegment's size in more tests and benchmarks

* Fix HdfsDataSegmentPusherTest

* Doc changes addressing comments

* Extended doc for visibility

* Typo

* Typo 2

* Address comment",2019-11-06T19:07:04Z
7b77cf142ff31bc6ed9b017d78b1545e89828327,"Update README.md (#8829)

small edits to the druid readme",2019-11-06T16:59:00Z
7addfc27da1ec3e80f8a78604b0b618c6112e138,"Web console: fine grained capabilities / graceful degradation (#8805)

* fine grained capabilities

* fix tests

* configure all cards

* better detection

* update tests

* rename server to service

* node -> service

* remove console log

* better loader in data loader",2019-11-06T07:39:14Z
6f7fbeb63ad3e4136af5e9361ae6aab7b23a4bee,Fix logo overflow (#8817),2019-11-06T05:52:38Z
c2889ca4f493cc8830dcee302c5f5d3295c9960a,show hollow circle when unavailable (#8819),2019-11-06T05:50:10Z
3b602da8f7b0ff78071404b0cf6ca8a9831dd985,"Bump Apache Thrift to 0.10.0 (#8419)

* Bump Apache Thrift to 0.10.0

* Remove unused dependency

* Bump maven-scrooge-plugin to the latest",2019-11-05T23:38:50Z
511fa74fa279ea0afbc2b22641d3fc68a4fb4b8e,Move maxFetchRetry to FetchConfig; rename OpenObject (#8776),2019-11-04T16:26:33Z
49bd16766fb347e1aad222b8da7f83bb9e951cde,serve web-console even if router management proxy is not enabled (#8797),2019-11-01T04:15:40Z
16aaf7227eb3b6eeeeeffd77c66813ac9660d70d,"Web console: work in IE11 (#8804)

* fix IE11

* also support flexbox",2019-11-01T04:03:05Z
f6028de7a84b4da8464a5e3e82995517e1b28f19,"Web console: use SQL for the supervisor view (#8796)

* use SQL for supervisor view

* home view sql also

* no proxy mode

* fix alert

* improve message",2019-11-01T03:59:36Z
27acdbd2b8bd36d427e9ca208f50a9eacf8763af, 'hadoop fs' command is deprecated . The new approach is to use hdfs command . Replacing 'hadoop fs' command with 'hdfs dfs' (#8762),2019-10-31T23:12:10Z
9c171e2b1fe6de81c8e06e5726acb1728266830d,"Message rejection absolute date (#8656)

* Add option lateMessageRejectionStartDate

* Use option lateMessageRejectionStartDate

* Fix tests

* Add lateMessageRejectionStartDate to kafka indexing service

* Update tests kafka indexing service

* Fix tests for KafkaSupervisorTest

* Add lateMessageRejectionStartDate to KinesisSupervisorIOConfig

* Fix var name

* Update documentation

* Add check lateMessageRejectionStartDateTime and lateMessageRejectionPeriod, fails if both were specified.",2019-10-31T22:13:02Z
e70b71c90f8ebc9d96a8acba6ac4d3f7269773dd,"Fix verify script. (#8798)

Accidentally missed some quote escaping in #8794.",2019-10-31T06:30:01Z
edb3b00d2625f2533a176607b8753d70bbfb763e,"Startup scripts: verify Java 8 (exactly), improve port/java verification messages. (#8794)

* Startup scripts: verify Java 8 (exactly), improve port/java verification messages.

Java 11 compatibility isn't fully baked yet (users have reported various
issues on Java 11), so block startup with an error message unless Java 8
is found. Allow overriding this decision with an environment variable.

* Message adjustments.",2019-10-31T05:37:05Z
bca649e49250c3f460f4ae83ff5b79f16dcc3d37,Case sensitive comparison of nonbinary string in MySQL metadata storage (#8758),2019-10-31T03:48:08Z
ed6be81d12d3f8a1a7a974c797166cd47b11d29c,"Web console: fix error when querying with grand totals (#8795)

* fix error when querying with grand totals

* also support object

* improve tests",2019-10-31T02:37:53Z
3ff5e0223752e0a10942bcf64a421b0f147e7d06,"remove select query (#8739)

* remove select query

* thanks teamcity

* oops

* oops

* add back a SelectQuery class that throws RuntimeExceptions linking to docs

* adjust text

* update docs per review

* deprecated",2019-10-31T02:29:56Z
2363b619837c325ef0cdb9f729341167fe9ca921,Asynchronous file copy in the shuffle of parallel indexing task (#8783),2019-10-31T01:00:05Z
7605c23354eff40895cfd21cfcd9c1185df9a5aa,"Remove Tranquility configs and certain doc references. (#8793)

Since it hasn't received updates or community interest in a while, it makes sense
to de-emphasize it in the distribution and most documentation (outside of simple
mentions of its existence).",2019-10-30T23:30:16Z
c922d2c3c964fd72344f1673fb60a672c22fbb75,Use bundled ZooKeeper in tutorials. (#8792),2019-10-30T23:17:28Z
929a8b63378ca06971b8197e072e3bb6c58a433b,"Web console: Support all possible metric types in the data loader (#8785)

* Support all possible metric types in the data loader

* added more sketches",2019-10-30T16:34:13Z
a95e3d438e676310522a68c74a43d99f5f0492d5,"Web console: Data loader user feedback changes (#8770)

* init fixes

* cleaning styling issues

* more conversion types",2019-10-29T15:42:51Z
3e9723e3cee858d0add66d534ba5e64c16df86a7,"Add an item to concurrency checklist about assertions in parall… (#8701)

Add an item to concurrency checklist about assertions in parallel threads and async code in tests",2019-10-29T08:38:04Z
b8ceee4eee0e26248711c4cbcd720bc832072087,Removed 'if' condition. (#8768),2019-10-28T20:40:03Z
aa81253cf4191973ac61d74f5123a3426f5e46a8,Fix typos. (#8767),2019-10-28T19:47:01Z
11230dff52c13b17b892e33eb6a74050ecab8874,Support HDFS firehose (#8752),2019-10-28T15:22:20Z
ec8ce74f1c2f39bdbc4a6b2b5a53434d94c437db,"Web console: Better data loader flow (#8763)

* filter table

* go over the entire data loader flow",2019-10-28T15:08:46Z
b65d2ac648e387c5d307eddf14d43224af3dd7ac,"Add HDFS firehose (#8754)

* Add HDFS firehose.

* Tests, support for lists of paths.

* Fixups.

* Update list of firehoses.

* Wildcards is a word.",2019-10-28T15:07:38Z
f9b94a5db1880aa60fe11672c91daf6027aa7915,"Docs: remove self link (#8760)

This section links to itself in the description. I tried to follow that link and spit hot tea all over my monitor from laughter.",2019-10-28T05:33:22Z
1b9d4ce8114683d95e8b073ebc2b9ba0b5b61399,"Web console: Memoize all the functional components and improve transform step highlighting (#8757)

* Fix transform table

* memoize all components

* use named functions",2019-10-27T00:58:26Z
ad615438f63de6c6e804bf300deebbf4659116fd,"Fix Hadoop tutorial Dockerfile (#8753)

When following the instructions from Hadoop batch load tutorial in the
docs, building the Docker images fails with:

  gzip: stdin: unexpected end of file
  tar: Child returned status 1
  tar: Error is not recoverable: exiting now

Updating nss allows the curl command for downloading Hadoop to succeed
while building the Docker image.",2019-10-26T00:58:40Z
80be9462a6847cd728a7d8d73502958f9a052cc9,"Web console: Update versions and dependencies  (#8751)

* update console version and deps

* bump script version",2019-10-26T00:53:06Z
9eb68b1d53cd7399b4d8e761f92456000d7a44d7,Add version to canonical URL (#8747),2019-10-25T19:46:39Z
27127345b783b6900c09fd341449d9c2acbec993,Add delimiter option for TSV parser (#8741),2019-10-25T16:17:59Z
b9d10473a56a82b545fd3efc88c854bec213037b,fix typo (#8745),2019-10-25T11:21:56Z
09f92818d433589a053fe93f3240620acc67d984,"update druid expression docs to indicate that array functions do not work at indexing time (#8734)

* update druid expression docs to indicate that array functions are not supported in transformSpec

* fix unrelated spelling check",2019-10-25T05:04:08Z
14e33428f0f29302f0a67d05666898b6503e2457,"Moving Average extention: Add Sum averagers (#8511)

* Add sum averagers.

* avoid casting double to long.",2019-10-24T23:37:24Z
774ce3ce6d8bafb0be759ed24dcc0d21067ec2f0,add canonical to the docs (#8731),2019-10-24T22:25:57Z
efd669757edde50b163ddd8610979fda60159df5,fix save button (#8732),2019-10-24T22:25:28Z
cc3650ee3b3f510a6e81d985948794fcb6ccd3fd,fix doc headers (#8729),2019-10-24T18:17:39Z
fdbc4ae147ac1d822da4d6f73bc20a27b10a960b,"Web console: Button to pretty print Druid JSON query (#8724)

* Add button and functionality to pretty format Rune JSON

* Removed console log

* Fix lgtm error about updating state

* Update test snapshot",2019-10-24T03:24:47Z
137c2a6025a6054f736dea4eb7fcf8811bc595c2,"Web console: disable data loader Submit button when submitting so as not to submit multiple times (#8725)

* disable Submit button when submitting so as not to submit twice

* also check in fn",2019-10-24T01:42:44Z
094936ca039f5a204d525416f22e746095056acc,"Remove commit() method Firehose (#8688)

* Remove commit() method Firehose

* fix javadoc",2019-10-23T23:52:02Z
2518478b20dfb22f7133be375f354fbe7bf1ff1e,"Remove deprecated parameter for Checkpoint request (#8707)

* Remove deprecated parameter for Checkpoint request

* fix wrong doc",2019-10-23T23:51:16Z
d9c9aef3d18a394276238d741a3241c12fb34b5b,"Druid Doctor (#8672)

* adding Druid doctor

* better meesage

* feedback changes

* add icons

* feedback fixes

* spelling

* add file.encoding check

* feedback changes",2019-10-23T23:50:08Z
a8b674e00d9ccad334b8ed6ecb3712dc7e3259b8,fix indexer when used with http inventory view (#8723),2019-10-23T22:52:57Z
3abd0c4a3324f71615b936ad65a6a67658e0a964,"Web console: start transition to React hooks and functional components (#8722)

* do the easy stuff

* some more components",2019-10-23T16:43:02Z
f5b9bf55255b084a48a33ebb75d34df4453080ea,"Cluster-wide configuration for query vectorization (#8657)

* Cluster-wide configuration for query vectorization

* add doc

* fix build

* fix doc

* rename to QueryConfig and add javadoc

* fix checkstyle

* fix variable names",2019-10-23T13:44:28Z
b453fda2512ded7162f3181286a0f8902ace1cdf,"docs: clarify native batch ingestion w/ overlapping segments (#8720)

I was confused by a paragraph in the docs that I myself wrote!",2019-10-23T04:01:56Z
2ab43aa688afe62641ff55b46d0b5a5c05404f18,"Update tutorial-kerberos-hadoop.md (#8689)

* Update tutorial-kerberos-hadoop.md

Fix up what looks like a bad merge.

* Update tutorial-kerberos-hadoop.md

Fix spelling issues",2019-10-22T21:40:41Z
48486a4535f6862752d42d06ab7102c3fe27538a,"Fix jackson property name for dropwizardemitterconfig (#8691)

Fix jackson property name and add test

Fix test",2019-10-22T21:40:19Z
42cfe679f1f92c4ae8f1c11fe939c3f68b3d0e36,Update query result timestamp to match query intervals. (#8717),2019-10-22T21:39:47Z
bb4368baecd32516b6df717807b9265028c1cd58,"Fix PeriodGranularity.bucketStart for days that don't start with midnight. (#8711)

* Fix PeriodGranularity.bucketStart for days that don't start with midnight.

* Use more newspeak method.",2019-10-22T17:00:52Z
e919eccc4b87631bdaa3870b88a920af1cb0562e,"Update docs to add metadataSegment configs (#8708)

* Add metadataSegment configs to docs

* rearrange in alphabetical order",2019-10-22T08:19:36Z
3ed5f9698a11f2a1c7aeadbecedbb3aac6941b34,gcs prefix doc fix (#8699),2019-10-21T15:29:54Z
98f59ddd7e0dd44960f499f2384392be1e60eef0,"Add `sys.supervisors` table to system tables (#8547)

* Add supervisors table to SystemSchema

* Add docs

* fix checkstyle

* fix test

* fix CI

* Add comments

* Fix javadoc teamcity error

* comments

* fix links in docs

* fix links

* rename fullStatus query param to system and remove it from docs",2019-10-18T22:16:42Z
d88075237af1aca8ed22316b41860d14e4f0b6e4,"Add initial SQL support for non-expression sketch postaggs (#8487)

* Add initial SQL support for non-expression sketch postaggs

* Checkstyle, spotbugs

* checkstyle

* imports

* Update SQL docs

* Checkstyle

* Fix theta sketch operator docs

* PR comments

* Checkstyle fixes

* Add missing entries for HLL sketch module

* PR comments, add round param to HLL estimate operator, fix optional HLL param",2019-10-18T21:59:44Z
30c15900bec7f4df7a72088ec076223839da258f,"Auto compaction based on parallel indexing (#8570)

* Auto compaction based on parallel indexing

* javadoc and doc

* typo

* update spell

* addressing comments

* address comments

* fix log

* fix build

* fix test

* increase default max input segment bytes per task

* fix test",2019-10-18T20:24:14Z
1ca859584f49681bdf682f504a239b4bd1982c62,Issue 8678 Non-coordinator services are repeatedly logging JsonMappingException when using druid-basic-security extension with an authenticator that has no users setup (#8692),2019-10-18T18:09:53Z
8b2afa5c4987fb2e74d1094ccc370c6d87ce2cc0,"Use targetRowsPerSegment for single-dim partitions (#8624)

When using single-dimension partitioning, use targetRowsPerSegment (if
specified) to size segments. Previously, single-dimension partitioning
would always size segments as close to the max size as possible.

Also, change single-dimension partitioning to allow partitions that have
a size equal to the target or max size. Previously, it would create
partitions up to 1 less than those limits.

Also, fix some IntelliJ inspection warnings in HadoopDruidIndexerConfig.",2019-10-17T22:55:12Z
2c758ef5ff07891619b7ffedfb28dc31a6850c59,"Support assign tasks to run on different categories of MiddleManagers (#7066)

* Support assign tasks to run on different tiers of MiddleManagers

* address comments

* address comments

* rename tier to category and docs

* doc

* fix doc

* fix spelling errors

* docs",2019-10-17T19:57:19Z
d54d2e1627fd873da1a656c43818ae32c2c22791,"Update segments.md (#8693)

Make bullet numbers clearer with parantheses, fix last reference to 2 being interpreted as a bullet point.",2019-10-17T18:55:23Z
75527f09cddd5160e27d3af373c6a2bc656b6e7f,"implement FiniteFirehoseFactory in InlineFirehose (#8682)

* implement FiniteFirehoseFactory in InlineFirehose

* override isSplittable in InlineFirehoseFactory & improve tests",2019-10-17T02:28:55Z
9f4e11df328e1d61f84a0991392e16c9041f82af,"Update tutorial-rollup.md (#8687)

At this point there hasn't yet been an explanation in the tutorial of what ""segments"" are",2019-10-17T02:08:09Z
89ce6384f57cb13c776cfcc9fc7b97126b834fac,"More Kinesis resharding adjustments (#8671)

* More Kinesis resharding adjustments

* Fix TC inspection

* Fix comment'

* Adjust comment, small refactor

* Make repartition transition time configurable

* Add spellcheck exclusion

* Spelling fix",2019-10-16T06:19:17Z
4046c86d62192c812cea87188dd17e745fb83b04,"Stateful auto compaction (#8573)

* Stateful auto compaction

* javaodc

* add removed test back

* fix test

* adding indexSpec to compactionState

* fix build

* add lastCompactionState

* address comments

* extract CompactionState

* fix doc

* fix build and test

* Add a task context to store compaction state; add javadoc

* fix it test",2019-10-16T05:57:42Z
1a78a0c98a1c4bb286293430540e02aa37c6dcac,"Add credentials for ECS (#8651)

* Add credentials for ECS

* Fix import order

* Update S3 authentication methods table

* Update .spelling for new documentation",2019-10-12T16:12:14Z
d87840d894bb3c1a9283002573e3909a943f0d30,Minor updates to documentation. (#8665),2019-10-12T16:11:03Z
124efa85f6ddac3f13acd79e4c7f4059747c458a,"Fix for RoundRobinStorageLocationSelectorStrategy not to pick the same storage location over and again (#8634)

* Fix for 8614: iterators returned by strategy don't share iteration state.

* Adding comments",2019-10-12T01:53:52Z
6c609293b264fae97d5741c6a84238424a75ef96,show full value in SQL view (#8660),2019-10-10T21:16:11Z
bba262a4c56431400df880dee0ef4bb320a006dd,"Fix resource leaks and suppress an incorrect LGTM alert (#8589)

* Fix resource leaks and suppress an incorrect alert

* Replace Guava's Files",2019-10-10T19:40:45Z
4c215b417ef529eec16dd9b1955e168ec0e6092d,"Web console: misc bug fixes and tidy up (#8654)

* fix updates

* fix status dialog

* fix scan query deserialization

* extract error message

* update snapshot",2019-10-10T17:52:46Z
0c387c1d47a56b04c60b642958d7de9b625556c5,"Fix Kinesis resharding issues (#8644)

* Fix Kinesis resharding issues

* PR comments

* Adjust metadata error message

* Remove unused method

* Use sha1 for shard id hashing

* Add metadata sanity check, add comment

* Only use shard ID hashing for group mapping

* Style fix

* Fix unused import

* update comment

* Fix teamcity inspection",2019-10-10T07:16:44Z
96d8523ecbc0108e622084671172fded81065aa0,"Use hash of Segment IDs instead of a list of explicit segments in auto compaction (#8571)

* IOConfig for compaction task

* add javadoc, doc, unit test

* fix webconsole test

* add spelling

* address comments

* fix build and test

* address comments",2019-10-09T18:12:00Z
526f04c47c99cdfb74f2eb7d09ce19fa491a26bb,"Fix missing jackson jars for hadoop ingestion (#8652)

* Fix missing jackson jars for hadoop ingestion

* PR comments

* pom ordering

* New approach

* Remove all jackson-core/mapper-asl exclusions from hdfs storage",2019-10-09T06:54:55Z
8bda3afea443f8586f2e761733a57eda81cf6a3b,fix spelling errors triggered by another doc PR (#8653),2019-10-09T06:43:58Z
b6b5517c2081fb85089be8391c7890653d22d3bd,"Speed up ParallelIndexSupervisorTask tests (#8633)

Previously, some tests for ParallelIndexSupervisorTask were being run
twice unnecessarily.",2019-10-09T02:56:12Z
085327309127f9baf10b1d8688c3c040b7c03773,"Add tier based usage metrics for historical nodes to help with autoscaling (#8636)

* Add tier based usage metrics for historical nodes to help with druid historical autoscaling

Add tier based usage metrics for historical nodes to help druid cluster orchestration systems understand the historical node usage and requirements. Following metrics would be helpful -

tier/required/capacity- total capacity in bytes required in each tier. Dimensions - tier
tier/total/capacity - total capacity in bytes available in a given tier. Dimension - tier
tier/historical/count - no. of historical nodes available in each tier. Dimension - tier
tier/replication/factor - configured maximum replication factor in given tier. Dimension - tier

* fix unit test failures",2019-10-09T02:55:32Z
18758f52283696ba12ab0763260909b7ca734f1e,"Support LDAP authentication/authorization (#6972)

* Support LDAP authentication/authorization

* fixed integration-tests

* fixed Travis CI build errors related to druid-security module

* fixed failing test

* fixed failing test header

* added comments, force build

* fixes for strict compilation spotbugs checks

* removed authenticator rolling credential update feature

* removed escalator rolling credential update feature

* fixed teamcity inspection deprecated API usage error

* fixed checkstyle execution error, removed unused import

* removed cached config as part of removing authenticator rolling credential update feature

* removed config bundle entity as part of removing authenticator rolling credential update feature

* refactored ldao configuration

* added support for SSLContext configuration and TLSCertificateChecker

* removed check to return authentication failure when user has no group assigned, will be checked and handled by the authorizer

* Separate out authorizer checks between metadata-backed store user and LDAP user/groups

* refactored BasicSecuritySSLSocketFactory usage to fix strict compilation spotbugs checks

* fixes build issue

* final review comments updates

* final review comments updates

* fixed LGTM and spellcheck alerts

* Fixed Avatica auth failure error message check

* Updated metadata credentials validator exception message string, replaced DB with metadata store",2019-10-09T00:08:27Z
46ddaf3aa1a80d3f0df6cdbb929ce6da5ce916de,fix sorting for resultRow object when numeric dimension not in limitSpec (#8645),2019-10-08T23:37:15Z
2f20799868605b73579f967d348ae9f95fd4adc6,"merge recommendations into basic-cluster-tuning, add additional info (#8649)

* merge recommendations into basic-cluster-tuning, add additional info

* stupid sidebar",2019-10-08T23:33:54Z
c078ed40fd9e24e2008178156953a384a1c910e1," groupBy query: optional limit push down to segment scan (#8426)

* groupBy query: optional limit push down to segment scan

* make segment level limit push down configurable

* fix teamcity errors

* fix segment limit pushdown flag handling on query level config override

* use equals for comparator check

* fix sql and null handling

* fix unused imports

* handle null offset in NullableValueGroupByColumnSelectorStrategy for buffer comparator similar to RowBasedGrouperHelper.NullableRowBasedKeySerdeHelper",2019-10-08T22:35:07Z
d801ce2f29d30eb54ceaf3a7592be7a9f89e0a3e,"Update rollup table to properly reflect 0.16.0 (#8638)

This table stated that `index_parallel` tasks were best-effort only. However, this changed with #8061 and this documentation update was simply missed.",2019-10-07T19:37:15Z
1d42551d951d479d409109ab805e575db669f6ca,"Fix statsd types (#8628)

* fix segment underReplicated/unavailable counts to be gauges instead of counters

* fix jvm/gc/cpu to be a counter instead of timre

jvm/gc/cpu represents the total cpu time spent for multiple gc
invocations, not the time spent in each gc cycle.

the number needs to be divided by jvm/gc/count to get the average gc
time per cycle

* update docs

* fix spellcheck",2019-10-06T21:14:09Z
d91d1c869910c1df44aa231adb52d625f53e8688,make TaskMonitor continue to monitor in the face of transient errors (#8625),2019-10-04T16:42:20Z
f0d74b240d795b7dd1b2cd425f67615319810134,password provider for basic authentication of HttpEmitterConfig (#8618),2019-10-02T22:59:17Z
0a20caf17771967b29392a0bdefabb96ec801276,"update how to release doc (#8590)

* update how to release docs for staged website, updated email templates with checksums and docker

* fix typo

* review stuff

* review stuff

* hmm

* nope",2019-10-02T15:51:25Z
0f7e0ff0304d7a8f5c6d121eed9adb6eb7592751,CuratorDruidNodeDiscoveryProvider: do not ignore exception in listener execution and log it (#8616),2019-10-02T15:50:28Z
8537fbeca7d4c726dcfe6be2a3d2f280b1c46d5c,"Implementing dropwizard emitter for druid (#7363)

* Implementing dropwizard emitter for druid

making metric manager and alert emitters as optional

* Refactor and make things work

more improvements

improve docs

refactrings

* Fix teamcity inspections

* review comments

* more review comments

* add limit to max number of gauges

* update pom version

* fix pom

* review comments

* review comment

* review comments

* fix broken doc link

review comments

review comments

* review comments

* fix checkstyle

* more spell check fixes

* fix travis failures",2019-10-01T21:59:30Z
82bfe86d0c4ec042b68876eee3b9e536fc100411,"Make more package EverythingIsNonnullByDefault by default (#8198)

* Make more package EverythingIsNonnullByDefault by default

* Fixed additional voilations after pulling in master

* Change iterator to list.addAll

* Fix annotations",2019-10-01T00:53:18Z
db65068c42b660c2652b4a1f6081d2f0b3f1a69a,add reference to indexer nodes (#8607),2019-09-30T22:45:33Z
ce7e77e8bde625e7cce985592c6323d6887ed4a8,readme gifs (#8608),2019-09-30T02:32:39Z
51a7235ebcf101e61c2839fcef3643387de56510,"Making optimal usage of multiple segment cache locations (#8038)

* #7641 - Changing segment distribution algorithm to distribute segments to multiple segment cache locations

* Fixing indentation

* WIP

* Adding interface for location strategy selection, least bytes used strategy impl, round-robin strategy impl, locationSelectorStrategy config with least bytes used strategy as the default strategy

* fixing code style

* Fixing test

* Adding a method visible only for testing, fixing tests

* 1. Changing the method contract to return an iterator of locations instead of a single best location. 2. Check style fixes

* fixing the conditional statement

* Added testSegmentDistributionUsingLeastBytesUsedStrategy, fixed testSegmentDistributionUsingRoundRobinStrategy

* to trigger CI build

* Add documentation for the selection strategy configuration

* to re trigger CI build

* updated docs as per review comments, made LeastBytesUsedStorageLocationSelectorStrategy.getLocations a synchronzied method, other minor fixes

* In checkLocationConfigForNull method, using getLocations() to check for null instead of directly referring to the locations variable so that tests overriding getLocations() method do not fail

* Implementing review comments. Added tests for StorageLocationSelectorStrategy

* Checkstyle fixes

* Adding java doc comments for StorageLocationSelectorStrategy interface

* checkstyle

* empty commit to retrigger build

* Empty commit

* Adding suppressions for words leastBytesUsed and roundRobin of ../docs/configuration/index.md file

* Impl review comments including updating docs as suggested

* Removing checkLocationConfigForNull(), @NotEmpty annotation serves the purpose

* Round robin iterator to keep track of the no. of iterations, impl review comments, added tests for round robin strategy

* Fixing the round robin iterator

* Removed numLocationsToTry, updated java docs

* changing property attribute value from tier to type

* Fixing assert messages",2019-09-28T06:17:44Z
17d9d7daed72e20f07c48e84b3d0d6413fc17c36,"Increase column size for taskID and createdTime, and decrease Type and Duration (#8594)",2019-09-27T21:19:04Z
e1b4a3ab7162e74ab86465f90ad50c72c1c19f15,"bug fix for lookup leak when we remove the last lookup from lookup tier (#8598)

* bug fix for lookup leak when we remove the last lookup from lookup tier

* warnings about lookups that will never be loaded

* fix unit test",2019-09-27T10:55:02Z
a2363b6b61567548769899d99ae0f3bbee1abc1d,Remove commons-httpclient (#8407),2019-09-27T09:14:58Z
99c3e0bb3f9adeeb2bd26b6b31f779aaab644c4f,"Bump HttpClient to 4.5.10 (#8404)

* Bump HttpClient to 4.5.9

* Remove Licenses file

* Revert license

* Remove duplicate dependency

* Bump HttpClient to 4.5.10",2019-09-27T09:14:37Z
5f83cd879e69ae64c5bd361a6e0e6b6fbc96df46,Fix download link in header links (#8600),2019-09-27T01:06:12Z
7781820dead727e84f1b61a0e6c219ec115862c1,"JsonParserIterator.init future timeout (#8550)

* add timeout support for JsonParserIterator init future

* add queryId

* should be less than 1

* fix

* fix npe

* fix lgtm

* adjust exception, nullable

* fix test

* refactor

* revert queryId change

* add log.warn to tie exception to json parser iterator",2019-09-27T00:13:37Z
7f2b6577ef19f18523e8353336ad496e8dc4a270,"get active task by datasource when supervisor discover tasks (#8450)

* get active task by datasource when supervisor discover tasks

* fix ut

* fix ut

* fix ut

* remove unnecessary condition check

* fix ut

* remove stream in hot loop",2019-09-26T23:15:24Z
a280c5dc034d25cea91851c89e2cd014c65b4b5f,fix queuedSize not decrease in HttpLoadQueuePeon when load failed (#8596),2019-09-26T15:48:00Z
9f1f5e115c0595e208c0f59e12bf2a5e26ed0c29,"doubleMean aggregator to be used at query time (#8459)

* doubleMean aggregator for computing mean

* make docs

* build fixes

* address review comment: handle null args",2019-09-26T15:04:33Z
f4605f45be216cf65837c148a90ad7df05f9708b,"Website: stricter replace (#8593)

* stricter replace

* better fix",2019-09-26T00:25:39Z
a75ddaad9eef883879f18dc6c5f4dd4f84f4ca14,"Add TrustedDomain Authenticator (#8248)

* Add TrustedDomain Authenticator

update javadoc

Add nullable annotations

Add cautionary note

fix travis failure

* add IP to spell checker",2019-09-25T18:25:03Z
563718c5b2b64f35953b5bee91c4b9244d2c8974,add druid version correctly (#8586),2019-09-25T01:19:06Z
0467cce7a029753bf284a8a0fd54c370dcbe4b36,"Web console: Add frontend buttons to remove group by (#8537)

* Add frontend buttons to remove group by

* Change icon for remove group by

* Update web console to use latest toolkit

* Add test cases to verify that remove group by buttons are rendered

* Correct mistake of using incorrect components

* Update tests for two cases

* Put remove button after group by",2019-09-24T23:32:02Z
eabddffd6ea182a7a8417d68e5982b9bbf5bdf1c,"fix http firehose factory leaky connection in constructor (#8576)

* fix http firehose factory leaky connection in constructor

* stylin",2019-09-24T23:08:43Z
7c14fa08f8198385075f223bcd5994b1f47ae7d0,"Web console: Expand filter UI (#8579)

* add controls to the filter UI

* fix double base",2019-09-24T19:27:46Z
b6a16b5eb61632ad935e8982eea12e245e43b195,make it possible to not emit cache metrics and disable by default (#8561),2019-09-24T14:12:09Z
f2a444321b6d356eaaff7954bc63988f885d0fc3,"Added live reports for Kafka and Native batch task (#8557)

* Added live reports for Kafka and Native batch task

* Removed unused local variables

* Added the missing unit test

* Refine unit test logic, add implementation for HttpRemoteTaskRunner

* checksytle fixes

* Update doc descriptions for updated API

* remove unnecessary files

* Fix spellcheck complaints

* More details for api descriptions",2019-09-24T04:08:36Z
52f3f2c2291df631e4895c382b599bd17ea0ab8f,fix docs version interpolation (#8568),2019-09-23T00:38:55Z
2104cee79b5cb1bd43cac4569393bda734488070,"Web console: prevent extra trim in auto complete (#8543)

* prevent extra trim in auto complete

* add unit test",2019-09-22T22:18:51Z
94298f780927923b84f3127ec07c84cb5b115145,"Update Kafka loading docs to use the streaming data loader (#8544)

* fix redirects

* remove useless page

* fix Single server reference configurations formatting

* update batch data loading

* update Kafka docs

* fix typos and tests

* add more links

* fix spelling",2019-09-22T22:00:52Z
e7cc96874932bd63b99324f011e7eebd7f6054ed,Add new items to concurrency code review checklist (#8493),2019-09-22T11:19:37Z
ade8d1922d338d05ed48a2c8ef49c277378ca456,"#8156 : StructuralSearchInspection, Prohibit check on Thread.ge… (#8394)

* StructuralSearchInspection, Prohibit check on Thread.getState()

* review changes - 1

* review changes 2

* review changes 3

* test fix

* review changes-2

* review changes-3",2019-09-22T11:12:05Z
868bb42301460570b6ccfcbd4d251d68cd326da1,clean up default values and add infos (#8567),2019-09-22T04:00:21Z
aeac0d4fd3200b86677bfb373c12a24cdc799439,"Adjust defaults for hashed partitioning (#8565)

* Adjust defaults for hashed partitioning

If neither the partition size nor the number of shards are specified,
default to partitions of 5,000,000 rows (similar to the behavior of
dynamic partitions). Previously, both could be null and cause incorrect
behavior.

Specifying both a partition size and a number of shards now results in
an error instead of ignoring the partition size in favor of using the
number of shards. This is a behavior change that makes it more apparent
to the user that only one of the two properties will be honored
(previously, a message was just logged when the specified partition size
was ignored).

* Fix test

* Handle -1 as null

* Add -1 as null tests for single dim partitioning

* Simplify logic to handle -1 as null

* Address review comments",2019-09-22T03:57:40Z
99b6eedab59fb15664567cb9a7a40afe6ed93a8a,"Rename partition spec fields (#8507)

* Rename partition spec fields

Rename partition spec fields to be consistent across the various types
(hashed, single_dim, dynamic). Specifically, use targetNumRowsPerSegment
and maxRowsPerSegment in favor of targetPartitionSize and
maxSegmentSize. Consistent and clearer names are easier for users to
understand and use.

Also fix various IntelliJ inspection warnings and doc spelling mistakes.

* Fix test

* Improve docs

* Add targetRowsPerSegment to HashedPartitionsSpec",2019-09-20T20:59:18Z
187b507b3d1dacc2fa7b399b7d33d203d98aa26b,"Fix CuratorModule flaky test (#8562)

For CuratorModuleTest. exitsJvmWhenMaxRetriesExceeded(), the expected
log message is intermittently not the first one in the list of captured
log messages. For example, it is the second one in
https://travis-ci.org/apache/incubator-druid/jobs/586792178#L754.",2019-09-20T20:36:22Z
62afbca7b9f535e00c75afce30963a8c3a81f669,update HRTR to account for task known to be running on a worker when it shows up (#8427),2019-09-19T17:19:17Z
e184d24a74dbe425e2f80facbe09071049dcfb35,"add support for dogstatsd events in statsd-emitter (#8546)

* add support for dogstatsd events in statsd-emitter
* add option to turn on alert events (off by default)
* updated docs",2019-09-19T15:12:30Z
36a6365d9fc065c99452c5de1e19cbb2f21c14f9,"Web console: polish the data loader (#8554)

* rearrange ioConfig prop ordering in Tune step

* make useEarliestOffset mandatory

* required intent

* make segmentGranularity requred for batch ingestion

* update tests",2019-09-19T03:53:18Z
8650ee9fd0f6f639f7abcd2991e758abdfc33d47,"Web console: Druid status displayed in a table (#8484)

* Retrieved data from endpoint and displayed on table

* Added view raw button, removed json, and fixed formatting for table

* Remove error var

* Fixed snapshot for updated status dialog

* Made changes based on PR review

* Added version tag

* Updated snapshot to match changes

* Made more changes based on review

* Fix filter and formatting

* Fix filter and add unit test

* fix styling of dialog

* Fix footer height

* Fixed testing of filtering",2019-09-17T21:26:51Z
7dcbaca6586699377976c83465c75a989c271608,"Spellcheck docs (#8548)

* Spellcheck docs

Fix spelling mistakes in docs and add CI job for running spellcheck on
docs.

* Add missing license header",2019-09-17T19:47:30Z
d96ca9bd617e23fbc3ceb27fcc621c629d29bfbc,Fix serde of FilterTuning maxCardinalityToUseBitmapIndex. (#8551),2019-09-17T19:46:46Z
baec3a06e99ac2e477cd6d55ee6f65ee98b63c24,"Fix IntelliJ inspection error (#8553)

Change by #8535 causes TeamCity inspection error in CI (although it does
not show the error in the local IDE).",2019-09-17T19:45:25Z
c6f4f09557c1ddb0afedf68d96a2fb2baf039ffc,"Fix missing space in string literal and spurious Javadoc @param tags from LGTM (#8491)

* Fix missing space in string literal

* Fix spurious Javadoc @param tags",2019-09-16T09:07:47Z
c254261e73a1c240fe840938e18e6c5750ce7acf,"Make running test in Intellij work with JaCoCo (#8526)

* Make running test in Intellij work with JaCoCo

After the jacoco-maven-plugin was added, running test in IntelliJ fails
with the error ""Could not find or load main class @{jacocoArgLine}"".
Add a default IntelliJ configuration file so that running tests in the
IDE works with the jacoco-maven-plugin configuration and the
out-of-the-box developer experience is better. Other solutions described
in https://stackoverflow.com/q/24115142 (e.g., setting an empty
""jacocoArgLine"" maven property) did not work.

* Add comment with link to PR",2019-09-14T18:56:09Z
5f39ee21ff9bbe15f0e2bb022cecb905bec2d8d2,"Add diags for flaky CuratorModuleTest (#8528)

Add diagnostic messages to debug
CuratorModuleTest.exitsJvmWhenMaxRetriesExceeded() intermittent test
failures.",2019-09-14T18:55:26Z
df14e5d696da4f3d3bc19edda40d4c11ee3e97b4,"fix caching bug with multi-column group-by (#8535)

* fix caching bug with multi-column group-by

* review",2019-09-14T00:41:23Z
8b7b412d9d97d476cea590cfd4858d56926ff5cf,"Add 'edit' and 'copy code' buttons to docs (#8483)

Having an 'edit' button will help encourage doc contributions from the
community.

Having 'copy code' buttons on the code blocks is especially convenient
for the quickstart tutorials in the docs.",2019-09-13T23:56:50Z
6c7f36d36487c08bc18aee3b934e93936c7617c8,fix spec dialog highlighting (#8533),2019-09-13T22:24:08Z
0490909ab38e4ec929ef8742ddd0ac728c7fea76,"Web console: Update web console docs for 0.16.0 (#8530)

* Update webconsole docs

* home view

* fix annotation typo",2019-09-13T16:09:36Z
66341cdade973ca1b95593e273be3568f74cfd18,Fix incorrect build from source path in README.md and druid repo url. (#8531),2019-09-13T02:48:01Z
61761bd0b178cd0f3de059bea58a00f526857814,kafka version update (#8525),2019-09-13T01:56:47Z
ad72f363600a8bdd739735a68a268258d6d42763,fix forceGuaranteedRollup tooltip (#8529),2019-09-13T00:24:29Z
75978e5b981d8d7a6a8c359765225aa804bcc64d,"move google ext docs from contrib to core (#8512)

* move google ext docs from contrib to core

* fix links

* revert unintended change

* more links, add note to example ext doc that it was removed, unlink from sidebar",2019-09-12T16:40:39Z
a6eca5e935fbc244bfb983c439936ad0a51def6f,"Web console: Force intervals config (#8514)

* make sure intervals are required

* all truncated values everywhere

* continue to spec when going from tasks table

* remove unused thigns

* fix alert",2019-09-12T07:35:04Z
0145642d8b169a5d1b2c132acacd3fc726df606e,"Move router/indexer config/API docs to main pages (#8510)

* Move router/indexer config/API docs to main pages

* Restore missing properties, fix typo

* Use sentence casing

* Fix broken link",2019-09-12T04:42:58Z
b00dd84fa2523c1f71115e7bb31a293cba99dfc0,clarify error messaging for parallel indexing task when when missing numShards or intervals (#8513),2019-09-12T03:47:27Z
149825020442808bb10bbeb891dcd019cd2ff37b,Fix snitch dialog final step (#8506),2019-09-11T19:44:16Z
fb078eea1e3fab16ef877edfa46960e0d2126c2f,"fix web-console build in src distribution, fix kafka doc minimum version (#8502)",2019-09-11T04:01:07Z
762f4d0e58b0f62c4225d978ab0d49509eb3598c,"Check targetCompactionSizeBytes to search for candidate segments in auto compaction (#8495)

* Check targetCompactionSizeBytes to search for candidate segments in auto compaction

* fix logs

* add javadoc

* rename",2019-09-10T06:11:08Z
5f61374cb3d161c8ac09ec6f59147bf9d7adf664,"Fix dependency analyze warnings (#8230)

* Fix dependency analyze warnings

Update the maven dependency plugin to the latest version and fix all
warnings for unused declared and used undeclared dependencies in the
compile scope. Added new travis job to add the check to CI. Also fixed
some source code files to use the correct packages for their imports and
updated druid-forbidden-apis to prevent regressions.

* Address review comments

* Adjust scope for org.glassfish.jaxb:jaxb-runtime

* Fix dependencies for hdfs-storage

* Consolidate netty4 versions",2019-09-09T21:37:21Z
58e2634dc503151c1a79827c47be15f223207cf3,Update RoaringBitmap version to 0.8.11 (#8490),2019-09-09T20:42:16Z
2b04c22bfd157601b8ca5d705ffdd89b930e9a05,split segment view query into two (#8485),2019-09-07T04:32:39Z
067c30c8b204c6dc42370fc78cedfc666420c8bf,add option to control version of website build (#8482),2019-09-07T02:18:00Z
14a8613d696b1f258280dd1fb4dfa1965917d01b,"Exit JVM on curator unhandled errors (#8458)

* Exit JVM on curator unhandled errors

If an unhandled error occurs when curator is talking to ZooKeeper, exit
the JVM in addition to stopping the lifecycle to prevent the process
from being left in a zombie state. With this change,
BoundedExponentialBackoffRetryWithQuit is no longer needed as when
curator exceeds the configured retries, it triggers its unhandled error
listeners. A new ""connectionTimeoutMs"" CuratorConfig setting is added
mostly to facilitate testing curator unhandled errors, but it may be
useful for users as well.

* Address review comments",2019-09-06T23:43:59Z
9fa34075967695466fa24615f172a56afebf944c,"Suppress index-out-of-bounds warning from LGTM about loop unrolling (#8380)

* Suppress index-out-of-bounds warning from LGTM about loop unrolling

* Remove space

* Patch comments",2019-09-06T21:46:33Z
ec836ae8f89c54051e69c427c7512b45c0241c0d,"Fix result of division may be truncated (#8355)

* Fix result of division may be truncated

* Refactoring

* Patch comments",2019-09-06T21:45:52Z
bba391a48c635d19aeb8e60fe9ebb6bb6725fa42,Fix alerts from LGTM about python files (#8383),2019-09-06T21:41:15Z
1fe4ecf17afc7ac01fd546c2d4eefc855f51f06a,"StringDictionaryEncodedColumn dimSelector to return CARDINALITY_UNKNOWN with extractionFn (#8433)

* update DimensionDictionarySelector.getValueCardinality() javadoc

* unknown cardinality in StringDictionaryEncodedColumn dim selector

* revert StringDictionaryEncodedColumn change as that fails GroupBy-v1 execution for many working queries

* fix/add more comments",2019-09-06T21:19:25Z
645799f97702e5fe2ed61d97839388c298b5ec79,"disallow whitespace characters except space in data source names (#8465)

* disallow whitespace characters in data source names

* wrapped preconditions in a function, and simplify unit tests code

* Fixed regex to allow space, simplified repeat logic

* Fixed import style against mvn checkstyle

* Add msg in case test fails, use emptyMap(), improved naming

* Changes on assertion functions

* change wording of ""whitespace"" to ""whitespace except space"" to avoid misleading",2019-09-06T15:55:21Z
b8dc6a94b3d5493d51c8555c3b4bd51a8b3100ed,"Web console: fix datasource name auto detection (#8479)

* fix datasource name guessing

* fix comment",2019-09-06T07:57:26Z
fd58fbc8d32d0a116a0dbbcdceb77f5c900702e6,fix statds dogstatsdServiceAsTag docs example to match behavior (#8477),2019-09-06T02:05:25Z
7f28561d1706b6436463c6762844babf7dbf8f5c,Fix service tag by avoiding using a reserved tag name (#8472),2019-09-05T22:43:09Z
bffaca672afd9acc22ede8b823dec146fa2e2bdc,swap ordering clauses in the menu (#8473),2019-09-05T21:59:28Z
85119b8721ac2fa9af314f1ad98fe05f11bd3a00,fix iPad width (#8471),2019-09-05T20:56:23Z
6a6893b40664a07f7ef8c510c69b22b4b98d955b,"Fix operator mistake of expression OR (#8452)

* Add realization for updating version of derived segments in MaterializedView

* add unit test, and change code style for the sake of ease of understanding

* fix document's mistake of expression",2019-09-05T04:27:18Z
bfb02f09f8b0314227bed28edb03dd10084938cb,Add druid.segmentCache.numBootstrapThreads back to the docs (#8462),2019-09-05T03:27:17Z
f36fd73f60ed174a40f1561cf79a45ebc3c19386,"Speed up StringDimensionIndexer.estimateEncodedKeyComponentSize (#8466)

* Speed up StringDimensionIndexer.estimateEncodedKeyComponentSize

* Remove print

* Move benchmark, add header",2019-09-05T03:26:04Z
de1884041283186f77c7f83e381d90e9cc0b0dc6,"Fix inconsistent equals and hashCode (#8381)

* Fix inconsistent equals and hashCode

* Patch comments

* Remove equals and hashCode from InsensitiveContainsSearchQuerySpec",2019-09-04T05:48:08Z
ee4ebb496a61af208717f5a0662aceb2dcf94518,make single/multi value string column handling official in aggregation (#8428),2019-09-03T20:47:09Z
637a9e861498883b54db5b1f732055cf3eddc9f0,"Web console: Fix segment re-ingest (#8454)

* fixing ingest spec

* rm console.log

* ingest segment spec

* make sure step query always being run

* better example interface

* add keywords

* placeholders

* do not overwrite datasource name in data loader spec

* fix comment typo",2019-09-03T19:13:57Z
abd86467f8d88e7095dcb5b2c30a45e4226bbb65,"Bump ORC library to 1.5.6 (#8405)

Changelog at:
https://orc.apache.org/docs/releases.html#current-release---156",2019-09-02T09:24:31Z
31732f0e21f18e6c448b113a93ff156a34df8b24,"Add realization for updating version of derived segments in Materiali… (#8281)

* Add realization for updating version of derived segments in MaterializedView

* add unit test, and change code style for the sake of ease of understanding",2019-09-02T08:24:53Z
58fbb69113d6bfc30bb4b28412a05e3b5ea334ba,Fix hump nomenclature (#8447),2019-08-31T16:07:29Z
0be4a41c06c9c052038465f8c20c051a665437a4,"Website Doc: fix bash command (#8442)

* fix ""gunzip -k"" to ""gunzip -c""",2019-08-31T05:22:09Z
984958122b962ab019a590f4fd01792de81b75df,"packaging script adjustments (#8436)

* set encoding for license and notice scripts, split generate-license.py into generate-binary-license.py and check-licenses.py, check-licenses when -Papache-release is used

* missing docs

* doc fix

* more doc fix

* remove comments

* good catch travis +1

* fix lgtm alerts",2019-08-30T06:27:43Z
f55e1be80b055bdec6e0c25d1d883cd586c304bf,"Web console: fix task log tailing (#8434)

* fix log tailing

* update snapshots",2019-08-29T21:15:06Z
beed07022a890778cf563d8c8fdac8955871f82a,"Web-Console: Increase snapshot coverage (#8408)

* increase test-coverage

* fix ordered inputs

* fixes

* prettier fix

* fixes",2019-08-29T15:41:34Z
4b69ce0f0970f7d01401043839be46f25c28b7a2,"enable unit tests with JDK11 (#8400)

* enable unit tests with JDK11

This enables unit tests with openjdk11, splitting up the build into
stages to have it fail faster

The integration test docker image still uses openjdk8, so there is
little reason to run those tests with JDK11 yet

* remove stages",2019-08-28T17:29:13Z
31e6280b75888efb76fa61f5086b26d67428459b,"Use Codecov (#8388)

* Use Codecov

Upload coverage reports to Codecov. For now, having Codecov comment on
PRs or enforcing a minimum coverage threshold are both disabled until
the Codecov coverage reports look reliable:
https://codecov.io/gh/apache/incubator-druid

* Split bash and curl into separate lines",2019-08-28T15:49:30Z
6327cb3d4c0fb0d289d439c5d248050d38e92361,add missing step in release process (#8422),2019-08-28T15:34:17Z
3baf31e9a8d056c7eeba2ee8576c638de9816481,add documentation for group by array based result format (#8416),2019-08-28T15:30:31Z
f4e2902226096c63e8c7bb3c9beefcc01908fa7b,Add Checkstyle check for String literal equality (#8386),2019-08-28T14:53:42Z
c73a489335fc0ae8889751750d1d6fcf757bbbaa,bump master version to 0.17.0-incubating-SNAPSHOT (#8421),2019-08-28T08:58:36Z
cd750463fa622ca2ba5c60e3b54aeceb8d29e4f8,Fix default CliIndexer TLS port (#8415),2019-08-28T02:23:20Z
7afe473fd3d1a0d2e17383e4f3e6c18fb8bad28f,"How to asf release (#8370)

* add ASF release manager guide

* fix broken link

* fix bold

* fix order

* clean up

* oops

* pom

* more

* fix

* fixes

* fix

* fix",2019-08-28T01:36:13Z
5c3db41c2b9786dcb0dfa28dabdc1bd49ceeb1eb,"string column handling for long/float min/max/sum aggregators (#8319)

* string column handling for long min/max/sum aggregators

* add apache license to new files

* use 'L' as suffix for long literal instead of 'l'

* return null in ParallelCombiner.SettableColumnSelectorFactory.getColumnCapabilities(String) as is required by contract of ColumnSelectorFactory interface

* fix more tests",2019-08-27T23:10:59Z
d5d170f866f9512ed859f643b84fc11ff341fba4,"skip unnecessary aggregate(..) calls with LimitedBufferHashGrouper (#8412)

* skip unnecessary aggregate(..) calls with LimitedBufferHashGrouper

* remove unused bucketWasUsed arg from canSkipAggregate(..)",2019-08-27T22:01:07Z
4d87a1954778a2de7609a24daf1b225b874e74be,"Logging emitter to publish query and other metric events as valid json objects (#8359)

* LoggingEmitter: print event as json

* use DefaultRequestLogEventBuilderFactory in emitting request logger by default

* print context in query metric as json

* removed unused jsonMapper from DefaultQueryMetrics

* add comment

* remove change to DefaultRequestLogEventBuilderFactory.java",2019-08-27T22:00:23Z
44dd5b5f0df2e5d07f3887595a5c32e72b0bf4cb,"add jaxb-runtime to fix exception with newer versions of java (#8409)

* add jaxb-runtime to fix exception with jdk9+

* fix licenses

* oops",2019-08-27T20:25:05Z
d8b81f4fd935917bfc6b5d6d78553bbfb6509f45,"Speed up javascript Travis CI jobs (#8361)

* Speed up javascript Travis CI jobs

Skip mvn install for javascript CI jobs since it is not needed.

* Specify base filepath for source files

* Remove coveralls",2019-08-27T19:03:48Z
e5ef5ddafa632256fe8a387a117557c415bee7df,"Fix the shuffle with TLS enabled for parallel indexing; add an integration test; improve unit tests (#8350)

* Fix shuffle with tls enabled; add an integration test; improve unit tests

* remove debug log

* fix tests

* unused import

* add javadoc

* rename to getContent",2019-08-27T02:27:41Z
95f727f66c24a30752b3e42ac61cd3d50c021bf0,Add docker shield (#8403),2019-08-27T02:04:51Z
a4b842ac2eca6bc459a14433c82783ca5d024ea5,"Speed up ExpressionSelectors.makeExprEvalSelector (#8373)

* Speed up ExpressionSelectors.makeExprEvalSelector

Addresses performance bottlenecks observed when running a search query
with an expression filter and granularity set to none by caching and
changing streams to for-loops. After changes, the query was observed to
run 2-3x faster.

Also fixes various IntelliJ inspection warnings.

* Fix static analysis errors",2019-08-26T21:34:16Z
b2821a83710a97921212a98727fefa0b2fcd15d7,"do not exclude client core jar (#8339)

make indexing service depend on hadoop client",2019-08-26T20:48:24Z
894b4efb36bf3c36fdd780f48214a814065c3474,"Web console: Fix segment timeline styling (#8402)

* Fix segment timeline styling

* update snapshot",2019-08-26T04:31:20Z
9254dc8b805ec8ac98e61e4e40f68626c91949d0,"Web console: Save query context also (#8395)

* tidy up menus

* fix query output API

* save context also

* pull out auto run into a switch

* better copy

* add group_id

* support FLOAT also

* use built in time logic

* fix trunc direction

* add skipCache

* add manifest url

* remove depricated props",2019-08-25T23:56:27Z
496dfa3b15106c7d2ff08dfbb380fad4e7c91d69,"fix JVMMonitor initialization with JDK11 (#8397)

JVMMonitor requires access to jdk.internal.perf.Perf to enable GC
counters, which requires additional JVM arguments with JDK11.

This change adds a fallback in case GC counters cannot be initialized,
and logs a warning message explaining how GC counters can be enabled.",2019-08-25T12:26:58Z
c626452b47354ecc4847808f717d98c153e11c23,"Add nano-quickstart single server example configuration (#8390)

* Add nano-quickstart single server example configuration

* Use two workers

* Shrink processing buffers",2019-08-25T05:07:20Z
02fe3db911a0b3b32d07b9233c9aaae5d6482290,"Zookeeper version is updated. (#8363)

* Zookeeper version is updated.

* Zookeeper version is updated at licenses.yaml

* licenses.yaml is updated and dependencies are fixed to make the project successfully build.

* Zookeeper versions are fixed at licenses.yaml",2019-08-25T05:00:43Z
d5e3c53e740da3b6507149597aca7a01a539e926,workaround for Guava 16 bug using Java 9 and above,2019-08-25T01:59:14Z
8e0c307e54d8fdf87c5b9447c4c53a71e6502715,"Do not assume system classloader is URLClassLoader in Java 9+ (#8392)

* Fallback to parsing classpath for hadoop task in Java 9+
In Java 9 and above we cannot assume that the system classloader is an
instance of URLClassLoader. This change adds a fallback method to parse
the system classpath in that case, and adds a unit test to validate it matches
what JDK8 would do.

Note: This has not been tested in an actual hadoop setup, so this is mostly
to help us pass unit tests.

* Remove granularity test of dubious value
One of our granularity tests relies on system classloader being a URLClassLoaders to
catch a bug related to class initialization and static initializers using a subclass (see
#2979)
This test was added to catch a potential regression, but it assumes we would add back
the same type of static initializers to this specific class, so it seems to be of dubious value
as a unit test and mostly serves to illustrate the bug.

relates to #5589",2019-08-25T00:47:54Z
20f7db5d22fe746472731b5c9cea9e5a232fe1d3,"Fix ConcurrentModificationException in JDK11 (#8391)

When building column/dimension selectors, calling computeIfAbsent can
cause the applied function to modify the same cache through virtual
column references. The JDK11 map implementation detects this change and
will throw an exception.

This fix – while not as elegant – breaks the single call into two
steps to avoid this problem.",2019-08-24T22:24:50Z
5c7803fe6bd185d085e957d8579a2ba49ca3dc0f,fix powermock classloader issues with Java 9 and above,2019-05-02T06:22:22Z
c948422f3238e90c245244c85953831c6e78e6ad,"Web console: Better build experience (#8389)

* rename sql docs

* rm old file

* add old files",2019-08-24T18:35:30Z
efbf1a582229ee2f379f2e9e4236c08a67095a47,Restore old console (#8387),2019-08-24T00:48:11Z
95fa60961576224ad696e7801e43e75efe0868b6,"Fix wrong partitionsSpec type names in the document (#8297)

* Fix wrong type names for partitionsSpec

* add unit tests; add json properties for backward compatibility

* beautify conf names

* remove maxRowsPerSegment from hashed partitionsSpec

* fix doc build",2019-08-23T20:44:58Z
7749571a7fdfcad64d7ff9b3d6926d4c619a87fe,"order and add more ports to hadoop docker container in hadoop indexing tutorial (#8329)

LGTM",2019-08-23T20:43:06Z
20ea90a5a6839dfdff0944034b5a40a295715b39,"Web console: more explicit limit on run button (#8378)

* update sql doc parsing

* keyword fixes

* fix header default

* tidy

* fix tests",2019-08-23T20:40:48Z
368ace4e87955f27491558515f4019e604ca8c5a,"Fix ClassCastException for TopN with long-type dimension (#8349)

* Fix ClassCastException for TopN with long-type dimension

* Add DimValHolderTest",2019-08-23T19:55:31Z
2383d9e5229bf9f90fa6a4554d845050148b3303,"Disable coveralls (#8382)

The coveralls code coverage reports inaccurate coverage for our parallel
builds. Disable it until it can be fixed or a better alternative can be
found.",2019-08-23T15:05:37Z
33f0753a70361e7d345a488034f76a889f7c3682,"Add Checkstyle for constant name static final (#8060)

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* check ctyle for constant field name

* merging with upstream

* review-1

* unknow changes

* unknow changes

* review-2

* merging with master

* review-2 1 changes

* review changes-2 2

* bug fix",2019-08-23T10:13:54Z
d117bfb14957c752b4d6be2fc311ad8d535f3b34,"Handle exception thrown in log while trying to call sun.misc.VM.maxDirectMemory() which is not available in Java 11 (#8352)

* handle exception thrown while trying to call sun.misc.VM.maxDirectMemory() which is not available in Java 11

* fixup String.format -> StringUtils.format",2019-08-23T08:22:41Z
661976f2665eaad40600632a043f296085554041,"Reset sketch combiner in AggregatorCombiner (#8368)

* Reset union in AggregateCombiner

* Use newer sketch objects for test

* Add empty sketch objects",2019-08-23T07:22:40Z
bfbae76031cc0408294a2698f78842777917d15b,"Web-console: small fixes  (#8376)

* fix column tree

* move remove filter

* fix lgtm

* remove from state

* stop mutating state diirectly

* fix column-tree

* remove component did mount

* remove expanded node",2019-08-23T04:54:11Z
cf2a2dd9174e975e180b18b5d4fc522a37ee4af5,"Add group_id to the sys.tasks table (#8304)

* Add group_id to overlord tasks API and sys.tasks table

* adjust test

* modify docs

* Make groupId nullable

* fix integration test

* fix toString

* Remove groupId from TaskInfo

* Modify docs and tests

* modify TaskMonitorTest",2019-08-22T22:28:23Z
fba92ae469b512cca6cdf86ffc1c1a2090808453,"Fix to always use end sequenceNumber for reset (#8305)

* Fix to always use end sequenceNumber for reset

* fix checkstyle

* fix style and add log",2019-08-22T21:51:25Z
71676cd16ddd58329abe0fad409a1f79779c72da,"add checkbox for licenses.yaml in PR template, mention it in CONTRIBUTING.md (#8367)",2019-08-22T21:14:24Z
e3e85e8f1a6d652afd5f70b04ca612b012c2f5e6,"use alternative public domain text instead of lorem ipsum text in compression test (#8299)

* use apache license text instead of lorem ipsum text to be unambiguous with regards to licensing

* feed your head",2019-08-22T19:53:38Z
64f3c6588b17631afd6b71603c510ad7fec85910,"Add coveralls parallel builds webhook (#8374)

Since we use parallel builds for unit tests, follow the instructions for
properly merging the results on coveralls:
https://docs.coveralls.io/parallel-build-webhook",2019-08-22T19:50:00Z
96e2142ea3f7850a0a612e0b8feba8df9f996d27,"Cleanup appenderators and segment walkers in UnifiedIndexerAppenderatorsManager (#8287)

* Cleanup Appenderators in UnifiedIndexerAppenderatorsManager

* PR comments

* More PR comments

* Fix test",2019-08-22T19:18:46Z
167a0e7ae1099bef34a848785817b6e7ca7fe004,[opentsdb-emitter] Fix ingest persists metrics typo (#8233),2019-08-22T17:58:19Z
441616919b04ff3850b87a2ed869f80cb1f72a48,Put readme in a good order (#8372),2019-08-22T16:50:55Z
5274c5ab733bd12b8ff5da7405a55d65500f63cf,"Web-Console: Replace from clause (#8371)

* add replace from

* add failture state

* fix uninential downgrade

* use uppercase for SQL keywords",2019-08-22T16:09:37Z
b95607d31cc094c213670698710c5f0415c86fde,"remove YeOldePlumberSchool.java, unused (#8347)",2019-08-22T01:15:51Z
a4d1219184c541194b9bdc7929c555d4de5314d0,Removed hard-coded Kafka Deserializer in Web-UI Kafka data import such that users can supply a custom deserializer in the UI as well as in hand-built ingestion specs. (#8364),2019-08-22T01:03:57Z
aa51668ea78ea936135259372ed1268fc23368e4,"Web console: LGTM alert squash + final fixes (#8351)

* mv old console

* update dep

* reduce card size

* fix tuning configs for forceGuaranteedRollup

* fix tests

* revert console mv

* fix some old console issues

* revert build change",2019-08-21T20:52:48Z
e1f94a5e264cbfb5cdbeaeb086f989a9e51ecb5b,Reduce the size of images with lossless compression (#8358),2019-08-21T20:29:30Z
010f70b3710fcbeb7cbed2617a3701ce925c79dc,"autogenerate NOTICE.BINARY from NOTICE and licenses.yaml (#8306)

* migrate binary notice entries to live in licenses.yaml, use licenses.yaml and NOTICE to generate NOTICE.BINARY at distribution time

* +x

* move release scripts to distribution/bin, fixup notice script, trim dependencies for avro and kerberos in licenses.yaml

* add missing hdfs-storage dependencies

* revert to old syntax, fixes

* formatting

* update notices for recently updated dependencies",2019-08-21T19:46:27Z
22d6384d364a851fd2b5cecafea9d72b004cb03b,"Fix unrealistic test variables in KafkaSupervisorTest and tidy up unused variable in checkpointing process (#7319)

* Fix unrealistic test arguments in KafkaSupervisorTest

* remove currentCheckpoint from checkpoint action

* rename variable",2019-08-21T17:58:22Z
d00747774208dbbfcb272ee7d1c30cf879887838,"Docusaurus build framework + ingestion doc refresh. (#8311)

* Docusaurus build framework + ingestion doc refresh.

* stick to npm instead of yarn

* fix typos

* restore some _bin

* Adjustments.

* detect and fix redirect anchors

* update anchor lint

* Web-console: remove specific column filters (#8343)

* add clear filter

* update tool kit

* remove usless check

* auto run

* add %

* Fix resource leak (#8337)

* Fix resource leak

* Patch comments

* Enable Spotbugs NP_NONNULL_RETURN_VIOLATION (#8234)

* Fixes from PR review.

* Fix more anchors.

* Preamble nix.

* Fix more anchors, headers

* clean up placeholder page

* add to website lint to travis config

* better broken link checking

* travis fix

* Fixed more broken links

* better redirects

* unfancy catch

* fix LGTM error

* link fixes

* fix md issues

* Addl fixes",2019-08-21T04:48:59Z
c4db83608fb9ca4f26da207805652fbfc1eee009,Add grade shield (#8344),2019-08-21T04:20:19Z
e4aa7fb26846c7eb1828d8c882ff2ba23e856dfc,"Web-console: fix alerts from lgtm (#8346)

* fix alerts from lgtm

* remove unordered imports

* fix introduced alert

* move getExpanded to renderSchemaSelector

* use getDerivedStateFromProps

* use prevState

* add semi colons, remove unused imports

* fixes",2019-08-21T03:40:47Z
c87b68d2a4240e8864e4d010f035ede7e609303b,"use Number instead of long for response context (#8342)

* use Number instead of long for response context to be forgiving of json serde to int or long

* test that encounters issue without fix

* now with more test

* is ints",2019-08-21T02:05:49Z
d5a19675dd37ac6ec876117bad5bcb53e33f46bd,"Remove fromPigAvroStorage from the docs (#8340)

This one has been deprecated a while ago",2019-08-20T23:34:55Z
14a4238381d74cfc730c670a9f1fe9ed14226f92,Bump JUnitParams from 1.0.4 to 1.1.1 (#8017),2019-08-20T23:15:12Z
8821ac330d818d02b6fb4b789a95fea94608d570,"Bump opencsv from 4.2 to 4.6 (#8294)

* Bump opencsv from 4.2 to 4.6

* Fix transitive dependencies",2019-08-20T23:12:03Z
3a58431bff647c12ca32c08c5cbaf427b1712b73,"Bump jackson-jq from 0.0.7 to 0.0.10 (#8293)

* Bump jackson-jq from 0.0.7 to 0.0.10

For the changelog:
https://github.com/eiiches/jackson-jq/releases

* Update dependent licenses",2019-08-20T23:09:04Z
6fa22f6939d739170146e766d9c26ec3697a3184,"Enable code coverage (#8303)

* Enable code coverage

Code coverage was disabled via
https://github.com/apache/incubator-druid/pull/3122 due to an issue with
cobertura in Travis CI. Switch code coverage tool from cobertura to
jacoco to avoid issue and re-enable coveralls for Travis CI.

* Exclude non-production code

* Exclude benchmark generated code

* Exclude DruidTestRunnerFactory",2019-08-20T22:36:19Z
cb1339e19a29ae0696ccbf127f83f1b18b3d65e7,"Bump derby from 10.11.1.1 to 10.14.2.0 (#8292)

* Bump derby from 10.11.1.1 to 10.15.1.3

* Update server/pom.xml as well

* Move to derby 10.14.2.0

10.15.* is Java9+
https://db.apache.org/derby/derby_downloads.html",2019-08-20T21:03:32Z
e2a25fb51e7f569597cf0a6e74b22ed80ba84f3d,Add logging for LZ4Factory instance type (#8341),2019-08-20T20:24:53Z
5e35500e0e41ccaa3138ff221b61cad95836c31a,Fix unused format argument (#8345),2019-08-20T19:45:46Z
ffcbd1ecb895dcea68a9029e28df2134949d8d00,"Ensure ReferenceCountingSegment.decrement() is invoked correctly (#8323)

* fix issue8291. Make sure ReferenceCountingSegment.decrement() is invoked correctly

* add some comments in SinkQuerySegmentWalker.java

* extracting perSegmentRunners and perHydrantRunners to reduce the level of nesting",2019-08-20T19:01:16Z
818bf4990c456cfb844ef552c1b7da32ca87bf60,Enable Spotbugs NP_NONNULL_RETURN_VIOLATION (#8234),2019-08-20T14:23:46Z
781873ba53a43db50e99e6f21180f748b3c65919,"Fix resource leak (#8337)

* Fix resource leak

* Patch comments",2019-08-20T09:55:41Z
e64070b8bfb5fa51531d5c06dc843a24fb048454,"Web-console: remove specific column filters (#8343)

* add clear filter

* update tool kit

* remove usless check

* auto run

* add %",2019-08-20T02:54:18Z
dd2e53baf4504d501593d452b6023f1c94e63796,Clarify Avro decoder docs (#8302),2019-08-19T20:37:18Z
56e440383f639e187a411f0c104e7761905a0c10,"Web console: data loader native batch shuffle UI (#8229)

* data loader shuffle UI

* better support for inline firehose

* feedback changes

* make numShards mandatory sometimes

* edit context dialog fixes

* make auto form less agro

* download full log

* improve auto column detection

* add sample for example",2019-08-19T20:27:34Z
566dc8c719489283f9190cefd6346bbb3f12955f,Fix missing format argument (#8331),2019-08-19T08:19:44Z
cae1361c32a8a506cc5bb228d614b26fb64d9f55,"Web-console: gate auto complete on current table and schema (#8322)

* gate auto complete on current table and schema

* reset defaults

* add static functions

* move completions to state",2019-08-17T16:34:36Z
31af4eb9adf3e158208bf82bde959157d3ca8629,Rename maxNumSubTasks to maxNumConcurrentSubTasks for native parallel index task (#8324),2019-08-16T22:57:13Z
0d69438395eae56b15f0ca9a28da7f89bac4e820,"Web console: make console's Explain more honest (#8327)

* fix structure

* update snapshots",2019-08-16T22:51:49Z
7362b1d8fc13f13e171cd9500f9d71dde84b466e,exclude avro extension dependencies that are already included in druid libs (#8309),2019-08-16T22:42:06Z
a34cfd3e68dd3a1b6583c3ee13d2ca3b446ed286,"exclude kerberos extension dependencies that are already included in druid core libraries (#8310)

* exclude kerberos extension dependencies that are already included in druid libs

* missing net

* exclude json-smart

* eh might as well go aggro and remove all the ones it looks like we do not need

* guess we actually need this one",2019-08-16T22:41:47Z
b654096194240cbc576732c4fda8349564b28c7c,Fix equals for ArrayOfDoublesSketchAggregatorFactory (#8326),2019-08-16T21:47:37Z
399b3ad7de14e2029294ac418a82b17ca108a869,Hide descriptive comments (#8313),2019-08-16T02:08:34Z
5dac6375f382ba485ec000802ff0e922929df95d,"Add support for parallel native indexing with shuffle for perfect rollup (#8257)

* Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks

* kill runner when it's ready

* add comment

* kill run thread

* fix test

* Take closeable out of Appenderator

* add javadoc

* fix test

* fix test

* update javadoc

* add javadoc about killed task

* address comment

* Add support for parallel native indexing with shuffle for perfect rollup.

* Add comment about volatiles

* fix test

* fix test

* handling missing exceptions

* more clear javadoc for stopGracefully

* unused import

* update javadoc

* Add missing statement in javadoc

* address comments; fix doc

* add javadoc for isGuaranteedRollup

* Rename confusing variable name and fix typos

* fix typos; move fetch() to a better home; fix the expiration time

* add support https",2019-08-16T00:43:35Z
eeae5d936501d5a9f5f7d4a555f363f97c002119,"Add a warning about experimental segment locking (#8301)

* Add a warning about experimental segment locking

* fix typo",2019-08-15T23:07:59Z
ef7b9606f2137a7a724e65c52c28375ce0dff427,"Keep track of task location for completed tasks (#8286)

* Keep track of task location for completed tasks

* Add TaskLifecycleTest location checks",2019-08-15T21:57:02Z
8924d285dc39dc548db611aa4429ae5e62d64a44,"Web-Console: add more side column functions to query view (#8283)

* small fixes

* run jest -u

* add trim

* add to groupby

* save

* add functionality to column tree menu

* remove history dialog

* rename file

* fixes

* add new values to time-menu

* add query dialog

* add more functions to collumn-tree menu

* add menu functions

* remove test

* update tests, fix extra 0s, clear in between time filters

* fixes

* add deffered

* save

* add alias's

* change menu style

* fix substring

* small fixes

* add auto run to run button

* move divider to a reasonable position

* fix auto expland

* run jest -u

* fix auto run

* prevent aggregate cooumn changes

* fix group by bug

* add quertAst to state

* ui fixes

* prevent filter on non existant ast

* add auto run to shows

* use handle run

* handle *

* add alias and tslint fix",2019-08-15T08:22:25Z
ff26fcb159506140441701356332a59fb08b7ce8,"add copyright info back to NOTICE and NOTICE.BINARY (#8298)

* add Apache copyrights back to NOTICE per https://lists.apache.org/thread.html/4e296f3ede34aa5aeb0b2a8ed0f3540b320bce07936aa3c8bfa135b3@%3Cgeneral.incubator.apache.org%3E

* fixup notice.binary

* now with 3x the hive notices

* less redundant",2019-08-15T00:42:47Z
1f3a99616d06a0131f4ae1b66ef37442f1b7c796,"Upgrade Kafka library for kafka-lookup module (#8078)

* Upgrade Kafka library for kafka-lookup module

* Update licenes.yaml

* Adopt class workaround from KafkaRecordSupplier#getKafkaConsumer

* Update lisences for kafka clients",2019-08-14T20:46:25Z
7fa0ff5e11d4552fa62e0fb78ff99219197f62b7,adjust azure storage retry conditions (#8296),2019-08-14T04:48:45Z
c8d7e0a8681ef2d25cd784d2cb7ea3b2aa609acd,"Add slack badge (#8295)

* Add slack badge

* Disable broken badges",2019-08-14T04:48:17Z
1a3aa1cfc0be1191ceb750d5c0d73449b852e9b2,"Bump commons-io from 2.5 to 2.6 (#8006)

* Bump commons-io from 2.5 to 2.6

* Update licenses.yaml

* Address comments",2019-08-14T00:10:37Z
176da53996220776979f4ef7672ca4d31acb00b6,"make double sum/min/max agg work on string columns (#8243)

* make double sum/min/max agg work on string columns

* style and compilation fixes

* fix tests

* address review comments

* add comment on SimpleDoubleAggregatorFactory

* make checkstyle happy",2019-08-13T22:55:14Z
a5c9c2950fdfb1012eb1e758eda31e15f040e6ae,"Add missing maxBytesInMemory in tuningConfig for auto compaction (#8274)

* Add missing tuningConfigs for auto compaciton

* Add doc

* add test",2019-08-13T19:10:26Z
eaa4651fa470a7fc0a678039179eac5d46096ed6,"docker build cleanup and speed improvements (#8288)

* switch builder image to smaller ""slim"" debian base
* use built-in pyyaml
* skip various build checks to speed up compilation
* create user/group in target image directly",2019-08-13T15:33:06Z
312cdc245239aa1411665e91eaeeadfd13301d25,"Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks (#8236)

* Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks

* kill runner when it's ready

* add comment

* kill run thread

* fix test

* Take closeable out of Appenderator

* add javadoc

* fix test

* fix test

* update javadoc

* add javadoc about killed task

* address comment

* handling missing exceptions

* more clear javadoc for stopGracefully

* update javadoc

* Add missing statement in javadoc

* typo",2019-08-13T00:42:06Z
ccd87d2667aa7b33cc17a420e5fe882b78fa19b6,"Speedup package check job (#8282)

The package check job sometimes hits the 50 minute Travis CI job time
limit. Move license checking tasks in ""package check"" job to ""license
check"" job to rebalance the job runtime (the ""license check"" job
currently takes about 1 minute). Moving the logic from build.sh to
.travis.yml also gives more visibility into how long each step takes
(i.e., generate-license-dependency-reports.py vs generate-license.py).",2019-08-12T20:25:08Z
6b4d028b96d308eaf10220b49e0d9b434a750065,"[statsd-emitter] Add config to send Druid process/service as tag (#8238)

* [statsd-emitter] Add serviceAsTag option

* [statsd-emitter] Refactor serviceAsTag option

* [statsd-emitter] Update statsd.md

* [statsd-emitter] add default prefix

* [statsd-emitter] update statsd.md

* [statsd-emitter] Remove extra spaces

* [statsd-emitter] Improve docs for config `dogstatsdServiceAsTag`

* [statsd-emitter] Simplify equals() for StatsDEmitterConfig.java

* [statsd-emitter] Add @Nullable for StatsDEmitterConfig.java",2019-08-12T20:18:44Z
1054d8517150c2fa1062608726ea9fd4c7912de3,"add mechanism to control filter optimization in historical query processing (#8209)

* add support for mechanism to control filter optimization in historical query processing

* oops

* adjust

* woo

* javadoc

* review comments

* fix

* default

* oops

* oof

* this will fix it

* more nullable, refactor DimFilter.getRequiredColumns to use Set, formatting

* extract class DimFilterToStringBuilder with common code from custom DimFilter toString implementations

* adjust variable naming

* missing nullable

* more nullable

* fix javadocs

* nullable

* address review comments

* javadocs, precondition

* nullable

* rename method to be consistent

* review comments

* remove tuning from ColumnComparisonFilter/ColumnComparisonDimFilter",2019-08-09T23:36:18Z
b28e252d9a5c1c7c59fb5cfad2bd9093f6705ea7,"Minor Spelling Error (#8277)

* Minor Spelling Error

* Update mySQL password in docs

/extensions-core/mysql update druid.metadata.storage.connector.password",2019-08-09T21:06:02Z
e8727dc98b4125dcdd35b44cb12a791d404d926a,"Fix DeterminePartitionsJob reducer when total rows < targetPartitionSize * SHARD_COMBINE_THRESHOLD (#8273)

* Fix DeterminePartitionsJob reducer when rows < targetPartitionSize

* use isEmpty()",2019-08-09T21:03:30Z
170368999df87ca49f8cca25e2553d55b84c0570,"Bump rhino from 1.7R5 to 1.7.11 (#8008)

* Bump rhino from 1.7R5 to 1.7.11

* Update the version of rhino in licenses.yaml",2019-08-09T20:10:54Z
f7cf2f7cad430d7d94bf3f8993af81552290430d,"Bump httpcore from 4.4.4 to 4.4.11 (#7870)

* Bump httpcore from 4.4.4 to 4.4.11

* Update the version of httpcore in licenses.yaml",2019-08-09T16:53:20Z
d1f286b7f49a0998673e3ffb68f70c4ac8504a5b,fix no from clause error (#8275),2019-08-09T04:42:52Z
b359c5b3d9e6934b7c448488fe58f4b6f0122d44,"Fix SIGAR dependency connection timeout (#8258)

After enabling parallel builds for ""mvn install"", the sigar dependency
would sometimes resolve to the incorrect artifact repo for some of the
maven modules. This issue seems to be fixed by moving the definition of
the sigar dependency's artifact repo to the root POM.

Also, depending on network speeds, ""mvn -q install"" may take longer than
the default 10 minute timeout to print any output. Use travis_wait to
extend the timeout to 15 minutes.",2019-08-09T01:13:18Z
76675d61636a3cf786eb4310d5447786c9ec750c,"Update README.md (#8261)

remove IRC",2019-08-08T17:23:41Z
00e948a48978b16915154bd85de4f632f3aae717,add slack url to readme (#8259),2019-08-08T16:15:27Z
e88bbe71c054b3c0940df3a863b30476a5f58dce,"Adjust default globalIngestionHeapLimitBytes for indexer, add more docs (#8255)",2019-08-08T06:04:07Z
03a37936ecc32ef71bcfa0fe57e876911ac5df7e,"Web-Console: Column tree button fixes (#8253)

* small fixes

* run jest -u

* add trim

* remove trim, update package

* fix package-lock",2019-08-07T23:48:17Z
8fa114c34965e4ad19a3782b60f19ee2036ccb5a,"Fix bugs in overshadowableManager and add unit tests (#8222)

* Fix bugs in overshadowableManager and add unit tests

* Fix SegmentManager

* add segment manager test

* Address comments

* Address comments",2019-08-07T20:51:21Z
172ebba4b84407213677e4ba2450143a3c711141,"more adjustments to PR template (#8048)

* more adjustments

* friendly thanks, remove italics, change key changed/added to list",2019-08-07T20:17:47Z
05b44e3467b423be0cb2fd449d799241898fa5b0,"Speedup Travis CI jobs (#8240)

Reorganize Travis CI jobs into smaller faster (and more) jobs. Add
various maven options to skip unnecessary work and refactored Travis CI
job definitions to follow DRY.

Detailed changes:

.travis.yml
- Refactor build logic to get rid of copy-and-paste logic
- Skip static checks and enable parallelism for maven install
- Split static analysis into different jobs to ease triage
- Use ""name"" attribute instead of NAME environment variable
- Split ""indexing"" and ""web console"" out of ""other modules test""
- Split 2 integration test jobs into multiple smaller jobs

build.sh
- Enable parallelism
- Disable more static checks

travis_script_integration.sh
travis_script_integration_part2.sh
integration-tests/README.md
- Use TestNG groups instead of shell scripts and move definition of jobs
  into Travis CI yaml

integration-tests/pom.xml
- Show elapsed time of individual tests to aid in future rebalancing of
  Travis CI integration test jobs run time

TestNGGroup.java
- Use TestNG groups to make it easy to have multiple Travis CI
  integration test jobs. TestNG groups also make it easier to have an
  ""other"" integration test group and make it less likely a test will
  accidentally not be included in a CI job.

IT*Test.java
AbstractITBatchIndexTest.java
AbstractKafkaIndexerTest.java
- Add TestNG group
- Fix various IntelliJ inspection warnings
- Reduce scope of helper methods since the TestNG group annotation on
  the class makes TestNG consider all public methods as test methods

pom.xml
- Allow enforce plugin to be run from command-line
- Bump resources plugin version so that ""[debug] execute contextualize""
  output is correctly suppressed by ""mvn -q""
- Bump exec plugin version so that skip property is renamed from ""skip""
  to ""exec.skip""

web-console/pom.xml
- Add property to allow disabling javascript-related work. This property
  is overridden in Travis CI to speed up the jobs.",2019-08-07T16:52:42Z
e2d1d00fb837183acd11e84b0d3d5777f58dbe40,"Web-Console: Add show and copy actions to column tree  (#8251)

* save

* add copy and show popup to column tree menu

* fixes

* nest css, uset functions

* fix copy state

* update package

* update package-lock",2019-08-07T06:58:00Z
7702005f8f8a8f3a81df44d3f7a7957cc58e7418,"Use Closer instead of List<Closeable> (#8235)

* Use Closer instead of List<Closeable>

* Process comments

* Catch an Exception instead

* Removed unused import",2019-08-07T06:29:03Z
5e57492298c5700ae5e362367173dfe33a72fe15,"Add docs for CliIndexer as an experimental feature (#8245)

* Experimental CliIndexer docs

* PR comments",2019-08-06T22:57:17Z
b9c68a5b7bcca5ddff772c2d7409303dee3e88fb,"Web console: refactor home view, add tests (#8247)

* refactor home view

* updated mode button placement",2019-08-06T19:41:07Z
38b6047aa96e2ea3a6651aed138ee46566d596f6,Update docker build (#8244),2019-08-06T15:32:59Z
4507a4f8f18b265bab7be10270e0a9ee0c369483,"fix merging of groupBy subtotal spec results (#8109)

* fix merging of groupBy subtotal spec results

* add post agg to subtotals spec ut

* add comment

* remove unnecessary agg transformation

* fix build

* fix test

* ignore unknown columns in ordering spec

* change variable names based on comment for easy read

* formatting

* don't ignore unknown columns in DefaultLimitSpec to not change existing behavior

* handle limit spec columns correctly

* uncomment inadvertantly commented lines

* GroupByStrategyV2 changes

* test changes wip

* more fixes to handle merge buffer closing and limit spec

* uncomment line commented accidentally",2019-08-06T14:06:28Z
e252abedc5d7bd20c3c1dad7daf4cbdeb99ec761,"Enable toggling request logging on/off for different query types (#7562)

* Enable ability to toggle SegmentMetadata request logging on/off

* Move SegmentMetadata query log filter to FilteredRequestLogger

* Update documentation to reflect the segment metadata flag moving to the filtered request logger

* Modify patch to allow blacklist of query types to not log to request logger

* Address styling and naming requests following latest code review

* Fix indentation on multiple locations per Druid style rules",2019-08-06T12:47:30Z
62da1efc0fc1fc1683f436241329a4d107ce66e4,"Web-Console: add dimensions to datasources icon (#8232)

* add dimensions to datasources icon

* fix test

* update snapshots

* save

* use table

* update snapshots

* rename to columns

* run jest -u",2019-08-06T07:04:37Z
0235b338fc82cc5475011d7928006a493b8966b9,"Web console: celebrate array based groupBy by supporting resultAsArray in the console (#8231)

* teach table about resultAsArray

* use query result decoder

* fix snapshot",2019-08-06T01:54:39Z
5d0805dd48890b2a22148ab009d9bdfbf92416d1,"Web-Console: change go to sql button to more button  (#8227)

* change go to sql button

* rename to See in SQL view

* update snapshots",2019-08-05T21:12:16Z
ab5b3be6c61d7be540f85385327a6a6489b363b1,"Add shuffleSegmentPusher for data shuffle (#8115)

* Fix race between canHandle() and addSegment() in StorageLocation

* add comment

* Add shuffleSegmentPusher which is a dataSegmentPusher used for writing shuffle data in local storage.

* add comments

* unused import

* add comments

* fix test

* address comments

* remove <p> tag from javadoc

* address comments

* comparingLong

* Address comments

* fix test",2019-08-05T20:38:35Z
93cf9d4ad4d7aa092d2bc6c7d53a645f1e33c047,"SQL support for t-digest based sketch aggregators (#8100)

* SQL support for t-digest based sketch aggregators

* Fix teamcity errors

* Add missing dependencies

* Remove unused dependency

* Address code review comments

* Add checks for compression param",2019-08-05T19:01:42Z
ac856fe4c179093c0a5e309a2e988c54a86e89c5,"Web-Console: Adds edit-context-dialog (#8228)

* add edit query context

* remove console log

* add icon

* change to submit button

* fix c

* add stricter checking

* update snapshots",2019-08-04T14:18:08Z
3f3162b85e269749bf0aa848f435409b3a1db8fe,"Enum of ResponseContext keys (#8157)

* Refactored ResponseContext and aggregated its keys into Enum

* Added unit tests for ResponseContext and refactored the serialization

* Removed unused methods

* Fixed code style

* Fixed code style

* Fixed code style

* Made SerializationResult static

* Updated according to the PR discussion:

Renamed an argument

Updated comparator

Replaced Pair usage with Map.Entry

Added a comment about quadratic complexity

Removed boolean field with an expression

Renamed SerializationResult field

Renamed the method merge to add and renamed several context keys

Renamed field and method related to scanRowsLimit

Updated a comment

Simplified a block of code

Renamed a variable

* Added JsonProperty annotation to renamed ScanQuery field

* Extension-friendly context key implementation

* Refactored ResponseContext: updated delegate type, comments and exceptions

Reducing serialized context length by removing some of its'
collection elements

* Fixed tests

* Simplified response context truncation during serialization

* Extracted a method of removing elements from a response context and
added some comments

* Fixed typos and updated comments",2019-08-03T09:05:21Z
1ee828ff498638ace7d12d0d3d5023b08506271d,"Add a cluster-wide configuration to force timeChunk lock and add a doc for segment locking (#8173)

* Add a cluster-wide configuration to force timeChunk lock and add a doc for segment locking

* add more test

* javadoc for missingIntervalsInOverwriteMode

* Fix test

* Address comments

* avoid spotbugs",2019-08-03T03:30:05Z
8a16a8e97ff3c80907451bc11c4cd0ea8a421650,"Teach tasks what machine they are running on (#8190)

* Teach the middleManager port to tasks

* parent annotation

* Bind parent for indexer",2019-08-02T22:34:44Z
e7c6deac768d66c12b71daecae12ecb5a7db2380,"optimize single input column multi-value expressions (#8047)

* optimize single input column multi-value expressions

* javadocs

* merge fixup

* vectorization fixup

* more fixes

* more docs

* more links

* empty

* javadocs are hard

* suppress javadoc refs issue

* fix it",2019-08-02T20:21:25Z
91743eeebe56cdb93e4b38abb71c4be43566ad8e,Spotbugs: NP_NONNULL_PARAM_VIOLATION (#8129),2019-08-02T16:20:22Z
4bd3bad8ba960c9dd4166336eebe019a39d00562,"Add IPv4 SQL functions (#8223)

* Add IPv4 SQL functions

New SQL functions for filtering IPv4 addresses:
- IPV4_MATCH: Check if IP address belongs to a subnet
- IPV4_PARSE: Convert string IP address to integer
- IPV4_STRINGIFY: Convert integer IP address to string

These are the SQL analogs of the druid expressions with the same name.
Filtering is more efficient when operating on IP addresses as integers
instead of strings.

* Refactor operator conversions into named constants",2019-08-02T04:29:58Z
5528dec4a4791a5bc6a69a9088678ac9a66b86e0,"Web-Console: stop log from making request after dialog close, implement query manager (#8219)

* stop logs from runnign after component unmount, use query managers

* address comments

* check if defined",2019-08-02T01:17:09Z
02c3a785a29d4bd181876f221f37860987f0d101,"Web-Console: add go to task for datasources (#8210)

* add go to task for datasources

* general fixes

* use find",2019-08-02T01:15:22Z
01c8c82982262767eb0d065e1ac484c8e5222698,correct kerberos doc extension load list (#8224),2019-08-02T00:03:25Z
7783b318464e307d414742490205f947fcdf2069,"Add IPv4 druid expressions (#8197)

* Add IPv4 druid expressions

New druid expressions for filtering IPv4 addresses:
- ipv4address_match: Check if IP address belongs to a subnet
- ipv4address_parse: Convert string IP address to long
- ipv4address_stringify: Convert long IP address to string

These expressions operate on IP addresses represented as either strings
or longs, so that they can be applied to dimensions with mixed
representation of IP addresses. The filtering is more efficient when
operating on IP addresses as longs. In other words, the intended use
case is:

1) Use ipv4address_parse to convert to long at ingestion time
2) Use ipv4address_match to filter (on longs) at query time
3) Use ipv4adress_stringify to convert to (readable) string at query
time

* Fix licenses and null handling

* Simplify IPv4 expressions

* Fix tests

* Fix check for valid ipv4 address string",2019-08-01T18:45:04Z
bcaffe2bc0c6e915c50df9fcb1c191d326a7dfd5,"Fixed a bug in HttpPostEmitter leading to ClassCastException (#8205)

* Issue 8206: Fixed class cast exception in case of batch recovery

* Issue 8206: Added HttpPostEmitterTest license header

* Issue 8206: Updated comments accordingly to code review.

* Issue 8206: Updated HttpPostEmitterTest accordingly to new modifications.",2019-08-01T17:36:23Z
a0f88868e3e60e88516cbd1617ed65d60b675ddd,add timeout to capabilities check (#8213),2019-08-01T15:37:02Z
f0ecdfee30853535e4bfbbfc4f769ccd12d0694a,"Fix `is_realtime` column behavior in sys.segments table (#8154)

* Fix is_realtime flag

* make variable final

* minor changes

* Modify is_realtime behavior based on review comment

* Fix UT",2019-08-01T04:26:49Z
41893d46470b6dc0730f57c3176d28946b4fa662,"Simple memory allocation for CliIndexer tasks (#8201)

* Simple memory allocation for CliIndexer

* PR comments

* Checkstyle",2019-08-01T02:22:41Z
77297f4e6f2e9d617c96cd46852bb5a772961e85,"GroupBy array-based result rows. (#8196)

* GroupBy array-based result rows.

Fixes #8118; see that proposal for details.

Other than the GroupBy changes, the main other ""interesting"" classes are:

- ResultRow: The array-based result type.
- BaseQuery: T is no longer required to be Comparable.
- QueryToolChest: Adds ""decorateObjectMapper"" to enable query-aware serialization
  and deserialization of result rows (necessary due to their positional nature).
- QueryResource: Uses the new decoration functionality.
- DirectDruidClient: Also uses the new decoration functionality.
- QueryMaker (in Druid SQL): Modifications to read ResultRows.

These classes weren't changed, but got some new javadocs:

- BySegmentQueryRunner
- FinalizeResultsQueryRunner
- Query

* Adjustments for TC stuff.",2019-07-31T23:15:12Z
b97b86aa96598fe9ad27df49c73dcd2782cfc958,Add 'Area - Metadata' tag to committer-instructions.md and stale.yml (#8170),2019-07-31T22:02:35Z
716ce7fdc7854a477227de3b37b61b8b94b19774,Spelling Error (#8206),2019-07-31T17:43:11Z
faf51107d590eb6b947fc6f0f3164f5866b671b2,"Add SuppressWarnings SS_SHOULD_BE_STATIC (#8138)

* Spotbugs: SS_SHOULD_BE_STATIC (#8073)

* Add SuppressWarnings SS_SHOULD_BE_STATIC

Fixes #8073

* Fix the voilation

* Make them non-final

* Remove @Nonnull",2019-07-31T16:44:42Z
63461311f8d38fa86d7007756f2320d7829ccd9a,"HllSketch Merge/Build BufferAggregators: Speed up init with prebuilt sketch. (#8194)

* HllSketchMergeBufferAggregator: Speed up init by copying prebuilt sketch.

* Remove useless writableRegion call.

* POM variables.

* Fix missing reposition.

* Apply similar optimization to HllSketchBuildBufferAggregator.

* Rename emptySketch -> emptyUnion in merge flavor.

* Adjustments based on review.

* Comment update.

* Additional updates.

* Comment push.",2019-07-31T15:18:42Z
15dd3d7256f924341b21630a024a9124be581057,"Web console: better action linking between views (#8203)

* better actions

* better action linking",2019-07-31T14:13:25Z
645fca53d8f76e12d6e0fe390c89046d86d9a7e6,"Web console: segment timeline (#8202)

* Add segment timeline chart

* fix file

* Fix bugs: no data handling & scaling problems

* resolve conflict

* changed package-lock

* do not show by default

* trust the interop

* stricter type fixes

* fix sasslint",2019-07-31T05:35:30Z
ddec5ea82e1d6804ccabc9aaad6347d648429355,"Web console: Improve data loader time column detection (#8199)

* better timestamp suggestion

* misc fixes

* update dependancies and licenses

* add indexer, update snapshots

* add explicit render types

* pass through auto refresh in lookup view",2019-07-31T00:54:39Z
385f492a555add279a8c6dd368954fde18c41dcb,"Use PartitionsSpec for all task types (#8141)

* Use partitionsSpec for all task types

* fix doc

* fix typos and revert to use isPushRequired

* address comments

* move partitionsSpec to core

* remove hadoopPartitionsSpec",2019-07-31T00:24:39Z
aba65bb675e0c34216c8d1d0efbe93f17842c1f4,"removed hard-coded Kafka key and value deserializer (#8112)

* removed hard-coded Kafka key and value deserializer, leaving default deserializer as org.apache.kafka.common.serialization.ByteArrayDeserializer.  Also added checks to ensure that any provided deserializer class extends org.apache.kafka.serialization.Deserializer and outputs a byte array.

* Addressed all comments from original pull request and also added a
unit test.

* Added additional test that uses ""poll"" to ensure that custom deserializer
works properly.",2019-07-30T23:25:32Z
653b558134eaa965534df7e241471bedb2beb046,"sql firehose and firehose doc adjustments (#8067)

* firehose doc adjustments

* fix typo

* additional information on parser types in ingestion docs

* clarify ingest segment firehose docs, add sql firehose examples to sql extension pages

* fixit

* make sql firehose more forgiving my always constructing a MapInputRowParser from the parseSpec of whatever actual InputRowParser impl is provided, remove doc references to map based parsers

* transforms

* fix tests",2019-07-30T22:28:10Z
4e60afc86ecbf876e733e37ef3b7bc1e1ab29a89,"Web-console: add Supervisor statistics table and show json query manager (#8176)

* add statistics table

* change error message

* add query managers

* update snapshots

* fixes

* add stricter types

* fix error type

* prettier fic

* fix undefined

* add typing

* fixe query manager",2019-07-30T19:53:46Z
0f8c902e94aca8c55fd8b10d74398f6528b357e0,Spotbugs fix DM_NUMBER_CTOR (#8072),2019-07-30T17:08:27Z
e016995d1fb6085a48e2e0d0a28504ed955f0293,"Enable Spotbugs: WMI_WRONG_MAP_ITERATOR (#8005)

* WMI_WRONG_MAP_ITERATOR

* Fixed missing loop",2019-07-30T16:51:53Z
fb653ceef9fc778b93562d4708af3b5cb87eef02,"Add benchmark for VersionedIntervalTimeline (#8161)

* Add benchmark for VersionedIntervalTimeline

* rename",2019-07-30T15:10:00Z
f7abc300a8af4f04ff6ded37ff06a36ca97dc20a,"Web-console: add loader to show-json, add status-dialog (#8172)

* add loader to show json, add status-dialog

* fix ordered import

* fix changes

* order inputs

* update snapshots

* fix bad merge conflicts",2019-07-30T15:08:36Z
a0270512a26376767562f35abf7fb9b5528571a9,"Web-console: add history menu to supervisors modal  (#8164)

* Add history menu to supervisors dialog

* add scrolling

* change how tabs render

* remove copy button

* user query manager",2019-07-30T15:07:58Z
80a0fbf254fbeeb28107e422ec48794776a375be,fix circular reference in moving average query (#8192),2019-07-30T05:31:44Z
771c04841ea6d2bb2d47f3ca0e4cac4723f3a86d,remove husky hooks (#8193),2019-07-30T02:32:16Z
640b7afc1cee911a27de7bf938dda24a85ba1510,"Add CliIndexer process type and initial task runner implementation (#8107)

* Add CliIndexer process type and initial task runner implementation

* Fix HttpRemoteTaskRunnerTest

* Remove batch sanity check on PeonAppenderatorsManager

* Fix paralle index tests

* PR comments

* Adjust Jersey resource logging

* Additional cleanup

* Fix SystemSchemaTest

* Add comment to LocalDataSegmentPusherTest absolute path test

* More PR comments

* Use Server annotated with RemoteChatHandler

* More PR comments

* Checkstyle

* PR comments

* Add task shutdown to stopGracefully

* Small cleanup

* Compile fix

* Address PR comments

* Adjust TaskReportFileWriter and fix nits

* Remove unnecessary closer

* More PR comments

* Minor adjustments

* PR comments

* ThreadingTaskRunner: cancel  task run future not shutdownFuture and remove thread from workitem",2019-07-30T00:06:33Z
cc4450db12a4042f00e23663371298276769c134,"Web console: add reindex (ingestSegment firehose) to the data loader (#8181)

* tidy up nulls

* standardize more on undefined

* updated licenses

* do not do heavy handed rendering

* reindex from druid

* tidy up

* add inline firehose

* add husky

* sass lint

* better suggestion

* fix script typo

* adjust time formats

* add missing time formats

* use term 'reindex'

* fix lodash.compact",2019-07-29T21:41:27Z
ab71a2e1e4a3c106ba9f9d58554d09f66aec7839,"Revert ""Fix dependency analyze warnings (#8128)"" (#8189)

This reverts commit 5dd0d8e873c51c06d18a8018bd1abe050a6a0ad3.",2019-07-29T18:42:16Z
0b3ede193e93b95562516ace8d11eb33b22928ac,"Web console: adding Slack channel integration (#8182)

* adding slack channel integration

* update snapshots",2019-07-28T23:17:54Z
8bd0f8c2ac65b1d0f1816721a044a53f3b271ee0,"Web console: code quality improvements (null tidy up) (#8162)

* tidy up nulls

* standardize more on undefined

* updated licenses

* update snapshot

* do not do heavy handed rendering

* add placeholder to SQL view

* remove pointelss fragment",2019-07-27T08:46:37Z
adf7bafb9fda4ce8be47f47b5fbc554e92b4608b,"Fix race between canHandle() and addSegment() in StorageLocation (#8114)

* Fix race between canHandle() and addSegment() in StorageLocation

* add comment

* add comments

* fix test

* address comments

* remove <p> tag from javadoc

* address comments

* comparingLong",2019-07-27T08:11:06Z
5dd0d8e873c51c06d18a8018bd1abe050a6a0ad3,"Fix dependency analyze warnings (#8128)

* Fix dependency analyze warnings

Update the maven dependency plugin to the latest version and fix all
warnings for unused declared and used undeclared dependencies in the
compile scope. Added new travis job to add the check to CI. Also fixed
some source code files to use the correct packages for their imports.

* Fix licenses and dependencies

* Fix licenses and dependencies again

* Fix integration test dependency

* Address review comments

* Fix unit test dependencies

* Fix integration test dependency

* Fix integration test dependency again

* Fix integration test dependency third time

* Fix integration test dependency fourth time

* Fix compile error

* Fix assert package",2019-07-26T17:49:03Z
7b9bd5359db80bdd9bb3f547161f94b369469b76,[statsd-emitter] Fix ingest persists metrics typo (#8160),2019-07-26T14:20:41Z
31a29d888315947eb5c95f304c0cf06689be89a6,add noop type name to prevent jackson exception when setting type to noop (#8133),2019-07-25T23:07:08Z
ef9230f9168c7963ad8105f56d6836804390e89a,"Web-console: Add continue to spec view (#8144)

* Add continue to spec view

* update spec when type selected

* remove redundancy

* fix mistakes",2019-07-25T21:48:26Z
8ba1f0663240d18e02657e4b621f3b43c40f4422,"Web-console: add lookups tile to home view  (#8124)

* add lookups-tile

* add uninitailized state

* remove error:",2019-07-25T20:08:58Z
61f4abece445e5bb1f15df093cbd800ebbd8c501,"Add more warning to the doc for resetOffsetAutomatically (#8153)

* Add more warnings to the doc for resetOffsetAutomatically

* fix kinesis doc

* fix typos

* revise the description

* capital

* capitalize",2019-07-25T00:37:32Z
db149462073d59e7563f0d3834e69d44a2bb4011,"Add support minor compaction with segment locking (#7547)

* Segment locking

* Allow both timeChunk and segment lock in the same gruop

* fix it test

* Fix adding same chunk to atomicUpdateGroup

* resolving todos

* Fix segments to lock

* fix segments to lock

* fix kill task

* resolving todos

* resolving todos

* fix teamcity

* remove unused class

* fix single map

* resolving todos

* fix build

* fix SQLMetadataSegmentManager

* fix findInputSegments

* adding more tests

* fixing task lock checks

* add SegmentTransactionalOverwriteAction

* changing publisher

* fixing something

* fix for perfect rollup

* fix test

* adjust package-lock.json

* fix test

* fix style

* adding javadocs

* remove unused classes

* add more javadocs

* unused import

* fix test

* fix test

* Support forceTimeChunk context and force timeChunk lock for parallel index task if intervals are missing

* fix travis

* fix travis

* unused import

* spotbug

* revert getMaxVersion

* address comments

* fix tc

* add missing error handling

* fix backward compatibility

* unused import

* Fix perf of versionedIntervalTimeline

* fix timeline

* fix tc

* remove remaining todos

* add comment for parallel index

* fix javadoc and typos

* typo

* address comments",2019-07-25T00:35:46Z
714a2726a7878c13e8bf5049f841ee1d34f6f83d,"Spotbugs: RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN (#8076)

* Spotbugs: RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN

* Use Objects instead",2019-07-24T23:17:02Z
c87b47e0fa5d5b93593fca43933f6389ebecef0d,"More documentation formatting fixes (#8149)

Add empty lines before bulleted lists and code blocks, to ensure that
they show up properly on the web site.  See also #8079.",2019-07-24T22:26:03Z
0695e487e7cd93ba63d2c2355db47bd5ee3111b8,"fix issue with CuratorLoadQueuePeon shutting down executors it does not own (#8140)

* fix issue with CuratorLoadQueuePeon shutting down executors it does not own

* use lifecycled executors

* maybe this",2019-07-24T17:59:43Z
799d20249fe6333ea86b020f6d09c91fa4d3f998,"Response context refactoring (#8110)

* Response context refactoring

* Serialization/Deserialization of ResponseContext

* Added java doc comments

* Renamed vars related to ResponseContext

* Renamed empty() methods to createEmpty()

* Fixed ResponseContext usage

* Renamed multiple ResponseContext static fields

* Added PublicApi annotations

* Renamed QueryResponseContext class to ResourceIOReaderWriter

* Moved the protected method below public static constants

* Added createEmpty method to ResponseContext with DefaultResponseContext creation

* Fixed inspection error

* Added comments to the ResponseContext length limit and ResponseContext
http header name

* Added a comment of possible future refactoring

* Removed .gitignore file of indexing-service

* Removed a never-used method

* VisibleForTesting method reducing boilerplate

Co-Authored-By: Clint Wylie <cjwylie@gmail.com>

* Reduced boilerplate

* Renamed the method serialize to serializeWith

* Removed unused import

* Fixed incorrectly refactored test method

* Added comments for ResponseContext keys

* Fixed incorrectly refactored test method

* Fixed IntervalChunkingQueryRunnerTest mocks",2019-07-24T15:29:03Z
0388581493e19d1ca10c922289e7eb58d44b82e1,"Revert ""Spotbugs: SS_SHOULD_BE_STATIC (#8073)"" (#8145)

This reverts commit 04a180a5fb4b604af04adf00a6bc5aa6ff587fec.",2019-07-24T05:57:19Z
b8b22b7aaacdfa320f8794574a8579e8dae7c14f,fix references to bin/supervise in tutorial docs (#8087),2019-07-23T22:05:01Z
cb82d725475c7f1cc623b2d1b414d7c7124cab60,"fix forking task runner task shutdown to be more graceful (#8085)

* fix forking task runner shutdown to be more graceful

* javadoc",2019-07-23T18:47:23Z
83514958dbc873c56c91ef3d8e8668ac609a7e1c,"remove unnecessary lock in ForegroundCachePopulator leading to a lot of contention (#8116)

* remove unecessary lock in ForegroundCachePopulator leading to a lot of contention

* mutableboolean, javadocs,document some cache configs that were missing

* more doc stuff

* adjustments

* remove background documentation",2019-07-23T17:57:59Z
04a180a5fb4b604af04adf00a6bc5aa6ff587fec,Spotbugs: SS_SHOULD_BE_STATIC (#8073),2019-07-23T10:18:49Z
b2867c9d0631cedc16f63d75be501c0da2a8800b,web console added to docker-compose (#8117),2019-07-22T18:40:05Z
e1a745717e0b008ca76a0a27e96d3097fc48a8f9,Spotbugs: NP_STORE_INTO_NONNULL_FIELD (#8021),2019-07-21T13:23:47Z
f24e2f16af38352056e713347de4e63d38c785ad,"fix npe with sql metadata manager polling and empty database (#8106)

* fix npe with sql metadata manager polling and empty database

* treat null segments separately

* use preconditions check

* add test",2019-07-21T02:09:02Z
2b2fcc0371a8d7002d58f1bd997ea03f383dee14,"Web console: cleanup build, check licenses in test (#8113)

* cleanup build, check licenses

* cleanup filterMap type

* don't run license check twice",2019-07-20T05:59:07Z
ea4bad783691da2b8530eb8ad3daf6a0ad2d0a37,"Druid SQL EXTRACT time function - adding support for additional Time Units (#8068)

* 1. Added TimestampExtractExprMacro.Unit for MILLISECOND 2. expr eval for MILLISECOND 3. Added a test case to test extracting millisecond from expression. #7935

* 1. Adding DATASOURCE4 in tests. 2. Adding test TimeExtractWithMilliseconds

* Fixing testInformationSchemaTables test

* Fixing failing tests in DruidAvaticaHandlerTest

* Adding cannotVectorize() call before the test

* Extract time function - Adding support for MICROSECOND, ISODOW, ISOYEAR and CENTURY time units, documentation changes.

* Adding MILLISECOND in test case

* Adding support DECADE and MILLENNIUM, updating test case and documentation

* Fixing expression eval for DECADE and MILLENIUM",2019-07-20T03:38:32Z
ceb3a891bb253fd9942950fbda6e9ecb0e5c6a4e,"Fix druid sql group by queries returning complex aggregation type (#8099)

* Fix druid sql group by queries returning complex aggregation type

* Remove unnecessary check",2019-07-19T20:52:14Z
01f3da6fda150280c074337a38880d2113786df0,"Web Console: add Group by interval to segments view (#7986)

* add group by

* update snapshot

* fix spacing

* change design pattern

* rename interface

* add static function

* save

* add whereClause""

* add default page size

* add where to inner query

* snapshots",2019-07-19T18:25:25Z
54a7b54d2d0faa147060d879200453de54e7539d,avoid 'must return non-void type' warning (#8105),2019-07-18T22:02:27Z
c7eb7cd01837c48914ba284d08b6096b47c957b0,"Add intermediary data server for shuffle (#8088)

* Add intermediary data server for shuffle

* javadoc

* adjust timeout

* resolved todo

* fix test

* style

* address comments

* rename to shuffleDataLocations

* Address comments

* bit adjustment StorageLocation

* fix test

* address comment & fix test

* handle interrupted exception",2019-07-18T21:46:47Z
03e55d30ebcac9ec97edb1a638a5a99886c41374,"add CachingClusteredClient benchmark, refactor some stuff (#8089)

* add CachingClusteredClient benchmark, refactor some stuff

* revert WeightedServerSelectorStrategy to ConnectionCountServerSelectorStrategy and remove getWeight since felt artificial, default mergeResults in toolchest implementation for topn, search, select

* adjust javadoc

* adjustments

* oops

* use it

* use BinaryOperator, remove CombiningFunction, use Comparator instead of Ordering, other review adjustments

* rename createComparator to createResultComparator, fix typo, firstNonNull nullable parameters",2019-07-18T20:16:28Z
72496d371290850cbc2acee8be82cce17fa3480e,"#7858 Throwing UnsupportedOperationException from ImmutableDrui… (#7933)

* #7858 Throwing UnsupportedOperationException from ImmutableDruidDataSource's equals() and hashCode() methods.

* 1. Turning ImmutableDruidDataSource into a data container. 2. Adding a Util method to be used in tests for checking equality of ImmutableDruidDataSource objects.

* Removing unused method

* Fixing assert equals

* Fixing assert equals in TestUtils.java

* Adding java doc comments, Using ExpectedException in tests

* Fixing test cases

* Fixed expected exception message in tests

* fixed line width

* line width fix

* code style fixes

* code indentation fixes

* fixing method name",2019-07-18T19:35:19Z
da16144495ed04f26c55935489257fee0a3e8ff2,"Refactoring to use `CollectionUtils.mapValues` (#8059)

* doc updates and changes to use the CollectionUtils.mapValues utility method

* Add Structural Search patterns to intelliJ

* refactoring from PR comments

* put -> putIfAbsent

* do single key lookup",2019-07-18T06:02:22Z
2d6d1c17a0cf0f494c6a691dbaed2da030a2eb9a,"Add more exempt tags for stalebot; Make stalebot to close PRs/issues in 28 days rather than in 7/14 days (#8084)

* Add more exempt tags for stalebot; Make stalebot to close PRs/issues in 21 days rather than in 7/14 days

* Exempt labels only for issues, not PRs; Add 'Uncategorized problem report' tag",2019-07-18T05:57:42Z
ceb969903f06a72d669bb55ab83223bddb5355ee,"Refactor SQLMetadataSegmentManager; Change contract of REST met… (#7653)

* Refactor SQLMetadataSegmentManager; Change contract of REST methods in DataSourcesResource

* Style fixes

* Unused imports

* Fix tests

* Fix style

* Comments

* Comment fix

* Remove unresolvable Javadoc references; address comments

* Add comments to ImmutableDruidDataSource

* Merge with master

* Fix bad web-console merge

* Fixes in api-reference.md

* Rename in DruidCoordinatorRuntimeParams

* Fix compilation

* Residual changes",2019-07-17T14:18:48Z
b80f20f7694716e94a40ad8826e78d3fd0d659f9,add missing dynamic coordinator configs (#8090),2019-07-17T00:40:41Z
15fbf5983d9d6abaeda54296f97fe65f1d6bba98,"add Class.getCanonicalName to forbidden-apis (#8086)

* add checkstyle to forbid unecessary use of Class.getCanonicalName

* use forbiddin-api instead of checkstyle

* add space",2019-07-16T22:21:50Z
d3a6753df9b647e0f8d6c8b2837f84ff7bd3aa74,"Web console: update dependencies (#8007)

* update web console deps

* update license.yaml

* add tiny-warning

* do not sort all licenses

* fix snapshots

* add final licenses

* explicit mode

* webpack tweaks

* remove apache 2s

* fixed missing license

* added comments in script

* put in markers

* simpler script generator

* add copyrights

* more log",2019-07-16T16:22:12Z
179253a2fc5de84433d4a9441360dd8c30121c08,"Fix documentation formatting (#8079)

The Markdown dialect used when publishing the documentation to the web
site is much more sensitive than Github-flavoured Markdown.  In
particular, it requires an empty line before code blocks (unless the
code block starts right after a heading), otherwise the code block
gets formatted in-line with the previous paragraph.  Likewise for
bullet-point lists.",2019-07-15T16:55:18Z
f39771b9d2f6ef82ec055441878f7ab7d2be2a74,Using gender-neutral preposition (#8081),2019-07-15T16:54:45Z
ffa25b78321a56b210a8ad5b6c9ca61b3b737153,"Query vectorization. (#6794)

* Benchmarks: New SqlBenchmark, add caching & vectorization to some others.

- Introduce a new SqlBenchmark geared towards benchmarking a wide
  variety of SQL queries. Rename the old SqlBenchmark to
  SqlVsNativeBenchmark.
- Add (optional) caching to SegmentGenerator to enable easier
  benchmarking of larger segments.
- Add vectorization to FilteredAggregatorBenchmark and GroupByBenchmark.

* Query vectorization.

This patch includes vectorized timeseries and groupBy engines, as well
as some analogs of your favorite Druid classes:

- VectorCursor is like Cursor. (It comes from StorageAdapter.makeVectorCursor.)
- VectorColumnSelectorFactory is like ColumnSelectorFactory, and it has
  methods to create analogs of the column selectors you know and love.
- VectorOffset and ReadableVectorOffset are like Offset and ReadableOffset.
- VectorAggregator is like BufferAggregator.
- VectorValueMatcher is like ValueMatcher.

There are some noticeable differences between vectorized and regular
execution:

- Unlike regular cursors, vector cursors do not understand time
  granularity. They expect query engines to handle this on their own,
  which a new VectorCursorGranularizer class helps with. This is to
  avoid too much batch-splitting and to respect the fact that vector
  selectors are somewhat more heavyweight than regular selectors.
- Unlike FilteredOffset, FilteredVectorOffset does not leverage indexes
  for filters that might partially support them (like an OR of one
  filter that supports indexing and another that doesn't). I'm not sure
  that this behavior is desirable anyway (it is potentially too eager)
  but, at any rate, it'd be better to harmonize it between the two
  classes. Potentially they should both do some different thing that
  is smarter than what either of them is doing right now.
- When vector cursors are created by QueryableIndexCursorSequenceBuilder,
  they use a morphing binary-then-linear search to find their start and
  end rows, rather than linear search.

Limitations in this patch are:

- Only timeseries and groupBy have vectorized engines.
- GroupBy doesn't handle multi-value dimensions yet.
- Vector cursors cannot handle virtual columns or descending order.
- Only some filters have vectorized matchers: ""selector"", ""bound"", ""in"",
  ""like"", ""regex"", ""search"", ""and"", ""or"", and ""not"".
- Only some aggregators have vectorized implementations: ""count"",
  ""doubleSum"", ""floatSum"", ""longSum"", ""hyperUnique"", and ""filtered"".
- Dimension specs other than ""default"" don't work yet (no extraction
  functions or filtered dimension specs).

Currently, the testing strategy includes adding vectorization-enabled
tests to TimeseriesQueryRunnerTest, GroupByQueryRunnerTest,
GroupByTimeseriesQueryRunnerTest, CalciteQueryTest, and all of the
filtering tests that extend BaseFilterTest. In all of those classes,
there are some test cases that don't support vectorization. They are
marked by special function calls like ""cannotVectorize"" or ""skipVectorize""
that tell the test harness to either expect an exception or to skip the
test case.

Testing should be expanded in the future -- a project in and of itself.

Related to #3011.

* WIP

* Adjustments for unused things.

* Adjust javadocs.

* DimensionDictionarySelector adjustments.

* Add ""clone"" to BatchIteratorAdapter.

* ValueMatcher javadocs.

* Fix benchmark.

* Fixups post-merge.

* Expect exception on testGroupByWithStringVirtualColumn for IncrementalIndex.

* BloomDimFilterSqlTest: Tag two non-vectorizable tests.

* Minor adjustments.

* Update surefire, bump up Xmx in Travis.

* Some more adjustments.

* Javadoc adjustments

* AggregatorAdapters adjustments.

* Additional comments.

* Remove switching search.

* Only missiles.",2019-07-12T19:54:07Z
abf9843e2a217656c4fa4bc79ffd771b13680281,"fail complex type 'serde' registration when registered type does not match expected type (#7985)

* make ComplexMetrics.registerSerde type check on register, resolves #7959

* add test

* simplify

* unused imports :/

* simplify

* burned by imports yet again

* remove unused constructor

* switch to getName

* heh oops",2019-07-12T06:03:16Z
da3d141dd2c335590223e4dea1db2f307fa70851,"Add inline firehose (#8056)

* Add inline firehose

To allow users to quickly parsing and schema, add a firehose that reads
data that is inlined in its spec.

* Address review comments

* Remove suppression of sonar warnings",2019-07-12T04:43:46Z
6c35da3c5d8056883a0de497d37c77828e080bfd,"write value of bitmap as field name (#8066)

* write value of bitmap as field name

* respect nulls if present in dictionary

* removed unused import",2019-07-12T02:29:46Z
4b176ad265581c04996e9180c9cd5001744cff90,"force native order when wrapping ByteBuffer since Druid can have it set (#8055)

incorrectly",2019-07-12T00:17:53Z
631cda649b388324c6e4d383e56cae2786144c27,"Include replicated segment size property for datasources endpoint (#8039)

* Add replication size

* Summon comma",2019-07-11T08:10:38Z
349b743ce0a066e3fb3f9f2b2542bdd66b05905b,fix master branch build (#8057),2019-07-10T21:58:10Z
14aec7fceca90dfaf9b2ce4dae68186d04ffcc47,"add config to optionally disable all compression  in intermediate segment persists while ingestion (#7919)

* disable all compression in intermediate segment persists while ingestion

* more changes and build fix

* by default retain existing indexingSpec for intermediate persisted segments

* document indexSpecForIntermediatePersists index tuning config

* fix build issues

* update serde tests",2019-07-10T19:22:24Z
fcf56f23300a32f14a0e34ed2c330c490f95b867,"Add IS_INCREMENTAL_HANDOFF_SUPPORTED for KIS backward compatibility (#8050)

* Add IS_INCREMENTAL_HANDOFF_SUPPORTED for KIS backward compatibility

* do it for kafka only

* fix test",2019-07-10T15:29:37Z
4e3314f675add979d2a8eea92178441a19d5dd04,remove IRC badge from readme (#8052),2019-07-10T15:29:19Z
17121587342f03be78ec3551d0521276ea01adb0,added replicated size (#8043),2019-07-10T15:29:05Z
0a3538b5693fb20a1d631bc111a95718a32271e6,"Fix license check in travis and make it optional (#8049)

* Fix license check in travis and make it optional

* debug

* fix build

* too loud maven

* move MAVEN_OPTS to top and add comments

* adjust script

* remove mvn option from python script",2019-07-10T02:35:29Z
8493bd5c1ccbd54c2c6d873591b1a44179655f5e,"Web console: added bulk supervisor actions (#8028)

* added bulk supervisor actions to the web console

* improve async action dialog

* fix tests",2019-07-10T00:31:23Z
3353da2974237739bc6bfda27b1770cbde49eed0,Adding missing docs for druid.indexer.logs.disableAcl (#8046),2019-07-09T23:11:25Z
338b8b3fefb836d4adcb9c6dfcb8c1995293f86b,"SupervisorManager: Add authorization checks to bulk endpoints. (#8044)

The endpoints added in #6272 were missing authorization checks. This patch removes the bulk
methods from SupervisorManager, and instead has SupervisorResource run the full list through
filterAuthorizedSupervisorIds before calling resume/suspend/terminate one by one.",2019-07-09T20:16:54Z
027291a90d08780d16035cbca171310c499663fc,"set DRUID_AUTHORIZATION_CHECKED attribute for router endpoints (#8026)

* add state resource filter to router endpoints

* add RouterResource to ResourceFilter test framework",2019-07-09T07:51:36Z
12f12676e3fdb747807265ea909b94699f96bf02,"Binary license management system (#7998)

* Binary license management system

* add missing file

* add comment

* Address comments

* print missing licenses

* print druid module name

* Add missing licenses and update versions

* fix library versions and add missing ones. also fix pom.xml

* testing multi thread

* Parallel report generation

* fix build error

* install pyyaml and use old api

* install python3

* fix travis script

* python3.6

* pip

* setuptools

* python3-setuptools

* address comment

* error on not found reports or registered licenses

* removed licenses

* debug

* travis debug

* add missing licenses

* travis debug

* debug

* remove debug code

* test build script

* travis debug

* still debug

* add missing python lib

* debug

* debug

* fix travis

* fix travis

* debug travis

* flush print

* print something more to keep travis alive

* adjust print

* single threaded

* single threaded

* debug

* debug

* remove debug

* remove deprecated-2017Q4 from travis conf

* remove comments and duplicate sudo",2019-07-08T19:24:51Z
f2e4e654b2d62936cfc1d37fd6997dbdb5821c12,Add instruction about skipping up-to-date checks when running integration tests (#7843),2019-07-08T08:14:33Z
6701dc08fe96e32edf49645a8f07cb17ee6038a3,"Making StatusResponseHandler singleton and fixing all its instantiation invocations (#7969)

* Making StatusResponseHandler singleton and fixing all its instantiation invocations

* Using StatusResponseHandler.getInstance() where applicable",2019-07-08T08:03:00Z
0aabeb4b1ad9e24eb02f2f6175154e7cf58c3af4,Enable Spotbugs: MS_OOI_PKGPROTECT (#8022),2019-07-08T07:47:56Z
2eee71165394e6de953377f1b0705c6eaeda54ba,"Add missing reference to Materialized-View extension. (#8003)

* Reference Materialized View extension from extensions page.

* Add comma",2019-07-06T20:50:41Z
1166bbcb75d432817715fdd429737f86730b5591,"Remove static imports from tests (#8036)

Make static imports forbidden in tests and remove all occurrences to be
consistent with the non-test code.

Also, various changes to files affected by above:
- Reformat to adhere to druid style guide
- Fix various IntelliJ warnings
- Fix various SonarLint warnings (e.g., the expected/actual args to
  Assert.assertEquals() were flipped)",2019-07-06T16:33:12Z
4f4cda3ec904d5728a8ffa69d2ac5406da6cfb39,fix query input undo (#8033),2019-07-06T16:21:53Z
2de6cc3b3007a449118d5d37b4fc8da8aacc3168,fix segment table filter (#8034),2019-07-06T16:21:28Z
9c7c7c58ae3ff58c1fcd2db7c243385b039314e4,"Fix overlord port in delete data tutorial (#8037)

In Single-Server Quickstart tutorial the overlord and coordinator
is started as one process on port 8081. But in delete data tutorial the kill
task is sent to 8090 port, which fails.",2019-07-06T15:50:01Z
0ded0ce4149ddea354ee4f5a98eef235abbd0e83,"Add round support for DS-HLL (#8023)

* Add round support for DS-HLL

Since the Cardinality aggregator has a ""round"" option to round off estimated
values generated from the HyperLogLog algorithm, add the same ""round"" option to
the DataSketches HLL Sketch module aggregators to be consistent.

* Fix checkstyle errors

* Change HllSketchSqlAggregator to do rounding

* Fix test for standard-compliant null handling mode",2019-07-05T22:37:58Z
9b499df14e8e06837a847b5b82f9d48dc38f7556,"Fix ExpressionVirtualColumn capabilities; fix groupBy's improper uses of StorageAdapter#getColumnCapabilities. (#8013)

* GroupBy: Fix improper uses of StorageAdapter#getColumnCapabilities.

1) A usage in ""isArrayAggregateApplicable"" that would potentially incorrectly use
   array-based aggregation on a virtual column that shadows a real column.
2) A usage in ""process"" that would potentially use the more expensive multi-value
   aggregation path on a singly-valued virtual column. (No correctness issue, but
   a performance issue.)

* Add addl javadoc.

* ExpressionVirtualColumn: Set multi-value flag.",2019-07-05T20:17:05Z
0344a020bbb8eb80c52a0e1a07854e8647f6ac2b,"optimize single string dimension expression selector (#8014)

* optimize single string dimension expression selector

* more javadoc

* oops

* fix

* fix it

* import",2019-07-04T23:26:10Z
42a7b8849ac45bd2d22d46f098acc3520decdcaa,"remove FirehoseV2 and realtime node extensions (#8020)

* remove firehosev2 and realtime node extensions

* revert intellij stuff

* rat exclusion",2019-07-04T22:40:22Z
613f09b45a287c169f288aa3f53eb13d21e79249,"SQL: Add TIME_CEIL function. (#8027)

Also simplify conversions for CEIL, FLOOR, and TIME_FLOOR by allowing them to
share more code.",2019-07-04T22:40:03Z
6760505a7e7874654925fbfc3bac8c7f634b7f8e,fix FileUtils performance regression due to FilterOutputStream (#8024),2019-07-04T15:41:17Z
e6ba258197468bfc8691b939fe00bd378139a095,"multi-value string expression transformation fix (#8019)

* multi-value string expression transformation fix

* fixes

* more docs and test

* revert unintended doc change

* formatting

* change tostring to print binding identifier

* review fixup

* oops",2019-07-04T06:03:47Z
685aeac8eb8af389900e28cc708282499f8cf2c3,"CONTRIBUTING: Remove ""keep the number of commits small"" guidance. (#8004)

It is no longer really relevant in the world we have of committing
via merge-and-squash.",2019-07-03T18:53:41Z
53a32b6f55ba905d96f4dc8d389b0dd30cd95977,adjust PR template (#8016),2019-07-03T15:31:31Z
3b84246cd6bbc799915c53fda2659b70ea227eb8,"add SQL docs for multi-value string dimensions (#8011)

* add SQL docs for multi-value string dimensions

* formatting consistency

* fix typo

* adjust",2019-07-03T15:22:33Z
c556d44a19b6daac1bb9070ed7fe9325fd595545,"more sql support for expression array functions (#7974)

* more sql support for expression array functions

* prepend/slice

* doc fixes

* fix imports

* fix tests

* add null numeric expr for proper conversions between ExprEval and Expr and back to ExprEval

* re-arrange

* imports :(

* add append/prepend test",2019-07-03T04:39:26Z
f7283378acc7a47e44bfba5a4fe63d086a6f9e10,"remove deprecated standalone realtime node (#7915)

* remove CliRealtime, RealtimeManager, etc

* add redirects for deleted page to page that explains the deleted thing

* adjust docs",2019-07-03T01:12:17Z
93b738bbfa467e7e691ea20fa15005f19743d263,"expression language array constructor and sql multi-value string filtering support (#7973)

* expr array constructor and sql multi-value string support

* doc fix

* checkstyle

* change from feedback",2019-07-01T22:14:50Z
fb56f8d53ccd0eada92b053d07e9e1b243753ad0,"Rename io.druid to org.druid in tdigestsketch extension (#7996)

* Rename io.druid to org.druid in tdigestsketch extension

* Fix typo

Signed-off-by: Khwunchai Jaengsawang <khwunchai.j@ku.th>

* Add packaging check for community extensions

Signed-off-by: Khwunchai Jaengsawang <khwunchai.j@ku.th>",2019-07-01T19:46:35Z
3650eed1aa24e5c19f8867de275159379048b259,Improve pull-deps reference in extensions page. (#8002),2019-07-01T18:18:27Z
4508d3ff55a0e33d5bbcbb9d65f097543f4741c0,Enable RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE (#7972),2019-07-01T05:55:06Z
e8dedb3de4e026b122357b3bbe26325271d03467,Enable MS_MUTABLE_COLLECTION_PKGPROTECT (#7971),2019-07-01T05:54:05Z
f16f13cf619d52aee97d2f8229fa60ffd9c818f6,"Web console: Improve data loader styling, enforce stricter TS types (#8001)

* add assets to auth exclude path

* add frame to tile page

* better empty filter state

* strict TS

* fix segments go to sql

* add unavailable segments

* factor out sugestable input

* fix tests

* update datasources sql

* no depricated extend

* add index spec to tuning configs

* fix scss lint",2019-07-01T02:33:16Z
28319440561f879ca0207b2daf3df107ee76abd0,"support NVL sql function (#7965)

* sql nvl

* add nvl in sql doc",2019-06-30T20:14:30Z
6395c08309a5aec92dfed77977008219d2390db7,Bump commons-codec from 1.7 to 1.12 (#7995),2019-06-29T14:40:19Z
f1270c14f8680fd0f69872acb05b9b97680bd4a3,"Web-Console: add clipboard modal (#7964)

* add clipboard modal

* rename button

* remove console.log

* fix off by one

* update tests

* update snapshot

* fix casing

* update snapshot",2019-06-28T22:50:18Z
8788849bab939d43b0513e7601f8f13edc3edf3d,Bump commons-validator from 1.4.0 to 1.5.1 (#7987),2019-06-28T05:00:49Z
f148249f64059776c540b9beda0e6eab45413f60,Fix wrong redirect for orc extension (#7983),2019-06-27T23:27:08Z
f38a62e9492b158431e1c1a110f6ced6aadb17ac,theta sketch to string post agg (#7937),2019-06-27T22:09:57Z
ad45ef12ed62bcf0b92b47bd06dcc5b1ac7dc573,fix SQL doc comment (#7981),2019-06-27T22:05:45Z
c4aaf26797e1eaa3f123cb6535f3a0f3bb88c73e,Add missing redirect for ORC extension document (#7979),2019-06-27T21:23:44Z
c6baa59f77f733a7a6dae716117ba8f21f938700,Enable DLS_DEAD_LOCAL_STORE (#7967),2019-06-27T20:39:42Z
fba91b77d0f29a93af15b670bbc7ab4b610c699b,"InterruptedException is never thrown (#7963)

And therefore the block will always be false",2019-06-27T16:51:36Z
10d6b0318d0546a170d8b33c26f6565ef3343ea7,clarify granularity docs (#7977),2019-06-27T15:51:22Z
7a5bc5ffcd4a56f20392d522bc370fae4c5efdb9,Bump jaxb-api from 2.3.0 to 2.3.1 (#7978),2019-06-27T15:51:00Z
46ea5b88b7346d20e1f379ddc08bb266e6dc2854,"Add the pull-request template (#7206)

* Add the pull-request template

* Rewording

* Replaced checklist link, added Rat exclusion

* Update the PR template. Add Concurrency Checklist to the repository

* Merge Description and Design sections. Softer language. Removed requirement to test in production environment. Added a committer's instruction to justify addition of meta tags.

* Rephrase item about comments

* Add license header

* Add item to concurrency checklist",2019-06-27T12:51:25Z
151edeec3c44da9c152d0e97c960b079edcf8328,"expression virtual column selector fix for expressions which produce array types (#7958)

* fix bug in multi-value string expression column selector

* more test

* imports!!

* fixes",2019-06-26T23:57:13Z
5464c8938f32a7a3338a7e87dbaf0fc9236db940,"Add array_slice and array_unshift function expr (#7950)

* add array_slice and array_unshift function expr

* feedback address",2019-06-26T23:56:09Z
d677c83ce43d4a31e1c08d68c2aa28ff13bdc753,"Web console: Power up the data loader init step (#7947)

* Power up the data loader init step

* update snapshot

* normalize spec

* allow deselect

* added HDFS tile

* update border style

* text updates

* goodies

* new reset icon",2019-06-26T22:50:48Z
bc1413e4e3ca3e3cacdc4884dc96668636538888,Bump commons-cli from 1.2 to 1.3.1 (#7966),2019-06-26T15:05:13Z
a171b4a399d395b673a6f84854fef90d0f834a4e,"Web-console: Add action column to segments view (#7954)

* add actions column to segments view

* add sements action column",2019-06-26T03:14:06Z
9d925f5086c1b079cbb7ef2f6c220f0dcd06a383,"Adjust NOTICE files (#7945)

* Adjust NOTICE files

* remove commons-logging

* Remove lucene from derby

* more adjustment",2019-06-25T16:08:54Z
b9c6a26c0eeb1b159ac04f9f105f53d32762ac68,"Use ComplexMetrics.registerSerde() across the codebase (#7925)

* refactor complexmetric registerserde

* fix error

* feedback address",2019-06-25T08:39:04Z
16aafd5788a0182fecc4f00dde1bde6abf1d7677,"[ImgBot] Optimize images (#7873)

*Total -- 10,997.25kb -> 7,160.16kb (34.89%)

/publications/radstack/figures/precompute.png -- 54.20kb -> 16.97kb (68.69%)
/web-console/favicon.png -- 4.41kb -> 1.61kb (63.58%)
/docs/img/indexing_service.png -- 47.37kb -> 21.96kb (53.64%)
/docs/img/segmentPropagation.png -- 62.94kb -> 29.85kb (52.57%)
/docs/content/tutorials/img/tutorial-quickstart-01.png -- 55.62kb -> 29.13kb (47.62%)
/docs/content/tutorials/img/tutorial-deletion-02.png -- 791.43kb -> 429.30kb (45.76%)
/docs/content/tutorials/img/tutorial-deletion-03.png -- 786.79kb -> 427.05kb (45.72%)
/docs/content/tutorials/img/tutorial-retention-00.png -- 135.06kb -> 75.88kb (43.82%)
/docs/content/tutorials/img/tutorial-batch-data-loader-10.png -- 77.23kb -> 43.47kb (43.71%)
/docs/content/tutorials/img/tutorial-batch-data-loader-01.png -- 97.03kb -> 55.16kb (43.15%)
/docs/content/tutorials/img/tutorial-batch-data-loader-07.png -- 79.49kb -> 45.44kb (42.84%)
/docs/content/tutorials/img/tutorial-retention-02.png -- 401.30kb -> 234.68kb (41.52%)
/docs/content/tutorials/img/tutorial-compaction-06.png -- 343.27kb -> 201.87kb (41.19%)
/docs/content/tutorials/img/tutorial-batch-data-loader-09.png -- 105.14kb -> 61.86kb (41.16%)
/docs/content/tutorials/img/tutorial-retention-06.png -- 227.57kb -> 134.35kb (40.97%)
/docs/content/tutorials/img/tutorial-compaction-04.png -- 304.83kb -> 180.04kb (40.94%)
/docs/content/tutorials/img/tutorial-compaction-02.png -- 273.18kb -> 162.67kb (40.45%)
/docs/content/tutorials/img/tutorial-query-05.png -- 85.03kb -> 50.64kb (40.44%)
/publications/radstack/figures/druid_vs_bigquery.png -- 155.44kb -> 92.85kb (40.27%)
/docs/content/tutorials/img/tutorial-kafka-02.png -- 122.51kb -> 73.93kb (39.65%)
/docs/content/tutorials/img/tutorial-deletion-01.png -- 70.37kb -> 42.56kb (39.52%)
/docs/content/tutorials/img/tutorial-batch-data-loader-06.png -- 103.50kb -> 62.79kb (39.33%)
/docs/content/tutorials/img/tutorial-batch-submit-task-01.png -- 111.25kb -> 67.73kb (39.12%)
/docs/content/tutorials/img/tutorial-query-03.png -- 103.60kb -> 63.51kb (38.69%)
/docs/content/tutorials/img/tutorial-query-04.png -- 105.79kb -> 64.87kb (38.69%)
/docs/content/tutorials/img/tutorial-batch-data-loader-11.png -- 130.20kb -> 81.34kb (37.53%)
/docs/content/tutorials/img/tutorial-query-07.png -- 122.52kb -> 76.79kb (37.32%)
/docs/content/tutorials/img/tutorial-kafka-01.png -- 133.12kb -> 83.47kb (37.3%)
/docs/content/tutorials/img/tutorial-query-06.png -- 127.55kb -> 80.28kb (37.06%)
/docs/content/tutorials/img/tutorial-batch-submit-task-02.png -- 133.07kb -> 84.06kb (36.83%)
/docs/content/tutorials/img/tutorial-retention-05.png -- 60.19kb -> 38.08kb (36.74%)
/docs/content/tutorials/img/tutorial-batch-data-loader-03.png -- 211.92kb -> 134.22kb (36.66%)
/docs/content/tutorials/img/tutorial-batch-data-loader-05.png -- 250.36kb -> 158.68kb (36.62%)
/publications/radstack/figures/radstack.png -- 16.80kb -> 10.67kb (36.48%)
/docs/content/tutorials/img/tutorial-batch-data-loader-08.png -- 158.59kb -> 101.49kb (36%)
/docs/content/tutorials/img/tutorial-batch-data-loader-04.png -- 255.10kb -> 163.33kb (35.97%)
/docs/content/tutorials/img/tutorial-query-02.png -- 126.92kb -> 81.42kb (35.85%)
/docs/content/tutorials/img/tutorial-compaction-01.png -- 53.86kb -> 34.87kb (35.25%)
/docs/img/druid-architecture.png -- 202.23kb -> 130.97kb (35.24%)
/docs/content/tutorials/img/tutorial-retention-01.png -- 52.69kb -> 34.35kb (34.81%)
/docs/img/druid-timeline.png -- 35.87kb -> 23.59kb (34.22%)
/docs/content/tutorials/img/tutorial-query-01.png -- 149.53kb -> 98.56kb (34.08%)
/docs/content/tutorials/img/tutorial-retention-04.png -- 65.91kb -> 43.57kb (33.89%)
/docs/content/tutorials/img/tutorial-compaction-08.png -- 42.24kb -> 28.08kb (33.53%)
/docs/content/tutorials/img/tutorial-compaction-07.png -- 39.17kb -> 26.06kb (33.47%)
/docs/content/tutorials/img/tutorial-compaction-03.png -- 39.17kb -> 26.13kb (33.3%)
/docs/content/tutorials/img/tutorial-compaction-05.png -- 38.85kb -> 25.96kb (33.17%)
/publications/demo/figures/throughput_vs_cardinality.png -- 73.49kb -> 49.31kb (32.9%)
/publications/radstack/figures/throughput_vs_cardinality.png -- 73.49kb -> 49.31kb (32.9%)
/publications/whitepaper/figures/throughput_vs_cardinality.png -- 73.49kb -> 49.31kb (32.9%)
/docs/content/tutorials/img/tutorial-retention-03.png -- 43.11kb -> 29.33kb (31.97%)
/publications/radstack/figures/throughput_vs_num_dims.png -- 72.86kb -> 49.72kb (31.76%)
/publications/whitepaper/figures/throughput_vs_num_dims.png -- 72.86kb -> 49.72kb (31.76%)
/publications/demo/figures/throughput_vs_num_dims.png -- 72.86kb -> 49.72kb (31.76%)
/publications/radstack/figures/joined.png -- 164.14kb -> 113.47kb (30.87%)
/docs/content/tutorials/img/tutorial-batch-data-loader-02.png -- 508.93kb -> 351.85kb (30.87%)
/publications/radstack/figures/imps_clicks.png -- 190.95kb -> 132.70kb (30.51%)
/publications/radstack/figures/shuffled.png -- 180.46kb -> 128.21kb (28.95%)
/publications/radstack/figures/pipeline.png -- 392.54kb -> 281.93kb (28.18%)
/docs/img/druid-manage-1.png -- 108.94kb -> 78.53kb (27.92%)
/publications/radstack/figures/throughput_vs_num_metrics.png -- 85.25kb -> 61.80kb (27.51%)
/publications/demo/figures/throughput_vs_num_metrics.png -- 85.25kb -> 61.80kb (27.51%)
/publications/whitepaper/figures/throughput_vs_num_metrics.png -- 85.25kb -> 61.80kb (27.51%)
/docs/img/druid-production.png -- 50.00kb -> 39.18kb (21.63%)
/docs/img/druid-dataflow-3.png -- 88.25kb -> 69.75kb (20.96%)
/publications/demo/figures/realtime_flow.png -- 51.12kb -> 40.61kb (20.56%)
/publications/demo/figures/realtime_timeline.png -- 36.15kb -> 29.24kb (19.12%)
/publications/demo/figures/tpch_scaling.png -- 43.21kb -> 34.97kb (19.08%)
/publications/demo/figures/caching.png -- 35.26kb -> 29.09kb (17.49%)
/dev/intellij-sdk-config.jpg -- 1,019.35kb -> 864.37kb (15.2%)
/docs/img/druid-column-types.png -- 101.53kb -> 91.17kb (10.2%)
/docs/img/druid-dataflow-2x.png -- 138.30kb -> 127.11kb (8.09%)",2019-06-25T04:27:48Z
cd01a48eabd166add4344f36e7e8a721bfa94416,"Web-console: add timed button  (#7912)

* add refresh button

* update snapshots

* fix spacing

* add supervisors button

* modify query manager

* add icon

* update snapshots

* fix space

* stop refreshing when option selected

* small fixes

* add default value

* fix spelling mistake

* fix query-input

* rename class",2019-06-25T04:18:19Z
6cc8802b8eb1092c649c62fe9cac5d426f25c667,"#7875: Setting ACL on S3 task logs on similar lines as that of data segments pushed to S3 (#7907)

* #7875: Setting ACL on S3 task logs on similar lines as that of data segment pushed to S3

* #7875 1. Extracting a method (which uploads a file to S3 setting appropriate access control list to the file being uploaded) and moving it to utils class. 2. Adding S3TaskLogsTest.java file to test acl (permissions) on the task log files pushed to S3.

* fixing checkstyle errors

* #7875 Incorporating review comments",2019-06-24T23:25:59Z
0d5fbfa0eb8d51fadadb256bbd88b17800c7f81d,"Add missing license pointer for Porter Stemmer (#7941)

* Add missing license pointer for Porter Stemmer

* add missing file",2019-06-24T19:21:40Z
82b248cc1778d24b6f37864e113d8c77250d0cdf,Spotbugs: Enable MS_SHOULD_BE_FINAL (#7946),2019-06-23T22:42:18Z
35601bb7a024213a4c8016b0d865984f84257cf4,"Add finalizeAsBase64Binary option to FixedBucketsHistogramAggregatorFactory (#7784)

* Add finalizeAsBase64Binary option to FixedBucketsHistogramAggregatorFactory

* Add finalizeAsBase64Binary option to ApproximateHistogramFactory

* Update approx histogram doc",2019-06-22T01:00:19Z
6c8f9482c77b360e5794631027114193795a281c,"Web console: prettier code (#7939)

* prettier code

* update tests

* scss also

* more ,

* update pachage json prettier config",2019-06-21T23:52:33Z
183d5be7ec7521fe375c0f9da094f4a574806970,fix spotbugs failure in Expr.java (#7944),2019-06-21T21:49:22Z
2bc8e7c0e897418a53a0b26a477442b95d87c041,more acurate keyword auto complete (#7934),2019-06-21T04:14:54Z
d046d5aa8d8abc90bca811599361760066873e50,"Stalebot config adjustments. (#7936)

* Stalebot config adjustments.

- Different wordings for PRs and issues.
- Extend stale timeout for issues.
- Exempt ""Proposal"" label.
- Exempt issues in projects and issues with assignees.

* Fix copy/paste error.",2019-06-20T21:16:57Z
ceade03213571cedc372c3235f238f2143ad6568,"Enable stalebot for issues (#7927)

* Enable stalebot for issues

* fix comments

* fix comments

* fix comments",2019-06-20T18:09:40Z
48f20fe7542ffa62d88d2756aa3e97ebdbb8eb36,"Add Spotbugs (#7894)

* Add Spotbugs

Exclude all the issues for now, so we can add them one by one.

(cherry picked from commit ceda4754dc8c703d1e0de85b48cd5f5409cfd5b7)

* Add additional rules to the list

* More rules

* More rules

* Add comments to the xml

* Move the spotbugs-exclude.xml to codestyle/",2019-06-20T18:06:52Z
494b8ebe56308fe69c2a758f80f1ae56bf17d54d,"multi-value string column support for expressions (#7588)

* array support for expression language for multi-value string columns

* fix tests?

* fixes

* more tests

* fixes

* cleanup

* more better, more test

* ignore inspection

* license

* license fix

* inspection

* remove dumb import

* more better

* some comments

* add expr rewrite for arrayfn args for more magic, tests

* test stuff

* more tests

* fix test

* fix test

* castfunc can deal with arrays

* needs more empty array

* more tests, make cast to long array more forgiving

* refactor

* simplify ExprMacro Expr implementations with base classes in core

* oops

* more test

* use Shuttle for Parser.flatten, javadoc, cleanup

* fixes and more tests

* unused import

* fixes

* javadocs, cleanup, refactors

* fix imports

* more javadoc

* more javadoc

* more

* more javadocs, nonnullbydefault, minor refactor

* markdown fix

* adjustments

* more doc

* move initial filter out

* docs

* map empty arg lambda, apply function argument validation

* check function args at parse time instead of eval time

* more immutable

* more more immutable

* clarify grammar

* fix docs

* empty array is string test, we need a way to make arrays better maybe in the future, or define empty arrays as other types..",2019-06-19T20:57:37Z
28eaa620a95eacefd722e20de5df9282271394a3,"Web console: Data loader respects parse spec columns for data preview (#7922)

* small fixes in the data loader

* respect columns

* fix test",2019-06-19T19:48:31Z
41f23b5120d23f501fd931642b62c80bf3dec7dd,Bump commons-compress from 1.16 to 1.18 (#7924),2019-06-19T17:43:01Z
0a6fbbbb8019fceb4e7a20f2694a8f3dadf81b8f,"Bump Apache Avro to 1.9.0 (#7772)

* Bump Apache Avro to 1.9.0

Apache Avro 1.9.0 brings a lot of new features:
* Deprecate Joda-Time in favor of Java8 JSR310 and setting it as default
* Remove support for Hadoop 1.x
* Move from Jackson 1.x to 2.9
* Add ZStandard Codec
* Lots of updates on the dependencies to fix CVE's
* Remove Jackson classes from public API
* Apache Avro is built by default with Java 8
* Apache Avro is compiled and tested with Java 11 to guarantee compatibility
* Apache Avro MapReduce is compiled and tested with Hadoop 3
* Apache Avro is now leaner, multiple dependencies were removed: guava, paranamer, commons-codec, and commons-logging
* Introduce JMH Performance Testing Framework
* Add Snappy support for C++ DataFile
* and many, many more!

* Add exclusions for Jackson",2019-06-19T10:31:18Z
417fcef38547621e7874c607869a2c440013838c,"WorkerTaskManager to create disk files atomically and ignore task file corruption (#7917)

* WorkerTaskManager to create disk files atomically and ignore task file
corruptions

* fixing weird checkstyle lambda indentation issues",2019-06-18T16:18:43Z
20d1db9dff8a4fa12b4907c97d31f65c45484b6a,bump fastutil to 8.2.3 (#7920),2019-06-18T16:17:34Z
71997c16a244cfd6abb5a330fe5b1e808569a268,"switch links from druid.io to druid.apache.org (#7914)

* switch links from druid.io to druid.apache.org

* fix it",2019-06-18T16:06:28Z
e80297efef4d4949d736a3894cad015eb88a2106,Set Test timeout higher for robust performance (#7890),2019-06-18T05:01:54Z
c44620a2e3e0e6a4003e52f67a109e85ca8092cb,clean auto generated doc file also (#7911),2019-06-18T01:01:29Z
24dd4573dadd8a5cf506a39279e8adc4ffc69a9e,"Added the web console to the quickstart tutorials and docs (#7863)

* added console to the quickstart tutorials

* feedback fixes

* feedback fixes

* more typo fixes

* moved reseting cluster section after load data

* update images

* stage -> step

* feedback fixes

* more feedback fixes",2019-06-18T01:00:54Z
df9cdcf13b089e445c764e86a8b277ecec24d0ba,"Web console: added Query View metadata pane, more query details (#7905)

* refactor

* adding metadata hookup

* add scroll

* standerdize icons

* better loading state

* update snapshots

* fix lint

* do not mix up queryId and sqlQueryId",2019-06-17T20:14:42Z
01881e3a987ad34cce6456cf6e5766b2629ebde1,"Use only com.google.errorprone.annotations.concurrent.GuardedBy, not javax.annotations.concurrent.GuardedBy (#7889)",2019-06-17T13:58:51Z
4bceab0d7b84c84b35578b2fce44f4833841f129,Bump jmh from 1.19 to 1.21 (#7876),2019-06-17T11:27:09Z
fb7f8ec36276790c10c0871a7b86556bd873db6c,Bump RoaringBitmap from 0.8.0 to 0.8.6 (#7906),2019-06-17T09:02:52Z
daed1bc1417e832109ea5177d2724e0c8576e6ce,Fix HttpRemoteTaskRunnerConfig not loading (#7902),2019-06-16T07:31:42Z
b3328b2785884a4677338d97a116ef1fdb54459f,endpoint to delete lookup tier and remove tier on last lookup deletion (#7852),2019-06-16T00:55:50Z
f603498e113e511502c0aab6ca33a20337a29d74,"Web console: Add download path to SQL Query (#7898)

* adding download path to Query

* add more checker

* updated snap tests

* change after Vad's comments",2019-06-15T20:51:22Z
8e5003b01c0f458dd374a6d2ebee60ba48dc18c9,Scan Doc Change (#7903),2019-06-15T08:21:34Z
3cd9a7507d159d8ec02cfeac1d9136271cb8a921,Fix script for dependencies report for extensions (#7899),2019-06-15T01:53:50Z
d00a9676b7da0fa9400e657bfae8a2961ca9de15,"Set aws.region for unit tests automatically (#7868)

* Set aws.region for unit tests automatically

* Update README.template",2019-06-14T22:34:22Z
a648e1548dece51f5148ef7c08feed18178cfdf4,Add support of --exclude-extension argument for dependency report script (#7786),2019-06-14T22:18:59Z
5e6d833fd9673e894b0a50c9542395c356fea0cc,"Web-Console: tail log based on task status  (#7888)

* clean up

* fix declarations

* spacing",2019-06-14T21:37:21Z
f581118f05a8dcbd5e642d03025fc125bcc0bad8,"Remove Apache Pig from the tests (#7810)

* Remove Apache Pig from the tests

* Remove the Pig specific part

* Fix the Checkstyle issues

* Cleanup a bit

* Add an additional test

* Revert the abstract class",2019-06-14T21:18:58Z
3bee6adcf7338b501687f11ea866608e873c5b0a,"Use map.putIfAbsent() or map.computeIfAbsent() as appropriate instead of containsKey() + put() (#7764)

* https://github.com/apache/incubator-druid/issues/7316 Use Map.putIfAbsent() instead of containsKey() + put()

* fixing indentation

* Using map.computeIfAbsent() instead of map.putIfAbsent() where appropriate

* fixing checkstyle

* Changing the recommendation text

* Reverting auto changes made by IDE

* Implementing recommendation: A ConcurrentHashMap on which computeIfAbsent() is called should be assigned into variables of ConcurrentHashMap type, not ConcurrentMap

* Removing unused import",2019-06-14T15:59:36Z
05346a9e0c836f303a36939965d58813c574bef4,allow semicolon with comment (#7892),2019-06-14T14:53:19Z
456a3654ceaa78b664d022dbbc77c725c2dedbaa,add PolygonBound and missing extentions list doc (#7885),2019-06-13T19:03:58Z
0763585208a68a673bf9515c44fbbb65c8b51371,"Web-console: update supervisors table (#7799)

* add new columns

* fix syling

* fix spaces

* update snapshots

* fix Spelling

* fix capitalization

* reorder action dialog

* set color using state

* fix snapshots

* fix array

* update snapshots

* remove extra columns

* update snapshots

* update snapshots

* fixes

* update snapshots

* use cell

* fix spacing

* update snapshot",2019-06-11T20:06:35Z
8117222da31e9944870e11290936a685e8835847,"use right port for kafka tutorial, reinfoce that tutorials assume you are using micro-quickstart single-server configuration (#7862)",2019-06-11T15:50:52Z
ce591d14574cf0cb81d83ddf405a446aeee7648f,"Support var_pop, var_samp, stddev_pop and stddev_samp etc in sql (#7801)

* support var_pop, stddev_pop etc in sql

* fix sql compatible

* rebase on master

* update doc",2019-06-10T16:40:09Z
c612ddc0f4a4588e97e94173638f8cda286f7c0c,Support more JODA time formats (#7857),2019-06-10T03:08:29Z
c3d230b35475fdfcdc7ed74f17dc02b46f13142b,"Web console: make the data loader more responsive when sampling data with many columns (#7856)

* Don't rerender data loader tables

* removed unused imports

* removed extra console.log

* fix typo",2019-06-09T17:44:13Z
53b9fc4eb0ebb020afc92f59a9f224efaaa7f079,switch to use exInterlop (#7853),2019-06-08T05:27:19Z
3fbb0a5e00c7c546331cbe56d989a50f36710bf5,"Supervisor list api with states and health (#7839)

* allow optionally listing all supervisors with their state and health

* docs

* add state to full

* clean

* casing

* format

* spelling",2019-06-07T23:26:33Z
248e075e24eac15b840a7aca4b86abd37342ae3b,"Web console: Simplify task and supervisor detail displays (#7848)

* simplify detail display

* update tests",2019-06-07T18:02:45Z
ea752ef562b5987ff1cb0a03469855097a4bec9e,"Optimize overshadowed segments computation (#7595)

* Move the overshadowed segment computation to SQLMetadataSegmentManager's poll

* rename method in MetadataSegmentManager

* Fix tests

* PR comments

* PR comments

* PR comments

* fix indentation

* fix tests

*  fix test

*  add test for SegmentWithOvershadowedStatus serde format

* PR comments

* PR comments

* fix test

* remove snapshot updates outside poll

* PR comments

* PR comments

* PR comments

*  removed unused import",2019-06-07T17:15:54Z
061b465d3408e1111694f821419f6c426642d45e,"Web console: Normalize ingestion spec type (#7847)

* Normalize ingestion spec types

* also normalize on direct spec change",2019-06-07T15:32:40Z
df01335789f6e4f89d70b7b33dc373b8afc99c2e,"Web console: prevent the time parse view from going into a bad state (#7846)

* prevent the time parse view from going into a bad state

* add test",2019-06-07T15:32:10Z
ca5afd29b85bf6438004b4e37924ad707212df16,switch the web console to use react pure components (#7845),2019-06-07T15:31:46Z
0ca867efbffe4903d0444950eadd5224e8858b0f,less aggressive default value (#7844),2019-06-07T15:31:21Z
ee0d4ea589234fb2d0467197939faafdd37804b4,add bloom filter fallback aggregator when types are unknown (#7719),2019-06-06T21:39:32Z
4dd446bfddcb23c1da28bb6632647305659983d6,sketches-core-0.13.4 (#7666),2019-06-06T21:36:52Z
12a1ecfc2b2dfa62faf6a278ee5207cc29461de5,allow sql lookup function to take advantage of injective lookups (#7655),2019-06-06T21:36:10Z
080270283a40e5d83eefb909decb9c167e7aa420,"Druid basic authentication class composition config (#7789)

* Druid basic authentication class composition config.

* Added comments

* Reduced nulls

* Used noop implementations to get rid of null

* Added docs for no-op metadata storage updaters

* Fixed BasicAuthClassCompositionConfig javadoc

* Removed incorrect comments",2019-06-06T13:51:37Z
1de1a02e49f59506b52bfa404a56ad6af3e5efc6,"Kinesis: Fix getPartitionIds, should be checking isHasMoreShards. (#7830)",2019-06-04T23:26:22Z
04937807992417103fb612d9faa059281e11d582,discard filter when processing subtotalsSpec (#7827),2019-06-04T17:59:22Z
d482da6e9be1afabff436bc4a8e0f48f166ba492,fix timestamp ceil lower bound bug (#7823),2019-06-04T08:16:31Z
f2b00023f83e070ac0682742124130f7c9ad26d8,Bump Checkstyle to 8.21 (#7826),2019-06-04T08:02:46Z
fdc03bd336443ae88330d987785496bb73718862,"[druid-kerberos] Fix checking of host URI when reading cookies from cookie store (#7825)

Reading of auth cookie was not checking URI of the server where request was being sent.  This was causing cookie set for one server to be sent to another one and extra authentication round trips between internal druid services.",2019-06-04T02:32:50Z
0de7983db5c9fd0a80b12d77a09c2d4031fa5d3d,Add minor CSS to make long value copy even easier (#7829),2019-06-04T02:28:57Z
61ec521135fd8ae40110524e8857610d0830e279,"Remove keepSegmentGranularity option for compaction  (#7747)

* Remove keepSegmentGranularity option from compaction

* fix it test

* clean up

* remove from web console

* fix test",2019-06-03T19:59:15Z
e289820bbdcd44f2dbec3c359d890588134dfa1c,Add a script to find missing backports (#7817),2019-06-03T14:56:52Z
9d3dfd168aa0b4167ec3f9ce04e7c6c5180d5193,"Web console: Truncate and allow easy copy of large values in query table (#7816)

* table-column-selection -> table-column-selector

* null-table-cell -> table-cell

* make action icon

* made copyable

* updated snapshots

* more tests

* normalizing tests

* tslint fixes

* fix up snapshot desciptions

* nicer edit icons

* remove unused

* better language

* remove unused

* undo unwanted change

* normalize new lines

* truncate long arrays also

* removed double space",2019-06-02T00:37:54Z
4ad058c4290b6ab39ce60158d4ca110649d86813,Fix spaces and make linting more strict (#7812),2019-06-01T17:14:13Z
21d3d0cde8d1f4db2b314b66cfd81568b9d9f5e3,"Web-console: prevent unnecessary loading of disabled data sources  (#7804)

* prevent loading disabled datasources

* prevent double loading

* remove complexity

* rename function

* remove space",2019-06-01T09:08:34Z
55af692b5606242d74d8cbf954b05ee891680e98,"Fix repeated expr parsing in ExpressionPostAggregation (#7791)

* Fix repeatedly expr parsing in ExpressionPostAggregation

Change-Id: Ib739fb1cbc460afeb59a255f635305441dc6997b

* Style fix and avoid code copying

Change-Id: I2d6ba3d1ae37f1fb84b6f7eaab5dab817e1980ec

* Lazilly parse expressions in ExpressionVirtualColumn and ExpressionDimFilter

Change-Id: I5ae2bb3ef9a18fbbfb5e0780c86f6bc0039edc83",2019-06-01T03:56:31Z
69e9b8a4649a785a070ba89e18d84275cab991e4,Enables SQL by default. (#7808),2019-06-01T03:53:42Z
8032c4add8f78d0c15044d0847201c618e27dc25,"Add errors and state to stream supervisor status API endpoint (#7428)

* Add state and error tracking for seekable stream supervisors

* Fixed nits in docs

* Made inner class static and updated spec test with jackson inject

* Review changes

* Remove redundant config param in supervisor

* Style

* Applied some of Jon's recommendations

* Add transience field

* write test

* implement code review changes except for reconsidering logic of markRunFinishedAndEvaluateHealth()

* remove transience reporting and fix SeekableStreamSupervisorStateManager impl

* move call to stateManager.markRunFinished() from RunNotice to runInternal() for tests

* remove stateHistory because it wasn't adding much value, some fixes, and add more tests

* fix tests

* code review changes and add HTTP health check status

* fix test failure

* refactor to split into a generic SupervisorStateManager and a specific SeekableStreamSupervisorStateManager

* fixup after merge

* code review changes - add additional docs

* cleanup KafkaIndexTaskTest

* add additional documentation for Kinesis indexing

* remove unused throws class",2019-06-01T00:16:01Z
c8e1511f12b04bdf6da8b6f3a12d6ca8143ebe4a,Bump Joda time to 2.10.2 (#7809),2019-05-31T21:25:35Z
94b359117136d43a756d626f85989d1f4dbc8682,friendly printed arrays for json responses (#7805),2019-05-31T09:34:12Z
7abfbb066ab5c3e951de40cdb127de25bae7ab66,Bump up snapshot version to 0.16.0 (#7802),2019-05-31T00:17:33Z
aaefdb3386a8939d5777a349e164f062e0734d86,"fix group-by v2 BufferArrayGrouper for empty multi-value dimension row (#7794)

* fix groupby v2 BufferArrayGrouper

* better name test

* fix sql compatible null handling array grouper bug

* another test",2019-05-30T19:59:59Z
58a571ccdaa0f15d9fda7f5d9b5aa871296f760a,"SQL: Use SegmentId instead of DataSegment as set/map keys. (#7796)

Recently we've been talking about using SegmentIds as map keys rather than
DataSegments, because its sense of equality is more well-defined. This is
a refactor that does this in the druid-sql module, which mostly involves
DruidSchema and some related classes. It should have no user-visible effects.",2019-05-30T19:58:36Z
8649b8ab4caad29d77897272bfae7ffcde054f25,"SQL: Allow select-sort-project query shapes. (#7769)

* SQL: Allow select-sort-project query shapes.

Fixes #7768.

Design changes:

- In PartialDruidQuery, allow projection after select + sort by removing
  the SELECT_SORT query stage and instead allowing the SORT and
  SORT_PROJECT stages to apply either after aggregation or after a plain
  non-aggregating select. This is different from prior behavior, where
  SORT and SORT_PROJECT were only considered valid after aggregation
  stages. This logic change is in the ""canAccept"" method.
- In DruidQuery, represent either kind of sorting with a single ""Sorting""
  class (instead of DefaultLimitSpec). The Sorting class is still
  convertible into a DefaultLimitSpec, but is also convertible into the
  sorting parameters accepted by a Scan query.
- In DruidQuery, represent post-select and post-sorting projections with
  a single ""Projection"" class. This obsoletes the SortProject and
  SelectProjection classes, and simplifies the DruidQuery by allowing us
  to move virtual-column and post-aggregator-creation logic into the
  new Projection class.
- Split ""DruidQuerySignature"" into RowSignature and VirtualColumnRegistry.
  This effectively means that instead of having mutable and immutable
  versions of DruidQuerySignature, we instead of RowSignature (always
  immutable) and VirtualColumnRegistry (always mutable, but sometimes
  null). This change wasn't required, but IMO it this makes the logic
  involving them easier to follow, and makes it more clear when the
  virtual column registry is active and when it's not.

Other changes:

- ConvertBoundsToSelectors now just accepts a RowSignature, but we
  use the VirtualColumnRegistry.getFullRowSignature() method to get
  a signature that includes all columns, and therefore allows us to
  simplify the logic (no need to special-case virtual columns).
- Add `__time` to the Scan column list if the query is ordering by time.

* Remove unused import.",2019-05-30T19:56:29Z
245eded35012f3dbbf391df80c1ccd00497d93dd,"Web-console: Add run keyboard short cut to sql-control (#7787)

* add run keyboard shortcut

* add allow input",2019-05-29T23:11:59Z
782863ed0f00fe199599b6bafc587afd929e0f14,"Fix some problems reported by PVS-Studio (#7738)

* Fix some problems reported by PVS-Studio

* Address comments",2019-05-29T18:20:45Z
b051d6688dce69647c7d0fba62fdf9fa2063c94c,bump deps (#7788),2019-05-29T15:50:06Z
f9528d647649b7798fbaa8d70e24f6cc441d8149,Add missing protobuf license (#7785),2019-05-29T01:09:05Z
96b9b3073cb350e6ee44625327134384de899820,"Web console: Adding a server view that can display all servers (#7770)

* adding a server view that can see all servers

* fixing action-cell snapshot test

* dynamic resize on sql view

* remove extra word

* update home view server tile also

* offer more context options

* pass context to explain also",2019-05-29T00:12:50Z
6fdc78abbc9a7017bb12a9c418011e45a9227d46,fix supervisor resume route (#7782),2019-05-28T20:22:42Z
58a6f0d5d05c736e1ac1fc8e3308676f880a3296,"Enable compiling against Java 9+ (tests disabled)

This change only enables compilation to ensure code compiles against
recent Java versions going forward. Tests are still disabled in this
profile until test failures are addressed.",2019-04-19T15:59:54Z
484afe0afbbb3531374683162d5c73f40e83adc2,"exclude hadoop system dependency

ambari depends on hadoop-annotation. Under linux, it sometimes activates a
maven profile that includes an explicit dependency on ${java.home}/../lib/tools.jar

This change excludes this dependency, since this jar is no longer
included with Java 9. It also seems seems unlikely that we would require
this dependency at runtime, since it is only enabled on some platforms.",2019-05-19T16:35:18Z
e46bdf082e85edc478a361a4fca001055b05d552,Remove Codehaus references from the tests (#7773),2019-05-27T17:51:14Z
42cf07884345fa5fba70a17156678dc6c37ab3d1,"Fix memory problem (OOM/FGC) when expression is used in metricsSpec (#7716)

* AggregatorUtil should cache parsed expression to avoid memory problem (OOM/FGC) when Expression is used in metricsSpec

* remove debug log check in Parser.parse

* remove cache and use suppliers.memorize",2019-05-27T16:46:17Z
cf09fbf4ce54443c78a40f529b124423ed1c5443,"Fix LookupSerdeModule double-binding in Coordinator-as-Overlord mode. (#7765)

Fixes #7762.",2019-05-26T22:14:50Z
c97eb93e16d914e3ad54138efe9d3a3990e1a52a,Fix dead code in IndexTask.collectIntervalsAndShardSpecs() (#7746),2019-05-25T17:12:15Z
7eac685e47e2eadbaf2ad0fe83ed42e399e4796f,"Web-console: add hostname to tasks view  (#7758)

* add host name

* change to location

* remove space",2019-05-25T06:18:18Z
2b7bb064b502c3ca9fe6896f37a899aaa520e1e6,remove unused ObjectMapper from DatasourcePathSpec (#7754),2019-05-25T06:15:40Z
3a77a3e1123761547775e886aa37805206a91fce,"Web-Console: add actions icon to lookups (#7725)

* add lookup-table-action-dialog

* reorder arguments

* remove lookup-table-action-dialog

* fix supervisors table action dialog

* fix imports

* Add host column to task view

* reorder buttons

* remove log

* update snapshots

* remove host

* update snapshots

* remove console log

* remove fragment

* update snapshots and remove space",2019-05-25T05:53:12Z
5f50f357a47f4564481f4321105f14f971952174,"Web-Console: add go to editor button to tasks and supervisors view (#7705)

* add go to editor button to tasks and supervisors

* fix package.json

* remove intent

* quuick fixes

* fixes

* add getsupervisorjson and gettaskjson

* remove space

* remove gotoloaddata

* fixes

* add error handling

* save

* add loader

* remove initspec

* fixup! add loader

* update snapshots

* remove gotoloaddataview form headerbar.spec",2019-05-25T05:52:26Z
2b34e1b710d987a7f47e05dc43fda2384bc4ac8a,"Web console: add log tailing to task log view  (#7703)

* add tail dialog checkbox to tasks show-log-component for webconsole

* add check box button css

* add 2 second delay

* left align

* change tail formatting

* use async/await syntax

* add space

* add public prefix

* update jest to reflect changes in show-log

* use sentence case

* update snapshots",2019-05-24T22:34:29Z
d7e3fa510ea9145ec494e4de2f63dbc4405f0cc9,"Web-console: add resizable split screen layout to tasks and servers views  (#7723)

* add split scroll layout

* fix dev dependancies

* clean up

* adjust margin

* update jest to reflect ui changes

* fix css

* fix css issues, update npm

* remove scrollable",2019-05-24T22:01:45Z
2bf44eb0b4bbd899d2a030b0d89dc7e97627dfd3,"Missing licenses and notices for source distribution (#7760)

* Add missing licenses and notices

* address comment",2019-05-24T21:47:41Z
83152a7a00b5ada720880fcea2ca763ede8284c5,Fix performance-faq and remove insert-segment-to-db redirects (#7759),2019-05-24T20:20:02Z
7ec7257e1dbc095019e20958a48f3aea89632609,"Fix lookup serde on node types that don't load lookups. (#7752)

This includes the router, overlord, middleManager, and coordinator.
Does the following things:

- Loads LookupSerdeModule on MM, overlord, and coordinator.
- Adds LookupExprMacro to LookupSerdeModule, which allows these node
  types to understand that the 'lookup' function exists.
- Adds a test to make sure that LookupSerdeModule works for virtual
  columns, filters, transforms, and dimension specs.

This is implementing the technique discussed on these two issues:

- https://github.com/apache/incubator-druid/issues/7724#issuecomment-494723333
- https://github.com/apache/incubator-druid/pull/7082#discussion_r264888771",2019-05-24T19:30:49Z
db3792727e6cba33a48c9c305753629f96d670f8,"use unminified jquery to be more friendly for source releases, fix license stuff (#7751)

* use unminified jquery to be more friendly for source releases, fix license stuff

* other license file

* rats",2019-05-24T18:53:25Z
cfb7756c9bf0c9d4ef2c207f9fefb69c8ae1c374,Fix references to removed performance FAQ page (#7755),2019-05-24T18:52:40Z
eb0e1a056c1150e5a904d0fcef57188d6f2ae12c,Add limit to timeseries docs (#7750),2019-05-24T02:41:52Z
f2e34a76bdd5badfb909d7ea1042e97ea4cb1ae8,Fix TOC clustering example link (#7749),2019-05-24T02:41:27Z
eef69619d39f26094963fc68ab3d51cb84bd66ee,add support for multi-value string dimensions for HllSketch build aggregator (#7730),2019-05-24T00:07:32Z
cbdac49ab393c68f8f17d6cdcc604897d8843f37,"Web console - add enable/disable actions for middle manager workers (#7642)

* Overlord console - add enable/disable button for remote workers.

* Overlord console - add proxy for remote workers API.

* WorkerResourceTest - revert newline change.

* Remote worker proxy tests - remove empty line.

* Refactor remote worker proxy for readability and security

* Rename method in remote task runner tests for readability

* Remove enable/disable button for remote workers from old web console

* Add enable/disable actions for middle manager worker in new web console

* Fix variable type

* Add worker task runner query adapter

* Fix web console tests: segments-view, servers-view

* Fix overlord resource tests",2019-05-23T23:47:23Z
ec4d09a02f81d312f677b0aa7c439a23891addef,Remove obsolete isExcluded config from Kerberos authenticator (#7745),2019-05-23T23:00:05Z
daf20b4b864bd6618150d6a7b2185b5677e8c406,use memoized supplier for lazy singleton in SeekableStreamIndexTask.java (#7740),2019-05-23T22:58:38Z
54b3f363c4fc73fcc47b757bda8071a877b967f9,Remove unnecessary principal handling in KerberosAuthenticator (#7685),2019-05-23T20:15:44Z
23e96d15d41fef0cfe4d1815421b19fca3005334,"allow quantiles merge aggregator to also accept doubles (#7718)

* allow quantiles merge aggregator to also accept doubles

* consolidate dupe

* import",2019-05-23T18:13:41Z
6964ac23a2a3b95f29a2d4aa443ef9fcbc84dfdb,"Adding influxdb emitter as a contrib extension (#7717)

* Adding influxdb emitter as a contrib extension

* addressing code review comments",2019-05-23T18:11:48Z
26fad7e06a61ae76a670a0ced0690767ed76c6c7,"Add checkstyle for ""Local variable names shouldn't start with capital"" (#7681)

* Add checkstyle for ""Local variable names shouldn't start with capital""

* Adjust some local variables to constants

* Replace StringUtils.LINE_SEPARATOR with System.lineSeparator()",2019-05-23T16:40:28Z
eff2be4f8f9d7aad0f01516f5425f3ebccaa006c,Remove LegacyKafkaIndexTaskRunner (#7735),2019-05-23T16:25:35Z
3dec5cd1e42a831b3200608455d543d7e37d76eb,reorganizing the ToC (#7734),2019-05-23T16:24:38Z
53b6467fc83cd4a78d87b5fd1557c84b2a5b2513,"SeekableStreamIndexTaskRunner: Lazy init of runner. (#7729)

The main motivation is that this fixes #7724, by making it so the overlord
doesn't try to create a task runner and parser when all it really wants to
do is create a task object and serialize it.",2019-05-23T04:13:57Z
ffc2397bcda67c6ba153ef072694d5bd740696f9,"fix AggregatorFactory.finalizeComputation implementations to be ok with null inputs (#7731)

* AggregatorFactory finalizeComputation is nullable with nullable input, make implementations honor this

* fixes",2019-05-23T04:13:09Z
1b284ca847aaeb1fdfd9ac1b71dab95f9455169f,"add tests to dialogs, compnents and views. Add index files to components and dialogs. add nested file structure (#7669)",2019-05-23T03:36:51Z
bd899b922459e36ff1fba883da068f8d415cbf47,"add s3 authentication method informations (#7674)

* add s3 authentication method informations

* add druid.s3.fileSessionCredentials related content

* remove authentication parameters to avoid confusion as it is more detailed in S3 Deep Storage page

* streamline s3 docs",2019-05-22T18:46:02Z
1fe0de1c962400321ce0ca3e2a6f8528e64466cf,Fix currSize attribute of historical server type (#7706),2019-05-21T18:55:58Z
cbbce955de588330797fda986dd1031fceb3b679,"SQL: Allow NULLs in place of optional arguments in many functions. (#7709)

* SQL: Allow NULLs in place of optional arguments in many functions.

Also adjust SQL docs to describe how to make time literals using
TIME_PARSE (which is now possible in a nicer way).

* Be less forbidden.",2019-05-21T18:54:34Z
43c54385f6f7705507570c50e048b08cf5902b10,"SQL: Respect default timezone for TIME_PARSE and TIME_SHIFT. (#7704)

* SQL: Respect default timezone for TIME_PARSE and TIME_SHIFT.

They were inadvertently using UTC rather than the default timezone.
Also, harmonize how time functions handle their parameters.

* Fix tests

* Add another TIME_SHIFT test.",2019-05-21T18:40:44Z
69b2ea3ddc0fd6831f5ca4cfa2a5fcde4ebfc3cc,"SQL: TIME_EXTRACT should have 2 required operands. (#7710)

* SQL: TIME_EXTRACT should have 2 required operands.

Timestamp and time unit are both required.

* Add regression test.",2019-05-21T18:32:36Z
bcea05e4e8d4cabd698aedbc8f60fdfa8666e2ca,"SQL: Fix exception with OR of impossible filters. (#7707)

Fixes #7671.",2019-05-21T18:32:09Z
b6941551aee143074049c8187c84b84aa1014a49,"Upgrade various build and doc links to https. (#7722)

* Upgrade various build and doc links to https.

Where it wasn't possible to upgrade build-time dependencies to https,
I kept http in place but used hardcoded checksums or GPG keys to ensure
that artifacts fetched over http are verified properly.

* Switch to https://apache.org.",2019-05-21T18:30:14Z
dd7dace70a26a6fdcf5617957f508b6fe7e176bc,"Add TIMESTAMPDIFF sql support (#7695)

* add timestampdiff sql support

* feedback address",2019-05-21T15:05:38Z
156322932f124e953f60c248cc2eecfc0e26d936,"Update Druid Console docs for 0.15.0 (#7697)

* Update Druid Console docs for 0.15.0

* SQL -> query

* added links and fix typos",2019-05-21T11:00:42Z
169d2493bc71aa4d4a6fe4835c13b95d02e33246,Web console: fix missing value input in timestampSpec step (#7698),2019-05-21T10:59:48Z
cb6ec2cab856dc0a36bc2ebd480a349ffaaece77,"SqlOperatorConversion Javadoc fix. (#7713)

Appears to be a copypasta error; the toDruidFilter method was referred
to aggregations, but it's not handling aggregations.",2019-05-21T04:21:21Z
d69aa6f7f660e3839dc9f829753bb31c0046a9ea,"Fix case insensitive of ParserUtils.findDuplicates (#7692)

* Fix case insensitive ParserUtils.findDuplicates

* unused import",2019-05-21T00:49:15Z
fb0c84694143cda3e66d59e3d706f38f3fd5d1cb,"Virtual column updates for exploiting base column internal structure (#7618)

* VirtualColumn updates for exploiting base column internal structure

* unit tests for virtual column interface updates

* groupBy needs to use VirtualizedColumnSelectorFactory if outer query in
nested groupBy has virtual columns.

* fix strict compile checks

* fix teamcity build errors

* add comment explaining useVirtualizedColumnSelectorFactory flag in RowBasedGrouperHelper.createGrouperAccumulatorPair(..)",2019-05-21T00:04:35Z
c4a4223c9c2fd2d71958fd7d66ffdf682dfb8967,"fix issue where result level cache was recomputing post aggs that were already cached, causing issues with finalizing aggregators (#7708)",2019-05-20T23:51:51Z
ddda8b74cbe095c047c179bc11f674241ad15e00,update lz4-java to 1.6.0 (lz4 1.9.1) (#7700),2019-05-20T20:01:48Z
5f08b0b474a9d811f2a3b419d72fd3c6df157c9e,"Add checkstyle for ""Prohibit @author tags in Javadoc"" (#7682)

* Add checkstyle for ""Prohibit @author tags in Javadoc""

* Add ""Do not use author tags/information in the code"" back to CONTRIBUTING.md",2019-05-20T07:09:51Z
1add566411cc833d015f7b809e3722b5ee053689,Fix typo (ComplexMetricSerde class name was spelled incorrectly) (#7694),2019-05-19T16:49:54Z
be16e4a4ae59aa0c49c2813ee53d4e04257a7aeb,"Web console, adding Apache Kafka and AWS Kinesis to the data loader (#7643)

* adding kafka and kinesis to the data loader

* feature detect

* copy fixes

* wording fixes

* added missing spec type

* increase timeout

* Call it Google Cloud Storage",2019-05-17T21:01:27Z
94721de141ba04420616a5a5380a6db453d8a025,"Add auto tagging milestone script (#7677)

* Add auto tagging milestone script

* fix usage

* missing newline

* missing newline",2019-05-17T06:11:17Z
939b417379b0f967e93d3ea892fe8bef526d6251,Update tutorial-kafka.md (#7678),2019-05-17T06:10:45Z
d38457933f1b78a3766198b43ce0b61ecd221179,"Data loader (sampler component) - Kafka/Kinesis samplers (#7566)

* implement Kafka/Kinesis sampler

* add KafkaSamplerSpecTest and KinesisSamplerSpecTest

* code review changes",2019-05-17T03:26:23Z
ec0b7787cf1811bbbe90f5c5e5f6514a24894d12,"Web console: fixed issue when grouping tasks by different attributes (#7657)

* deleted created_time in ""status""

* added toString on the status object",2019-05-16T23:46:04Z
d99f77a01b5f4e0abde0ec85c1a1039de09bbb78,"Add option to use YARN RM as fallback for JobHistory failure (#7673)

* Add option to use YARN RM as fallback for job status

* PR comments",2019-05-16T20:59:10Z
dc85a5309ef3edb6a761437918b00b289fedf8b5,some more doc improvements (#7675),2019-05-16T20:17:21Z
d667655871f2f9698b8438ebb39015c43d010a66,"Add basic tuning guide, getting started page, updated clustering docs (#7629)

* Add basic tuning guide, getting started page, updated clustering docs

* Add note about caching, fix tutorial paths

* Adjust hadoop wording

* Add license

* Tweak

* Shrink overlord heaps, fix tutorial urls

* Tweak xlarge peon, update peon sizing

* Update Data peon buffer size

* Fix cluster start scripts

* Add upper level _common to classpath

* Fix cluster data/query confs

* Address PR comments

* Elaborate on connection pools

* PR comments

* Increase druid.broker.http.maxQueuedBytes

* Add guidelines for broker backpressure

* PR comments",2019-05-16T18:13:48Z
8687f424f98a6570cfb732bf5f1b494366ff3112,"make ComplexColumn an interface and ExtensionPoint (#7633)

* make ComplexColumn an interface and ExtensionPoint

* incorporate review comments

* make ColumnValueSelector @ExtensionPoint

* more java docs

* add close() method to ComplexColumn interface",2019-05-16T03:59:55Z
3df364c472756dc4b00450b73c1530c3bff74764,Fix broken links in api-reference.md (#7670),2019-05-16T01:53:34Z
c2abbc24a775cbb3dba78ed2bbfa7808216131a0,minor web console doc fixes (#7668),2019-05-16T01:52:51Z
7d63c295ccfc15bd05164f32e5c49f9fed4da89b,"Fix compilation error in CoordinatorBasicAuthorizerResourceTest (#7667)

* Fix compilation error in CoordinatorBasicAuthorizerResourceTest

* Don't use simplifyPermissions",2019-05-16T00:47:38Z
d3545f508672cf6b5eb66c7c28483f5ab01813ec,"Show all server types in sys.servers table (#7654)

* update sys.servers table to show all servers

* update docs

* Fix integration test

* modify test query for batch integration test

* fix case in test queries

* make the server_type lowercase

* Apply suggestions from code review

Co-Authored-By: Himanshu <g.himanshu@gmail.com>

* Fix compilation from git suggestion

* fix unit test",2019-05-15T23:54:02Z
0b739a57872f17915b47e00b0317c9c075ad47c2,"Added more mappings for new metrics. (#7665)

Signed-off-by: Denis Boulas <dene14@gmail.com>",2019-05-15T22:04:46Z
6901123a53f79327eccdd69b688aed230275342b,"Fix compareAndSwap() in SQLMetadataConnector (#7661)

* Fix compareAndSwap() in SQLMetadataConnector

* Catch serialization_failure and retry for Postgres",2019-05-15T21:53:04Z
0352f450d738bd5b477709eea83ef449591deaad,"Fix broken links in docs, add broken link checker. (#7658)

Also adds back insert-segment-to-db.md with some docs about why and
when it was removed (in #6911).",2019-05-15T21:49:50Z
917106985f9295f30cf386e65fdb212c9dfd56b6,"Update tutorial to delete data (#7577)

* Update tutorial to delete data

* update tutorial, remove old ways to drop data

* PR comments",2019-05-15T21:40:06Z
e874da7cea6db590e88ff847b47dfc2ad878baad,"Add simpler permissions option to BasicAuthorizer GET APIs (#7635)

* Add simpler permissions option to BasicAuthorizer GET APIs

* Adjust log message

Co-Authored-By: Himanshu <g.himanshu@gmail.com>

* Adjust log message

Co-Authored-By: Himanshu <g.himanshu@gmail.com>",2019-05-15T19:59:32Z
b87c8f03141da4ff8f1e29f904d640094b471491,"fix lookup editor to use lookup tiers instead of historical tiers (#7647)

* fix lookup editor to use lookup tiers instead of historical tiers

* use default tier if empty response, fix if configured lookups is null

* fixes

* fix typo",2019-05-14T20:30:51Z
2aa9613bed5380117c3812ca0a6035b4f6744335,"Bump Checkstyle to 8.20 (#7651)

* Bump Checkstyle to 8.20

Moderate severity vulnerability that affects:
com.puppycrawl.tools:checkstyle

Checkstyle prior to 8.18 loads external DTDs by default,
which can potentially lead to denial of service attacks
or the leaking of confidential information.

Affected versions: < 8.18

* Oops, missed one

* Oops, missed a few",2019-05-14T18:53:37Z
e8a6575fb3dc1789aa450811aa6977497a5c85af,Remove Joda from indexing-hadoop (#7650),2019-05-13T19:31:13Z
4c709ddbc10ff95045b6d3fe57ecd4868457f484,"Bump Apache Parquet to 1.10.1 (#7645)

https://github.com/apache/parquet-mr/blob/master/CHANGES.md#version-1101",2019-05-12T21:38:33Z
35a1fbefeae9a6bb3658032b9611869c157887c6,upgrade avatica to 1.12.0 (#7644),2019-05-12T21:38:06Z
c7b482625ea244ebe29fa3da719b23dcee2e67e8,"travis.yml remove duplicate language entry (#7626)

* travis.yml remove duplicate language entry

* openjdk8 instead of oraclejdk8?",2019-05-11T00:09:55Z
f7b8b57c3b294148a27eda150529cb51ee01625f,"simpilfy DruidConvertletTable.java, remove STANDARD_CONVERTLET declare (#7632)",2019-05-10T21:08:32Z
ca1a6649f6e67cf73b98b5fcb1eb8a25387c0762,"Datasketches quantiles more post-aggs (#7550)

* rank and CDF post-aggs

* added post-aggs to the module

* added new post-aggs

* moved post-agg IDs

* moved post-agg IDs",2019-05-10T18:46:54Z
1d49364d08953cdd6730f2330a1f00908ed6b606,"Set direct memory if unable to detect JVM config (#7606)

* Set direct memory if unable to detect JVM config

Java 9 and above prevents us from detecting the maximum available direct
memory.

This change adds a fallback method to use at most 25% of maximum heap
size, which should be a reasonable default.

Unless -XX:MaxDirectMemorySize is set, recent JVMs will default maximum
direct memory to match the maximum heap size, so this should work out of
the box in most cases. For completeness we print instructions in the log
to explain how to adjust settings if necessary.

* skip test rather than succeeding

* reword log message

Co-Authored-By: Himanshu <g.himanshu@gmail.com>",2019-05-10T05:30:43Z
402d76a10f16a356fe236e41981739430d35b8bd,"make-redirects.py requires python3, explicitly specify it (#7625)",2019-05-10T04:32:58Z
76e31937cbc927ad4d77c33a50175d7a2b4bff65,fix license.binary for new datasketches version (#7627),2019-05-10T04:32:44Z
6a6c6d573d50b1a9931d13aa579ae6b96369c193,"Add plain text README.txt, use relative link from README.md to build.md (#7611)

* use relative link to build instructions from top level readme

* add textfile to readme

* formatting

* make README.BINARY plaintext, move LABELS.md to LABELS, README.txt to README

* exclude README.BINARY still

* remove jdk links/recommmendations

* add script to use DRUIDVERSION in textfile README instead of latest, add links to recommended jdk to build.md

* license

* better readme template, links to latest if does not detect an apache release version

* fix",2019-05-10T04:29:26Z
18e0d6acb4bf35bda5900d6aa04643823bdabaaf,"Fix resultLevelCache for timeseries with grandTotal (#7624)

* Fix resultLevelCache for timeseries with grandTotal

* Address comment

* fix test",2019-05-10T01:11:04Z
59f9ff38c7a15a5fa92b264863cb0a34a4786cd9,"fix issue #7607 (#7619)

* fix issue #7607

* exclude com.google.code.findbugs:annotations",2019-05-10T00:33:29Z
b542bb9f341182c74733172b7d55d0c4e2a5a092,"TDigest backed sketch aggregators (#7331)

* First set of changes for tDigest histogram

* Add license

* Address code review comments

* Add a doc page for new T-Digest sketch aggregators. Minor code cleanup and comments.

* Remove synchronization from BufferAggregators. Address code review comments

* Fix typo",2019-05-10T00:22:55Z
b32c9abdb93693c15780284808a3817f272295ae,Run npm ci instead of npm install (#7613),2019-05-09T22:42:16Z
1b577c9b1d806bc1b65c3ca3e64ecbaa06ea3f04,"Fix exception when using complex aggs with result level caching (#7614)

* Fix exception when using complex aggs with result level caching

* Add test comments

* checkstyle

* Add helper function for getting aggs from cache

* Move method to CacheStrategy

* Revert QueryToolChest changes

* Update test comments",2019-05-09T20:49:11Z
2ac112151f11a664e8929f77249094931a964467,"Fix formatting in scan query documentation (#7622)

Escape underscores in `__time`, so they're not interpreted as bold
formatting.",2019-05-09T18:32:37Z
0ef435a16c511181bb97f61b230eeadf50d63535,"add postgresql meta db table schema configuration property (#7137) (#7183)

* add postgresql meta db table schema configuration property (#7137)

If the postgresql db schema changes, you must set the configuration
values.
You do not need to set it if there is no change from the default schema
'public'.
druid.metadata.postgres.dbTableSchema=public

* create postgresql metadb table schema configuration property (#7137)
If the postgresql db schema changes, you must set the configuration
values.
You do not need to set it if there is no change from the default schema
'public'.
druid.metadata.postgres.dbTableSchema=public
check PostgreSQLTablesConfig.java

* modify postgresql readme file. - metadb table schema (#7137)
If the postgresql db schema changes, you must set the configuration
values.
You do not need to set it if there is no change from the default schema
'public'.
druid.metadata.postgres.dbTableSchema=public
check PostgreSQLTablesConfig.java",2019-05-08T19:56:30Z
9b197b436b4489195ad589b44978d0a9e08d2c3f,added scrolling to data loader panes (#7605),2019-05-07T15:45:20Z
dadf6a2f11c00a1864c32f5e91e175543f83b5e5,"Add tool for migrating from local deep storage/Derby metadata (#7598)

* Add tool for migrating from local deep storage/Derby metadata

* Split deep storage and metadata migration docs

* Support import into Derby

* Fix create tables cmd

* Fix create tables cmd

* Fix commands

* PR comment

* Add -p",2019-05-07T06:39:40Z
b3c74630592000b692fa0ac4aecbbac79ea14356,"fix test pattern matching for jdk11 (#7602)

This change makes the error pattern more generic to account for
differences between JDK versions.",2019-05-07T04:02:44Z
c58aa2f2ab74fe6c5029c65f4f3e3b046ab48e89,"Remove unnecessary cast to URLClassLoader (#7603)

Java 9 and above will fail trying to cast the system classloader",2019-05-07T03:17:22Z
751e1c9ba73b8e2a88358efcaec2d335e5ca99e8,"add javax.xml.bind dependencies removed in jdk11 (#7604)

We depend on javax.xml.bind at runtime. This change adds an explicit
dependency on the J2EE module that was removed in Java 11.",2019-05-07T02:30:14Z
7c2ca474da7427582a05f082b55084250d01a705,"Add single-machine deployment example cfgs and scripts (#7590)

* Add single-machine deployment example cfgs and scripts

* Add (8u92+)

* Use combined coordinator-overlord for single machine confs

* RAT fix",2019-05-07T02:11:13Z
51a62cb31b06a54ed2e16dcbbae6e693fa2cace2,"Update dependencies for JDK11 support (#7601)

* update asm for jdk11 support

* update jvm-attach-api for jdk11 support",2019-05-06T21:07:45Z
727b65c7e5ce536daf2fff58372228d80fd61078,"Remove SQL experimental banner and other doc adjustments. (#7591)

* Remove SQL experimental banner and other doc adjustments.

Also,

- Adjust the ToC and other docs a bit so SQL and native queries are
  presented on more equal footing.
- De-emphasize querying historicals and peons directly in the
  native query docs. This is a really niche thing and may have been
  confusing to include prominently in the very first paragraph.
- Remove DataSketches and Kafka indexing service from the experimental
  features ToC. They are not experimental any longer and were there in
  error.

* More notes.

* Slight tweak.

* Remove extra extra word.

* Remove RT node from ToC.",2019-05-06T19:31:51Z
f7bfe8f2697277f4216d90607d01bfd26e813ab3,"Update mocking libraries for Java 11 support (#7596)

* update easymock / powermock for to 4.0.2 / 2.0.2 for JDK11 support
* update tests to use new easymock interfaces
* fix tests failing due to easymock fixes
* remove dependency on jmockit
* fix race condition in ResourcePoolTest",2019-05-06T19:28:56Z
a00d3e19313ef80233670a67fddb2dd7abcdfb5d,"Fix old-console/cluster.html; Remove redundant throws in ITBasicAuthConfigurationTest (#7589)

* Fix old-console/cluster.html; Remove redundant throws in ITBasicAuthConfigurationTest

* Remove comment in cluster.html",2019-05-06T16:08:49Z
83b38c0911c6a040308c29dc88a3051d60c68b93,"Improved UI for actions in task/supervisor table (#7528)

* Grouped actions in task/supervisor table to a dialog

* Design change

* fix divider

* Removed await for onclick event on buttons

* fix package.json

* Better error handling

* remove log

* name change; better code organization

* Code refactor; extrac table action dialog

* minor change

* tidy up actions

* drop reload actions",2019-05-06T10:20:12Z
baf54f373cec583d5f93c4f7d6cf6c25869eefd7,"Data loader (GUI component) (#7572)

* data loader init

* fix timecolumn text

* feedback changes

* fixing typos and improving error reporting

* added local firehose warning

* update warning copy

* refine copy

* better copy

* fix tests

* remove console log

* copy change

* add banner message",2019-05-04T00:14:57Z
afbcb9c07f21c12f241f1dc6575589ef14cda836,"Improve parallelism of zookeeper based segment change processing (#7088)

* V1 - improve parallelism of zookeeper based segment change processing

* Create zk nodes in batches. Address code review comments.
Introduce various configs.

* Add documentation for the newly added configs

* Fix test failures

* Fix more test failures

* Remove prinstacktrace statements

* Address code review comments

* Use a single queue

* Address code review comments

Since we have a separate load peon for every historical, just having a single SegmentChangeProcessor
task per historical is enough. This commit also gets rid of the associated config druid.coordinator.loadqueuepeon.curator.numCreateThreads

* Resolve merge conflict

* Fix compilation failure

* Remove batching since we already have a dynamic config maxSegmentsInNodeLoadingQueue that provides that control

* Fix NPE in test

* Remove documentation for configs that are no longer needed

* Address code review comments

* Address more code review comments

* Fix checkstyle issue

* Address code review comments

* Code review comments

* Add back monitor node remove executor

* Cleanup code to isolate null checks  and minor refactoring

* Change param name since it conflicts with member variable name",2019-05-03T13:58:42Z
a013350018d96cbb40944a0b5e060d510eeabdbc,"Adjust required permissions for system schema (#7579)

* Adjust required permissions for system schema

* PR comments, fix current_size handling

* Checkstyle

* Set curr_size instead of current_size

* Adjust information schema docs

* Fix merge conflict

* Update tests",2019-05-02T14:18:02Z
ec8562c885f212d1c070a40322001a3da8048a0f,"Data loader (sampler component) (#7531)

* sampler initial check-in
fix checkstyle issues
add sampler fix to process CSV files from cache properly
change to composition and rename some classes
add tests and report num rows read and indexed
remove excludedByFilter flag and don't send filtered out data
fix tests to handle both settings for druid.generic.useDefaultValueForNull

* wrap sampler firehose in TimedShutoffFirehoseFactory to support timeouts

* code review changes - add additional comments, limit maxRows",2019-05-02T05:37:14Z
ed2beb6ba5667c4652898ebcf2f01b931e34cbe1,Add is_overshadowed column to segment table (#7555),2019-05-01T19:28:53Z
15d19f3059a990f022b1cb98bdd4e6a82cdf9a06,"Add is_overshadowed column to sys.segments table (#7425)

* Add is_overshadowed column to sys.segments table

* update docs

* Rename class and variables

* PR comments

* PR comments

* remove unused variables in MetadataResource

* move constants together

* add getFullyOvershadowedSegments method to ImmutableDruidDataSource

* Fix compareTo of SegmentWithOvershadowedStatus

* PR comment

* PR comments

* PR comments

* PR comments

* PR comments

* fix issue with already consumed stream

* minor refactoring

* PR comments",2019-05-01T16:00:57Z
d97c0d19a0e53cf651eab5331094fe70654db6ee,add url baser (#7585),2019-05-01T08:53:03Z
6d4181191f06043e4972cc9c3b4589436a4b1b3d,replace jdk internal exceptions with closest publicly available one,2019-04-30T00:26:41Z
c2263a339e266dcb696b2de1d713e3b4055635aa,Remove direct references to unsafe for Java 9+,2019-04-13T05:24:01Z
f776b9408962b9006cfcfe4d6c1794751972cc8e,AggregatorFactory: Clarify methods that return other AggregatorFactories. (#7293),2019-04-29T17:27:30Z
7b8bc9a5efac2055cd04760efdb0a7beced7726b,"EmitterModule: Throw an error on invalid emitter types. (#7328)

* EmitterModule: Throw an error on invalid emitter types.

The current behavior of silently using the ""noop"" emitter is unhelpful
and makes it difficult to debug config typos.

* Add comments.",2019-04-29T17:23:53Z
20755f4ca03f36a4211455153a6c38d62b64419b,"Add supervisor card in home view (#7551)

* Add supervisor card in home view

* hide the text under conditions",2019-04-29T17:15:10Z
ce7298b51e0ec9e6246dbb565421c744f4848ba2,"BaseAppenderatorDriver: Fix potentially overeager segment cleanup. (#7558)

* BaseAppenderatorDriver: Fix potentially overeager segment cleanup.

Here is a thing that I think can go wrong:

1. We push some segments, then try to publish them transactionally.
2. The segments are actually published, but the 200 OK response gets
   lost (connection dropped, whatever).
3. We try again, and on the second try, the publish fails (because
   the transaction baseline start metadata no longer matches).
4. Because the publish failed, we delete the pushed segments.
5. But this is bad, because the publish didn't really fail, it actually
   succeeded in step 2.

I haven't seen this in the wild, but thought about it while
reviewing #7537.

This patch also cleans up logging a bit, making it more accurate and
somewhat less chatty.

* Avoid wrapping exceptions when not necessary.",2019-04-29T16:55:04Z
30fed78daf7b4f7e9f7946046facee8aa61e8d5b,"Java 9 compatible specialized class compilation (#7477)

* Java 9 compatible specialized class compilation

We currently use Unsafe.defineClass to compile specialized classes,
which has been removed in Java 9 and above. This change switches to
MethodHandles.Lookup.defineClass at runtime, which provides similar
functionality in newer JDK versions.

* add comments

* fix incorrect comment

* add unsafe utility class

* make comments java-doc style

* fix checkstyle errors

* rename unsafe -> unsafeutil

* move defineClass method to utility class

* rename unsafeutil -> unsafeutils to match other utility class names
* remove extra lookup method

* add utiliy class docs

* more comments

* minor comments and formatting",2019-04-29T16:44:28Z
c648775b5b9001dafd26192abf2a61f44bfc16d4,"SQL: Remove ""useFallback"" feature. (#7567)

This feature allows Calcite's Bindable interpreter to be bolted on
top of Druid queries and table scans. I think it should be removed for
a few reasons:

1. It is not recommended for production anyway, because it generates
unscalable query plans (e.g. it will plan a join into two table scans
and then try to do the entire join in memory on the broker).
2. It doesn't work with Druid-specific SQL functions, like TIME_FLOOR,
REGEXP_EXTRACT, APPROX_COUNT_DISTINCT, etc.
3. It makes the SQL planning code needlessly complicated.

With SQL coming out of experimental status soon, it's a good opportunity
to remove this feature.",2019-04-29T01:26:44Z
f02251ab2d6e1b4d13bf78415c9c7528a7a9c063,"Contributing Moving-Average Query to open source. (#6430)

* Contributing Moving-Average Query to open source.

* Fix failing code inspections.

* See if explicit types will invoke the correct comparison function.

* Explicitly remove support for druid.generic.useDefaultValueForNull configuration parameter.

* Update styling and headers for complience.

* Refresh code with latest master changes:

* Remove NullDimensionSelector.
* Apply changes of RequestLogger.
* Apply changes of TimelineServerView.

* Small checkstyle fix.

* Checkstyle fixes.

* Fixing rat errors; Teamcity errors.

* Removing support theta sketches. Will be added back in this pr or a following once DI conflicts with datasketches are resolved.

* Implements some of the review fixes.

* Contributing Moving-Average Query to open source.

* Fix failing code inspections.

* See if explicit types will invoke the correct comparison function.

* Explicitly remove support for druid.generic.useDefaultValueForNull configuration parameter.

* Update styling and headers for complience.

* Refresh code with latest master changes:

* Remove NullDimensionSelector.
* Apply changes of RequestLogger.
* Apply changes of TimelineServerView.

* Small checkstyle fix.

* Checkstyle fixes.

* Fixing rat errors; Teamcity errors.

* Removing support theta sketches. Will be added back in this pr or a following once DI conflicts with datasketches are resolved.

* Implements some of the review fixes.

* More fixes for review.

* More fixes from review.

* MapBasedRow is Unmodifiable. Create new rows instead of modifying existing ones.

* Remove more changes related to datasketches support.

* Refactor BaseAverager startFrom field and add a comment.

* fakeEvents field: Refactor initialization and add comment.

* Rename parameters (tiny change).

* Fix variable name typo in test (JAN_4).

* Fix styling of non camelCase fields.

* Fix Preconditions.checkArgument for cycleSize.

* Add more documentation to RowBucketIterable and other classes.

* key/value comment on in MovingAverageIterable.

* Fix anonymous makeColumnValueSelector returning null.

* Replace IdentityYieldingAccumolator with Yielders.each().

* * internalNext() should return null instead of throwing exception.
* Remove unused variables/prarameters.

* Harden MovingAverageIterableTest (Switch anyOf to exact match).

* Change internalNext() from recursion to iteration; Simplify next() and hasNext().

* Remove unused imports.

* Address review comments.

* Rename fakeEvents to emptyEvents.

* Remove redundant parameter key from computeMovingAverage.

* Check yielder as well in RowBucketIterable#hasNext()

* Fix javadoc.",2019-04-27T00:07:48Z
07dd742e357b5731e8848c943c2a641705a4785a,"Fix time-ordered scan queries on realtime segments (#7546)

* Initial commit

* Added test for int to long conversion

* Add appenderator test for realtime scan query

* get rid of todo

* Fix forbidden apis

* Jon's recommendations

* Formatting",2019-04-26T23:12:10Z
ebdf07b69f5305c813ae4496d6efbace5fa6200a,"Add reload by interval API (#7490)

* Add reload by interval API
Implements the reload proposal of #7439
Added tests and updated docs

* PR updates

* Only build timeline with required segments
Use 404 with message when a segmentId is not found
Fix typo in doc
Return number of segments modified.

* Fix checkstyle errors

* Replace String.format with StringUtils.format

* Remove return value

* Expand timeline to segments that overlap for intervals
Restrict update call to only segments that need updating.

* Only add overlapping enabled segments to the timeline

* Some renames for clarity
Added comments

* Don't rely on cached poll data
Only fetch required information from DB

* Match error style

* Merge and cleanup doc

* Fix String.format call

* Add unit tests

* Fix unit tests that check for overshadowing",2019-04-26T23:01:50Z
09b7700d1372c97980224eb3fb0a482f2570b22d,fix docs (#7556),2019-04-26T05:00:37Z
2a65431b08eee6e0b2091aba30f32a463d9ea6d5,fix LICENSE.BINARY to have correct datasketches version (#7557),2019-04-26T05:00:13Z
012ab02bf4c9ebb5dfb70a346eea19509af2ba59,Update select doc disclaimer (#7554),2019-04-26T02:23:39Z
9d8f934e68d45ed22b94b11d8235f58501fc3933,"handle empty sketches (#7526)

* handle empty sketches

* return array of NaN in case of empty sketch

* noinspection ForLoopReplaceableByForEach in tests

* style fixes",2019-04-25T21:28:41Z
8308ffef1f5b8edd598f92598004ee8a28eb2bcf,"API to drop data by interval (#7494)

* Add api to drop data by interval

* update to address comments

* unused imports

* PR comments + add tests in SQLMetadataSegmentManagerTest

*  update tests and docs",2019-04-25T21:24:40Z
6fd6e5de891e8bafee8d87b90647c6bc068f98e0,"Make JavaScript and XML errors non-TeamCity errors; Update JavaScript language level to ES6 in IntelliJ settings (#7541)

* Make JavaScript and XML errors non-TeamCity errors; Update JavaScript language level to ES6 in IntelliJ settings

* Add license comment to assembly-2.0.0.xsd

* Add .idea/README.md with comments",2019-04-25T18:21:58Z
3ec9fbaa477d221f56a2a2ff75b9f4c2ae428295,"Fix history dialog styling (#7536)

* Fix history dialog

* more styling",2019-04-25T14:59:34Z
658fb2b0626d012b065779dcb02826d0ead0788d,"Fix bugs in milestone contributor script (#7545)

* Only check PRs in milestone contributor script

* Fix no-pagination bug",2019-04-25T05:11:57Z
3e25b75c3fc09a84b322226746008ae3778832db,Fix aggregatorFactory meta merge exception (#7504),2019-04-24T21:08:46Z
11a7e91a73ec9412af11d669cf02cf7765b83ff2,"No SQL mode in web console (#7493)

* Added no sql mode

* Use status code

* Add no sql mode to server view

* add sql broker check to decide if no sql mode should be enabled

* Fix historicals in home view

* Name change

* Add types for query result; improved functions

* Fixed a conflict/bug

* Fixed a bug

* multiple fix

* removed unused imports

* terminate query manager

* fix wording",2019-04-23T23:15:02Z
8b1a4e18dd04811557338a58015c5e16148d5450,Additional Apache branding doc updates (#7524),2019-04-23T21:39:16Z
2c8a71f883bf0d809777064c69f64e9f689ade72,"Support LPAD and RPAD sql function (#7388)

* lpad and rpad sql function

* feedback address

* feedback address

* add doc and format

* update docs",2019-04-22T21:51:32Z
c60e7feab8b900a7ef7b97c2b1fe5287e392be0b,"Fix encoded taskId check in chatHandlerResource (#7520)

* Fix encoded taskId check in chatHandlerResource

* fix tests",2019-04-21T01:08:34Z
b59b9ef8c7950f5c522b61e963979012d0cebccc,Fix too many dentry cache slab objs#7508. (#7509),2019-04-20T03:39:50Z
3487663de953eef4090f092fdfe173c0242936b8,Adjust approx agg deprecation wording (#7518),2019-04-20T02:31:50Z
5939fc28ea2cdeebdfeac501540adfe0071f4681,Fix some bundled license files (#7516),2019-04-19T23:07:44Z
74960e82bfc50549c849e4738e0b588e607c364b,Add more Apache branding to docs (#7515),2019-04-19T22:52:26Z
9929f8b022dcb6e144f2cc4a90ee477552ee94c2,"Fixed filter for status in task table (#7507)

* Fixed filter for Task view status

* Refactored code

* Fixed a bug for SQL filter by not converting input to lower case since the comparison is done through SQL",2019-04-19T22:51:45Z
1fb5ec39890cde4b882c1f8359c6ef8f4d52b98f,"Adds backwards-compatible serde for SeekableStreamStartSequenceNumbers. (#7512)

This allows them to be deserialized by older Druid versions as
KafkaPartitions objects.

Fixes #7470.",2019-04-19T20:19:45Z
5463ecb9795c9324228f87a0796741769bb5ea82,"Fix broken link due to Typo. (#7513)

Change-Id: I5792f89ed6afe945f386058edd44f0400998460a",2019-04-19T16:58:54Z
0a0fd63f4ed0783901bff80fbc103e99a6326aa7,"Introduce Non-TeamCity Warning inspection severity in IntelliJ's profile (#7499)

In the IDE interface, ""Non-TeamCity Warning"" looks exactly like an ordinary warning, but TeamCity should be unaware of it.

This may help to workaround these issues: https://youtrack.jetbrains.com/issue/IDEA-209789 and https://youtrack.jetbrains.com/issue/IDEA-209791, that block the upgrade of IntelliJ engine used in the TeamCity build. It seems like there may be a bug that leads to false positive error and the build fail in this PR: https://github.com/apache/incubator-druid/pull/6702.

Removed the comment regarding ""StaticPseudoFunctionalStyleMethod"" inspection because the IntelliJ keeps removing it, see this issue: https://youtrack.jetbrains.com/issue/IDEA-211087",2019-04-19T13:20:08Z
c2a42e05bb08aefa31f1d1ed09d568cdaa726b8a,"Fix result-level cache for queries (#7325)

* Add SegmentDescriptor interval in the hash while calculating Etag

* Add computeResultLevelCacheKey to CacheStrategy

Make HavingSpec cacheable and implement getCacheKey for subclasses
Add unit tests for computeResultLevelCacheKey

* Add more tests

* Use CacheKeyBuilder for HavingSpec's getCacheKey

* Initialize aggregators map to avoid NPE

* adjust cachekey builder for HavingSpec to ignore aggregators

* unused import

* PR comments",2019-04-18T20:31:29Z
be65cca248d7b3dd5ebacc2a537aa3d25d420475,"refactor druid-bloom-filter aggregators (#7496)

* now with 100% more buffer

* there can be only 1

* simplify

* javadoc

* clean up unused test method

* fix exception message

* style

* why does style hate javadocs

* review stuff

* style :(",2019-04-18T18:54:06Z
99ddce1277b60db4c1fcdabc9e80d644ba3f16a1,"Capitalize keywords in SQL auto complete (#7462)

* Split commit; keep auto complete only

* Add comment",2019-04-18T06:12:55Z
f06f0c3ad86cecc7a05b289748609c6c2508f373,"Add created_time as tie breaker when sorting by status in task table (#7460)

* Add created_time as tie breaker when sorting by status

* Fixed bug

* Fixed created_time tie breaker

* Use locale compare",2019-04-18T06:11:45Z
c8bffd9351ac0003f285b5225f6aecc1fbe40580,"Add exact match filtering to console table (#7448)

* Add exact filtering

* Bug fix

* Extract filter as a function

* change code position",2019-04-18T06:05:44Z
9732e04c60fcaf7f9869024f7676a81af6f25359,Pass in segmentTable correctly (#7492),2019-04-18T03:07:22Z
8078f567aabc6d02849a143b77dd8fa37eb8ad1d,Update kafka version in tutorials (#7500),2019-04-17T21:56:29Z
4322ce33032434f55e8b104cd0e3f617a2a991b6,"Java 9 compatible cleaner operations (#7487)

Java 9 removed support for sun.misc.Cleaner in favor of
java.lang.ref.Cleaner. This change adds a thin abstraction to switch
between Cleaner implementations based on JDK version at runtime",2019-04-17T15:04:52Z
9d385274e31abfbd19a24279902f4961fcc8e4e7,"Move dev-related files and instructions to dev/ directory; add committer's instructions (#7279)

* Add committer_readme.md

* Clean up

* Update, add PR merge action checklist

* Move dev-related docs and files except CONTRIBUTING.md to dev/ directory; More committer's intructions

* Add some accents

* Move TeamCity instruction images to teamcity-images/, edit CONTRIBUTING.md

* Add links to tags",2019-04-17T13:27:14Z
7c19c92a81d33a510cd93f9bd4a448334204982d,"Add ROUND function in druid-sql. (#7224)

* Implement round function in druid-sql

* Return value according to the type of argument

* Fix codes for abnoraml inputs, updated math-expr.md

* Fix assert text

* Fix error messages and refactor codes

* Fix compile error, update sql.md, refactor codes and format tests",2019-04-16T18:15:39Z
7385dbc9e891445f19d7081ac7874e70d54c0020,fix Lifecycle javadoc typo (#7489),2019-04-16T17:23:01Z
625c03074400aac0329d5a85a8c6e597e404504d,"Fix ParallelIndexTuningConfig constructor (#7479)

* Fix ParallelIndexTuningConfig constructor

* unused import",2019-04-16T00:41:53Z
8acad27d997b48cc802cce9352f51757a01c6336,"Enhance the Http Firehose to work with URIs requiring basic authentication (#7145)

* Enhnace the HttpFirehose to work with both insecure URIs and URIs requiring basic authentication

* Improve security of enhanced HttpFirehoseFactory by not logging auth credentials

* Fix checkstyle failure in HttpFirehoseFactory.java

* Update docs and fix TeamCity build with required noinspection

* Indentation cleanup and logic modification for HttpFirehose object stream

* Remove default Empty string password provider in http firehose

* Add JavaDoc for MixIn describing its intended use

* Reverting documentation notation for json code to be inline with rest of doc

* Improve instantiation of ObjectMappers that require MixIn for redacting password from task logs

* Add comment to clarify fully qualified references of Objects in SQLMetadataStorageActionHandler",2019-04-15T21:29:01Z
4654e1e851633820b460fc928502a71a8ac340ad,"Remove unnecessary collection (#7350)

From the discussion [here](https://github.com/apache/incubator-druid/pull/6901#discussion_r265741002)

Remove the collection and filter datasources from the stream. 
Also remove StreamingOutput and JsonFactory constructs.",2019-04-15T17:49:21Z
530a378fea35e4e71704b30a3b9ffa341fb20744,"Java 9 compatible ByteBuffer unmap operation (#7466)

The current bytebuffer unmap operations are not compatible with Java 9
and above. This change adapts the code from Apache Kafka to perform the
appropriate unmap operation based on JDK version at runtime.

see https://github.com/apache/kafka/commit/e554dc518eaaa0747899e708160275f95c4e525f",2019-04-15T16:03:18Z
721191635aa719e8b82caacae7621478ab3b6ca5,"SQL: Include virtual columns used for filtering in ScanQuery. (#7472)

PR #6902 introduced the ability to use virtual columns for filters, but they
were being omitted from ""scan"" queries, so filters would refer to a null column
instead of the intended virtual column.",2019-04-14T22:03:36Z
6789438a496d103b861bda7d8e6d6299715b7fb1,make hdfs index map reduce task add jar more reasonable (#7294),2019-04-14T17:26:59Z
3e5dae9b9698eda22ea22b57d147a155a2ebf457,Rename SegmentMetadataHolder to AvailableSegmentMetadata (#7372),2019-04-14T17:19:48Z
9b5c216684ae2ffdbe0be1be160a16f9cc54a769,"Fix datasource availability sorting (#7451)

* Fix availability sorting

* Style change",2019-04-14T17:09:57Z
7a38d28cf37c46662023960b587a43618aa85158,"run pending tasks when assigned a task that is already pending (#6991)

* run pending tasks when assigned a task that is already pending

* add unit test

* fix pending tasks aren't going to run

* address comments",2019-04-14T15:37:15Z
233d485ad0d79ae033ff5fb88f4192ceabec5bc3,"Display null in SQL table cell (#7463)

* Display null if cell in table is empty

* Add null

* re-indent",2019-04-13T19:05:14Z
c57e62bcd6f5f77671c9c7f600f31696107437be,"7153: Isolated a supplier's close by removing its invocation (#7459)

from a non-notice-processing thread",2019-04-13T02:13:08Z
85f10ed0d0df0e040a5448ce8b99a2c972537381,"Support querying realtime segments using time-ordered scan queries and fix broken scan queries without time column (#7454)

* Update scan query runner factory to accept SpecificSegmentSpec

*  nit

* Sorry travis

* Improve logging and fix doc

* Bug fix

* Friendlier error msgs and tests to cover bug

* Address Gian's comments

* Fix doc

* Added tests for empty and null column list

* Style

* Fix checking wrong order (looking at query param when it should be
looking at the null-handled order)

* Add test case for null order

* Fix ScanQueryRunnerTest

* Forbidden APIs fixed",2019-04-13T02:08:34Z
7d9cb6944b909b3a8787cc732eee8c946b1f9b7f,"Adjust BufferAggregator.get() impls to return copies (#7464)

* Adjust BufferAggregator.get() impls to return copies

* Update BufferAggregator docs, more agg fixes

* Update BufferAggregator get() doc",2019-04-13T02:04:07Z
1d9450da81e50adf8446e1fdefeecdf5410bcc35,"Some docs optimization (#6890)

* some markdown docs optimization

* markdown escape",2019-04-13T00:30:57Z
60dd75d3d957a99c7eb28f59336f596310cf48e7,"Wrap query with limit within the web console (#7449)

* wrap with limit

* make actual menu checkbox component",2019-04-12T15:51:37Z
3aae4aaf8b1120f2222d0495d20106a255d8167a,"Ensuring that all the controls are aligned correctly (#7457)

* making sure all the controls are inline

* update deps",2019-04-12T15:51:03Z
07eb2effe95788287f95aed1e7e2c8960c97fc93,customHeader (#7456),2019-04-12T04:58:09Z
3854cfd15efad634038b10b4c107ec0905710356,"SQLMetadataSegmentManager: Comments, formatting adjustments (#7452)

Follow up to #7447.",2019-04-12T04:57:50Z
2470b3279f8be4dcdd17185dcbae18fa69f52041,SQL: Fix docs for STRING_FORMAT. (#7455),2019-04-12T04:57:28Z
7382dac44ef736f7b9d625ad497b8a225c6b70ab,"Fixed grouping and sorting by status in task table (#7440)

* Fixed group by status

* Shorten code",2019-04-11T23:10:37Z
c5c2bf77f0c0ca6cf0f5c7e29d04bdbd30220997,adding host to the error display (#7453),2019-04-11T21:39:57Z
08d0d6d20d02f7a1d385a35f18545ee1efe15935,chore: pin upstream java container to jdk 8 (#7313),2019-04-11T20:18:29Z
a517f8ce49b7cb967cf791fa7b0f7cc90a3e11d1,"Coordinator: Allow dropping all segments. (#7447)

Removes the coordinator sanity check that prevents it from dropping all
segments. It's useful to get rid of this, since the behavior is
unintuitive for dev/testing clusters where users might regularly want
to drop all their data to get back to a clean slate.

But the sanity check was there for a reason: to prevent a race condition
where the coordinator might drop all segments if it ran before the
first metadata store poll finished. This patch addresses that concern
differently, by allowing methods in MetadataSegmentManager to return
null if a poll has not happened yet, and canceling coordinator runs
in that case.

This patch also makes the ""dataSources"" reference in
SQLMetadataSegmentManager volatile. I'm not sure why it wasn't volatile
before, but it seems necessary to me: it's not final, and it's dereferenced
from multiple threads without synchronization.",2019-04-11T15:45:38Z
4ea37e2614375aea55079eb08bb47487bdfba31b,"Add time taken by last query in SQL view (#7421)

* Add time taken by query

* Fix time to 2 dp; set state in on state change; hide time taken at first

* Refactored code: defined query result interface; more concise shorthand expression

* Use single quote",2019-04-11T06:35:47Z
bbb620125d7808f81544303684d70cd715d9d10d,"Table pagination style change (#7435)

* Style pagination

* Removed use of important

* Removed space

* Align items

* Switched back to react table 6.8.6

* Component name change",2019-04-11T06:34:03Z
408e3e1b2a43f765aa9e0de5b48c9369327f2690,"Remove select execution code from SQL planner (#7416)

* Removed select execution code from SQL planner

* Update doc",2019-04-11T05:32:57Z
78e6f6fb38ea6ec13eb568d0b02d2c22947b021c,"Updated Javascript Affinity config docs (#7441)

Updated with hostname:port rather than IP Address.",2019-04-11T04:44:50Z
15c3124e7f078492a93a95ce038a53bd63d68bf5,add auth check exclusion for console-config.js added in #7414 (#7442),2019-04-11T04:44:26Z
2771ed50b0f07b0ee519da72ed9f4877466f8be4,"Support Kafka supervisor adopting running tasks between versions  (#7212)

* Recompute hash in isTaskCurrent() and added tests

* Fixed checkstyle stuff

* Fixed failing tests

* Make TestableKafkaSupervisorWithCustomIsTaskCurrent static

* Add doc

* baseSequenceName change

* Added comment

* WIP

* Fixed imports

* Undid lambda change for diff sake

* Cleanup

* Added comment

* Reinsert Kafka tests

* Readded kinesis test

* Readd bad partition assignment in kinesis supervisor test

* Nit

* Misnamed var",2019-04-11T01:16:38Z
2f64414ade164576e0ca60dfbd7ba43262d9c373,"Add ""REVERSE"" / ""REPEAT"" / ""RIGHT"" / ""LEFT"" functions (#7334)

* Add ""REVERSE"" / ""REPEAT"" / ""RIGHT"" / ""LEFT"" functions

* Fix ImportOrder

* Use RuntimeException instead of OutOfMemoryError according to ""Effective Java""

* Simplify

* Patch suggestions",2019-04-10T03:46:29Z
89bb43f382643e7bad05681956c6a08778cf0165,"'core' ORC extension (#7138)

* orc extension reworked to use apache orc map-reduce lib, moved to core extensions, support for flattenSpec, tests, docs

* change binary handling to be compatible with avro and parquet, Rows.objectToStrings now converts byte[] to base64, change date handling

* better docs and tests

* fix it

* formatting

* doc fix

* fix it

* exclude redundant dependencies

* use latest orc-mapreduce, add hadoop jobProperties recommendations to docs

* doc fix

* review stuff and fix binaryAsString

* cache for root level fields

* more better",2019-04-09T16:03:26Z
09abc4a856e703c496c2c9fdb50f311db6a15626,Fix comments in KinesisIndexTaskIOConfig (#7430),2019-04-09T15:40:08Z
e87d6e32b3b3f56441a6bdef4974e9c24ffcbf47,Support kinesis compatibility (#7351),2019-04-09T02:19:34Z
7cd54776580d42f9f38596ec54e5561d8ce0adfe,DoublesSketchComplexMetricSerde: Handle empty strings. (#7429),2019-04-09T01:01:31Z
98ee8637e6b07c3b9dc213f7c4af596035c85b9a,"Console SQL function doc generation (#7406)

* Change sql function doc generation script from Bash to Node.js

* Minor code change for better reading

* Disable tslint in file

* clean up code

* Use es6 multiline string

* Solved a bug which would generate invalid TS variable if no function sections are found; in this case an empty array should be created

* Edit build script",2019-04-09T00:38:26Z
c69c37e99d3b6dbee27e221376921b583adf48e7,"Update console packages and enforce tslint quotes (#7419)

* update packages and enforce tslint quotes

* remove direct dep on tslint-react",2019-04-08T03:19:08Z
799c66d9ac74019e6da64f4cd31118b9ad12b38e,"Allow max rows and max segments for time-ordered scans to be overridden using the scan query JSON spec (#7413)

* Initial changes

* Fixed NPEs

* Fixed failing spec test

* Fixed failing Calcite test

* Move configs to context

* Validated and added docs

* fixed weird indentation

* Update default context vals in doc

* Fixed allowable values",2019-04-08T03:12:52Z
7778f29781cb5a4d96e09e2f0bd67570ffc7f38a,add travis check to make sure -Pdist works (#7418),2019-04-08T03:12:23Z
e28a15f9f579ad7b03b0e6520c626109a3ddf9c5,"fix expressions docs operator table (#7420)

* fix expressions docs operator table

* Update math-expr.md",2019-04-08T03:12:00Z
e23fd41fa7ac64b49e0301492e4962bbdc7be93d,Update SQL doc for planning change (#7415),2019-04-05T22:14:07Z
76b4a5c62e47775715fb619bd4f19da5db1b5b6a,"refactor lookups to be more chill to router (#7222)

* refactor lookups to be more chill to router

* remove accidental change

* fix and combine LookupIntrospectionResourceTest

* fix inspection

* rename RouterLookupModule to LookupSerdeModule and RouterLookupExtractorFactoryContainerProvider to NoopLookupExtractorFactoryContainerProvider

* make comment generic

* use ConfigResourceFilter instead of StateResourceFilter

* fix indentation

* unused import

* another unused import

* refactor some stuff into processing module, split up LookupModule.java classes into their own files",2019-04-05T21:49:41Z
a66291a9cd6cda06cc5f9d29b33e82eb08c49c94,"SQL explain in web console (#7402)

* Add explain for SQL query

* Terminate explain query manager

* Add signature for semi-joined queries

* Extract components out

* Hide more button in rune mode

* Add types for query explanation parser

* Add type for query-plan-dialog",2019-04-05T19:44:51Z
0fa122ecf21211921162be0c0c3b67a210f6c0f2,"Adding ability to pass configs in and fixing misc bugs (#7414)

* Adding ability to pass configs in and fixing misc bugs

* update lock file

* remove dead version param",2019-04-05T19:40:43Z
e2aa6e47f8b30e40d0a98538ddf92b71d7f42793,change Dockerfile maintainers email to dev mailing list (#7417),2019-04-05T02:34:48Z
78745fea84511cebd270c128316e5f8729c329b8,"Fix two issues with Coordinator -> Overlord communication. (#7412)

* Fix two issues with Coordinator -> Overlord communication.

1) ClientCompactQuery needs to recognize the potential for 'intervals'
to be set instead of 'segments'. The lack of this led to a
NullPointerException on DruidCoordinatorSegmentCompactor.java:102.

2) In two locations (DruidCoordinatorSegmentCompactor,
DruidCoordinatorCleanupPendingSegments) tasks were being retrieved
using waiting/pending/running tasks in the wrong order: by checking
'running' first and then 'pending', tasks could be missed if they
moved from 'pending' to 'running' in between the two calls. Replaced
these methods with calls to 'getActiveTasks', a new method that does
the calls in the right order.

* Remove unused import.",2019-04-04T17:25:18Z
d29a32062f4955226e37ca3fe62bdabc553c0590,upgrade to RoaringBitmap 0.8.0 and serialise directly to ByteBuffer (#7408),2019-04-04T17:22:50Z
0f6cb1e7e032081a569bbcf0c89220f0e6b53472,Update theta/hll sketch doc comparison (#7407),2019-04-03T22:21:33Z
8c104a115c4e08b2df60d940d6d85a7e79bef752,SQL: Add STRING_FORMAT function. (#7327),2019-04-03T21:09:54Z
28b4e8586d57dce838ff9803522d92e88b2b2da6,"use latest sketches-core-0.13.1 (#7320)

* use latest sketches-core-0.13.0

* latest release",2019-04-03T21:06:02Z
6b741f080091034b56ff9e04ea60a847ceff9f3d,"Overwrite index task maxTotalRows with computed maxRowsPerSegments (#7338)

fixed identation

set maxTotalRows to higher value in case mutiple segments in appendrator
with comments",2019-04-03T18:47:59Z
c883c52cb1204b17e642fc42e35a76bc8e9e9b7e,Fix tests (#7401),2019-04-02T23:49:21Z
4584b5e13903c3ffb76865690231d882f70a6c4b,"SQL support for time-ordered scan (#7373)

* Squashed commit of the following:

commit 287a367f4170e7d0b3010d57788ea993688b9335
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Mar 27 20:03:41 2019 -0700

    Implemented Clint's recommendations

commit 07503ea5c00892bf904c0e16e7062fadabcb7830
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Mar 27 17:49:09 2019 -0700

    doc fix

commit 231a72e7d9c0f4bb2b3272134cf53fc8db8f0e73
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Mar 27 17:38:20 2019 -0700

    Modified sequence limit to accept longs and added test for long limits

commit 1df50de32137961d949c1aaa4e4791f6edfb3d77
Merge: 480e932fd c7fea6ac8
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 26 15:23:01 2019 -0700

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-N-Way-Merge

commit 480e932fdf02ef85ba81181deb865d9977dfed24
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 26 14:58:04 2019 -0700

    Checkstyle and doc update

commit 487f31fcf63a5e1fa9e802212b62206aec47fe25
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 26 14:39:25 2019 -0700

    Refixed regression

commit fb858efbb75218bb80b8c77effb2456554aa57b2
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 26 13:14:48 2019 -0700

    Added test for n-way merge

commit 376e8bf90610d43d2c7b278bf64525cab80267c5
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 26 11:42:54 2019 -0700

    Refactor n-way merge

commit 8a6bb1127c1814470424da2e9d6bfdd55e726199
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 17:17:41 2019 -0700

    Fix docs and flipped boolean in ScanQueryLimitRowIterator

commit 35692680fc7aba21c498a92307ef082a581cb23a
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 16:15:49 2019 -0700

    Fix bug messing up count of rows

commit 219af478c8ec243700973e616c5be556a83422e2
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 15:57:55 2019 -0700

    Fix bug in numRowsScanned

commit da4fc664031debae1dc3b4a0190125e979564aac
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 15:19:45 2019 -0700

    Check type of segment spec before using for time ordering

commit b822fc73dfba7f69c7e960bb95b31cab8d27ef25
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 13:19:02 2019 -0700

    Revert ""Merge branch '6088-Time-Ordering-On-Scans-N-Way-Merge' of github.com:justinborromeo/incubator-druid into 6088-Time-Ordering-On-Scans-N-Way-Merge""

    This reverts commit 57033f36df6e3ef887e5f0399ad74bb091306de8, reversing
    changes made to 8f01d8dd16f40d10c60519ca0ec0d2e6b2dde941.

commit 57033f36df6e3ef887e5f0399ad74bb091306de8
Merge: 8f01d8dd1 86d9730fc
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 13:13:52 2019 -0700

    Merge branch '6088-Time-Ordering-On-Scans-N-Way-Merge' of github.com:justinborromeo/incubator-druid into 6088-Time-Ordering-On-Scans-N-Way-Merge

commit 8f01d8dd16f40d10c60519ca0ec0d2e6b2dde941
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 13:13:32 2019 -0700

    Revert ""Fixed failing tests -> allow usage of all types of segment spec""

    This reverts commit ec470288c7b725f5310bcf69d1db9f85ff509c8d.

commit ec470288c7b725f5310bcf69d1db9f85ff509c8d
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 11:01:35 2019 -0700

    Fixed failing tests -> allow usage of all types of segment spec

commit 86d9730fc9f241b3010b123a45b1fc38a206a9af
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 25 11:01:35 2019 -0700

    Fixed failing tests -> allow usage of all types of segment spec

commit 8b3b6b51ed0d3bc3c937620d5b92096998e32080
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 22 16:01:56 2019 -0700

    Nit comment

commit a87d02127c72aa5e307af94b12b6be25150349be
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 22 15:54:42 2019 -0700

    Fix checkstyle and test

commit 62dcedacdeeed570134e8b5185633b207e91a547
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 22 15:30:41 2019 -0700

    More comments

commit 1b46b58aeccf13adc516a1d94054a98efc32184c
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 22 15:19:52 2019 -0700

    Added a bit of docs

commit 49472162b7fc0879159866c3736e192fc88837a4
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 22 10:27:41 2019 -0700

    Rename segment limit -> segment partitions limit

commit 43d490cc3ae697d0a61159ed6ae06906006cdf31
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Mar 21 13:16:58 2019 -0700

    Optimized n-way merge strategy

commit 42f5246b8d0c1879c2dc45334966bf52f543ea74
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Mar 20 17:40:19 2019 -0700

    Smarter limiting for pQueue method

commit 4823dab895770a87356fe2ae4e9858bb4ba03fc3
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Mar 20 16:05:53 2019 -0700

    Finish rename

commit 2528a5614267c48714abdb30fd7a2ccdb61b802d
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 18 14:00:50 2019 -0700

    Renaming

commit 7bfa77d3c177be42d0db0b0bc3c19f9ef536ffeb
Merge: a032c46ee 7e49d4739
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 12 16:57:45 2019 -0700

    Merge branch 'Update-Query-Interrupted-Exception' into 6088-Time-Ordering-On-Scans-N-Way-Merge

commit 7e49d47391d17b411b0620794e503592d8f37481
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 12 16:51:25 2019 -0700

    Added error message for UOE

commit a032c46ee09cd80b78f25d0da51f5179774aa75f
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 12 16:47:17 2019 -0700

    Updated error message

commit 57b568265488066c046f225c1982dba85e8a64ba
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 12 12:44:02 2019 -0700

    Fixed tests

commit 45e95bb1f40d50ab3a0a745d2b5fca34c3f53a82
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Mar 12 11:09:08 2019 -0700

    Optimization

commit cce917ab846198706ec8177a91869f9aa43e0525
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 8 14:11:07 2019 -0800

    Checkstyle fix

commit 73f4038068f2e30cb3487cc175730f3b97c5c8d2
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Mar 7 18:40:00 2019 -0800

    Applied Jon's recommended changes

commit fb966def8335e6808f0fe5d2d6a122dcd28f2355
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Mar 7 11:03:01 2019 -0800

    Sorry, checkstyle

commit 6dc53b311c568e29a6937fdd5f17a5623d14533f
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Mar 6 10:34:13 2019 -0800

    Improved test and appeased TeamCity

commit 35c96d355726cf5d238435655fecbfe19ea8ddb6
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 4 16:00:44 2019 -0800

    Checkstyle fix

commit 2d1978d5713187561a534c08eba51e383df66ce7
Merge: 83ec3fe1f 3398d3982
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Mar 4 15:24:49 2019 -0800

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-N-Way-Merge

commit 83ec3fe1f13c384aca52ceef0ba03b300b03d8d9
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 1 13:40:22 2019 -0800

    Nit-change on javadoc

commit 47c970b5f476e5bfe5e03aa798f314f59aeb67db
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Mar 1 13:38:29 2019 -0800

    Wrote tests and added Javadoc

commit 5ff59f5ca6c8058c04e500662b3691a4910aa842
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 28 15:58:20 2019 -0800

    Reset config

commit 806166f9777cccae5e10eabbb256c5e33b0e13f7
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 28 15:49:07 2019 -0800

    Fixed failing tests

commit de83b11a1bb24a0ae964240d9cb1ed17ea4a6c26
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 26 16:40:48 2019 -0800

    Fixed mistakes in merge

commit 5bd0e1a32cec1a0e4dadd74dd530d13341ab7349
Merge: 18cce9a64 9fa649b3b
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 26 16:39:16 2019 -0800

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-N-Way-Merge

commit 18cce9a646139a57004ef4eccef8077c9775e992
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 26 13:16:44 2019 -0800

    Change so batching only occurs on broker for time-ordered scans

    Restricted batching to broker for time-ordered queries and adjusted
    tests

    Formatting

    Cleanup

commit 451e2b43652020d6acb8b8db113fb34db0f50517
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 26 11:14:27 2019 -0800

    WIP

commit 69b24bd851d721592324bcbeec1c4229ad9ff462
Merge: 763c43df7 417b9f2fe
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 22 18:13:26 2019 -0800

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-N-Way-Merge

commit 763c43df7e99d4ab000f038a7c1b9ef98b479138
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 22 18:07:06 2019 -0800

    Multi-historical setup works

commit 06a5218917bca0716b98c32c07415a7271711431
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 22 16:59:57 2019 -0800

    Wrote docs

commit 3b923dac9cc82475795ee2f7691e6f96249560aa
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 22 14:03:22 2019 -0800

    Fixed bug introduced by replacing deque with list

commit 023538d83117086647c69d5030f2e8cb3e039558
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 22 13:30:08 2019 -0800

    Sequence stuff is so dirty :(

commit e1fc2955d361676eb6721ad31defd96d47fab999
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 22 10:39:59 2019 -0800

    WIP

commit f57ff253fa659cbb5aa09b7c9bf03d8e7670b865
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 21 18:22:06 2019 -0800

    Ordering is correct on n-way merge -> still need to batch events into
    ScanResultValues

commit 1813a5472c791509ba903f734b40b6102079876a
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 21 17:06:18 2019 -0800

    Cleanup

commit f83e99655d11247f44018e0e5d36bd6eac1fb2a6
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 21 16:56:36 2019 -0800

    Refactor and pQueue works

commit b13ff624a92a7e740eb1f74aa40c7a72165b9708
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 21 15:13:33 2019 -0800

    Set up time ordering strategy decision tree

commit fba6b022f0395cc297e3b3726f817c986f97010b
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 21 15:08:27 2019 -0800

    Added config and get # of segments

commit c9142e721c7ed824a54de7a160230cd959bb906d
Merge: cd489a020 554b0142c
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 20 10:12:50 2019 -0800

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-V2

commit cd489a0208b0cfc475a34440caa1c1e99d22a281
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 20 00:16:48 2019 -0800

    Fixed failing test due to null resultFormat

commit 7baeade8328776244e72a3cb5f2efb59111cf58b
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 19 17:52:06 2019 -0800

    Changes based on Gian's comments

commit 35150fe1a63c5143f564c4435461929e619a0de2
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 15 15:57:53 2019 -0800

    Small changes

commit 4e69276d57de4a9042b927efa5a864411aedacb4
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 11 12:09:54 2019 -0800

    Removed unused import to satisfy PMD check

commit ecb0f483a9525ffc2844cb01a0daafe6bc4d2161
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 11 10:37:11 2019 -0800

    improved doc

commit f0eddee66598095a767a1570516c5af59e58e2f6
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 11 10:18:45 2019 -0800

    Added more javadoc

commit 5f92dd7325aeff0b2e3f87003263e083ba2b427d
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 11 10:05:58 2019 -0800

    Unused import

commit 93e1636287f45d38c80f275e4644c0b3222c65e7
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 11 10:03:14 2019 -0800

    Added javadoc on ScanResultValueTimestampComparator

commit 134041c47965a8a199862ca33ef2119e29f67287
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 8 13:13:54 2019 -0800

    Renamed sort function

commit 2e3577cd3d7b43e140d36aad944536f49287fbfa
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 7 13:01:25 2019 -0800

    Fixed benchmark queries

commit d3b335af42602a771063bd8a63c89acf5c715938
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 7 11:08:07 2019 -0800

    added all query types to scan benchmark

commit ab00eade9f0b8e8642da40905214653c04cba4d4
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Thu Feb 7 09:42:48 2019 -0800

    Kicking travis with change to benchmark param

commit b432beaf84de5b363454fd8058ff653a097c713d
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 17:45:59 2019 -0800

    Fixed failing calcite tests

commit b2c8c77ad4ee5a9a273ee7a7870fb2d9b0ec9dd4
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 17:39:48 2019 -0800

    Fixing tests WIP

commit 85e72a614ef49736d1142ce82d26b533b609c911
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 15:42:02 2019 -0800

    Set to spaces over tabs

commit 7e872a8ebcea0d3a141addd122dd9f8b6629ead6
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 15:36:24 2019 -0800

    Created an error message for when someone tries to time order a result
    set > threshold limit

commit e8a4b490443b1efe6c70f964b1757bf17a64e9f6
Merge: 305876a43 8e3a58f72
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 15:05:11 2019 -0800

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-V2

commit 305876a4346c292296db623c1fcea688a29c0bb8
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 15:02:02 2019 -0800

    nit

commit 8212a21cafc2ed4002607362f0661f4b5f6bef9d
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 14:40:35 2019 -0800

    Improved conciseness

commit 10b5e0ca93a529d1b0e018c11fafc9c63071b8cd
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 13:42:12 2019 -0800

    .

commit dfe4aa9681d04b8a31dcc1486e0447f29f6eb7bd
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 13:41:18 2019 -0800

    Fixed codestyle and forbidden API errors

commit 148939e88bfff021356bb532e4246e4c8e8ac333
Merge: 4f51024b3 5edbe2ae1
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 13:26:17 2019 -0800

    Merge branch '6088-Create-Scan-Benchmark' into 6088-Time-Ordering-On-Scans-V2

commit 5edbe2ae12648b527e3e97b516127bf4b65196a3
Merge: 60b7684db 315ccb76b
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 13:18:55 2019 -0800

    Merge github.com:apache/incubator-druid into 6088-Create-Scan-Benchmark

commit 60b7684db725387b4d843385d9c61d50f2ed6744
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 13:02:13 2019 -0800

    Committing a param change to kick teamcity

commit 4f51024b318bf744eddb9d2f9638f7590872cf14
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 12:08:12 2019 -0800

    Wrote more tests for scan result value sort

commit 8b7d5f50818b00730965a55b1bf8ed27860bd6a4
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Wed Feb 6 11:55:09 2019 -0800

    Wrote tests for heapsort scan result values and fixed bug where iterator
    wasn't returning elements in correct order

commit b6d4df3864e3910fa406dcc83f6644f45f496c5f
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 5 16:45:20 2019 -0800

    Decrease segment size for less memory usage

commit d1a1793f36d4c9c910f84318f2bbbd355533c977
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 5 12:40:26 2019 -0800

    nit

commit 7deb06f6df47c55469a77a92622509ce88150ad5
Merge: b7d3a4900 86c5eee13
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 5 10:53:38 2019 -0800

    Merge branch '6088-Create-Scan-Benchmark' into 6088-Time-Ordering-On-Scans-V2

commit 86c5eee13b6ce18b33c723cd0c4e464eaf41f010
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 5 10:31:27 2019 -0800

    Broke some long lines into two lines

commit b7d3a4900afb2b56b5e2667c2d37fa4872c67219
Merge: 796083f2b 8bc5eaa90
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 5 10:23:32 2019 -0800

    Merge branch 'master' into 6088-Time-Ordering-On-Scans-V2

commit 737a83321d74cd0b1f7b4ca800509c36056d08ff
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Tue Feb 5 10:15:32 2019 -0800

    Made Jon's changes and removed TODOs

commit 796083f2bb188421f68858111bb39c988cb2f71c
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 15:37:42 2019 -0800

    Benchmark param change

commit 20c36644dbbf46df1a9209a635e661c01aeec627
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 15:36:35 2019 -0800

    More param changes

commit 9e6e71616bdcd9a7eea56e4bc1ef869c08bcf83c
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 15:31:21 2019 -0800

    Changed benchmark params

commit 01b25ed11293f472dac78d4f793f2941c3b22a18
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 14:36:18 2019 -0800

    Added time ordering to the scan benchmark

commit 432acaf08575c451ea02e8ec8d6318678dcf20cb
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 12:03:14 2019 -0800

    Change number of benchmark iterations

commit 12e51a272124c7a75628fe5b2f65ddc00e34ba27
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 12:02:13 2019 -0800

    Added TimestampComparator tests

commit e66339cd76cdb7f08a291e8488e3415518f3df63
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 10:56:41 2019 -0800

    Remove todos

commit ad731a362b465e9b4ca0c9ad7050fc6555606d52
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 10:55:56 2019 -0800

    Change benchmark

commit 989bd2d50e2419a715426b8fe903398d20429ff5
Merge: 7b5847139 26930f8d2
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Mon Feb 4 10:46:38 2019 -0800

    Merge branch '6088-Create-Scan-Benchmark' into 6088-Time-Ordering-On-Scans-V2

commit 7b584713946b538d15da591e306ca4c0a7a378e3
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Sat Feb 2 03:48:18 2019 -0800

    Licensing stuff

commit 79e8319383eddbb49ecb4c1785dcd3eed14a0634
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 1 18:22:58 2019 -0800

    Move ScanResultValue timestamp comparator to a separate class for testing

commit 7a6080f636ab2ead5ff85a29ea6b9cc04d93b353
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 1 18:00:58 2019 -0800

    Stuff for time-ordered scan query

commit 26930f8d2021d1d62322c54e0ec35e260137ab1d
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 1 16:38:49 2019 -0800

    It runs.

commit dd4ec1ac9c1194144e3ec98b811adc59598c8d8c
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 1 15:12:17 2019 -0800

    Need to form queries

commit dba6e492a067b9bb4f77f3db4b19c340f85ef54f
Merge: 10e57d5f9 7d4cc2873
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 1 14:13:39 2019 -0800

    Merge branch 'master' into 6088-Create-Scan-Benchmark

commit 10e57d5f9ed003e032c82240045125002903a5bb
Author: Justin Borromeo <jborrome@edu.uwaterloo.ca>
Date:   Fri Feb 1 14:04:13 2019 -0800

    Moved Scan Builder to Druids class and started on Scan Benchmark setup

* Changed SQL planning to use scan over select

* Fixed some bugs

* Removed unused imports

* Updated calcite query test and test segment walker

* Fixed formatting recommendations",2019-04-02T22:46:01Z
a99f0ff450a04ac049020f86994967e8cfdcc62b,"prefix no-op aggs with ""Noop"" (#6960)",2019-04-02T22:05:07Z
4e23c11345de694c997881d72ca6c668b3fb795b,"Make IngestSegmentFirehoseFactory splittable for parallel ingestion (#7048)

* Make IngestSegmentFirehoseFactory splittable for parallel ingestion

* Code review feedback

- Get rid of WindowedSegment
- Don't document 'segments' parameter or support splitting firehoses that use it
- Require 'intervals' in WindowedSegmentId (since it won't be written by hand)

* Add missing @JsonProperty

* Integration test passes

* Add unit test

* Remove two FIXME comments from CompactionTask

I'd like to leave this PR in a potentially mergeable state, but I still would
appreciate reviewer eyes on the questions I'm removing here.

* Updates from code review",2019-04-02T21:59:17Z
78fd5aff21f692f583955a281e841b1e8fd6925f,"support radians and degrees in sql (#7336)

* support radians and degrees in sql

* update test case",2019-04-02T19:47:49Z
134f71d1b491ff362fc17691cf0d0b7dbb3efeea,"Add documentation for Druid native query in SQL view of web console (#7381)

* Add docmentation for Druid native query in SQL view of web console

* Edit sentence",2019-04-02T19:20:51Z
d2ff3eb1999fc560c98ba4ea5014583d9cf827a9,"Migrate the web console back to Blueprint v3 (#7398)

* migrate back to Blueprint v3

* rename filler file

* fix missing icon",2019-04-02T06:06:48Z
1137bb2586387b0d150b25c6a7b7a7939307756b,Popovers are no longer inline (#7389),2019-04-01T20:10:48Z
2bf6fc353a48bf601f312d61fd2753ae6a7e236a,Update scan benchmark for time ordering (#7385),2019-03-30T18:36:25Z
2ad9544242b71e9f243d6021bb12cca21af8e8e3,Support segment metadata in rune (#7371),2019-03-29T22:46:09Z
347779b17a5b0156c4634a06c2cba261019c9760,"Zookeeper loss (#6740)

* Update init

Fix bin/init to source from proper directory.

* Fix for Proposal #6518: Shutdown druid processes upon complete loss of ZK connectivity

* Zookeeper Loss:

- Add feature documentation
- Cosmetic refactors
- Variable extractions
- Remove getter

* - Change config key name and reword documentation
- Switch from Function<Void,Void> to Runnable/Lambda
- try { … } finally { … }

* Fix line length too long

* - change to formatted string for logging
- use System.err.println after lifecycle stops

* commenting on makeEnsembleProvider()-created Zookeeper termination

* Add javadoc

* added java doc reference back to apache discussion thread.

* move comment to other class

* favor two-slash comments instead of multiline comments",2019-03-29T22:10:42Z
62c3e89266037da2814fb3504f1c22b34064ade1,"maxTotalRows should be checked in DataSourceCompactionConfig before setting targetCompactionSizeBytes (#7368)

* maxTotalRows should be checked in DataSourceCompactionConfig before setting targetCompactionSizeBytes

* remove unnecessary default values

* remove flacky test

* fix build

* Add comments",2019-03-29T03:25:10Z
a09aa13ead33f54a481ce46607fc56a8434788a0,"Put all local storage keys and functions into one file in util (#7314)

* Add all local storage keys and functions into one file in util

* Use LocalStorageKey type instead of string

* Remove druid author key",2019-03-29T00:48:37Z
be1d7f885bf8ae9cc85d6fbd40a02f8a0a678816,"Add scss linter in web console (#7365)

* Add SCSS linter

* Fixed SCSS styles",2019-03-29T00:32:01Z
ad7862c58ac7f05cb28108543c017e2b186d1031,"Time Ordering On Scans (#7133)

* Moved Scan Builder to Druids class and started on Scan Benchmark setup

* Need to form queries

* It runs.

* Stuff for time-ordered scan query

* Move ScanResultValue timestamp comparator to a separate class for testing

* Licensing stuff

* Change benchmark

* Remove todos

* Added TimestampComparator tests

* Change number of benchmark iterations

* Added time ordering to the scan benchmark

* Changed benchmark params

* More param changes

* Benchmark param change

* Made Jon's changes and removed TODOs

* Broke some long lines into two lines

* nit

* Decrease segment size for less memory usage

* Wrote tests for heapsort scan result values and fixed bug where iterator
wasn't returning elements in correct order

* Wrote more tests for scan result value sort

* Committing a param change to kick teamcity

* Fixed codestyle and forbidden API errors

* .

* Improved conciseness

* nit

* Created an error message for when someone tries to time order a result
set > threshold limit

* Set to spaces over tabs

* Fixing tests WIP

* Fixed failing calcite tests

* Kicking travis with change to benchmark param

* added all query types to scan benchmark

* Fixed benchmark queries

* Renamed sort function

* Added javadoc on ScanResultValueTimestampComparator

* Unused import

* Added more javadoc

* improved doc

* Removed unused import to satisfy PMD check

* Small changes

* Changes based on Gian's comments

* Fixed failing test due to null resultFormat

* Added config and get # of segments

* Set up time ordering strategy decision tree

* Refactor and pQueue works

* Cleanup

* Ordering is correct on n-way merge -> still need to batch events into
ScanResultValues

* WIP

* Sequence stuff is so dirty :(

* Fixed bug introduced by replacing deque with list

* Wrote docs

* Multi-historical setup works

* WIP

* Change so batching only occurs on broker for time-ordered scans

Restricted batching to broker for time-ordered queries and adjusted
tests

Formatting

Cleanup

* Fixed mistakes in merge

* Fixed failing tests

* Reset config

* Wrote tests and added Javadoc

* Nit-change on javadoc

* Checkstyle fix

* Improved test and appeased TeamCity

* Sorry, checkstyle

* Applied Jon's recommended changes

* Checkstyle fix

* Optimization

* Fixed tests

* Updated error message

* Added error message for UOE

* Renaming

* Finish rename

* Smarter limiting for pQueue method

* Optimized n-way merge strategy

* Rename segment limit -> segment partitions limit

* Added a bit of docs

* More comments

* Fix checkstyle and test

* Nit comment

* Fixed failing tests -> allow usage of all types of segment spec

* Fixed failing tests -> allow usage of all types of segment spec

* Revert ""Fixed failing tests -> allow usage of all types of segment spec""

This reverts commit ec470288c7b725f5310bcf69d1db9f85ff509c8d.

* Revert ""Merge branch '6088-Time-Ordering-On-Scans-N-Way-Merge' of github.com:justinborromeo/incubator-druid into 6088-Time-Ordering-On-Scans-N-Way-Merge""

This reverts commit 57033f36df6e3ef887e5f0399ad74bb091306de8, reversing
changes made to 8f01d8dd16f40d10c60519ca0ec0d2e6b2dde941.

* Check type of segment spec before using for time ordering

* Fix bug in numRowsScanned

* Fix bug messing up count of rows

* Fix docs and flipped boolean in ScanQueryLimitRowIterator

* Refactor n-way merge

* Added test for n-way merge

* Refixed regression

* Checkstyle and doc update

* Modified sequence limit to accept longs and added test for long limits

* doc fix

* Implemented Clint's recommendations",2019-03-28T21:37:09Z
ffa95859c204d6ec605c114a70c5004841506968,"Remove [PROPOSAL] from Proposal issue template; Add 'Other' template for convenience (#7364)

* Remove [PROPOSAL] from Proposal issue template; Add 'Regular' template for convenience

* Regular -> Other",2019-03-28T10:40:43Z
be318f4de3eb035215112ab468d4955dc0db292c,"Add column type to sys table docs (#7359)

* Add column type

* oops should be used=1",2019-03-28T03:21:57Z
db0125b70996c15143d46861d812c291d4b795b7,this will fix it (#7358),2019-03-28T02:42:58Z
18e51672452b5229e17a10e9c83d896bfd86e0f3,"Add history dialog in snitch dialog to allow viewing the editing history (#7321)

* Add history dialog in snitch dialog to allow viewing the editing history

* Improved CSS; better animation

* Use position: absolute instead of float: right to position element

* Removed author for history changes",2019-03-28T00:52:44Z
eeb3dbe79d442dd805ef4483c9c417e1f9cc11a5,"Move GCP to a core extension (#6953)

* Move GCP to a core extension

* Don't provide druid-core >.<

* Keep AWS and GCP modules separate

* Move AWSModule to its own module

* Add aws ec2 extension and more modules in more places

* Fix bad imports

* Fix test jackson module

* Include AWS and GCP core in server

* Add simple empty method comment

* Update version to 15

* One more 0.13.0-->0.15.0 change

* Fix multi-binding problem

* Grep for s3-extensions and update docs

* Update extensions.md",2019-03-27T16:00:43Z
543324f8a92d6956574aa4da2edb7b3c429a6eda,Fix logging in IndexerSQLMetadataStorageCoordinator (#7349),2019-03-27T03:36:19Z
4d37edac1e73f42eb70e9e066b8d4df2d89ec6f0,Suppress stack trace in warning (#7348),2019-03-27T00:27:29Z
b9354fbddb7cf0e7d225c78a850e59ee27cccf8c,"Make 'field can be final' inspection a warning in IntelliJ config (#7301)

A small step towards #7227.",2019-03-26T23:45:03Z
c7fea6ac8f92f974c1738a3594cb45887b4bba0a,"Added better QueryInterruptedException error message for UnsupportedOperationException (#7248)

* Added error message for UOE

* Updated docs

* Doc change

* Doc change",2019-03-26T22:20:24Z
5294277cb4a382ae77baec2111d9383f0b34bed3,"Fix exclusive start partitions for sequenceMetadata (#7339)

* Fix exclusvie start partitions for sequenceMetadata

* add empty check",2019-03-26T21:39:07Z
105b4fa2379a1f83dab4755d563f11c547c2893e,Fixing a typo in logger initialization (#7341),2019-03-26T16:38:28Z
bca40dcdaf3177b95d01187f413e1c0c6865964b,"Fix some IntelliJ inspections (#7273)

Prepare TeamCity for IntelliJ 2018.3.1 upgrade. Mostly removed redundant exceptions declarations in `throws` clauses.",2019-03-26T00:11:01Z
8ca7cb4886dcaeeaaea3a06aceb9e6d50eeecab5,Fix rat check for source assembly after build (#7333),2019-03-23T05:48:35Z
f410c28af68f258bac9d7fd33899a21e7ddf4605,Always convert start metadata to start (#7332),2019-03-23T04:12:15Z
4ca5fe0f60ea90e63c07d5f2e7cc30c5187878d1,"SQL: Add PARSE_LONG function. (#7326)

* SQL: Add PARSE_LONG function.

* Fix test.",2019-03-22T22:40:10Z
01c021e6da6e7abf5035863daa554b89a6df4904,"Add Kafka integration test for transactional topics (#7295)

* Add integration test for transactional kafka

* Add true for transactions enabled for transactional test

* Add new test to travis_script_integration.sh, use version 0.2 of druid docker image

* Use different datasource name for ITKafkaIndexingServiceTest and ITKafkaIndexingServiceTransactionalTest

* use KafkaConsumerConfigs to get common consumer properties

* Remove double line breaks

* remove extra space",2019-03-22T20:39:05Z
7a57bc0dc3f96ebb8d1bdbe0f0d4bab8ce811794,Exclude git.version from rat check (#7322),2019-03-22T03:54:27Z
375668ef454e53b1e9df0a245ea1f6e92a447298,"fix Supervisor terminate call (#7315)

* fix Supervisor terminate call

* fix refresh after submitting supervisor or task",2019-03-21T20:54:43Z
a4270da5f3de25f1182cfdf2ac0d9de7781312cf,"More TeamCity and Structural Search inspection instructions (#7275)

* More TeamCity and Structural Search inspection instructions

* the -> a

* an e-mail",2019-03-21T20:24:21Z
0c5dcf5586e33607849e397209f3eb0b10661f1e,"Fix exclusivity for start offset in kinesis indexing service & check exclusivity properly in IndexerSQLMetadataStorageCoordinator (#7291)

* Fix exclusivity for start offset in kinesis indexing service

* some adjustment

* Fix SeekableStreamDataSourceMetadata

* Add missing javadocs

* Add missing comments and unit test

* fix SeekableStreamStartSequenceNumbers.plus and add comments

* remove extra exclusivePartitions in KafkaIOConfig and fix downgrade issue

* Add javadocs

* fix compilation

* fix test

* remove unused variable",2019-03-21T20:12:22Z
e17020387601cdebb7db6a0a8a3c3052aaf66064,"Consolidate kafka consumer configs (#7249)

* Consolidate kafka consumer configs

* change the order of adding properties

* Add consumer properties to fix test

it seems kafka consumer does not reveive any message without these configs

* Use KafkaConsumerConfigs in integration test

* Update zookeeper and kafka versions in the setup.sh for the base druid image

*  use version 0.2 of base druid image

* Try to fix tests in KafkaRecordSupplierTest

* unused import

* Fix tests in KafkaSupervisorTest",2019-03-21T18:19:49Z
494c1a2ef84c7538780a6ebdbdc74e18fe668af3,"Add overlord edit dialog to allow user to change overlord dynamic config on the fly (#7308)

* Add overlord edit dialog to allow user to edit overlord dynmamic config on the fly

* Set config to {} if druid return nothing for overlord config",2019-03-21T10:38:35Z
b0271b4f4db6ae031d285918752822ee46319840,"Saving author to local storage in snitch dialog (#7307)

* Saving author to local storage

* Capitalized const",2019-03-21T10:01:10Z
e4f2dcacf25406bde7476d7eef2b1abdb8047e68,"Druid console docs (#7300)

* console docs

* fix typo",2019-03-21T07:37:33Z
30e646308abc9e73e5f2548d95e75feca0a4d7f4,"Add table column selection in druid console to allow hiding/showing of columns (#7292)

* Add table column selections to all tables to allow user to hide/show columns

* Small change for re-rendering

* Use column selection handler class to process all column hiding/showing

* dereference table handler function at the start; use more specific file name for table.tsx",2019-03-20T20:11:00Z
2814729d32be3c486c7e484d4d72c4dfc4c2e557,"Remove mysql database connector from container image (#7296)

* Remove mysql database connector from container image

See discussion on `dev` mailing list from 2019-03
around [docker
build](http://mail-archives.apache.org/mod_mbox/druid-dev/201903.mbox/browser)

Remove the mysql database connector from the container
image in favour of solely the postgresql connector.

Instructions are present in distribution/docker/README.md
for someone to re-add if they need.

Signed-off-by: Don Bowman <don@agilicus.com>

* Add sample Dockerfile for mysql using pre-built upstream",2019-03-20T15:33:28Z
ff94bd16e681e6a90c45536db720768f199c994c,"Fix conflicting information in configuration doc (#7299)

* Doc fix

* Fix typo",2019-03-19T21:55:58Z
dfd27e00c0559e89a77ad8abbae03eeb382c2d09,"Avoid many unnecessary materializations of collections of 'all segments in cluster' cardinality (#7185)

* Avoid many  unnecessary materializations of collections of 'all segments in cluster' cardinality

* Fix DruidCoordinatorTest; Renamed DruidCoordinator.getReplicationStatus() to computeUnderReplicationCountsPerDataSourcePerTier()

* More Javadocs, typos, refactor DruidCoordinatorRuntimeParams.createAvailableSegmentsSet()

* Style

* typo

* Disable StaticPseudoFunctionalStyleMethod inspection because of too much false positives

* Fixes",2019-03-19T21:22:56Z
e58f541047c16fdc868932d239e535aa61c7dfc5,"Small tweak to override Blueprint's CSS rule for lookup edit dialog (#7283)

* Small tweak to override Blueprint's CSS rule

* Follow the same CSS style by using &",2019-03-18T21:24:50Z
b2a940adddafa5d4762450daf7e166b2e9d6b1d7,"Fix flattening Avro Maps with Utf8 keys (#7258)

* #5884 Avro Maps can't be flattened in Kafka Indexing on master

* correct typo and reduce code size",2019-03-18T21:23:53Z
c17f4bbad85449681e6706c5ed0b16d70551355e,Fix 0.14.0 rc1 voting issues (#7284),2019-03-18T21:16:21Z
e18d5d96d991af448ce5f390226609de65d019b5,Ignore bad JSON entries in SQLMetadataSupervisorManager.getAll() (#7278),2019-03-18T06:28:11Z
1f4ad518d8d1798e11f836a71efac02be38eeae6,"Add compaction dialog in druid console which allows users to add/edit data source compaction configuration (#7242)

* Add compaction dialog in druid console which allows users to add/edit data source compaction configuration

* Addressed naming issues; changed json input validating process",2019-03-18T02:21:23Z
b6b1e6160ca38e3140e151f7bf5133e6809ae1be,"Added tslint to web console (#7280)

* added tslint to web console

* added react linting and made rules stricter

* order imports

* update package-lock",2019-03-17T16:23:17Z
1b6b40e5117772988885b8125b34c53a1e9c147a,"Add lookups view to allow adding/editing/deleting of druid lookups (#7259)

* Add lookups view to allow adding/editing/deleting of druid lookups

* Remove unused bp3 class

* Make lookup editor dialog wider",2019-03-16T08:46:43Z
5406aaa49d5a7a7071bb013e5be1d265405cf940,"Add SQL auto complete in druid console (#7244)

* Add SQL auto complete in druid console

* Add comment in sql.md to alert user to change create-sql-function-doc if sql.md format gets changed",2019-03-16T08:45:53Z
892d1d35d6cc00487d583f05f1cc138782180ef9,"Deprecate NoneShardSpec and drop support for automatic segment merge (#6883)

* Deprecate noneShardSpec

* clean up noneShardSpec constructor

* revert unnecessary change

* Deprecate mergeTask

* add more doc

* remove convert from indexMerger

* Remove mergeTask

* remove HadoopDruidConverterConfig

* fix build

* fix build

* fix teamcity

* fix teamcity

* fix ServerModule

* fix compilation

* fix compilation",2019-03-16T06:29:25Z
fdbbf82cda0924b3a0077b073acb9bd45cef7137,"Fixed bugs in retention cell and retention dialog (#7276)

* Fixed a bug when there are so many retention rules that it becomes unclickable; fixed a bug when retention dialog is at bottom and becomes unreachable

* Using class for CSS instead of inline style",2019-03-16T00:30:47Z
a337f6d4ccd6899a7c605cadd9e08585b698e814,Fixed height issue in dynamic config dialog where user cannot scroll (#7268),2019-03-15T22:15:12Z
2daeb500080900c136f82e6cdd497ada5dcc4c0a,"Add support for optional client authentication on TLS (#7250)

* Add optional client auth

* Add docs",2019-03-15T22:14:34Z
a8c7132482358e9d8113632b38e284a84b66c6db,"Logic adjustments to SeekableStreamIndexTaskRunner. (#7267)

* Logic adjustments to SeekableStreamIndexTaskRunner.

A mix of simplifications and bug fixes. They are intermingled because
some of the bugs were made difficult to fix, and also more likely to
happen in the first place, by how the code was structured. I tried to
keep restructuring to a minimum. The changes are:

- Remove ""initialOffsetsSnapshot"", which was used to determine when to
  skip start offsets. Replace it with ""lastReadOffsets"", which I hope
  is more intuitive. (There is a connection: start offsets must be
  skipped if and only if they have already been read, either by a
  previous task or by a previous sequence in the same task, post-restoring.)
- Remove ""isStartingSequenceOffsetsExclusive"", because it should always
  be the opposite of isEndOffsetExclusive. The reason is that starts are
  exclusive exactly when the prior ends are inclusive: they must match
  up in that way for adjacent reads to link up properly.
- Don't call ""seekToStartingSequence"" after the initial seek. There is
  no reason to, since we expect to read continuous message streams
  throughout the task. And calling it makes offset-tracking logic
  trickier, so better to avoid the need for trickiness. I believe the
  call being here was causing a bug in Kinesis ingestion where a
  message might get double-read.
- Remove the ""continue"" calls in the main read loop. They are bad
  because they prevent keeping currOffsets and lastReadOffsets up to
  date, and prevent us from detecting that we have finished reading.
- Rework ""verifyInitialRecordAndSkipExclusivePartition"" into
  ""verifyRecordInRange"". It no longer has side effects. It does a sanity
  check on the message offset and also makes sure that it is not past
  the endOffsets.
- Rework ""assignPartitions"" to replace inline comparisons with
  ""isRecordAlreadyRead"" and ""isMoreToReadBeforeReadingRecord"" calls. I
  believe this fixes an off-by-one error with Kinesis where the last
  record would not get read. It also makes the logic easier to read.
- When doing the final publish, only adjust end offsets of the final
  sequence, rather than potentially adjusting any unpublished sequence.
  Adjusting sequences other than the last one is a mistake since it
  will extend their endOffsets beyond what they actually read. (I'm not
  sure if this was an issue in practice, since I'm not sure if real
  world situations would have more than one unpublished sequence.)
- Rename ""isEndSequenceOffsetsExclusive"" to ""isEndOffsetExclusive"". It's
  shorter and more clear, I think.
- Add equals/hashCode/toString methods to OrderedSequenceNumber.

Kafka test changes:

- Added a Kafka ""testRestoreAtEndOffset"" test to verify that restores at
  the very end of the task lifecycle still work properly.

Kinesis test changes:

- Renamed ""testRunOnNothing"" to ""testRunOnSingletonRange"". I think that
  given Kinesis semantics, the right behavior when start offset equals
  end offset (and there aren't exclusive partitions set) is to read that
  single offset. This is because they are both meant to be treated as
  inclusive.
- Adjusted ""testRestoreAfterPersistingSequences"" to expect one more
  message read. I believe the old test was wrong; it expected the task
  not to read message number 5.
- Adjusted ""testRunContextSequenceAheadOfStartingOffsets"" to use a
  checkpoint starting from 1 rather than 2. I believe the old test was
  wrong here too; it was expecting the task to start reading from the
  checkpointed offset, but it actually should have started reading from
  one past the checkpointed offset.
- Adjusted ""testIncrementalHandOffReadsThroughEndOffsets"" to expect
  11 messages read instead of 12. It's starting at message 0 and reading
  up to 10, which should be 11 messages.

* Changes from code review.",2019-03-15T07:22:43Z
69a6f1154aed5b466a6f76d73b4997c5952e8898,"Fix testIncrementalHandOffReadsThroughEndOffsets in Kafka/KinesisIndexTaskTest (#7264)

* Fix testIncrementalHandOffReadsThroughEndOffsets in Kafka/KinesisIndexTaskTest

* revert unnecessary change

* fix test

* remove debug log",2019-03-15T03:31:08Z
7ada1c49f9735a37808f3ed7656d93ae88b8b925,"Prohibit Throwables.propagate() (#7121)

* Throw caught exception.

* Throw caught exceptions.

* Related checkstyle rule is added to prevent further bugs.

* RuntimeException() is used instead of Throwables.propagate().

* Missing import is added.

* Throwables are propogated if possible.

* Throwables are propogated if possible.

* Throwables are propogated if possible.

* Throwables are propogated if possible.

* * Checkstyle definition is improved.
* Throwables.propagate() usages are removed.

* Checkstyle pattern is changed for only scanning ""Throwables.propagate("" instead of checking lookbehind.

* Throwable is kept before firing a Runtime Exception.

* Fix unused assignments.",2019-03-14T21:28:33Z
e11364883c36603fd9e9bc23a8abaea27ebe085a,allow killing waiting and pending tasks (#7247),2019-03-14T20:17:19Z
74bbe5ab9f6b46607089a7abb86a74c36ed3454b,Improve error message for unavailable auth cache in BasicHTTPAuthenticator (#7263),2019-03-14T06:39:43Z
c020272adda784dd02c8ac1b108a57d6d2045d1c,"Fix KafkaRecordSupplier assign (#7260)

* Fix KafkaRecordSupplier assign

* TeamCity fix",2019-03-14T06:36:14Z
48bc523bdf36201263517cc431340fd4960e6ea3,"Locale problem is fixed which fails tests. (#7120)

* Locale problem is fixed which fails tests.

* Forbidden apis definition is improved to prevent using com.ibm.icu.text.SimpleDateFormat and com.ibm.icu.text.DateFormatSymbols without using any Locale defined.

* Error message is improved.",2019-03-13T21:47:14Z
fb1489d31380106bf4002a1df816fef7dc99c05b,"fix SequenceMetadata deserialization (#7256)

* wip

* fix tests, stop reading if we are at end offset

* fix build

* remove restore at end offsets fix in favor of a separate PR

* use typereference from method for serialization too",2019-03-13T21:29:39Z
f9d99b245b31484c4d49248ad160a2c235610d13,Add missing doc link for operations/http-compression.html; Fix magic numbers in test cases using JettyServerInitUtils.wrapWithDefaultGzipHandler (#7110),2019-03-13T21:09:19Z
98a1b5537f993b050131e0270e80cebc8767d6d8,"Fix time-extraction topN with non-STRING outputType. (#7257)

Similar to other bugs fixed in #6220, but this one was missed. This bug would
cause ""extraction"" dimensionSpecs on the ""__time"" column with non-STRING
outputTypes to potentially be output as STRING sometimes instead of LONG,
causing incompletely merged results.",2019-03-13T20:53:07Z
3895914aa2ad6eb69b547ab2b8ee1206e52d6b4b,consolidate CompressionUtils.java since now in the same jar (#6908),2019-03-13T15:02:44Z
873232954fdba3490bd8c723a6bc157d0e256c1c,Fix log level and throw NPE on null currOffset in SeekableStreamIndexTaskRunner (#7253),2019-03-13T14:20:43Z
32e86ea75ee27b4889d74b24847294d9b868cb6f,"Fix record validation in SeekableStreamIndexTaskRunner (#7246)

* Fix record validation in SeekableStreamIndexTaskRunner

* add kinesis test",2019-03-13T04:12:21Z
4d3987c1ddf1a4089bf02af9d43b3c918ce63560,"lifecycle stage refactor to ensure proper start and stop ordering of servers and announcements (#7234)

* lifecycle stage refactor to ensure proper ordering of servers and announcements

* move DerivativeDataSourceManager to Lifecycle.Stage.NORMAL",2019-03-12T14:09:03Z
e240fba2479ded04dde10f9ee5213ce237edc43a,Fix logs in SegmentLoaderLocalCacheManager (#7229),2019-03-12T04:16:03Z
0df8ee3f7984b08478e665ac1167663c561a8562,"Fix ITRealtimeIndexTaskTest Flakiness (#7232)

* Testing sleep change before posting events

* Added comment",2019-03-12T03:25:24Z
5e7cbe39fa46f923448af3e3f2eead4d2c2c0583,"Exclude non-source files from src assembly (#7235)

* Exclude node_modules from src assembly

* Remove git.version exclusion

* Include binary LICENSE/NOTICE in source assembly",2019-03-12T02:23:10Z
c503ba97799e3531753c5a26ef9c6f06c0e7e13e,"Write null byte when indexing numeric dimensions with Hadoop (#7020)

* write null byte in hadoop indexing for numeric dimensions

* Add test case to check output serializing null numeric dimensions

* Remove extra line

* Add @Nullable annotations",2019-03-12T01:02:03Z
9178793ab5e94da8241f40e275e842c0673fe21a,"Further improve caching documentation. (#7236)

Follow-up to #7223 that fixes a doc bug (a result-level cache property
was misspelled), changes the recommended ""small cluster"" threshold from
20 to 5 servers, and clarifies behavior of the various caching options.",2019-03-12T00:57:00Z
a88fbcd5db5ea3c8283f3b4700cf14a8cfd168c1,"Improve caching doc (#7223)

- Set correct default values for query context result cache parameters
- Add details about broker cache impact on local historical merging",2019-03-12T00:06:28Z
dcfca0371826fd756af0e354c01cc8a81fe24301,"More accurate RealtimeMetricsMonitor messages. (#7230)

The old messages did not reflect the full range of reasons why messages
could be thrown away.",2019-03-11T23:50:32Z
311816038725e22ef98f1a93f73852522d2a693a,"Adding a tutorial in doc for using Kerberized Hadoop as deep storage. (#6863)

* Adding a tutorial in doc for using Kerberized Hadoop as deep storage.

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md

Fixed - to ~ in Apache License section.

* Update tutorial-kerberos-hadoop.md

* Update tutorial-kerberos-hadoop.md",2019-03-11T18:39:15Z
d7ba19d477732578fc310831ed28365b36332752,"sql, filters, and virtual columns  (#6902)

* refactor sql planning to re-use expression virtual columns when possible when constructing a DruidQuery, allowing virtual columns to be defined in filter expressions, and making resulting native druid queries more concise. also minor refactor of built-in sql aggregators to maximize code re-use

* fix it

* fix it in the right place

* fixup for base64 stuff

* fixup tests

* fix merge conflict on import order

* fixup

* fix imports

* fix tests

* review comments

* refactor

* re-arrange

* better javadoc

* fixup merge

* fixup tests

* fix accidental changes",2019-03-11T18:37:58Z
e1d8c17746497a46c864f352823cd86b2216781c,"Add commit ID milestone helper script (#7100)

* Add commit ID milestone helper script

* Filter on merged/closed in API call",2019-03-11T18:36:07Z
4290e5ae7a9be0cfff68bddae0501602c5ed1c73,"Cache selectors in QueryableIndexColumnSelectorFactory. (#7216)

For selectors with internal caches (like SingleScanTimeDimensionSelector,
SingleLongInputCachingExpressionColumnValueSelector, etc) we can get a perf
boost and memory usage decrease by sharing selectors.",2019-03-11T18:33:02Z
8804bd0dc10c4b0d3f63179501c96259b91d798e,"Remove unnecessary check for contains() in LoadRule (#7073)

See https://github.com/apache/incubator-druid/issues/7072",2019-03-11T16:52:46Z
94463b5778b007c87b74f467415d61434c8ebc30,"Add missing redirects and fix broken links (#7213)

* Add missing redirects

* Fix zookeeper redirect

* Fix broken links",2019-03-09T23:16:23Z
5cc171419cf64e07448b501f47114ece9c03740b,"move jetty module to Lifecycle.Stage.LAST to allow graceful shutdown to work with lookups and stuff, put http-clint on lifecycle modules lifecycle (#7215)",2019-03-09T23:14:09Z
9bebf113ba188dbac242dd7fcc74845e34105d7f,"Fix race in historical when loading segments in parallel (#7203)

* Fix race in historical when loading segments in parallel

* revert unnecessary change

* remove synchronized

* add reference counting locking

* fix build

* fix comment",2019-03-09T01:54:05Z
62f0de9b8978178460091bbd8ce824d92242e90e,Remove outdated instruction for rule updates (#7205),2019-03-09T00:42:08Z
6991735f73bc9bfed81fe2757699a418da111d90,"Fix and add sys IT tests to travis script (#7208)

* Add sys IT tests to travis script

* minor fixes

* Modify the test queries

* modify query",2019-03-09T00:40:59Z
a44df6522c6d0ff66e4a21fec0fef5cb8c5f8246,"rename maintenance mode to decommission (#7154)

* rename maintenance mode to decommission

* review changes

* missed one

* fix straggler, add doc about decommissioning stalling if no active servers

* fix missed typo, docs

* refine docs

* doc changes, replace generals

* add explicit comment to mention suppressed stats for balanceTier

* rename decommissioningVelocity to decommissioningMaxSegmentsToMovePercent and update docs

* fix precondition check

* decommissioningMaxPercentOfMaxSegmentsToMove

* fix test

* fix test

* fixes",2019-03-09T00:33:51Z
de55905a5fd5e5093d2fd156542a2b209e2d6c58,"integration-tests: make ITParallelIndexTest still work in parallel (#7211)

* integration-tests: make ITParallelIndexTest still work in parallel

Follow-up to #7181, which made the default behavior for index_parallel tasks
non-parallel.

* Validate that parallel index subtasks were run",2019-03-09T00:17:52Z
3ed250787d06b74a2ac36d6a81df7cc2bb08eea0,"Densify swapped hll buffer (#6865)

* Densify swapped hll buffer

* Make test loop limit pre-increment

* Reformat

* Fix test comments",2019-03-06T22:50:04Z
e48a9c138e66f3aed1701a6bc62cd1d2342cc169,"Reduce default max # of subTasks to 1 for native parallel task (#7181)

* Reduce # of max subTasks to 2

* fix typo and add more doc

* add more doc and link

* change default and add warning

* fix doc

* add test

* fix it test",2019-03-06T06:06:36Z
9183e32876158052172cbc8cb7ce2864aabbdb1f,Add more approximate algorithm docs (#7195),2019-03-06T00:44:02Z
37cbad79b175c5be9620566c5f5a976cd50b2e6c,"Adjust issue templates (#7188)

* Adjust issue templates

* typo

* bug -> problem",2019-03-06T00:06:40Z
65118277a3be4900939bcfe102f5ff491cb33d9e,"support sin cos etc trigonometric function in sql (#7182)

* support triangle function in sql

* feedback address",2019-03-05T03:18:22Z
5486c2abf8fea839d2ae62fc2bc55dd002cadd7b,"Update LICENSE and NOTICE files (#7026)

* Update LICENSE and NOTICE files

* Update react-table version",2019-03-05T02:45:22Z
3398d3982fa1bf0703456af828caca07b239cd37,fix intellij UnusedInspectionsScope.xml (#7158),2019-03-04T22:56:41Z
10c9f6d7086fc2bbccb8673bce55b1e711d131e7,"Fix and document concurrency of EventReceiverFirehose and TimedShutoffFirehose; Refine concurrency specification of Firehose (#7038)

#### `EventReceiverFirehoseFactory`
Fixed several concurrency bugs in `EventReceiverFirehoseFactory`:
 - Race condition over putting an entry into `producerSequences` in `checkProducerSequence()`.
 - `Stopwatch` used to measure time across threads, but it's a non-thread-safe class.
 - Use `System.nanoTime()` instead of `System.currentTimeMillis()` because the latter are [not suitable](https://stackoverflow.com/a/351571/648955)  for measuring time intervals.
 - `close()` was not synchronized by could be called from multiple threads concurrently.

Removed unnecessary `readLock` (protecting `hasMore()` and `nextRow()` which are always called from a single thread). Removed unnecessary `volatile` modifiers.

Documented threading model and concurrent control flow of `EventReceiverFirehose` instances.

**Important:** please read the updated Javadoc for `EventReceiverFirehose.addAll()`. It allows events from different requests (batches) to be interleaved in the buffer. Is this OK?

#### `TimedShutoffFirehoseFactory`
- Fixed a race condition that was possible because `close()` that was not properly synchronized.

Documented threading model and concurrent control flow of `TimedShutoffFirehose` instances.

#### `Firehose`

Refined concurrency contract of `Firehose` based on `EventReceiverFirehose` implementation. Importantly, now it states that `close()` doesn't affect `hasMore()` and `nextRow()` and could be called concurrently with them. In other words, specified that `close()` is for ""row supply"" side rather than ""row consume"" side. However, I didn't check that other `Firehose` implementatations adhere to this contract.

<hr>

This issue is the result of reviewing `EventReceiverFirehose` and `TimedShutoffFirehose` using [this checklist](https://medium.com/@leventov/code-review-checklist-java-concurrency-49398c326154).",2019-03-04T21:50:03Z
7bf1ee4dc0d2066d0273d2be237788531b22baa6,"ITIndexerTest: validate new data source after reindex (#7171)

Previously, the test validated that the data source that we ingested from still
had the same query responses that it did before the second ingestion. This is
less useful than validating queries against the newly created data source.

The new queries file differs from the old one in that its maxTime is earlier due
to the interval selected by the reindex, and in that it does not query for the
dropped metric ""count"".",2019-03-04T19:05:40Z
050728b11591865991591f5ae571be009cf9bbf8,"add license checker to web-console (#7028)

* add license checker to web-console to ensure npm dependencies are apache license compatible

* add generate licenses file

* update check to remove excludes due to blueprintjs downgrade",2019-03-02T20:22:54Z
ded03d9d4c04f2d289a3b17f14880779ad9a47e4,"Improve doc for auto compaction (#7117)

* Improve doc for auto compaction

* fix doc

* address comments",2019-03-02T20:21:50Z
fa218f516026e5516229205836fc6a0d51001c0b,"Fix two SeekableStream serde issues. (#7176)

* Fix two SeekableStream serde issues.

1) Fix backwards-compatibility serde for SeekableStreamPartitions. It is needed
   for split 0.13 / 0.14 clusters to work properly during a rolling update.
2) Abstract classes don't need JsonCreator constructors; remove them.

* Comment fixes.",2019-03-02T06:27:08Z
06c8229c0803314929318c718c5ee8099110b9c0,"Kill all running tasks when the supervisor task is killed (#7041)

* Kill all running tasks when the supervisor task is killed

* add some docs and simplify

* address comment",2019-03-01T19:28:03Z
45f12de9ad5113f614a9b0f738d341a2d4fd5152,"Fix supported file formats for Hadoop vs Native batch doc (#7069)

* Fix supported file formats

* address comment",2019-03-01T03:44:45Z
32c418fdd839e30e9dc3dc1f7d8ff62e302a6882,Reword 'node' to 'process' (#7172),2019-03-01T02:10:39Z
66e8d35ddf0477c1db06030807b4c6fc0583ecdc,downgrade react-table (#7170),2019-03-01T02:09:38Z
9a62157a06fb0c5f7e643c5e3bae92fd0ad8017a,"Make MapBasedRow immutable (#7130)

* Make MapBasedRow immutable

* add null check",2019-03-01T00:07:14Z
a0afd7931d542fdd7149f0b02c0007e3e1fa8c65,"Add web consoles doc page (#7123)

* Add web consoles doc page

* PR comments

* Remove 'unified'

* PR comments

* Fix TOC

* PR comments

* More revisions

* GUI -> UI

* Update router docs

* Reword router doc",2019-02-28T22:02:39Z
e432965c13ef7799598d1ec2f88eb665b8fceaf5,"* Overview and Login precedure are added. (#7135)

* Typos are fixed.",2019-02-28T04:51:59Z
c7082ba36ec2e6b8fe9209db0944d69188db6250,"Added friendlier dsql error message for 405 (which occurs when druid.sql.enabled=false) (#7112)

* Added friendlier error message for dsql 405

* no extra char

* Changed error message

* fixed weird spacing",2019-02-28T04:40:30Z
0b4f7710626f6a4dc3f3ed77228b1c530cfb45e4,Exclude hadoop-lzo from thrift-extensions build (#7151),2019-02-28T03:57:53Z
3d247498efbf6cab5a3c8498fe3f9237ca35c4ba,Update tutorials for 0.14.0-incubating (#7157),2019-02-28T03:50:31Z
cacdc83cad98a2707591257705a2dd3f951b3095,"Improve error message for integer overflow in compaction task (#7131)

* improve error message for integer overflow in compaction task

* fix build",2019-02-28T03:07:37Z
6b232d8195b150ff642b883808712e3d20b7961a,"Improve compaction tutorial to demonstrate compaction with keepSegmentGranularity = true (#7079)

* Improve compaction tutorial to demonstrate compaction with keepSegmentGranularity = true

* typo

* add a warning",2019-02-28T00:02:51Z
9fa649b3bd8e621753f05772f42777e110e994f2,"segment metadata fallback analysis if no bitmaps (#7116)

* segment metadata fallback analysis if no bitmaps

* remove accidental line

* remove nonsense size estimation

* less ternary

* fix it

* do the thing",2019-02-26T19:27:41Z
b8f762037ad98e3649269177fa2229ed839ae03b,"Downgrade blueprintjs version in the web console to one with a vanilla Apache 2.0 license (#7139)

* revert bp

* fix tests

* move @types/hjson to dev dep

* removed all the package upgrades",2019-02-26T04:54:56Z
f6a8e030cc491aa6199c907d37cda253da4e4d41,"Select query failing if miliseconds used as time for indexing (#6937)

* [#1332] Fix - select failing if milis used for idx.

* Formating correction.

* Address comment: throw original exception.

* Using constant values in tests

- Try converting to Integer and then multiply by 1000L to achieve milis.
- If not successful try converting to Long or rethrow original
exception.

* DateTime#of has to support ""2011-01-01T00:00:00""

- in addition to seconds and milisecs, this method currently supports
even a date string.

* Handle only milisec timestamps and ISO8601 strings",2019-02-25T22:36:01Z
9a066558a447bf18f9b10699984fd1621f0ef26e,"Fix exception when the scheme is missing in endpointUrl for S3 (#7129)

* Fix exception when the scheme is missing in endpointUrl for S3

* add null check",2019-02-25T19:10:35Z
8b803cbc22b15799fd0526de8d6d0eea155ad733,"Added checkstyle for ""Methods starting with Capital Letters""  (#7118)

* Added checkstyle for ""Methods starting with Capital Letters"" and changed the method names violating this.

* Un-abbreviate the method names in the calcite tests

* Fixed checkstyle errors

* Changed asserts position in the code",2019-02-24T04:10:31Z
1c2753ab9033ff0c785d6e80f5f7c07dc34c3889,"ParallelIndexSubTask: support ingestSegment in delegating factories (#7089)

IndexTask had special-cased code to properly send a TaskToolbox to a
IngestSegmentFirehoseFactory that's nested inside a CombiningFirehoseFactory,
but ParallelIndexSubTask didn't.

This change refactors IngestSegmentFirehoseFactory so that it doesn't need a
TaskToolbox; it instead gets a CoordinatorClient and a SegmentLoaderFactory
directly injected into it.

This also refactors SegmentLoaderFactory so it doesn't depend on
an injectable SegmentLoaderConfig, since its only method always
replaces the preconfigured SegmentLoaderConfig anyway.
This makes it possible to use SegmentLoaderFactory without setting
druid.segmentCaches.locations to some dummy value.

Another goal of this PR is to make it possible for IngestSegmentFirehoseFactory
to list data segments outside of connect() --- specifically, to make it a
FiniteFirehoseFactory which can query the coordinator in order to calculate its
splits. See #7048.

This also adds missing datasource name URL-encoding to an API used by
CoordinatorBasedSegmentHandoffNotifier.",2019-02-24T01:02:56Z
417b9f2fe13c37add601e072252ecee52e84e229,"Add bug report and feature request GitHub issue templates (#7105)

* Add bug report GitHub template

* PR comments

* Add feature request template

* Tweak

* Add [REQUEST] title

* Remove request title, add note",2019-02-21T16:44:41Z
4e2b0852012ab4aed20189878a202e3fe590710b,"Remove DataSegmentFinder, InsertSegmentToDb, and descriptor.json file in deep storage (#6911)

* Remove DataSegmentFinder, InsertSegmentToDb, and descriptor.json file

* delete descriptor.file when killing segments

* fix test

* Add doc for ha

* improve warning",2019-02-20T23:10:29Z
dd34691004ca87128e775136ac99be404191f897,"Coordinator await initialization before finishing startup (#6847)

* Curator server inventory await initialization

* address comments

* print exception object in log

* remove throws ISE

* cachingCost awaitInitialization default to false",2019-02-20T19:56:23Z
a81b1b8c9c9ccf60ea28a2c2ffeedbc8dc19de5e,"index_parallel: support !appendToExisting with no explicit intervals (#7046)

* index_parallel: support !appendToExisting with no explicit intervals

This enables ParallelIndexSupervisorTask to dynamically request locks at runtime
if it is run without explicit intervals in the granularity spec and with
appendToExisting set to false.  Previously, it behaved as if appendToExisting
was set to true, which was undocumented and inconsistent with IndexTask and
Hadoop indexing.

Also, when ParallelIndexSupervisorTask allocates segments in the explicit
interval case, fail if its locks on the interval have been revoked.

Also make a few other additions/clarifications to native ingestion docs.

Fixes #6989.

* Review feedback.

PR description on GitHub updated to match.

* Make native batch ingestion partitions start at 0

* Fix to previous commit

* Unit test. Verified to fail without the other commits on this branch.

* Another round of review

* Slightly scarier warning",2019-02-20T18:54:26Z
9a521526c7e15808ded5978abba40e1228eed784,"Since notify might not wake up the right thread, notifyAll should be used instead. (#6931)

* Since notify might not wake up the right thread, notifyAll should be used instead.

* Comment is added about why notifyAll() is not used.",2019-02-20T17:02:58Z
871b9d2f4c1d1bcf10794e07f6a9facd90173ee1,"[Benchmarking] Call blackhole#consume() on collections instead of iterating through each element (#7002)

* Replaced iteration with blackhole#consume(the collection)

* Added javadoc on Sequence#toList()",2019-02-20T16:48:06Z
554b0142c3aa417c269ccd034686085b64fc22df,"Autoclose old PRs using stale bot. (#7031)

* Autoclose old PRs using stale bot.

* add apache license

* Excempt bug label",2019-02-19T22:26:54Z
7d1e8f353eb768a1170b0faf9405c48fbde69178,"bugfix: when building materialized-view, if taskCount>1, may cause concurrentModificationException (#6690)

* bugfix: when building materialized-view, if taskCount >1, may cause ConcurrentModificationException

* remove entry after iteration instead of using ConcurrentMap, and add unit test

* small change

* modify unit test for coverage

* remove unused method",2019-02-19T21:10:55Z
258485a2fbde740f7efbd484e9d544767a137eff,"Exclude github issue templates from license check (#7070)

* Exclude github issue templates from license check

* Adjust capitalization",2019-02-19T20:38:52Z
2b04e6d0bcfd98b0e5169eadbd91a52d2bd22a76,"add note on consistency of results for sys.segments queries (#7034)

* add doc

* change docs

* PR comments

* few more changes",2019-02-19T18:52:37Z
cadb6c52804d5913e9c7c8cea8e4d431ad4c68b9,"Missing Overlord and MiddleManager api docs (#7042)

* document middle manager api

* re-arrange

* correction

* document more missing overlord api calls, minor re-arrange of some code i was referencing

* fix it

* this will fix it

* fixup

* link to other docs",2019-02-19T18:52:05Z
80a2ef7be46c4fc807ac2a74507b8ba8b6a44049,"Support kafka transactional topics (#5404) (#6496)

* Support kafka transactional topics

* update kafka to version 2.0.0
* Remove the skipOffsetGaps option since it's not used anymore
* Adjust kafka consumer to use transactional semantics
* Update tests

* Remove unused import from test

* Fix compilation

* Invoke transaction api to fix a unit test

* temporary modification of travis.yml for debugging

* another attempt to get travis tasklogs

* update kafka to 2.0.1 at all places

* Remove druid-kafka-eight dependency from integration-tests, remove the kafka firehose test and deprecate kafka-eight classes

* Add deprecated in docs for kafka-eight and kafka-simple extensions

* Remove skipOffsetGaps and code changes for transaction support

* Fix indentation

* remove skipOffsetGaps from kinesis

* Add transaction api to KafkaRecordSupplierTest

* Fix indent

* Fix test

* update kafka version to 2.1.0",2019-02-18T19:50:08Z
61272d6daa345aae13121d4509dc05c70af74f19,Update handlebars dep to patch vulnerability (#7083),2019-02-18T10:06:47Z
c7eeeabf458b9a9afce086f4e5fbc456bf92d8e2,"2528 Replace Incremental Index Global Flags with Getters (#7043)

* Eliminated reportParseExceptions and deserializeComplexMetrics

* Removed more global flags

* Cleanup

* Addressed Surekha's recommendations",2019-02-15T21:36:46Z
0fa90008496926c15426710b0dd4698bdc224bac,"Add Postgresql SqlFirehose (#6813)

* Add Postgresql SqlFirehose

* Fix Code Style.

* Fix style.

* Fix Import Order.

* Add Line Break before package.",2019-02-15T06:52:03Z
ee91e27fe7dacbce0b231de760aefdae3049d764,"Update api-reference.md doc (#7065)

- moving description of coordinator isLeader endpoint",2019-02-14T14:38:09Z
1f299408114d35a7101eb59fdcc3b6c9e30d8286,"Fix momentsketch build issues (#7074)

* Fix momentsketch build issues

* Remove unused section in pom

* Fix test

* Remove unused method

* Checkstyle",2019-02-14T05:32:43Z
90c1a54b868a7e32a43895d77c79895bf242d8c4,"Moments Sketch custom aggregator (#6581)

* Moments Sketch Integration with Druid

* updates, add documentation, fix warnings

* nits

* disallowed base64

* update to druid 0.14",2019-02-13T22:03:47Z
673396ae74ead086fd9e748de7fe685466e97715,"Add proposal template (#7062)

* Add proposal template

Adds a proposal template based on the discussion in https://lists.apache.org/thread.html/bb9c5e1f8ce9b3148a5c26f95059f9b6629fae3bf8c617121d671395@%3Cdev.druid.apache.org%3E

* Add license",2019-02-13T21:43:31Z
970308463d7c26f6675c7c5d91c2233e3f68d7c3,"Add doc for Hadoop-based ingestion vs Native batch ingestion (#7044)

* Add doc for Hadoop-based ingestion vs Native batch ingestion

* add links

* add links",2019-02-13T19:23:08Z
1701fbcad3430a3e6e19134e870a6059864c8a80,"Improve error message for revoked locks (#7035)

* Improve error message for revoked locks

* fix test

* fix test

* fix test

* fix toString",2019-02-13T19:22:48Z
b1c4a5de0de92a055e61fb05e401013e06c824d1,Fix and improve doc for partitioning of local index (#7064),2019-02-13T19:20:52Z
d0abf5c20a4c7e3a8f5ade03ca4efec2bc742094,"fix kafka index task doesn't resume when recieve duplicate request (#6990)

* fix kafka index task doesn't resume when recieve duplicate request

* add unit test",2019-02-12T21:24:28Z
8ba11591b647fb2763bb6000fe2871aa9928fd38,Add router conf to assembly.xml (#7051),2019-02-12T02:33:18Z
02ef14f262c9ddceb3c8c9a4fcc44da078b67727,"Fix num_rows in sys.segments (#6888)

* Fix the bug with num_rows in sys.segments

* Fix segmentMetadataInfo update in DruidSchema
* Add numRows to SegmentMetadataHolder builder's constructor, so it's not overwritten
* Rename SegSegmentSignature to setSegmentMetadataHolder and fix it so nested map is appended instead of recreated
* Replace Map<String, Set<String>> segmentServerMap with Set<String> for num_replica

* Remove unnecessary code and update test

* Add unit test for num_rows

* PR comments

* change access modifier to default package level

* minor changes to comments

* PR comments",2019-02-12T00:21:19Z
16a4a50e9147a04dd47bf2eb897138197519b0bb,"[Issue #6967] NoClassDefFoundError when using druid-hdfs-storage (#7015)

* Fix:
  1. hadoop-common dependency for druid-hdfs and druid-kerberos extensions
 Refactoring:
  2. Hadoop config call in the inner static class to avoid class path conflicts for stopGracefully kill

* Fix:
  1. hadoop-common test dependency

* Fix:
  1. Avoid issue of kill command once the job is actually completed",2019-02-09T02:26:37Z
d42de574d66c6188ec10a3e0acd6a3d8694b9463,"Add an api to get all lookup specs (#7025)

* Add an api to get all lookup specs

* add doc",2019-02-08T19:05:59Z
c9f21bc78246c72df946c7333f616591959e6767,"Fix filterSegments for TimeBoundary and DataSourceMetadata queries (#7023)

* Fix filterSegments for TimeBoundary and DataSourceMetadata queries

* add javadoc

* fix build",2019-02-08T18:03:02Z
b3dcbe70ad206b703713398fa39bd18e7e2f01c2,"Add docker container for druid (#6896)

* Add docker container for druid

This container is an 'omnibus' (since there is such a high
overlap with the various services). It includes all contrib
extension as well as the msql connector.

It is intended to be run as `docker run NAME SERVICE`
(e.g. docker run druid:latest broker)

* Add Apache license header

* Resolve issues from Pull Request review

* Add comments at top of script per PR comments

* Revert BUILDKIT. Not available everywhere.

* Don't set hostname, allow default (IP)

Some environments (e.g. Kubernetes Deployments) don't resolve
hostname to IP.

* Switch to amd64 glibc-based busybox from 32-bit uclibc

* Override service-specific configuration

* Replace MAINTAINER w/ LABEL

* Add mysql connector to application classpath

This works around issue #3770
https://github.com/apache/incubator-druid/issues/3770

* Add docker-compose and sample environment

Signed-off-by: Don Bowman <don@agilicus.com>",2019-02-08T12:12:28Z
fafbc4a80e0bba0c1fbb5066b9f0ce37ffcab929,Set version to 0.15.0-incubating-SNAPSHOT (#7014),2019-02-07T22:02:52Z
3097562adf82dae195d258214467949308e0c3fe,"Improper getter value is fixed. (#6930)

* Improper getter value is fixed.

* Test class is added.",2019-02-07T19:51:07Z
8e3a58f7232bdddd87580d6994004f9df65f465d,"Improve druid.storage.sse.kms.keyId and druid.s3.protocol (#7012)

* Improve druid.storage.sse.kms.keyId and druid.s3.protocol

* fix article",2019-02-06T23:00:51Z
6723243ed2160eee139d55654798f120946bce98,"Create Scan Benchmark (#6986)

* Moved Scan Builder to Druids class and started on Scan Benchmark setup

* Need to form queries

* It runs.

* Remove todos

* Change number of benchmark iterations

* Changed benchmark params

* More param changes

* Made Jon's changes and removed TODOs

* Broke some long lines into two lines

* Decrease segment size for less memory usage

* Committing a param change to kick teamcity",2019-02-06T22:45:01Z
58f9507ccf4631218359847f9fbef3e53bfc763d,"Improper equals override is fixed to prevent NullPointerException (#6938)

* Improper equals override is fixed to prevent NullPointerException

* Fixed curly brace indentation.

* Test method is added for equals method of TaskLockPosse class.",2019-02-06T22:08:51Z
315ccb76b819790a4861bf16e493dba47605291b,"Fix for getSingleObjectSummary, replacing keyCount with objectSummaries().size (#7000)

* Instead of using keyCount, changing it to check the size of objectSummaries.

For issue:
https://github.com/apache/incubator-druid/issues/6980
https://github.com/apache/incubator-druid/issues/6980#issuecomment-460006580

* Changing another usage of keyCount with size of objectSummaries.

* Adding some comments to explain why using keyCount is not working as expected.",2019-02-05T23:45:45Z
ef451d3603af7bdca8f77609a621c160f55b2b30,"Add null checks in DruidSchema (#6830)

* Add null checks in DruidSchema

* Add unit tests

* Add VisibleForTesting annotation

* PR comments

* unused import",2019-02-05T21:42:20Z
75c70c2ccc1feb064be63708557316bc4e1585ae,"Add doc for S3 permissions settings (#7011)

* Add doc for S3 permissions settings

* add a comment about additional settings",2019-02-05T19:52:09Z
8bc5eaa908b38af81d2148b64c6eecfca2bafef6,Set version to 0.14.0-incubating-SNAPSHOT (#7003),2019-02-05T03:36:20Z
97b6407983f597fc039bb90339b41086bbaaea56,"maintenance mode for Historical (#6349)

* maintenance mode for Historical

forbidden api fix, config deserialization fix

logging fix, unit tests

* addressed comments

* addressed comments

* a style fix

* addressed comments

* a unit-test fix due to recent code-refactoring

* docs & refactoring

* addressed comments

* addressed a LoadRule drop flaw

* post merge cleaning up",2019-02-05T02:11:00Z
7e48593b5780c3bc4852d183dc473be283c84d25,"ParallelIndexSupervisorTask: don't warn about a default value (#6987)

Native batch indexing doesn't yet support the maxParseExceptions,
maxSavedParseExceptions, and logParseExceptions tuning config options, so
ParallelIndexSupervisorTask logs if these are set. But the default value for
maxParseExceptions is Integer.MAX_VALUE, which means that you'll get the
maxParseExceptions flavor of this warning even if you don't configure
maxParseExceptions.

This PR changes all three warnings to occur if you change the settings from the
default; this mostly affects the maxParseExceptions warning.",2019-02-04T20:00:26Z
0e926e865276f892ddc5b62685d331b822104022,"Prohibit assigning concurrent maps into Map-typed variables and fields and fix a race condition in CoordinatorRuleManager (#6898)

* Prohibit assigning concurrent maps into Map-types variables and fields; Fix a race condition in CoordinatorRuleManager; improve logic in DirectDruidClient and ResourcePool

* Enforce that if compute(), computeIfAbsent(), computeIfPresent() or merge() is called on a ConcurrentHashMap, it's stored in a ConcurrentHashMap-typed variable, not ConcurrentMap; add comments explaining get()-before-computeIfAbsent() optimization; refactor Counters; fix a race condition in Intialization.java

* Remove unnecessary comment

* Checkstyle

* Fix getFromExtensions()

* Add a reference to the comment about guarded computeIfAbsent() optimization; IdentityHashMap optimization

* Fix UriCacheGeneratorTest

* Workaround issue with MaterializedViewQueryQueryToolChest

* Strengthen Appenderator's contract regarding concurrency",2019-02-04T17:18:12Z
06d56c2abd603be4e0549bd96fcc696c87509805,Fixing little issues and CSS bugs in the new web console. (#6995),2019-02-04T17:04:58Z
6207b66e20a807c1cc74c914f2734c5dab5bfea7,fix build (#6994),2019-02-03T17:38:51Z
953b96d0a436b2bd979c2aa6eecc3f636387633c,"Add more sketch aggregator support in Druid SQL (#6951)

* Add more sketch aggregator support in Druid SQL

* Add docs

* Tweak module serde register

* Fix tests

* Checkstyle

* Test fix

* PR comment

* PR comment

* PR comments",2019-02-03T06:34:53Z
7baa33049cde3c3751037f014f468db4beb41a4c,"Introduce published segment cache in broker (#6901)

* Add published segment cache in broker

* Change the DataSegment interner so it's not based on DataSEgment's equals only and size is preserved if set

* Added a trueEquals to DataSegment class

* Use separate interner for realtime and historical segments

* Remove trueEquals as it's not used anymore, change log message

* PR comments

* PR comments

* Fix tests

* PR comments

* Few more modification to

* change the coordinator api
* removeall segments at once from MetadataSegmentView in order to serve a more consistent view of published segments
* Change the poll behaviour to avoid multiple poll execution at same time

* minor changes

* PR comments

* PR comments

* Make the segment cache in broker off by default

* Added a config to PlannerConfig
* Moved MetadataSegmentView to sql module

* Add doc for new planner config

* Update documentation

* PR comments

* some more changes

* PR comments

* fix test

* remove unintentional change, whether to synchronize on lifecycleLock is still in discussion in PR

* minor changes

* some changes to initialization

* use pollPeriodInMS

* Add boolean cachePopulated to check if first poll succeeds

* Remove poll from start()

* take the log message out of condition in stop()",2019-02-03T06:27:13Z
61f165c23f33381f2ea05ae61feeef6a940ec0f0,"Try-with-resources should be used since the new syntax is more readable. (#6944)

* Try-with-resources should be used since the new syntax is more readable.

* Fixed checkstyle error.",2019-02-03T02:42:28Z
6430ef8e1b62515576f5c7ec090bcd79da7eb8ee,lol (#6985),2019-02-01T22:21:13Z
7d4cc287306e9aa576e29b722a0d74f6a86fdab8,Fix node path for building the unified console (#6981),2019-02-01T21:57:17Z
7a5827e12eb65eef80e08fe86ef76604019d6af8,"bloom filter sql aggregator (#6950)

* adds sql aggregator for bloom filter, adds complex value serde for sql results

* fix tests

* checkstyle

* fix copy-paste",2019-02-01T21:54:46Z
e45f9ea5e9d28e2fd08799696b4722eb525d5376,Update metrics.md (#6976),2019-02-01T21:40:44Z
852fe86ea2b361a97d1fe0770bc2457a4809d86e,Remove repeated word in indexing-service.md (#6983),2019-02-01T21:38:22Z
5c0fbbda1ba2f0241b18d38b5ca62553fb37facb,"use System.err and System.out to print exit messages on CliPeon (#6975)

* use System.err and System.out to print exit messages on CliPeon

* more

* not necessarily a stopping error...",2019-02-01T10:54:14Z
f7df5fedcc452a8ba4d8e26a560a1ae52a0e85a5,"Add several missing inspectRuntimeShape() calls (#6893)

* Add several missing inspectRuntimeShape() calls

* Add lgK to runtime shapes",2019-02-01T04:04:26Z
4e426327bb51674a2112b17ba6347405837beef2,"Some adjustments to config examples. (#6973)

* Some adjustments to config examples.

- Add ExitOnOutOfMemoryError to jvm.config examples. It was added a
pretty long time ago (8u92) and is helpful since it prevents zombie
processes from hanging around. (OOMEs tend to bork things)
- Disable Broker caching and enable it on Historicals in example
configs. This config tends to scale better since it enables the
Historicals to merge results rather than sending everything by-segment
to the Broker. Also switch to ""caffeine"" cache from ""local"".
- Increase concurrency a bit for Broker example config.
- Enable SQL in the example config, a baby step towards making SQL
more of a thing. (It's still off by default in the code.)
- Reduce memory use a bit for the quickstart configs.
- Add example Router configs, in case someone wants to use that. One
reason might be to get the fancy new console (#6923).

* Add example Router configs.

* Fix up router example properties.

* Add router to quickstart supervise conf.",2019-02-01T01:59:39Z
7f1b19bfb11bdb715bf5816f06f54113e198b448,"Adding a Unified web console. (#6923)

* Adding new web console.

* fixed css

* fix form height

* fix typo

* do import custom react-table css

* added repo field so npm does not complain

* ask travis for node 10

* move indexing-service/src/main/resources/indexer_static into web-console

* fix resource names and paths

* add licenses

* fix exclude file

* add licenses to misc files and tidy up

* remove rebase marker

* fix link

* updated env variable name

* tidy up licenses and surface errors

* cleanup

* remove unused code, fix missing await

* TeamCity does not like the name aux

* add more links to tasks view

* rm pages

* update gitignore

* update readme to be accurate

* make clean script

* removed old console dependancy

* update Jetty routes

* add a comment for welcome files for coordinator

* do not show inital notifaction for now

* renamed overlord console back to console.html

* fix coordinator console

* rename coordinator-console.html to index.html",2019-02-01T01:26:41Z
185a7d4fc541ba458c7d32af374a1ff7f49a1fdf,"Updated definition and added link for Zookeeper connection string. (#6961)

* Updated definition and added link for Zookeeper connection string.

* Conflicts are merged.",2019-01-31T18:14:42Z
54735a5ad110457e0fedbc1189e3685bc1787b28,Kafka indexing: Remove experimental notice. (#6970),2019-01-31T17:54:22Z
4c211ab2b4c29795f5b61fb1404055d3706d0d35,"update sys table docs (#6955)

* update sys table docs

* Capitalize SQL",2019-01-31T16:51:39Z
e56c598cc118a3a00b21675a8e8bed6c230e6fd7,Fall back to the old coordinator API for checking segment handoff if new one is not supported (#6966),2019-01-31T16:50:46Z
9eaf8f5304e54a65c35395e657cecfafd6f7ecce,"google-storage: retry GoogleTaskLogs inserts (#6918)

This is an extension of PR #5750 by @drcrallen which added retry to a variety of
GCS operations, but not to GoogleTaskLogs, which we have found to
occasionally fail in our cluster.

Also fixes a typo in a variable name and removes an unused private method
parameter.

Fixes #6912.",2019-01-31T09:21:35Z
30ec6080388fda3bb97605965f4cf5b6443d41b3,Fix mixed up segment ids at SelectBinaryFnTest.java (#6946),2019-01-31T04:04:16Z
82137874ea48a5dd2f6e2b6283da634ed8417c43,"Add master/data/query server concepts to docs/packaging (#6916)

* Add master/data/query server concepts to docs/packaging

* PR comments

* TOC and markdown fix

* Update image legend

* PR comment

* More PR comments",2019-01-31T03:41:07Z
d4fbbb8deb05bb6aaabe1aeb9e654c692028e4ff,"Support protocol configuration for S3 (#6954)

* Support protocol configuration for S3

* Add doc",2019-01-31T03:32:00Z
edee576a7adc4a691705bd1920720e4d57bc9357,Add doc for druid.storage.useS3aSchema. (#6964),2019-01-30T18:26:37Z
de810286cd7f64ebe3e4b18555ccdb8672c7e87a,"fix bug with expression virtual column selectors backed by a single long column (#6957)

* fix issue with SingleLongInputCachingExpressionColumnValueSelector when sql compatible null handling enabled

* add test with doubles to show same behavior for floats/doubles that lack the optimization of longs

* simplify

* fix import",2019-01-30T15:13:07Z
c23c5ef4ef0fa5e19024e7041bd8fa2c9b4be477,Print files with unapproved licenses in travis (#6947),2019-01-29T19:35:22Z
2803fda8b781ffd13739ce49779e0e0578332d91,"Added an allocation rate metric #6604 (#6710)

Addressing #6604",2019-01-29T13:16:35Z
a6d81c0d1654b28d15d922dbe0d128489978fc89,"Adds bloom filter aggregator to 'druid-bloom-filters' extension (#6397)

* blooming aggs

* partially address review

* fix docs

* minor test refactor after rebase

* use copied bloomkfilter

* add ByteBuffer methods to BloomKFilter to allow agg to use in place, simplify some things, more tests

* add methods to BloomKFilter to get number of set bits, use in comparator, fixes

* more docs

* fix

* fix style

* simplify bloomfilter bytebuffer merge, change methods to allow passing buffer offsets

* oof, more fixes

* more sane docs example

* fix it

* do the right thing in the right place

* formatting

* fix

* avoid conflict

* typo fixes, faster comparator, docs for comparator behavior

* unused imports

* use buffer comparator instead of deserializing

* striped readwrite lock for buffer agg, null handling comparator, other review changes

* style fixes

* style

* remove sync for now

* oops

* consistency

* inspect runtime shape of selector instead of selector plus, static comparator, add inner exception on serde exception

* CardinalityBufferAggregator inspect selectors instead of selectorPluses

* fix style

* refactor away from using ColumnSelectorPlus and ColumnSelectorStrategyFactory to instead use specialized aggregators for each supported column type, other review comments

* adjustment

* fix teamcity error?

* rename nil aggs to empty, change empty agg constructor signature, add comments

* use stringutils base64 stuff to be chill with master

* add aggregate combiner, comment",2019-01-29T13:05:17Z
ac4c7e21a2995e31f79246cca32c12a338c3d3ad,"Enhancements to dsql. (#6929)

- CLI history, basic autocomplete through deadline.
- Include timeout in query context.
- Group CLI options into... groups.",2019-01-29T01:02:43Z
8d70ba69cff5165f9c1d2c4b02c8c9eb28ab586f,"Fix broken link on select query doc page (#6933)

* Fixed broken link

* Typo fix",2019-01-29T01:02:21Z
ba33bdc49707d9d3fee16f1b40d06a670daf56a5,Add exclusions to limit doubling up on jars. (#6927),2019-01-28T19:06:30Z
af3cbc3687a62162c6f6c1fe2f4ca18245dce7c6,"add bloom filter druid expression (#6904)

* add ""bloom_filter_test"" druid expression to support bloom filters in ExpressionVirtualColumn and ExpressionDimFilter and sql expressions

* more docs

* use java.util.Base64, doc fixes",2019-01-28T13:41:45Z
2b7364434054ea4cc07944288f83ef9a371ee107,"* Use `@SuppressWarnings(""GuardedBy"")` instead of `noinspection FieldAccessNotGuarded` comment (#6903)

* Remove `@GuardedBy(""connectionLock"")` from `connectionLock` itself

* Add FieldAccessNotGuarded into inspection profile and set the level to ERROR",2019-01-27T20:42:45Z
ae4dba778562481e0d792fa304921b03cd4b0c16,"Fix Configuration options (#6884)

Change `druid.metadata.postgres.*` to `druid.metadata.postgres.ssl.*`",2019-01-27T20:35:27Z
7c5a06bb859cacba96a5ed51a23913e2777a8776,"More docs on data modeling. (#6899)

* More docs on data modeling.

* Try to fix formatting.

* Fix indentation.

* More details and adjustments after feedback.",2019-01-27T19:33:21Z
89f247536928e38686c2859d9efab547c5d63e09,"Move ingest/kafka/* metrics into a separate section on the metrics docs (#6895)

The `ingest/kafka/*` metrics were grouped together with metrics relevant
to RealtimeMetricsMonitor, whereas they should be in their own section.",2019-01-27T16:11:53Z
72a571fbf71d8b3209377a2d5bdd5cfac08f95a7,"For performance reasons, use `java.util.Base64` instead of Base64 in Apache Commons Codec and Guava (#6913)

* * Add few methods about base64 into StringUtils

* Use `java.util.Base64` instead of others

* Add org.apache.commons.codec.binary.Base64 & com.google.common.io.BaseEncoding into druid-forbidden-apis

* Rename encodeBase64String & decodeBase64String

* Update druid-forbidden-apis",2019-01-26T01:32:29Z
8492d94f599da1f7851add2a0e7500515abd881d,"Kill Hadoop MR task on kill of Hadoop ingestion task  (#6828)

* KillTask from overlord UI now makes sure that it terminates the underlying MR job, thus saving unnecessary compute

Run in jobby is now split into 2
 1. submitAndGetHadoopJobId followed by 2. run
  submitAndGetHadoopJobId is responsible for submitting the job and returning the jobId as a string, run monitors this job for completion

JobHelper writes this jobId in the path provided by HadoopIndexTask which in turn is provided by the ForkingTaskRunner

HadoopIndexTask reads this path when kill task is clicked to get hte jobId and fire the kill command via the yarn api. This is taken care in the stopGracefully method which is called in SingleTaskBackgroundRunner. Have enabled `canRestore` method to return `true` for HadoopIndexTask in order for the stopGracefully method to be called

Hadoop*Job files have been changed to incorporate the changes to jobby

* Addressing PR comments

* Addressing PR comments - Fix taskDir

* Addressing PR comments - For changing the contract of Task.stopGracefully()
`SingleTaskBackgroundRunner` calls stopGracefully in stop() and then checks for canRestore condition to return the status of the task

* Addressing PR comments
 1. Formatting
 2. Removing `submitAndGetHadoopJobId` from `Jobby` and calling writeJobIdToFile in the job itself

* Addressing PR comments
 1. POM change. Moving hadoop dependency to indexing-hadoop

* Addressing PR comments
 1. stopGracefully now accepts TaskConfig as a param
     Handling isRestoreOnRestart in stopGracefully for `AppenderatorDriverRealtimeIndexTask, RealtimeIndexTask, SeekableStreamIndexTask`
     Changing tests to make TaskConfig param isRestoreOnRestart to true",2019-01-25T23:43:06Z
e1033bb412244fc9dff9dea1c89d43a8e0081fd3,"Issue#6892- Replaced Math.random() with ThreadLocalRandom.current().nextDouble() (#6914)

*  Replacing Math.random() with ThreadLocalRandom.current().nextDouble()

* Added java.lang.Math#random() in forbidden-apis.txt

* Minor change in the message - druid-forbidden-apis.txt",2019-01-25T11:49:20Z
66f64cd8bdf3a742d3d6a812b7560a9ffc0c28b8,"fix long/float/double dimension filtering for columns with nulls (#6906)

* fix long,float, double dimension filtering when sql compatible null handling is enabled and the column has null values

* revert unintended change

* fix tests",2019-01-24T06:36:52Z
3b020fd81bebecf52dc7edb48047008052603a71,"Improve doc for auto compaction (#6782)

* Improve doc for auto compaction

* address comments

* address comments

* address comments",2019-01-24T00:21:45Z
ffded61f5eba8665e1e00b0d35a26fb7e9750aa7,fix build (#6897),2019-01-22T01:18:14Z
8eae26fd4e7572060d112864dd3d5f6a865b9c89,"Introduce SegmentId class (#6370)

* Introduce SegmentId class

* tmp

* Fix SelectQueryRunnerTest

* Fix indentation

* Fixes

* Remove Comparators.inverse() tests

* Refinements

* Fix tests

* Fix more tests

* Remove duplicate DataSegmentTest, fixes #6064

* SegmentDescriptor doc

* Fix SQLMetadataStorageUpdaterJobHandler

* Fix DataSegment deserialization for ignoring id

* Add comments

* More comments

* Address more comments

* Fix compilation

* Restore segment2 in SystemSchemaTest according to a comment

* Fix style

* fix testServerSegmentsTable

* Fix compilation

* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes

* Fix SystemSchemaTest

* Fix style

* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment

* Remove a link, see https://youtrack.jetbrains.com/issue/IDEA-205164

* Fix compilation",2019-01-21T19:11:10Z
8ba33b250572fc7f4a1b3b2632f5c18f8c562b9a,"add 'init' lifecycle stage for finer control over startup and shutdown (#6864)

* add Lifecycle.Stage.INIT, put log shutter downer in init stage, tests, rad startup banner

* log cleanup

* log changes

* add task-master lifecycle to module lifecycle to gracefully stop task-master stuff

* fix it the right way

* remove announce spam

* unused import

* one more log

* updated comments

* wrap leadership lifecycle stop to prevent exceptions from wrecking rest of task master stop

* add precondition check",2019-01-21T17:01:36Z
86e171a234f7457e41b374ebe24021c69423d9cf,Doc change and commands tested command on v5 and v8 (#6886),2019-01-18T23:13:11Z
cc06e7e2dff26689a1520fdcddd879ba8e8821ec,"Fix fallback to cursor-based plan in UseIndexesStrategy (#6875)

* Fix fallback to cursor-based plan in UseIndexesStrategy

* fix build

* add a comment",2019-01-18T02:41:01Z
68f744ec0ae573f17fc140f2e468869605e77fb6,"Fixed buckets histogram aggregator (#6638)

* Fixed buckets histogram aggregator

* PR comments

* More PR comments

* Checkstyle

* TeamCity

* More TeamCity

* PR comment

* PR comment

* Fix doc formatting",2019-01-17T22:51:16Z
161dac1d2380cfe2a7742447dc5b77c8dccf6ffb,"datasketches quantiles module - implemented makeAggregateCombiner (#6882)

* implemented makeAggregateCombiner

* fixed import order",2019-01-17T22:09:55Z
9f0fdcfef66ac98557e706fec1908c9d72178dd6,"Fix deadlock in DruidStatement & DruidConnection (#6868)

* Fix deadlock in DruidStatement & DruidConnection

* change statements type to ConcurrentMap",2019-01-17T18:16:35Z
b704ebfa37b05af2da7485da1fda4d0c4ee43bf2,Let cachingCost balancer strategy only consider segment replicatable nodes (#6879),2019-01-17T17:26:33Z
f6dcd63084baad76842b7538a18adb7137c51792,Fixed the format of broker client configration (#6878),2019-01-17T06:57:50Z
a07e66c5408e833d4bc62df1fd9fcd32f3e9ce89,"Fix auto compaction to compact only same or abutting intervals (#6808)

* Fix auto compaction to compact only same or abutting intervals

* fix test",2019-01-16T22:54:11Z
5b8a221713615fff53cbd352cda925ecb1334d98,"Add SQL id, request logs, and metrics (#6302)

* use SqlLifecyle to manage sql execution, add sqlId

* add sql request logger

* fix UT

* rename sqlId to sqlQueryId, sql/time to sqlQuery/time, etc

* add docs and more sql request logger impls

* add UT for http and jdbc

* fix forbidden use of com.google.common.base.Charsets

* fix UT in QuantileSqlAggregatorTest, supressed unused warning of getSqlQueryId

* do not use default method in QueryMetrics interface

* capitalize 'sql' everywhere in the non-property parts of the docs

* use RequestLogger interface to log sql query

* minor bugfixes and add switching request logger

* add filePattern configs for FileRequestLogger

* address review comments, adjust sql request log format

* fix inspection error

* try SuppressWarnings(""RedundantThrows"") to fix inspection error on ComposingRequestLoggerProvider",2019-01-16T07:12:59Z
4300491b8113ab946b6c15408144e58ff7caa3e0,"Integration test for sys tables (#6792)

* Add integration test for sys tables

* Add test for batch index sys table queries

* Address PR comments

* remove unused import

* Address PR comments

* fix teamcity",2019-01-15T22:42:20Z
e497141e92af75bde5c664f376635bf19269dc2b,Update Curator to 4.1.0. (#6862),2019-01-15T22:12:07Z
8537a771b00ce53cf6f2f4f9070eb3cd5d50d632,"Some fixes and tests for spaces/non-ASCII chars in datasource names (#6761)

* Fixes and tests for spaces/non-ASCII datasource names

* Some unit test fixes

* Fix ITRealtimeIndexTaskTest

* Checkstyle

* TeamCity

* PR comments",2019-01-15T16:33:31Z
f72f33f84aadfbf505ee9313ec96a62cf6ef8b74,"Fix num_replicas count in sys.segments table (#6804)

* Fix num_replicas count from sys.segments

* Adjust unit test for num_replica > 1

* Pass named arguments instead of passing boolean constants

* Address PR comments

* PR comments",2019-01-15T16:31:29Z
9a8bade2fb55ea62424e9131a2ba99302dd6261b,Update approximate aggregators docs (#6848),2019-01-12T05:50:51Z
5d2947cd5229d683494b904a4146249f5dfac05f,"Use Guava Compatible immediate executor service (#6815)

* Use multi-guava version friendly direct executor implementation

* Don't use a singleton

* Fix strict compliation complaints

* Copy Guava's DirectExecutor

* Fix javadoc

* Imports are the devil",2019-01-11T18:42:19Z
39780d914c8f81d6d0af918d7b721433ae3314ef,"Propagate errors to RemoteTaskActionClient (#6837)

* Propagate errors to RemoteTaskActionClient

* style",2019-01-11T04:53:18Z
b18d681551a1674d43ccaaff472b3661a3523db8,Use kafka_2.12-0.10.2.2 (#6846),2019-01-11T04:52:55Z
55927bf8e3b60e4aa48aa90f0eee2be92b6d57eb,"Kafka version is updated (#6835)

Update Kafka version in tutorial from 0.10.2.0 to 0.10.2.2",2019-01-11T01:58:40Z
ea3f4261712b063ae7629da6864ec59f73d6dbf4,"bugfix: Materialized view not support post-aggregator (#6689)

* bugfix: Materialized view not support post post-aggregator

* add unit test",2019-01-10T22:25:09Z
c35a39d70bf705aa49c3a3c97bab87959bb80a4e,"Add support maxRowsPerSegment for auto compaction (#6780)

* Add support maxRowsPerSegment for auto compaction

* fix build

* fix build

* fix teamcity

* add test

* fix test

* address comment",2019-01-10T17:50:14Z
ccfd1244d15123fb4500e1eca10097ca4c8d6c5a,"fix parquet parse performance issue  (#6833)

* check that value is present before conversion to prevent silent, expensive exception and fix another bug

* cleanup

* now with less parenthesis",2019-01-10T17:18:57Z
934c83bca6df5db913c130af039d8893a9fcb16a,"Fix TaskLockbox when there are multiple intervals of the same start but differerent end (#6822)

* Fix TaskLockbox when there are multiple intervals of the same start but differernt end

* fix build

* fix npe",2019-01-10T03:38:27Z
ea973fee6b24f1e769ba50e942e68950a07c50d4,Tranquility version is updated (#6824),2019-01-10T01:46:58Z
99097617a129a8c6c6bbdafb09ba427d7f3994ef,use RoaringBitmapWriter for RoaringBitmap construction (#6764),2019-01-09T01:18:41Z
def823124c642586a7471a7b12dacd99b905628b,"add version comparator for StringComparator (#6745)

* add version comparator for StringComparator

* add more test case and docs",2019-01-09T01:17:03Z
c4716d1639b89b6a7885732b712e6603b768f886,"Fix ParallelIndexTask when publishing empty segments (#6807)

* Fix ParallelIndexTask when publishing empty segments

* unused import",2019-01-09T01:15:16Z
ef80c4e0368143f45e43f6b8f6405a89fa60920a,"Update sql.md (#6821)

Corrected defaults for druid.sql.avatica.maxStatementsPerConnection and druid.sql.avatica.maxConnections",2019-01-08T18:15:12Z
8ebb7b558b617d8807e6bdc204cabbda9a4ac346,"Handoff should ignore segments that are dropped by drop rules (#6676)

* Handoff should ignore segments that are dropped by drop rules

* fix travis-ci

* fix tests

* address comments

* remove line added by accident

* address comments

* add javadoc and logging the full stack trace of exception

* add error message",2019-01-07T22:43:11Z
b88e6304c418898074424005bba2328bfe442e7e,Fix broken link in ingestion/schema-design.md docs (#6810),2019-01-07T02:20:53Z
636964fcb51648f0701dd861c76f9017cc03829d,"Fix issue that tasks failed because of no sink for identifier (#6724)

* Fix issue that tasks failed because of no sink for identifier

* make find sinks to persist run in one callable together with the actual persist work

* Revert ""make find sinks to persist run in one callable together with the actual persist work""

This reverts commit a24a2d80aeaf8f047d676e7260900fe916f36b78.",2019-01-05T01:09:11Z
c08f3916057f781e3d1816779296c366aad14017,"statsd-emitter: support constant DogStatsD tags (#6791)

PR #6605 added support to the statsd emitter for DogStatsD tags. This commit
lets you specify ""constant tags"" in the config file which are included with
every event. This is helpful if you are running in an environment where you
cannot configure your datadog-agent with tags like ""cluster name"" --- eg, a
Kubernetes cluster with a datadog-agent on each node and different Druid
deployments in different namespaces but sharing the same datadog-agent
daemonset.

Also fix the name of an existing boolean getter to start with 'is'.",2019-01-04T07:35:37Z
0e04acca43eadcbcf96e3b0659e82d6c5336b019,"Show how to include classpath in command (#6802)

Would have saved me some time",2019-01-04T02:31:55Z
832a3b16edd1f099b7a804d07ff2ed15cedd861c,"Improve slfj logger input for MDC field:datasource (#6787)

* improve slfj logger  MDC datasource input

* add some UT and isNested field",2019-01-04T02:00:04Z
9ad6a733a58e81ef2e0dee067b1df8477af1dab4,"Add support segmentGranularity for CompactionTask (#6758)

* Add support segmentGranularity

* add doc and fix combination of options

* improve doc",2019-01-04T01:50:45Z
bc671ac436e7934ac9322c28c09885669e1a18ec,"SQL: Fix ordering of sort, sortProject in DruidSemiJoin. (#6769)

They were added in the wrong order, leading to this error message
when evaluating rules:

""Cannot move from stage[AGGREGATE] to stage[SORT_PROJECT]""",2019-01-03T18:36:28Z
a7391b396b28438a1d2ab668332356b4a81183e4,"Copy splitToList from Guava (#6800)

* Copy splitToList from Guava

* add comment

* fix commit tag",2019-01-03T10:42:13Z
6761663509025c5c88275a9752c96d417f879abe,"make kafka poll timeout can be configured (#6773)

* make kafka poll timeout can be configured

* add doc

* rename DEFAULT_POLL_TIMEOUT to DEFAULT_POLL_TIMEOUT_MILLIS",2019-01-03T04:16:02Z
e8ddd9942d2bfa53d676eb94b93f0e80e40821c0,"Fix wrong counter getFailedSendingTimeCounter method (#6793)

* Fix wrong counter getFailedSendingTimeCounter method

* Add testcases

* Add getTimeSumAndCount for testcases",2019-01-02T15:50:54Z
114a9fc38feda5f85799d24889007bc572d04dea,change propertyBase in ServerViewModule (#6774),2019-01-02T08:44:02Z
67f832957b06429259aeed2054f4e824db42db26,add bloom filter operator to general sql docs (#6785),2018-12-31T19:30:33Z
fa7cb906e40021549648848caada38cf80338b7b,"Fix auto compaction to consider intervals of running tasks (#6767)

* Fix auto compaction to consider intervals of running tasks

* adjust initial collection size",2018-12-28T02:03:44Z
7c7997e8a1183a7bffad731ca94e8b4c381e8665,"Add Kinesis Indexing Service to core Druid (#6431)

* created seekablestream classes

* created seekablestreamsupervisor class

* first attempt to integrate kafa indexing service to use SeekableStream

* seekablestream bug fixes

* kafkarecordsupplier

* integrated kafka indexing service with seekablestream

* implemented resume/suspend and refactored some package names

* moved kinesis indexing service into core druid extensions

* merged some changes from kafka supervisor race condition

* integrated kinesis-indexing-service with seekablestream

* unite tests for kinesis-indexing-service

* various bug fixes for kinesis-indexing-service

* refactored kinesisindexingtask

* finished up more kinesis unit tests

* more bug fixes for kinesis-indexing-service

* finsihed refactoring kinesis unit tests

* removed KinesisParititons and KafkaPartitions to use SeekableStreamPartitions

* kinesis-indexing-service code cleanup and docs

* merge #6291

merge #6337

merge #6383

* added more docs and reordered methods

* fixd kinesis tests after merging master and added docs in seekablestream

* fix various things from pr comment

* improve recordsupplier and add unit tests

* migrated to aws-java-sdk-kinesis

* merge changes from master

* fix pom files and forbiddenapi checks

* checkpoint JavaType bug fix

* fix pom and stuff

* disable checkpointing in kinesis

* fix kinesis sequence number null in closed shard

* merge changes from master

* fixes for kinesis tasks

* capitalized <partitionType, sequenceType>

* removed abstract class loggers

* conform to guava api restrictions

* add docker for travis other modules test

* address comments

* improve RecordSupplier to supply records in batch

* fix strict compile issue

* add test scope for localstack dependency

* kinesis indexing task refactoring

* comments

* github comments

* minor fix

* removed unneeded readme

* fix deserialization bug

* fix various bugs

* KinesisRecordSupplier unable to catch up to earliest position in stream bug fix

* minor changes to kinesis

* implement deaggregate for kinesis

* Merge remote-tracking branch 'upstream/master' into seekablestream

* fix kinesis offset discrepancy with kafka

* kinesis record supplier disable getPosition

* pr comments

* mock for kinesis tests and remove docker dependency for unit tests

* PR comments

* avg lag in kafkasupervisor #6587

* refacotred SequenceMetadata in taskRunners

* small fix

* more small fix

* recordsupplier resource leak

* revert .travis.yml formatting

* fix style

* kinesis docs

* doc part2

* more docs

* comments

* comments*2

* revert string replace changes

* comments

* teamcity

* comments part 1

* comments part 2

* comments part 3

* merge #6754

* fix injection binding

* comments

* KinesisRegion refactor

* comments part idk lol

* can't think of a commit msg anymore

* remove possiblyResetDataSourceMetadata() for IncrementalPublishingTaskRunner

* commmmmmmmmmments

* extra error handling in KinesisRecordSupplier getRecords

* comments

* quickfix

* typo

* oof",2018-12-21T19:49:24Z
bd44e2971f61395844c7463f9c20439f963df842,fix(indexer): don't flush closed stream (#6748),2018-12-20T23:40:07Z
522ef1a0133460d03cbbf4e87ab5d8e6a6fdf95a,update roaring to latest (#6750),2018-12-20T23:10:24Z
5e5aad49e639457f4d82862e92a901f7fa9282f5,"Set is_available to false by default for published segment (#6757)

* Set is_available to false by default for published segment

* Address comments

Fix the is_published value for segments not in metadata store

* Remove unused import

* Use non-null sharSpec for a segment in test

* Fix checkstyle

* Modify comment",2018-12-20T21:29:00Z
6fbf3d635b5a368fd9ba83acf77610239e3a06d1,"Add IntelliJ codestyle setting for ""blank lines before package"". (#6766)

Required to get IntelliJ to automatically format code for compliance
with the check introduced in #6543.",2018-12-20T18:13:03Z
f0b7c272b99e8d54cefe62a0845578be662b9a9c,"Broker: Start up DruidSchema immediately if there are no segments. (#6765)

Fixes a bug introduced in #6742, where the broker would delay startup
indefinitely if there were no segments at all being served by any
data servers.",2018-12-20T18:07:35Z
9bbd9928857f673f87172838f71bf3fcf7ef90ad,"Update two Javadocs to cite druid.generic.useDefaultValueForNull (#6760)

See #4349.",2018-12-20T17:39:37Z
78defa436b80efb11a10f809c6e71fb4df1ec52e,Fix missing DataNodeService for historical (#6762),2018-12-20T17:13:38Z
7a09cde4de1953eee75c5033e863cfde8f94d6c1,"Broker: Await initialization before finishing startup. (#6742)

* Broker: Await initialization before finishing startup.

In particular, hold off on announcing the service and starting the
HTTP server until the server view and SQL metadata cache are finished
initializing. This closes a window of time where a Broker could return
partial results shortly after startup.

As part of this, some simplification of server-lifecycle service
announcements. This helps ensure that the two different kinds of
announcements we do (legacy and new-style) stay in sync.

* Remove unused imports.

* Fix NPE in ServerRunnable.",2018-12-19T04:32:31Z
f12a1aa9938b1a1b187e400c279661080470654a,"SQL: Add support for queries with project-after-semijoin. (#6756)

* SQL: Add support for queries with project-after-semijoin.

These didn't work before, since the top Project rel wasn't getting
merged into the DruidSemiJoin rel. This patch allows that to happen.

* Null handling

* Null handling

* Null handling",2018-12-19T01:53:14Z
4591c56afb90e5a9efc2f7153e8ee2c248efddf5,"Fix error handling after pause request in Kafka supervisor (#6754)

* Fix error handling after pause request in kafka supervisor

* fix test

* fix test",2018-12-19T01:52:44Z
95050745306f671af9d50729e9b0cb3d4bc39adb,"fix log typo (#6755)

* fix log typo, add DataSegmentUtils.getIdentifiersString util method

* fix indecisive oops",2018-12-18T23:10:25Z
f0ee6bf8981b0aa69d227da851274efb09cc1486,"Fix auto compaction when the firstSegment is in skipOffset (#6738)

* Fix auto compaction when the firstSegment is in skipOffset

* remove duplicate",2018-12-18T11:10:46Z
2c380e3a261c8486d643d083235d40621db2f570,Fix doc for automatic compaction (#6749),2018-12-17T19:44:33Z
486c6f3cf9ca15ceb4da8be9351693fa128135c3,"emit logs that are only useful for debugging at debug level (#6741)

* make logs that are only useful for debugging be at debug level so log volume is much more chill

* info level messages for total merge buffer allocated/free

* more chill compaction logs",2018-12-17T06:20:28Z
c713116a75fb13acdeaddf9e02b3e62f12ebda7d,Use @Coordinator leader client in CoordinatorRuleManager (#6729),2018-12-16T23:18:09Z
04e7c7fbdca77343ae7dd0ff5053273e63c30ea3,"FilteredRequestLogger: Fix start/stop, invalid delegate behavior. (#6637)

* FilteredRequestLogger: Fix start/stop, invalid delegate behavior.

Fixes two bugs:

1) FilteredRequestLogger did not start/stop the delegate.

2) FilteredRequestLogger would ignore an invalid delegate type, and
instead silently substitute the ""noop"" logger. This was due to a larger
problem with RequestLoggerProvider setup in general; the fix here is
to remove ""defaultImpl"" from the RequestLoggerProvider interface, and
instead have JsonConfigurator be responsible for creating the
default implementations. It is stricter about things than the old system
was, and is only willing to make a noop logger if it doesn't see any
request logger configs. Otherwise, it'll raise a provision error.

* Remove unneeded annotations.",2018-12-14T08:55:44Z
4ec068642d371df1c185c370361784b98f559552,move parquet extension input formats up a level to `org.apache.druid.data.input.parquet.DruidParquetInputFormat` for `parquet` and `org.apache.druid.data.input.parquet.DruidParquetAvroInputFormat` for `parquet-avro` (#6727),2018-12-14T00:33:42Z
f7bbee2e65e4b485363661234d22a27c1b025747,Front Matter header needs to be on the first line for md to be rendered properly by jekyll (#6733),2018-12-13T19:47:20Z
da4836f38cd94587dd604514d56367e6eb5f494a,"Added titles and harmonized docs to improve usability and SEO (#6731)

* added titles and harmonized docs

* manually fixed some titles",2018-12-13T04:42:12Z
55914687bb94041d60bb1c401608bdc017f30bc7,"Fix broken link in docs toc (#6728)

Change 'peon.html' to the correct link, 'peons.html'. No redirect is needed because the file has always been 'peons', just an incorrect link was introduced in the toc here https://github.com/apache/incubator-druid/pull/6259/files#diff-45297643736c5fb6da0e92f2c3df5d68R89",2018-12-12T23:14:38Z
91e3cf7196ced5a5f9e0128ffc040104dff897a3,"add charset UTF-8 to log api (#6709)

When I retrieve the task log in browser, the Chinese characters all end up as garbage.
![image](https://user-images.githubusercontent.com/1322134/49502749-bd614080-f8b0-11e8-839e-07f7117eebfd.png)
After adding charset UTF-8, it was correct.
![image](https://user-images.githubusercontent.com/1322134/49502804-dc5fd280-f8b0-11e8-916b-bda8f1e7f318.png)",2018-12-12T15:31:04Z
86e3ae5b48bca7cbb9bf05e9e66d013f34dabf16,Add fail message (#6720),2018-12-11T16:05:50Z
3443f9a0082bbaec1d013f86807895fe3b34ffa8,"add missing contrib extensions to distribution packaging, fix influx package name, fix checkstyle plugin config to support Maven < 3.3.9 (#6717)",2018-12-11T01:56:32Z
f727333b704cb7936f117968a4c926ace72245ee,Fix shutdownAllTasks API for non-existing dataSource (#6706),2018-12-08T17:54:01Z
b7709e12451787f2b2ceff27239bbe20c19648e5,"FileUtils: Sync directory entry too on writeAtomically. (#6677)

* FileUtils: Sync directory entry too on writeAtomically.

See the fsync(2) man page for why this is important:
https://linux.die.net/man/2/fsync

This also plumbs CompressionUtils's ""zip"" function through
writeAtomically, so the code for handling atomic local filesystem
writes is all done in the same place.

* Remove unused import.

* Avoid FileOutputStream.

* Allow non-atomic writes to overwrite.

* Add some comments. And no need to flush an unbuffered stream.",2018-12-08T16:12:59Z
bbb283fa34258942227e5690635753993fdcfd17,"Double-checked locking bugs (#6662)

* Double-checked locking bug is fixed.

* @Nullable is removed since there is no need to use along with @MonotonicNonNull.

* Static import is removed.

* Lazy initialization is implemented.

* Local variables used instead of volatile ones.

* Local variables used instead of volatile ones.",2018-12-07T16:10:29Z
d525e5b18e800d9fa59d8b80dc6487142f32ad75,"Fix travis timeout in BufferHashGrouperTest (#6713)

* Fix travis timeout in BufferHashGrouperTest

* adjust buffer size

* adjust bufferSize and loadFactor

* increase memory

* add debug code

* cat error

* after script

* print logs

* print per 2 min

* use direct mem

* clean up",2018-12-07T04:05:27Z
cc44a4a28f57a89f28b8079f2e60902c2fa0708c,"Correct Documentation for lowerStrict/upperStrict (#6707)

The documentation for Bound filter's lowerStrict/upperStrict is incorrect. It is not consistent with the examples provided and actual behaviour of the bound filter. Correct this.",2018-12-06T18:14:50Z
e8dd3716b82dcb2a11c8a2fc4307e5fef4166de8,"add close method in Cache interface (#6540)

* add close method in Cache interface

* address comments

* address comments and fix travis-ci

* use try-finally",2018-12-06T09:28:41Z
607339003b2c31ff8d2a047d4afdc563f4d05675,"Add TaskCountStatsMonitor to monitor task count stats (#6657)

* Add TaskCountStatsMonitor to monitor task count stats

* address comments

* add file header

* tweak test",2018-12-04T21:37:17Z
ec36f0b82f03564d4c3103a195eb9c7453f4a284,"Add default comparison to HavingSpecMetricComparator for custom Aggregator types (#6505)

* Add default comparison

* Switch to BigDecimal comparison

* Add comparator from AggFactory

* Fix indent

* Add tests",2018-12-04T21:35:13Z
a1c9d0add2beb1d7fc784b154bc66c5bd91c0b29,"autosize processing buffers based on direct memory sizing by default (#6588)

* autosize processing buffers based on direct memory sizing

* remove oops, more test

* max 1gb autosize buffers, test, start of docs

* fix oops

* revert accidental change

* print buffer size in exception

* change the things",2018-12-04T01:40:02Z
43adb391c2d0aeaca40316cba37ea0440fb46d55,"remove AbstractResourceFilter.isApplicable because it is not (#6691)

* remove AbstractResourceFilter.isApplicable because it is not, add tests for OverlordResource.doShutdown and OverlordResource.shutdownTasksForDatasource

* cleanup",2018-12-01T13:52:31Z
e2bedab665269de1d10c35b47cda13c7cd125bfa,fix links to use relative references (#6696),2018-12-01T00:32:10Z
ec38df75756b975461bf1234e26cd195c462107d,"Simplify DruidNodeDiscoveryProvider; add DruidNodeDiscovery.Listener.nodeViewInitialized() (#6606)

* Simplify DruidNodeDiscoveryProvider; add DruidNodeDiscovery.Listener.nodeViewInitialized() method; prohibit and eliminate some suboptimal Java 8 patterns

* Fix style

* Fix HttpEmitterTest.timeoutEmptyQueue()

* Add DruidNodeDiscovery.Listener.nodeViewInitialized() calls in tests

* Clarify code",2018-12-01T00:12:56Z
b332021c49e2af91dfab322ecf322c9a90e22227,remove extensions from default configs that have configuration/library dependencies and update docs (#6694),2018-11-30T20:52:46Z
9bf835b84f59366265ee0b26f6ad3ecf7f695c86,remove #658 doc reference for Schema-less design (#6693),2018-11-30T19:53:57Z
5fae522f127bd9e12c8b965ae152d3cea985104f,replace Files.map() with FileUtils.map() (#6692),2018-11-30T15:40:41Z
d6539abd0a2d56d2160a3da43fe70738f825855b,"Fix overlord api and console (#6686)

* Fix overlord APIs and console

* remove getRunningTasksByDataSource

* add missing path to isApplicable",2018-11-30T07:45:28Z
624f328ea1acfe91d18c07808e51ce80515eeba7,lazy create descriptor in ProtobufInputRowParser (#6678),2018-11-29T05:59:29Z
c81cb94226a8381f512b8293659c82338a4626c3,fix cannot resolve param at OverlordResource#getTasks (#6679),2018-11-29T02:07:21Z
c5405bb5929b117b31ad0f4c4ba8c6faf38beb63,"emit maxLag/avgLag in KafkaSupervisor (#6587)

* emit maxLag/totalLag/avgLag in KafkaSupervisor

* modify ingest/kafka/totalLag to ingest/kafka/lag for backwards compatibility",2018-11-28T10:11:14Z
f4b49f01ff40e3b1099125bc08056d3c3651143c,"add rule count on log (#6467)

* add rule count on log

* add final",2018-11-28T08:08:38Z
d150483fd3340eca1352b85d0f198715697a240c,"indexing-service: fix HTML title on overlord console (#6671)

This follows a similar fix to the body of the page done in #5627.",2018-11-28T06:34:26Z
849ba867b209dabef67c46b590c36c6587e5ecb3,fix missing property in JsonTypeInfo of SegmentWriteOutMediumFactory (#6656),2018-11-27T23:59:58Z
422b76b33cf80dce62a7f2ac2fe9d80fa7a25244,"Fix IndexTaskClient to retry on ChannelException (#6649)

* Fix IndexTaskClient to retry on ChannelException

* fix travis and add javadoc

* address comment",2018-11-27T23:54:38Z
9a8920060721b68bb2dbd23664fcbf3b925882a7,Emit query metrics even if the ETags are equal (#6663),2018-11-27T23:18:01Z
219f0965dc78ed37b1ebd7bda4846e603016290c,Remove duplicate DataSegmentTest (#6669),2018-11-27T23:13:39Z
8f8a569aa2e8589f33f256b9d660a4a4e44403cf,"faster flattening for non-existent paths (#6654)

* faster flattening for non-existent properties to circumvent upstream json-path issue

* fix json provider

* revert to using null instead of undefined",2018-11-27T22:14:11Z
b4a46691282e4fd36bc158cdb040147e80380a24,"Fix a race in FileSessionCredentialsProvider (#6664)

`sessionToken`, `accessKey` and `secretKey` must be updated atomically.

Another race is possible between the file updater and the Druid process reading the file. It could be enforced only with mandatory file locking, but file locking is advisory by default in Linux.",2018-11-27T20:02:30Z
efdec50847846f93b5c7f42055e7d84351d7631f,"bloom filter sql (#6502)

* bloom filter sql support

* docs

* style fix

* style fixes after rebase

* use copied/patched bloomkfilter

* remove context literal lookup function, changes from review

* fix build

* rename LookupOperatorConversion to QueryLookupOperatorConversion

* remove doc

* revert unintended change

* add internal exception to bloom filter deserialization exception",2018-11-27T06:11:18Z
887c6456755bcd8d1bab96b41c9e569f00e9123e,"Find duplicate lines with checkstyle; enable some duplicate inspections in IntelliJ (#6558)

Not putting this to 0.13 milestone because the found bugs are not critical (one is a harmless DI config duplicate, and another is in a benchmark.

Change in `DumpSegment` is just an indentation change.",2018-11-26T15:55:42Z
03df481c9ca9a9560ef0cab9580fa7d029cc9b1a,"Docs: Fix wikipedia links in Ingestion:Rollup (#6659)

The rendered site doesn't have automatic link detection, so we need to add these links in explicitly. This also fixes the Measure link, which included an extra `)`

http://druid.io/docs/latest/ingestion/index.html#rollup",2018-11-24T00:28:05Z
22a5bf97a2c7a702279c579222ad3e0ba1ca3e15,"Fix issue that tasks tables in metadata storage are not cleared (#6592)

* tasks tables in metadata storage are not cleared

* address comments. remove tasklogs and revert obsolete changes

* address comments. change comment and update doc.

* address comments. update doc more detailed

* address comments. remove redundant log and update doc more detailed.

* address comments. update document",2018-11-22T03:50:31Z
92cce041654f48daffc0deb76d68e6afae3de8ee,"Fix missing default config in some calls to coordinator dynamic configs. (#6652)

* Fix missing default config in some calls to coordinator dynamic configs.

The lack of a default config meant that if someone called an API
_without_ a default config before one _with_ a default config, then
the default value would get stuck at null instead of the intended
default value. I noticed this in a cluster where calling /druid/coordinator/v1/config
before a coordinator had fully started up would lead to NPEs during
DruidCoordinatorRuleRunner.

This patch makes the default configs consistent across all calls.

* Remove unnecessary null check.",2018-11-22T02:25:39Z
e285b1103d894acea2f20098e08881f044d00e30,Use PasswordProvider for basic HTTP escalator (#6650),2018-11-21T15:34:15Z
81c9a6177cc6958942eaa9ea294fe96c4a3708f4,"Added support for filtering by unused parameter for HeapMemoryTaskStorage (#6510)

* 1. added support for unused DateTime start parameter in getRecentlyFinishedTaskInfoSince method:
 HeapMemoryTaskStorage.getRecentlyFinishedTaskInfoSince return the finished tasks by comparing TaskStuff.createdDate with the start time
2. added filtering by status complete to TaskStuff list stream in HeapMemoryTaskStorage.getNRecentlyFinishedTaskInfo method.
3. changed names of methods and parameters to present that public API method OverlordResource.getTasks return the list of completed tasks, which createdDate, not date of completion, belongs to the interval parameter.

* 1. added support for unused DateTime start parameter in getRecentlyFinishedTaskInfoSince method:
 HeapMemoryTaskStorage.getRecentlyFinishedTaskInfoSince return the finished tasks by comparing TaskStuff.createdDate with the start time
2. added filtering by status complete to TaskStuff list stream in HeapMemoryTaskStorage.getNRecentlyFinishedTaskInfo method.
3. changed names of methods and parameters to present that public API method OverlordResource.getTasks return the list of completed tasks, which createdDate, not date of completion, belongs to the interval parameter.

* Fixed OverlordResourceTest to Support changed methods names

* Changed methods and parameters names to make them more obvious to understand.

* Changed String.replace() for the StringUtils.replace()(#6607)

* Fixed checkstyle error",2018-11-20T21:42:44Z
87b96fb1fd5dd8a33211dbb51fd35f0c908cb8dc,"Add checkstyle rules about imports and empty lines between members (#6543)

* Add checkstyle rules about imports and empty lines between members

* Add suppressions

* Update Eclipse import order

* Add empty line

* Fix StatsDEmitter",2018-11-20T11:42:15Z
a438a9b99c220921580fb2b79d8e19f503753a60,fix typo in config page of docs (#6645),2018-11-20T00:32:58Z
e0d1dc584654444f13d425fb5798fd6f41d8995b,"Support DogStatsD style tags in statsd-emitter  (#6605)

* Replace StatsD client library

The [Datadog package][1] is a StatsD compatible drop-in replacement for the
client library, but it seems to be [better maintained][2] and has support for
Datadog DogStatsD specific features, which will be made use of in a subsequent
commit.

The `count`, `time`, and `gauge` methods are actually exactly compatible with
the previous library and the modifications shouldn't be required, but EasyMock
seems to have a hard time dealing with the variable arguments added by the
DogStatsD library and causes tests to fail if no arguments are provided for the
last String vararg. Passing an empty array fixes the test failures.

[1]: https://github.com/DataDog/java-dogstatsd-client
[2]: https://github.com/tim-group/java-statsd-client/issues/37#issuecomment-248698856

* Retain dimension key information for StatsD metrics

This doesn't change behavior, but allows separating dimensions from the metric
name in subsequent commits.

There is a possible order change for values from
`dimsBuilder.build().values()`, but from the tests it looks like it doesn't
affect actual behavior and the order of user dimensions is also retained.

* Support DogStatsD style tags in statsd-emitter

Datadog [doesn't support name-encoded dimensions and uses a concept of _tags_
instead.][1] This change allows Datadog users to send the metrics without
having to encode the various dimensions in the metric names. This enables
building graphs and monitors with and without aggregation across various
dimensions from the same data.

As tests in this commit verify, the behavior remains the same for users who
don't enable the `druid.emitter.statsd.dogstatsd` configuration flag.

[1]: https://www.datadoghq.com/blog/the-power-of-tagged-metrics/#tags-decouple-collection-and-reporting

* Disable convertRange behavior for DogStatsD users

DogStatsD, unlike regular StatsD, supports floating-point values, so this
behavior is unnecessary. It would be possible to still support `convertRange`,
even with `dogstatsd` enabled, but that would mean that people using the
default mapping would have some of the gauges unnecessarily converted.

`time` is in milliseconds and doesn't support floating-point values.",2018-11-19T17:47:57Z
e9c3d3e651dc6cfc571e8d3a1a5b7fd65fbb0840,"SystemSchema: Fix data types for various fields. (#6642)

* SystemSchema: Fix data types for various fields.

- segments: start, end, partition_num
- servers: plaintext_port, tls_port
- tasks: plaintext_port, tls_port

The declared and actual types did not match, but they must or
else queries may generate ClassCastExceptions.

Also adjusted some of the code for generating values to be more
robust in the face of nulls or malformed strings.

* Fix style.",2018-11-19T01:24:19Z
7cd457f41c67fe157097f5da59af6b4a19eef33b,Kafka: Add warning to doc for earlyMessageRejectionPeriod. (#6644),2018-11-18T22:47:38Z
8a258d3a6a239460fb172019ae657eaeecddf723,"Fix Hadoop Indexing doc to clarify segmentOutputPath only required for CLI indexer (#6636)

* Updated hadoop indexing doc to reflect segmentOutputPath is only required when using CLI indexer; otherwise it must be NULL",2018-11-17T04:19:20Z
7928e81e3ff931f2eb448aafc87a5890816445cd,kafkasupervisor checkpointing bug (#6639),2018-11-17T00:09:55Z
c4cb4b490956bed58024f3bacc67efbdd772a13f,optimize loading end offsets of all partitions (#6623),2018-11-16T07:24:01Z
fe69da0d95a361708923fbe5b82ded0d461aa495,"Expressions: Fix improper supplier reuse with missing columns. (#6600)

* Expressions: Fix improper supplier reuse with missing columns.

ExpressionSelectors has an optimization that skips building a Map
when there is only one input supplier. However, this optimization
should not be used in the case where the is one input supplier but
more than one input identifier (which can happen when only one
input identifier corresponds to an actual column).

Fixes #6556.

* Add underscores to statics.",2018-11-16T06:13:32Z
93b0d585710668b4e2920db9e6f40ba92b6c50b1,"optimize input row parsers (#6590)

* optimize input row parsers

* address comments",2018-11-16T03:48:32Z
7b41e23cbbe55bb40a5a00128525af86e13591f1,remove backpressure time from DefaultQueryMetrics pending on-going discussion (#6631),2018-11-16T02:29:50Z
d738ce4d2a4430cf95919e27b0eede171cbdf66c,"Enforce logging when killing a task (#6621)

* Enforce logging when killing a task

* fix test

* address comment

* address comment",2018-11-16T02:01:56Z
8f3fe9cd028592b4b1449c2a5e6dba482bed0549,"Prohibit String.replace() and String.replaceAll(), fix and prohibit some toString()-related redundancies (#6607)

* Prohibit String.replace() and String.replaceAll(), fix and prohibit some toString()-related redundancies

* Fix bug

* Replace checkstyle regexp with IntelliJ inspection",2018-11-15T21:21:34Z
0395d554e16c94955158ec0cbe9c364496600be5,"Properly reset total size of segmentsToCompact in NewestSegmentFirstIterator (#6622)

* Properly reset total size of segmentsToCompact in NewestSegmentFirstIterator

* add test",2018-11-15T09:00:51Z
0b70c36eb0dff06c81010d1569797c727712bddd,Fix bugs in ExprEval (#6617),2018-11-14T23:20:52Z
2ebdce20b1797858f8b20144eabfb46e3574f3e0,Fix smile query documentation (#6620),2018-11-14T00:51:02Z
cdae2fe7b5638b1f396513fdf09ee0514a58b695,"Deprecate IntervalChunkingQueryRunner (#6591)

* Deprecate IntervalChunkingQueryRunner

* add doc

* deprecate metric

* fix doc",2018-11-13T22:33:27Z
80173b5d2904233ce93e0d5693f8b5024faab8f5,"SQL: Set INFORMATION_SCHEMA catalog name to ""druid"". (#6595)

* SQL: Set INFORMATION_SCHEMA catalog name to ""druid"".

Some third party tools ignore catalogs with empty names. So using
the name ""druid"" for the catalog makes integration easier.

* Update tests.",2018-11-13T22:32:40Z
ab518781bbb029d41ad5b1ee6a8a0055dc2d3c3a,SQL: Support AVG on system tables. (#6601),2018-11-13T22:31:33Z
154b6fbcefe1d0b28248a6e5bbfe2a42b08a57ee,"SQL: Add ""POSITION"" function. (#6596)

Also add a ""fromIndex"" argument to the strpos expression function. There
are some -1 and +1 adjustment terms due to the fact that the strpos
expression behaves like Java indexOf (0-indexed), but the POSITION SQL
function is 1-indexed.",2018-11-13T21:39:00Z
f2b73f9df1a09b9c4937130254902ffc21c8a576,fix cannot resolve param at OverlordResource#getTasks (#6593),2018-11-13T17:47:11Z
7b262b71230015fc89ea185adff0c8011355ef5a,"Remove unnecessary path param from auto compaction api (#6594)

* Remove unnecessary path param from auto compaction api

* fix ci",2018-11-13T17:46:13Z
afb239b17a1111c98c73825828d3f273998c165e,"add missing license headers, in particular to MD files; clean up RAT … (#6563)

* add missing license headers, in particular to MD files; clean up RAT exclusions

* revert inadvertent doc changes

* docs

* cr changes

* fix modified druid-production.svg",2018-11-13T17:38:37Z
52f6bdc1ebfd37329cd98e4e5e0a9c6ca2205582,"Optimization for expressions that hit a single long column. (#6599)

* Optimization for expressions that hit a single long column.

There was previously a single-long-input optimization that applied only
to the time column. These have been combined together. Also adds
type-specific value caching to ExprEval, which allowed simplifying
the SingleLongInputCachingExpressionColumnValueSelector code.

* Add more benchmarks.

* Don't use LRU cache for __time.

* Simplify a bit.

* Let the cache grow.",2018-11-13T17:36:32Z
e3260866046015183ca91257376ad36f95269a27,"fix kafka indexing task not processing through end offsets on publish, fixes #6602 (#6603)",2018-11-12T22:27:32Z
c2f020eacc318a0dc5501209922b5b93a17c91fa,"fix druid-bloom-filter thread-safety (#6584)

* use BloomFilter instead of BloomKFilter since the latters test method is not threadsafe

* fix formatting

* style and forbidden api

* remove redundant hive notice entry

* add todo with note to delete copied implementation and link to related hive jira

* better fix for masks than ThreadLocal",2018-11-09T18:55:17Z
54351a5c75d8902d1d4c2eb2f6590bcf126348d4,"Fix various bugs; Enable more IntelliJ inspections and update error-prone (#6490)

* Fix various bugs; Enable more IntelliJ inspections and update error-prone

* Fix NPE

* Fix inspections

* Remove unused imports",2018-11-06T22:38:08Z
bcb754d066cc8a140d4c67ae7d51a31ec8cc7554,"Use current coordinator leader instead of cached one (#6551) (#6552)

* Use current coordinator leader instead of cached one (#6551)

Check the response status and throw exception if not OK

* Modify tests

* PR comment

* Add the correct check for status of BytesAccumulatingResponseHandler

* Move the status check into JsonParserIterator so sql query outputs meaningful message on failure

* Fix tests",2018-11-06T21:09:51Z
1224d8b74611bd6530dbddf3d196e7d7ecf2a99e,"overhaul 'druid-parquet-extensions' module, promoting from 'contrib' to 'core' (#6360)

* move parquet-extensions from contrib to core, adds new hadoop parquet parser that does not convert to avro first and supports flattenSpec and int96 columns, add support for flattenSpec for parquet-avro conversion parser, much test with a bunch of files lifted from spark-sql

* fix avro flattener to support nullable primitives for auto discovery and now only supports primitive arrays instead of all arrays

* remove leftover print

* convert micro timestamp to millis

* checkstyle

* add ignore for .parquet and .parq to rat exclude

* fix legit test failure from avro flattern behavior change

* fix rebase

* add exclusions to pom to cut down on redundant jars

* refactor tests, add support for unwrapping lists for parquet-avro, review comments

* more comment

* fix oops

* tweak parquet-avro list handling

* more docs

* fix style

* grr styles",2018-11-06T05:33:42Z
a2a1a1c2c9c494959911ae09d65cf68c73b7f41e,Hide NullDimensionSelector from public (#6480),2018-11-02T11:38:21Z
23ad3d214cdf3269666321708bad0e0879094ac1,"fixup docs to download from Apache mirror, fixup tarball name and path, change references from quickstart/* to quickstart/tutorial/* (#6570)",2018-11-02T04:47:29Z
26d992840c467cf30094de54265049de984113b1,correct default tier name (#6568),2018-11-02T00:51:13Z
ddd15a6907d9f44b381884dbafb215cff513d03a,correct default value for maxTotalRows (#6566),2018-11-01T23:53:15Z
a92c2a197b1e142c53f33a212a8399fc1e177ca2,"Move supervisor APIs to api-reference (#6555)

* Move supervisor APIs to api-reference

* fix kafka-specific docs

* add ingestion stats report",2018-11-01T20:10:05Z
7b346624624d6ec6843b9591c0c8e357d3d928de,"Period load/drop/broadcast rules should include the future by default (#6414)

* Period load/drop/broadcast rules should include the future by default

* address comments

* adjust coordinator console and tweak docs

* address comments

* fix travis-ci",2018-11-01T16:43:34Z
d2a533c7c72b8331c2ce6b0882fc7728c32a5889,"Add doc for missing balancerComputeThreads configuration (#6561)

* Add doc for missing balancerComputeThreads configuration

* remove duplicate",2018-11-01T01:43:12Z
2cdce2e2a6111acdd8fffd4ef61edc1c89f187bf,"Add RequestLogEventBuilderFactory (#6477)

This PR allows to control the fields in `RequestLogEvent`, emitted in `EmittingRequestLogger`. In our case, we want to get rid of the `intervals` fields of the query objects that are a part of `DefaultRequestLogEvent`. They are enormous (thousands of segments) and not useful.

Related to #5522, FYI @a2l007.",2018-10-31T21:24:37Z
d5e9e5686eac95348c397737ddfe4030941b5d40,Set new keys for integration-tests. (#6554),2018-10-31T16:01:42Z
b1159174b7558cf57ff38ecbf47dd01777ea5537,Update mysql.md (#6545),2018-10-30T21:01:33Z
676f5e6d7f184101b8763e4249b18b237bbe0ec7,"Prohibit some guava collection APIs and use JDK collection APIs directly (#6511)

* Prohibit some guava collection APIs and use JDK APIs directly

* reset files that changed by accident

* sort codestyle/druid-forbidden-apis.txt alphabetically",2018-10-29T12:02:43Z
0a90b3d51ab0066141e9721504e895053467d512,"Remove unused code (#6504)

* Remove unused code

* Remove usage of list in setDimensions and setAggregatorSpecs

* Fix formatting to adhere to 120 character guideline",2018-10-26T18:31:10Z
838276490038b48c33114c96ff2efd2a07ecea5d,"Remove unused bin/init script, conf-quickstart reference (#6520)",2018-10-26T18:30:01Z
f7753ef1e2183722a89efcaf2ea3dd2fec494e9f,"fix KafkaSupervisor stats report error (#6508)

* fix kafkasupervisor stats 500

* added unit test

* throw error if group already exists",2018-10-25T22:45:54Z
ee1fc93f9793900b8917bd7e40c3397d276b6293,"fix exception in Supervisor.start causing overlord unable to become leader (#6516)

* fix exception thrown by Supervisor.start causing overlord unable to become leader

* fix style",2018-10-25T22:44:04Z
aef1b39762efc80a42a997c02b6cec2efeb2c64a,"Update init (#6514)

Fix bin/init to source from proper directory.",2018-10-25T20:40:23Z
e1057ad47ab5f47c6ac4ba297b095a5267a5c87a,"Fix NPE in TaskLockbox that prevents overlord leadership (#6512)

* fix NPE that prevents overlord from assuming leadership if extension that provides indexing task type is not loaded

* heh",2018-10-25T20:06:11Z
b2d9b6f23dfb828c834a1956f0099b07aa1e400d,"Allow custom TLS cert checks (#6432)

* Allow custom TLS cert checks

* PR comment

* Checkstyle, PR comment",2018-10-24T23:31:52Z
601183b4c7b2a30c43c0eca41ea8a0b67ef5cd40,"Add period drop before rule (#6415)

* Add period drop before rule

* add license header

* support period drop before rule in coordinator console

* address comments",2018-10-24T19:44:30Z
ec9d1827a05f4179f2189eac32287e14287d6126,updated to use the latest sketches-core-0.12.0 (#6381),2018-10-23T18:20:19Z
84ac18dc1bce14afe88ebcccd46da21baefae73d,"Catch some incorrect method parameter or call argument formatting patterns with checkstyle (#6461)

* Catch some incorrect method parameter or call argument formatting patterns with checkstyle

* Fix DiscoveryModule

* Inline parameters_and_arguments.txt

* Fix a bug in PolyBind

* Fix formatting",2018-10-23T10:17:38Z
c5bf4e750328f5338c3b4ad3e4051ce46886ab73,"update insert pending segments logic to synchronous (#6336)

* 1. Mysql default transaction isolation is REPEATABLE_READ, treat it as READ_COMMITTED will reduce insert id conflict.
2. Add an index to 'dataSource used end' is work well for the most of scenarios(get recently segments), and it will speed up sync add pending segments in DB.
3. 'select and insert' is not need within transaction.

* Use TaskLockbox.doInCriticalSection instead of synchronized syntax to speed up insert pending segments.

* fix typo for NullPointerException",2018-10-23T02:48:20Z
359576a80bccaea4168e31323e931a806b26159b,"Implement force push down for nested group by query (#5471)

* Force nested query push down

* Code review changes",2018-10-22T20:43:47Z
1e82b6291e183b4d7c70a78ce5aba46a00fc5ba0,"Remove consumer.listTopics() method in case when too many topics in kafka causes the FullGC in Overlord (#6455)

* remove consumer.listTopics() method

* add consumerLock and exception handling for consumer.partitionFor() and remove some useless checks

* add check in case consumer.partitionsFor() returns null

* fix CI failure

* fix failed UT

* Revert ""fix CI failure""

This reverts commit f839d09e1ed6a3c73bb5ba524b26ee83c0e79c41.

* revert unless commit and re-commit the useful part to fix failed UT",2018-10-22T17:46:31Z
e83cc229966eddd5dbb6b5f655f24f5cf297ff64,"use a sha512 hash of bloom filter for cache key instead of filter bytes (#6488)

* use a sha512 hash of bloom filter for cache key instead of filter bytes

* make serde private, BloomDimFilter.toString and BloomDimFilter.equals use hash instead of bloomKFilter which has no tostring or equals of its own

* keep and use HashCode object instead of converting to bytes up front

* uneeded imports oops

* tweaks from review

* refactor dupe code

* refactor",2018-10-22T14:57:21Z
822e564f54453aca66a0a423dd56fc72f85311b7,"include mysql-metadata-storage extension in distribution, but without… (#6497)

* include mysql-metadata-storage extension in distribution, but without the GPL-licensed connector library

* Install mysql connector package

* use symlinks to avoid versioning issues

* add documentation for fetching the mysql connector",2018-10-21T01:18:58Z
9851921f437b5c7d11685254a94b331e90943bbf,Fix integration test service logging (#6479),2018-10-20T21:55:14Z
bf90b2b18394abd41fca717d2679fe99e9da2b7e,fix shallow clone git-commit-id plugin unable to find commits until tag issue (#6495),2018-10-20T21:45:09Z
e1a53fd17a0d22ade8e54eb5cfdf739b37b124ae,"fix distribution to not include contrib extensions by default, don't pull the entire AWS SDK bundle (#6494)",2018-10-19T20:50:05Z
f5f4171a45ad9f79d1b627631643c98a1270ff21,"QueryCountStatsMonitor: emit query/count (#6473)

Let `QueryCountStatsMonitor` emit `query/count`, then I can monitor QPS of my services, or I have to count it by myself.",2018-10-19T13:15:02Z
b662fe84c50386be4404bb2e1a50cd592e1196b7,"fix TaskRunnerUtils String formatting issue (#6492)

* fix TaskRunnerUtils String formatting issue

* additional fixes",2018-10-19T01:16:46Z
73780536a6eb2cb618b70ead6dfc7f282213edab,"Apache-ize POM (#6482)

* Apache-ize POM

* put revision information into MANIFEST.MF for binary release

* remove nightly profile

* fix flaky travis by overriding maven-remote-resources-plugin execution from the parent POM",2018-10-18T01:37:01Z
f0b977ea7f1df7821b49a4a0a754c2b3ce43f6b5,Upgrade lz4-java to 1.5.0 (#6478),2018-10-18T01:34:20Z
c034ed8c439caf128ff7aaca9863a2a9b83d05ac,fix a couple of missed changes that should been in #6443 (#6487),2018-10-17T23:22:17Z
f8710c8e20163aa9d3ad4c4bcda59c414a59da4d,"add DISCLAIMER file and modify NOTICE file for ASF (#6475)

* add DISCLAIMER file and modify NOTICE file for ASF

* add line breaks",2018-10-17T15:36:13Z
b9d01f5770aa26ae7d33bedf961be05c12c12ebc,More portable expired cert gen for IT (#6481),2018-10-17T15:24:15Z
c780aacc03e30b929ba14f70d7f278811fd8ba44,"Add ability to specify dbcp properties file (#6419)

* Add ability to specify dbcp properties file

* Address PR comments, use mock config, remove setter

* Add documentation

* APRC, updated docs with example file contents

* APRC, add @Nullable, @VisibileForTesting, update doc

* APRC, remove error log, use props directly as jackson binding

* Remove unused files",2018-10-16T19:27:19Z
789c9a1dc7746808f7b006e9bbedd64bd01ba865,"Prohibit using Object|Long|Float|DoubleColumnSelector in instanceof statements (#6470)

* Prohibit using Object|Long|Float|DoubleColumnSelector in instanceof statements

* Doc fixes",2018-10-15T22:41:43Z
85a89e27033b046c58346bbcedc8db37aa59dbf9,"make druid node bind address configurable (#6464)

* make druid node bind address configurable

* fix tests

* fix travis-ci",2018-10-15T21:19:40Z
f537c0069a724c55161168ed8c7fc1e1d4b52293,"SQL: Support for selecting multi-value dimensions. (#6462)

* SQL: Support for selecting multi-value dimensions.

Fixes #4637. Doesn't completely address everything mentioned in #4638,
but at least fixes one issue on the way there.

* Fix null cases in tests.",2018-10-15T21:01:21Z
b57d5df07479174f9a8bbbab7b131040457ce6c6,"Emit emitter/buffers/allocated/delta and emitter/buffers/failed/delta (#6425)

@gianm gauge `emitter/buffers/failed` and `emitter/buffers/totalAllocated` metrics proved to be very inconvenient in practice: they are not additive across a fleet of nodes, are randomly reset when a JVM restarts (that may be completely independent from metrics emitting issues). Regarding [problem identification](https://github.com/apache/incubator-druid/pull/4973#issuecomment-338119125), `emitter/buffers/dropped` serves this well.

Currently in this PR I added `/delta` vs. `/total` metrics, but if there are no objections I would remove `/total` and so align `emitter/buffers/allocated` and `/failed` with `/dropped` and `/events/emitted` which are already delta-only.",2018-10-15T20:30:29Z
6c71ee5ed5ea267a6762945206004816aa5b6fac,fix type mismatch caused by #6377 (#6466),2018-10-15T08:34:18Z
aa121da25f019ad3345c747ce56261fbb7e77885,"Use NodeType enum instead of Strings (#6377)

* Use NodeType enum instead of Strings

* Make NodeType constants uppercase

* Fix CommonCacheNotifier and NodeType/ServerType comments

* Reconsidering comment

* Fix import

* Add a comment to CommonCacheNotifier.NODE_TYPES",2018-10-15T03:49:38Z
95ab1ea737f7d55f35e2c609c8fe23db7f09dfc6,"Fix Empty InDimFilter Failure (#6330)

* fix empty InDimFilter failure (#6101)

* Add test case for empty values input

* Add documentation for empty values in InDimFilter",2018-10-15T03:43:16Z
84598fba3b283cbfd6a5addd2602c7b12ba8c00c,"combine druid-api, druid-common, java-util into druid-core (#6443)

* combine druid-api, druid-common, java-util

* spacing",2018-10-15T03:37:37Z
d5ccd582b5ed628b20919c2949b9d904254bdd70,"Reducing the usage of Jmh Invocation level on setup (#6459)

* Reducing the usage of invocation level setup

* Removing LoadStatusBenchmark as it has no use in the codebase",2018-10-15T03:37:11Z
e3397ba00ff6c439b3fb97a8da1e5e27f1cf301a,Enforce Druid's exception class use (#6456),2018-10-13T23:35:14Z
e908fd6db72fc13c83634febf66c4a3dc42fc7a7,"Add check for nullable numRows (#6460)

* Add check for nullable numRows

* Make numRows long instead of Long type

* Add check for numRows in unit test
* small refactoring

* Modify test

PR comment from https://github.com/apache/incubator-druid/pull/6094#pullrequestreview-163937783

* Add a test for serverSegments table

* update tests",2018-10-13T22:08:42Z
b06ac54a5ee9176a97baad9d69ce96aa27265eae,"add PrefixFilteredDimensionSpec for multi-value dimensions (#6307)

* add PrefixFilteredDimensionSpec for multi-value dimensions

* add docs for PrefixFilteredDimensionSpec

* remove unnecessary null handling

* add null check to the result of NullHandling",2018-10-13T00:51:09Z
0f4f5f287790548cecaf8a18cad4231009199b71,"Cleanup jackson dependency exclusions (#6438)

* Remove pulling in jackson from fasterxml in a lot of places

* Remove codehaus extensions",2018-10-12T23:25:39Z
6567fff9e7024883ac548abc920f051bdeddaefb,"Query Response format to be based on http 'accept' header & Query Payload content type to be based on 'content-type' header (#4033)

* o- Query Response format to be based on http 'accept' header & Query Payload contenty type to be based on 'content-type' header

* o- Query Response format to be based on http 'accept' header & Query Payload contenty type to be based on 'content-type' header
o- if Accept header is absent, it defaults to Content-Type header

* Feature: Query Response format to be based on http 'accept' header & Query Payload content type to be based on 'content-type'  PR #4033
Minor change to a comment - restoring to previous wording

* Feature: Query Response format to be based on http 'accept' header & Query Payload content type to be based on 'content-type'  PR #4033
o- minor change to check for empty string",2018-10-12T21:29:14Z
3be4a9715061197cee4e121d54b23ccfdd2cbf8c,"Fix inconsistent segment size(#6448) (#6451)

* Fix inconsistent segment size(#6448)

* Fix the segment size for published segments
* Changes to get numReplicas
* Make coordinator segments API truly streaming

* Changes to store partial segment data

* Simplify SegmentMetadataHolder
* Store partial the columns from available segments

* Address comments",2018-10-12T19:55:20Z
39d61b9ae50e9b233a1f4b0fbe1094e267ef5838,update druid-console to 0.0.4 (#6450),2018-10-12T04:37:08Z
20ab213ba68e38cfe0807baed54dc8d5023575bb,change project versions to 0.13.0-incubating-SNAPSHOT (#6453),2018-10-12T02:28:01Z
1e913a0416742d5493805a864d209aa2d771c989,update two license headers to ASF (#6449),2018-10-11T23:04:23Z
c55b37d7ec8dfdecaa5a6349692ed34895d32edb,"Add optional `name` to top level of FilteredAggregatorFactory (#6219)

* Add optional `name` to top level of FilteredAggregatorFactory

* Add compat constructor for tests

* Address comments

* Add equals and hash code updates

* Rename test

* Fix imports and code style",2018-10-11T18:56:53Z
ab7b4798cc2747bb68550b67f69660965a276dc8,"Securing passwords used for SSL connections to Kafka (#6285)

* Secure credentials in consumer properties

* Merge master

* Refactor property population into separate method

* Fix property setter

* Fix tests",2018-10-11T17:03:01Z
f8f4526b168568b770b0fd309d3bc2c59dfe4e27,"Add suspend|resume|terminate all supervisors endpoints. (#6272)

* ability to showdown all supervisors

* add doc

* address comments

* fix code style

* address comments

* change ternary assignment to if statement

* better docs",2018-10-11T04:41:59Z
f7775d1db32b2adff2fb457b7e3d7a04a993a2b4,"fixes for LookupReferencesManagerTest (#6444)

* some fixes for LookupReferencesManagerTest

* docs

* formatting

* more formatting fixes",2018-10-11T01:02:11Z
3a0a667fe03d03d97c4e5d6cbeb3e60e28c7d4f7,"Introduce SystemSchema tables (#5989) (#6094)

* Added SystemSchema with following tables (#5989)

* SEGMENTS table provides details on served and published segments
* SERVERS table provides details on data servers
* SERVERSEGMETS table is the JOIN of SEGMENTS and SERVERS
* TASKS table provides details on tasks

* Add documentation for system schema

* Fix static-analysis warnings

* Address PR comments

*Add unit tests

* Fix a test

* Try to fix a test

* Fix a bug around replica count

* rename io.druid to org.apache.druid

* Major change is to make tasks and segment queries streaming

* Made tasks/segments stream to calcite instead of storing it in memory
* Add num_rows to segments table
* Refactor JsonParserIterator
* Replace with closeable iterator

* Fix docs, make num_rows column nullable, some unit test changes

* make num_rows column type long, allow it to be null

fix a compile error after merge, add TrafficCop param to InputStreamResponseHandler

* Filter null rows for segments table from Linq4j enumerable

* change num_replicas datatype to long in segments table

* Fix some tests and address comments

* Doc updates, other PR comments

* Update tests

* Address comments

* Add auth check
* Update docs
* Refactoring

* Fix teamcity warning, change the getQueryableServer in TimelineServerView

* Fix compilation after rebase

* Use the stream API from AuthorizationUtils

* Added LeaderClient interface and NoopDruidLeaderClient class

* Revert ""Added LeaderClient interface and NoopDruidLeaderClient class""

This reverts commit 100fa46e396ab0f68da6c4bef80951f6b996657e.

* Make the naming consistent to server_segments for the join table

* Add ForbiddenException on auth check failure
* Remove static block from SystemSchema

* Try to fix a test in CalciteQueryTest due to rename of server_segments

* Fix the json output format in the coordinator API

* Add auth check in the segments API
* Add null check to avoid NPE

* Use annonymous class object instead of mock for DruidLeaderClient in SqlBenchmark

* Fix test failures, type long/BIGINT can be nullable

* Revert long nullability to fix tests

* Fix style for tests

* PR comments

* Address PR comments

* Add the missing BytesAccumulatingResponseHandler class

* Use Sequences.withBaggage in DruidPlanner

* Fix docs, add comments

* Close the iterator if hasNext returns false",2018-10-11T00:17:29Z
e69a2f217b378b6a5dd416c791531e9b1cfb208e,"Fix avro parser issue while deserializing sketches  (#6440)

* Fix object transform for avro parser

* Remove unwanted space",2018-10-10T15:53:26Z
1fa045862a36ff8175767694b166e2b075351be8,exclude all redundant and unecessary hive-exec depends in orc-extensions pom.xml (#6441),2018-10-10T15:24:28Z
09126c021a786ea13656e8a390732021a8e61b94,"Remove Aggregator.clone() methods (#6437)

* Remove Aggregator.clone() methods

* Remove CardinalityAggregator.name",2018-10-10T13:07:56Z
d559dfecb2c9a94931b5b2fac16c67c4b378c308,replace deprecated druid.port by druid.plaintextPort in docs (#6427),2018-10-09T17:57:01Z
9343cbc63aa006a1dadaab2e530e3321ee9e29f9,"Fix CompactionTask to consider only latest segments (#6429)

* CompactionTask should consider only latest segments

* fix test",2018-10-09T04:53:16Z
af9efdbedfa00410ede691a98daea387c8b79912,"HttpPostEmitterMonitor: don't emit maxTime and minTime if no times were recorded (#6418)

* HttpPostEmitterMonitor: don't emit maxTime and minTime if no times were recorded

* Don't emit sum and count if none

* Remove outdated comments",2018-10-08T20:11:42Z
2b76d573471261bc2f4bee658bef9cc1709dde90,"Fail compactionTask if it fails to run one of indexTaskSpecs (#6428)

* Fail compactionTask if it fails to run one of indexTaskSpecs

* add log",2018-10-08T15:53:32Z
88d23b77b70cb7fb314fecf118f65f01d8fcdc79,"Add support keepSegmentGranularity for automatic compaction (#6407)

* Add support keepSegmentGranularity for automatic compaction

* skip unknown dataSource

* ignore single semgnet to compact

* add doc

* address comments

* address comment",2018-10-07T23:48:58Z
45aa51a00c642a501834e2dfe54d68cbab8e0464,"Add support hash partitioning by a subset of dimensions to indexTask (#6326)

* Add support hash partitioning by a subset of dimensions to indexTask

* add doc

* fix style

* fix test

* fix doc

* fix build",2018-10-06T23:45:07Z
c5872bef410e9b004775acb5cfaac9d6d083dcb3,Improve GC metrics documentation (#6423),2018-10-05T21:57:01Z
1c4f787ed4bc435dac1bce1381a85b7c0d955ba9,"Upgrade Netty to 4.1.x (#6417)

* Update netty to 4.1.30.Final

* Fix compile time problems with new netty

* Remove netty-all from rocketmq extension",2018-10-05T19:30:00Z
868ebfaca087f7c9018996d81fa321b523e8dc06,Handle case when ignoreInvalidRows is null (#6420),2018-10-05T18:03:37Z
c7ac8785a11bfb4d50237abefac93a8553216174,"Prevent failed KafkaConsumer creation from blocking overlord startup (#6383)

* Prevent failed KafkaConsumer creation from blocking overlord startup

* PR comments

* Fix random task ID length

* Adjust test timer

* Use Integer.SIZE",2018-10-04T02:08:20Z
0b8085aff77d215995da994eb2d86676fdb50911,"Prohibit jackson ObjectMapper#reader methods which are deprecated (#6386)

* Prohibit jackson ObjectMapper#reader methods which are deprecated

* address comments",2018-10-03T20:55:20Z
3ae563263a23000560749071d262727d47296856,"Renamed 'Generic Column' -> 'Numeric Column'; Fixed a few resource leaks in processing; misc refinements (#5957)

This PR accumulates many refactorings and small improvements that I did while preparing the next change set of https://github.com/druid-io/druid/projects/2. I finally decided to make them a separate PR to minimize the volume of the main PR.

Some of the changes:
 - Renamed confusing ""Generic Column"" term to ""Numeric Column"" (what it actually implies) in many class names.
 - Generified `ComplexMetricExtractor`",2018-10-02T17:50:22Z
244046fda5efb72d18044577c8ce7d741ac58df3,"SQL: Fix too-long headers in http responses. (#6411)

Fixes #6409 by moving column name info from HTTP headers into the
result body.",2018-10-02T01:13:08Z
42e5385e566a7bfb6e00c835b77eb7020d19d8ce,"make 0.13 tasks API backwards compatible with 0.12  (#6333) (#6334)

* Replace statusCode with status (#6333)

Also changed runnerStatusCode to runnerStatus to keep things consistent

* Add unit test

* Add status param to TaskStatusPlus

Revert to statusCode and runnerStatusCode

* Add additional status member to TaskStatusPlus

* Change TaskResponseObject to match overlord's response object

* Address PR comments

* address comments

* Add runtime exception after logging error

* Remove (deprecated)status member variable from TaskStatusPlus

* Minor change",2018-10-01T22:33:24Z
cb14a4303850ef0920e77971b201ddc8bdccb260,"Remove ConvertSegmentTask, HadoopConverterTask, and ConvertSegmentBackwardsCompatibleTask (#6393)

* Remove ConvertSegmentTask, HadoopConverterTask, and ConvertSegmentBackwardsCompatibleTask

* update doc and remove auto conversion

* remove remaining doc

* fix teamcity",2018-10-01T19:03:35Z
6e878249a040b502082f9393ccfdde3113755561,"ITTLSTest: Retry on ""Connection reset by peer"". (#6406)

* ITTLSTest: Retry on ""Connection reset by peer"".

This sometimes happens and causes tests to fail spuriously.

* Better error messages when retries are exhausted.",2018-09-30T19:30:10Z
9fa4afdb8ec1bd1881b30076e4e2a503418e5386,"URL encode datasources, task ids, authenticator names. (#5938)

* URL encode datasources, task ids, authenticator names.

* Fix URL encoding for router forwarding servlets.

* Fix log-with-offset API.

* Fix test.

* Test adjustments.

* Task client fixes.

* Remove unused import.",2018-09-30T19:29:51Z
3548396a45ec90dfe1db2a0ba3fc5b56fdd1861f,"SQL: Update to Calcite 1.17.0. (#6404)

* SQL: Update to Calcite 1.17.0.

Other than keeping things fresh, another motivation is that
this fixes CALCITE-1436 (AggregateNode NPE for aggregators other
than SUM/COUNT), which affects aggregate functions on our system
tables.

Also sets shouldConvertRaggedUnionTypesToVarying = true, a new
type system parameter that prefers VARCHAR over CHAR. This is
better for Druid, because we don't really have support for a
true CHAR type.

* Remove unused import.",2018-09-30T01:33:29Z
a56ffe6ab283cf86c766c683b3842cb368661034,"Added backpressure metric to docs and defaultMetricDimensions (#6405)

* Added backpressure metric to docs and defaultMetricDimensions.json

* Reworded description for backpressure metric in docs",2018-09-30T00:57:29Z
5a894f830b6d0dd7630bdab87a9fe0fd0237c704,"Added backpressure metric (#6335)

* Added backpressure metric

* Updated channelReadable to AtomicBoolean and fixed broken test

* Moved backpressure metric logic to NettyHttpClient

* Fix placement of calculating backPressureDuration",2018-09-29T21:24:04Z
f09e718c6813c866591501236285166655c85bf8,"Implement MapVirtualColumn.makeDimensionSelector properly (#6396)

* Implement MapVirtualColumn.makeDimensionSelector properly

* address comments",2018-09-29T21:13:05Z
3922582d8c53b2c82adc83d3cc5468b41595dbfb,"SQL: Fix too-strict check in SortProject. (#6403)

The ""Duplicate field name"" check on inputRowSignature is too strict:
it is actually fine for a row signature to have the same field name
twice. It happens when the same expression is selected twice, and
both selections map to the same Druid object (dimension, aggregator,
etc).

I did not succeed in writing a test that triggers this, but I did see
it occur in production for a complex query with hundreds of aggregators.",2018-09-29T20:54:34Z
63ba7f7bece496c23fe995733d0b3a5ad7e229ad,overlord check task whether is present before get lock (#6308),2018-09-28T23:57:40Z
122caec7b187820a0a7fc89e85eb8216dd57df21,"Add support targetCompactionSizeBytes for compactionTask (#6203)

* Add support targetCompactionSizeBytes for compactionTask

* fix test

* fix a bug in keepSegmentGranularity

* fix wrong noinspection comment

* address comments",2018-09-28T18:16:35Z
6f44e568db6cb6626c726c69459e55cc2315c237,Add missing comma (#6399),2018-09-28T16:02:36Z
13bbbbf6082e9f455c6466aaec140beefa023145,Fix issue that forbidden-api check prevents building individual modules (#6394),2018-09-27T18:25:10Z
47a6cca01343e4a671e588afbfbbb6901cd46a50,Add TimestampSpec format for microsecond (#6395),2018-09-27T16:38:44Z
aef022de98bc350231af38c7ce6959b7a61b5320,Fix race in taskMaster (#6388),2018-09-27T04:48:02Z
fc1d5795c12a33e6228bfe3cdcefb8388a9a6d3e,remove wikipedia irc firehose and dependencies from core server module to examples (#6391),2018-09-27T04:46:37Z
993bc5e9d3e46f07139b00270875824e8980f963,"Fix Kafka Indexing Service notice handle thread may never terminate (#6337)

* Fix Kafka Indexing Service notice handle thread may never terminate

* address comment

* handle null value",2018-09-27T03:09:53Z
faf3f1e426ef9cda2e584c78c13e9e93c92630a0,Fix cache keys of DefaultDimensionSpec and ExtractionDimensionSpec (#6390),2018-09-27T03:08:53Z
00ea8c00acf61a9c189ac01ed20febfac9974925,using Entry directly instead of Map.Entry in KafkaSupervisor (#6291),2018-09-27T02:01:36Z
6fb503c07360bec4a09cef88ae7ccb4cb87aaed0,"Deprecate task audit logging (#6368)

* Deprecate task audit logging

* fix test

* fix it test",2018-09-26T23:28:02Z
c9d281a2e9e47d763785bb1273f165bd4e820e0f,"Add ability to pass in Bloom filter from Hive Queries (#6222)

* Bloom filter initial implementation

fix checkstyle

review comments

Fix wierd failure

review comments

Revert ""Fix wierd failure""

This reverts commit a13a83ad7887e679f6d539191b52aeaaea85b613.

* fix test

* review comment",2018-09-26T23:04:26Z
0f2dfe6fe8e21fca39a73b71c7fbba86c4158086,"fix issue with parsing 'date' columns with druid-orc-extensions (#6380)

* fix issue with parsing date columns with druid-orc-extensions

* stuff

* fix forbidden api",2018-09-26T20:18:15Z
6a909c85d02277337ae095f36c002d968eee7c5d,Fix TLS IT for docker-machine (#6379),2018-09-26T19:59:05Z
6843cbba1ddce00c1f81e08477f4ec8ca3742110,"Fix issue that the forbidden-apis check do not always work (#6371)

* Fix the forbidden apis check do not work issue

* use SuppressForbidden annotation",2018-09-26T16:39:39Z
8978d3751b9fbc0fdc304368feec8d39dd7308b9,Don't convert DruidServer to ImmutableDruidServers multiple times in CoordinatorHistoricalManagerRunnable (#6385),2018-09-26T16:14:14Z
a92a20e037a7c31b3268b0ee3cf5b4ecd678ec4c,"Fix indexes introduced in #6348. (#6356)

The indexes introduced in #6348 were on the wrong table. The tests
did not catch them due to retries on the create table steps (the
first try created the table but not the bogus indexes; the second
try noticed that the table already existed and did nothing). This
patch doesn't fix the issue with the tests, since the best way to
do that would be to do the table and index creation in a
transaction; but, this is not supported by all of our supported
database engines.",2018-09-26T03:49:13Z
034d006d24cbdc2352731bfd7a92c9b26e175c59,add to docs on including Drop rule with Load rule (#6378),2018-09-26T03:13:52Z
207dd3a0eeee8ef461626462e0150d6e67e5e3b5,Reduce travis license check log output (#6382),2018-09-26T03:02:00Z
4afa85e4e8e1c1b08d8bacc92b1c9de1faddbf25,"Move the Rat plugin to a separate Maven profile (#6376)

* Move the Rat plugin to a separate Maven profile

* Revert self-check",2018-09-25T21:39:24Z
0da042cdd9ba3bf8a497b7ba04f066ffef418082,"SQL: Unwrap IS_TRUE, IS_FALSE and friends when building a filter. (#6374)

* SQL: Unwrap IS_TRUE, IS_FALSE and friends when building a filter.

* Fix test.",2018-09-25T17:37:02Z
e5d9fcfe8f9a3655af415d56c0e3844dcc349dc9,"Add maven.exec.xxx.skip option for exec-maven-plugin (#6162)

* Fix conflicts

* Modify io.druid into org.apache.druid",2018-09-25T17:05:26Z
d08c2c5eba637d4288b96bf0be5fdb0a31b77f9e,Make JvmThreadsMonitor injectable (#6369),2018-09-25T03:41:17Z
99428e20d210bb70cd28fe146ccb572fd036bafc,"Deprecate dimensions / metrics APIs on brokers (#6361)

* Deprecate dimensions / metrics APIs on brokers

* add segmentMetadataQuery link

* add more doc",2018-09-25T00:56:38Z
ee7b565469c57e02a3f87855eec34253e023f2e3,Docs for ingestion stat reports and new parse exception handling (#6373),2018-09-25T00:45:05Z
00b0a156e9b26a903e708bfaa6364abbfc0100dd,"Tweak isInvalidRows behavior in HadoopTuningConfig (#6339)

* Tweak isInvalidRows behavior in HadoopTuningConfig

* Fix tests",2018-09-24T23:13:13Z
93345064b5200709aeb950d0b7ec5117ffec5342,"HllSketch module (#5712)

* HllSketch module

* updated license and imports

* updated package name

* implemented makeAggregateCombiner()

* removed json marks

* style fix

* added module

* removed unnecessary import, side effect of package renaming

* use TreadLocalRandom

* addressing code review points, mostly formatting and comments

* javadoc

* natural order with nulls

* typo

* factored out raw input value extraction

* singleton

* style fix

* style fix

* use Collections.singletonList instead of Arrays.asList

* suppress warning",2018-09-24T15:41:56Z
9a3195e98c265c81413747df351d30b9811bbbde,"Improve interning in SQLMetadataSegmentManager (#6357)

* Improve interning in SQLMetadataSegmentManager

* typo",2018-09-22T20:23:30Z
364bf9d1f98114f3ae30e420ba593c67bc9504fa,"Fix non org.apache.druid files and add package name checkstyle rule (#6367)

* Fix non org.apache.druid files and add package name checkstyle rule

* PR comment",2018-09-22T00:58:19Z
399a5659b238ffd0660a98fb5ea7980ccc7b8ab2,"fix incorrect precondition check in `SupervisorManager.suspendOrResumeSupervisor` (#6364)

This check is reverse from the intention",2018-09-22T00:40:14Z
f12ffd19a860a714fdc0a6f173ec8aea5dc44ddd,Add Kafka reset instructions for tutorial (#6362),2018-09-21T21:18:31Z
255214cbe6f7f16d677ef9469a4dc84d03bc9bc4,correct variable name in KafkaSupervisor (#6354),2018-09-20T23:22:03Z
e1c649e90683a5b49648522d4c7e0ff1088f1efd,"Add metadata indexes to help with segment allocation. (#6348)

Segment allocation queries can take a long time (10s of seconds) when
you have a lot of segments. Adding these indexes helps greatly.",2018-09-19T22:54:13Z
8972244c6817cf8e0276a7904776103e172e6be3,"Mutual TLS support (#6076)

* Mutual TLS support

* Kafka test fixes

* TeamCity fix

* Split integration tests

* Use localhost DOCKER_IP

* Increase server thread count

* Increase SSL handshake timeouts

* Add broken pipe retries, use injected client config params

* PR comments, Rat license check exclusion",2018-09-19T16:56:15Z
4fafc2ccc986b8cae84b8819675f145a731d9a9f,"fixes race condition in kafkasupervisor (#6304)

* fixes race condition in kafkasupervisor

* async verify checkpoints

* fixes race condition in kafkasupervisor

* replace commonly used methods with variables

* remove countdownlatch import

* reformat

* fixes",2018-09-19T05:37:22Z
2e82edc5e0bfa6f8912900978166be5332ec3b60,More exclusions for Rat license check (#6346),2018-09-19T03:47:56Z
028354eea8871f66dc5d0b446602fb6efa703d7e,"Adding licenses and enable apache-rat-plugin. (#6215)

* Adding licenses and enable apache-rat-plugi.

Change-Id: I4685a2d9f1e147855dba69329b286f2d5bee3c18

* restore the copywrite of demo_table and add it to the list of allowed ones

Change-Id: I2a9efde6f4b984bc1ac90483e90d98e71f818a14

* revirew comments

Change-Id: I0256c930b7f9a5bb09b44b5e7a149e6ec48cb0ca

* more fixup

Change-Id: I1355e8a2549e76cd44487abec142be79bec59de2

* align

Change-Id: I70bc47ecb577bdf6b91639dd91b6f5642aa6b02f",2018-09-18T15:39:26Z
609da018827697b7ae5ce6cc464762041e9a865e,"Fix dictionary ID race condition in IncrementalIndexStorageAdapter (#6340)

Possibly related to https://github.com/apache/incubator-druid/issues/4937

--------

There is currently a race condition in IncrementalIndexStorageAdapter that can lead to exceptions like the following, when running queries with filters on String dimensions that hit realtime tasks: 

```
org.apache.druid.java.util.common.ISE: id[5] >= maxId[5]
	at org.apache.druid.segment.StringDimensionIndexer$1IndexerDimensionSelector.lookupName(StringDimensionIndexer.java:591)
	at org.apache.druid.segment.StringDimensionIndexer$1IndexerDimensionSelector$2.matches(StringDimensionIndexer.java:562)
	at org.apache.druid.segment.incremental.IncrementalIndexStorageAdapter$IncrementalIndexCursor.advance(IncrementalIndexStorageAdapter.java:284)
```

When the `filterMatcher` is created in the constructor of `IncrementalIndexStorageAdapter.IncrementalIndexCursor`, `StringDimensionIndexer.makeDimensionSelector` gets called eventually, which calls:

```
final int maxId = getCardinality();
...

 @Override
  public int getCardinality()
  {
    return dimLookup.size();
  }
```

So `maxId` is set to the size of the dictionary at the time that the `filterMatcher` is created.

However, the `maxRowIndex` which is meant to prevent the Cursor from returning rows that were added after the Cursor was created (see https://github.com/apache/incubator-druid/pull/4049) is set after the `filterMatcher` is created.

If rows with new dictionary values are added after the `filterMatcher` is created but before `maxRowIndex` is set, then it is possible for the Cursor to return rows that contain the new values, which will have `id >= maxId`.

This PR sets `maxRowIndex` before creating the `filterMatcher` to prevent rows with unknown dictionary IDs from being passed to the `filterMatcher`.

-----------

The included test triggers the error with a custom Filter + DruidPredicateFactory.

The DimensionSelector for predicate-based filter matching is created here in `Filters.makeValueMatcher`:

```
  public static ValueMatcher makeValueMatcher(
      final ColumnSelectorFactory columnSelectorFactory,
      final String columnName,
      final DruidPredicateFactory predicateFactory
  )
  {
    final ColumnCapabilities capabilities = columnSelectorFactory.getColumnCapabilities(columnName);

    // This should be folded into the ValueMatcherColumnSelectorStrategy once that can handle LONG typed columns.
    if (capabilities != null && capabilities.getType() == ValueType.LONG) {
      return getLongPredicateMatcher(
          columnSelectorFactory.makeColumnValueSelector(columnName),
          predicateFactory.makeLongPredicate()
      );
    }

    final ColumnSelectorPlus<ValueMatcherColumnSelectorStrategy> selector =
        DimensionHandlerUtils.createColumnSelectorPlus(
            ValueMatcherColumnSelectorStrategyFactory.instance(),
            DefaultDimensionSpec.of(columnName),
            columnSelectorFactory
        );

    return selector.getColumnSelectorStrategy().makeValueMatcher(selector.getSelector(), predicateFactory);
  }
```

The test Filter adds a row to the IncrementalIndex in the test when the predicateFactory creates a new String predicate, after `DimensionHandlerUtils.createColumnSelectorPlus` is called.",2018-09-18T06:43:29Z
edf0c13807e7d65db458215feab500fc4c42bd8e,"add a sql option to force user to specify time condition (#6246)

* add a sql option to force user to specify time condition

* rename forceTimeCondition to requireTimeCondition, refine error message",2018-09-17T20:52:24Z
2fac6743d49574a6243f823cfddfe8add1124fea,Add maxIdleTime option to EventReceiverFirehose (#5997),2018-09-17T20:50:56Z
dabaf4caf8f1a5b62df27bdc7b777c68bde10bc3,fix NoClassDefFoundError when using SysMonitor (#6300),2018-09-14T21:47:15Z
0c4bd2b57b19bcbd9a275fad412960aa0a39ca5f,"Prohibit some Random usage patterns (#6226)

* Prohibit Random usage patterns

* Fix FlattenJSONBenchmarkUtil",2018-09-14T20:35:51Z
288aa4d504fe997fde6d73e57f32921c95f390ea,"Add missing metadata table information in docs (#6309)

* Add missing metadata table information in doc file

* address review comment",2018-09-14T19:17:05Z
85391e9fb3cef355dacbbf5c443773fb7aab445a,"fix opentsdb emitter always be running  and fail sending tags whose value contains colon (#6251)

* fix opentsdb emitter always be running

* check if emitter started

* add more details about consumeDelay in doc

* fix possible thread unsafe

* fix fail sending tags whose value contain colon",2018-09-14T19:14:15Z
87ccee05f76e983874b41090f2b0a6fe1cf4b8dd,"Add ability to specify list of task ports and port range (#6263)

* support specify list of task ports

* fix typos

* address comments

* remove druid.indexer.runner.separateIngestionEndpoint config

* tweak doc

* fix doc

* code cleanup

* keep some useful comments",2018-09-14T02:36:04Z
d50b69e6d4c29913de4d670b05523a719dbfd97f,"Prohibit LinkedList (#6112)

* Prohibit LinkedList

* Fix tests

* Fix

* Remove unused import",2018-09-14T01:07:06Z
fd6786ac6c79cc414e55d23797fb316b7f9fb5f2,Fix endpoint permissions section in basic-security docs (#6331),2018-09-13T22:23:41Z
91a37c692dd8db34d6e4323cd61dba38a00145b1,"'suspend' and 'resume' support for supervisors (kafka indexing service, materialized views) (#6234)

* 'suspend' and 'resume' support for kafka indexing service
changes:
* introduces `SuspendableSupervisorSpec` interface to describe supervisors which support suspend/resume functionality controlled through the `SupervisorManager`, which will gracefully shutdown the supervisor and it's tasks, update it's `SupervisorSpec` with either a suspended or running state, and update with the toggled spec. Spec updates are provided by `SuspendableSupervisorSpec.createSuspendedSpec` and `SuspendableSupervisorSpec.createRunningSpec` respectively.
* `KafkaSupervisorSpec` extends `SuspendableSupervisorSpec` and now supports suspend/resume functionality. The difference in behavior between 'running' and 'suspended' state is whether the supervisor will attempt to ensure that indexing tasks are or are not running respectively. Behavior is identical otherwise.
* `SupervisorResource` now provides `/druid/indexer/v1/supervisor/{id}/suspend` and `/druid/indexer/v1/supervisor/{id}/resume` which are used to suspend/resume suspendable supervisors
* Deprecated `/druid/indexer/v1/supervisor/{id}/shutdown` and moved it's functionality to `/druid/indexer/v1/supervisor/{id}/terminate` since 'shutdown' is ambiguous verbage for something that effectively stops a supervisor forever
* Added ability to get all supervisor specs from `/druid/indexer/v1/supervisor` by supplying the 'full' query parameter `/druid/indexer/v1/supervisor?full` which will return a list of json objects of the form `{""id"":<id>, ""spec"":<SupervisorSpec>}`
* Updated overlord console ui to enable suspend/resume, and changed 'shutdown' to 'terminate'

* move overlord console status to own column in supervisor table so does not look like garbage

* spacing

* padding

* other kind of spacing

* fix rebase fail

* fix more better

* all supervisors now suspendable, updated materialized view supervisor to support suspend, more tests

* fix log",2018-09-13T21:42:18Z
96a1076e238910e680669d4f7ff91186cfd6ae45,"allow 3 retries for failing tests (#6324)

* allow 1 retry for failing tests idk if this is a good idea, but false failure rate due to flaky tests seems pretty bad lately

* try to fix retry issue with teardown

* Update pom.xml

* Update pom.xml",2018-09-12T02:16:59Z
7f3a0dae285c6736952e555abad62d22f914283b,"ParseSpec: Remove default setting. (#6310)

* ParseSpec: Remove default setting.

Having a default ParseSpec implementation is bad for users, because it masks
problems specifying the format. Two common problems masked by this are specifying
the ""format"" at the wrong level of the JSON, and specifying a format that
Druid doesn't support. In both cases, having a default implementation means that
users will get the delimited parser rather than an error, and then be confused
when, later on, their data failed to parse.

* Fix integration tests.",2018-09-12T02:16:19Z
d6cbdf86c2e01a2bfbecb2263f7aad62bbbda5e2,"Broker backpressure. (#6313)

* Broker backpressure.

Adds a new property ""druid.broker.http.maxQueuedBytes"" and a new context
parameter ""maxQueuedBytes"". Both represent a maximum number of bytes queued
per query before exerting backpressure on the channel to the data server.

Fixes #4933.

* Fix query context doc.",2018-09-10T16:33:29Z
4669f0878fb91b0392bc46b898874fa348c51fb4,"SQL: UNION ALL operator. (#6314)

* SQL: UNION ALL operator.

* Remove unused import.",2018-09-10T05:32:56Z
e6e068ce60a073700701dd2a7b2b59218d59a2c3,"Add support for 'maxTotalRows' to incremental publishing kafka indexing task and appenderator based realtime task (#6129)

* resolves #5898 by adding maxTotalRows to incremental publishing kafka index task and appenderator based realtime indexing task, as available in IndexTask

* address review comments

* changes due to review

* merge fail",2018-09-07T20:17:49Z
e095f63e8e8c603310a31499ed30d117e8082d86,fix coordinator console loading (#6276),2018-09-06T23:59:51Z
60cbc644727271eed0cbf7c85583a0c84973f01e,"Use PasswordProvider, fix info on initial passwords in basic security extension docs (#6303)

* Fix info on initial passwords in basic security extension docs

* Use PasswordProvider

* Compile fix",2018-09-06T00:07:16Z
d61f708ef55322f9905cbfceaa9b6e1e49eb8174,"make COMPLEX column optionally filterable in Druid code (#6223)

* make COMPLEX column filterable in Druid code

* Revert ""make COMPLEX column filterable in Druid code""

This reverts commit 9fc6ec768c6aed503b7cdf47da5622c044082642.

* complex columns can be optionally made filterable

* some types are always filterable

* add ColumnCapabilitiesImpl serde tests

* add SuppresedWarnings annotation",2018-09-05T19:28:49Z
be6c901114757f200982956eae7fca08e9dea110,"Like filter: Fix escapes escaping themselves. (#6295)

Escapes should escape themselves.",2018-09-05T16:29:07Z
4caa61d8fa4f901c22f464515161d57efa215a45,"Fix tutorial sample data filename, fix logger classname in metrics docs (#6299)",2018-09-05T04:47:12Z
84810f6358d07f2bb7c58fac3d00e4960c3600d0,correct metric name in emitter configuration files (#6290),2018-09-04T21:23:04Z
71ac3ada214d1094672b0432a8b61515e288baa0,Fix link related to metadata storage (#6294),2018-09-04T21:20:57Z
10ca290d64144d201bf5ec2479e74e8f7d2b4db0,"Correct file name typo in Quickstart tutorial (#6297)

Correct name wikipedia-2015-09-12-sampled.json.gz to wikiticker-2015-09-12-sampled.json.gz",2018-09-04T21:20:17Z
180e3ccfadc298d3b3ddd16576a1e80b8446a2dd,Docs consistency cleanup (#6259),2018-09-04T19:54:41Z
743547fc3bbe6dd68a2df3af46cf8c604458f6b0,Unauthorized sql request should return 403 (#6279),2018-09-01T16:17:18Z
d0fb83760eefdf9269dd0e81ca83bbf52fb139d9,Fix PostgreSQLConnectorConfig binding (#6273),2018-08-31T21:18:29Z
951b36e2bc7caed992a263a5e1289414b12b39da,BytesFullResponseHandler should only consume readableBytes of ChannelBuffer (#6270),2018-08-31T03:22:08Z
9b04846e6b6b7320ad93024c8c0c10c2dbbbbd81,correct metric name in doc file (#6271),2018-08-30T17:57:35Z
431d3d8497f9079857c3baa7ae7ab4cb44a22355,"Rename io.druid to org.apache.druid. (#6266)

* Rename io.druid to org.apache.druid.

* Fix META-INF files and remove some benchmark results.

* MonitorsConfig update for metrics package migration.

* Reorder some dimensions in inner queries for some reason.

* Fix protobuf tests.",2018-08-30T16:56:26Z
1fae6513e1816c9c9d1195a0d2b3deef38c30c70,"add ""subtotalsSpec"" attribute to groupBy query (#5280)

* add subtotalsSpec attribute to groupBy query

* dont sent subtotalsSpec to downstream nodes from broker and other updates

* address review comment

* fix checkstyle issues after merge to master

* add docs for subtotalsSpec feature

* address doc review comments",2018-08-29T00:46:38Z
fcf8c8d53c6920a6dac6690594a7547663ffa2e5,RowBasedKeySerde should use empty dictionary in constructor (#6256),2018-08-29T00:22:18Z
c9a27e3e8e3ad4dc3a67037daa95677b4d3bae2e,Don't let catch/finally suppress main exception in IncrementalPublishingKafkaIndexTaskRunner (#6258),2018-08-28T23:12:02Z
80224df36a23e3400c4f0a223df2de5a89c12fba,"SQL: Fix post-aggregator naming logic for sort-project. (#6250)

The old code assumes that post-aggregator prefixes are one character
long followed by numbers. This isn't always true (we may pad with
underscores to avoid conflicts). Instead, the new code uses a different
base prefix for sort-project postaggregators (""s"" instead of ""p"") and
uses the usual Calcites.findUnusedPrefix function to avoid conflicts.",2018-08-28T17:59:32Z
a879022bc8596b02b07dc44127c393990e08dcbe,fix AssertionError of semi join query (#6244),2018-08-28T00:49:51Z
d957295b9822dad30b045b58df6c988928c028fb,spelling: storage (#6248),2018-08-27T23:35:31Z
2325844a389ef3b917eecd4a6e89799b6f367555,fix incorrect check of maxSemiJoinRowsInMemory (#6242),2018-08-27T23:28:29Z
4a8b09b6a9605e549bc122616a2290e1fe89ae05,"Fix NPE on constant null numeric expressions. (#6232)

The bug was caused by makeExprEvalSelector returning a null object, which
it isn't supposed to do. Fixed this by renaming ConstantColumnValueSelector
to ConstantExprEvalSelector (it was only used for ExprEval anyway) and
putting logic in that class to make sure the selectors behave as expected.",2018-08-27T22:30:56Z
71c1a70ff679b71ca08a0788c19462764d128734,"FilteredBufferAggregator: Fix missing relocate, isNull methods. (#6233)",2018-08-27T22:30:45Z
157e75a1fe2213d2dcf51d3f36ece10f43f54df8,"Minor followup to #6220. (#6231)

Adjustments to comments and usage of generics.",2018-08-27T17:01:44Z
bda5a8a95e9ccc68221e0d689d27e6c81c3924f4,"Fix NPE in KafkaSupervisor.checkpointTaskGroup (#6206)

* Fix NPE in KafkaSupervisor.checkpointTaskGroup

* address comments

* address comment",2018-08-27T05:23:33Z
0172326c62bed0a342d6c147af08ce598016ff91,"SQL: Support more result formats, add columns header. (#6191)

* SQL: Support more result formats, add columns header.

- Add result formats for line-based JSON and CSV.
- Add X-Druid-Sql-Columns header with a list of all columns that
the response will contain.
- Add more comprehensive documentation on what callers should expect
when making Druid SQL queries.

* Fix some tests.

* Adjust tests.

* Adjust trailer, add types header.

* Fix trailers.",2018-08-27T05:00:14Z
64d33eef7e85e39907cbfa94517f6aecf6288023,"Fix timeout in KafkaSupervisorTest.testCheckpointForInactiveTaskGroup (#6207)

* Fix timeout in KafkaSupervisorTest.testCheckpointForInactiveTaskGroup

* fix npe

* add taskRunner.getRunningTasks()",2018-08-27T01:59:01Z
cb40b6d369006071fe9c11d47e6e1639785c321c,"Fix all inspection errors currently reported. (#6236)

* Fix all inspection errors currently reported.

TeamCity builds on master are reporting inspection errors, possibly
because there was a while where it was not running due to the Apache
migration, and there was some drift.

* Fix one more location.

* Fix tests.

* Another fix.",2018-08-27T00:36:01Z
ef91fdbf038b1cd1f549e63f149a6829bbe6cfba,Zstandard decompression support (#6224),2018-08-26T23:09:24Z
23ba6f7ad7dc92903567a8458994e9d8731621cf,"Fix four bugs with numeric dimension output types. (#6220)

* Fix four bugs with numeric dimension output types.

This patch includes the following bug fixes:

- TopNColumnSelectorStrategyFactory: Cast dimension values to the output type
  during dimExtractionScanAndAggregate instead of updateDimExtractionResults.
  This fixes a bug where, for example, grouping on doubles-cast-to-longs would
  fail to merge two doubles that should have been combined into the same long value.
- TopNQueryEngine: Use DimExtractionTopNAlgorithm when treating string columns
  as numeric dimensions. This fixes a similar bug: grouping on string-cast-to-long
  would fail to merge two strings that should have been combined.
- GroupByQuery: Cast numeric types to the expected output type before comparing them
  in compareDimsForLimitPushDown. This fixes #6123.
- GroupByQueryQueryToolChest: Convert Jackson-deserialized dimension values into
  the proper output type. This fixes an inconsistency between results that came
  from cache vs. not-cache: for example, Jackson sometimes deserializes integers
  as Integers and sometimes as Longs.

And the following code-cleanup changes, related to the fixes above:

- DimensionHandlerUtils: Introduce convertObjectToType, compareObjectsAsType,
  and converterFromTypeToType to make it easier to handle casting operations.
- TopN in general: Rename various ""dimName"" variables to ""dimValue"" where they
  actually represent dimension values. The old names were confusing.

* Remove unused imports.",2018-08-25T21:31:46Z
c3aaf8122d658fce578e75ccbba18f7c74b8114f,"fix TaskQueue-HRTR deadlock (#6212)

* fix TaskQueue-HRTR deadlock causing https://github.com/apache/incubator-druid/issues/6201

* address review comments",2018-08-25T21:15:57Z
28e6ae3664b02b17ee691968469905f8df5a8e28,"SQL: Finalize aggregations for inner queries when necessary. (#6221)

* SQL: Finalize aggregations for inner queries when necessary.

Fixes #5779.

* Fixed test method name.",2018-08-25T20:56:23Z
9803ce954ac42e9330f6de4a5497a0adfb44dc5e,fix port conflict for druid peon (#6202),2018-08-24T02:05:14Z
ddb26f2696be8db05c240cac34d6b1b98cb26fdf,do not ignore ms in ruby time (#6217),2018-08-23T21:09:31Z
6e73ad6231134903ddc45edc680231bc3ddb797e,"Fix bound query keys for Filtering on numeric values (#5881)

It is currently showing the use of `lowerBound` and `upperBound` instead of `lower` and `upper` for the range.",2018-08-23T21:07:10Z
ceb8f8e6258e1d113d8162a9a8a2fc62810704eb,remove unnecessary tlsPortFinder to avoid potential port conflicts (#6194),2018-08-23T17:41:49Z
a76bf9ab2ac773c6a80814f9deec57bbe287558c,add ability to do optional rollup in AggregationTestHelper (#6213),2018-08-22T23:38:36Z
83c25ca3bd4d1dea216b85e17a7e86b43c4c6bef,Fix running Overlord inside Coordinator (#6195),2018-08-22T22:50:06Z
9c500fb69ff11464f595491cd2c2967828f30ca9,"Add PostgreSQLConnectorConfig to expose SSL configuration options (#6181)

* Add PostgreSQLConnectorConfig to expose SSL configuration options for the Postgres Metadata Storage module.

* Fix checkstyle violations and add license header

* Convert properties in the postgres docs to be the full property path and fix typo

* Fix grammar in sslFactory docs",2018-08-21T23:45:27Z
3647d4c94ad52ba16ae9ab9ee583dad355f21fd2,"Make time-related variables more readable (#6158)

* Make time-related variables more readable

* Patch some improvements from the code reviewer

* Remove unnecessary boxing of Long type variables",2018-08-21T22:29:40Z
266f3dfbcbbd349c89ab77f673fe792a62c490a0,remove duplicate link to operations/recommendations.html (#6193),2018-08-21T19:02:43Z
7d4b2d51e8332f4fe139a9ca47bd61ff9a1c2fe2,Fix assertionError at testCheckpointForInactiveTaskGroup in KafkaSupervisorTest (#6192),2018-08-21T18:33:45Z
2bfe1b6a5a666f925ea1cc1781ea55bafaeeb3c5,"Fix NPE for taskGroupId when rolling update (#6168)

* Fix NPE for taskGroupId

* missing changes

* fix wrong annotation

* fix potential race

* keep baseSequenceName

* make deprecated old param",2018-08-17T17:15:45Z
78fc5b246c30c12d247b85daff0f54e67cab2ce6,trigger clean dir when unzip fails with IOException (#6178),2018-08-17T17:15:10Z
b0cf8d02525ee9324de3844c5273b96af6019361,"'shutdownAllTasks' API for a dataSource (#6185)

* 'shutdownAllTasks' API for a dataSource

Change-Id: I30d14390457d39e0427d23a48f4f224223dc5777

* fix api path and return

Change-Id: Ib463f31ee2c4cb168cf2697f149be845b57c42e5

* optimize implementation

Change-Id: I50a8dcd44dd9d36c9ecbfa78e103eb9bff32eab9",2018-08-17T16:57:09Z
1c8032f9f3715c93e64673cbe6c2ccf5fca8e843,Composite request logger doesn't invoke @LifeCycleStart and @LifeCycleStop methods on its dependencies (#6173),2018-08-17T16:34:25Z
0c3bb4755805822e535e9a7bd3504b9edce949ff,Change hybrid cache default types in docs to caffeine (#6182),2018-08-17T16:17:43Z
4d2ff0f6c74c840c647e5eabd8fc8b910a531d0d,Serde test for JdbcExtractionNamespace. (#6186),2018-08-17T15:54:06Z
62e580050c7e997053a4149a4d5e5f958da7f2b7,"Use JUnit TemporaryFolder rule instead of system temp folder (#6070)

* Use JUnit TemporaryFolder rule instead of system tmp folder

* Allow to forbid apis which present not in all mvn modules",2018-08-16T18:05:45Z
5726692f8fe3228c88be628defce44a281387568,Accept total rows over Integer.MAX_VALUE. (#6080),2018-08-15T21:03:22Z
5ce3185b9cd2704aa86af3348529324292b4a593,"Fix three bugs with segment publishing. (#6155)

* Fix three bugs with segment publishing.

1. In AppenderatorImpl: always use a unique path if requested, even if the segment
   was already pushed. This is important because if we don't do this, it causes
   the issue mentioned in #6124.
2. In IndexerSQLMetadataStorageCoordinator: Fix a bug that could cause it to return
   a ""not published"" result instead of throwing an exception, when there was one
   metadata update failure, followed by some random exception. This is done by
   resetting the AtomicBoolean that tracks what case we're in, each time the
   callback runs.
3. In BaseAppenderatorDriver: Only kill segments if we get an affirmative false
   publish result. Skip killing if we just got some exception. The reason for this
   is that we want to avoid killing segments if they are in an unknown state.

Two other changes to clarify the contracts a bit and hopefully prevent future bugs:

1. Return SegmentPublishResult from TransactionalSegmentPublisher, to make it
more similar to announceHistoricalSegments.
2. Make it explicit, at multiple levels of javadocs, that a ""false"" publish result
must indicate that the publish _definitely_ did not happen. Unknown states must be
exceptions. This helps BaseAppenderatorDriver do the right thing.

* Remove javadoc-only import.

* Updates.

* Fix test.

* Fix tests.",2018-08-15T20:55:53Z
f447b784de282377836a6b07623e9cc14455d648,update sigar link (#6175),2018-08-14T23:58:29Z
8d886e59bfc878cfbbbcd23160a7dd7c44e5fe94,fix compress fail when file size is Integer.MAX_VALUE (#6159),2018-08-14T22:13:47Z
c47032d5662b0f16d20db9e266195ea24d2f3208,"Implemented makeAggregateCombiner() in ArrayOfDoublesSketchAggregatorFactory (#6093)

* implemented makeAggregateCombiner()

* test for makeAggregateCombiner()

* license, style fix",2018-08-13T21:19:11Z
69f555019b878ad62d7299284104a0a6ce0f5a60,"convert all time-intervals in ISO 8601 format to uppercase in doc files (#6118)

Change-Id: I904fed4cfb600a8a42664335557f611133a5078d",2018-08-13T19:58:47Z
94a937b5e88b39d7b9f14ed3df5759c8828380d8,New doc fixes (#6156),2018-08-13T18:11:32Z
a7ca4589ddd66acc95c2b148640ed4f95d962ed9,Fix race in testCheckpointForUnknownTaskGroup() of KafkaSupervisorTest (#6153),2018-08-11T15:26:46Z
da3a1f61ac1f89795ba22321a2ae77f0927941c6,Fix appenderator_realtime creating shards bigger by 1 than maxRowsPerSegment (#6125),2018-08-11T05:29:06Z
ecee3e0a2479eba734f992ca9ea086ecfb9dbaee,"Further optimize memory for Travis jobs (#6150)

* Further optimize memory for Travis jobs

* fix build

* sudo false",2018-08-11T05:03:36Z
bd95b426c9171d4f27b06197a2a3a1cd21ffaac0,"Fix missing exception handling as part of `io.druid.java.util.http.client.netty.HttpClientPipelineFactory` (#6090)

* Fix missing exception handling as part of `io.druid.java.util.http.client.netty.HttpClientPipelineFactory`

* 1. Extends SimpleChannelUpstreamHandler; 2. Remove sendUpstream; 3. Using ExpectedException.

* Add more checks for channel

* Fix missing exception handler in NettyHttpClient and ChannelResourceFactory

* Rename the anonymous class of `SimpleChannelUpstreamHandler` as connectionErrorHandler & use `addLast` instead of `addFirst`

* Remove `removeHandlers()`

* Using expectedException.expect instead of Assert.assertNotNull in testHttpsEchoServer

* Using handshakeFuture.setFailure instead of logger

* Using handshakeFuture.setFailure instead of logger",2018-08-11T00:02:53Z
064c22c93763de8c61306a90b4a56a11af32a819,Fix redirects (#6151),2018-08-10T20:55:48Z
1a37dfdcd17b3ff6078600734c8f61c4fa496291,"Fetch unhandled curator exceptions (#6131)

* fix: stop druid on unhandled curator exceptions

* catch exceptions when stopping lifecycle",2018-08-10T04:47:42Z
b0805540af5d445a014932eed4bfa7786135a2f5,Fix kafka tutorial typo (#6141),2018-08-10T01:41:05Z
af0557c1f73491a88347a1ef65f48357259df5fd,"Unified configuration doc page (#6127)

* Unified configuration doc page

* Rename to index.md, update redirects

* PR comments

* PR comments

* PR comment",2018-08-09T21:52:14Z
fea2ab7094e092a08b0a4c48bb447a6128f0cd94,"New docs intro (#6122)

* New docs intro

* PR comments

* Fix arch diagram

* PR comment

* PR comment

* PR comment",2018-08-09T21:19:11Z
d6a02de5b57ab470cd0efd9cc101440dbfa2a6f3,"Add support 'keepSegmentGranularity' for compactionTask (#6095)

* Add keepSegmentGranularity for compactionTask

* fix build

* createIoConfig method

* fix build

* fix build

* address comments

* fix build",2018-08-09T20:51:20Z
c028d18d74a54a423531ba7cf5c9b98606c1869b,"update redis-cache documentation (#6109)

* update redis-cache documentation

added clarifying info on setup and enablement

* added link",2018-08-09T20:44:59Z
aa660b87515cc66b40899b46a3a83a37459f9e3b,"Add docs for virtual columns and transform specs (#6119)

* Add docs for virtual columns and transform specs

* PR Comments

* PR comment",2018-08-09T20:42:52Z
2b64025eaf0cec3fe2bd4c4a77557cef13e25058,"Separate hadoop and native batch docs more (#6120)

* Separate hadoop and native batch docs more

* Rebase with parallel batch

* PR comments",2018-08-09T20:40:20Z
24f2e8ba26a1577137a6a7ca42f11d3a1fbfd6a5,"New quickstart and tutorials (#6126)

* New quickstart and tutorials

* PR comments

* Fix tranquility",2018-08-09T20:37:52Z
2b0f03acb9a6bbf064f18c662ed9fe8c175edd65,"Unified API doc page (#6128)

* Unified API doc page

* PR comments

* Fix metadata endpoint",2018-08-09T20:27:42Z
c3b7704b50b6d52eb4df813bcd3a55c5cbf8f3b4,"validate non-empty String baseDataSource in MaterializedViewSupervisorSpec, added tests (#6075)",2018-08-08T00:23:10Z
577632f5c1b7e8f454bb0c9e971179296609ef60,Fix missing argument of TaskToolbox (#6121),2018-08-08T00:18:56Z
3525d4059e230b4995b658282fd13f41e8125af5,"Cache: Add maxEntrySize config, make groupBy cacheable by default. (#5108)

* Cache: Add maxEntrySize config.

The idea is this makes it more feasible to cache query types that
can potentially generate large result sets, like groupBy and select,
without fear of writing too much to the cache per query.

Includes a refactor of cache population code in CachingQueryRunner and
CachingClusteredClient, such that they now use the same CachePopulator
interface with two implementations: one for foreground and one for
background.

The main reason for splitting the foreground / background impls is
that the foreground impl can have a more effective implementation of
maxEntrySize. It can stop retaining subvalues for the cache early.

* Add CachePopulatorStats.

* Fix whitespace.

* Fix docs.

* Fix various tests.

* Add tests.

* Fix tests.

* Better tests

* Remove conflict markers.

* Fix licenses.",2018-08-07T17:23:15Z
56ab4363ea30ead876c11b43e1480ff6c0dfd941,"Native parallel batch indexing without shuffle (#5492)

* Native parallel indexing without shuffle

* fix build

* fix ci

* fix ingestion without intervals

* fix retry

* fix retry

* add it test

* use chat handler

* fix build

* add docs

* fix ITUnionQueryTest

* fix failures

* disable metrics reporting

* working

* Fix split of static-s3 firehose

* Add endpoints to supervisor task and a unit test for endpoints

* increase timeout in test

* Added doc

* Address comments

* Fix overlapping locks

* address comments

* Fix static s3 firehose

* Fix test

* fix build

* fix test

* fix typo in docs

* add missing maxBytesInMemory to doc

* address comments

* fix race in test

* fix test

* Rename to ParallelIndexSupervisorTask

* fix teamcity

* address comments

* Fix license

* addressing comments

* addressing comments

* indexTaskClient-based segmentAllocator instead of CountingActionBasedSegmentAllocator

* Fix race in TaskMonitor and move HTTP endpoints to supervisorTask from runner

* Add more javadocs

* use StringUtils.nonStrictFormat for logging

* fix typo and remove unused class

* fix tests

* change package

* fix strict build

* tmp

* Fix overlord api according to the recent change in master

* Fix it test",2018-08-07T06:59:42Z
62677212cc72e3024cb9f1e72455155e5b746d38,"Order rows during incremental index persist when rollup is disabled. (#6107)

* order using IncrementalIndexRowComparator at persist time when rollup is disabled, allowing increased effectiveness of dimension compression, resolves #6066

* fix stuff from review",2018-08-06T21:17:48Z
ef2d6e91184f5116d93cf748c0e2db7b302d7f5b,"Fix IllegalArgumentException in TaskLockBox.syncFromStorage() when updating from 0.12.x to 0.12.2 (#6086)

* Fix TaskLockBox.syncFromStorage() when updating from 0.12.x to 0.12.2

* Make the priority of taskLock nullable

* fix test

* fix build",2018-08-04T00:13:44Z
914058f28840e466c7fc827d63da1eb608cc8060,"validate baseDataSource non-empty string in DerivativeDataSourceMetad… (#6072)

* validate baseDataSource non-empty string in DerivativeDataSourceMetadata; added a test

* added another test for validating null baseDataSource

* restored the arguments check order",2018-08-03T20:38:18Z
75c8a87ce1e5c735656bc72728b53d8a3762790c,"Part 2 of changes for SQL Compatible Null Handling (#5958)

* Part 2 of changes for SQL Compatible Null Handling

* Review comments - break lines longer than 120 characters

* review comments

* review comments

* fix license

* fix test failure

* fix CalciteQueryTest failure

* Null Handling - Review comments

* review comments

* review comments

* fix checkstyle

* fix checkstyle

* remove unrelated change

* fix test failure

* fix failing test

* fix travis failures

* Make StringLast and StringFirst aggregators nullable and fix travis failures",2018-08-02T15:20:25Z
b9c445c7803bc2bffbd59cb619a80cd092ced349,"Optimize filtered aggs with interval filters in per-segment queries (#5857)

* Optimize per-segment queries

* Always optimize, add unit test

* PR comments

* Only run IntervalDimFilter optimization on __time column

* PR comments

* Checkstyle fix

* Add test for non __time column",2018-08-01T21:39:38Z
e2703627676366655001900091282c83d31315a4,"Add stringLast and stringFirst aggregators extension (#5789)

* Add lastString and firstString aggregators extension

* Remove duplicated class

* Move first-last-string doc page to extensions-contrib

* Fix ObjectStrategy compare method

* Fix doc bad aggregatos type name

* Create FoldingAggregatorFactory classes to fix SegmentMetadataQuery

* Add getMaxStringBytes() method to support JSON serialization

* Fix null pointer exception at segment creation phase when the string value is null

* Control the valueSelector object class on BufferAggregators

* Perform all improvements

* Add java doc on SerializablePairLongStringSerde

* Refactor ObjectStraty compare method

* Remove unused ;

* Add aggregateCombiner unit tests. Rename BufferAggregators unit tests

* Remove unused imports

* Add license header

* Add class name to java doc class serde

* Throw exception if value is unsupported class type

* Move first-last-string extension into druid core

* Update druid core docs

* Fix null pointer exception when pair->string is null

* Add null control unit tests

* Remove unused imports

* Add first/last string folding aggregator on AggregatorsModule to support segment metadata query

* Change SerializablePairLongString to extend SerializablePair

* Change vars from public to private

* Convert vars to primitive type

* Clarify compare comment

* Change IllegalStateException to ISE

* Remove TODO comments

* Control possible null pointer exception

* Add @Nullable annotation

* Remove empty line

* Remove unused parameter type

* Improve AggregatorCombiner javadocs

* Add filterNullValues option at StringLast and StringFirst aggregators

* Add filterNullValues option at agg documentation

* Fix checkstyle

* Update header license

* Fix StringFirstAggregatorFactory.VALUE_COMPARATOR

* Fix StringFirstAggregatorCombiner

* Fix if condition at StringFirstAggregateCombiner

* Remove filterNullValues from string first/last aggregators

* Add isReset flag in FirstAggregatorCombiner

* Change Arrays.asList to Collections.singletonList",2018-08-01T17:52:54Z
297810e7a41e934d1b95f98edcbca6c4adb9be60,log correct moved count on balance instead of snapshot of currently moving (#6032),2018-08-01T10:36:10Z
0754d78a2edee2f8496a6bde04b841cd3c7dc52a,"Prohibit Lists.newArrayList() with a single argument (#6068)

* Prohibit Lists.newArrayList() with a single argument

* Test fixes

* Add Javadoc to Node constructor",2018-08-01T03:09:10Z
91943a24dbb247aac45cbd5f6eb83f4b429cb92e,"Fix CombiningFirehoseFactory with IngestSegmentFirehoseFactory in IndexTask (#6065)

* Fix CombiningFirehoseFactory with IngestSegmentFirehoseFactory in IndexTask

* Make recursive",2018-07-31T22:30:44Z
ea72907365eef4c8a16f69cc66f7cab51027b324,Add the '--fail-at-end' option to maven command for 'strictly compiled' part (#6078),2018-07-31T20:29:25Z
bb2fd57c0b4e0ac0487002140f9e1e71d613ddb4,"Revert ""skip travis on doc only changes"" (#6077)

* Revert ""Fix a bug in GroupByQueryEngine (#6062)""

This reverts commit f3595c93d92f39298956a27691e93cf3459fb5fb.

* Revert ""Add definition of 'NONE' to queryGranularity in ingestion.index doc (#6073)""

This reverts commit 7f89c7293290515e98807b5479bead0f4e5913fe.

* Revert ""skip travis on doc only changes (#6061)""

This reverts commit 66af403f7d06b7f93d2e6e78f4e445c7a47e35cd.",2018-07-31T19:56:57Z
20ae8aa6263e623564fc6bc0f3081554d12f44d5,"Fix 'auto' encoded longs + compression serializer (#6045)

* Fix 'auto' encoded longs + compression serializer
Fixes #6044

changes:
* Fixes `VSizeLongSerde` serializers to treat 'close' as 'flush' when used with `BlockLayoutColumnarLongsSerializer`, allowing unwritten values to be flushed to the buffer when the block is compressed
* Add exhaustive unit test that flexes a variety of value sizes, row counts, and compression strategies to catch issues such as these
:

* refactor LongSerializer close to be named flush instead

* revert and just make new serializers per block",2018-07-31T01:35:20Z
3aa70179751d049669698f4becd8bb6cbee442fe,"Remove some unnecessary task storage internal APIs. (#6058)

* Remove some unnecessary task storage internal APIs.

- Remove MetadataStorageActionHandler's getInactiveStatusesSince and getActiveEntriesWithStatus.
- Remove TaskStorage's getCreatedDateTimeAndDataSource.
- Remove TaskStorageQueryAdapter's getCreatedTime, and getCreatedDateAndDataSource.
- Migrated all callers to getActiveTaskInfo and getCompletedTaskInfo.

This has one side effect: since getActiveTaskInfo (new) warns and continues when it
sees unreadable tasks, but getActiveEntriesWithStatus threw an exception when it
encountered those, it means that after this patch bad tasks will be ignored when
syncing from metadata storage rather than causing an exception to be thrown.

IMO, this is an improvement, since the most likely reason for bad tasks is either:

- A new version introduced an additional validation, and a pre-existing task doesn't
  pass it.
- You are rolling back from a newer version to an older version.

In both cases, I believe you would want to skip tasks that can't be deserialized,
rather than blocking overlord startup.

* Remove unused import.

* Fix formatting.

* Fix formatting.",2018-07-31T01:35:06Z
f3595c93d92f39298956a27691e93cf3459fb5fb,Fix a bug in GroupByQueryEngine (#6062),2018-07-30T21:39:38Z
7f89c7293290515e98807b5479bead0f4e5913fe,"Add definition of 'NONE' to queryGranularity in ingestion.index doc (#6073)

* Add meaning of granularity = None to queryGranularity

* Fix format",2018-07-30T21:07:33Z
66af403f7d06b7f93d2e6e78f4e445c7a47e35cd,"skip travis on doc only changes (#6061)

* skip travis on doc only changes

* more selective ignoring of examples folder",2018-07-30T20:36:49Z
63be028cee2f08e970d7e8a60717c514bb229067,"CompactionTask: Reject empty intervals on construction. (#6059)

* CompactionTask: Reject empty intervals on construction.

They don't make sense anyway, and it's better to fail fast.

* Switch API.",2018-07-30T15:52:50Z
c57f4a5db0f328cc551d835ed0fabc3cbda46dc8,"FinalizingFieldAccessPostAggregator: Fix serde. (#6067)

Fixes #6063.",2018-07-28T15:44:22Z
b0ecfee1ab97d5247c4a6ca08618f988a4dde6a2,"Fix ClassNotFoundException in druid-kerberos extension (#4776)

Class org.apache.hadoop.conf.Configuration inside extensions should be used with caution.
By default, the configuration uses the context class loader of the current thread set to the
class loader used to load the application. Because of isolation between the application and
extensions we must explicitely set the class loader to extension class loader to be able
load classes specified in hadoop configuration file.",2018-07-27T23:23:09Z
331a0afb98c4377d6452f612b03b0083006d4ee4,"Remove redundant type parameters and enforce some other style and inspection rules (#5980)

* Various changes about druid-services module

* Patch improvements from reviewer

* Add ToArrayCallWithZeroLengthArrayArgument & ArraysAsListWithZeroOrOneArgument into inspection profile

* Fix ArraysAsListWithZeroOrOneArgument

* Fix conflict

* Fix ToArrayCallWithZeroLengthArrayArgument

* Fix AliEqualsAvoidNull

* Remove blank line

* Remove unused import clauses

* Fix code style in TopNQueryRunnerTest

* Fix conflict

* Don't use Collections.singletonList when converting the type of array type

* Add argLine into maven-surefire-plugin in druid-process module & increase the timeout value for testMoveSegment testcase

* Roll back the latest commit

* Add java.io.File#toURL() into druid-forbidden-apis

* Using Boolean.parseBoolean instead of Boolean.valueOf for CliCoordinator#isOverlord

* Add a new regexp element into stylecode xml file

* Fix style error for new regexp

* Set the level of ArraysAsListWithZeroOrOneArgument as WARNING

* Fix style error for new regexp

* Add option BY_LEVEL for ToArrayCallWithZeroLengthArrayArgument in inspection profile

* Roll back the level as ToArrayCallWithZeroLengthArrayArgument as ERROR

* Add toArray(new Object[0]) regexp into checkstyle config file & fix them

* Set the level of ArraysAsListWithZeroOrOneArgument as ERROR & Roll back the level of ToArrayCallWithZeroLengthArrayArgument as WARNING until Youtrack fix it

* Add a comment for string equals regexp in checkstyle config

* Fix code format

* Add RedundantTypeArguments as ERROR level inspection

* Fix cannot resolve symbol datasource",2018-07-27T21:56:49Z
74ae73df425205122fd3cc4196919a2fc6c3c367,Add the correct createdTime to waiting tasks (#6060),2018-07-27T21:56:19Z
1524af703dac18bb4dd05e579f37e920606f9f22,Fix IllegalArgumentException in TaskLockBox.syncFromStorage() (#6050),2018-07-27T17:43:32Z
94d6c9a0a577888a071789285b8c34c02a739103,"Remove JDK 7 from build documentation. (#6031)

See issue #6030",2018-07-27T00:05:07Z
7919e4d5df1452573ad85179239a0f43c35fd284,move rangeSet compare into shardspec (#5688),2018-07-26T21:17:57Z
e4ef753a6041d90289c33d34eba819659315ce23,"Use Blackhole objects to sink the method return in a benchmak loop (JMH) (#5908)

* Remove the unsafe loop from the benchmark

* Removing unused variables",2018-07-25T19:05:32Z
5ee7b0cada983912083a85f079086cb579488efd,"Synchronize scheduled poll() calls in SQLMetadataSegmentManager (#6041)

Similar issue to https://github.com/apache/incubator-druid/issues/6028.",2018-07-25T03:57:30Z
7d5eb0c21a62d8f40f3d7732f2a3e29f79bfa57f,Synchronize scheduled poll() calls in SQLMetadataRuleManager to prevent flakiness in SqlMetadataRuleManagerTest (#6033),2018-07-24T19:00:48Z
49dca01b563dbe23e6247cf9f6eb8f0f028812b4,Add IRC#druid-dev shields.io into README (#6002),2018-07-21T20:31:35Z
0590293538ff00b94ec2e4aeb49646cb9a8220ec,Add comment and code tweak to Basic HTTP Authenticator (#6029),2018-07-21T03:35:14Z
efab3b01609787d2f1bd026608d6006d8333793a,Add concat and textcat SQL functions (#6005),2018-07-20T18:21:04Z
b7d42edb0fbd279cb428ce5ea5069035148e55cc,Check the kafka topic when compacring checkpoints from tasks and the one stored in metastore (#6015),2018-07-20T18:20:23Z
414487a78e63f552c0c93cb711fe0c06ada0a3ac,"Add support to filter on datasource for active tasks (#5998)

* Add support to filter on datasource for active tasks

* Added datasource filter to sql query for active tasks
* Fixed unit tests

* Address PR comments",2018-07-19T23:33:46Z
4a2df2b23aba856dc065af18a34362afb736beaf,Log the full stack trace when an HTTP request fails (#6022),2018-07-19T19:05:46Z
cd8ea3da8dd24283b56a2e4a2136cacd09c8177a,"SQL: Add server-wide default time zone config. (#5993)

* SQL: Add server-wide default time zone config.

* Switch API.",2018-07-18T20:12:40Z
2f51a3c6739f7eaabb1facbcaf123dfc8b821cb2,"Update readme (#6011)

* update readme

* add disclaimer",2018-07-17T18:58:50Z
e206f8ca98c6750083680af187341bdcbda807ed,Move build badge to https://travis-ci.org/apache/incubator-druid (#6007),2018-07-17T18:57:33Z
c48aa74a301a11f49b0d6ba6bde4283bdab7f699,"Fix NPE while handling CheckpointNotice in KafkaSupervisor (#5996)

* Fix NPE while handling CheckpointNotice

* fix code style

* Fix test

* fix test

* add a log for creating a new taskGroup

* fix backward compatibility in KafkaIOConfig",2018-07-14T00:14:57Z
31c2179fe1daa564e918f4ba64937743a45132a1,"Coordinator fix balancer stuck (#5987)

* this will fix it

* filter destinations to not consider servers already serving segment

* fix it

* cleanup

* fix opposite day in ImmutableDruidServer.equals

* simplify",2018-07-12T03:19:11Z
5f78a333ad0455ad377b1eac0e119fa3594a9d10,"show that flatten will also work with avro extension (#5874)

* show that flatten will also work with avro extension

* fix url",2018-07-11T23:47:03Z
ac194cc082fe6dabb2ddae0780d83d58ea182e5d,"Coordinator fix exception caused by additional logging (#5988)

* fix explosion in curator load queue peon caused by additional logging, as well as annoying chatty log

* remove log message",2018-07-11T23:13:32Z
153eb26262593233ed838f1edfc982238562f1e0,fix link to query-context in broker config doc (#5995),2018-07-11T22:57:08Z
04ea3c9f8c1f5ea34b023217bd709509ace4d30d,"Update license headers. (#5976)

* Update license headers.

For compliance with http://www.apache.org/legal/src-headers.html.

* More license adjustments.

* Fix mistakenly edited package line.",2018-07-11T16:55:18Z
948e73da7713409fbf8b3fd8fc8b497ec5bef05f,"Extend various test timeouts. (#5978)

False failures on Travis due to spurious timeout (in turn due to noisy
neighbors) is a bigger problem than legitimate failures taking too long
to time out. So it makes sense to extend timeouts.",2018-07-10T20:02:15Z
b3021ec802c576edac5ed707be3f497769f0978d,Fix bug in SegmentAnalyzer.analyzeComplexColumn() #5939 (#5954),2018-07-09T22:36:16Z
441c9819d99677a5cb7b810ad126894ed3bf8eca,"Support limit for timeseries query (#5894) (#5931)

* Support limit for timeseries query (#5894)

* Fix tests

* Address PR comments

* Try to fix teamcity inspection checks

* Remove unused method from VirtualColumns

* Remove unused import statement",2018-07-09T15:58:42Z
d1d935827477af9cb9d049afbf9ce28d319a9890,Increase timeout for BlockingPoolTest (#5959),2018-07-06T23:34:53Z
b3976050ad45b02bf84c17923e3f8f430a02ca88,add definition of balancerComputeThreads (#5865),2018-07-05T16:54:36Z
ee4a5aafb0bcddb20ad717b82790747487c94bf1,"add config values for GCS deep storage (#5875)

* add config values for GCS deep storage

* fix config values for GCS deep storage",2018-07-05T16:53:41Z
10642ef9caf7bee24aa2f84609705f14b7557262,"Fix filtered request logging docs (#5924)

- Setting druid.request.logging.delegate has no effect. 
- The provider is injected based on a type parameter & this looks to be scoped to delegate for filtered loggers",2018-07-05T16:51:10Z
24c20b47347fa8eeef22589ee3b3e9ec10165507,"Forbid slashes in datasource names. (#5937)

They are bad because datasources are used as paths on filesystems,
and slashes invariably make things get stored improperly.",2018-07-05T16:49:16Z
aa4987b87101fd71a241f660041e5189b384e46b,change default compaction task target size from 800MB to 400MB to fall within range of what docs recommend for segment sizing (#5930),2018-07-05T07:12:31Z
9bece8ce1e422257ab9a38ef8a56a9d91e728bfb,"Prevent KafkaSupervisor NPE in generateSequenceName (#5900) (#5902)

* Prevent KafkaSupervisor NPE in checkPendingCompletionTasks (#5900)

* throw IAE in generateSequenceName if groupId not found in taskGroups
* add null check in checkPendingCompletionTasks

* Add warn log in checkPendingCompletionTasks

* Address PR comments

Replace warn with error log

* Address PR comments

* change signature of generateSequenceName to take a TaskGroup object instead of int

* Address comments

* Remove unnecessary method from KafkaSupervisorTest",2018-07-05T06:45:42Z
4cd14e8158153ffc6432f7f09b148dca83517f5b,Proper handling of the exceptions from auto persisting in AppenderatorImpl.add() (#5932),2018-07-05T06:42:41Z
39371b0ff828d1088d2a169197b6ed48cc6ab5a2,"More coordinator logging to help give context to load queue peon log messages (#5929)

* more coordinator logging to help give context to load queue peon log messages

* fix style

* more chill load queue peon log messages",2018-07-05T06:40:25Z
0a472d3fa01db6b8b9cd5ed825dd2c7dda4691dd,coordinator slight optimze load rule to skip drop if numToDrop is 0 (#5928),2018-07-04T00:56:11Z
d5a38718643ad2bd45339acf42046e058b1ad3fd,"Coordinator fix balance to try to move max segments instead of up to max segments (#5927)

* fix move to try to move max segments instead of ""up to"" max segments

* fix

* fix oops",2018-07-04T00:06:38Z
1ccabab98e2e10315c2eefbf7e51a1faf7e9fd96,"Fix the broken Appenderator contract in KafkaIndexTask (#5905)

* Fix broken Appenderator contract in KafkaIndexTask

* fix build

* add publishFuture

* reuse sequenceToUse if possible",2018-07-03T20:31:29Z
867f6a9e2b342480784fb1f23c6762354f565862,"Fix SQL Server select query in createInactiveStatusesSinceQuery() method. (#5901)

* Fix SQL Server select query in createInactiveStatusesSinceQuery() method.

SQL server does not support LIMIT N in select queries. Instead it has TOP N to limiting number of query results.
And TOP N is already added in the select statement as per maxNumStatuses value.

* Add parentheses for TOP in SELECT statement as SQL Servers no longer support TOP without parentheses.",2018-07-03T17:46:47Z
b6c957b0d2f81648cf2a01aa08ba955dd90a693c,"Allow reordered segment allocation in kafka indexing service (#5805)

* Allow reordered segment allocation in kafka indexing service

* address comments

* fix a bug",2018-07-02T22:09:12Z
b76a056c144ef7b440e0f94e0a0324aa2eb34c8a,"Fix ConcurrentModificationException in IncrementalPublishingKafkaIndexTaskRunner (#5907)

* Fix ConcurrentModificationException in IncrementalPublishingKafkaIndexTaskRunner

* fix lock and add comments",2018-07-01T00:20:41Z
933b25416c956f5a59bd4a77ffc4edc9406a01c4,"Handle task deserialization failure in the tasks api (#5911)

If task payload fails to deserialize json to Java, make the task null and handle null task in OverlordResource",2018-06-29T18:57:48Z
10a01d68469e815dc498e0f2367c60562741cf45,"[SQL] Fix missing postAggregations for Timeseries and TopN (#5912)

* [SQL] Fix missing postAggregations for Timeseries and TopN

* fix build

* fix test",2018-06-29T17:36:55Z
f3e152036096ea82a1f437d08cd516ad9c3440e2,"Fix merge for TrueDimFilter (#5916)

* Fix merge for TrueDimFilter

* remove unused cache ID",2018-06-28T21:46:47Z
bf2a31a5bc1549e5c9a246e963ab74efefa59667,"Add new 'true' filter which always returns true. (#5711)

* Add new 'true' filter which always returns true.

* Add support for bitmap index.

* Adds documentation.

* Removes No-op Filter",2018-06-28T18:52:45Z
d857345b7d25c7208622cbb17c877a682e826870,"add method getRequiredColumns for DimFilter (#5872)

* add method getRequiredColumns for DimFilter

* deal with the NullPointerException when DimFilter is null",2018-06-27T22:45:46Z
0f429298cff950c8d2dcc69d21c2e68c619f8177,"Fix Kafka Indexing task pause forever if no events in taskDuration (#5656) (#5899)

* Fix Kafka Indexing task pause forever (#5656)

* Fix Nullpointer Exception in overlord if taskGroups does not contain the groupId
* If the endOffset is same as startOffset, still let the task resume instead of returning
   endOffsets early which causes the tasks to pause forever and ultimately fail on timeout

* Address PR comment

*Remove the null check and do not return null from generateSequenceName",2018-06-26T02:29:36Z
7649742943a4a355e223be9284716e3fd177c14c,Use ReentrantReadWriteLock in DimensionDictionary (#5883),2018-06-25T19:35:26Z
a28314349cbf14e02f6e2ae31c11ac859dd79da3,"Fix spelling of ""propagate"" in various places. (#5896)

One of these is a configuration parameter (introduced in #5429),
but it's never been in a release, so I think it's ok to rename it.",2018-06-25T16:18:08Z
4b111929ecb61a1aea71456af987a3b94a46c7fc,"Fix typo lage->large , improve warning message (#5890)",2018-06-23T00:33:02Z
8c5ded0fadf405bec13d4b19cfdb00b1de384b24,"Splitting KafkaIndexTask for better code maintenance (#5854)

* Refactoring KafkaIndexTask for better code maintenance

* fix bug

* fix test

* add annotation

* fix checkstyle

* remove SetEndOffsetsResult",2018-06-22T20:00:03Z
1a7adabf5768b5115f37d9924b194b5f7ff48862,"Coordinator segment balancer max load queue fix (#5888)

* Coordinator segment balancer will now respect ""maxSegmentsInNodeLoadingQueue"" config

* allow moves from full load queues

* better variable names",2018-06-21T06:04:41Z
0982472c90e4197895f61b3da1f623b53e87a1e0,"Use historical node instead of realtime for querying (#4764)

* Use historical node instead of realtime for querying

* Incorporated code review comments

* Incorporate code review comments

* Remove artifact comment

* Consider non-historical nodes as realtime",2018-06-21T05:53:56Z
0eae89170e47f5148f8c6b0d590dc5ea2a2a7283,Make DruidPlanner constructor public again (#5891),2018-06-20T18:10:50Z
8619adb5b908a597678e25819576c358f8c65f48,"Improve task retrieval APIs on Overlord (#5801)

* Add the new tasks api in overlordResource

It takes 4 optional query params
* state(pending/running/waiting/compelte)
* dataSource
* interval (applies to completed tasks)
* maxCompletedTasks (applies to completed tasks)

If all params are null, the api returns all the tasks

* Add the state to each task returned by tasks endpoint

* divide active tasks into waiting, pending or running
* Add more unit tests

* Add UNKNOWN state to TaskState

* Fix the authorization calls

* WIP: PR comments

Added new class to capture task info for caching
Other refactoring

* Refactoring : move TaskStatus class to druid-api

so it can be accessed within server
And other related classes like TaskState and TaskStatusPlus are in api

* Remove unused class and apis accessing it

* Add a separate cache for recently completed tasks

This is to mainly capture the task type from payload

* Ignore a test

* Add a RuntimeTaskState to encompass all states a task can be in

* Revert ""Add a RuntimeTaskState to encompass all states a task can be in""

This reverts commit 2a527a0731a064dc0f15cf2ba3dfc5f639c6e182.

* Fix wrong api call

* Fix and unignore tests

* Remove waiting,pending state from TaskState

* Add RunnerTaskState

* Missed the annotation runnerStatusCode

* Fix the creationTime

* Fix the createdTime and queueInsertionTime for running/active tasks
* Clean up tests

* Add javadocs

* Potentially fix the teamcity build

* Address PR comments

*Get rid of TaskInfoBuilder
*Make TaskInfoMapper static nested class
*Other changes

* fix import in MaterializedViewSupervisor after merge

* Address PR comments on

* Replace global cache with local map
* combine multiple queries into one
* Removed unused code

* Fix unit tests

Fix a bug in securedTaskStatusPlus

* Remove getRecentlyFinishedTaskStatuses method

Change TaskInfoMapper signature to add generic type

* Address PR comments

* Passed datasource as argument to be used in sql query
* Other minor fixes

* Address PR comments

*Some minor changes, rename method, spacing changes

* Add early auth check if datasource is not null

* Fix test case

* Add max limit to getRecentlyFinishedTaskInfo in HeapMemoryTaskStorage
* Add TaskLocation to Anytask object

* Address PR comments

* Fix a bug in test case causing ClassCastException",2018-06-19T18:34:59Z
6d0dd2fd0fa21867096f79facd8359833b7deebf,"CalciteQueryTest: Add more subquery tests. (#5880)

None of them actually work right now, but this is useful to help document,
via tests, what works and what doesn't.",2018-06-18T18:54:29Z
8dc4aca25fe0952ecd2f70b2581f9815aaa7d777,"Add cgroup memory monitor (#5866)

* Add cgroup memory monitor

* Port of https://github.com/metamx/java-util/pull/67

* Fix copyright

* Don't use `String.format`",2018-06-18T17:03:44Z
b4b1b2a02020217a3d1cc63ea79992953fa22e4e,"Provisioning support for ZooKeeper Authorization (#5701)

Review comments implemented",2018-06-15T21:02:01Z
8c6651022de5f9c0d7afaf90c2720a40eb6ceb24,"Update jsonpath dependency (#5794)

* Update JSONPath Library

Re: #5792

- Add a unit test containing a JSONPath conditional
- Update the JSONPath library and no longer exclude the json-smart dependency.
- I believe the original reason for excluding this has been fixed: https://github.com/json-path/JsonPath/pull/315

* Add test

* Fix test",2018-06-15T20:50:48Z
1f700bb88097c573bc0ae9e0624ce0ec075a84f3,"Suppress JsonPath exceptions in AvroFlattener (#5793)

Re: #5791

- Make the AvroFlattenerMake consistent with the JSONFlattenerMaker",2018-06-15T00:38:15Z
dc67b77ec2ae181fe54e0a4d04f6e328720ca8d0,"Immediately send 401 on basic HTTP authentication failure (#5856)

* Immediately send 401 on basic HTTP authentication failure

* Add unit tests",2018-06-14T17:23:10Z
1032387d785427c7c9c21b1f7b512162cda3232f,"Snappy decompression support (#5864)

Support decompression of files using Google's Snappy algorithm.

This only supports files compressed with the Snappy framing format
described here: https://github.com/google/snappy/blob/master/framing_format.txt",2018-06-14T09:55:42Z
e0eb7048f61698c46b7a559fac694f5958faa834,"Remove evil.zip test file. (#5879)

Removes an evil.zip file added by #5850, since it's not necessary.
The tests in that patch create their own evil files.",2018-06-13T23:02:18Z
1c031784cb5af6a43d99678ff770796ef276b172,"Align long Aggregator implementation with Double and Float (#5861)

Add LongMin/Max aggregator combiners
Extract common code from LongSum/Min/MaxAggregatorFactories in
SimpleLongAggregatorFactory",2018-06-13T21:56:41Z
24efbb054c1e4f5c500981b18e388188a0765139,Fix inefficient available segment cache population in SQLMetadataSegmentManager (#5878),2018-06-13T01:53:30Z
bc9da54e12efa3a0deb40cac3df28794fe5e94c8,"Fix Zip Slip vulnerability (#5850)

* Fix evil zip exploit

* PR comment, checkstyle

* PR comments

* Add link to vulnerability report

* Fix test",2018-06-12T17:03:08Z
2feec44a55be1248711f5aefffe4cad9fad11b47,"Fix mismatch in revoked task locks between memory and metastore after sync from storage (#5858)

* Fix mismatched revoked task locks after sync from storage

* fix build

* fix log

* fix lock release",2018-06-12T14:25:34Z
0ae4aba4e2d774fcbe2691eb89789c298d3733d2,"HdfsDataSegmentPusher: Close tmpIndexFile before copying it. (#5873)

It seems that copy-before-close works OK on HDFS, but it doesn't work
on all filesystems. In particular, we observed this not working properly
with Google Cloud Storage. And anyway, it's better hygiene to close files
before attempting to copy them somewhere else.",2018-06-12T07:58:48Z
fe4d678aacbb551ed66567892d1f410bf7d83d3c,"Support projection after sorting in SQL (#5788)

* Add sort project

* add more test

* address comments",2018-06-11T15:33:47Z
e43e5ebbcd4c07ea45f8f43a69664aeb463cd562,"Materialized view implementation (#5556)

* implement materialized view

* modify code according to jihoonson's comments

* modify code according to jihoonson's comments - 2

* add documentation about materialized view

* use new HadoopTuningConfig in pr 5583

* add minDataLag and fix optimizer bug

* correct value of DEFAULT_MIN_DATA_LAG_MS

* modify code according to jihoonson's comments - 3

* use the boolean expression instead of if-else",2018-06-09T19:24:54Z
6f0aedd6ab3ff6fe8aad91075f52cd14d7fdedac,"Fix defaultQueryTimeout (#5807)

* Fix defaultQueryTimeout

- set default timeout in query context before query fail time is evaluated

Remove unused import

* Address failing checks

* Addressing code review comments

* Removed line that was no longer used",2018-06-08T22:34:10Z
96feb479cde5cf9cc578e5182146472d2e3edc3a,add order change needed for KIS in 0.12.0 (#5760),2018-06-08T22:25:26Z
b7e8812d186bc1635d1f6a6a76dbca40988964cd,"Bump Apache Parquet to 1.10.0 (#5776)

* Bump Apache Parquet to 1.8.3

* Bump Apache Parquet to 1.10.0",2018-06-08T22:23:35Z
cfa94b747bf6cf59052b7c337f76db2fc7ef931b,"Update to jetty 9.4; Enable request decompression (#5624)

* Update to jetty 9.4; Enable request decompression; Add http compression config options

* Fix BadMessageException from jetty server at HttpGenerator.generateHeaders(...)",2018-06-08T21:53:08Z
0fd42af8d605b5eaeeb3a42c779dd03dea40da52,"Make the google storage extension friendlier to 429 and 5XX responses (#5750)

* Make the google extension friendlier to 429 responses

* Lots of trouble for a little space

* Add in better tests and fix formatting

* Add 500 errors as well as some basic unit tests

* Add IOException to test

* Add some more stuff to killer test

* Change error code in puller test

* fix tests and make errors more generic handling",2018-06-07T20:19:35Z
adbe22c05bee54454a3d15759a9be51fa653520f,"Security - add anonymous authenticator (#5842)

* Anonymous authenticator that authenticates all requests and then directs them to an authorizer.

* Adding documentation

* Removed some fields from class AnonymousAuthenticator

* Updating docs",2018-06-07T17:17:54Z
3af95913a90a3a8366ef04694a87b196e1f922c9,"Lazy-ify IncrementalIndex filtering too. (#5852)

* Lazy-ify IncrementalIndex filtering too.

Follow-up to #5403, which only lazy-ified cursor-based filtering
on QueryableIndex.

* Fix logic error.",2018-06-07T01:03:34Z
37409dc2f4cfcb9c8ae6df66f134203646781045,"Fix minor documentation error (#5851)

Adding a required `,` in the sample JSON",2018-06-06T19:51:56Z
ee45ee691585ad61dd386e85079755a916c7163b,Fix docs to reflect the correct default max total row count for the IndexTuningConfig (#5845),2018-06-05T20:15:12Z
1a4707f09c217d734996d9704f4171f2f4c1d980,Remove extra slash in endpoint (#5822),2018-06-05T20:11:26Z
684b5d18c1dc8975b13b74ccd46f081ae074a24c,"Moving averages for ingestion row stats (#5748)

* Moving averages for ingestion row stats

* PR comments

* Make RowIngestionMeters extensible

* test and checkstyle fixes

* More PR comments

* Fix metrics

* Add some comments

* PR comments

* Comments",2018-06-05T16:08:57Z
78fd27cdb2ec553d408a78d9ddf1acca53b940cf,"Lazy-ify ValueMatcher BitSet optimization for string dimensions. (#5403)

* Lazy-ify ValueMatcher BitSet optimization for string dimensions.

The idea is that if the prior evaluated filters are decently selective,
such that they mean we won't see all possible values of the later
filters, then the eager version of the optimization is too wasteful.

This involves checking an extra bitset, but the overhead is small even
if the lazy-ification is useless.

* Remove import.

* Minor transformation",2018-06-05T16:06:51Z
d1cdcd4895221ae0d46f66fa19ece35196ab77af,"Datasketches doc correction (#5816)

* func was renamed to operation during code review

* added missing descriptions, some cleanup",2018-06-05T12:22:37Z
2b45a6a42d09abcdcc259cf91cda9f98b3cf3c84,"Fix topN lexicographic sort (#5815)

* fixes #5814
changes:
* pass `StorageAdapter` to topn algorithms to get things like if column is 'sorted' or if query interval is smaller than segment granularity, instead of using `io.druid.segment.Capabilities`
* remove `io.druid.segment.Capabilities` since it had one purpose, supplying `dimensionValuesSorted` which is now provided directly by `StorageAdapter`.
* added test for topn optimization path checking

* add Capabilities back since StorageAdapter is marked PublicApi

* oops

* add javadoc, fix build i think

* correctly revert api changes

* fix intellij fail

* fix typo :(",2018-05-31T16:53:29Z
50ad7a45ffc50ea50d3d933d4264333734eb90ce,Fix authentication doc (#5813),2018-05-30T18:10:48Z
67ff7dacbdb74981509bc7ce3b75a4f75dae306d,"Support server-side encryption for s3 (#5740)

* Support server-side encryption for s3

* fix teamcity

* typo

* address comments

* Refactoring configuration injection

* fix doc

* fix doc",2018-05-29T03:22:08Z
5cbfb95e1f64445b8ae81e474dbb4ac4547ea1d4,docs: Document inputFormat on Hadoop InputSpecs (#5784),2018-05-25T04:44:37Z
8799d46fe9fcbaf47a6b37396ae5af08fa97f930,Fix NPE in PrefetchableTextFilesFirehoseFactory (#5802),2018-05-25T04:44:03Z
bc0ff251a3dcdd3284e92441778805c9d3ac8201,Docs: Clarify the meaning of maxSplitSize. (#5803),2018-05-25T04:43:39Z
33b4eb624d4b90cb31a82e145d19c29c14c02546,"fix freeSpacePercent in segmentCache.locations (#5765)

* fix freeSpacePercent in segmentCache.locations

* the check should probably test the other way around
* documentation should put the option in the right place
* examples have a superfluous backslash

* add test to verify correct behavior

* switch to Path and test with jimfs

Path allows to use different filesystems.
Jimfs provides an actual (in memory) filesystem.
This also allows more complex test scenarios.

The behavior should be unchanged by this commit.

* Revert ""switch to Path and test with jimfs""

This reverts commit 8b9a418d65a42a3adb87756967e780442484a9d9.",2018-05-24T02:15:30Z
29af9f452ab31e86f0ff1d1b4bfccc15ce3253de,"Fix for when Hadoop dataSource inputSpec is specified multiple times. (#5790)

This feature was introduced in #5717 but it didn't work in production
because this magical rewriter code wasn't also modified. Now, it is.",2018-05-22T21:46:55Z
1b9611a60ea80527d51e34c83b333d8457def52d,"Local indexing from RDBMS (#5441)

* Local indexing from RDBMS

*  Fix content

* Remove pom changes

* Remove extraneous space

* Add tests and update documentation

* Fix comments

* Fix docs

*  Fix build related issue

*  Handle invalid strings

* Make target database independent of metadata storage

* Add firehose connector

* Fix accessibility

* Add docs

* Remove unused def

* Remove lazy instantiation of jsoniterator

* Move unused changes

* Move unused changes

* Fix build

* Make Sqlfirehose method private",2018-05-22T03:33:01Z
c537ea56f67f2e1954df7c7b1e224b0dc6a0c950,"Validate dataschema datasource (#5785)

* Validate dataschema has a datasource

* Fix tests

* Use Guava Strings.isNullOrEmpty

* Inverse nullempty check, whoops",2018-05-18T23:29:06Z
f2cc6ce4d5136b86ba999d46785191662e8ac3c2,"VersionedIntervalTimeline: Optimize construction with heavily populated holders. (#5777)

* VersionedIntervalTimeline: Optimize construction with heavily populated holders.

Each time a segment is ""add""ed to a timeline, ""isComplete"" is called on the holder
that it is added to. ""isComplete"" is an O(segments per chunk) operation, meaning
that adding N segments to a chunk is an O(N^2) operation. This blows up badly if
we have thousands of segments per chunk.

The patch defers the ""isComplete"" check until after all segments have been
inserted.

* Fix imports.",2018-05-16T16:16:59Z
d8effff30b0a7a04c12ccccedf6b279258c65d3f,"PartitionHolder: Early return from isComplete when we find an end. (#5778)

* PartitionHolder: Early return from isComplete when we find an end.

Holders are complete if they have a start, sequence of abutting objects, and
then an end. There isn't any reason to check whether or not the objects _after_
the end are abutting (the extensible set).

This is really a performance patch, since behavior shouldn't be changing. The
extensible shardSpecs (where we could have shards after the end) are always
abutting each other anyway. Performance doesn't usually matter much in this
function, but it can when there are thousands of segments per time chunk.

* Remove endSeen",2018-05-16T16:16:50Z
9dca5ec76b8f76df0963ec720340910cb8489418,"Simple cleanup for ThreadPoolTaskRunner and SetAndVerifyContextQueryRunner / Add ThreadPoolTaskRunnerTest (#5557)

* Simple fix for ThreadPoolTaskRunner

* fix build

* address comments

* update javadoc

* fix build

* fix test

* add dependency",2018-05-15T17:23:11Z
c73e3ea4f53779a4a2c230ec1e4063b251579cdc,"Provide examples to havingSpec filters (#5774)

* expand examples

* expand examples for filtered havingSpecs

* expand other having examples

* remove blank code block

* add better AND/OR/NOT examples

* fix indentation",2018-05-14T20:43:42Z
15864434be35cd099493521c5f902ef3a3fa587b,"ArrayOfDoublesSketch module (#5148)

* ArrayOfDoublesSketch module

* UTF-8 fix

* javadoc, style fixes

* more style fixes

* null key selector fix

* more style fixes

* removed @Override, strict compiler doesn't like it

* removed @Override, strict compiler doesn't like it

* IndexedInts is not autoclosable? removed one more @0verride

* synchronized with upstream master

* removed unused imports

* addressed review points

* null fix

* addressed review points

* IAE from druid package

* synchronized aggregate() and get()

* use locks per buffer position

* corrected javadoc

* style fixes

* added lock and narrowed the scope

* addressed review comments

* conflict resolution went wrong

* addressed review comments

* javadoc

* javadoc links

* fully qualified name since there is no import for this class

* addressed review points

* style fix

* StandardCharsets.UTF_8

* addressed review points

* added @Override

* added equals and hashCode tests for post aggs

* formatting

* suppress warnings

* optimal IndexedInts iteration

* suppress SelfEquals

* added comments about getClass() in equals()",2018-05-13T12:48:00Z
7a1faa332fad8c5845c3618a41672358bcc4c479,Fix KerberosAuthenticator serverPrincipal host replacement (#5766),2018-05-10T05:34:49Z
e8caf0214713c1396cd0c99a4cedb1df17f95f4f,"Revert ""Use a bimap for reverse lookups on injective maps"" (#5764)

* Revert ""Consider waiting and pending compaction tasks as well as running tasks in DruidCoordinatorSegmentCompactor (#5704)""

This reverts commit c7a59394e0f4d9b870eda3f2b11ddd5d1acb4d0d.

* Revert ""Fix metrics for inserting segments (#5749)""

This reverts commit c9d645103b3e712b678cdca9695800232a025ab0.

* Revert ""Typo fix in historical doc (#5753)""

This reverts commit aa23fe638632d15191e2bdacb193cd7a45fca507.

* Revert ""Use a bimap for reverse lookups on injective maps (#5681)""

This reverts commit e1277d306c7d3a4afd40b0d6caf97858143ee197.",2018-05-10T02:12:36Z
13ba840653fb42fc2c083e661d609a694f6cf818,"Remove setParitionerClass call from SortableBytes (#5677)

* Remove setParitionerClass call from SortableBytes since callers override the paritioner class themselves

* Get rid of SortableBytesPartitioner class

* Make partitioner class a parameter",2018-05-10T01:59:42Z
2f8904e25f6858ab19804823cc8d45cb5b987481,"Check against the real default of maxBytes(1/6 max mem) in AppenderatorImpl's add (#5758)

* The check for maxBytesInMemory should be >= 0 instead of > 0

* if the default value is 0, the actual check could be skipped
* fix the message for persistReasons

* Address PR comments

* if maxBytes set -1, make is Long.MAX_VAL, so we do not need to check if it's 0 or -1
* set the maxBytesTuningconfig in AppenderatorImpl constructor to avoid duplicate code

* fix the failing test cases

* Address PR comments",2018-05-09T20:41:51Z
c7a59394e0f4d9b870eda3f2b11ddd5d1acb4d0d,"Consider waiting and pending compaction tasks as well as running tasks in DruidCoordinatorSegmentCompactor (#5704)

* Consider waiting and pending compaction tasks as well as running tasks in DruidCoordinatorSegmentCompactor

* fix build

* fix logging",2018-05-09T02:03:54Z
c9d645103b3e712b678cdca9695800232a025ab0,"Fix metrics for inserting segments (#5749)

* Fix metrics for inserting segments

* Add a comment",2018-05-08T20:07:39Z
aa23fe638632d15191e2bdacb193cd7a45fca507,Typo fix in historical doc (#5753),2018-05-08T18:08:27Z
e1277d306c7d3a4afd40b0d6caf97858143ee197,"Use a bimap for reverse lookups on injective maps (#5681)

* Use a bimap for reverse lookups on injective maps

- A BiMap provides constant-time lookups for mapping values to keys

* Address comments

* Fix Tests",2018-05-08T01:46:21Z
67d0b0ee42992b36e84ca188e32e6a88049a5a00,Add taskType dimension to task metrics (#5664),2018-05-07T16:42:26Z
a95ec922962d9368672d3aa3c0ebe820e7751395,"Move to the org.lz4 dependency (#5746)

The net.jpountz.lz4 moved to org.lz4",2018-05-07T15:16:45Z
8aa8d9fa5b633babbed9696641247c3d97147501,"Kerberos Spnego Authentication Router Issue (#5706)

* Adding decoration method to proxy servlet

Change-Id: I872f9282fb60bfa20524271535980a36a87b9621

* moving the proxy request decoration to authenticators

Change-Id: I7f94b9ff5ecf08e8abf7169b58bc410f33148448

* added docs

Change-Id: I901543e52f0faf4666bfea6256a7c05593b1ae70

* use the authentication result to decorate request

Change-Id: I052650de9cd02b4faefdbcdaf2332dd3b2966af5

* adding authenticated by name

Change-Id: I074d2933460165feeddb19352eac9bd0f96f42ca

* ensure that authenticator is not null

Change-Id: Idb58e308f90db88224a06f3759114872165b24f5

* fix types and minor bug

Change-Id: I6801d49a05d5d8324406fc0280286954eb66db10

* fix typo

Change-Id: I390b12af74f44d760d0812a519125fbf0df4e97b

* use actual type names

Change-Id: I62c3ee763363781e52809ec912aafd50b8486b8e

* set authenitcatedBy to null for AutheticationResults created by
Escalator.

Change-Id: I4a675c372f59ebd8a8d19c61b85a1e4bf227a8ba",2018-05-06T03:33:51Z
c12c16385ea97189e014dd4a8beb3b6b75ab5168,support throw duplcate row during realtime ingestion in RealtimePlumber (#5693),2018-05-04T17:12:25Z
2c5f0038fd8f063047fda629c52b319e7ecce3ce,"Make lookup offheap buffer configurable (#5696)

* Make lookup offheap buffer configurable

Fixes #3663

* Address comments

* Update docs

* Update docs",2018-05-04T17:00:55Z
c2b5e5ec9590e9413ddd969e74ad50bef2bff69b,"Default caffeine cache size (#5738)

* add default caffeine cache size based on runtime Xmx or max 1GB

* update docs for caffeine cache

* fix formatting

* test caffeine size should never be less than 0

* set caffeine max default size to 1G not 1M

* fix caffeine cache tests",2018-05-04T16:29:11Z
13c616ba24160a31a65e159ee5e60a3a702d9b11,"'maxBytesInMemory' tuningConfig introduced for ingestion tasks (#5583)

* This commit introduces a new tuning config called 'maxBytesInMemory' for ingestion tasks

Currently a config called 'maxRowsInMemory' is present which affects how much memory gets
used for indexing.If this value is not optimal for your JVM heap size, it could lead
to OutOfMemoryError sometimes. A lower value will lead to frequent persists which might
be bad for query performance and a higher value will limit number of persists but require
more jvm heap space and could lead to OOM.
'maxBytesInMemory' is an attempt to solve this problem. It limits the total number of bytes
kept in memory before persisting.

 * The default value is 1/3(Runtime.maxMemory())
 * To maintain the current behaviour set 'maxBytesInMemory' to -1
 * If both 'maxRowsInMemory' and 'maxBytesInMemory' are present, both of them
   will be respected i.e. the first one to go above threshold will trigger persist

* Fix check style and remove a comment

* Add overlord unsecured paths to coordinator when using combined service (#5579)

* Add overlord unsecured paths to coordinator when using combined service

* PR comment

* More error reporting and stats for ingestion tasks (#5418)

* Add more indexing task status and error reporting

* PR comments, add support in AppenderatorDriverRealtimeIndexTask

* Use TaskReport instead of metrics/context

* Fix tests

* Use TaskReport uploads

* Refactor fire department metrics retrieval

* Refactor input row serde in hadoop task

* Refactor hadoop task loader names

* Truncate error message in TaskStatus, add errorMsg to task report

* PR comments

* Allow getDomain to return disjointed intervals (#5570)

* Allow getDomain to return disjointed intervals

* Indentation issues

* Adding feature thetaSketchConstant to do some set operation in PostAgg (#5551)

* Adding feature thetaSketchConstant to do some set operation in PostAggregator

* Updated review comments for PR #5551 - Adding thetaSketchConstant

* Fixed CI build issue

* Updated review comments 2 for PR #5551 - Adding thetaSketchConstant

* Fix taskDuration docs for KafkaIndexingService (#5572)

* With incremental handoff the changed line is no longer true.

* Add doc for automatic pendingSegments (#5565)

* Add missing doc for automatic pendingSegments

* address comments

* Fix indexTask to respect forceExtendableShardSpecs (#5509)

* Fix indexTask to respect forceExtendableShardSpecs

* add comments

* Deprecate spark2 profile in pom.xml (#5581)

Deprecated due to https://github.com/druid-io/druid/pull/5382

* CompressionUtils: Add support for decompressing xz, bz2, zip. (#5586)

Also switch various firehoses to the new method.

Fixes #5585.

* This commit introduces a new tuning config called 'maxBytesInMemory' for ingestion tasks

Currently a config called 'maxRowsInMemory' is present which affects how much memory gets
used for indexing.If this value is not optimal for your JVM heap size, it could lead
to OutOfMemoryError sometimes. A lower value will lead to frequent persists which might
be bad for query performance and a higher value will limit number of persists but require
more jvm heap space and could lead to OOM.
'maxBytesInMemory' is an attempt to solve this problem. It limits the total number of bytes
kept in memory before persisting.

 * The default value is 1/3(Runtime.maxMemory())
 * To maintain the current behaviour set 'maxBytesInMemory' to -1
 * If both 'maxRowsInMemory' and 'maxBytesInMemory' are present, both of them
   will be respected i.e. the first one to go above threshold will trigger persist

* Address code review comments

* Fix the coding style according to druid conventions
* Add more javadocs
* Rename some variables/methods
* Other minor issues

* Address more code review comments

* Some refactoring to put defaults in IndexTaskUtils
* Added check for maxBytesInMemory in AppenderatorImpl
* Decrement bytes in abandonSegment
* Test unit test for multiple sinks in single appenderator
* Fix some merge conflicts after rebase

* Fix some style checks

* Merge conflicts

* Fix failing tests

Add back check for 0 maxBytesInMemory in OnHeapIncrementalIndex

* Address PR comments

* Put defaults for maxRows and maxBytes in TuningConfig
* Change/add javadocs
* Refactoring and renaming some variables/methods

* Fix TeamCity inspection warnings

* Added maxBytesInMemory config to HadoopTuningConfig

* Updated the docs and examples

* Added maxBytesInMemory config in docs
* Removed references to maxRowsInMemory under tuningConfig in examples

* Set maxBytesInMemory to 0 until used

Set the maxBytesInMemory to 0 if user does not set it as part of tuningConfing
and set to part of max jvm memory when ingestion task starts

* Update toString in KafkaSupervisorTuningConfig

* Use correct maxBytesInMemory value in AppenderatorImpl

* Update DEFAULT_MAX_BYTES_IN_MEMORY to 1/6 max jvm memory

Experimenting with various defaults, 1/3 jvm memory causes OOM

* Update docs to correct maxBytesInMemory default value

* Minor to rename and add comment

* Add more details in docs

* Address new PR comments

* Address PR comments

* Fix spelling typo",2018-05-03T23:25:58Z
739e347320b77345b79e522ec050d84abbf2e24c,"Allow Hadoop dataSource inputSpec to be specified multiple times. (#5717)

* Allow Hadoop dataSource inputSpec to be specified multiple times.

* Fix test",2018-05-03T20:51:57Z
df01998213d31ba7231afd5d61395e82e2e4ac09,"SegmentLoadDropHandler: Fix deadlock when segments have errors loading on startup. (#5735)

The ""lock"" object was used to synchronize start/stop as well as synchronize removals
from segmentsToDelete (when a segment is done dropping). This could cause a deadlock
if a segment-load throws an exception during loadLocalCache. loadLocalCache is run
by start() while it holds the lock, but then it spawns loading threads, and those
threads will try to acquire the ""segmentsToDelete"" lock if they want to drop a corrupt
segments.

I don't see any reason for these two locks to be the same lock, so I split them.",2018-05-03T16:59:01Z
d2b8d880ea91b0b22e1ddf5e7f9587fbeddc4300,include hybrid and caffeine in cache docs and show caffeine as default (#5737),2018-05-03T16:52:05Z
2c8296f94d2eeaa708d61c21e18976e8d8449fc8,"Fix Appenderator.push() to commit the metadata of all segments (#5730)

* Remove persist from Appenderator

* fix javadoc",2018-05-02T20:17:54Z
d4311b4a5adf9c0653808c72b902e24ed09547c2,"Support enablePathStyleAccess, disableChunkedEncoding, and forceGlobalBucketAccessEnabled for aws client (#5702)

* Support enablePathStyleAccess and disableChunkedEncoding for aws client

* add an option for forceGlobalBucketAccessEnabled

* add missing doc",2018-05-02T17:45:38Z
e2431ae1616dbcf7cebee1e43257e9ff574682bd,"Update defaultHadoopCoordinates in documentation. (#5720)

* Update defaultHadoopCoordinates in documentation.

To match changes applied in #5382.

* Remove a parameter with defaults from example configuration file.

If it has reasonable defaults, then why would it be in an example config file?

Also, it is yet another place that has been forgotten to be updated and will be forgotten in the future.

Also, if someone is running different hadoop version, then there's much more work to be done than just changing this property, so why give users false hopes?

* Fix typo in documentation.",2018-05-01T03:49:14Z
a0c2ae7a388920a6118d4461018247390aea603a,"Fix NullPointerException when in DeterminePartitionsJob for Hadoop 3.0 and later versions (#5724)

In DeterminePartitonsJob -
config.get(""mapred.job.tracker"").equals(""local"") throws NPE as the
property name is changed in hadoop 3.0 to mapreduce.jobtracker.address

This patch extracts the logic to fetch jobTrackerAddress in JobHelper
and reuses it when needed.",2018-05-01T03:41:58Z
754c80e74a2dc725d79569e89f95682b209a518c,"Fix quickstart docs to specify that Java 8 is required. (#5722)

See #4907 #5719",2018-04-30T20:25:59Z
0f8493846e7482a775598ee3aed657439ca0bcf5,Replace dev list references in docs. (#5723),2018-04-30T18:25:45Z
8ec2d2fe1855109014c2246a7d67b0e32c09d3f7,"Use unique segment paths for Kafka indexing (#5692)

* support unique segment file paths

* forbiddenapis

* code review changes

* code review changes

* code review changes

* checkstyle fix",2018-04-30T04:59:48Z
762f8829e4e935eff75988d52d294c6428610fe0,"Add task action metrics, add taskId metric dimension. (#5714)

* Add task action metrics, add taskId metric dimension.

Adds two new metrics: task/action/log/time and task/action/run/time. Also
adds taskId as a dimension, to give us the ability to drill down into metrics
for an individual task. Also standardizes metrics-attachment using two helper
methods in IndexTaskUtils.

* Fix typo",2018-04-30T04:24:06Z
90cd05696eb176ff8642744b2bce4838a95d69af,Document processing properties required for Middlemanager (#5660),2018-04-30T00:20:17Z
23dc0d5b24c762929976769edc41b7a49a5a69a3,Better logging for taskLockBox (#5703),2018-04-29T04:08:10Z
513fab77d96202bcee8c68f0ab927804d4400c0a,"Lazy init of fullyQualifiedStorageDirectory in HDFS pusher (#5684)

* Lazy init of fullyQualifiedStorageDirectory in HDFS pusher

* Comment

* Fix test

* PR comments",2018-04-29T04:07:39Z
4db9e39a715ec64e59c985ec534b54bcf153b2df,"fix NPE when buffersList contains null in SmooshedFileMapper (#5689)

* fix NPE when buffersList contains null

* address the comment",2018-04-28T01:15:04Z
86746f82d8a5e0fa36748240009e838eb0dff6d9,"Use mergeBuffer instead of processingBuffer in parallelCombiner (#5634)

* Use mergeBuffer instead of processingBuffer in parallelCombiner

* Fix test

* address comments

* fix test

* Fix test

* Update comment

* address comments

* fix build

* Fix test failure",2018-04-28T01:14:37Z
9be000758d81cf557f673737f03351eee5bd8a3e,"Refactor index merging, replace Rowboats with RowIterators and RowPointers (#5335)

* Refactor index merging, replace Rowboats with RowIterators and RowPointers

* Add javadocs

* Fix a bug in QueryableIndexIndexableAdapter

* Fixes

* Remove unused declarations

* Remove unused GenericColumn.isNull() method

* Fix test

* Address comments

* Rearrange some code in MergingRowIterator for more clarity

* Self-review

* Fix style

* Improve docs

* Fix docs

* Rename IndexMergerV9.writeDimValueAndSetupDimConversion to setUpDimConversion()

* Update Javadocs

* Minor fixes

* Doc fixes, more code comments, cleanup of RowCombiningTimeAndDimsIterator

* Fix doc link",2018-04-28T00:34:32Z
71ecb71dcf490fa223eeefa8b6588698cf9242d2,"Add DataSegmentFinder for Google Storage adapter (#5686)

Partially fixes #5628",2018-04-26T21:00:49Z
f81855d607652c68002ae706eac67d3a9dc1934c,Add unauthorized errorCode to query docs. (#5691),2018-04-26T20:06:25Z
dc786ebc4c87fd17e334cd43aaf5172f2a8121da,SQL: Remove some unused code. (#5690),2018-04-24T18:42:16Z
034a0aa42bad1beb5702b6dc1f33925a623f54b9,Fix wrong null check in TaskStatusPlus (#5678),2018-04-24T17:59:29Z
2e76012acac9a8bfd9a543d303d42d4af6d67c0b,Allow GCS data segment killer to delete if present (#5675),2018-04-24T14:16:54Z
fd76af9737f1ac7009635e1b630f6cab6d49449d,remove old prod cluster config link (#5676),2018-04-24T01:00:24Z
73da7426daf28bd3dd0fe466a4e223400bfe3929,"Timeseries results are incoherent for case interval is out of range and case false filter. (#5649)

* adding some tests

Change-Id: I92180498e2e6695212b286d980e349c136c78c86

* added empty sequence runner

Change-Id: I20c83095072bbf3b4a3a57dfc1934d528e2c7a1a

* treat only granularity ALL

Change-Id: I1d88fab500c615bc46db4f4497ce93089976441f

* moving toList within If and add expected queries

Change-Id: I56cdd980e44f0685806efb45e29031fa2e328ec4

* typo

Change-Id: I42fdd28da5471f6ae57d3962f671741b106300cd

* adding tests and fix logic of intervals

Change-Id: I0bd414d2278e3eddc2810e4f5080e6cf6a117f12

* fix style

Change-Id: I99a2380934c9ab350ca934c56041dc343c08b99f

* comments review

Change-Id: I726a3b905a9520d8b1db70e4ba17853c65c414a4",2018-04-23T22:55:18Z
55b003e5e82cc11430d54e857a723ac9d4b52845,"Fix loadstatus?full double counting expected segments (#5667)

* fix loadstatus?full double counting expected segments

* remove possible flakiness from Thread.sleep() in test",2018-04-23T19:41:16Z
a3a9ada84387c846de61dc685e44d78bc3eaf6ca,Add GenericWhitespace checkstyle check (#5668),2018-04-23T19:39:14Z
ca3f833426231623cd7eb47a6eff9bd2886b6a87,"Fix coordinator's dataSource api with full parameter (#5662)

* Fix coordinator's dataSource api with full parameter

* address comment

* Add a constructor for json serde and fix result order

* Change to immutableSortedMap

* Revert immutableSortedMap to treeMap",2018-04-20T00:41:53Z
15f4ab2b318cd94c63c67533d3e9600631eaa2e2,Expose noop filter to users (#5597),2018-04-18T14:57:07Z
5d09f76df6778df6a1782fc57b94eeeff05301fa,"topN: Fix caching of Float dimension values. (#5653)

Jackson would deserialize them as Doubles, leading to ClassCastExceptions
in the topN processing pipeline when it attempted to treat them as Floats.",2018-04-17T22:35:18Z
a7ba2bf2754e80a71a866f746ccc3ff900f9857e,Detailed error message when unable to create temp dir (#5648),2018-04-17T22:12:46Z
8e441cd14284c371fedd3d7b1c2db7ee0304678a,Fix cache bug in stats module (#5650),2018-04-17T22:11:03Z
fbf3fc178e5b19328a0ee42b6d7e226d34e77332,"Timeseries: Add ""grandTotal"" option. (#5640)

* Timeseries: Add ""grandTotal"" option.

* Modify whitespace.

* Checkstyle workaround.",2018-04-17T01:22:19Z
d0b66a6af5c7800d7682683b5c4f5bb1396585dd,"Fix HTTP OPTIONS request auth handling (#5638)

* Fix HTTP OPTIONS request auth handling

* PR comment

* More PR comments

* Fix

* PR comment",2018-04-17T01:09:56Z
6b3bde01438a23d44a6968166e5be1cdf8001ed1,Fix granularitySpec doc (#5647),2018-04-16T18:24:39Z
f349e03091546c2b55ca91750a44c107403b84d3,"Fix NPE in compactionTask (#5613)

* Fix NPE in compactionTask

* more annotations for metadata

* better error message for empty input

* fix build

* revert some null checks

* address comments",2018-04-13T04:11:03Z
124c89e435ee3e368f2dcc6cb4ec305a65cf9e65,"Replace EmittedBatchCounter and UpdateCounter with ConcurrentAwaitableCounter (#5592)

* Replace EmittedBatchCounter and UpdateCounter with (both not safe for concurrent increments/updates) with ConcurrentAwaitableCounter (safe for concurrent increments)

* Fixes

* Fix EmitterTest

* Added Javadoc and make awaitCount() to throw exceptions on wrong count instead of masking errors",2018-04-13T04:07:11Z
882b172318cd0a284e44acde37404b6135edb16b,"Revert ""Fix HTTP OPTIONS request auth handling (#5615)"" (#5637)

This reverts commit df51a7bcb7afc2b986ea2c9c42f111b161bcf1d4.",2018-04-12T23:43:54Z
e91add6843f7ef9f2ecb6e63e8653064ebf4144c,"Fix coordinator loadStatus performance (#5632)

* Optimize coordinator loadStatus

* Add comment

* Fix teamcity

* Checkstyle

* More checkstyle

* Checkstyle",2018-04-12T22:07:52Z
df51a7bcb7afc2b986ea2c9c42f111b161bcf1d4,"Fix HTTP OPTIONS request auth handling (#5615)

* Fix HTTP OPTIONS request auth handling

* Flip configuration boolean",2018-04-12T21:02:20Z
d0400a0688f2fe9ce366c99442d8803c8045b905,"SegmentWithState: Add toString method. (#5635)

The class appears in log messages, and the default toString method
isn't very informative.",2018-04-12T19:01:09Z
dbea5cb9b7576e1396c2b640f8746680c1e0f89e,"Load rules should honor partial overlap (#5595)

Load rules should load segments that partially overlap with rule window,
instead of loading only segments that fully overlap.",2018-04-12T16:46:00Z
19f359957f129c9f240d122e39bbd336390f6475,"Add getters for AlertEvent (#5522)

* Add getters for AlertEvent

* Move PublicApi and ExtensionPoint to java-util

* Fix publicapi annotation usage

* Add publicapi annotations to ServiceMetricEvent and RequestLogEvent",2018-04-12T16:38:20Z
48c1a1ef57e0200f2065f7d628e3e3e82b06a4d7,change header from Data Schema to Ingestion Spec (#5631),2018-04-12T04:42:54Z
d709d1a59fe803cb1672cdf870aab2f79e700040,"correct overlord console header. Because it's not the coordinator console, it's the overlord console. (#5627)",2018-04-12T00:44:31Z
72d6dcda4fb674261f14e21f143d39aaedb68dc9,"ParallelCombiner: Fix buffer leak on exception in ""combine"". (#5630)

Once a buffer is acquired, we need to make sure to release it if an
exception is thrown before the closeable iterator is created.",2018-04-12T00:39:39Z
e6efd75a3d1ef7d74ec9bb5739d9184c19969055,"Add config to allow setting up custom unsecured paths for druid nodes. (#5614)

* Add config to allow setting up custom unsecured paths for druid nodes.

* return all resources for Unsecured paths

* review comment - Add test

* fix tests

* fix test",2018-04-12T00:10:07Z
afa75e04b779a651abffd2f4f272f2afb07fdeea,"change header in overlord console; minor querydoc change (#5625)

* change header in overlord console; minor querydoc change

* remove change to overlord console

* address Gian comments",2018-04-11T19:57:22Z
b32aad9ab4f797fc558c88db54f0f8da5675cca4,"Fix some broken links in druid docs (#5622)

* Fix some broken links in druid docs

* review comment",2018-04-11T17:27:33Z
ff27c5477403aacb3bbf4c1d6167cf7bcafa1f58,SQL: Remove useless boolean CASTs in filters. (#5619),2018-04-10T17:35:09Z
80fa5094e8e1cde8be67ac7e2ad8f9f89b0e059a,"Fix Kerberos Authentication failing requests without cookies and excludedPaths config. (#5596)

* Fix Kerberos Authentication failing requests without cookies.

KerberosAuthenticator was failing `First` request from the clients.
After authentication we were setting the cookie properly but not
setting the the authenticated flag in the request. This PR fixed that.

Additional Fixes -
* Removing of Unused SpnegoFilterConfig - replaced by
KerberosAuthenticator
* Unused internalClientKeytab and principal from KerberosAuthenticator
* Fix docs accordingly and add docs for configuring an escalated
client.

* Fix excluded path config behavior

* spelling correction

* Revert ""spelling correction""

This reverts commit fb754b43d86d7183e661d6b2027be52efff8a83b.

* Revert ""Fix excluded path config behavior""

This reverts commit 390104776991a368f838d9326bc48cb0ddd1f870.",2018-04-10T03:45:35Z
ee37ff25022307959abd88d09c9d7e98a158161f,"CompressionUtils: Make gzipInputStream public once again. (#5590)

But add a reference to ""decompress"" and mention that it's preferred
when reading from streams that come from files.",2018-04-10T00:39:19Z
3a5d51630881d7519754bba1fa312fa96472741d,Add missing type for MapVirtualColumn (#5598),2018-04-10T00:37:24Z
685f4063d4e63fba5f9ae11bf496c4c2575a8ebf,"DoublesSketchModule: Fix serde for DoublesSketchMergeAggregatorFactory. (#5587)

Fixes #5580.",2018-04-07T13:45:55Z
ad6f234e1eab3382b8af9ad0ec3a25191d55bd71,"Update lookups-cached-global.md (#5525)

Update lookup creation example to work with version 0.12.0",2018-04-06T23:13:17Z
ea4f8544fb33dac91d88af08d5f5892a74e12b8d,revert lambda conversion to fix occasional jvm error (#5591),2018-04-06T21:18:55Z
5ab17668c04791ac342c07e4e896c1cad26f05d1,"CompressionUtils: Add support for decompressing xz, bz2, zip. (#5586)

Also switch various firehoses to the new method.

Fixes #5585.",2018-04-06T15:06:45Z
b86ed99d9a8c48c15b47de41dfa42167d19b8975,"Deprecate spark2 profile in pom.xml (#5581)

Deprecated due to https://github.com/druid-io/druid/pull/5382",2018-04-06T12:37:16Z
c228eed500cbb6c3fda940e1f91ef2461560e081,"Update sql.md (#5519)

Example code is wrong. 'Statement' has to be created from the Connection Object",2018-04-06T07:21:18Z
298ed1755ddb8dba82abbebd5b2d8575a3a9877d,"Fix indexTask to respect forceExtendableShardSpecs (#5509)

* Fix indexTask to respect forceExtendableShardSpecs

* add comments",2018-04-06T06:54:59Z
723857699cd4b81ccc865bd8b9cc374791ce8234,"Add doc for automatic pendingSegments (#5565)

* Add missing doc for automatic pendingSegments

* address comments",2018-04-06T06:53:43Z
ddd23a11e642aa09cb3dbc95a61f2e6a0d8f25f9,"Fix taskDuration docs for KafkaIndexingService (#5572)

* With incremental handoff the changed line is no longer true.",2018-04-06T06:52:58Z
371c672828994ad763fe6f5a0caf635c69ab3c83,"Adding feature thetaSketchConstant to do some set operation in PostAgg (#5551)

* Adding feature thetaSketchConstant to do some set operation in PostAggregator

* Updated review comments for PR #5551 - Adding thetaSketchConstant

* Fixed CI build issue

* Updated review comments 2 for PR #5551 - Adding thetaSketchConstant",2018-04-06T05:56:59Z
270fd1ea1589686fa19f62230fba1ca2d43f7c6e,"Allow getDomain to return disjointed intervals (#5570)

* Allow getDomain to return disjointed intervals

* Indentation issues",2018-04-06T05:12:30Z
969342cd287dc022c8e762b1353c433012363cb8,"More error reporting and stats for ingestion tasks (#5418)

* Add more indexing task status and error reporting

* PR comments, add support in AppenderatorDriverRealtimeIndexTask

* Use TaskReport instead of metrics/context

* Fix tests

* Use TaskReport uploads

* Refactor fire department metrics retrieval

* Refactor input row serde in hadoop task

* Refactor hadoop task loader names

* Truncate error message in TaskStatus, add errorMsg to task report

* PR comments",2018-04-06T04:38:57Z
818091ec603fa172488e309fc462c146651bf3bd,"Add overlord unsecured paths to coordinator when using combined service (#5579)

* Add overlord unsecured paths to coordinator when using combined service

* PR comment",2018-04-05T21:16:06Z
7239f56131d6bff3e9a1484c0f71960288d4ba1b,"Fix NPE in RemoteTaskRunner when some tasks in ZooKeeper but not in Overlord (#5511)

* Fix NPE in RemoteTaskRunner when some tasks in ZooKeeper but not in Overlord

* revert unnecessary change",2018-04-04T04:15:58Z
f0a94f50350cadc271730db916e22d254b6f3e90,"Remove unused config (#5564)

* Remove unused config

* Fix failing tests",2018-04-03T20:23:46Z
f31dba6c5bfc24d99c5c5c807419864d1e530a05,"Coordinator drop segment selection through cost balancer (#5529)

* drop selection through cost balancer

* use collections.emptyIterator

* add test to ensure does not drop from server with larger loading queue with cost balancer

* javadocs and comments to clear things up

* random drop for completeness",2018-04-03T18:22:51Z
a81ae9902138eeb74e5776b9ea0cc7f640795920,"add 'stopped' check and handling to HttpLoadQueuePeon load and drop segment methods (#5555)

* add stopped check and handling to HttpLoadQueuePeon load and drop segment methods

* fix unrelated timeout :(

* revert unintended change

* PR feedback: change logging

* fix dumb",2018-04-03T18:21:52Z
723f7ac55095829c57f8d8a8a03aaca97adc2a49,"Add support for task reports, upload reports to deep storage (#5524)

* Add support for task reports, upload reports to deep storage

* PR comments

* Better name for method

* Fix report file upload

* Use TaskReportFileWriter

* Checkstyle

* More PR comments",2018-04-02T19:10:56Z
6feac204e331e196940e2936c7f2a212135e89b8,"Coordinator primary segment assignment fix (#5532)

* fix issue where assign primary assigns segments to all historical servers in cluster

* fix test

* add test to ensure primary assignment will not assign to another server while loading is in progress",2018-04-02T16:40:20Z
05547e29b2099646241fe2fd728286ad0b81296c,"Fix SQLMetadataSegmentManager to allow succesive start and stop (#5554)

* Fix SQLMetadataSegmentManager to allow succesive start and stop

* address comment

* add synchronization",2018-03-30T19:43:19Z
0c4598c1fee402f26d8575d361eef5f62c69b203,Fix typo in avatica java client code documenation (#5553),2018-03-29T21:36:40Z
30fc4d3ba0c43409ea9b0ef228c017345c02ef0b,"Coordinator balancer move then drop fix (#5528)

* #5521 part 1

* formatting

* oops

* less magic tests",2018-03-29T17:30:12Z
8878a7ff943bf2ce6f15339d330bf4adf8d28472,Replace guava Charsets with native java StandardCharsets (#5545),2018-03-29T04:00:08Z
81be1b396667c23be7f7506ad5e01170a4aa3b46,this will fix it (#5549),2018-03-29T01:58:39Z
912adcc2845d91c58b0f66621fb03d4cf969811c,"ArrayAggregation: Use long to avoid overflow (#5544)

* ArrayAggregation: Use long to avoid overflow

* Add Tests",2018-03-28T23:37:53Z
024e0a9cca4577202ec09de560946151b5da1b88,"Respect forceHashAggregation in queryContext (#5533)

* Respect forceHashAggregation in queryContext

* address comment",2018-03-28T21:15:38Z
db508cf3ca5f2aa4fb7126e3b7f8d2bd4e58a599,"[docs] fix invalid example json (#5547)

https://github.com/druid-io/druid/issues/5546",2018-03-28T20:53:38Z
50e0e7f97d6e39ded9cd7ec9d8c6da43320d0048,"Correct lookup documentation (#5537)

fixes #5536",2018-03-27T00:01:02Z
ea30c05355f7d572a66b82dab5e53d4de4476eb0,"Adding ParserSpec for Influx Line Protocol (#5440)

* Adding ParserSpec for Influx Line Protocol

* Addressing PR feedback

- Remove extraneous TODO
- Better handling of parse errors (e.g. invalid timestamp)
- Handle sub-millisecond timestamps

* Adding documentation for Influx parser

* Fixing docs",2018-03-26T21:28:46Z
ec17a44e0983cd6391ba9f60a1c5571a59595b0a,"Add result level caching to Brokers (#5028)

* Add result level caching to Brokers

* Minor doc changes

* Simplify sequences

*  Move etag execution

* Modify cacheLimit criteria

* Fix incorrect etag computation

* Fix docs

* Add separate query runner for result level caching

* Update docs

* Add post aggregated results to result level cache

* Fix indents

* Check byte size for exceeding cache limit

* Fix indents

* Fix indents

* Add flag for result caching

* Remove logs

* Make cache object generation synchronous

* Avoid saving intermediate cache results to list

* Fix changes that handle etag based response

* Release bytestream after use

*  Address PR comments

*  Discard resultcache stream after use

* Fix docs

* Address comments

* Add comment about fluent workflow issue",2018-03-24T02:11:52Z
ef21ce5a647003600a076bf691e0bcdf0ec58987,"Add graceful shutdown timeout for Jetty (#5429)

* Add graceful shutdown timeout

* Handle interruptedException

* Incorporate code review comments

* Address code review comments

* Poll for activeConnections to be zero

* Use statistics handler to get active requests

* Use native jetty shutdown gracefully

* Move log line back to where it was

* Add unannounce wait time

* Make the default retain prior behavior

* Update docs with new config defaults

* Make duration handling on jetty shutdown more consistent

* StatisticsHandler is a wrapper

* Move jetty lifecycle error logging to error",2018-03-23T16:38:17Z
0851f2206c129f3dabdd87b48b7531cdb5ba2e37,"Expanded documentation for DataSketches aggregators. (#5513)

Originally written by @AlexanderSaydakov in druid-io/druid-io.github.io#448.
I also added redirects and updated links to point to the new
datasketches-extension.html landing page for the extension, rather than to
the old page about theta sketches.",2018-03-22T01:19:27Z
1ad898bde29820a8ff41267457a4370395406ae5,"Use the official aws-sdk instead of jet3t (#5382)

* Use the official aws-sdk instead of jet3t

* fix compile and serde tests

* address comments and fix test

* add http version string

* remove redundant dependencies, fix potential NPE, and fix test

* resolve TODOs

* fix build

* downgrade jackson version to 2.6.7

* fix test

* resolve the last TODO

* support proxy and endpoint configurations

* fix build

* remove debugging log

* downgrade hadoop version to 2.8.3

* fix tests

* remove unused log

* fix it test

* revert KerberosAuthenticator change

* change hadoop-aws scope to provided in hdfs-storage

* address comments

* address comments",2018-03-21T22:36:54Z
885b975c9574e3cfc4aae1cfccfd749b4dbb6e35,fix LongsColumnWithNulls and FloatsColumnWithNulls to override isNull in order to actually use nullValueBitmap (#5510),2018-03-20T23:04:08Z
58f110f7f8980eb9cf13a644533dbcf13b611db8,"Future-proof some Guava usage (#5414)

* Future-proof some Guava usage

* Use a java-util EmptyIterator instead of Guava's
* Change some of the guava future handling to do manual async
transforms. Guava changes transform into transformAsync by deprecating
transform in ONLY Guava 19. Then its gone in 20

* Use `Collections.emptyIterator()`

* Pretty formatting

* Make listenable future transforms a thing in default druid

* Format fix

* Add forbidden guava apis

* Make the ListenableFutrues.transformAsync have comments

* Undo intellij bad pattern matching in comments

* Futrues --> Futures

* Add empty iterators forbidding

* Fix extra `A`

* Correct method signature

* Address review comments

* Finish Gian review comments

* Proper syntax from https://github.com/policeman-tools/forbidden-apis/wiki/SignaturesSyntax",2018-03-20T15:59:33Z
17c71a2a604205a056faefcbb0be8b787c090552,"Make Doubles aggregators use 64bits by default (#5478)

* use 64-bit float representation for double based aggregator

Change-Id: Ia4f442037052add178f6ac68138c9d52f96c6e09

* review comments

Change-Id: I5a588f7364f236bf22f2b138e9d743bfb27c67fe",2018-03-20T02:13:04Z
b22455b9246292a31363487769a95ffc63df4bf3,Fix supervisor tombstone auth handling (#5504),2018-03-19T19:55:47Z
693e3575f9ff878d94770948f468810f91552b32,"Remove unused code and exception declarations (#5461)

* Remove unused code and exception declarations

* Address comments

* Remove redundant Exception declarations

* Make FirehoseFactoryV2.connect() to throw IOException again",2018-03-16T21:11:12Z
afa25202a3747cdf0d54cc6eb14cb8ffeab98ae8,"Segment filtering should be done by looking at the inner most query o… (#5496)

* Segment filtering should be done by looking at the inner most query of a nested query

* Fixing checkstyle errors

* Addressing code review comments",2018-03-16T21:05:14Z
30e6bdedf3de89787999eac4dab93f84410f7db4,Authorize supervisor history instead of current active supervisors for supervisor history API (#5501),2018-03-16T19:29:17Z
a08efe4683d4e9fd834f061569def973879e186b,"Fix round robining in router. (#5500)

* Fix round robining in router.

Say that ten times fast.

For query endpoints, AsyncQueryForwardingServlet called hostFinder.getDefaultServer()
to set a default server, followed by hostFinder.getServer(inputQuery) to override it
with query-specific routing. Since hostFinder is round-robin, this skips a server.
When there are only two servers, one server is _always_ skipped and the router sends
all queries to the same broker.

* Adjust spacing.",2018-03-16T01:45:59Z
16b81fcd532a0ccad3281aeffa9adb0bce2b5678,"SegmentMetadataQuery: Fix default interval handling. (#5489)

* SegmentMetadataQuery: Fix default interval handling.

PR #4131 introduced a new copy builder for segmentMetadata that did
not retain the value of usingDefaultInterval. This led to it being
dropped and the default-interval handling not working as expected.
Instead of using the default 1 week history when intervals are not
provided, the segmentMetadata query would query _all_ segments,
incurring an unexpected performance hit.

This patch fixes the bug and adds a test for the copy builder.

* Intervals",2018-03-15T17:05:46Z
7d1163b0d91bd17f1f669d8f66873f1126e3dc91,"Optimize chunkedCopy for sequential writes (#5477)

NativeIO.chunkedCopy fsyncs its writebuffer directly and
requires an O_DIRECT RandomAccessFile. By allowing the
kernel to start writing while filling the buffer the writes
will be more constant. In addition the O_DIRECT flag is not
required anymore and this will work faster in case fadvise
is not supported on some system.

This is based on Linus' post here:
http://lkml.iu.edu/hypermail/linux/kernel/1005.2/01845.html",2018-03-14T22:15:41Z
e096a8d6c56fd95c73193699897968ac0c330c50,"Emitter: Clarify contract of ""emit"". (#5486)

* Emitter: Clarify contract of ""emit"".

* New wording",2018-03-14T21:07:08Z
fdd55538e1314db05e3d4c7e794c2c9217794917,"SQL: Remove unused escalator, authConfig from various classes. (#5483)

DruidPlanner.plan is responsible for checking authorization, so these objects
weren't needed in as many places as they were injected.",2018-03-14T20:28:51Z
40cc2c8740c36300aca623ec5856acb1900486e2,Query should not fail because emitter fails or throws Exception (#5484),2018-03-14T02:57:05Z
9b2a25bd847ced59893f316aa0b8b5c8eea339d5,"Refactor supervisorReport to be type-safe (#5479)

* refactor supervisorReport

* use primitives",2018-03-13T16:28:44Z
34f655599dbfb6484f5766a4d2d556a0693017d7,"Let MySQLConnector accept all UTF charsets and recommend utf8mb4 (#5411)

* Let MySQLConnector accept all UTF charsets and recommend utf8mb4

* Fix regex and remove newline in log statement",2018-03-13T08:16:10Z
96cebfc22258bd4a0e36857b0b624040b72b633a,"As part of this feature, implemented a new endpoint to get running tasks by datasources (#5260)

and added datasource information as part of existing endpoint /druid/indexer/v1/runningTasks.

Added junit test cases for the newly implemented API and fixed existing junit test cases.

Fixed review comments - added new method getCreatedDateTimeAndDataSource into TaskStorageQueryAdapter class
and formatted changed files",2018-03-13T06:48:11Z
e96881158326c8c21c25810d932548fd087a656c,HttpServerInventoryView: fixed startup wait time and more informative logging (#5336),2018-03-13T05:13:51Z
6b158abe3f6e956eb0ecf520153bddafe1c8878c,"Enforce optimal IndexedInts iteration (#5456)

* Enforce optimal IndexedInts iteration

* Fix remaining suboptimal usages",2018-03-09T17:42:40Z
d159a4fa01884cc9bb06f892d8a6589878363f3b,better error messaging when parseSpec is missing timestampSpec or dimensionSpec (#5439),2018-03-08T15:57:13Z
8f07a39af70d51f275e0da69ff3fa7df7a89cd8d,"Skip OS cache on Linux when pulling segments (#5421)

Druid relies on the page cache of Linux in order to have memory segments.
However when loading segments from deep storage or rebalancing the page
cache can get poisoned by segments that should not be in memory yet.
This can significantly slow down Druid in case rebalancing happens
as data that might not be queried often is suddenly in the page cache.

This PR implements the same logic as is in Apache Cassandra and Apache
Bookkeeper.

Closes #4746",2018-03-08T15:54:21Z
8fae0edc95576a314adbe76dd1ce1eb2ab3b6652,allow arbitrary aggregators for reindexing with hadoop (#5294),2018-03-08T01:13:56Z
b084075279be516df34147d22d97bdc030961a6e,Add http/https proxy options to PullDependencies.java (#5450),2018-03-07T23:05:43Z
593e87637d72b22747969925fcca1ae44db28f15,"Inline some backward incompatible Hadoop 3.0 method  (#5396)

* Inline some backward incompatible hadoop 3.0 method

Change-Id: I49aeff5412d5cdea95e30feb031b2c036d036e9a

* fix build issue

Change-Id: I0a42fdb83ce970d6a2d3d45f150556e45442a0ac",2018-03-07T15:58:18Z
0f03ab0c743c46e802d2d7f05bf3d251256c6d23,"SQL: Fix precision of TIMESTAMP types. (#5464)

Druid stores timestamps down to the millisecond, so we should use
precision = 3. Setting this wrong sometimes caused milliseconds
to be ignored in timestamp literals.

Fixes #5337.",2018-03-06T02:56:52Z
ff0de21fc523614e2ede451328ddc9f16e665b72,"SQL: Fix assumption that AND, OR have two arguments. (#5470)

Calcite can deliver an AND or OR operator with > 2 arguments.
Fixes #5468.",2018-03-06T02:56:35Z
c9b12e7813aa151e7efa16a8fa862c807ab6fedb,"Fix JSON serde for taskStatusPlus (#5469)

* Fix JSON serde for taskStatusPlus

* add newline

* fix to statusCode

* fix fobidden api check

* remove debugging code",2018-03-06T02:49:59Z
8a518006936e543c2b639b4726db62512c0f4d8b,fix PortFinder issue #5466 (#5467),2018-03-06T00:58:49Z
ba3dbf2a42300c78ff0d8718627fd25256c8a945,Fixed NPE when dimension is null or empty. https://github.com/druid-io/druid/issues/3007 (#5299),2018-03-06T00:27:35Z
7416d1d02d5e88b92b728c627922e6293066e03a,"Add ""joda"" option to timeFormat extractionFn. (#5448)",2018-03-03T03:59:26Z
f9480667107058a4562ef33a241bdb3937f51167,KafkaIndexTask remove branch with unreachable code (#5434),2018-03-03T01:26:12Z
b63f1c0e459d6751803c2c779edc6f8ccfeb0441,Fix authorization check in supervisor history API (#5460),2018-03-02T22:03:07Z
969a12f6ca75f285dbd0b1da3885b34bbfb40155,#5425 Refactor to use map.get() when asserting the existence of published segments (#5426),2018-03-02T18:42:39Z
cf5f74b0138ef89f2c718a718626308e2c7a9f08,Fix GroupBy limit push down descending sorting on numeric columns (#5453),2018-03-02T02:43:45Z
e0d456b1ba522755923bedc5ccfed2f9723b9acf,"Uniformly set Calcite systemProperties for All Unit tests (#5451)

Fixes test failures reported in -
https://github.com/druid-io/druid/issues/4909

Issue is that If some test skips setting up Calcite system properties
with proper encoding and loads calcite classes that use that property,
All subsequent tests in the same JVM fails.

To reproduce the issue - ExpressionsTest and CalciteQueryTest from IDE
in this order.

A better fix would be to not use System Properties in calcite, This
will work for now.

All new Calcite Unit tests that are added need to inherit
CalciteTestBase.",2018-03-01T20:56:32Z
fb493ae13a18e4b65d32edb1f044a4f5560ca3e4,"Add repository url (#5437)

snapshot build fails to find dependent artifacts.
Add repoistory URL to resolved dependencies",2018-03-01T15:38:24Z
16e08c9adbaf77ab08d45e8705550cb0330f0932,add task priority for kafka indexing (#5444),2018-03-01T06:29:23Z
e4eaee3806befe2ff9d2d7367afd2bf0c5ebee9b,"Support for disabling bitmap indexes. (#5402)

* Support for disabling bitmap indexes.

Can save space for columns where bitmap indexes are pointless (like
free-form text).

* Remove import.

* Fix CompactionTaskTest.

* Update for review comments.

* Review comments, tests.

* Fix test.",2018-03-01T03:19:56Z
6a3a5350b859ceb96876791fbef8ab17361ab52c,"Make memcached protocol and locator configurable. (#5438)

* Make memcached protocol and locator configurable.

* Style fix.

* Style fix.

* Style fix.",2018-03-01T01:16:43Z
c23b7235100d952bca45929aff97026846d98c1e,"Skip normal authentication for JDBC requests in Router (#5435)

* Skip normal authentication for JDBC requests in Router

* Add integration test

* PR comments",2018-02-28T20:25:32Z
27bf619d5d2f0081ee7e27bcea7d91563e5aca7a,"Test flattenSpecs where the referred-to object is missing. (#5318)

It worked, but it's still good to have a test.",2018-02-27T23:10:30Z
0f009a41e1d1abfd733b48fe0c760647904d25c7,Fixed PeriodGranularity for Asia pacific timezones (#5410),2018-02-27T18:39:50Z
ac5034e2414ab038984fc0cdb24999a2f9babd5d,Improve cache cost to handle heterogenous historicals (#5416),2018-02-23T21:17:31Z
e9977ce4ef7ed5cb39a7dc7d6309e115a9eb879f,"Automatically adjust com.metamx.metrics Monitor class references (#5412)

* Automatically adjust com.metamx.metrics monitor class references

* Log warning for old class names",2018-02-22T20:03:07Z
5c56d01daa94e50611e457ad726d4b1c84bfa6c8,pass configuration from context into JobConf for determining DatasourceInputFormat splits (#5408),2018-02-21T18:01:32Z
f3796bc81b3fa0369aa2790ec3a261a9b70b3563,"SQL: Lower default JDBC frame size. (#5409)

The previous default of 100,000 was a bit excessive and could easily
lead to OOM errors on ""select *"" style queries.",2018-02-21T18:00:48Z
3f7253778781223ee9290232f2528c33baa0cef1,"Fix missing task type in task payload API. (#5399)

* Fix missing task type in task payload API.

Apparently embedding a polymorphic object inside a Map<String, Object> is
a bit too much for Jackson to serialize properly. Fix this by using
wrapper classes.

* Fix OverlordTest casts.

* Remove import.

* Remove unused imports.

* Clarify comments.",2018-02-21T18:00:13Z
818ce51964a17a0fa629dc399f696554a082cd27,SQL: Fix selecting BOOLEAN type in JDBC. (#5401),2018-02-21T17:59:56Z
219e77aeac9b07dc20dd9ab2dd537f3f17498346,"SQL compatible Null Handling Part - Expressions and Storage Changes (#5278)

* SQL compatible Null Handling Part - Expressions, Storage and Dimension Selector Changes

fix travis strict compilation

* fix teamcity error - remove unused method

* review comments

* review comments

* more comments

* review comments

* review comments

* Optimize isNull method

* Optimize isNull in ColumnarFloats/Longs/Doubles

* review comment - separate classes for null and non-null columns

fix intellij inspection

* remove unused import

* More Review comments

* improve comment

* More review comments

* fix checkstyle

* more review comments

* review comments.

fix javadoc links

remove Nullable from ConstantColumnValueSelector

* review comments.

* satisfy teamcity inspections",2018-02-21T12:27:26Z
305ecc2a782e189d35af2deea9c29ebceb46c1cc,"adding a properties endpoint in status resource (#5276)

* adding a properties endpoint in status resource

* checkstyle fixes

* more checkstyle corrections

* correcting the resource filter for properties endpoint

* adding feature of hiding sensitive properties

* checkstyle changes

* review changes for adding default hidden properties and using jackson for arrays value

* making review changes",2018-02-18T20:51:02Z
deeda0dff28b1a4d27ea216ad801f4a3fa277c3c,"Fix DefaultLimitSpec to respect sortByDimsFirst (#5385)

* Fix DefaultLimitSpec to respect sortByDimsFirst

* fix bug

* address comment",2018-02-16T23:26:32Z
fba13d8978b5a2f007f49b588d776cc513742560,"time based checkpointing for Kafka Indexing Service (#5255)

* time based checkpointing

* add test and fix issue

* fix comments

* fix formatting

* update docs",2018-02-16T04:57:02Z
20a3164180e2e81574f28c57ef3777fed3b7fdde,"Support for router forwarding requests to active coordinator/overlord (#5369)

* allow router to forward requests to coordinator and overlord

* fix forbidden API

* more forbidden api fixes

* code review changes",2018-02-15T22:38:58Z
c45fe376114032aca7a600c0853b70e8ae9830da,"Feature add coordinator servers endpoint documentation (#5392)

* Add new servers section to the coordinator endpoints documentation

* Remove trailing whitespace",2018-02-15T22:37:58Z
472ba14dfe6e69a9fddf3096d25219baf0767199,"Support Map type in ORC extension (#5363)

* Support map type in orc extension.
Added getMapObject in OrcHadoopInputRowParser
Updated parse tests to parse map-type field in OrcHadoopInputRowParserTest

* changed from for-loop to foreach

* added resolution of column names when map types are exploded to several
columns. updated the document as well -- orc.md.

* Update orc.md

change from review",2018-02-15T21:03:15Z
b9b3be6965f86aded444ae9a0a2ef47da9d10fac,"fix segment info in Kafka indexing service docs (#5390)

* fix segment info in Kafka indexing service docs

* review updates",2018-02-15T17:57:30Z
be38b18a852ee16a9e53d3bae0e611246b84e6fc,"Support Hadoop batch ingestion for druid-azure-extensions (#5221)

* Support Hadoop batch ingestion for druid-azure-extensions #5181

* Fix indentation issues

* Fix forbidden-apis violation

* Code & doc improvements for azure-extensions

* Rename version to binaryVersion where appropriate to avoid confusion
* Set default protocol to wasbs://, as recommended by the Azure docs
* Add link to Azure documentation for wasb(s):// path
* Remove any colons from the dataSegment.getVersion()
* Added test for dataSegment.getVersion colon is replaced
* Use StringUtils.format for String concatenation
* remove empty lines

* Remove unneeded StringUtils.format from log.info",2018-02-15T15:45:18Z
cd929000cad2a8075f2d53dd98c7a89271bd59ef,"Change early publishing to early pushing in indexTask & refactor AppenderatorDriver (#5297)

* Fix early publishing to early pushing in batch indexing & refactor appenderatorDriver

* fix compile

* rename and add more javadocs

* Fix conflicts

* address comments

* revert await executors

* fix test",2018-02-14T20:48:33Z
65225bd6e7553f4e54d1e7400028abbf35d4b888,Make HttpPostEmitter more robust in the face of serious errors (like OutOfMemoryError) during onSealExclusive() (#5386),2018-02-14T01:00:58Z
aa7aee53ce524b7887b218333166941654788794,"Opentsdb emitter extension (#5380)

* opentsdb emitter extension

* doc for opentsdb emitter extension

* update opentsdb emitter doc

* add the ms unit to the constant name

* add a configurable event limit

* fix version to 0.13.0-SNAPSHOT

* using a thread to consume metric event

* rename method and parameter",2018-02-13T21:10:22Z
b234a119acd53df5dd538faaea428b826ce0df60,"Log exceptions thrown before persist() for indexing tasks (#5374)

* Log exceptions thrown before persist() for indexing tasks

* PR comment",2018-02-13T17:20:07Z
49a6b0b8a638315db83e0e5d0caafdc7dcdc5131,Debug logging in HttpPostEmitter and Batch (#5365),2018-02-13T17:19:04Z
06f0067b6cbd08a4fa9c3db42ea550222b1568bd,Fix typo: change partitioningSpec to partitionsSpec in design/segments (#5376),2018-02-12T19:03:40Z
ad9eca842e97d74d2c725c33231dffc5bb47293d,Add TeamCity instructions (#5379),2018-02-10T21:13:33Z
0105cdbc19828009d21de57a30ba55794a518d30,Fix Json Serde (#5370),2018-02-08T21:13:52Z
e64ffb10c24504858a04e0b7402ae07e3e39cfbc,"Standartize on using Integer.BYTES instead of Ints.BYTES from Guava, same for other primitives (#5366)",2018-02-07T21:24:30Z
23b0a091b640e69025f0b2449a19a9d6beffb3b9,Local docker for running integration tests (#5314),2018-02-07T21:06:06Z
971d45ab3f01d88c9abb210fcf069a672a5de09f,"Use a separate snapshot file per lookup tier. (#5358)

Prevents conflicts if two processes on the same machine use the
same lookup snapshot directory but are in different tiers.",2018-02-07T19:28:53Z
66e183eeab234ecec24a98d3e57b6d543e8058dc,Integration test for AppenderatorDriverRealtimeIndexTask (#5355),2018-02-07T19:19:25Z
eb17fba0e213fc6e36843d5a14fdb23c0dc14926,"Fix race in CoordinatorPollingBasicAuthorizerCacheManager. (#5359)

Similar to #5344 but for the authorizer instead of the authenticator.",2018-02-07T00:45:29Z
77bb2f9c9f02c28442f7e180adaf87897792d8ad,"Update post-aggregations.md (#5237)

* Update post-aggregations.md

I think this is more clear. I am not sure how multiplying by 100 is involved in averaging...

* Update post-aggregations.md

adding additional aggregator

* Update post-aggregations.md",2018-02-07T00:26:39Z
e255d66b851fa53067d8acfac888a4af1fa33607,"Fix two improper casts in HavingSpecMetricComparator. (#5352)

* Fix two improper casts in HavingSpecMetricComparator.

Fixes two things:

1. An improper double-to-long cast when comparing double metrics to any
   kind of value, which was a regression from #4883.
2. An improper double-to-long cast when comparing a long/int metric to a
   double/float value: the value was cast to long/int, drawing strange
   conclusions like int 100 matching a havingSpec of equalTo(100.5).

* Add comments.

* Remove extraneous comment.

* Simplify code a bit.",2018-02-06T21:18:55Z
2099b43e5fe21e10f92d9703224206275c79c8ce,"Add a new config object for compactConfig (#5264)

* add a new config object for compactConfig

* fix test

* address comments

* Update doc",2018-02-06T20:13:52Z
c21ff6e81c9bee485f0cc9a1252e3ec9694ba263,"Properly set ""identity"" in query metrics. (#5330)

* Properly set ""identity"" in query metrics.

This patch adds an ""identity"" field to QueryPlus and sets it in
QueryLifecycle when the query starts executing. This is important
because it allows it to be used for future QueryMetrics created
by that QueryPlus object.

We also add ""identity"" to the request-level QueryMetrics object
created in emitLogsAndMetrics.

* Remove unused method.",2018-02-06T18:53:00Z
93fdbcb3642b5c793a6c997706b22ae0fda157de,"Change RealtimeIndexTask to use AppenderatorDriver (#5261)

* Change RealtimeIndexTask to use AppenderatorDriver instead of RealtimePlumber.  Related to #4774

* Remove unused throwableDuringPublishing

* Fix usage of forbidden API

* Update realtime index IT to account for not skipping older data any more

* Separate out waiting on publish futures and handoff futures to avoid a race condition where the handoff timeout expires before the segment is published

* #5261 Add separate AppenderatorDriverRealtimeIndexTask and revert changes to RealtimeIndexTask

* #5261 Add separate AppenderatorDriverRealtimeIndexTask and revert changes to RealtimeIndexTask

* #5261 Readability improvements in AppenderatorDriverRealtimeIndexTask.  Combine publish and handoff futures in to single future

* #5261 Add separate tuningConfig for RealtimeAppenderatorIndexTask.  Revert changes to RealtimeTuningConfig

* #5261 Change JSON type to realtime_appenderator to keep the same naming pattern as RealtimeIndexTask",2018-02-06T18:21:31Z
8c738c707667c987136623617e7432b8cdb348f9,"Fix races in LookupSnapshotTaker, CoordinatorPollingBasicAuthenticatorCacheManager (#5344)

* Fix races in LookupSnapshotTaker, CoordinatorPollingBasicAuthenticatorCacheManager.

Both were susceptible to the following conditions:

1. Two JVMs on the same machine (perhaps two peons) could conflict by one reading while the
   other was writing, or by writing to the file at the same time.
2. One JVM could partially write a file, then crash, leaving a truncated file.

* Use StringUtils.format",2018-02-06T17:44:06Z
37c09ce3f8c561c4c23c3383d4fd56c1cafa148f,"Use both Joad Ids and Java IDs as Timezone to string readers (#5349)

* Use both Joad Ids and Java IDs as Timezone to string readers

Change-Id: Ieb5c18559879f3f3a0104912ce2f0a354ad0aac3

* move the function to DateTimes and add org.joda.time.DateTimeZone#forID as part of forbidden api

Change-Id: Iff97fa044758019ed0c231587d10e31a9cc18da0

* exclude class and remove other usage

Change-Id: Ib458c2caaa1865535767e1009fbf017a92c8f615

* remove it from test classes

Change-Id: I9b576324f6c7e17a74bd8b13879232c9a8cd40b4

* remove unused

Change-Id: If1c5b70c26c2b7c83c20434cb72b2060653f5052",2018-02-06T11:04:11Z
9a62b02cb7ecff21e9eb661bf1bc7a5ee26c821a,"Extensions: Option to load classes from extension jars first. (#5321)

The behavior is configurable through druid.extensions.useExtensionClassloaderFirst.
It is useful when extensions want to load a dependency different from one provided
by Druid, for example a different version of geoip or protobuf.",2018-02-06T10:44:03Z
0db696b7c922e15886c92fa901cd82ff584303d8,"Fix CompactionTask doc (#5351)

* Fix CompactionTask doc

* Update coordinator doc",2018-02-06T06:38:34Z
285dedd126705c8c1ea2fb5a0698bbfa4ea9f9d3,"More ParseException handling for numeric dimensions (#5312)

* Discard rows with unparseable numeric dimensions

* PR comments

* Don't throw away entire row on parse exception

* PR comments

* Fix import",2018-02-06T05:43:35Z
7051230a4129488b12d31c7b9f1fd431327b7a21,SQL: Throttle metadata refreshes when they fail. (#5328),2018-02-02T23:17:39Z
222a13e4011a73cdcc995a51f8fa7433e68cf142,Use httpRemote and not remoteHttp for using HTTP Tasks Mgmt (#5334),2018-02-02T20:16:43Z
de7f28e6d9fd8f90a0f1fec2a4364032679d74f2,Fix some unemitted alerts in druid-basic-security. (#5327),2018-02-02T19:39:21Z
c9e7c0a817ad21f95ca6b2d5f61fef8efe1c0ed3,Remove Escalator jetty http client escalation method (#5322),2018-02-02T18:43:02Z
7e02408510f468dc001b73f3a38569c28c03b2b7,Update versions to 0.13.0-SNAPSHOT. (#5323),2018-02-02T18:06:38Z
10b8540f80e0154ed64f268c6d8ad6adb4df6308,"CliCoordinator: LoadQueueTaskMaster should use an escalated http client. (#5329)

Also remove Guice annotations from LoadQueueTaskMaster, since it is
provided by CliCoordinator, so Guice does not need to know how to
build one directly.",2018-02-02T16:44:32Z
4cd47de62fba4cbe3e769a82b6556de1d5b8b879,"add LookupExtractorFactory.destroy() method (#5287)

* add LookupExtractorFactory.destroy() method

* fix LookupReferencesManagerTest",2018-02-02T06:56:09Z
ed47a1e1a9aaac5f8600bba204a6e5cd2aa7ed13,"Lookups: Inherit ""injective"" from registered lookups, improve docs. (#5316)

Code changes:
- In the lookup-based extractionFns, inherit injective property from
  the lookup itself if not specified.

Doc changes:
- Add a ""Query execution"" section to the lookups doc explaining how
  injective lookups and their optimizations work.
- Remove scary warnings against using registeredLookup extractionFns.
  They are necessary and important since they work with filters and
  function cascades -- two things that the dimension specs do not do.
  They deserve to be first class citizens.
- Move the ""registeredLookup"" fn above the ""lookup"" fn. It's probably
  more commonly used, so the docs read better this way.",2018-02-02T02:30:19Z
1fffc681d28ada66facef2b4766b7729ccbe2416,"fix RemoteTaskRunner terminating lazy workers below autoscaler minNumWorkers value (#5310)

* fix RemoteTaskRunner terminating lazy workers below autoscaler minNumWorkers value

* add comment",2018-02-01T16:57:01Z
3a69b0e5133132742086240e181060d9052923b4,Handle nullable taskTypes for rolling upgrade (#5309),2018-01-30T21:32:54Z
64ee65856e89acbbb08e715d870aa768fd134de3,"ApproximateHistogram: Skip nulls on input, and use more standard parsing code. (#5308)",2018-01-30T20:32:56Z
be66d4b8229f77fb97785244859c0b6e67abe816,clean up intermediate_pushes directory for LocalDataSegmentPusher (#5306),2018-01-30T18:33:07Z
632e44c539a69eb3c8ed79e18b5b8994acfa1c71,"use reflection to call hadoop fs.rename to workaround different hadoop jar version in main and hdfs-storage extension class loader (#5296)

* use reflection to call hadoop fs.rename to workaround different hadoop jar version in main and hdfs-storage extension class loader

* find rename method recursively",2018-01-29T18:26:53Z
a5ba31c2305f79cf74b032e4af88d372ae6bcc4d,"Fix graphite whitelist converter to handle array dimensions (#5269)

* Fix graphite whitelist converter to handle array dimensions

* Fix ambari whitelist converter to handle array dimensions",2018-01-29T16:16:46Z
2a892709e8812e87f89677da620b3084b828d816,"More memory limiting for HttpPostEmitter (#5300)

* More memory limiting for HttpPostEmitter

* Less aggressive large events test

* Fix tests

* Restrict batch queue size first, keep minimum of 2 queue items",2018-01-26T23:48:45Z
59250cf19bdf1f3444e6d592a6a0f2f59474270b,add taskType from announcement in HttpRemoteTaskRunnerWorkItem (#5301),2018-01-26T23:47:35Z
d6f47eaf763f9fb61ccb4e97cd8a5f011f7a42f3,reduce noise in the logs (#5302),2018-01-26T21:10:02Z
f6749f122951606f751e33121e0c84b253fcc392,"Allow separate truststore conf for HttpEmitter (#5298)

* Fix HttpEmitter TLS support, allow separate truststore conf

* PR comment, fix tests",2018-01-26T16:46:06Z
80419752b53b1fe27cc59e6e07a0e8e89cfe5869,"Add metamx emitter, http clients, and metrics packages to druid java-util (#5289)

* Add metamx java-util emitter, http clients, and metrics packages to druid java-util

* Remove metamx java-util from pom.xml files

* Checkstyle fixes

* Import fix

* TeamCity inspection fixes

* Use slf4j, move some version defs to master pom.xml

* Use parent jvm-attach-api and maven-surefire-plugin versions

* Add ] to log msg, suppress inspection",2018-01-24T21:10:36Z
d54330be766743b5a63d6323d50db79d36e91d6d,remove unnecessary log that pontetially take up lots of heap (#5286),2018-01-24T19:30:51Z
cc32640642ef5078574561895e1011a85f36e5b9,"Update the example of the dimensionsSpec (#5293)

The example was outdated with the dateSpec",2018-01-24T19:28:54Z
53e3c7d1b29f25ff67b6b297a9a28446bc3fcaff,SQL: Add additional unsupported features to the docs. (#5290),2018-01-24T19:27:47Z
aca200fddb3ee4aff375a55241ec6dd3b648a05f,"Fix rewrite of queryPath for encoded joda intervals as query param on druid router (#5274)

* Fix rewrite of queryPath for encoded joda intervals as query param on druid router

* fix checkstyle

* fix comment",2018-01-23T20:50:07Z
61e6878afdb9cbcde37effe0742dc7e8ecb1d975,Check Javadoc reference integrity (#5279),2018-01-22T21:51:28Z
a346bbc6f361a3b48f2feb33437984610d566ce2,Enforce spacing around foreach colon with Checkstyle (#5271),2018-01-22T19:48:51Z
f99c27e9e0d41a30a5a0b8029573311b528d1771,"Fix bugs in ImmutableRTree; Merge bytebuffer-collections module into druid-processing (#5275)

* Fix bugs in ImmutableRTree; optimize ImmmutableRTreeObjectStrategy.writeTo(); Merge bytebuffer-collections module into druid-processing

* Remove unused declaration

* Fix another bug",2018-01-22T19:19:59Z
87c744ac1db8c1cd7df88a009df308938dbff0fa,"Add MethodParamPad, OneStatementPerLine and EmptyStatement Checkstyle checks (#5272)",2018-01-18T19:29:23Z
d6932c16217de82f9af7a3b0bba73ec3bf233728,"java-util version update + Add UnusedConnectionTimeout config. (#5239)

* java-util version update + Add UnusedConnectionTimeout config.

* warn  if unusedConnectionTime >= readTimeout.

* Doc update + addressed comment.

* Use compareTo  to compare duration.

* remove unused variable.

* addressed comments and default for unusedConnectionTimeout.",2018-01-17T21:54:18Z
b6b12db8b49f6e303899d1132e461c355cb95675,do not include the index in toString (#5268),2018-01-17T19:03:53Z
2c9a881dec5e99cd907584727b0ea5fd325e7db0,Remove TODO implemented in pull/5165 (#5262),2018-01-17T18:35:53Z
ad6cdf5d092fb2f06ba81d76e714657ce0c5dcf4,"Reuse IndexedInts returned from DimensionSelector.getRow() implementations (#5172)

* Reuse IndexedInts in DimensionSelector implementations

* Remove BaseObjectColumnValueSelector.getObject() doc

* typo",2018-01-17T15:01:26Z
241efafbb2526e2b91535c19925093b56c6d06ba,"Automatic compaction by coordinators (#5102)

* Automatic compaction by coordinator

* add links

* skip compaction for very recent segments if they are small

* fix finding search interval

* fix finding search interval

* fix TimelineHolder iteration

* add test for newestSegmentFirstPolicy

* add CompactionSegmentIterator

* add numTargetCompactionSegments

* add missing config

* fix skipping huge shards

* fix handling large number of segments per shard

* fix test failure

* change recursive call to loop

* fix logging

* fix build

* fix test failure

* address comments

* change dataSources type

* check running pendingTasks at each run

* fix test

* address comments

* fix build

* fix test

* address comments

* address comments

* add doc for segment size optimization

* address comment",2018-01-13T04:52:37Z
a11049c82f8842a4ca127b3621be36be6682a966,Fix APPROX_QUANTILE on outer groupBys. (#5253),2018-01-12T20:01:32Z
491f8cca81349662a89444f00a61d393b6f8cd9f,"fix timewarp query results when using timezones and crossing DST transitions (#5157)

* timewarp and timezones
changes:
* `TimewarpOperator` will now compensate for daylight savings time shifts between date translation ranges for queries using a `PeriodGranularity` with a timezone defined
* introduces a new abstract query type `TimeBucketedQuery` for all queries which have a `Granularity` (100% not attached to this name). `GroupByQuery`, `SearchQuery`, `SelectQuery`, `TimeseriesQuery`, and `TopNQuery` all extend `TimeBucke
tedQuery`, cutting down on some duplicate code and providing a mechanism for `TimewarpOperator` (and anything else) that needs to be aware of granularity

* move precondition check to TimeBucketedQuery, add Granularities.nullToAll, add getTimezone to TimeBucketQuery

* formatting

* more formatting

* unused import

* changes:
* add 'getGranularity' and 'getTimezone' to 'Query' interface
* merge 'TimeBucketedQuery' into 'BaseQuery'
* fixup tests from resulting serialization changes

* dedupe

* fix after merge

* suppress warning",2018-01-11T20:39:33Z
3c697172026fe033c5521e687815463279d66521,"Fix typo in configuration/index.md (#5249) (#5250)

* Fix #5212 - typo in auth.md.

* Fix typo in configuration (#5249)

* Add a backquote.

* Fix typo from HttpEmitterMonitor to HttpEmittingMonitor.",2018-01-11T09:29:12Z
8877ce38d6ff0fb131e425127efdb0c62bc9a89d,Enforce modifier order with Checkstyle (#5246),2018-01-11T08:50:42Z
3cc4a0ab193c223147ff25653c3061d1c0740e06,"Support for encryption of MySQL connections (#5122)

* Encrypting MySQL connections

* Update docs

* Make verifyServerCertificate a configurable parameter

* Change password parameter and doc update

* Make server certificate verification disabled by default

* Update tostring

* Update docs

* Add check for trust store passwords

* Add warning for null password",2018-01-10T19:33:54Z
5d0619f5ce854ca3c4c06beb82746f2716f55ea9,"Support retrying for PrefetchableTextFilesFirehoseFactory when prefetch is disabled (#5162)

* Add RetryingInputStream

* unnecessary exception

* fix PrefetchableTextFilesFirehoseFactoryTest

* Fix retrying on connection reset

* fix start offset

* fix checkstyle

* fix check connection reset

* address comments

* fix compile

* address comments

* address comments",2018-01-10T16:37:19Z
7b8b0a96d63e99b5990760cf91b51f03ea49fac0,IndexTask: Add summary stats line at the end. (#5241),2018-01-10T05:06:54Z
972b4d189ae8557e801b5b2e00881ff4e4f1f8ff,Fix topN doc (#5240),2018-01-10T04:10:13Z
83c6c48bed5312f20d7344358dd9804d080f68c1,"Fix state check bug in Kafka Index Task (#5204)

* fix state check for replacement task

* fix comments

* rebase with master",2018-01-09T02:01:36Z
cdd374a417903d394bc71e27a5c74be7b79b64dc,"Throw away rows with timestamps beyond long bounds in kafka indexing (#5215)

* Throw away rows with timestamps beyond long bounds in kafka indexing

* PR comments",2018-01-08T23:40:50Z
9186547689f1cc87de9c88c0f68abd2fe69a4757,Exclude sketches-core from druid-sql (#5223),2018-01-05T23:12:20Z
02544f91970bf7d6775294de71adbf0bbfc24a5c,Add missing auth doc links (#5224),2018-01-05T22:23:13Z
535ec437e925effee920e5643277fde2a1b69175,"Apply 'power of 2' optimization to BlockLayoutIndexedDoubleSupplier (#5176)

* Apply 'power of 2' optimization to BlockLayoutIndexedDoubleSupplier; slight optimization of buffer.get() in block layout indexed suppliers

* Fix byte order",2018-01-05T07:08:07Z
a46d34daa23a833c84ebb5e233b99586eccf981a,"HTTP based task/worker management. (#5104)

* just renaming of SegmentChangeRequestHistory etc

* additional change history refactoring changes

* WorkerTaskManager a replica of WorkerTaskMonitor

* HttpServerInventoryView refactoring to extract sync code and robustification

* Introducing HttpRemoteTaskRunner

* Additional Worker side updates",2018-01-05T03:19:35Z
935ac646f4c66d41a7c4a3aed61b67acc8547ada,"Upgrade to Calcite 1.15.0 (#5210)

* Upgrade to Calcite 1.15.0

* Use Filtration.eternity()",2018-01-04T20:11:24Z
5a8ea5f8abfcb274f0e0bf560c62b72c80a7903d,Fix #5212 - typo in auth.md. (#5213),2018-01-04T20:09:42Z
4cc31e4e7abd20fa1f3390985f2712a9e95a703a,Update Zookeeper version (#5184),2018-01-04T02:59:20Z
579f9fbedf909fb1619fd833c5c6b2c261efd8a5,"Add IndexedInts.debugToString() and AbstractIndex.toString(); Add Sequence.toList() and limit() (#5175)

* Add IndexedInts.debugToString() and AbstractIndex.toString()

* Fix AppenderatorTest",2018-01-04T00:56:47Z
a7967ade4d4d505b11134d26c928d069140fcf35,"Support replaceExisting parameter for segments pushers (#5187)

* support replaceExisting parameter for segments pushers

* code review changes

* code review changes",2018-01-04T00:13:21Z
59af4d3b145d07dabeaf3b796e99926514d95323,"Fix broken KafkaEmitterConfig parsing (#5201)

* Fix broken KafkaEmitterConfig parsing

This was a regression introduced in
https://github.com/druid-io/druid/pull/4722

KafkaEmitterConfig property names have dot(.) in the name of properties
and JsonConfigurator behavior was changed to not support that.
Added a test and fixed parsing of properties that have dot(.) in
property names

* Fix test failure",2018-01-03T20:08:40Z
0f773aff8064b3c4c9d85386577c03376b8a920e,"Fix lookup logging on node start (#5206)

* Add better logging messages in lookups startup on query nodes

* Make sure list is mutable

* Move list to be with other `final` variables",2018-01-03T19:13:55Z
0ebfb3fbb05a39d59086471f63f053261eb1ebe5,fixed missing gz extension from wikiticker json sample (#5194),2017-12-27T16:02:12Z
3d3b04e1b8cea657df87adabd272546f06ed5dc0,"docs: fix broken link to ingestions and tasks on the Druid Concepts page (#5197)

* fix broken links

* add newline",2017-12-27T15:55:24Z
c3f7da21285965f7a468f85059263e348b193201,"Remove extra logging by making it debug level (#5193)

Change-Id: Iaa255862389bdff7fa42b2c08c1e078448b5ee6c",2017-12-22T21:01:10Z
b31abd03add31b8b0efdf0d96c9ad50c07156088,"Fix timeout in RemoteTaskRunnerTest (#5191)

* Fix timeout in RemoteTaskRunnerTest

* add message for npe",2017-12-22T08:40:11Z
ba873c614ba768ca76c4c99c32f859bd95bd638c,"Fix max connections in DruidAvaticaHandlerTest (#5188)

* Fix max connections in DruidAvaticaHandlerTest

* Fix additional tests

* Added comment",2017-12-21T21:32:14Z
6582b16a81020307cd13c7b7f5aa4e204abab617,"[Integration-tests] Allow specifying additional properties while connecting to kafka (#5185)

* [Integration-tests] Allow specifying additional properties while connecting to kafka

Use Case - For running integration tests with a secure kafka cluster we
need to set additional properties.

This PR adds a way to pass in additional properties to kafka
consumer/producer used in kafka integration tests.
Additionally it also adds a flag to skip creating/deleting kafka topic
from tests since not all secure kafka clusters allow all users to
manage topics.

* fix check style",2017-12-21T19:51:37Z
0f5c7d1aecf3b1704138513851ed49ca731f3b91,"Add freeSpacePercent config in segment location to enforce free space while storing segments (#5137)

* Add freeSpacePercent config in segment location config to enforce free space while storing segments

* address review comments

* address review comments: more doc on freeSpacePercent and use Double for freeSpacePercent",2017-12-21T12:31:09Z
e538aa227ba307f65ee45868d230bffb71c02ec7,use java pointed by JAVA_HOME if JAVA_HOME is explicitly set (#5186),2017-12-21T03:38:09Z
f57496ed8b420b85b53ae5c8ab6b112744c24813,"FilteredHttpServerInventoryViewProvider to start with always false predicate for each segment discovered (#5123)

* FilteredHttpServerInventoryViewProvider to start with always false predicate for each segment discovered

* update HttpServerInventoryViewTest to ensure that predicates are honored

* add docs for HttpServerInventoryView.defaultFilter

* change to javadoc style comment",2017-12-21T02:56:00Z
494e0b79edd8ee79ac5e74ac49ee10bd80e10c1d,"Allow configuring header size for druid requests (#5174)

* Allow configuring header size for druid requests

* fix configuration name in doc.

* add more info to docs.

* Add info to kerberos doc.",2017-12-21T02:51:40Z
dc87e4fda17a64109d13e6821af267d3ef707712,"Renamed IndexedFloats/Doubles/Longs to ColumnarFloats/..., IndexedMultivalue to ColumnarMultiInts, separate IndexedInts from ColumnarInts, many other renames for consistency in io.druid.segment.data package (#5171)",2017-12-21T02:50:07Z
9199d61389bf215e41387908372068a6d4da46c2,"Automatic pendingSegments cleanup (#5149)

* PendingSegments cleanup

* fix build

* address comments

* address comments

* fix potential npe

* address comments

* fix build

* fix test

* fix test",2017-12-20T22:46:34Z
c56a9807d4bb95e0e7280476e8f4607bc62b1e4f,prevent npe on mismatch between number of kafka partitions and task count (#5139),2017-12-20T22:23:15Z
11814119019232e7c17d68b665526f6462c3e521,small optimization in timeseries if 'skipEmptyBuckets' is true and cursor completed (#5178),2017-12-19T22:47:00Z
f18eba50ee0bd9caf0592b3ee76b6049234daa71,Remove Aggregator.reset() (#5177),2017-12-19T22:09:17Z
d337f49034a46f1a131234dd3e507631f0ed96ae,Remove pached TestNG classes cause current maven-failsafe-plugin version supports testrunfactory option (#5165),2017-12-18T20:13:45Z
0eecf2a8057ab7dfddb2a4ea597cdc2675756d74,Bump version of druid-basic-security (#5166),2017-12-15T19:12:00Z
5787d04fad9dff11e89689ef04ab4fa4cd8559d1,Bump Druid version to 0.12.0 (#5138),2017-12-15T15:37:01Z
f48c9d7be111a0061cef773f8feebace514d685a,"Basic auth extension (#5099)

* Basic auth extension

* Add auth configuration integration test

* Fix missing authorizerName property

* PR comments

* Fix missing @JsonProperty annotation

* PR comments

* more PR comments",2017-12-14T18:36:04Z
3b4395a16e726664d9e2b7cbebe92aa23c20ed86,"Use deprecated-2017Q4 group for Travis (#5155)

* Use deprecated-2017Q4 group for Travis

* Add comment",2017-12-13T01:14:44Z
677e24b76027d833da2987416a5439f474faff7a,prevent NPE from supressing actual exception (#5146),2017-12-12T19:42:30Z
64848c7ebfd5b95c528c0890ef47990de4e0a8f3,"DataSegment memory optimizations (#5094)

* Deduplicate DataSegments contents (loadSpec's keys, dimensions and metrics lists as a whole) more aggressively; use ArrayMap instead of default LinkedHashMap for DataSegment.loadSpec, because they have only 3 entries on average; prune DataSegment.loadSpec on brokers

* Fix DataSegmentTest

* Refinements

* Try to fix

* Fix the second DataSegmentTest

* Nullability

* Fix tests

* Fix tests, unify to use TestHelper.getJsonMapper()

* Revert TestUtil as ServerTestHelper, fix tests

* Add newline

* Fix indexing tests

* Fix s3 tests

* Try to fix tests, remove lazy caching of ObjectMapper in TestHelper, rename TestHelper.getJsonMapper() to makeJsonMapper()

* Fix HDFS tests

* Fix HdfsDataSegmentPusherTest

* Capitalize constant names",2017-12-12T19:41:40Z
294bd3ffb3774c84bd82345791d4b36e8a220e3e,DruidCoordinatorBalancer: Fix log message. (#5152),2017-12-12T04:27:37Z
4f5e2b45496559815078d5e61b4dab718a56672f,Fix some unemitted alerts. (#5141),2017-12-07T02:37:02Z
4365390310c1b397bb3a24ea9c94b57559fa19e7,Remove duplicate fastutil dependency in processing pom.xml (#5142),2017-12-06T23:54:48Z
80f5e89a116a93714417d7944ab4cd9e001bdec5,Fix DoublesSketchComplexMetricSerde.getSerializer() (#5140),2017-12-06T06:10:19Z
45f91a241e16424e4d3355555801773395b255c7,"numeric quantiles sketch aggregator (#5002)

* numeric quantiles sketch aggregator

* it seems that we need to synchronize all methods, which modify the state

* Seems like a false positive with -Pstrict

* code style fix

* code style fix

* use sketches-core-0.10.3

* moved cache ids to the central place

* better class names

* support large columns

* explained autodetection, added exception

* added comments regarding sketches moving on heap

* support reindexing

* implemented suggestions from jihoonson

* style fix

* use max(k, other.k) for better accuracy

* check for NilColumnValueSelector instead of null

* throw exceptions instead of providing no-op comparators",2017-12-05T23:18:08Z
a7a6a0487e22a4ca8975922d0127992789417103,"Replace IOPeon with SegmentWriteOutMedium; Improve buffer compression (#4762)

* Replace IOPeon with OutputMedium; Improve compression

* Fix test

* Cleanup CompressionStrategy

* Javadocs

* Add OutputBytesTest

* Address comments

* Random access in OutputBytes and GenericIndexedWriter

* Fix bugs

* Fixes

* Test OutputBytes.readFully()

* Address comments

* Rename OutputMedium to SegmentWriteOutMedium and OutputBytes to WriteOutBytes

* Add comments to ByteBufferInputStream

* Remove unused declarations",2017-12-05T02:04:27Z
7c01f77b041fd071a0adeaad9a195407fa4e5a37,"Parse Batch support (#5081)

* add parseBatch and deprecate parse method in InputRowParser

add addAll method, skip max rows in memory check for it

remove parse method from implemetations

transform transformers

add string multiplier input row parser

fix withParseSpec

fix kafka batch indexing

fix isPersistRequired

comments

* add unit test

* make persist async

* review comments",2017-12-04T22:06:16Z
c3bb03dcec1f0763bca6c6133633e57419a0fb25,"Make enabled final in JavaScriptConfig  (#5130)

* Make enabled final in JavaScriptConfig as it is used in equals and hashCode

* Removing the cryptic boolean condition

Replacing the cryptic boolean condition with a simple assignment.
Changing the param value to boolean from Boolean.",2017-12-04T18:59:30Z
aacc57131b659aa0c47c6bf2650819b447eeca0a,"Don't use HistoricalXxxPrototypes in PooledTopNAlgorithm when Cursor's offset is FilteredOffset (#5133)

* Don't use HistoricalXxxPrototypes in PooledTopNAlgorithm when Cursor's offset is FilteredOffset, because it doens't support cloning

* Add test",2017-12-02T01:04:22Z
aafd0373be686a3111cfbb0d487529c276772264,Fix query/node/time metric calculation (#5131),2017-12-01T17:39:04Z
5f6bdd940b35734e98f6a681c0eb48173cd5f9df,"SQL: Improve translation of time floor expressions. (#5107)

* SQL: Improve translation of time floor expressions.

The main change is to TimeFloorOperatorConversion.applyTimestampFloor.

- Prefer timestamp_floor expressions to timeFormat extractionFns, to
  avoid turning things into strings when it isn't necessary.
- Collapse CAST(FLOOR(X TO Y) AS DATE) to FLOOR(X TO Y) if appropriate.

* Fix tests.",2017-11-29T20:06:03Z
55d894e104197cf2ff226bc9ee1dfb526687d231,Fix IndexMergeBenchmark (#5118),2017-11-27T00:03:58Z
790678f02c749291c8dc81d3c0b464184ea88f13,"Fix typo in docs (#5074)

Small fix for the realtime pull docs fix issue #5072",2017-11-23T02:16:36Z
368d03146b04394117579611d9e0a92c779e80d0,assign granularity.all to SelectQuery by default (#5091),2017-11-22T01:10:19Z
22c49b0d33896b46268bcd5be7fd0d2a4f52c71f,docs: fix broken link to broker configuration (#5105),2017-11-21T04:32:00Z
2487152b594554167080eaf7045a667ee1ee7654,"Update Avro to 1.8.2 (#5075)

And add exclusions that are required to have a single version of
Apache Avro on the classpath.",2017-11-21T04:29:17Z
322b7f6a2716dcc7e62d1c5db5cc313833f83a03,"Fix AnnouncerTest.testSanity() (#5077)

* Fix announcer test

* rename

* split server module test

* add name

* polling until /test1 is created

* add comment",2017-11-21T04:27:41Z
645de02fb2e5fb9f77d91c9905862f73624e5798,"Remove Injector from IngestSegmentFirehoseFactory (#5045)

* Add lock check to segment list actions

* fix test

* remove lock check",2017-11-20T23:54:35Z
dbb37b727daeec71b861e084d97e45099d47a34a,"Add useL2 and populateL2 configs to HybridCache (#5088)

* Add useL2 and populateL2 configs to HybridCache

* typo",2017-11-20T22:57:05Z
e115da39df0617037b014347da4413e0ce7577c6,"Add relogin logic to renew the Kerberos TGT once it expire (#5096)

* Kerberos TGT will expire after some pre-determined time, this patch add relogin calls

Change-Id: I17ccb9b42aa3032de5d28c8c21e4ffbe8222b815

* exit if the first login passed

Change-Id: Ifefd5e9e0dd7d07b05cc493ab1f72415de557ec2",2017-11-20T12:03:39Z
50140ce820ecc4ab50e962c0641f20beddfc4a7e,"StatsD Emitter Doc on blankHolder (#5101)

* fix equalDistribution worker select strategy

* replace anonymous Comparator

* keep previous version sorting comment

* fix code style

* update comment

* move JsonProperty

* fix statsD emitter with blank character

* Add blankHolder doc On statsD monitor",2017-11-18T20:00:47Z
cb03efeb147135440656149f119fdedb489b4a9e,"Kafka Index Task that supports Incremental handoffs (#4815)

* Kafka Index Task that supports Incremental handoffs
- Incrementally handoff segments when they hit maxRowsPerSegment limit
- Decouple segment partitioning from Kafka partitioning, all records from consumed partitions go to a single druid segment
- Support for restoring task on middle manager restarts by check pointing end offsets for segments

* take care of review comments

* make getCurrentOffsets call async, keep track of publishing sequence, review comments

* fix setEndoffset duplicate request handling, formatting

* fix unit test

* backward compatibility

* make AppenderatorDriverMetadata backwards compatible

* add unit test

* fix deadlock between persist and push executors in AppenderatorImpl

* fix formatting

* use persist dir instead of work dir

* review comments

* fix deadlock

* actually fix deadlock",2017-11-17T22:05:20Z
590633c595c3af75d65c522377328e1ef39fd5e8,fix bug in method reset of ByteBufferHashTable.java (#5100),2017-11-17T16:19:16Z
ec6774039e55bbc9ad947cbf7dbaa91044e22846,Fix numLookupLoadingThreads default value (#5097),2017-11-16T23:13:52Z
486159ba8cfd36061a5319d512a3983fd08e6da6,SQL: Add TIMESTAMPADD. (#5079),2017-11-16T20:00:34Z
93459f748ff2e84113d44c88800fb195238ecfb7,"Fix missing intervals after compacting intervals (#5092)

* Fix missing intervals after compacting intervals

* fix build",2017-11-16T19:42:38Z
b34d471aa24d87fc19b73ad1ff73b0229e5a0102,"Fix StatsD Emitter with blank character (#5044)

* fix equalDistribution worker select strategy

* replace anonymous Comparator

* keep previous version sorting comment

* fix code style

* update comment

* move JsonProperty

* fix statsD emitter with blank character",2017-11-16T19:12:24Z
af44d1142bab259d5011a331df77c8e632c79d46,"Add unsecured /health endpoint, remove auth checks from isLeader (#5087)

* Add unsecured /health endpoint, remove auth checks from isLeader

* PR comments",2017-11-15T20:41:30Z
7722401cb3d723104e524e48f3562257d630fb8d,SQL: Add rule to prune unused aggregations. (#5049),2017-11-14T04:24:45Z
77df5e0673676cc90ba617826eb168d1f12d799f,"ExpressionSelectors: Add optimized selectors. (#5048)

* ExpressionSelectors: Add caching selectors.

- SingleLongInputCaching selector for expressions on the __time column,
  using a similar optimization to SingleScanTimeDimSelector
- SingleStringInputDimensionSelector for expressions on string columns
  that return strings, using a similar optimization to ExtractionFn
  based DimensionSelectors.
- SingleStringInputCaching selector for expressions on string columns
  that return primitives.

Also, in the SQL planner, prefer expressions for time operations
rather than extractionFns.

* Code review comments.",2017-11-14T04:24:24Z
4fd4444b42df1c407400070b3e403d0f2523fabe,"SQL: Add ""array"" result format, and document result formats. (#5032)

* SQL: Add ""array"" result format, and document result formats.

* Code style.",2017-11-14T04:24:06Z
6c0c858913d5a94e7dcec568880505ec0da69486,"SQL: Support CASE-style filtered count distinct. (#5047)

i.e., aggregations like COUNT(DISTINCT CASE WHEN x THEN y END). This
patch also changes complex columns to report as nullable, which
is required for them to type-check properly when used in these kinds
of filtered aggregations.",2017-11-14T04:23:54Z
9ac150c23ae13be8c187ab716ee2bed07a20dc30,"Split internal client escalation from Authenticator interface (#5073)

* Split internal client escalation from Authenticator interface

* PR comments",2017-11-14T03:29:08Z
c1538f29fcd049abde8f4acf0954ce3a80b3585e,"maxQueryTimeout property in runtime properties. (#4852)

* maxQueryTimeout property in runtime properties.

* extra line

* move withTimeoutAndMaxScatterGatherBytes method to QueryLifeCycle.

* Fix initialize method.

* remove unused import.

* doc update.

* some more details in doc about query failure..

* minor fix.

* decorating QueryRunner to set and verify context. Added by servers.

* remove whitespace.",2017-11-14T01:23:11Z
819700cbc51da74c9b390e8ea46e86ca76ec4eca,Automatically insert authenticator/authorizer names into config properties (#5071),2017-11-13T21:12:31Z
1c64f0257400caf44ac3f6ca2e91170e022bba70,make AsyncHttpCLient instance timer thread daemon (#5076),2017-11-11T01:54:29Z
3ad5f51f7ec977e5607d5df2a38c9b5d27800332,"Integration tests port fix, logs output, lib share changes (#5061)

* integration tests port fix, logs output, lib share changes

* Fix test compilation

* docker image fix

* Annotate DiscoverySelector.pick() as Nullable, use formatting instead of string concatenation for logging

* integration-tests logging check

* corrected integration-tests log location

* removed an experimental travis test exception",2017-11-10T22:07:37Z
9444da5038067eedbabe936c95d95080659240db,"SQL: Improved behavior when implicitly casting strings to date/time literals. (#5023)

* SQL: Improved behavior when implicitly casting strings to date/time literals.

- Handle all flavors of ISO8601 and SQL literals.
- Throw errors on other literals instead of silently transforming them to 0.

* Respect timeZone when format is null.",2017-11-10T08:43:22Z
bbb678efd7736d547fc4119efecbeaf295d22efe,"fix lookups endpoint collisions (#5058)

* fix lookups endpoint collissions

* fix errors",2017-11-10T01:39:53Z
81f249874be9c66a5f9415cb631ef3a3d2fc133b,"Use daemon thread pool for AsyncHttpClient in emitters (#5057)

* use daemon thread pool for AsyncHttpClient in emitters

* changed to use existing helper methods

* refactored creation of AsyncHttpClient",2017-11-10T01:38:19Z
2ecebb31731ddc9b1597dccaf57738359c5423ac,"Fix coordinator/overlord redirects when TLS is enabled (#5037)

* Fix coordinator/overlord redirects when TLS is enabled

* address review comment

* fix UTs

* workaround to not ignore URL instance to fix the teamcity build

* update tls doc",2017-11-09T21:10:28Z
95154f9ef6faa6b53db4f15e94d992d159b0dcf5,Netty downgrade (#5059),2017-11-09T19:27:50Z
c11c71ab3e4d9f7474dc3f09cee8973733013b41,"Using ImmutableDruidDataSource as a key for map and set instead of DruidDataSource (#5054)

* use ImmutableDruidDataSource for map and set

* address comments

* unused import

* allow returning only ImmutableDruidDataSource in MetadataSegmentManager

* address comments

* remove TreeSet

* revert to use TreeSet",2017-11-09T19:07:58Z
3541b7544b90f4991673fb6f052615dfd825d721,"Prohibit and remove unused declarations in the processing module (#4930)

* Prohibit and remove unused declarations in the processing module

* Fix tests

* Fix integration tests

* Suppress unused

* Try to remove SuppressWarnings unused in VirtualColumn

* Remove reset 'false positives'

* Annotate CliCommandCreator as ExtensionPoint

* Unused import warning instead of error in IntelliJ

* Fixes

* Add comment

* Fix AzureBlob

* Fix CloudFilesBlob

* Address comments

* Add Project SDK section to INTELLIJ_SETUP.md

* Fix image",2017-11-09T17:27:27Z
1bf253f6e618e9152ebb38d17781c299b54dfd3e,"Fix Router race condition and use default broker service name for invalid priority (#5050)

* use default brokerServiceName when priority is not valid

* use AtomicInteger for NodesHolder.roundRobinIndex

* revert inspectionProfiles change

* adjust TieredBrokerHostSelectorTest

* combine if statements and ensure index does not become negative

* set next index with mod if overflows

* fix codestyle

* use nextIndex

* extract the while loop to a method",2017-11-09T15:31:18Z
a8dc056c09bdb1dda4b79be652f964ecc23922c1,"Add retries for coordinator fetch and lookup start in LookupReferencesManager (#5029)

* Add retries for coordinator fetch and lookup start in LookupReferencesManager

* Fix LookupConfigTest

* Address comments

* Address more comments

* And address more comments

* Address comms

* Recognize 'not found' lookups in LookupReferencesManager.tryGetLookupListFromCoordinator(), by @egor-ryashin",2017-11-09T05:30:36Z
e6ec4310b1e05530725775ad76cb5abb3f649dad,"IT: Switch to OpenJDK8 base image. (#5060)

* IT: Switch to OpenJDK8 base image.

Also split the Docker image into a base image and a child image, and
build the base image ahead of time for efficiency's sake. Also upgrade
ZK to 3.4.10.

* Additional comments about ZK upgrades.",2017-11-09T03:56:31Z
5f3c863d5e96628628146a0a66a44653991f81d1,"Add compaction task (#4985)

* Add compaction task

* added doc

* use combining aggregators

* address comments

* add support for dimensionsSpec

* fix getUniqueDims and getUniqueMetics

* find unique dimensionsSpec

* fix compilation

* add unit test

* fix test

* fix test

* test for different dimension orderings and types, and doc for type and ordering

* add control for custom ordering and type

* update doc

* fix compile

* fix compile

* add segments param

* fix serde error

* fix build",2017-11-04T03:55:27Z
5eb08c27cbc3b054e4e89d455c15602f36509752,"Add Emitter monitoring (#4973)

* Add Emitter monitoring

* Fix typo

* Fixes

* testing new emitter

* Fix failed test (#71)

* testing new emitter

* fix on failed test

* Remove emitter's readTimeout from docs

* Update docs

* Add HttpEmittingMonitor

* Update java-util to 1.3.2",2017-11-04T03:27:57Z
13c0d88ffc51effc88815393544fdaf2363fd53b,"Fix coordinator->overlord proxy auth failure (#5039)

* Fix coordinator->overlord proxy auth failure

* PR comment",2017-11-03T20:54:41Z
7c8b14f18ce821052b49750bc2d11ccf71a54d7a,Fix doc link (#5040),2017-11-03T18:04:33Z
1e0abcde8753290072f77f209cc7491ccd6d1a24,Fix improper rounding of ORC decimals. (#5031),2017-11-03T16:16:02Z
5da0241ac8e1c13b2c848116ca96987e7c5240cd,"Kafka: Fixes needlessly low interpretation of maxRowsInMemory. (#5034)

AppenderatorImpl already applies maxRowsInMemory across all sinks. So dividing by
the number of Kafka partitions is pointless and effectively makes the interpretation
of maxRowsInMemory lower than expected.

This undoes one of the two changes from #3284, which fixed the original bug twice.
In this, that's worse than fixing it once.",2017-11-02T19:45:04Z
21e1bf68f68cdfa5d798d1c87aff8ec3f3c7a78b,"Update Avro to 1.8.0 (#5015)

The druid parquet extensions uses Avro 1.8 and therefore it is
required to update the Avro version itself also to 1.8 to avoid
classpath conflicts",2017-11-02T15:08:41Z
6840eabd87e3620057ae5d0be899c97d1dfcbb09,"Add Router connection balancers for Avatica queries (#4983)

* Add Router connection balancers for Avatica queries

* PR comments

* Adjust test bounds

* PR comments

* Add doc comments

* PR comments

* PR comment

* Checkstyle fix",2017-11-01T21:01:13Z
654cdc07f57f35f03d0f2f32c47271668d7c19dc,"Document HTTP based segment management and Deprecate classes to remove in future (#4997)

* document http segment management

* deprecated classes that shouldn't be used any further",2017-11-01T16:59:27Z
6c725a7e0621b45586a6e1a304929ebc0ceb6e4d,"Fix havingSpec on complex aggregators. (#5024)

* Fix havingSpec on complex aggregators.

- Uses the technique from #4883 on DimFilterHavingSpec too.
- Also uses Transformers from #4890, necessitating a move of that and other
  related classes from druid-server to druid-processing. They probably make
  more sense there anyway.
- Adds a SQL query test.

Fixes #4957.

* Remove unused import.",2017-11-01T16:58:08Z
e96daa2593808d7e10d833525066d4b9e455de4f,Fix SQLMetadataSegmentManager (#5001),2017-10-31T15:02:41Z
b7fc1424dd59619cb9dcc60f6d6e5ecfdec7d3e0,"SQL: Avoid using timeseries with ""having"" clauses. (#5017)",2017-10-31T00:42:54Z
0ce406bdf15badb555fddb8ea1c1a099266c79eb,"Introduce ""transformSpec"" at ingest-time. (#4890)

* Introduce ""transformSpec"" at ingest-time.

It accepts a ""filter"" (standard query filter object) and ""transforms"" (a
list of objects with ""name"" and ""expression""). These can be used to do
filtering and single-row transforms without need for a separate data
processing job.

The ""expression"" fields use the same expression language as other
expression-based feature.

* Remove forbidden api.

* Fix compile error.

* Fix tests.

* Some more changes.

- Add nullable annotation to Firehose.nextRow.
- Add tests for index task, realtime task, kafka task, hadoop mapper,
  and ingestSegment firehose.

* Fix bad merge.

* Adjust imports.

* Adjust whitespace.

* Make Transform into an interface.

* Add missing annotation.

* Switch logger.

* Switch logger.

* Adjust test.

* Adjustment to handling for DatasourceIngestionSpec.

* Fix test.

* CR comments.

* Remove unused method.

* Add javadocs.

* More javadocs, and always decorate.

* Fix bug in TransformingStringInputRowParser.

* Fix bad merge.

* Fix ISFF tests.

* Fix DORC test.",2017-10-31T00:38:52Z
1df458b35e0d01208510287faff4cb2bd1fc0cc3,"Fix improper handling of empty arrays in StringDimensionIndexer. (#5012)

* Fix improper handling of empty arrays in StringDimensionIndexer.

This bug was able to introduce data errors: if the input rows to an
IncrementalIndex contained entirely empty arrays and single values, then
upon persisting to disk, the empty arrays would be replaced with the
lexicographically smallest single value, rather than nulls like they
should have been.

* Style fix.

* Add tests for bitmap indexes too.",2017-10-27T21:21:48Z
52a162e30211a981ee9282cee51a6919e0b0ed3c,define earlyMessegeRejectPeriod as the period after the taskduration (#4990),2017-10-26T19:43:46Z
3e0a6fc374a9da108b873f7bf3aa4a8da7b419d7,"Filter unauthorized datasources in INFORMATION_SCHEMA queries (#4998)

* Filter unauthorized datasources in INFORMATION_SCHEMA queries

* PR comments",2017-10-26T19:36:47Z
125a912067f9cfc9ca3e11b94da4a36c9aef4881,"Add ability to inject extra dimensions for service emitter (#4982)

* Add ability to inject extra dimensions for service emitter

* Docs",2017-10-26T18:27:01Z
ee66db900e2645e8fada79662600959c1a398231,"Fix binary serialization in caching (#4993)

* Fix binary serialization in caching

The previous caching code just concatenated a list of objects into a
byte array -- this is actually not valid because jackson-databind uses
enumerated references to strings internally, and concatenating multiple
binary serialized objects can throw off the references.

This change uses a single JsonGenerator to serialize the object list
rather than concatenating byte arrays.

* remove unused imports",2017-10-23T19:10:24Z
772ca783cd253f731386ce998fc2ae0bc2787826,"Fix race in CachingCostBalancerStrategyFactory (#4989)

* Fix race in CachingCostBalancerStrategyFactory

* Remote timeout",2017-10-20T23:53:51Z
d7024f22e15e39f4704b41b49cf8fdc2d023c917,"Upgrade fastutil to 8.1.0 (#4988)

* Upgrade failutil to 8.1.0

* unused import",2017-10-20T04:37:43Z
ef4a8cb72494c385a0c5d29bc77a95426a2c61d5,"Optional segment load/drop management without zookeeper using http (#4966)

* introducing CuratorLoadQueuePeon

* HttpLoadQueuePeon based off of current code

* Revert ""Remove SegmentLoaderConfig.numLoadingThreads config (#4829)""

This reverts commit d8b3bfa63c9a8ff680a7eb967bc12c845cbadcd8.

* SegmentLoadDropHandler copy/pasted from ZkCoordinator

* Revert ""1-based counts in ZkCoordinator (#4917)""

This reverts commit e725ff4146e84a3f3c61b8bea10ed23d7a9e9f9b.

* remove non-zk part from ZkCoordinator

* remove zk part from SegmentLoadDropHandler

* additional changes for segment load/drop management with http

* address review comments

* add some more logs

* Execs class is moved",2017-10-19T19:41:24Z
ce7bf3f325e0edfe009e8958addb7f0c12199452,"Update batch-ingestion.md (#4963)

I've had problems ingesting several S3 files with Druid. After checking I saw this: https://groups.google.com/forum/#!msg/druid-user/4L62vjor4NM/p8Z_R3lEAQAJ and realised that the docs hasn't been updated. This issue might have been solved with new Druid versions, but for those who are still using older ones (0.9.2), it's nice having this change made :)",2017-10-18T23:44:09Z
d5e83f9d50320e2810bd3d0d8e72145ff5368473,Fix docs for MOD. (#4971),2017-10-18T23:43:28Z
26b87c9f8ef3d241a93e665fa7a53ea76fa5b443,"Fix CachingCostBalancerStrategyFactory's constructor (#4974)

* Fix CachingCostBalancerStrategyFactory's constructor

* Fix CachingCostBalancerStrategyFactory not registered in Lifecycle",2017-10-18T21:21:54Z
5fc68914046c9fcc16a26e15fe798f4c9ebb330a,Reduce code duplication between test ExprMacroTables. (#4979),2017-10-18T20:57:49Z
4881bb273bfa1630d0feddd38d46654cdab30a9f,"Only consider loaded replicants when computing replication status. (#4921)

* Only consider loaded replicants when computing replication status.

This affects the computation of segment/underReplicated/count and
segment/unavailable/count, as well as the loadstatus?simple and
loadstatus?full APIs.

I'm not sure why they currently consider segments in the load
queues, but it would make more sense to me if they only considered
segments that are actually loaded.

* Fix tests.

* Fix imports.",2017-10-18T18:11:42Z
9d91ffd039fadbf17c17486bdba3f3aa6fb3d15f,"Use ubuntu image with pre-installed java 8 for IT docker (#4970)

* Use OpenJDK8 instead of Oracle for IT docker

* install wget

* Use different docker image

* Revert ""Use different docker image""

This reverts commit 5786c03cb49d0ac60a4f06690e483c3284fe4564.

* Revert ""install wget""

This reverts commit 8d1d5ec681301f2919b9d994e65e4d436f948a72.

* Revert ""Use OpenJDK8 instead of Oracle for IT docker""

This reverts commit 55ea163bb530b1e88c2cccd647f89d75ac90393a.

* Use prebuilt java8 image

* Add comment on docker image",2017-10-18T14:33:27Z
52d7f742266a5062591798dde72e9f38a5d388de,"Add streaming aggregation as the last step of ConcurrentGrouper if data are spilled (#4704)

* Add steaming grouper

* Fix doc

* Use a single dictionary while combining

* Revert GroupByBenchmark

* Removed unused code

* More cleanup

* Remove unused config

* Fix some typos and bugs

* Refactor Groupers.mergeIterators()

* Add comments for combining tree

* Refactor buildCombineTree

* Refactor iterator

* Add ParallelCombiner

* Add ParallelCombinerTest

* Handle InterruptedException

* use AbstractPrioritizedCallable

* Address comments

* [maven-release-plugin] prepare release druid-0.11.0-sg

* [maven-release-plugin] prepare for next development iteration

* Address comments

* Revert ""[maven-release-plugin] prepare for next development iteration""

This reverts commit 5c6b31e488c413073e2b1d4ce128bdff0649b41a.

* Revert ""[maven-release-plugin] prepare release druid-0.11.0-sg""

This reverts commit 0f5c3a8b82415b34fa765dc375d87ae8fe4daa3b.

* Fix build failure

* Change list to array

* rename sortableIds

* Address comments

* change to foreach loop

* Fix comment

* Revert keyEquals()

* Remove loop

* Address comments

* Fix build fail

* Address comments

* Remove unused imports

* Fix method name

* Split intermediate and leaf combine degrees

* Add comments to StreamingMergeSortedGrouper

* Add more comments and fix overflow

* Address comments

* ConcurrentGrouperTest cleanup

* add thread number configuration for parallel combining

* improve doc

* address comments

* fix build",2017-10-18T06:24:08Z
43051829f2d2272c6b1e9c6f2bf38a9252101fa3,Regression test for #4208. (#4968),2017-10-17T20:54:00Z
af2bc5f814d09ebad54be64c0a461af0aae24203,"Make float default representation for DoubleSum/Min/Max aggregators (#4944)

* Introduce System wide property to select how to store double.
Set the default to store as float

Change-Id: Id85cca04ed0e7ecbce78624168c586dcc2adafaa

* fix tests

Change-Id: Ib42db724b8a8f032d204b58c366caaeabdd0d939

* Change the property name

Change-Id: I3ed69f79fc56e3735bc8f3a097f52a9f932b4734

* add tests and make default distribution store doubles as 64bits

Change-Id: I237b07829117ac61e247a6124423b03992f550f2

* adding mvn argument to parallel-test profile

Change-Id: Iae5d1328f901c4876b133894fa37e0d9a4162b05

* move property name and helper function to io.druid.segment.column.Column

Change-Id: I62ea903d332515de2b7ca45c02587a1b015cb065

* fix docs and clean style

Change-Id: I726abb8f52d25dc9dc62ad98814c5feda5e4d065

* fix docs

Change-Id: If10f4cf1e51a58285a301af4107ea17fe5e09b6d",2017-10-17T00:17:22Z
a7e802c9d42a93830ee387bca38bf1d5f5c29b95,"greater-than/less-than/equal-to havingSpec to call AggregatorFactory.finalizeComputation(..) (#4883)

* greater-than/less-than/equal-to havingSpec to call AggregatorFactory.finalizeComputation(..)

* fix the unit test and expect having to work on hyperUnique agg

* test fix

* fix style errors",2017-10-16T19:02:30Z
dc7cb117a1aeea22db5a4fa851bc88ee0be0ff5b,"Refactor ColumnSelectorFactory; Rely on ColumnValueSelector's polymorphism (#4886)

* Refactor ColumnSelectorFactory; Rely on ColumnValueSelector's polymorphism

* Fix MapVirtualColumn.makeColumnValueSelector()

* Minor fixes

* Fix IndexGeneratorCombinerTest

* DimensionSelector to return zeros when treated as numeric ColumnValueSelector

* Fix IncrementalIndexTest

* Fix IncrementalIndex.makeColumnSelectorFactory()

* Optimize MapBasedRow.getMetric()

* Fix VarianceAggregatorTest

* Simplify IncrementalIndex.makeColumnSelectorFactory()

* Address comments

* More comments

* Test",2017-10-14T02:44:17Z
8d9902831ef344b9c4c29f5d9d07e69e37edd706,"Refactoring PrefetchableTextFilesFirehoseFactory (#4836)

* Refactoring prefetchable firehose

* Fix to read cache when prefetch is disabled

* More tests

* Cleanup codes

* Add Fetcher

* Fix test failure

* Count file size

* Fix test

* rename generic parameter

* address comments

* address comments

* reuse buffer

* move Execs to java-util

* use execs

* Fix build",2017-10-14T02:39:28Z
f51f346e3608901498fe6f380fc14b7407dbe170,"SQL: Fix POWER doc, add test. (#4953)",2017-10-13T21:38:15Z
5cfc7f9ef7346cddc12229486990286aeb6e72fb,Fix formatting of SQL TRIM docs. (#4951),2017-10-13T21:38:06Z
675c6c00dd73997086d184b0b53a19174fd035ee,"Add checkstyle and intellij rule to prohibit unnecessary qualifiers in interfaces (#4958)

* add checkstyle and intellij rule

* fix tc fail",2017-10-13T14:56:19Z
c07678b143663dde069569ab77c9803901d78a73,"Synchronization of lookups during startup of druid processes (#4758)

* Changes for lookup synchronization

* Refactor of Lookup classes

* Minor refactors and doc update

* Change coordinator instance to be retrieved by DruidLeaderClient

* Wait before thread shutdown

* Make disablelookups flag true by default

* Update docs

* Rename flag

* Move executorservice shutdown to finally block

* Update LookupConfig

* Refactoring and doc changes

* Remove lookup config constructor

* Revert Lookupconfig constructor changes

* Add tests to LookupConfig

* Make executorservice local

* Update LRM

* Move ListeningScheduledExecutorService to ExecutorCompletionService

* Move exception to outer block

* Remove check to see future is done

* Remove unnecessary assignment

* Add logging",2017-10-13T02:22:24Z
928b083a7abb9ac23b3068ef97561c450a6cc406,"JSON: Fix incorrect translation of null to ""null"". (#4939)",2017-10-12T22:53:40Z
57a40383792e466b6c40672431d3326c6e4b0d0a,SQL: Fix CASE-filtered aggregations with GROUP BY. (#4943),2017-10-12T22:40:43Z
32f36beaae3d980efd7d269910bc72562864de7f,"QueryableIndexStorageAdapter: Lift column cache to Cursor sequence. (#4950)

* QueryableIndexStorageAdapter: Lift column cache to Cursor sequence.

This is where it was before #4710, when its was moved to the individual
Cursors, leading to higher than expected memory usage. It could be
extreme for finer query granularities like ""second"".

* Comment.",2017-10-12T21:44:33Z
d95915f8d2365367024505bf2e7c2921cfae3806,Implement get methods for PrefetchableFirehose (#4948),2017-10-12T07:14:45Z
dfa9cdc98270f8c8d9bbc4f3db11f9c0aa6d75da,"Prioritized locking (#4550)

* Implementation of prioritized locking

* Fix build failure

* Fix tc fail

* Fix typos

* Fix IndexTaskTest

* Addressed comments

* Fix test

* Fix spacing

* Fix build error

* Fix build error

* Add lock status

* Cleanup suspicious method

* Add nullables

*  add doInCriticalSection to TaskLockBox and revert return type of task actions

* fix build

* refactor CriticalAction

* make replaceLock transactional

* fix formatting

* fix javadoc

* fix build",2017-10-12T06:16:31Z
7a9940d624aad3236cbf918b9a9393b57e953790,"Add /readiness to HistoricalResource (#4916)

* Add /loadStatusCode to HistoricalResource

* Address comments

* Fixes",2017-10-12T03:35:52Z
56fb11ce0bf60836010e91c15456c4d844282d84,"Lazy initialization for JavaScript functions (#4871)

* Lazy initialization of JavaScript functions

* Fix test failure

* Fix thread-safety and postpone js conf check

* Fix test fail

* Fix test

* Fix KafkaIndexTaskTest

* Move config check",2017-10-11T04:52:42Z
31c80024b6c80e228d7841c3b37681898cc189f7,"Add missed links of commands (#4873)

Signed-off-by: Hao Ziyu <haoziyu@qiyi.com>",2017-10-11T01:13:44Z
18635a19b34f56a3c1906c1e89a00dbeb6bf3ef2,"Remove unused limitFn in GroupByQuery (#4935)

* Remove unused limitFn in GroupByQuery

* Remove unused limitFn creation logic",2017-10-10T22:56:30Z
e725ff4146e84a3f3c61b8bea10ed23d7a9e9f9b,1-based counts in ZkCoordinator (#4917),2017-10-10T20:00:51Z
b20e3038b6a14332185f538f11fe1146f75b44d1,"SQL: Upgrade to Calcite 1.14.0, some refactoring of internals. (#4889)

* SQL: Upgrade to Calcite 1.14.0, some refactoring of internals.

This brings benefits:
- Ability to do GROUP BY and ORDER BY with ordinals.
- Ability to support IN filters beyond 19 elements (fixes #4203).

Some refactoring of druid-sql internals:
- Builtin aggregators and operators are implemented as SqlAggregators
  and SqlOperatorConversions rather being special cases. This simplifies
  the Expressions and GroupByRules code, which were becoming complex.
- SqlAggregator implementations are no longer responsible for filtering.

Added new functions:
- Expressions: strpos.
- SQL: TRUNCATE, TRUNC, LENGTH, CHAR_LENGTH, STRLEN, STRPOS, SUBSTR,
  and DATE_TRUNC.

* Add missing @Override annotation.

* Adjustments for forbidden APIs.

* Adjustments for forbidden APIs.

* Disable GROUP BY alias.

* Doc reword.",2017-10-10T19:44:05Z
4e1d0f49d89543a078903cdd30b66cb458374c38,Docs: Fix link to broker configuration. (#4934),2017-10-10T18:18:46Z
1bc4b71a34857e6528a80793ef6ad2142ada9ebb,"Reduce Chance of Duplicates in EventReceiverFireHose (#4903)

* Add ability to optionally specify a sequence identifier to reduce the possibility of duplicate events entering the event receiver firehose

* Add ability to optionally specify a sequence identifier to reduce the possibility of duplicate events entering the event receiver firehose

* Add a hard coded limit to the maximum number of possible producer IDs to prevent a malicious (or uninformed) client from overflowing the heap",2017-10-10T18:17:17Z
0614b92df1772bd0ec6dd8f54a3cc52cb757efec,"adding new post aggregators for test statistics to druid-stats extension (#4532)

* adding new post aggregators of test stats to druid-stats extension

* changes to address code review comments

* fix checkstyle violations using druid_intellij_formatting.xml after merge upstream/master

* add @Override annotation per CI log

* make changes per review comments/discussions

* remove some blocks per review comments",2017-10-10T06:43:27Z
7cc18226cd15ce5bde0b45c7b780ea2ad1a9d9f1,"add more tls configs to enable/disable specific cipher suites and protocols (#4902)

* add more tls configs to enable/disable specific cipher suites and protocols

* fix doc, allow empty list",2017-10-09T20:53:12Z
797b54d283a618ead581aa8cc100eeaeb39e4338,"DruidLeaderClient: Throw IOException on retryable errors. (#4913)

* DruidLeaderClient: Throw IOException on retryable errors.

Fixes #4911.

* Adjustments.",2017-10-06T20:12:09Z
535c034c06e7b62dfc516908d20488490da68a7f,assume scheme to be http if not present (#4912),2017-10-06T19:50:48Z
0e856ee806002f9af80cefb0fad47328655a6b2d,"add configs to enable fast request failure on broker and historical (#4540)

* add configs to enable fast request failure on broker

* address review comments

* fix styling error

* fix style error

* have enableRequestLimit config instead of having user specify max limit

* add comment

* fix style error

* add UT fo LimitRequestsFilter

* address review comments

* fix test

* make LimitRequestsFilterTest more robust

* fix JettyQosTest",2017-10-06T19:45:13Z
ef67915d9c4733fee10b705c85235ce8de796f06,prevent unnecessary exception (#4905),2017-10-06T18:35:45Z
35944d24aedf999c5aab303e44e01522b090c39a,"Fix JdbcCacheGenerator, null values shouldn't be allowed (#4881)

* Fix JdbcCacheGenerator, null values shouldn't be allowed

* Add a test case for null values",2017-10-06T16:31:48Z
4ff12e4394b8634b60a927ad4f1d4614b6b598c4,"Hadoop indexing: Fix NPE when intervals not provided (#4686)

* Fix #4647

* NPE protect bucketInterval as well

* Add test to verify timezone as well

* Also handle case when intervals are already present

* Fix checkstyle error

* Use factory method instead for Datetime

* Use Intervals factory method",2017-10-06T05:46:07Z
716a5ec1a8bb66ca480eaf0eb8e3cc68a234d1cc,Add identity to DefaultSearchQueryMetrics and DefaultSelectQueryMetrics. (#4906),2017-10-05T01:28:23Z
2ee32399ff8db77d571fa261c29786a466a1239a,"granularity method in QueryMetrics. (#4570)

* granularity method in QueryMetrics.

PR to emit granularity dimension for timeseries, search, groupBy,
select and topN queries.

* QueryMetricsFactory classes for search and select queries.

* Empty implementation  for  Granularity() method.

* Review comment changes.

* Remove unused import.

* empty query() method.

* checkstyle fix.

* Import fix.",2017-10-04T16:42:52Z
07aa405a6f5f16e50f4f6864516b5f4976749628,"Fix PreResponseAuthorizationCheckFilter HTTP error masking (#4900)

* Fix PreResponseAuthorizationCheckFilter HTTP error masking

* Add remote addr and host to missing auth check log message",2017-10-03T21:58:57Z
bba96f59f81f9aa5203ea59a73f42c37becce73f,"added missing synchronized keyword (#4894)

* added missing synchronized keyword

* added missing synchronized keyword",2017-10-03T17:16:54Z
c19cd23e94ea87648f6f205b05036fe745ec6a8c,"RTR: Demote chatty log message. (#4895)

""No worker selection strategy set."" would get logged any time tryAssignTask runs
in the default configuration, which is often. It also doesn't provide much value.",2017-10-03T15:16:32Z
e6eabac3853a13bb23c80ddf91129ad8056c59bc,Implement repalceInput and add tpch dataset (#4848),2017-10-03T15:00:59Z
3f1009aaa1fddbec9c5a15dac75a209969abd033,"Make Overlord auto-scaling and provisioning extensible (#4730)

* Make AutoScaler, ProvisioningStrategy and BaseWorkerBehaviorConfig extension points; More logging in PendingTaskBasedWorkerProvisioningStrategy

* Address comments and fix a bug

* Extract method

* debug logging

* Rename BaseWorkerBehaviorConfig to WorkerBehaviorConfig and WorkerBehaviorConfig to DefaultWorkerBehaviorConfig

* Fixes",2017-10-03T01:12:23Z
6f91d9ca1edf6dbb219ec35dd4d6c50c1fe831c0,change WorkerSelectStrategy's defaultImpl from FillCapacityWorkerSelectStrategy to EqualDistributionWorkerSelectStrategy (#4777),2017-10-02T23:52:41Z
5e60ccade1d7fda32c90543203f58f58afa50ca2,Add context map to AuthenticationResult (#4870),2017-10-02T22:08:14Z
5fbec5b435dafcf9c9058f02d740fb5e3847bdea,Fix limit push down comparator bug (#4868),2017-10-02T18:44:23Z
9deab26d8bea02feee368da2e065dcea67f3c27d,Fix auth check in InventoryViewUtils (#4869),2017-10-02T18:38:45Z
3e9391433df3b51f25ed9472000c8fe7243bebad,Coord resource throws NPE when segments are requested (#4759),2017-10-02T17:13:27Z
ee7eaccbab6c3e520d12ccf5ba4959509f8c98d7,"Better logging for SegmentAllocateAction (#4884)

* Better logging for SegmentAllocateAction

* Split methods",2017-10-02T16:29:21Z
1f2074c2470c468360c46fa7e6e48b4753a9c14e,"Bump versions in master to 0.11.1-SNAPSHOT. (#4878)

* Bump versions in master to 0.11.1-SNAPSHOT.

* Missed a few.",2017-09-28T22:09:51Z
26fd2b3a8ebd16d47cb4291405cea1777a7ad0f2,"Priority on loading for primary replica (#4757)

* Priority on loading for primary replica

* Simplicity fixes

* Fix on skipping drop for quick return.

* change to debug logging for no replicants.

* Fix on filter logic

* swapping if-else

* Fix on wrong ""hasTier"" logic

* Refactoring of LoadRule

* Rename createPredicate to createLoadQueueSizeLimitingPredicate

* Rename getHolderList to getFilteredHolders

* remove varargs

* extract out currentReplicantsInTier

* rename holders to holdersInTier

* don't do temporary removal of tier.

* rename primaryTier to tierToSkip

* change LinkedList to ArrayList

* Change MinMaxPriorityQueue in DruidCluster to TreeSet.

* Adding some comments.

* Modify log messages in light of predicates.

* Add in-method comments

* Don't create new Object2IntOpenHashMap for each run() call.

* Cache result from strategy call in the primary assignment to be reused during the same run.

* Spelling mistake

* Cleaning up javadoc.

* refactor out loading in progress check.

* Removed redundant comment.

* Removed forbidden API

* Correct non-forbidden API.

* Precision in variable type for NavigableSet.

* Obsolete comment.

* Clarity in method call and moving retrieval of ServerHolder into method call.

* Comment on mutability of CoordinatoorStats.

* Added auxiliary fixture for dropping.",2017-09-28T20:02:05Z
a19f22b5bb6b11d85cc15486198418b7dd49d633,"Add identity to query metrics, logs. (#4862)

* Add identity to query metrics, logs.

Also fix a bug where unauthorized requests would not emit any logs or metrics,
and instead would log a ""Tried to emit logs and metrics twice"" warning.

Also rename QueryResource's ""getServer"" to ""cancelQuery"", because that's what
it does.

* Do not emit identity by default.",2017-09-28T18:45:23Z
fbd4cd633b6643ba35f9f6322261310ea6aa1520,"SQL: Delay query translation until the end of planning. (#4846)

* SQL: Delay query translation until the end of planning.

This fixes a bug in which input rels to nested queries could get swapped
out by the optimizer, leading to incorrect nested query planning.

This also, I hope, makes the query translation code easier to understand. At
least for me, the PartialDruidQuery -> DruidQuery -> Query chain is easier
to understand than the previous-existing rule spaghetti.

* Make test more consistent.

* Fix test.",2017-09-28T18:43:20Z
f69c9280c4766573a225ca043138d4274f948131,"remove ServerConfig from DruidNode as all information needs to be present in DruidNode serialized form (#4858)

* remove ServerConfig from DruidNode as all information needs to be present in DruidNode serialized form

* sanitize output of /druid/coordinator/v1/cluster endpoint",2017-09-28T15:40:59Z
2c30d5ba55b940eef7bafee1cb1e5b25765cebd2,"Add org.joda.time.DateTime.parse() to forbidden APIs (#4857)

* Added org.joda.time.DateTime#(java.lang.String) to forbidden API.

* Added org.joda.time.DateTime#(java.lang.String, org.joda.time.format.DateTimeFormatter) to forbidden API.

* Add additional APIs that may create DateTime with default time zone

* Add helper function that accepts formatter to parse String.

* Add additional forbidden APIs

* Replace existing usage of forbidden APIs

* Use wrapper class to enforce Chronology on DateTimeFormatter.

* Creates constant UtcFormatter for constant ISODateTimeFormat.",2017-09-27T22:46:44Z
c3fbe5158d9f4e84aa7bffe9802052b61878b178,"use latest sketches-core-0.10.1 and memory-0.10.3 (#4828)

* use latest sketches-core-0.10.1 and memory-0.10.3

* style fix

* better variable name

* removed explicit dependency on memory",2017-09-27T20:18:33Z
999c6d800e59ece267e84f0021a5ecf82c097db5,Fix Router handling of SQL queries. (#4851),2017-09-27T17:58:24Z
9c126e2aa9b7680002260bc969b63cf0118f59fe,"Forbid MapMaker (#4845)

* Forbid MapMaker

* Shorter syntax

* Forbid Maps.newConcurrentMap()",2017-09-27T13:49:47Z
c702ac771fe999d9dc5018eab109bc1017578131,Fix formatting in ApproximateHistogramTest (#4853),2017-09-26T20:14:25Z
e60bc0cabcb61ca0ecf9e5548d1140d0d4c6c952,"bug: getQuantiles() returns values that exceed max (#4744)

Fixes https://github.com/druid-io/druid/issues/3972",2017-09-26T17:43:56Z
bf8fd4c203369cd96a520734903e444853b64957,"Add flattenSpec support to the Avro parser. (#4832)

* Add flattenSpec support to the Avro parser.

Also:

- Refactor the JSONPathParser a bit so it can share flattening code
  with Avro (see ObjectFlatteners).
- Remove the JSONParser. It was only used in two places: by
  UriNamespaceExtractor, and as a base for JSONToLowerParser. Migrated
  the former to JSONPathParser and made the latter a standalone.
- Move GenericRecordAsMap to the Parquet extension, since the Avro
  extension no longer uses it.

* Fix indentation.

* Fix equals/hashCode.",2017-09-26T16:26:06Z
b56a907145339613fd7e742254ddd4ad9beaa693,Add namespace extraction thread config (#4833),2017-09-25T16:52:36Z
07446ef32c1dd2d830b685907f8117ac4f6193b2,warn if topic not found (#4834),2017-09-25T03:21:46Z
a6470c1d03d39411daa274d4d107561d6f445590,"Move caffeine out of extension and make it the default cache implementation. (#4810)

* Move caffeine out of extension.

* Remove `JsonTypeName` from the class itself

* Fix bad docs

* Fix distribution pom

* Fix unused import

* Make caffeine default

* Address code comments

* Add more description around the jre version in the readme

* Add suggested comments",2017-09-22T17:46:55Z
09fcb7558309fb300a61ff00aeecb0fffda5cfbc,"Add RequestLogEvent emitters config to graphite-emitter (#4678)

* Add RequestLogEvent emitters config to graphite-emitter

* eagerly compute emitter list

* use lambdas

* checkstyle",2017-09-22T13:14:32Z
e267f3901b47d93048f9c822f8f23530497b237f,Enforce Indentation with Checkstyle (#4799),2017-09-21T20:06:48Z
d8b3bfa63c9a8ff680a7eb967bc12c845cbadcd8,Remove SegmentLoaderConfig.numLoadingThreads config (#4829),2017-09-21T04:27:43Z
a9d8539802fc570eff07ece7eef71817d4c62d7b,"Remove IndexedInts.iterator() (#4811)

* Remove IndexedInts.iterator()

* Retain IndexedInts.iterator(), but don't extend Iterable

* Add BitmapValues

* Fix tests",2017-09-21T04:25:52Z
47ebc4805966bb80e9d52ec9a5a5271302aac398,"Use java 8 features in TierSelectorStrategy implementations (#4827)

* Use java 8 features in TierSelectorStrategy implementations
* Minor code cleanup

* More java8 coolness

* Code comments",2017-09-21T03:09:29Z
a36adc63e4150528ecad12a00bdbb248b66adbca,"[documentation] add more jvm and os guidelines (#4793)

* add more jvm and os guidelines

* address review comments

* add not so general guidelines too

* duplicate statement removal",2017-09-20T20:12:57Z
88e9a80636980e6390293a736931e37e00f003b5,Rename ObjectValueSelector.get() to getObject(); Add getObject() and classOfObject() to ColumnValueSelector (#4801),2017-09-19T19:47:20Z
164c73f2b2720b09914dcb0cd8f030688a9a53e5,Fix kerberos authenticator docs (#4822),2017-09-19T19:32:22Z
24646ac76a1c21b99bc8d1dc3473d7b086c22dd0,LZ4 decompression forward compatibility (#4824),2017-09-19T17:18:37Z
3a4a483bb08a4d2f80660b1a39633a58cc04c814,"Single auth check for authorized resource filtering (#4818)

* Single auth check for authorized resource filtering

* PR comment

* PR comments",2017-09-19T16:16:08Z
00d39ce7a58d1488d1fbb4d6bfcdec3bd8920e71,Move checks for bitmap size == 0 to isEmpty (#4820),2017-09-19T16:15:16Z
edd9c76fa5ba8521c7c84b82706be92bf363c0af,"Add profile for building for use with Spark 2.x (#4808)

* Add profile for building for use with Spark 2.x

* Update aws sdk version",2017-09-19T04:39:40Z
e38705e3484d3ccc1ed96d78803081941966053a,"Add timing to log for URI based Lookup fetching (#4805)

* Add timing to log for URI based metrics

* Reformat",2017-09-18T16:18:32Z
96612cc66538ef672f54e2a5dbf75d4ea258885d,Fix incorrect log formatting in DruidKerberosAuthenticationHandler. (#4817),2017-09-18T05:41:36Z
c2a0e753b618027c18541b550f40c1a757380530,"Extension points for authentication/authorization (#4271)

* Extension points for authentication/authorization

* Address some PR comments

* Authorization result caching

* Add unit tests for SecuritySanityCheckFilter and PreResponseAuthorizationCheckFilter

* Use Set for auth caching, close outputstreams in filters

* Don't close output stream on success in sanity check filter

* Add ConfigResourceFilter to coordinator lookups

* Fix filtering authorization check for empty resource list

* HttpClient users must explicitly escalate the client

* Remove response modification from PreResponseAuthorizationCheckFilter

* Remove extraneous pom.xml

* Fix unit test

* Better lifecycle management

* Rename AuthorizationManager to Authorizer

* Fix authorization denials for empty supervisor list

* Address some PR comments

* Address more PR comments

* Small cleanup

* Add Jetty HttpClient wrapper to Authenticator

* Remove Authorizer start/stop

* Restore immutable context map in DruidConnection, UT fix

* Fix/update docs

* Add authorization checks to EventReceiverFirehose

* Fix router authorization check failure, restore PreResponseAuthorizationFilter changes

* Compile fixes

* Test fixes

* Update Authenticator/Authorizer doc comments

* Merge fixes

* PR comments

* Fix test

* Fix IT

* More PR comments

* PR comments

* SSL fix",2017-09-16T06:45:48Z
3f92184dd8de3c5b5679f3778a846427e56b2bf9,Inspection fixes (#4809),2017-09-16T00:48:29Z
0fe734805b1deefa95bd50f361ddd897142550cf,formatted table. (#4797),2017-09-16T00:39:06Z
d606bd72defc9060d5a5471450e0297cc639c61d,Upgrade curator (#4786),2017-09-15T17:48:32Z
d37be5e6e97cb1970e74051f43957c5787a8ca4f,don't hold thread while waiting after failure from server (#4795),2017-09-14T22:19:25Z
b61248fdb180273553d484154d1bfc919ff4f8b1,Replace HistoricalFloatColumnSelector with more generic HistoricalColumnSelector (#4796),2017-09-14T20:52:06Z
a17e48fe69941124f0732f96096e7999b94e2954,"search package name correction. (#4785)

* search package name correction.

* Refactor search.search pkg to search.

* remove unused import.",2017-09-14T20:50:23Z
cd5de123bd2807eed3d01daee16c78040b042764,"Self-checking S3DataSegmentMover.safeMove() (#4725)

* Self-checking S3DataSegmentMover.safeMove()

* Remove unused in S3DataSegmentMoverTest

* Address comments

* More specific excpetions

* Remove delete check",2017-09-14T20:49:21Z
267f415dc3d6bba66b307780a6e665dce9b37476,"Update emitter library and add support for ParametrizedUriEmitter (#4722)

* Move emitters from io.druid.server.initialization to the dedicated io.druid.server.emitter package; Update emitter library to 0.6.0; Add support for ParametrizedUriEmitter; Support hierarical properties in JsonConfigurator (was needed for ParametrizedUriEmitter)

* Log created RequestLoggers

* Fix forbidden API

* Test fix

* More Http and Parametrized Http Emitter docs

* Switch to debug level",2017-09-13T22:17:19Z
4f6eb47e4096e38b11861a59cb3e273b7943b989,"Allow timezone info in timestamp column (#4727)

* Allow timezone info in timestamp column

* Address code review comments

* Incorporating code comments

* Add support for more valid timezone strings

* Incorporate review comments

* Incorporate code review comments",2017-09-13T20:19:39Z
7919469de6bc0cbaa638c03dd4bba2b9dc1b4944,"fixes HttpServerInventoryView to call server/segment callbacks correctly and Unit Tests for the class (#4767)

* fixes HttpServerInventoryView to call server/segment callbacks correctly and Unit Tests for the class

* fix checkstyle and forbidden-api errors

* HttpServerInventoryView to finish start() only after server inventory is initialized

* fix compilation errors

* address review comments

* add exponential backoff instead of fixed 5 secs on successive failures

* update test to exercise server fail scenarios

* use AtomicInteger for requestNum and increment only once",2017-09-13T19:24:19Z
39a0b171e890bf7dfe9caff3c67201b265630ff5,fix a race condition of ParseCtx (#4791),2017-09-13T17:03:48Z
eb6791a60c24dd8758e2852e0dca5f933ef3371f,"TimestampAggregator: Avoid cross-classloader access of package-private field. (#4788)

* TimestampAggregator: Avoid cross-classloader access of package-private field.

* Simplify.

* Remove unused import.",2017-09-13T16:52:01Z
2ce8123bdb2d2337b1e72740198691fb58864a5f,"Move scan-query from a contrib extension into core. (#4751)

* Move scan-query from a contrib extension into core.

Based on a proposal at: https://groups.google.com/d/topic/druid-development/ME_OatUDnbk/discussion

This patch also adds support for virtual columns to the Scan query,
and updates Druid SQL to use Scan instead of Select.

This patch also makes some behavioral changes to handling of the __time
column. In particular, it is now is returned as ""__time"" rather than
""timestamp""; it is no longer included if you do not specifically ask for
it in your ""columns""; and it is returned as a long rather than a string.

Users can revert time handling to the legacy extension behavior by
setting ""legacy"" : true in their queries, or setting the property
druid.query.scan.legacy = true. This is meant to provide a migration
path for users that were formerly using the contrib extension.

* Adjustments from review.

* Add back Select query.

* Adjust SQL docs.

* Restore SelectQuery link.",2017-09-13T16:51:24Z
587f1807c2cc0cf6cef0c3b39aec52902f19ffa3,"Try to improve CI reliability. (#4787)

* Try to improve CI reliability.

Unset _JAVA_OPTIONS just in case it is causing us to use more memory than expected.

* Replace for loop with foreach.",2017-09-13T03:24:45Z
c3a1ce693378cb7ad548b56ed4bfd73b3c71b7b9,"SQL: Fix toTimeseriesQuery and toTopNQuery. (#4780)

The former would sometimes eat limits, and the latter would sometimes
use the wrong dimension comparator.",2017-09-12T21:37:27Z
3a2952127317675e6abd978f8459e544a56d526c,"Fix GroupBy limit push down error when buffer is too small (#4745)

* Fix GroupBy limit push down error when buffer is too small

* Address PR comments",2017-09-12T19:34:50Z
832cc293efe50ca11897c97c9ef84f7d263df3c9,"Refactoring of ReferenceCountingSegment and FireHydrant (#4154)

* Refactoring of ReferenceCountingSegment and FireHydrant

* Address comment

* Fix FireHydrant.closeSegment()

* Address comment

* Added comments to ReferenceCountingSegment",2017-09-12T19:28:35Z
c0be050242302b8198b66140316e50e8f8374275,"Add jq expression support in flattenSpec (#4171)

* add jq expression in the flattenSpec

* more tests

* add benchmark

* fix style

* use JsonNode for both JSONPath and JQ

* clean up

* more clean up

* add documentation

* fix style

* move jackson-jq version to dependencyManagement section. remove commented code

* oops. revert wrong fix

* throw IllegalArgumentException for JQ syntax error

* remove e.printStackTrace() that is forbidden

* touch",2017-09-12T19:18:34Z
4909c48b0c04b509fac3496facfc018d63051459,"SQL: Full TRIM support. (#4750)

* SQL: Full TRIM support.

- Support trimming arbitrary characters
- Support BOTH, LEADING, and TRAILING

* Remove unused import.

* Fix tests, add RTRIM / LTRIM.

* Remove unused imports.

* BTRIM and docs.

* Replace for with foreach.",2017-09-12T18:49:08Z
b5e839b3dbb78e6ed9a8193486fa17a8bf72c0cd,"injectable sslcontextfactory for jetty server and key manager factory algorithm (#4769)

* injectable sslcontextfactory for jetty server

key manager factory algorithm

* explicitly set trustAll certificates to false in sslcontextfactory",2017-09-12T18:45:03Z
6f3e52b3db31e02f4e0e4f8b0ef171f51641c57f,"Make optional Peon ""stdin"" check (#4760)",2017-09-11T21:37:01Z
23c035781656e739d667dc48ef43388bf504dcdc,"BufferHashGrouperTest: Better behavior with regard to large buffers. (#4779)

* BufferHashGrouperTest: Better behavior with regard to large buffers.

1) Free buffers after each test
2) Avoid mmaping past the end of a file

* Use CloserRule.",2017-09-11T19:10:31Z
834e050bc44ebdf5d6eb28d85667b206060da583,"Use internal-discovery and http for talking to overlord/coordinator leaders (#4735)

* Use internal-discovery and http for talking to overlord/coordinator leaders

* CuratorDruidNodeDiscovery.getAllNodes() best effort 30 sec wait for cache initialization

* DruidLeaderClientProvider to eagerly instantiate DruidNodeDiscovery when needed so that DruidNodeDiscovery impl cache gets initialized well in time

* Revert ""DruidLeaderClientProvider to eagerly instantiate DruidNodeDiscovery when needed so that DruidNodeDiscovery impl cache gets initialized well in time""

This reverts commit f1a2432614ba56ddc2d55fe47e990d17fcfd6129.

* add lifecycle to DruidLeaderClient to early initialize DruidNodeDiscovery so that it has its cache update well in time",2017-09-11T18:18:01Z
975a50fc81fc443cada5965a75565601bfbedb48,Generate UUID if query id is empty (#4772),2017-09-11T17:40:26Z
706747cc8c5a07b7ef97896efdb00ddc26bed2b0,"Fix for sort order in select/topN query cache (#4766)

When historical caching is enabled, and a select or topN query is
issued, and then a following query with ""descending"": true is set, the
cached query returns the ascending result (or vice versa), often
resulting in invalid paging identifiers.

The CacheKey for these queries doesn't include the ""descending"" flag;
this change adds it, and fixes the problem.",2017-09-10T02:33:00Z
752151f6cb95af0b81353295f675aef282210c25,"Add CachingCostBalancerStrategy (#4731)

* Add CachingCostBalancerStrategy; Rename ServerView.ServerCallback to ServerRemovedCallback

* Fix benchmark units

* Style, forbidden-api, review, bug fixes

* Add docs

* Address comments",2017-09-08T17:23:04Z
d43687d578bf3dea98b01d0899bcfbb2125d142e,increase test timeout to 15sec as leader election jitter is random sleep between 1 to 5 secs (#4756),2017-09-06T16:56:25Z
dc5c6f13b1ff038ac1f5026fe4fe5f30ef636c1e,"Use trusty for travis jobs. (#4755)

* Use trusty for travis jobs.

The distro was set to ""precise"" in #4572 due to memory issues on trusty,
but we've been seeing performance issues on ""precise"" recently so let's
see how trusty is working these days.

* Less quiet.

* Adjust memory settings.

* Add back -q option.

* Tweak memory again.

* Adjustments.

* Try squeezing memory a bit more.",2017-09-06T09:51:06Z
33c0928bed9dde81ebceda2ac75e2446fbf2786f,"Collapse worker select strategies, change default, add strong affinity. (#4534)

* Collapse worker select strategies, change default, add strong affinity.

- Change default worker select strategy to equalDistribution. It is
  more generally useful than fillCapacity.
- Collapse the *WithAffinity strategies into the regular ones. The
  *WithAffinity strategies are retained for backwards compatibility.
- Change WorkerSelectStrategy to return nullable instead of Optional.
- Fix a couple of errors in the docs.

* Fix test.

* Review adjustments.

* Remove unused imports.

* Switch to DateTimes.nowUtc.

* Simplify code.

* Fix tests (worker assignment started off on a different foot)",2017-09-04T21:40:55Z
c7b8116b3aa01521c0be80f39736b20123f19ad1,Remove HadoopIOPeon (#4742),2017-09-03T20:36:38Z
83e94e8b3198abc43e7c2959123adb20aa9941b6,"Expose version property for `CustomVersioningPolicy` so that it may serialize/deserialize correctly (#4747)

Expose version property for  so that it may serialize/deserialize correctly

Expose version property for `CustomVersioningPolicy` so that it may serialize/deserialize correctly

Expose version property for CustomVersioningPolicy so that it may serialize/deserialize correctly

Expose version property for `CustomVersioningPolicy` so that it may serialize/deserialize correctly",2017-09-03T20:36:18Z
06ac6678e645e3d071dd502e6a8504751d286f89,"DruidLeaderSelector interface for leader election and Curator based impl. (#4699)

* DruidLeaderSelector interface for leader election and Curator based impl. DruidCoordinator/TaskMaster are updated to use the new interface.

* add fake DruidNode binding in integration-tests module

* add docs on DruidLeaderSelector interface

* remove start/stop and keep register/unregister Listener in DruidLeaderSelector interface

* updated comments on DruidLeaderSelector

* cache the listener executor in CuratorDruidLeaderSelector

* use same latch owner name that was used before

* remove stuff related to druid.zk.paths.indexer.leaderLatchPath config

* randomize the delay when giving up leadership and restarting leader latch",2017-09-01T16:49:04Z
34a03b8e6ca72b55e7bfcba1058c4a30099cc3b8,"SQL: EXPLAIN improvements. (#4733)

* SQL: EXPLAIN improvements.

- Include query JSON in explain output.
- Fix a bug where semi-joins and nested groupBys were not fully explained.
- Fix a bug where limits were not included in ""select"" query explanations.

* Fix compile error.

* Fix compile error.

* Fix tests.",2017-09-01T16:35:13Z
4c040839268f5142dda013dc8020f2e7896bda50,kafkaIndexTask unannounce service in final block (#4736),2017-09-01T16:31:15Z
bdfc6fe25e2a2d96cc738c8879fdcddd0fecac94,Move common TypeReference into JacksonUtils (#4738),2017-08-31T20:40:16Z
9078925cab5f3942b662397d76ac2100aebafd08,Docs for finalizingFieldAccess post-aggregator. (#4737),2017-08-31T18:45:49Z
d6179126ed488a2c70986754c5ad5c88575d3d9c,"Allow index job to utilize hadoop cluster information from job config. (#4626)

* Allow ndex job to utilize hadoop cluster information from job config.

* Add new method that inject system configuration and then job configuration.

* Make changes to use HadoopDruidIndexerConfig.addJobProperties method.

* refactor code for overloaded addJobProperties.",2017-08-30T21:44:33Z
8dddccc687f33e90dbe6b0d1224c69f44d1e0428,"Graphite emitter - add plaintext protocol (#4265)

* Graphite emitter - add plaintext protocol. Configurable option of replacing slash to dot in metric name.

* Graphite emitter - fix misspelling in docs.

* Graphite emitter - extend docs.

* Graphite emitter - fix code style.",2017-08-29T13:23:06Z
beecb9e210f7136b9fc8db7d7c922e70f1c54567,"Fix failing build, remove unused import (#4726)

LGTM",2017-08-29T05:46:38Z
4d109a358a66becb31a4161853577376b7debd6c,"Refactoring of Storage Adapters (#4710)

* Factor QueryableIndexColumnSelectorFactory and IncrementalIndexColumnSelectorFactory out of QueryableIndexStorageAdapter and IncrementalIndexStorageAdapter; Add Offset.getBaseReadableOffset(); Remove OffsetHolder interface; Replace Cursor extends ColumnSelectorFactory with composition; Reduce indirection in ColumnValueSelectors created by QueryableIndexColumnSelectorFactory

* Don't override clone() in FilteredOffset (the prev. implementation was broken); Some warnings fixed

* Simplify Cursors in QueryableIndexStorageAdapter

* Address comments

* Remove unused and unimplemented methods from GenericColumn interface

* Comments",2017-08-29T01:07:31Z
594a66f3c012bcab980232bfd2c9b37a7b8d2388,"add scheme to AsyncQueryForwardingServlet (#4688)

* add scheme to AsyncQueryForwardingServlet

* add sslContext binding for Router",2017-08-28T22:03:43Z
daf3c5f92739fb088a8d2181f4a2edf04526e170,"Add ""round"" option to cardinality and hyperUnique aggregators. (#4720)

* Add ""round"" option to cardinality and hyperUnique aggregators.

Also turn it on by default in SQL, to make math on distinct counts
work more as expected.

* Fix some compile errors.

* Fix test.

* Formatting.",2017-08-28T21:52:11Z
9fbfc1be32082516a17c6660b278949731d4f51a,"Add @ExtensionPoint and @PublicApi annotations. (#4433)

* Add @ExtensionPoint and @PublicApi annotations.

* Clean up wording.

* Remove unused import.

* Remove unused imports.

* Only types can be extension points.

* Adjust annotations some more.

* Remove unused import.

* Make ServletFilterHolder an extension point.

* Add a couple extension points, and update docs.",2017-08-28T21:50:58Z
b04261e7a23d5e3e0c49a8c3cf424ee2f9e1652a,"In indexing service flow chart, it should be middlemanager who writes task status to zookeeper (#4654)",2017-08-27T17:17:15Z
43488df97507e090dade8da8e4a0f8a3dfa93e07,"Fix dimension selectors with extractionFns on missing columns. (#4717)

* Fix dimension selectors with extractionFns on missing columns.

This patch properly applies the requested extractionFn to missing columns.
It's important when the extractionFn maps null to something other than null.

* Extract helper method.

* Change contracts of VirtualColumns and VirtualColumn methods based on review comments.

* Remove unused import.

* Remove unused method.

* Adjust helper function.

* Adjustments",2017-08-25T23:34:42Z
fd0f349c681eb0d042543535790998d6b409b20f,"Mark segments that are going to be dropped from the server and use it in DruidBalancer (#4486)

* Do not remove segment that should not be moved from currentlyMovingSegments (segments are removed by callbacks or not inserted)

* Mark segments that are going to be dropped from server and use this information in CostBalancerStrategy

* Fix tests",2017-08-25T23:25:56Z
598cc46bae089b95f34d0e5cc02b4f25c73c064f,Replace HashMap with Obj2IntMap in StringDimensionIndexer; Small optimization in StringDimensionMergerV9 (#4721),2017-08-25T19:30:39Z
74538c32887aea0d7180857ef7edfad46e17d105,"update internal-discovery Listener for node list and use same at router and coordinator (#4697)

* update LookupCoordinatorManager to use internal discovery to discover lookup nodes

* router:use internal-discovery to discover brokers

* minor [Curator]DruidDiscoveryProvider refactoring

* add initialized() method to DruidNodeDiscovery.Listener

* update HttpServerInventoryView to use initialized() and call segment callback initialization asynchronously

* Revert ""update HttpServerInventoryView to use initialized() and call segment callback initialization asynchronously""

This reverts commit f796e441221fe8b0e9df87fdec6c9f47bcedd890.

* Revert ""add initialized() method to DruidNodeDiscovery.Listener""

This reverts commit f0661541d073683f28fce2dd4f30ec37db90deb0.

* minor refactoring removing synchronized from DruidNodeDiscoveryProvider

* updated DruidNodeDiscovery.Listener contract to take List of nodes and first call marks initialization

* update HttpServerInventoryView to handle new contract and handle initialization

* router update to handle updated listener contract

* document DruidNodeDiscovery.Listener contract

* fix forbidden-api error

* change log level to info for unknown path children cache events in CuratorDruidNodeDiscoveryProvider

* announce broker only after segment inventory is initialized",2017-08-25T16:28:15Z
4f61dc66a940d74c5db707e7633d0816e1ce7ab0,"Remove the deprecated variable localChildren (#4357)

Signed-off-by: Hao Ziyu <haoziyu@qiyi.com>",2017-08-24T20:27:34Z
421e02203fadcf2e5e36ba9135ab96cbd5a16f54,"fix null sslPort issue (#4696)

* fix null sslPort issue

* add tests",2017-08-24T20:19:07Z
59a48a560a685ab0bea2be2c933a456102e675cf,"Redis cache extension doc (#4702)

* Redis cache extension doc

* link redis cache doc in extensions.md",2017-08-24T14:53:51Z
765f46af5b046024f93f2007a5069ca5aae54f02,git ignore dependency-reduced-pom.xml (#4711),2017-08-23T17:10:50Z
b43720c46d0cf70513c524f4e19ba1d7cde27fd7,Correction in indexing-service configuration doc. (#4700),2017-08-23T04:21:34Z
326a85a9a47606de6c6a656f4b30bf480ed58166,"Add Offset.reset() and remove unused Offset implementations (#4706)

* Add Offset.reset() and remove unused Offset implementations

* Fix BitmapOffset

* Address comments",2017-08-23T00:43:29Z
92bcfdc20067b387c691a947589de035d14b6ae0,consider docker ip be 127.0.0.1 by default (#4707),2017-08-22T19:25:46Z
cacf63b007b2bf28bdebbd51fddd7b613f0b92ac,"Add AggregateCombiners (#4676)

* Add MetricCombiners

* Rename MetricCombiner to AggregateCombiner

* Spelling

* Fix TimestampAggregatorFactory.combine() and add makeAggregateCombiner() implementation

* Rename AggregateCombiner.combine() to fold()",2017-08-21T23:45:29Z
cbd1902db8efa812f945f8b621fabee0f92672a5,"Add forbidden-apis plugin; prohibit using system time zone (#4611)

* Forbidden APIs WIP

* Remove some tests

* Restore io.druid.math.expr.Function

* Integration tests fix

* Add comments

* Fix in SimpleWorkerProvisioningStrategy

* Formatting

* Replace String.format() with StringUtils.format() in RemoteTaskRunnerTest

* Address comments

* Fix GroupByMultiSegmentTest",2017-08-21T20:02:42Z
fa87eaa6e84c1dc735c4e1bf74b879bfbfbf3ce2,Remove IndexedInts.fill() (#4705),2017-08-21T20:01:34Z
37f85b08d2a365de2ba395ba45725bbce81246d2,"move row up/down for null metric ordering (#4681)

* move row up/down for null metric ordering

* addressed comments

* addressed changes",2017-08-17T16:36:19Z
786e7815c21d61e87988214df18b88a0964b8d79,Fix issue  https://github.com/druid-io/druid/issues/4690 (#4691),2017-08-17T14:45:33Z
74a64c88ab0f114cf040b4dea5dbfa27d43e26dc,"internal-discovery: interfaces for announcement/discovery, curator based impls (#4634)

* internal-discovery: interfaces for announcement/discovery, curator impls

* more tests

* address some review comments

* more fixes

* address more review comments

* simplify ObjectMapper setup in CuratorDruidNodeAnnouncerAndDiscoveryTest

* fix KafkaIndexTaskTest

* make lookupTier overridable via RealtimeIndexTask and KafkaIndexTask context

* make teamcity build happy",2017-08-16T20:07:16Z
dba7c7d3cd9fe707ecefa45498e1bcba32334b55,"Reduce excessive logging (#4680)

* Reduce excessive logging

* Refactoring code as per comments",2017-08-15T17:14:20Z
ab28dc3b97f1576388dab744f39ace1f12e3dda3,"free() dictionary merging buffers in IndexMerger (#4684)

* free() dictionary merging buffers in IndexMerger

* Use close() for dictionary merge iterators

* Add comments on buffer free",2017-08-15T17:11:29Z
725a1440966b29f7a6ce4e98c49fc6aecde84c46,"add localhost as advertised hostname (#4689)

* add localhost as advertised hostname

* set advertised.host.name to localhost for test kafka broker",2017-08-14T23:59:26Z
e91d4d1b805c8b4a848ec36454d2a8b5f7acc2a7,Remove makeObjectColumnSelector() from DimensionIndexer (#4679),2017-08-11T21:39:00Z
d775347b06b70d3a25d28d61f4b8d74f4df0a22b,"TimestampSpec: Have ""auto"" detect timestamps in almost-iso format. (#4682)

Fixes #4082.",2017-08-11T20:02:42Z
1bddfc089cc4d4e2f610d9cb936ce7259c7482be,"Additional docs/log for direct memory usage (#4631)

* Additional docs/log for direct memory usage

* Tweak docs

* Doc rewording",2017-08-11T06:33:20Z
eb0deba54accf86373050ec4fe65e5ccea4fc512,"Fix NPE when locations are empty (#4667)

* Fix NPE when locations are empty

* Addressing comments",2017-08-11T06:31:28Z
5ff8c52f1640522188187c1194368a434d589a1a,"SQL: Fix race with metadata caching. (#4674)

If DruidSchema started too long after the BrokerServerView, its
initialization callback would never get called, and it would sit
there not knowing about any tables.

This moves the registration of the callback into the constructor,
where it belongs.",2017-08-11T01:27:10Z
bf28d0775bbfe0ba8b1392046bc20fa88b3e7fbd,"Remove QueryRunner.run(Query, responseContext) and related legacy methods (#4482)

* Remove QueryRunner.run(Query, responseContext) and related legacy methods

* Remove local var",2017-08-11T00:12:38Z
c821bc9a5a308bd3c1ec57844579fce94c0c095f,"Implement ""earlyMessageRejectionPeriod"" config discussed in issue #4599 (#4607)

* Implement ""earlyMessageRejectionPeriod"" config discussed in issue #4599
    * implement the logics of this param
    * Added doc of this config
    * Added unit tests of it

* Update KafkaSupervisor.java

ameliorate comment

* fix format

* fix bug when rebasing",2017-08-11T00:12:08Z
65c1d6c79776572981d1c92f4dce048281144246,"Add IntGrouper to avoid unnecessary boxing/unboxing in array-based aggregation (#4668)

* Add IntGrouper

* Fix build

* Address comments

* Add a benchmark query",2017-08-10T14:41:39Z
de9ba97d5424373fe6710c8fe02cd4ad5ae87d74,"Move equals() from Float[Sum|Min|Max]AggregatorFactory to SimpleFloat... (#4675)

Addresses #4671",2017-08-10T14:22:22Z
7c89e12ca9219a3eb6a21801faf5359dc0c04063,"Replace Guava Enum.getIfPresent with builtin version. (#4659)

* Replace Guava Enum.getIfPresent with builtin version.

This is useful for running in Hadoop environments that use Guava 11. Some
code is also simplified.

* Code review",2017-08-10T00:20:00Z
fe3421032ba5f6aee2d6d09eb247c36b68fc41e5,"Parallel sort for ConcurrentGrouper (#4660)

* Multi-thread sort

* Address comments",2017-08-09T23:24:36Z
ede7cf9eef6518f818dbd477ad167913acc92aa4,"Added support for where clauses to JDBC lookups. (#4643)

* Added support for where clauses to filter lookup values on ingestion.

Added a filter field to the JDBC lookups that is used to generate a
where clause so that only rows matching the filter value will be
brought into Druid. Example being filter=""SOMECOLUMN=1""

* Required changes based on code review.

* Required changes based on code review.

* Added support for where clauses to filter lookup values on ingestion.

Added a filter field to the JDBC lookups that is used to generate a
where clause so that only rows matching the filter value will be
brought into Druid. Example being filter=""SOMECOLUMN=1""

* Updates based on code review, mainly formatting and small refactor of
the buildLookupQuery method.

* Fixed broken buildLookupQuery method

* Removed empty line.

* Updates per review comments",2017-08-09T17:47:46Z
42569e65e2498c7c0a6096a8430b03f24730cbf9,Minor fix in ExpressionSelectors to avoid potential NPE. (#4669),2017-08-09T17:13:31Z
7454fd86a0a0776155d4170d7775a0c06c242733,"Polymorphic numeric getters for ColumnValueSelector (#4623)

* Add methods getFloat(), getDouble() and getLong() to ColumnValueSelector

* Fix copy-paste mistake in docs

* Spelling",2017-08-09T01:38:06Z
d5606bc558627e244eab9287a66ba54a3d827360,"Passing lockTimeout as a parameter for TaskLockbox.lock() (#4549)

* Passing lockTimeout as a parameter for TaskLockbox.lock()

* Remove TIME_UNIT

* Fix tc fail

* Add taskLockTimeout to TaskContext

* Add caution",2017-08-09T01:21:07Z
f5d41714590350cd156b4f567c7a04dc947cebc5,"Prohibit for loops which could be foreach with IntelliJ (#4653)

* Replace for with foreach

* Replace for with for-each in GroupByQueryEngineV2

* Remove io.druid.collections.IntList",2017-08-09T01:05:33Z
f18cc5df97e5826c2dd8ffafba9fcb69d10a4d44,"Redis cache extension (#4615)

* Redis cache extension

* Fix some trival and optimize code

* Add Override annotation in RedisCacheTest",2017-08-08T17:11:45Z
4dd1e2b59ee3c34d699c51e891dcfeb62ee2db39,"Do not remove segments from currentlyMovingSegments in DruidBalancer if move is impossible or not needed (#4472)

* Do not remove segment that should not be moved from currentlyMovingSegments (segments are removed by callbacks or not inserted)

* Replace putIfAbsent with computeIfAbsent in DruidBalancer

* Refactoring",2017-08-08T14:22:59Z
bbe7fb8c462d3fbfe0457c21347435f06d1c79fa,"Better logging for S3DataSegmentPuller `getVersion` (#4657)

* Eventual consistency of S3 means a `404` can be thrown. It helps to know the URI that was attempted.",2017-08-08T13:21:22Z
59a250726833c644c44b21ce2f48bad84b50cfbe,Fix spacing in KafkaEmitterConfig (#4663),2017-08-08T12:12:01Z
f8dcb05fd19164f711797f60a9ed463f03ff129a,"Fix a NPE using kafka emitter extension (#4608)

* Fix a NPE using kafka emitter extension

* fix format

* Add @Nullable annotation on kafkaProducerConfig",2017-08-08T03:21:24Z
486b7a234771f377078565ed353e1179dc416b75,"TaskMaster deadlock fix (#4548)

* Stop RemoteTaskRunner's cleanupExec using TaskMaster's lifecycle, not global injected lifecycle

* Prohibit starting Lifecycle twice; Make Lifecycle to reject addMaybeStartHandler() attempts in the process of stopping rather than entering deadlock

* Fix Lifecycle.addMaybeStartHandler()

* Remove RemoteTaskRunnerFactoryTest

* Add docs

* Language

* Address comments

* Fix RemoteTaskRunnerTestUtils",2017-08-07T21:28:43Z
aa7e4ae5e46a13a9db8d0ee29885249fd0afd02e,Enforce correct spacing with Checkstyle (#4651),2017-08-05T17:18:25Z
aa8d75004c9b91e21b11c58252d38317f0983c08,"More informative QueryInterruptedException toString() (#4642)

* More informative QueryInterruptedException toString()

* Use StringUtils.format",2017-08-04T23:00:20Z
9650d80f3e38d53b8be2cf79695c5c66c8cb6e34,"Don't use limit push down with having spec (#4630)

* Don't use limit push down with having spec

* Throw exception when forcing limit push down with having

* Tests for having and limit push down

* Fix pool sizes in unit test",2017-08-04T22:13:29Z
7a005088d9878eec4642897ec532e3aea4005c44,"Add HistoricalCursor.getReadableOffset() to access unwrapped offset in selectors (#4633)

* Add HistoricalCursor.getReadableOffset() to access unwrapped offset in selectors, when the 'main' offset if FilteredOffset (fixes #4628)

* Stack overflow test",2017-08-04T19:51:48Z
8c8759da034490775f32219dff489f507550037e,Append instead of create log file so that it is possible to logrotate. (#4644),2017-08-03T21:29:15Z
dd0b84e76606f76d46d3278d662a1e19550ac955,"Fix bugs in RTR related to blacklisting, change default worker strategy (#4619)

* fix bugs in RTR related to blacklisting, change default worker strategy to equalDistribution

* code review and additional changes

* fix errorprone

* code review changes",2017-08-03T17:34:45Z
f3f2cd35e144ca4ab01b7f9c37832555e40bbd97,"Array-based aggregation for groupBy query (#4576)

* Array-based aggregation

* Fix handling missing grouping key

* Handle invalid offset

* Fix compilation

* Add cardinality check

* Fix cardinality check

* Address comments

* Address comments

* Address comments

* Address comments

* Cleanup GroupByQueryEngineV2.process

* Change to Byte.SIZE

* Add flatMap",2017-08-03T17:04:54Z
163b0edd79554e30ed834e67107f873b6bfe3d20,"Router misc fixes (#4517)

* make BrokerQueryResource instantiation singleton

* fix druid.router.http.* handling so that they are actually used and introduce numRequestsQueued for jetty http client at router

* address comments

* address review comment",2017-08-03T07:37:57Z
6d60ef67ce5df1b4a76cc47db130be3b6bb41a79,"misc http segment discovery fixes (#4618)

* Use ConcurrentHashMap to store segment servers or else getInventory() would need to clone the values list

* introduce unstableTimeout for segment servers

* address review comment

* add HttpServerInventoryViewConfigTest",2017-08-02T21:11:26Z
729e44d767929bcbeb3e9674c68799c42a294a58,Update server-metrics to 0.5.2 (#4624),2017-08-01T21:45:03Z
cbb9f7d21485549184a2c2d5434ad43fa1ebfe8b,Log used flag (#4614),2017-07-31T21:58:36Z
89215382510a6eceac898d14022b76a065fd7cdf,"Make AWSCredentialsConfig use PasswordProvider for the string matter (#4613)

* Make AWSCredentialsConfig use PasswordProvider for the string matter
* Fixes https://github.com/druid-io/druid/issues/3911

* Add unit tests",2017-07-29T22:48:49Z
f4ba7a68ab47af605b9888e03d43148d60b9b587,fix missing column in caching documentation (#4612),2017-07-28T20:53:04Z
da43f68e9517ed2cfd51eab79b36f6ec05798639,"NPE thrown when empty/null is passes to TimeDimExtractionFn (#4601)

* NPE thrown when empty/null is passes to TimeDimExtractionFn

* Add @Nullable where ever applicable

* Add @Nullable to SearchQuerySpec.apply()

* Remove unused",2017-07-27T02:02:08Z
5929066dfba96c918f14e26b629534f53de0f9cd,Add NamespaceLookupExtractorFactory.toString() (#4606),2017-07-26T19:02:07Z
2005c5532fe877aa1789c6263be20c49b55c4190,"ArchiveTask list-unused query optimization (#4600)

* ArchiveTask list unused query optimization

* ArchiveTask list unused query optimization",2017-07-26T17:51:20Z
684cfbf889d3696aeeb57957f7a74d504d82824d,"Upgrade to server-metrics 0.5.0 (#4480)

* Upgrade to server-metrics 0.4.3

* Upgrade to 0.5.0

* Add CpuAcctDeltaMonitor description to docs",2017-07-26T15:56:00Z
c372d2ecc1ef40e1ed471de550f5565e1358bd14,"Default implementation for getDouble(). (#4595)

* Default implementation for getDouble().

* use getFloat for default implementation.

* addressed comment.

* new line.",2017-07-26T00:06:27Z
d4ef0f6d94f6e764bc86db4dee67931f270f97e0,"Improved SQL support for floats and doubles. (#4598)

* Improved SQL support for floats and doubles.

- Use Druid FLOAT for SQL FLOAT, and Druid DOUBLE for SQL DOUBLE, REAL,
  and DECIMAL.
- Use float* aggregators when appropriate.
- Add tests involving both float and double columns.
- Adjust documentation accordingly.

* CR comments.

* Fix braces.",2017-07-25T20:54:44Z
ae6780f62aa6254c745363848ccd0a67e0c3be62,"rolling upgrade order change to bring coordinator and overlord together (#4281)

* rolling upgrade order change to bring coordinator and overlord together

* mentioned merged Coordinator-Overlord in upgrade order doc

* revert autoscaling doc change

* auto scaling doc fix",2017-07-25T17:54:12Z
525b5f2723ea934f42753cbc382210d9f2118bed,[Bugfix] return null for the null list in OrcStruct (#4590) (#4590),2017-07-25T17:31:31Z
3d6f409fc893fcd2b946710cb99eff4395e5153c,"Fix groupBy on double dimensions. (#4596)

* Fix groupBy on double dimensions.

* Fix tests.

* Fix tests.

* Fix Scan tests.",2017-07-25T06:18:06Z
5048ab3e963ca3a6a4f1bf8fdc4bcd31ec7ef1a1,"Add metrics to the native queries underpinning SQL. (#4561)

* Add metrics to the native queries underpinning SQL.

This is done by factoring out the metrics and request log emitting
code from QueryResource into a new QueryLifecycle class. That class
is used by both QueryResource and the SQL DruidSchema and QueryMaker.

Also fixes a couple of bugs in QueryResource:

- RequestLogLine start time was set to `TimeUnit.NANOSECONDS.toMillis(startNs)`,
  which is incorrect since absolute nanos cannot be converted to millis.
- DruidMetrics.makeRequestMetrics was called with null `query` on
  unparseable queries, which led to spurious ""Unable to log query""
  errors.

Partial fix for #4047.

* Code style

* Remove unused imports.

* Fix tests.

* Remove unused import.",2017-07-25T04:26:27Z
8a4185897eeeb63d39d5784ffe0b57c97c03f860,Add filter tests for both floats and doubles. (#4597),2017-07-25T00:02:02Z
a9c875d7469aee8448edc27087563cac427d2c83,"IndexTask: Use shared groupId when ""appendToExisting"" is on. (#4582)

This allows the tasks to run concurrently. Additionally, rework
the partition-determining code in a couple ways:

- Use a task-id based sequenceName so concurrently running append
  tasks do not clobber each others' segments.
- Make the list of shardSpecs empty when rollup is non-guaranteed, and
  let allocators handle the creation of incremental shardSpecs.",2017-07-24T16:57:23Z
4bd0f174ba4e7c5da04342fae48f79143f3f5307,Changes for deduplication (#4581),2017-07-24T16:12:23Z
7408a7c4edc76488a39b567034f20441969c8fd9,"Refactor CachingClusteredClient.run() (#4489)

* Refactor CachingClusteredClient

* Comments

* Refactoring

* Readability fixes",2017-07-23T14:10:36Z
b154ff0d4ac0934a35d146b97b4b6f121e565631,"[Bugfix] null string in map/reduce jvm opts (#4588)

fix a bug when the cluster don't configure mapreduce.map.java.opts or mapreduce.map.java.opts",2017-07-22T13:22:30Z
c0beb78ffdb5807ceea8a340838eab01d6a18d1d,Enforce brace formatting with Checkstyle (#4564),2017-07-21T15:26:59Z
38b03f56b4e7f7bf12b2f126af352bee6469445c,"IndexTask: Raise default maxTotalRows. (#4579)

150k is very low, given that it should only be limited by disk space
rather than JVM heap.",2017-07-20T20:55:07Z
2be7068f6e20b086731cdc7df44998d838f63493,"Fixes and improvements to SQL metadata caching. (#4551)

* Fixes and improvements to SQL metadata caching.

Also adds support for MultipleSpecificSegmentSpec to CachingClusteredClient.

SQL changes:
- Cache metadata on a per-segment level, in addition to per-dataSource, so
  we don't need to re-query all segments whenever a single new one appears.
  This should lower the load placed on the cluster by metadata queries.
- Fix race condition in DruidSchema that can cause us to miss metadata. It was
  possible to notice new segments, then issue a query, and have that query
  not actually hit those segments, and not notice that it didn't hit those segments.
  Then, the metadata from those segments would be ignored.
- Fix assumption in DruidSchema that all segments are immutable. Now, mutable
  segments are periodically re-queried.
- Fix inappropriate re-use of SchemaPlus. Now we create one for each planning
  cycle, rather than sharing one. It caches table objects, which we want to
  avoid, since it can cause stale metadata. We do the caching in DruidSchema
  so we don't need the SchemaPlus caching.

Server changes:
- Add a TimelineCallback to TimelineServerView, for callers that want to get updates
  when the timeline has been modified.
- Change CachingClusteredClient from a QueryRunner to a QuerySegmentWalker. This
  allows it to accept queries that are segment-descriptor-based rather than
  intervals-based. In particular it will now support MultipleSpecificSegmentSpec.

* Fix DruidSchema, and unused imports.

* Remove unused import.

* Fix SqlBenchmark.",2017-07-20T17:14:15Z
71e7a4c054a055b4b38c323f82eef85226906500,"Adding double colums supports (#4491)

* add double columns support

* Fix numbers and expected results in UTs

* adding float aggregators

* fix IT expected test results

* fix comments

* more fixes

* fix comp

* fix test

* refactor double and float aggregator factories

* fix

* fix UTs

* fix comments

* clean unused code

* fix more comments

* undo unnecessary changes

* fix null issue

* refactor TopNColumnSelectorStrategyFactory

* fix docs

* refactor NumericTopNColumnSelectorStrategy

* fix return

* fix comments

* handle the null case in DimesionIndexer

* more null fixing

* cosmetic changes",2017-07-20T07:14:14Z
b4230ebb3c2d5019fdf9468607c1e8b1e7205910,"PolygonBound.contains() fix (#4553)

* PolygonBound.contains() fix

* style fix

* code refactor and dependency-reduced-pom.xml deletion

* refactor bug fix

* requested changes

* method extraction

* formatting issues fix",2017-07-20T07:12:46Z
0b85c60869be48e2783766130c50410279a3d2cd,"Fix issue-4539 (#4546)

* Protect double URI encoding

* removeExtraLine",2017-07-19T16:38:29Z
b64dbbb5b5ebd46df2b55d073208477f610207d9,"Use Ubuntu Precise for Travis unit test jobs (#4572)

* Use Ubuntu Precise for Travis jobs

* Use trusty for Travis integration tests",2017-07-19T06:19:33Z
441ee56ba9f81acccf5c86cf8c4f15bb49882e03,"DataSegmentPusher: Add allowed hadoop property prefixes. (#4562)

* DataSegmentPusher: Add allowed hadoop property prefixes.

* Fix dots.",2017-07-18T17:16:12Z
ae86323dbd6112e75dd659320469a94af142a54b,Remove unnecessary qualifier (#4565),2017-07-18T08:40:54Z
a862cc716f2e048fae4cc1c191746b67f2053114,"re-implement updation of CoordinatorDynamicConfig to not call manager.watch(..) in its constructor (#4557)

* re-implement updation of CoordinatorDynamicConfig to not call manager.watch(..) in its constructor

* address review comments",2017-07-17T21:33:59Z
60cdf946778d0624db6ddce0366e5fdb131437b2,"Add PMD and prohibit unnecessary fully qualified class names in code (#4350)

* Add PMD and prohibit unnecessary fully qualified class names in code

* Extra fixes

* Remove extra unnecessary fully-qualified names

* Remove qualifiers

* Remove qualifier",2017-07-17T13:22:29Z
b7203510b86d1ad512d02e49a2a82dd15e5d0db0,"Fix RemoteTaskRunner's auto-scaling (#3768)

* Rename ResourceManagementStrategy to ProvisioningStrategy, similarly for related classes. Make ProvisioningService non-global, created per RemoteTaskRunner instead. Add OverlordBlinkLeadershipTest.

* Fix RemoteTaskRunnerFactoryTest.testExecNotSharedBetweenRunners()

* Small fix

* Make SimpleProvisioner and PendingProvisioner more similar in details

* Fix executor name

* Style fixes

* Use LifecycleLock in RemoteTaskRunner",2017-07-14T00:11:39Z
c5c17bb803fa575cfecf7660c5b9524cee75631f,Fix issue 4536 suggested by @@erikdubbelboer (#4541),2017-07-13T21:14:31Z
960cb07ea697587fd0e1c7fe14dacb8a0e8c41ce,"Fix some unnecessary use of boxed types and incorrect format strings spotted by lgtm. (#4474)

* Remove some unnecessary use of boxed types.

* Fix some incorrect format strings.

* Enable IDEA's MalformedFormatString inspection.

* Add a Checkstyle check for finding uses of incorrect logging packages.

* Fix some incorrect usages of the metamx logger.

* Bypass incorrect logger Checkstyle check where using the correct logger is not simple.

* Fix some more places where the wrong number of arguments are provided to format strings.

* Suppress `MalformedFormatString` inspection on legacy logging test.

* Use @SuppressWarnings rather than a noinspection suppression comment.

* Fix some more incorrect format strings.

* Suppress some more incorrect format string warnings where the incorrect string is intentional.

* Log the aggregator when closing it fails.

* Remove some unneeded log lines.",2017-07-13T19:15:32Z
3399d1a488896d675e54c1de90a596daea1c045f,Fix decimal type handling in ORC extension. (#4535),2017-07-12T19:16:48Z
b2865b7c7bec9b6f14eb85d23e0e7edad407852a,"Make possible to start Peon without DI loading of any querying-related stuff (#4516)

* Make QueryRunnerFactoryConglomerate injection lazy in TaskToolbox/TaskToolboxFactory

* Extract QueryablePeonModule and add druid.modules.excludeList config

* Typo",2017-07-12T18:18:25Z
53e6b5cb9ba5bae89dc4b812f7dff99326eacd7c,Removal of TopNResultMerger because it is vestigial. (#4520),2017-07-12T10:24:07Z
ad76f7a1ab965159e12c14f697ff46c32c11f6a7,Make Filter.getBitmapResult() abstract (#4481),2017-07-11T19:39:32Z
6d2df2a542ea00e698b87b810762203140a2e8f4,"Fix duplicated locks after sync from storage (#4521)

* Fix duplicated locks after sync from storage

* Remove unnecessary table creation",2017-07-11T17:10:11Z
98b1385bcd5014c5501214cfb5f4554aa7debdd8,Remove published segments immediately (#4530),2017-07-11T17:09:32Z
c5d5263c105b3c1e1bea1bb3cc007ed726d88611,Disable CacheDistributionTest by default (#4527),2017-07-11T16:16:12Z
298310ad78f0e274ba35f50bf820853e22d6ae0e,router endpoint to expose brokers map (#4523),2017-07-11T16:11:07Z
a108d05f769695fd5294f7e03f1dda1bd4f5a1a4,Use GenericIndexed v2 supported read() during deserializeColumn (#4463),2017-07-11T15:18:25Z
5f411f14af285ea31f2745789704a44208efd2e6,"Timeout for LockAcquireAction (#4461)

* Timeout for LockAcquireAction

* Static inner class.

* Rebase changes.

* makeAlert and throw exception incase of overlapping interval.

* Addressed comments.

* remove unused import.

* Addressed comments",2017-07-11T09:59:32Z
a603c4b4237da25c83d0ba9beedd8873feac70e6,enforce compile scope (#4524),2017-07-11T05:39:17Z
cc2026007832790d12e70016dbd1a7ee00333ff0,"Early publishing segments in the middle of data ingestion (#4238)

* Early publishing segments in the middle of data ingestion

* Remove unnecessary logs

* Address comments

* Refactoring the patch according to #4292 and address comments

* Set the total shard number of NumberedShardSpec to 0

* refactoring

* Address comments

* Fix tests

* Address comments

* Fix sync problem of committer and retry push only

* Fix doc

* Fix build failure

* Address comments

* Fix compilation failure

* Fix transient test failure",2017-07-11T05:35:36Z
8ffac8f5e74424014ed34ce2141d93a2bb49508b,fix issue-4513 (#4525),2017-07-10T22:58:04Z
2b7329688a74bba5fb29d0f965618d772440892f,adding notice file to distribution (#4522),2017-07-10T19:59:50Z
8ed25acc15d21d08571b3f8c1741f02aa3f79978,"Fix a bug for CSVParser/DelimitedParser when empty column exists in the header row (#4504)

* Fix a bug when empty column exists in header row

* Address comments",2017-07-07T23:19:25Z
16817e408d691e81ed77b528189cc9587d49a7b1,"SQL + Expressions = Best friends forever. (#4360)

* SQL + Expressions = Best friends forever.

- Use expressions as a projection layer for anything that can't be
  expressed using traditional Druid extractionFns. Sometimes they're
  embedded directly (like ""expression"" filters, builtin aggregators,
  or ""expression"" post-aggregators). Sometimes they're referenced
  through virtual columns (like dimensionSpecs, which can't innately
  reference functions of more than one column without the virtual
  column layer).
- Add many new functions and operators, taking advantage of the
  expression capability (see the querying/sql.md doc).
- Improve consistency of constant reduction and of casting by
  using Druid expressions for this instead of Calcite's RexExecutor.

* Fix casting bug, and other code review comments.

* Fix docs.",2017-07-07T15:48:26Z
d168a4271e8ca7b9d3a15aafc9dbeeb66dc3286e,"Use Double.NEGATIVE_INFINITY and Double.POSITIVE_INFINITY  (#4496)

* Use Double.NEGATIVE_INFINITY and Double.POSITIVE_INFINITY instead of Double.MIN_VALUE and Double.MAX_VALUE, same for Float

* Replace usages in comments

* Fix RTree

* Remove commented code

* Add tests",2017-07-07T15:10:13Z
2641fecef93fb59401cda55f87fb195c8a1de801,removed artifactory repo from the default repo list (#4515),2017-07-07T01:48:11Z
6e2f78f55277dec2587aeeacc86b85685055558c,TLS support (#4270),2017-07-07T00:40:12Z
a6d648a72831c33cb8a8c2908c1f953026c80576,"Fix a bug in DruidCluster.getAllServers() (#4500)

* Fix a bug in getAllServers

* Change to old style",2017-07-05T15:57:38Z
fc4fe24dd5c3ddf6e854ca6a22e5e4859b80646b,Incorrect use of Long.TYPE and Float.TYPE as return type of ObjectColumnSelector.classOfObject() (#4501),2017-07-05T15:54:06Z
97a79f4478dc3963e10d82bfa94349336bd8d453,"Fix GroupBy type cast when ChainedExecutionQueryRunner merges results (#4488)

* Fix GroupBy type cast error when ChainedExecutionQueryRunner merges multiple runners

* Move conversion step to separate method

* Remove unnecessary comment

* Use compute to update map",2017-07-01T00:33:03Z
d757ef3e9b701163f2b65817c1a618449c65b8af,record remote address in jetty request log (#4492),2017-06-30T17:38:39Z
9ae457f7ad1a4771bc5aacab3005d91d881b365e,"Avoid using the default system Locale and printing to System.out in production code (#4409)

* Avoid usages of Default system Locale and printing to System.out or System.err in production code

* Fix Charset in DruidKerberosUtil

* Remove redundant string format in GenericIndexed

* Rename StringUtils.safeFormat() to unimportantSafeFormat(); add StringUtils.format() which fails as well as String.format()

* Fix testSafeFormat()

* More fixes of redundant StringUtils.format() inside ISE

* Rename unimportantSafeFormat() to nonStrictFormat()",2017-06-29T21:06:19Z
a5651ea4747e05b0982cb2ba3915b95ae44a47ca,Remove primitive value instead of CoordinatorStats from LoadRule.assign method (#4469),2017-06-29T17:48:49Z
ae900a493479bf0be2cef5ce598a6822caa3def1,Update versions to 0.11.0-SNAPSHOT (#4483),2017-06-29T00:05:58Z
617357042559b23422da2e1a72532f8b5af94269,"Add ExtensionsConfig.excludeModules (#4438)

* Add ExtensionsConfig.excludeModules

* Add branch

* Refactor Initialization.getFromExtensions()

* excludeModules -> moduleExcludeList

* Initialization.getFromExtensions() and getLoadedModules() should return Collection, not Set

* Fix doc",2017-06-28T21:01:31Z
2fe55d30c55aaa498a3b87dd3c738a79836e69dd,"Remove LogLevelAdjuster from GuiceRunnable (#4236)

* Redundant since log4j2 allows config on the fly via jmx
* Fix #1805",2017-06-28T18:06:34Z
4c33d0a00ffb454811bdac6923206b2211469f14,"Add some new expression functions and macros. (#4442)

* Add some new expression functions and macros.

See misc/math-expr.md for the list of added functions, except for
""like"", which previously existed but was not documented.

* Add easymock to datasketches tests.

* Add easymock to distinctcount tests.

* Add easymock to virtual-columns tests.

* Code review comments.

* Clean up code a bit.

* Add easymock to scan-query tests.

* Rework ExprMacros that have multiple impls.

* Improve test coverage.",2017-06-28T17:15:58Z
2fa4b10145b877c82f2de82ff23e28838804a0c2,"More fine-grained DI for management node types. Don't allocate processing resources on Router (#4429)

* Remove DruidProcessingModule, QueryableModule and QueryRunnerFactoryModule from DI for coordinator, overlord, middle-manager. Add RouterDruidProcessing not to allocate processing resources on router

* Fix examples

* Fixes

* Revert Peon configs and add comments

* Remove qualifier",2017-06-28T05:58:01Z
82140c2f86a8499aaf80569f2e2c6fa5791078c0,Reduce number of tasks in ITUnionQueryTest (#4476),2017-06-28T05:28:55Z
e04b8be52e297cee8122817bdf5491415e1fb36e,"maxSegmentsInQueue in CoordinatorDinamicConfig (#4445)

* Add maxSegmentsInQueue parameter to CoordinatorDinamicConfig and use it in LoadRule to improve segments loading and replication time

* Rename maxSegmentsInQueue to maxSegmentsInNodeLoadingQueue

* Make CoordinatorDynamicConfig constructor private; add/fix tests; set default maxSegmentsInNodeLoadingQueue to 0 (unbounded)

* Docs added for maxSegmentsInNodeLoadingQueue parameter in CoordinatorDynamicConfig

* More docs for maxSegmentsInNodeLoadingQueue and style fixes",2017-06-28T03:58:36Z
79fd5338e3b2394bf1e582bddfe34683e01c4cce,"Get s3 objects directly from prefixes when listing is failed due to permission (#4444)

* Fall back to getObject when listing is failed due to permission

* Throws an exception when listing is not allowed on directory

* Fix error messages",2017-06-28T01:58:37Z
e3c13c246ad03d211556a3646f3e3121857dd747,"Respect reportParseExceptions option in IndexTask.determineShardSpecs() (#4467)

* Respect reportParseExceptions option in IndexTask.determineShardSpecs()

* Fix typo",2017-06-27T17:28:22Z
7a261c83118d159dadfa6436b7b16cfa4e8ca533,Split travis test (#4468),2017-06-27T01:51:48Z
05d58689ad4617b4b8008299be0876ee60f30df7,"Remove the ability to create segments in v8 format (#4420)

* Remove ability to create segments in v8 format

* Fix IndexGeneratorJobTest

* Fix parameterized test name in IndexMergerTest

* Remove extra legacy merging stuff

* Remove legacy serializer builders

* Remove ConciseBitmapIndexMergerTest and RoaringBitmapIndexMergerTest",2017-06-26T20:21:39Z
5fec61928446c27dafff24827d20baa19baf4817,"Make KafkaLookupExtractorFactoryTest fast (#4466)

* Make KafkaLookupExtractorFactoryTest fast

* Use list

* Use Bytes",2017-06-26T15:15:28Z
0f99467cfbaaf0f0a8605b37aa143c9922a912c3,rollback to previous httpclient/httpcore versions (#4457),2017-06-24T02:43:49Z
b37c9b5fe049f27aa73dc6ff70926bb6f08a1fa1,"Fix a bug of CSV/TSV parsers when extracting columns from header (#4443)

* Reset fieldNames whenever a new file begins

* Fix test failure

* Fix test failure",2017-06-23T21:29:26Z
3e7f7720a19096b641425f8204d19cf6a767194c,"update aggregations.md re: rollup (#4455)

noted that rollup could be on or off",2017-06-23T21:28:59Z
61c38b66ad5bbb1a0230793f97741001d1965623,"exclude aws-java-sdk from hadoop-aws dep in hdfs-storage module (#4437)

* exclude aws-java-sdk from hdfs-storage module

* address review comments",2017-06-22T20:56:35Z
ff501e8f139a8b6c63d473ce278c7b8a740ba028,"Add Date support to the parquet reader (#4423)

* Add Date support to the parquet reader

Add support for the Date logical type. Currently this is not supported. Since the parquet
date is number of days since epoch gets interpreted as seconds since epoch, it will fails
on indexing the data because it will not map to the appriopriate bucket.

* Cleaned up code and tests

Got rid of unused json files in the examples, cleaned up the tests by
using try-with-resources. Now get the filenames from the json file
instead of hard coding them and integrated general improvements from
the feedback provided by leventov.

* Got rid of the caching

Remove the caching of the logical type of the time dimension column
and cleaned up the code a bit.",2017-06-22T20:56:08Z
3e60c9125de21d820216a1d965a6f147f582cb51,Increase timeout of GroupByQueryMergeBufferTest and AppenderatorDriverTest (#4441),2017-06-22T13:09:52Z
3a5c4804055f10aadcae34277cb1345c7d51874d,Split IndexMergerTest and ImmutableConciseSetTest (#4427),2017-06-22T03:55:51Z
34d2f9ebfe27b1fa8546c18f725486682b405453,"Queries: Restore old prepareAggregations method. (#4432)

For backwards compatibility, post-#4394.",2017-06-21T12:36:32Z
679cf277c07f9df84ea6b2fec11afc44b798341f,"Add ExpressionFilter. (#4405)

* Add ExpressionFilter.

The expression filter expects a single argument, ""expression"", and matches
rows where that expression is true.

* Code review comments.

* CR comment.

* Fix logic.

* Fix test.

* Remove unused import.",2017-06-20T19:42:26Z
b333deae9db90a193d274bf235dca8d6dddff5c2,"Add script for getting milestone contributors (#4396)

* Add script for getting milestone contributors

* Use resp.text instead of resp.content

* Add usage notes",2017-06-17T20:25:19Z
22aad08a59945a65f80a06f0220d7adb786893d3,"ExpressionPostAggregator: Automatically finalize inputs. (#4406)

* ExpressionPostAggregator: Automatically finalize inputs.

Raw HyperLogLogCollectors and such aren't very useful. When writing
expressions like `x / y` users will expect `x` and `y` to be finalized.

* Fix un-merge.

* Code review comments.

* Remove unnecessary ImmutableMap.copyOf.",2017-06-17T20:22:47Z
b87f037b774ae9f4f6cfd00b131fcd8df8282f07,"Update git workflow (#4418)

* Update git workflow

Make Git workflow more elaborate. Fix enumeration. Emphasize what to do on conflicts with master.

* Fix",2017-06-17T02:27:46Z
3b70995bb3969d53b2ae8f81d2a29d9bdd276534,Configurable row limit for JDBC frames (#4417),2017-06-17T00:07:40Z
cc815eec815e92c01db701146334d41fb95a7f23,"Create/close yielder in same thread for JDBC queries (#4415)

* Create/close yielder in same thread for JDBC queries

* PR comments

* More PR comments

* Add connectionId to DruidStatement executor",2017-06-16T23:50:33Z
f68a0693f3ac3ed926c0abc18c15d02195cddc6e,"Allow use of non-threadsafe ObjectCachingColumnSelectorFactory (#4397)

* Adding a flag to indicate when ObjectCachingColumnSelectorFactory need not be threadsafe.

* - Use of computeIfAbsent over putIfAbsent
- Replace Maps.newXXXMap() with normal instantiation
- Documentations on when is thread-safe required.
- Use Builders for On/OffheapIncrementalIndex

* - Optimization on computeIfAbsent
- Constant EMPTY DimensionsSpec
- Improvement on IncrementalIndexSchema.Builder
  - Remove setting of default values
  - Use var args for metrics
- Correction on On/OffheapIncrementalIndex Builders
- Combine On/OffheapIncrementalIndex Builders

* - Removing unused imports.

* - Helper method for testing with IncrementalIndex.Builder

* - Correction on javadoc.

* Style fix",2017-06-16T21:04:19Z
e78d8584a1298e79c17a45e01f79062b55c9f703,"JettyQosTest, DruidAvaticaHandlerTest: Extend timeout. (#4416)

Fixes #4408, probably.",2017-06-16T01:28:50Z
054cf8a18390f4a082629456d78f8657fc0515b3,"Limit random access in compressed column tests. (#4414)

* Limit random access in compressed column tests.

Random access leads to lots of block decompressions for reading single elements,
which is time prohibitive for the large column tests. For those tests, limit the
number of randomly accessed elements to 1000.

* Random -> ThreadLocalRandom",2017-06-15T21:48:06Z
bf537f9226d863925b31c983e28e33ee69243dad,Increase publish timeout (#4407),2017-06-15T19:55:30Z
17ef785618cdd5265aea64cbe26f41a8beff0397,"Speed up sketch tests by merging fewer indexes. (#4413)

The tests go from 5 minutes to about 10 seconds. 1000 maxRowCount is still
low enough to get a few merges, so we're still exercising that functionality.",2017-06-15T19:47:55Z
7fe295009e1e7f8cda0f86b3b959a0353f284d48,Faster ByteBufferMinMaxOffsetHeapTest (#4404),2017-06-15T18:14:29Z
6edee7f4349b2b657f8406477fe843cf62e1d11d,"Expressions work better with strings. (#4394)

* Expressions work better with strings.

- ExpressionObjectSelector able to read from string columns, and able to
  return strings.
- ExpressionVirtualColumn able to offer string (and long for that matter)
  as its native type.
- ExpressionPostAggregator able to return strings.
- groupBy, topN: Allow post-aggregators to accept dimensions as inputs,
  making ExpressionPostAggregator more useful.
- topN: Use DimExtractionTopNAlgorithm for STRING columns that do not
  have dictionaries, allowing it to work with STRING-type expression
  virtual columns.
- Adjusts null handling to better match the rest of Druid: null and
  empty string treated the same; nulls implicitly treated as zeroes in
  numeric context.

* Code review comments.

* More code review.

* Fix test.

* Adjust annotations.",2017-06-14T21:50:18Z
976492c18644614fa7d4cf0cd1ad508929579e6c,"Make PolyBind to fail if property value is not found (fixes #4369) (#4374)

* Make PolyBind to fail if property value is not found

* Fix test

* Add onHeap option in NamespaceExtractionModule

* Add PolyBind.createChoiceWithDefaultNoScope()

* Fix NPE

* Fix

* Configure MetadataStorageProvider option for MySQL, PostgreSQL and SQLServer

* Deprecate PolyBind.createChoiceWithDefault form with unused defaultKey

* Fix NPE",2017-06-13T16:45:43Z
073695d311492ce5aa0a8f2d9a2ec4a0744a93f5,"Simple improvement for realtime manager (#4377)

* Simple improvement for realtime manager

* Address comments

* tmp

* Address comments and add more tests

* Add catch for InterruptedException

* Address comments",2017-06-12T22:25:34Z
113b8007b70d117b632f36ca01bc6518a9bf40ee,Increase timeout for QueryGranularityTest.testDeadLock() (#4395),2017-06-12T20:28:21Z
c121845102dde70545be65b4b01a9f2a27a2a76e,"Avoid using Guava in DataSegmentPushers because of incompatibilities (#4391)

* Avoid using Guava in DataSegmentPushers because of Hadoop incompatibilities

* Clarify comments",2017-06-12T16:58:34Z
5285eb961b1bf60a242a3ad9b1e1fa3b5859f24e,"Update dependencies (#4313)

* Update dependencies

* Downgrade curator

* Rollback aws-java-sdk dependency to 1.10.77

* Revert exclusions in integration-tests

* Depend only on aws-java-sdk-ec2 instead of umbrella aws-java-sdk (fixes #4382)",2017-06-09T21:32:07Z
fc80df339eb7f2e5f036882f1a9e1887719bc5b4,Fix incorrect name (#4386),2017-06-09T17:32:17Z
bbc307b30eb552def4ef14639e2f7650f4b805cc,"Add legacy constructor to CsvParseSpec and DelimitedParseSpec for backward compatibility (#4388)

* Add legacy constructor to CsvParseSpec

* Remove JsonProperty annotations

* Add legacy constructor to DelimitedParseSpec",2017-06-09T02:33:02Z
2cd91b64d053ef650f53144b367ee4e89729541a,"Uncompress streams without having to download to tmp first (#4364)

* Uncompress streams without having to download to tmp first

* Remove unused file",2017-06-09T01:08:38Z
f22e646168ffd467f55c3668ad33d6a2bc96fb2f,"Use MetadataSegmentManager info during segment move. (#4260)

* Use MetadataSegmentManager info to move segments.

* Use original segment to drop.

* Formatting.

* Addressed comments.",2017-06-08T19:12:21Z
1f2afccdf81312c269fa0f4828d1d0788f5dcab9,"Expressions: Add ExprMacros. (#4365)

* Expressions: Add ExprMacros, which have the same syntax as functions, but
can convert themselves to any kind of Expr at parse-time.

ExprMacroTable is an extension point for adding new ExprMacros. Anything
that might need to parse expressions needs an ExprMacroTable, which can
be injected through Guice.

* Address code review comments.",2017-06-08T13:32:10Z
9ae04b7375606132687b0ac969c356c3d155744d,Remove queryMetricsFactory from GroupByQueryConfig (#4383),2017-06-08T02:35:26Z
4ef3a770a316068a6748f05a2c80969c3d6ffde1,Fix compilation of ExpressionBenchmark (#4379),2017-06-07T19:18:09Z
6697f3a62b59c0f403da9bd9c784b3f29b0950ee,"[Doc]Update configuration/historical.md: correct default numBootstrapThreads value (#4376)

According to https://github.com/druid-io/druid/blob/4ace65a2af7c92bbd3b2fa56ebbc3cbf05e7730a/server/src/main/java/io/druid/segment/loading/SegmentLoaderConfig.java#L81 if numBootstrapThreads is not set, it default to numLoadingThreads.",2017-06-07T17:24:42Z
63a897c278bb46702345b2f08b0b7b400d0bb925,"Enable most IntelliJ 'Probable bugs' inspections (#4353)

* Enable most IntelliJ 'Probable bugs' inspections

* Fix in RemoteTestNG

* Fix IndexSpec's equals() and hashCode() to include longEncoding

* Fix inspection errors

* Extract global isntance of natural().nullsFirst(); address comments

* Fix

* Use noinspection comments instead of SuppressWarnings on method for IntelliJ-specific inspections

* Prohibit Ordering.natural().nullsFirst() using Checkstyle",2017-06-07T16:54:25Z
b487fa355b386dab033f359f72acc7a0e20d009e,"More methods in QueryMetrics and TopNQueryMetrics (the last part of #3798) (#4284)

* Add more methods to QueryMetrics and TopNQueryMetrics, add BitmapResultFactory

* Add implementor expectations section to BitmapResultFactory javadoc",2017-06-07T16:49:08Z
4ace65a2af7c92bbd3b2fa56ebbc3cbf05e7730a,"fix NPE in IndexGeneratorJob (#4371)

* fix NPE in IndexGeneratorJob

* address review comment

* review comments",2017-06-07T12:54:03Z
2d15215cd0953a3ffbc719752edb309c04a717de,Add TeamCity inspections badge (#4351),2017-06-07T00:53:25Z
67b162a337950cad3808736a56ece987207aac3f,"SQL: More forgiving Avatica server. (#4368)

* SQL: More forgiving Avatica server.

- Automatically close statements that are fully iterated or that have
  errors, to prevent dangling statements from causing clients to hit
  open statement limits.
- Empower client auto-reconnects by throwing NoSuchConnectionException
  when appropriate.
- Try to close empty connections when we hit the open connection limit,
  rather than failing the newly opened connection. Client
  auto-reconnections mean this shouldn't cause problems in practice.
- Improve concurrency of the server by making ""connections"" a
  concurrent map.
- Lower default connection timeout to PT5M from PT30M.

* Fix DruidStatement test.",2017-06-06T17:11:40Z
551a89bd678e506103e309a4b7619cbcebe3993b,serialize DateTime As Long to improve json serde performance (#4038),2017-06-06T17:08:51Z
d22db30db48e4d71dda1eb6450eec847dcf7992b,"VirtualColumns: Block virtual columns with empty names. (#4367)

* VirtualColumns: Block virtual columns with empty names.

* Spelling.",2017-06-06T15:05:47Z
152d4e89abb95b4d26798f68a71f95e1c392e949,Fix typo in the avro.md. (#4370),2017-06-06T14:14:08Z
31d33b333e771d7519dfeea7838936ef34fe0ae8,"Make using implicit system Charset an error (#4326)

* Make using implicit system charset an error

* Use StringUtils.toUtf8() and fromUtf8() instead of String.getBytes() and new String()

* Use English locale in StringUtils.safeFormat()

* Restore comment",2017-06-06T06:57:25Z
ada498cbf39d3999b54e686b1295e583ff68291e,Make the Coordinator Cost Balancer thread naming human friendly (#4354),2017-06-06T05:17:31Z
fd55c894ce000a78bcbb0688a9609bf53e7306b8,"Add benchmark for expressions. (#4366)

* Add benchmark for expressions.

* Code review comments.",2017-06-06T04:29:08Z
13ecf9092338c3cbbb7a721d00e2fb729919bbdf,"Report Kafka lag information in supervisor status report (#4314)

* refactor lag reporting and report lag at status endpoint

* refactor offset reporting logic to fetch offsets periodically vs. at request time

* remove JavaCompatUtils

* code review changes

* code review changes",2017-06-05T20:26:25Z
a2584d214ab83329495f0d0d8d99f59bf9b34b55,"Delagate creation of segmentPath/LoadSpec to DataSegmentPushers and add S3a support (#4116)

* Adding s3a schema and s3a implem to hdfs storage module.

* use 2.7.3

* use segment pusher to make loadspec

* move getStorageDir and makeLoad spec under DataSegmentPusher

* fix uts

* fix comment part1

* move to hadoop 2.8

* inject deep storage properties

* set version to 2.7.3

* fix build issue about static class

* fix comments

* fix default hadoop default coordinate

* fix create filesytem

* downgrade aws sdk

* bump the version",2017-06-04T06:55:09Z
ba816063cbf78feab622694ccd0f848efb6f85d3,Wait until all data sources are ready for querying in ITUnionQueryTest (#4362),2017-06-04T00:02:12Z
ebabe14fbe6bb2142a4ec83b47dc5a3e8ad121ce,"Rename ExtractionNamespaceCacheFactory to CachePopulator (the last part of #3667) (#4303)

* Renamed ExtractionNamespaceCacheFactory to CachePopulator, and related classes

* Rename CachePopulator to CacheGenerator",2017-06-03T01:09:44Z
b90c28e861d8797a4ada930367fb42fbe387568b,"Support limit push down for GroupBy (#3873)

* Support limit push down for GroupBy V2

* Use orderBy spec ordering when applying limit push down

* PR Comments

* Remove unused var

* Checkstyle fixes

* Fix test

* Add comment on non-final variables, fix checkstyle

* Address PR comments

* PR comments

* Remove unnecessary buffer reset

* Fix missing @JsonProperty annotation",2017-06-02T22:39:04Z
6daddf97c50d36239cf787b616617e136743319a,More documentation on expected interval format for coordinator endpoints (#4361),2017-06-02T22:21:44Z
290ed3ab9d9e44bbf1fce1bad122916501d79e01,"Make DateTime timezone aware (#4343)

* Make DateTime timezone aware

* Change unit tests to make DateTime timezone aware for PeriodGranularity",2017-06-02T19:45:52Z
da32e1ae534a99c29ff60c5535f2d4cb0e344a73,Reducing testing time for KafkaIndexTaskTest and KafkaSupervisorTest (#4352),2017-06-02T15:53:07Z
f876246af78e7378efc1bd1aaa4819b1b59e6241,Rename FiniteAppenderatorDriver to AppenderatorDriver (#4356),2017-06-02T15:48:44Z
0efd18247bea04a87f0e12dcb50683a0d56c1aee,"explicitly unmap hydrant files when abandonSegment to recycle mmap memory (#4341)

* fix TestKafkaExtractionCluster fail due to port already used

* explicitly unmap hydrant files when abandonSegment to recyle mmap memory

* address the comments

* apply to AppenderatorImpl",2017-06-01T23:15:30Z
1150bf7a2c57c18f8108f103684c5ae9b115e41c,"Refactoring Appenderator Driver (#4292)

* Refactoring Appenderator

1) Added publishExecutor and handoffExecutor for background publishing and handing segments off
2) Change add() to not move segments out in it

* Address comments

1) Remove publishTimeout for KafkaIndexTask
2) Simplifying registerHandoff()
3) Add increamental handoff test

* Remove unused variable

* Add persist() to Appenderator and more tests for AppenderatorDriver

* Remove unused imports

* Fix strict build

* Address comments",2017-06-01T22:09:11Z
50e72c6aea272ddad5b291a4f463ef6a5501a696,"Fix bugs (core) (#4339)

* Fix bugs

* Add test for GoogleDataSegmentPusher.buildPath()

* Exclude extension changes

* Address comments

* Brace",2017-06-01T21:47:59Z
05185a610f6f259d6a283c3fa5b34bca855580e5,Add Druid inspection profile (#4348),2017-06-01T21:29:00Z
523b5ec03dad3a2bb1802405726dda225de608b9,Run integration tests on travis (#4344),2017-06-01T01:27:34Z
78179ef74d06b4da933665bd835a29ef301a8531,Inject QueryMetrics factories via PolyBind (#4336),2017-05-31T16:07:03Z
2e933e14134a10d96a802fbc5e016fa14750fe19,"fix a bug in select-query.md which the property_form lack of the『granularity』 (#4327)

There result would be {""error""=>""Unknown exception"",
""errorMessage""=>nil, ""errorClass""=>""java.lang.NullPointerException"",
""host""=>nil} when the json lack of 『granularity』.",2017-05-31T00:04:39Z
9625993c9ace6e0e2934d5e38fb0d67937f23ef4,Fix bugs in Google extensions and RocketMQ extension (#4340),2017-05-30T21:25:35Z
3400f601dbe5b28a1fe11bdad9d65766388cc66e,"Protobuf extension (#4039)

* move ProtoBufInputRowParser from processing module to protobuf extensions

* Ported PR #3509

* add DynamicMessage

* fix local test stuff that slipped in

* add license header

* removed redundant type name

* removed commented code

* fix code style

* rename ProtoBuf -> Protobuf

* pom.xml: shade protobuf classes, handle .desc resource file as binary file

* clean up error messages

* pick first message type from descriptor if not specified

* fix protoMessageType null check. add test case

* move protobuf-extension from contrib to core

* document: add new configuration keys, and descriptions

* update document. add examples

* move protobuf-extension from contrib to core (2nd try)

* touch

* include protobuf extensions in the distribution

* fix whitespace

* include protobuf example in the distribution

* example: create new pb obj everytime

* document: use properly quoted json

* fix whitespace

* bump parent version to 0.10.1-SNAPSHOT

* ignore Override check

* touch",2017-05-30T20:11:58Z
7889891bd3597e19dea8766b2ab4d178f912e3d6,"Fix integration tests (#4337)

* Fix integration tests

1) Use the same version of kafka
2) Change ServiceEmitter from LazySingleton to ManageLifecycle

* Revert unnecessary change",2017-05-28T15:48:39Z
dcb07d695888bf58bb2d968b3315eb3a6875957c,"Option to configure default analysis types in SegmentMetadataQuery (#4259)

* Option to configure default analysis types

* Updated Docs and renamed

* Added serde tests and Null handling

* Fixed Documentation

* Updated implementation

* Updated implementation

* Updated implementation

* Added usingDefaultIntervals in Builder

* Updated implementation

* Updated implementation and added failing test

* filterSegments implementation updated

* Updated imlementation

* Padding

* Add missing Override

* Updated implementation

* Fixed a naming bug

* Fixed bug

* Removed comment",2017-05-26T19:12:39Z
515fabce96aa904092c6b0c80bf5f58055f54b92,"Server selector improvement (#4315)

* Do not re-create prioritized servers on each call in server selector and extend TierSelectorStrategy interface with a method to pick multiple elements at once

* Fix compilation",2017-05-26T16:02:09Z
1eaa7887bd4c76f61e4ed09f38beeb72eeeb2ec1,"Fix integer overflow in BufferGrouper. (#4333)

Would have led to out of bounds buffer access with large buffers.
Also added tests using large buffers.",2017-05-26T06:30:20Z
2c55a935f8cdc244a95fa8f41467c1f9eaa1c94b,"Delete a duplicate ""Bucket Extraction Function"" section at the bottom of ""Querying""-""DimensionSpec"" page (#4331)",2017-05-25T21:16:00Z
11b7b1bea6788bcce6a720f3038623d2ea901fe5,"Add support for HttpFirehose (#4297)

* Add support for HttpFirehose

* Fix document

* Add documents",2017-05-25T21:13:04Z
5fc4abcf7122216dcd98b1a4c0da5ebfe9d21371,"fix equalDistribution worker select strategy (#4318)

* fix equalDistribution worker select strategy

* replace anonymous Comparator

* keep previous version sorting comment

* fix code style

* update comment

* move JsonProperty",2017-05-25T04:30:42Z
fe42db98ac5b6638329e9c0c0a45ac37979246da,"URIExtractionNamespace: Avoid problems due to canonicalization of lookup fields. (#4307)

Disables canonicalization for simpleJson, where expect field names to be unique
anyway. Keeps canonicalization enabled for customJson, but avoids sharing the
table with the global ObjectMapper.",2017-05-25T00:41:04Z
b77fab8a30eaaaba4e9f5f87a21a8031e3a20f66,"Replace usages of CountingMap with Object2LongMap (#4320)

* Replaces use of CountingMap with Object2LongMap from fastutil.

* Remove CountingMap classes and minor fixes

* Added additional test cases for DatasourceInputFormat.

* Added additional test cases for CoordinatorStats.

* Not materializing segment list.

* Put in this fix because it is failing the test on its expected behavior.

* Added missing header.",2017-05-25T00:40:33Z
b578adacae978747e15f91acd3b560a40f40a3c5,"Improve concurrency of SegmentManager (#4298)

* Improve concurrency of SegmentManager

* Fix SegmentManager and add more tests

* Add more tests

* Add null check to TimelineEntry

* Remove empty data source and check null in getTimeline()

* Add a comment for returning null in compute()

* Make SegmentManager LazySingleton",2017-05-23T19:41:24Z
f97c49ba0eed975532185aa2f8f8914f38b518f7,"Don't use QueryMetrics from multiple threads in DirectDruidClient (fixes #4308) (#4309)

* Don't use QueryMetrics from multiple threads in DirectDruidClient

* reponseMetrics",2017-05-23T17:07:27Z
2bd4c0930f1d8bd5e4bd73af0f8bf0b62acdb0ed,"Fix ""quarter"" granularity serialization. (#4316)",2017-05-23T17:06:17Z
9283807ad7c02e6ce9a1cd60026bf6c47fc51f8b,"GroupByQuery: Fix type-spanning comparisons. (#4317)

Jackson deserializes integers sometimes as int and sometimes as long,
depending on how big they are. This leads to ClassCastException
when comparing deserialized values as part of groupBy merging on the
broker.",2017-05-23T17:06:04Z
22977780aaad014e927e048c40ba6f7a6e2b40a8,"Doc (#4217)

* Fixed (#4216)

Modify the default value of  `druid.server.http.numThreads`  to `Math.max(10, (Runtime.getRuntime().availableProcessors() * 17) / 16 + 2) + 30`

* Fixed(#4216)

Modify the default value of  `druid.server.http.numThreads` to `max(10, (Number of cores * 17) / 16 + 2) + 30`

* Fixed(#4216)

Modify the default value of  `druid.server.http.numThreads`  to `max(10, (Number of cores * 17) / 16 + 2) + 30`",2017-05-23T08:04:52Z
d49e53e6c28c6cb548de72bb6eba6fa39f117b03,"Timeout and maxScatterGatherBytes handling for queries run by Druid SQL (#4305)

* Timeout and maxScatterGatherBytes handling for queries run by Druid SQL

* Address PR comments

* Fix contexts in CalciteQueryTest

* Fix contexts in QuantileSqlAggregatorTest",2017-05-23T07:57:51Z
22e5f52d00425d3e70a10c2c49db39055864d51e,Workaround for non-thread-safe use of CardinalityAggregator. (#4304),2017-05-23T01:33:03Z
e043bf88ecdc729dceb60be86110c7e4aeb43e7b,"Add a ServerType for peons (#4295)

* Add a ServerType for peons

* Add toString() method, toString() test, unsupported type check

* Use ServerType enum in DruidServer and DruidServerMetadata",2017-05-22T22:24:59Z
8ec3a29af03909b81b576e4b9a289dac2c06a505,"Don't pass QueryMetrics down in concurrent and async QueryRunners (fixes #4279) (#4288)

* Don't pass QueryMetrics down in concurrent and async QueryRunners

* Rename QueryPlus.threadSafe() to withoutThreadUnsafeState(); Update QueryPlus.withQueryMetrics() Javadocs; Fix generics in MetricsEmittingQueryRunner and CpuTimeMetricQueryRunner; Make DefaultQueryMetrics to fail fast on modifications from concurrent threads",2017-05-22T18:42:09Z
000b0ffed7ceded2361917918727f78485489d7e,Increase the max heap size for strict compilation (#4306),2017-05-20T18:42:44Z
adeecc0e72359d332d14cb37c31a127cd5f593c0,"Add /isLeader call to overlord and coordinator. (#4282)

This is useful for putting them behind load balancers or proxies, as it lets
the load balancer know which server is currently active through an http health
check.

Also makes the method naming a little more consistent between coordinator and
overlord code.",2017-05-19T01:46:13Z
7479cbde6865241b3ac8800b188b3d25b2bbf609,Make CacheScheduler a singleton (#4293),2017-05-18T22:46:02Z
cdd521fb232b06f081993fa5d900024eaf510b69,"Update outdated RLE paper and improve some code refactoring (#4286)

* Update outdated RLE paper and improve some code refactoring

* Roll back CONCISE's abbreviation",2017-05-18T19:26:24Z
8ca7f9410e43450fa87899f512ea65af308cf491,SQL: Add test for concurrent JDBC queries. (#4290),2017-05-18T19:25:15Z
5c0a7ad2f86dde767854c798bc1a68d6d08a6f5b,"Make realtimes available for loading segments (#4148)

* Add ServerType

* Add realtimes to DruidCluster

* fix test fails

* Add SegmentManager

* Fix equals and hashCode of ServerHolder

* Address comments and add more tests

* Address comments",2017-05-18T15:03:39Z
733dfc9b300206e9961c2a0346f388cf200dca94,"Add PrefetchableTextFilesFirehoseFactory for cloud storage types (#4193)

* Add PrefetcheableTextFilesFirehoseFactory

* fix comment

* exception handling

* Fix wrong json property

* Remove ReplayableFirehoseFactory and fix misspelling

* Defer object initialization

* Add a temporaryDirectory parameter to FirehoseFactory.connect()

* fix when cache and fetch are disabled

* Address comments

* Add more test

* Increase timeout for test

* Add wrapObjectStream

* Move methods to Firehose from PrefetchableFirehoseFactory

* Cleanup comment

* add directory listing to s3 firehose

* Rename a variable

* Addressing comments

* Update document

* Support disabling prefetch

* Fix race condition

* Add fetchLock

* Remove ReplayableFirehoseFactoryTest

* Fix compilation error

* Fix test failure

* Address comments

* Add default implementation for new method",2017-05-18T06:37:18Z
d45dad2b440179256a134e3c521d8f9efc7597a6,"Remove boxing/unboxing in indexer (#4269)

* Remove boxing/unboxing in indexer

* Fix rowIndex visibility

* Cleanup",2017-05-18T00:13:53Z
daa8ef8658ed3a33bde7d4b88946d2dcd669c625,"Optional long-polling based segment announcement via HTTP instead of Zookeeper (#3902)

* Optional long-polling based segment announcement via HTTP instead of Zookeeper

* address review comments

* make endpoint /druid-internal/v1 instead of /druid/internal so that jetty qos filters can be configured easily when needed

* update segment callback initialization to be called only after first segment list fetch has been succeeded from all servers

* address review comments

* remove size check not required anymore as only segment servers announce themselves and not all peon processes

* annouce segment server on historical only after cached segments are loaded

* fix checkstyle errors",2017-05-17T21:31:58Z
0e056863e4b10421a51c9276f21ad6fdc4af9ff5,fix timeout check bug in DirectDruidClient (#4287),2017-05-17T20:47:32Z
d9f423f55deb81e4f5ae2bf4334de72dfec8dd6f,"Make QueryMetrics factories configurable (#4268)

* Ensure QueryMetrics factories accept Json ObjectMapper; Make QueryMetrics factories configurable

* Update QueryMetrics Javadocs

* Add javadocs to QueryMetrics factories

* Move queryMetricsFactory defaults to getter methods of config classes",2017-05-17T15:41:59Z
ddc2e689989900d61028d50645fd1a443cd1ed31,"Remove cache keys from HavingSpecs. (#4280)

* Remove cache keys from HavingSpecs.

They weren't used, since they aren't part of the groupBy cache key.
Also, it's good that they weren't used, since many of them had
value truncation bugs.

* Fix imports.

* Fix test.",2017-05-17T05:13:02Z
22f20f220736e17110e9559b8bece96ba78b8dff,"IngestSegmentFirehoseTest: Add more tests for reindexing. (#4285)

* IngestSegmentFirehoseTest: Add more tests for reindexing.

* Nix unused imports.",2017-05-17T05:12:26Z
51872fd310853665ef4816179471ec86f106504f,"Log max memory on startup too, in case Xmx and Xms are different. (#4283)",2017-05-17T01:06:34Z
d400f23791921c99f6e3895d2d9f74f3820c1573,"Monomorphic processing of TopN queries with simple double aggregators over historical segments (part of #3798) (#4079)

* Monomorphic processing of topN queries with simple double aggregators and historical segments

* Add CalledFromHotLoop annocations to specialized methods in SimpleDoubleBufferAggregator

* Fix a bug in Historical1SimpleDoubleAggPooledTopNScannerPrototype

* Fix a bug in SpecializationService

* In SpecializationService, emit maxSpecializations warning only once

* Make GenericIndexed.theBuffer final

* Address comments

* Newline

* Reapply 439c906 (Make GenericIndexed.theBuffer final)

* Remove extra PooledTopNAlgorithm.capabilities field

* Improve CachingIndexed.inspectRuntimeShape()

* Fix CompressedVSizeIntsIndexedSupplier.inspectRuntimeShape()

* Don't override inspectRuntimeShape() in subclasses of CompressedVSizeIndexedInts

* Annotate methods in specializations of DimensionSelector and FloatColumnSelector with @CalledFromHotLoop

* Make ValueMatcher to implement HotLoopCallee

* Doc fix

* Fix inspectRuntimeShape() impl in ExpressionSelectors

* INFO logging of specialization events

* Remove modificator

* Fix OrFilter

* Fix AndFilter

* Refactor PooledTopNAlgorithm.scanAndAggregate()

* Small refactoring

* Add 'nothing to inspect' messages in empty HotLoopCallee.inspectRuntimeShape() implementations

* Don't care about runtime shape in tests

* Fix accessor bugs in Historical1SimpleDoubleAggPooledTopNScannerPrototype and HistoricalSingleValueDimSelector1SimpleDoubleAggPooledTopNScannerPrototype, cover them with tests

* Doc wording

* Address comments

* Remove MagicAccessorBridge and ensure Offset subclasses are public

* Attach error message to element",2017-05-16T23:19:55Z
b7a52286e8879b4724af161cd60b9f2548087b85,"Make @Override annotation obligatory (#4274)

* Make MissingOverride an error

* Make travis stript to fail fast

* Add missing Override annotations

* Comment",2017-05-16T18:30:30Z
8333043b7b2372178aa359b66c3fc0c72fb75125,add skipOffsetGaps flag (#4256),2017-05-16T18:19:28Z
136b2fae72ad8f74f4d5b1e27cf553ee439e62bc,"improve query timeout handling and limit max scatter-gather bytes (#4229)

* improve query timeout handling and limit max scatter-gather bytes

* address review comments",2017-05-16T17:47:32Z
e823085866484b65161c6d076dab7e0243e84415,Improve `collection` related things that reusing a immutable object instead of creating a new object (#4135),2017-05-16T16:38:51Z
e4add598f06d39130351815715b3e8108219e193,"Add INTELLIJ_SETUP.md (#4261)

* Add INTELLIJ_SETUP.md

* Fix `.idea/runConfigurations`

* Update INTELLIJ_SETUP.md

* Update INTELLIJ_SETUP.md

* Address Comments",2017-05-16T16:26:16Z
8010d7f28d8ed015118b9bbbf2f819ff41e600aa,fix typo: seraching -> searching (#4273),2017-05-16T16:25:16Z
50a4ec2b0b044f5dde85b293ec1a4622b25ae172,"Add support for headers and skipping thereof for CSV and TSV (#4254)

* initial commit

* small fixes

* fix bug

* fix bug

* address code review

* more cr

* more cr

* more cr

* fix

* Skip head rows for CSV and TSV

* Move checking skipHeadRows to FileIteratingFirehose

* Remove checking null iterators

* Remove unused imports

* Address comments

* Fix compilation error

* Address comments

* Add more tests

* Add a comment to ReplayableFirehose

* Addressing comments

* Add docs and fix typos",2017-05-16T05:57:31Z
5ca67644e7ee5dc1398e86c8f60e5e94cba3ad12,"Remove slf4j as dependencies (#4233)

From the kafka-schema-registry-client in the avro extension slf4j
will be packaged into the distribution. We don't want this as it
will conflict and throw a slf4j multiple bindings warning.
This will cause slf4j to fall back to no-operation (NOP) binding.",2017-05-12T06:59:14Z
5e6539fec6ffeaa6afcc4d2d0824c78028756bc9,"Average Server Percent Used: NaN% Error when server startup is in progress (fixes #4214) (#4240)

* Fix lz4 library incompatibility in kafka-indexing-service extension #3266

* Bumped Kafka version to 0.10.2.0 for : Fix lz4 library incompatibility in kafka-indexing-service extension #3266

* Replaced Lists.newArrayList() with Collections.singletonList() For Fix lz4 library incompatibility in kafka-indexing-service extension #4115

* Fixed: Average Server Percent Used: NaN% Error when server startup is in progress #4214",2017-05-12T06:56:17Z
1ebfa22955c318250ec0bcfd4b849110043f6a24,"Update Error prone configuration; Fix bugs (#4252)

* Make Errorprone the default compiler

* Address comments

* Make Error Prone's ClassCanBeStatic rule a error

* Preconditions allow only %s pattern

* Fix DruidCoordinatorBalancerTester

* Try to give the compiler more memory

* Remove distribution module activation on jdk 1.8 because only jdk 1.8 is used now

* Don't show compiler warnings

* Try different travis script

* Fix travis.yml

* Make Error Prone optional again

* For error-prone compiler

* Increase compiler's maxmem

* Don't run Error Prone for benchmarks because of OOM

* Skip install step in Travis

* Remove MetricHolder.writeToChannel()

* In travis.yml, check compilation before tests, because it may fail faster",2017-05-12T06:55:17Z
e09e892477841c498f9647f6b1e0be86da69c12c,"Refactor QueryRunner to accept QueryPlus: Query + QueryMetrics (part of #3798) (#4184)

* Add QueryPlus. Add QueryRunner.run(QueryPlus, Map) method with default implementation, to replace QueryRunner.run(Query, Map).

* Fix GroupByMergingQueryRunnerV2

* Fix QueryResourceTest

* Expand the comment to Query.run(walker, context)

* Remove legacy version of BySegmentSkippingQueryRunner.doRun()

* Add LegacyApiQueryRunnerTest and be more specific about legacy API removal plans in Druid 0.11 in Javadocs",2017-05-10T19:25:00Z
11538e2ecec54ab363e2b4385c280c81299c120a,kafka generated shards were wrongly being marked as overshadowed if they extended a NumberedShardSpec with a non-zero number of total shards (#4257),2017-05-09T03:19:24Z
1fd177039d066e7af3f6afb190ebad52a96308f1,fix auto reset - pause task instead of putting thread to sleep (#4244),2017-05-08T22:08:25Z
eb8e1b0a979bccc10f78817b5374af125944b583,"Prevent interrupted exception from polluting log during supervisor shutdown (#4253)

* Prevent interrupted exception from polluting log during supervisor shutdown

* do nothing in case of InterruptedException",2017-05-08T22:05:25Z
e02f783e82c867cb5cad691f8232b2562ad1635d,do not use --clean option when using bundle-contrib-exts profile so that core extensions are not wiped out (#4223),2017-05-08T19:26:16Z
462f6482df0008262bf9f2eba226aaf2757bd026,"optionally add extensions to explicitly specified hadoopContainerClassPath (#4230)

* optionally add extensions to explicitly specified hadoopContainerClassPath

* note extensions always pushed in hadoop container when druid.extensions.hadoopContainerDruidClasspath is not provided explicitly",2017-05-08T19:24:14Z
bba31e0c8b6795074ca25cd382af02185e398ef6,close aggregators in indexing-hadoop mappers (#4251),2017-05-05T15:29:13Z
e9872f06957af2915f330e2000064735dad43acb,do not flush on closed stream (#4250),2017-05-05T00:19:20Z
417714d228972c6c397265d9d822af0e9b895a0c,"additional lookup status discovery http endpoints at coordinator (#4228)

* additional lookup status discovery http endpoints at coordinator

* more changes

* jsonize the error msgs as well

* fix tests",2017-05-04T18:15:30Z
8277284d67cc539abd17adbe3eb9bbd30692ad8d,Add Checkstyle rule to force comments to classes and methods to be Javadoc comments (#4239),2017-05-04T18:14:41Z
f0fd8ba191b377a4c4beece902d98e7e17987802,Add supervisors to overlord console. (#4248),2017-05-04T18:13:12Z
d0f89e969a24a86a0617e6cb70d1a9b7a9d53fe0,"Ignore misnamed segment cache info files. (#4245)

* Ignore misnamed segment cache info files.

Fixes a bug where historical nodes could announce the same segment twice,
ultimately leading to historicals and their watchers (like coordinators
and brokers) being out of sync about which segments are served.

This could be caused if Druid is switched from local time to UTC, because
that causes the same segment descriptors to lead to different identifiers
(an identifier with local time interval before the switch, and UTC interval
after the switch). In turn this causes that segment descriptor to be written
to multiple segment cache info files and potentially get announced twice.

Later, if the historical receives a drop request, it drops the segment and
unannounces it once, but the other announcement would stick around in an
ephemeral znode forever, confusing coordinators and brokers.

* Only alert once.",2017-05-04T04:02:37Z
4502c207afe8bd0d01305c9cac76c8ab18c71def,fix injection bug and documentation (#4243),2017-05-03T20:07:43Z
f9a61ea2ba01f5a938a8347d2633bd5793fd7b0d,"Kafka lag emitter - Kafka Indexing Service (#4194)

* Kafka lag emitter

* enforce minimum emit period to a minute

* fixed comment",2017-05-02T23:30:07Z
5e85fcc0f5444506957bd51600a855ca9d706fe9,Restore BaseQuery.computeOverridenContext() for compatibility (#4241),2017-05-02T17:22:02Z
0bc18e790659830e8a9f3d5306f26d9ace8c1eaf,"Make UpdateCounter proof to update count overflow (#4138)

* Make UpdateCounter proof to update count overflow.

* Fix",2017-05-01T16:59:49Z
0c464f4a842e26b9b6e6a32e12eee4c85854e306,"Fix docs (#4225)

* Fix one typo

Signed-off-by: Hao Ziyu <haoziyu@qiyi.com>

* Fix deprecated links

Signed-off-by: Hao Ziyu <haoziyu@qiyi.com>",2017-05-01T16:55:43Z
7411b18df9188627f3933be1b36e2de31e26d437,"Add BroadcastDistributionRule (#4077)

* Add BroadcastDistributionRule

* Add missing null check

* Rename variable 'colocateDataSource' to 'colocatedDatasource'

* Address comments

* Document for broadcast rules

* Drop segments which are not co-located anymore

* Remove duplicated segment loading and dropping

* Add caveat

* address comments",2017-05-01T16:55:17Z
5a5a2749cdc5abe35be87d94da11802c57ffdde1,"improvements to coordinator lookups management (#3855)

* coordinator lookups mgmt improvements

* revert replaces removal, deprecate it instead

* convert and use older specs stored in db

* more tests and updates

* review comments

* add behavior for 0.10.0 to 0.9.2 downgrade

* incorporating more review comments

* remove explicit lock and use LifecycleLock in LookupReferencesManager. use LifecycleLock in LookupCoordinatorManager as well

* wip on LookupCoordinatorManager

* lifecycle lock

* refactor thread creation into utility method

* more review comments addressed

* support smooth roll back of lookup snapshots from 0.10.0 to 0.9.2

* correctly use LifecycleLock in LookupCoordinatorManager and remove synchronization from start/stop

* run lookup mgmt on leader coordinator only

* wip: changes to do multiple start() and stop() on LookupCoordinatorManager

* lifecycleLock fix usage in LookupReferencesManagerTest

* add LifecycleLock back

* fix license hdr

* some fixes

* make LookupReferencesManager.getAllLookupsState() consistent while still being lockless

* address review comments

* addressing leventov's comments

* address charle's comments

* add IOE.java

* for safety in LookupReferencesManager mainThread check for lifecycle started state on each loop in addition to interrupt

* move thread creation utility method to Execs

* fix names

* add tests for LookupCoordinatorManager.lookupManagementLoop()

* add further tests for figuring out toBeLoaded and toBeDropped on LookupCoordinatorManager

* address leventov comments

* remove LookupsStateWithMap and parameterize LookupsState

* address review comments

* address more review comments

* misc fixes",2017-04-28T13:41:38Z
b9fd30e90ad9e10356cca2b757d9b0193e84b9b5,"Add Checkstyle check to prohibit IntelliJ-style commented code lines (#4220)

* Add Checkstyle check to prohibit IntelliJ-style commented code lines

* Address comment

* Restore issue link",2017-04-28T01:11:25Z
631068b0999af8c5e174de02282b27fc2ae9be01,"Fix broken DataSketches link. (#4221)

* Fix broken DataSketches link.

* Better fixed link.",2017-04-28T00:37:12Z
c47cfed0ec0568a4c758ad801d5e11f32b9e05db,"Significantly improve LongEncodingStrategy.AUTO build performance (#4215)

* Significantly improve LongEncodingStrategy.AUTO build performance

* use numInserted instead of tempIn.available

* fix bug",2017-04-27T12:11:07Z
13143f9376aefb8f55595a1de938418b1634ddbf,"Update to Parquet 1.8.2 (#4210)

Hi guys,

Since Spark 2.x uses Parquet 1.8.2, we would like to update Druid's parquet library from 1.8.1 to 1.8.2 as well. It includes a lot of patches, performance improvements and better compatibility:
https://github.com/apache/parquet-mr/compare/4aba4da...c652278

Cheers, Fokko",2017-04-27T06:34:30Z
40057570f36296b0be3e6d5b6881370fd6994205,doc update on overlord console url when coordinator is acting as overlord (#4213),2017-04-26T22:03:54Z
9b9e1cfecb360812c4e9f4497bda49a62d27159c,"coordinator dynamic config POST to update only explicitly specified fields (#4141)

* coordinator dynamic config POST to update only explicitly specified fields instead of resetting everything else to zeros

* address review comments",2017-04-26T21:59:20Z
54463941b924ab8cbe614d3802c1a487eb030f61,"Fix two alerts from lgtm.com: comparing two boxed primitive values using (#4212)

the == or != operator compares object identity, which may not be
intended

Details:
https://lgtm.com/projects/g/druid-io/druid/snapshot/013566ade941151eb37d55a9c7efa4a9c28a3493/files/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SketchEstimatePostAggregator.java#V144
https://lgtm.com/projects/g/druid-io/druid/snapshot/013566ade941151eb37d55a9c7efa4a9c28a3493/files/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SketchMergeAggregatorFactory.java#V164",2017-04-26T21:56:25Z
52f7bb091dce40ad340976336b45c846565249a1,suppress warn message if metricsSpec is absent when using no-rollup ingestion (#4211),2017-04-26T04:52:49Z
ee9b5a619a9c265a31112e68c2a5eeaf4ff6c6e7,"Fix bugs in query builders and in TimeBoundaryQuery.getFilter() (#4131)

* Add queryMetrics property to Query interface; Fix bugs and removed unused code in Druids

* Fix a bug in TimeBoundaryQuery.getFilter() and remove TimeBoundaryQuery.getDimensionsFilter()

* Don't reassign query's queryMetrics if already present in CPUTimeMetricQueryRunner and MetricsEmittingQueryRunner

* Add compatibility constructor to BaseQuery

* Remove Query.queryMetrics property

* Move nullToNoopLimitSpec() method to LimitSpec interface

* Rename GroupByQuery.applyLimit() to postProcess(); Fix inconsistencies in GroupByQuery.Builder",2017-04-25T21:32:02Z
a2419654eac3437212072032d76bd6e4d221b9fb,Allow hadoop configurations using runtime properties. (#4189),2017-04-25T18:35:27Z
3b9222001518845acf6caae5641546d405d476ae,"Reduce log spam from Avro decoders. (#4205)

These objects get constructed semi-frequently (any time a parser is
deserialized) and so info logs are spammy. They'll still appear in
task logs at least once, since they're part of the task definition and
will get logged due to that.",2017-04-25T18:29:59Z
336089563d6095db76dfe9139920cdba3f98c54c,"skip rows which are added after cursor created (#4049)

* fix can't get dim value via IncrementalIndexStorageAdapter cursor

* address the comment

* add ut

* address ut comments

* fix bug and fix ut",2017-04-25T18:26:46Z
4d3745d6c9438a5455fdee9524865d177d24e547,log the exception on failure to send query response (#4179),2017-04-25T17:27:20Z
97ddb38d75d83ab553ba921e1c5b5cbcbce23c6e,"DatasourceInputSplit: Serialize with write instead of writeUTF. (#4195)

writeUTF has a limit of 64KB, making it difficult to write out splits
that read a large number of descriptors for small segments.",2017-04-25T17:26:44Z
e4fbc2bc5bb259f7e037c20fbac105095ce60eeb,"Updating the description of useCache (#4200)

Updating the description of useCache

Updating query-context doc based on Gian's comment

Updating query-context doc based on Gian's comment

Updating query-context doc based on Gian's comment

Updating query-context doc based on Gian's comment",2017-04-25T17:26:15Z
809112cd5fd945481654d4575f57eb59e7475e69,"DirectDruidClient: Fix division by zero. (#4206)

* DirectDruidClient: Fix division by zero.

Introduced in #3954 when some floating math was changed to
integer math. This patch restores the old math.

* Added comment.",2017-04-25T04:03:00Z
de815da9422ae87bc7cff58a154d098908e6625f,"Some code refactor for better performance of `Avro-Extension` (#4092)

* 1. Collections.singletonList instand of Arrays.asList; 2. close FSDataInputStream/ByteBufferInputStream for releasing resource; 3. convert com.google.common.base.Function into java.util.function.Function; 4. others code refactor

* Put each param on its own line for  code style

* Revert GenericRecordAsMap back about `Function`",2017-04-25T03:46:32Z
d51097c80945e58d197e5923f5f3b40139212997,"Fix lz4 library incompatibility in kafka-indexing-service extension (#4115)

* Fix lz4 library incompatibility in kafka-indexing-service extension #3266

* Bumped Kafka version to 0.10.2.0 for : Fix lz4 library incompatibility in kafka-indexing-service extension #3266

* Replaced Lists.newArrayList() with Collections.singletonList() For Fix lz4 library incompatibility in kafka-indexing-service extension #4115",2017-04-25T03:23:51Z
723a855ab95bacb661084225af7a39b2994230e6,Fix nested groupBys with outer exfns on inner numeric columns (#4182),2017-04-22T02:47:46Z
2ca7b003463eb2d6a40735998408b9c822b01cb9,Update versions to 0.10.1-SNAPSHOT. (#4191),2017-04-21T01:12:28Z
60caa641f34ef4e9065f1efb868a62916b8a3454,Restore backwards compatibility of Query. (#4185),2017-04-19T16:47:50Z
5b69f2eff2f28670da85778d8a04edf1ad7c4f5d,"Make timeout behavior consistent to document (#4134)

* Make timeout behavior consistent to document

* Refactoring BlockingPool and add more methods to QueryContexts

* remove unused imports

* Addressed comments

* Address comments

* remove unused method

* Make default query timeout configurable

* Fix test failure

* Change timeout from period to millis",2017-04-19T00:47:53Z
db656c5a88d3c548ce60227905e881413d8eea5f,fix kafka8 unparsable message halt job issue (#4164),2017-04-18T18:23:02Z
0bcfd9354cb4b2f0e7699b4232b719a7851e582c,"Fix S3 deep storage push and s3 insert-segment-to-db (#4174)

* Fix S3 deep storage push and s3 insert-segment-to-db

* Less verbose checks in S3DataSegmentFinder",2017-04-15T02:42:10Z
8432138a07c00faa11be2f41b746be7dd6ba83da,log query in requestLog when client has disconnected and response write fails (#4169),2017-04-14T22:34:52Z
5c9198347b10973db56bf2d8db6813d097457826,fix over counting of bytes in ByteCountingLRUMap (#4168),2017-04-13T22:06:34Z
b2954d5fead5a39efd633ef8378c507ddc92c2f9,"Better groupBy error messages and docs around resource limits. (#4162)

* Better groupBy error messages and docs around resource limits.

* Fix BufferGrouper test from datasketches.

* Further clarify.",2017-04-13T17:38:53Z
2e9589215ed6135a65ba79e388846b4e5742e876,removing unused var (#4163),2017-04-12T19:03:41Z
676af79044a2f68cc189fdb14ba8cbdc0e6958da,"don't do postAgg in TimeseriesQueryQueryToolChest when not necessary (#4155)

* don't do postAgg in TimeseriesQueryQueryToolChest when not necessary

* set postAggs to empty list in TimeseriesQueryQueryToolChest instead of checking finalizing fn

* fix ut

* fix ut again",2017-04-12T10:16:46Z
9f4266fba162b9f99e73726b1ff74fe759f7bdae,"Fix SortCollapseRule when inner order is DESC. (#4157)

* Fix SortCollapseRule when inner order is DESC.

* Remove unused import.",2017-04-12T10:09:45Z
15f3a944745ba19d8063d7f189121d61f0378f9a,Copy closer into Druid codebase (fixes #3652) (#4153),2017-04-10T00:38:45Z
7e0d4c955507e603cd1572d7f2b5dce5355332d7,secure supervisor endpoints (#3985),2017-04-05T23:42:32Z
7e4e5510e098abb561f9d59108e9ba74524aa1e8,"Outdated property names (#4146)

Outdated property names?",2017-04-05T23:37:38Z
0d2e91ed502c31f954a99d93d602e7af4abb5f72,"Adding Kafka-emitter (#3860)

* Initial commit

* Apply another config: clustername

* Rename variable

* Fix bug

* Add retry logic

* Edit retry logic

* Upgrade kafka-clients version to the most recent release

* Make callback single object

* Write documentation

* Rewrite error message and emit logic

* Handling AlertEvent

* Override toString()

* make clusterName more optional

* bump up druid version

* add producer.config option which make user can apply another optional config value of kafka producer

* remove potential blocking in emit()

* using MemoryBoundLinkedBlockingQueue

* Fixing coding convention

* Remove logging every exception and just increment counting

* refactoring

* trivial modification

* logging when callback has exception

* Replace kafka-clients 0.10.1.1 with 0.10.2.0

* Resolve the problem related of classloader

* adopt try statement

* code reformatting

* make variables final

* rewrite toString",2017-04-04T21:07:43Z
b166e13d2be906ea24810c170c1f410655ef3ab1,Make DruidCoordinatorTest fail fast (#4142),2017-04-04T20:58:32Z
81ba0224c50c2eaad489e33f2b30e3b6e60ca95a,Report unsuccessful queries in AsyncQueryForwardingServlet (#4143),2017-04-04T20:53:07Z
801ea5efa423513133c742d2b1b6875a18d1b8e9,"Fix: Broker fails throws OOME with conf-quickstart (#4127)

when running the the packaged conf-quickstart druid broker fails to
start and throws OOME. increasing the direct memory to get around this.",2017-03-29T18:43:58Z
bbb61e638b391d298e338c17a02d65a6fd18b477,"SQL: Support for another form of filtered aggregator. (#4109)

* SQL: Support for another form of filtered aggregator.

* Fix comment, add test for MAX too.",2017-03-27T22:22:36Z
73d9b316642e2e9fa43ae765ee30bbf4ff277877,"GenericIndexed minor bug fixes, optimizations and refactoring (#3951)

* Minor bug fixes in GenericIndexed; Refactor and optimize GenericIndexed; Remove some unnecessary ByteBuffer duplications in some deserialization paths; Add ZeroCopyByteArrayOutputStream

* Fixes

* Move GenericIndexedWriter.writeLongValueToOutputStream() and writeIntValueToOutputStream() to SerializerUtils

* Move constructors

* Add GenericIndexedBenchmark

* Comments

* Typo

* Note in Javadoc that IntermediateLongSupplierSerializer, LongColumnSerializer and LongMetricColumnSerializer are thread-unsafe

* Use primitive collections in IntermediateLongSupplierSerializer instead of BiMap

* Optimize TableLongEncodingWriter

* Add checks to SerializerUtils methods

* Don't restrict byte order in SerializerUtils.writeLongToOutputStream() and writeIntToOutputStream()

* Update GenericIndexedBenchmark

* SerializerUtils.writeIntToOutputStream() and writeLongToOutputStream() separate for big-endian and native-endian

* Add GenericIndexedBenchmark.indexOf()

* More checks in methods in SerializerUtils

* Use helperBuffer.arrayOffset()

* Optimizations in SerializerUtils",2017-03-27T19:17:31Z
117c698c59a011648c50e261ff5b555e3ee236f8,"Update StatsDEmitter.java (#4111)

This was mentioned in the original pull (https://github.com/druid-io/druid/pull/2410) by @sascha-coenen, and the original author (@michaelschiff) agreed that it seemed reasonable

This commit fixes issue https://github.com/druid-io/druid/issues/3960",2017-03-27T17:32:21Z
a0f2cf05d5a3a7d71635d1f54dd0efdfe57e469a,"Add EqualDistributionWithAffinityWorkerSelectStrategy which balance w… (#3998)

* Add EqualDistributionWithAffinityWorkerSelectStrategy which balance work load within affinity workers.

* add docs to equalDistributionWithAffinity",2017-03-26T02:15:49Z
90f9932bd3e0f643ca6637cbc3bb89c9ce0ed085,"SQL: Rule to collapse sort chains. (#4085)

Useful for queries like `SELECT * FROM (...) LIMIT X`, where the inner query
has an order by or limit in it.",2017-03-25T02:20:01Z
76c4b6446eac8da688f6e7c621779a8b98ad41d8,SQL: Fix handling of CURRENT_TIMESTAMP and friends in non-UTC timezones. (#4114),2017-03-25T01:45:23Z
dd6c0ab50936f355ae939fc397dbb123cd6f2cb8,"Add SQL REGEXP_EXTRACT function; add ""index"" to ""regex"" extractionFn. (#4055)

* Add SQL REGEXP_EXTRACT function; add ""index"" to ""regex"" extractionFn.

* Fix tests.",2017-03-25T00:38:36Z
de081c711b6ee734ab0c8ca4fc660b188484c5bc,"RealtimeIndexTask to support alertTimeout in context  (#4089)

* RealtimeIndexTask to support alertTimeout in context and raise alert if task process exists after the timeout

* move alertTimeout config to tuningConfig and document",2017-03-24T19:48:12Z
b4289c00048f89881718ea234137f6072c6cd446,"Remove ""granularity"" from IngestSegmentFirehose. (#4110)

It wasn't doing anything useful (the sequences were being concatted, and
cursor.getTime() wasn't being called) and it defaulted to Granularities.NONE.
Changing it to Granularities.ALL gave me a 700x+ performance boost on a
small dataset I was reindexing (2m27s to 365ms). Most of that was from avoiding
making a lot of unnecessary column selectors.",2017-03-24T17:28:54Z
23f77ebd20472161c42ae6ca763ff950a74ca8c1,"Explain Avro's unnecessary EOFException (#4098) (#4100)

* Explain Avro's unnecessary EOFException (#4098)

* add jira link into log message",2017-03-24T15:45:45Z
2cbc4764f88ef36b60c00ba866fca088cc1a0268,"Comparing dimensions to each other in a filter (#3928)

Comparing dimensions to each other using a select filter",2017-03-24T01:23:46Z
4b5ae31207359cf453ac220cc8309aded507b8d6,"QueryMetrics: abstraction layer of query metrics emitting (part of #3798) (#3954)

* QueryMetrics: abstraction layer of query metrics emitting

* Minor fixes

* QueryMetrics.emit() for bulk emit and improve Javadoc

* Fixes

* Fix

* Javadoc fixes

* Typo

* Use DefaultObjectMapper

* Add tests

* Address PR comments

* Remove QueryMetrics.userDimensions(); Rename QueryMetric.register() to report()

* Dedicated TopNQueryMetricsFactory, GroupByQueryMetricsFactory and TimeseriesQueryMetricsFactory

* Typo

* More elaborate Javadoc of QueryMetrics

* Formatting

* Replace QueryMetric enum with lambdas

* Add comments and VisibleForTesting annotations",2017-03-24T00:23:59Z
c9fc7d17092d173eb95fd53da79b493e3c8265c0,fix failure message to mention version.bin instead of index.drd not exists msg (#4102),2017-03-23T21:21:19Z
4b9f975f50334e0c4dbda985eed69d71d5f047d7,"Rename SketchAggregationWithSimpleDataTest. (#4105)

Tests that don't end in ""Test"" won't get run automatically by Maven.",2017-03-23T21:20:50Z
79f1a1d7f05bc7df70f909b76b0c0788505297be,"Allow float parameters for Bound/Selector/In filters on long columns (#4074)

* Allow float parameters for long filters

* Use BigDecimal intermediate form for string->long conversions

* PR comments

* PR comments",2017-03-23T21:18:05Z
81d6b49d69d8a7676f1ba0c2eb344f1a3d4e754e,"Downgrade Curator. (#4103)

Reverts #4060, fixes #4095, unfixes #4056, #3837. Better the devil you
know than the devil you don't, I always say.

See also https://issues.apache.org/jira/browse/CURATOR-394.",2017-03-23T20:44:00Z
ff7f90b02d2a2bd8447370243bea4efdde248da5," relocate method in BufferAggregator. (#4071)

*  relocate method in BufferAggregator.

* Unused import.

* Detailed javadoc.

* using Int2ObjectMap.

* batch relocate.

* Revert batch relocate.

* Unused import.

* code comments.

* code comment.",2017-03-23T20:07:59Z
f68ba4128f9cad18a5f4b4cfd88b8bccbfdcf816,"Exclude pagingIdentifiers that don't apply to a datasource (#4078)

* exclude pagingIdentifiers that don't apply to a datasource to support union datasources

* code review changes

* code review changes",2017-03-22T19:32:27Z
1f481986075e490ae1ddc195369e465b7c17790e,"Fix some query cache key collisions. (#4094)

The query caches generally store dimensions and aggregators positionally, so
appendCacheablesIgnoringOrder could lead to incorrect results being pulled
from the cache.",2017-03-22T18:08:48Z
77b62132225d2af947ec4ffb523f490d8bf828fd,Remove unused Filters.getLongValueMatcher method. (#4086),2017-03-21T19:46:07Z
4f7f3e31cb13e55bcde70dcafc737eb0cd8f8d88,"CONTRIBUTING update for the github squash button. (#4087)

Some changes to the contributing guidelines to make pull requests
easier to review.",2017-03-21T17:06:11Z
8510a52e02662757f14c12145c5fc28fcfb779f4,"scan-query: Use long as limit. (#4081)

* scan-query: Use long instead of int as limit type

* Use MAX_INSTANT queryTimeout, if timeout == 0",2017-03-20T21:19:35Z
64248d31b6f839855c3c9ad2e408efa7820181b3,"SQL: Groundwork for views. (#3962)

* SQL: Groundwork for views.

They are not actually exposed to users at this point, but enough is there
to have some test cases in CalciteQueryTest.

* Remove unused imports.

* Fix injection problem.",2017-03-20T18:53:11Z
ad477cb4541bfebbeaf7e9c8feca48dbc0962785,"Fix topNs with extractionFns but no aggregators. (#4070)

The result sets were empty because of an aggs.length > 0 check. I'm not
sure if it was there for any good reason, but there didn't seem to be one.",2017-03-20T18:31:30Z
6febcd9f24af43d2b99bd71a2ed1611dc754abe7,Fix IngestSegmentFirehoseFactory (#4069),2017-03-17T22:57:25Z
84fe91ba0b332c31b94ce5ca63a9bb63c2ec756a,"Monomorphic processing of TopN queries with 1 and 2 aggregators (key part of #3798) (#3889)

* Monomorphic processing: add HotLoopCallee, CalledFromHotLoop, RuntimeShapeInspector, SpecializationService. Specialize topN queries with 1 or 2 aggregators. Add Cursor.advanceUninterruptibly() and isDoneOrInterrupted() for exception-free query processing.

* Use Execs.singleThreaded()

* RuntimeShapeInspector to support nullable fields

* Make CalledFromHotLoop annotation Inherited

* Remove unnecessary conversion of array of ColumnSelectorPluses to list and back to array in CardinalityAggregatorFactory

* Close InputStream in SpecializationService

* Formatting

* Test specialized PooledTopNScanners

* Set flags in PooledTopNAlgorithm directly

* Fix tests, dependent on CountAggragatorFactory toString() form

* Fix

* Revert CountAggregatorFactory changes

* Implement inspectRuntimeShape() for LongWrappingDimensionSelector and FloatWrappingDimensionSelector

* Remove duplicate RoaringBitmap dependency in the extendedset pom.xml

* Fix

* Treat ByteBuffers specially in StringRuntimeShape

* Doc fix

* Annotate BufferAggregator.init() with CalledFromHotLoop

* Make triggerSpecializationIterationsThreshold an int

* Remove SpecializationService.PerPrototypeClassState.of()

* Add comments

* Limit the amount of specializations that SpecializationService could make

* Add default implementation for BufferAggregator.inspectRuntimeShape(), for compatibility with extensions

* Use more efficient ConcurrentMap's idioms in SpecializationService",2017-03-17T19:44:36Z
3ec1877887b3cd3b9ff6ea95a62bff29162b752a,Fix BucketExtractionFn on objects that are strings. (#4072),2017-03-17T05:59:11Z
403fbae7b1487cdc186d7263641a31ccf210c467,"SQL: Better error handling for HTTP API. (#4053)

* SQL: Better error handling for HTTP API.

* Fix test.",2017-03-15T18:18:00Z
db15d494ca116d4c841792c9ad1584904d88d3c1,Update docs for query filter HavingSpecs. (#4063),2017-03-15T17:59:09Z
9cd666282cfada95c4ccd96a1ae294311857c41e,"Update Curator to 2.12.0. (#4060)

Fixes #4056, #3837.",2017-03-15T16:38:31Z
c4f44c0590696a335dad60ffbc2dd8c00941511d,"Update the docs (#4059)

Signed-off-by: Hao Ziyu <haoziyu@qiyi.com>",2017-03-15T14:32:29Z
805d85afdad650b5bee870d1921ddcdea0136de7,"Allow compilation as Java8 source and target (#3328)

* Allow compilation as Java8 source and target for everything except API

* Remove conditions in tests which assume that we may run with Java 7

* Update easymock to 3.4

* Make Animal Sniffer to check Java 1.8 usage; remove redundant druid-caffeine-cache configuration

* Use try-with-resources in LargeColumnSupportedComplexColumnSerializerTest.testSanity()

* Remove java7 special for druid-api",2017-03-15T04:23:47Z
e5c0dab12c21b0e65669ecfa1bbddcfd7a68d5af,"groupBy v2: Better error message when resources are exhausted. (#4046)

* groupBy v2: Better error message when resources are exhausted.

Fixes #4043.

* Fix tests.",2017-03-14T19:07:49Z
3216134f8c9959ab72df12870f45a13a48c63b17,"SQL: Make row extractions extensible and add one for lookups. (#3991)

This is a reopening of #3989, since that PR was merged to master prematurely
and accidentally.",2017-03-14T04:56:16Z
bad250fe6dd65f2e5a20f945d365fe30adfcde82,"SQL: Support for coercing to DECIMAL. (#4028)

Useful for running queries that involve math of ints and floats, which
Calcite types as decimal.",2017-03-13T23:29:23Z
dfe4bda7fd68be04712c612f9b027516e920c328,add doc (#4030),2017-03-10T20:49:20Z
cab2e2f5d5de7ea3878548281f6bdc1b481f5c56,Add docs about filtering and indexes on numeric columns. (#4035),2017-03-10T20:48:59Z
adbe89e7d6a9b0c3b33f56e8df9c8b367574f57c,"Fix race in KafkaIndexTaskTest (#4031)

task.pause(0) can return early before the task is actually paused.
Exception for failure -
java.lang.AssertionError: expected:<PAUSED> but was:<READING>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at
io.druid.indexing.kafka.KafkaIndexTaskTest.testRunWithOffsetOutOfRangeEx
ceptionAndPause(KafkaIndexTaskTest.java:1229)

To reproduce add Thread.sleep(10000) in beginning of
KafkaIndexTask.possiblypause method.",2017-03-09T15:34:46Z
a5170666b61764017c3711b15ff68e3653243d9b,"groupBy v2: Always merge queries. (#4023)

This fixes #4020 because it means the timestamp will always be included for outermost
queries. Historicals receiving queries from older brokers will think they're
outermost (because CTX_KEY_OUTERMOST isn't set to ""false""), so they'll include a
timestamp, so the older brokers will be OK.",2017-03-08T18:47:46Z
c155d9a5e95e48ebb09db668f83c434fdb706c5b,increase kill timeout (#4002),2017-03-08T17:00:34Z
960769c583a8effc93e368580763141be8d1d9c3,SQL: Fix example INFORMATION_SCHEMA query. (#4017),2017-03-07T00:07:47Z
4ca5270e88fa40e0bc9e9607f22e45b6fd7aa99e,"Ignore chunkPeriod for groupBy v2, fix chunkPeriod for irregular periods. (#4004)

* Ignore chunkPeriod for groupBy v2, fix chunkPeriod for irregular periods.

Includes two fixes:
- groupBy v2 now ignores chunkPeriod, since it wouldn't have helped anyway (its mergeResults
returns a lazy sequence) and it generates incorrect results.
- Fix chunkPeriod handling for periods of irregular length, like ""P1M"" or ""P1Y"".

Also includes doc and test fixes:
- groupBy v1 was no longer being tested by GroupByQueryRunnerTest since #3953, now it
  is once again.
- chunkPeriod documentation was misleading due to its checkered past. Updated it to
  be more accurate.

* Remove unused import.

* Restore buffer size.",2017-03-06T18:27:02Z
7b9e6c29cd9dd2fa6d670b651406a06487e5c595,"Fix float, long dimension indexer object selectors. (#4012)

Their ""convertUnsortedEncodedKeyComponentToActualArrayOrList"" methods didn't respect the contract,
which says they should return single values (not array/list) if there is only a single value
to return. This affects the behavior of ObjectColumnSelectors on realtime segments.",2017-03-06T18:01:30Z
19ac1c7c2c05a7fa35d4843a50c192c244bacbe4,"Add SameIntervalMergeTask for easier usage of MergeTask (#3981)

* Add SameIntervalMergeTask for easier usage of MergeTask

* fix a bug and add ut

* remove same_interval_merge_sub from Task.java and remove other no needed code",2017-03-06T17:21:32Z
bebf9f34c7c77b96e44410f20a5d742f546bd03f,"HdfsDataSegmentPusher bug fix (#4003)

* Fix for HdfsDataSegmentPusher.

* Add missing loadspec in actual descriptor file. Tests to check actual content of descriptor file.",2017-03-06T08:53:44Z
df623ebfe3af98ddc592c4cddb6da7a38b2a6975,Fix a couple bugs due to calling Period.getMillis(). (#4006),2017-03-05T13:14:20Z
337f3870d8b3971014fc6bf7ea4e40272b6b9295,"Fix TimeFormatExtractionFn getCacheKey when tz, locale are not provided. (#4007)

* Fix TimeFormatExtractionFn getCacheKey when tz, locale are not provided.

* Remove unused import.

* Use defaults in cache key.",2017-03-05T01:41:59Z
af5a4cce3c33de112894aa4ec80144b98d6bbadf,SQL: Clarify approximate distinct count behavior. (#4000),2017-03-03T21:42:30Z
67d0ae32718515a413b8a5772a7be7d32b991937,"Let toDateTime call fall through for Duration Granularity (#4001)

* Let toDateTime call fall through for Duration Granularity

Added test for the same.

* Add duration granularity test to GroupByQueryRunnerTest",2017-03-03T19:27:22Z
e7e3c2dc5a848848ba6a2c11cba0f51bdaa59d9b,support singleThreaded flag for groupBy-v2 as well (#3992),2017-03-03T18:13:06Z
4a56d7d8a0e441ee717c8b94446bc0a608f8a266,SQL: Ability to generate exact distinct count queries. (#3999),2017-03-03T18:10:36Z
3e8dbd59f899bd4e709934ebadf8510455e70959,Fix groupBy docs to reflect that 'v2' is default. (#3993),2017-03-02T23:13:39Z
81a5f9851f3a7a7a6340cfe27298371a4f5bdaa5,"TmpFileIOPeons to create files under the merging output directory, instead of java.io.tmpdir (#3990)

* In IndexMerger and IndexMergerV9, create temporary files under the output directory/tmpPeonFiles, instead of java.io.tmpdir

* Use FileUtils.forceMkdir() across the codebase and remove some unused code

* Fix test

* Fix PullDependencies.run()

* Unused import",2017-03-02T22:05:12Z
ea1f5b79549ec2731d21554753a45fd7bd18da6c,"LifecycleLock for better synchronization in lifecycled objects (#3964)

* Introduce LifecycleLock

* Add LifecycleLockTest

* Rename LifecycleLock.release() to exitStart()

* Rewrite LifecycleLock using AbstractQueuedSynchronizer for more safety, added tests

* Add LifecycleLock.exitStop() and reset()

* Add LifecycleLock.awaitStarted(timeout)

* Braces

* Fix",2017-03-02T20:22:57Z
e63eefd7ff51f5b319aa940b111c7cec1a289d27,"Revert ""SQL: Make row extractions extensible and add one for lookups. (#3989)""

The PR was merged to master accidentally.

This reverts commit 23927a3c9671bedd2ea9e2e980a52c1a2b678f1b.",2017-03-02T01:05:02Z
5fb1638534d78d4a718ff2b294dd4d37a3481c44,"Add default configuration for select query 'fromNext' parameter (#3986)

* Add default configuration for select query 'fromNext' parameter

* PR comments

* Fix PagingSpec config injection

* Injection fix for test",2017-03-02T01:05:35Z
23927a3c9671bedd2ea9e2e980a52c1a2b678f1b,"SQL: Make row extractions extensible and add one for lookups. (#3989)

* SQL: Make row extractions extensible and add one for lookups.

* Fix QuantileSqlAggregatorTest.",2017-03-02T01:03:43Z
b8ba237f782e2522f41c05a37941f52452f1f0e0,Update toc.md (#3704),2017-03-01T22:33:39Z
add17fa7dba7c96b8e079954974977043e2c73cc,"Remove the metadataUpdateSpec from specfile (#3973)

Get rid of the metadataUpdateSpec section in the json example to
ingest parquet into druid. When this element is present, it will
fail start an indexing job.",2017-03-01T22:24:36Z
8316b4f48ff155dc0662657692e5a22254ad2dbd,fix TimeDimExtractionFn.apply() under concurrency (#3984),2017-03-01T21:07:12Z
772de66e79b3d1b316102475e579f153266ff054,add filenameBase to log when exceed file size limit to indicate which column it is (#3982),2017-03-01T21:05:07Z
16bf62bacc4a7b098a86ef1f20d19d768c5c5032,BACKEND-564: Emitter upgrade from 0.4.0 to 0.4.1 (#3977),2017-03-01T21:03:01Z
94da5e80f998fee7a7f0b8b2f84f0c8e841b3e2c,"Namespace optimization for hdfs data segments. (#3877)

* NN optimization for hdfs data segments.

* HdfsDataSegmentKiller, HdfsDataSegment finder changes to use new storage
format.Docs update.

* Common utility function in DataSegmentPusherUtil.

* new static method `makeSegmentOutputPathUptoVersionForHdfs` in JobHelper

* reuse getHdfsStorageDirUptoVersion in
DataSegmentPusherUtil.getHdfsStorageDir()

* Addressed comments.

* Review comments.

* HdfsDataSegmentKiller requested changes.

* extra newline

* Add maprfs.",2017-03-01T17:51:20Z
cc20133e700240f41f72addf76953a40a8d9dd11,"Checkstyle rule to outlaw tabs. (#3988)

Tabs are the worst.",2017-03-01T07:52:53Z
e982a23a4845c3b3f6ba16f291fbe92f0114331f,"Fix one typo in the comments (#3980)

Signed-off-by: Hao Ziyu <haoziyu@qiyi.com>",2017-03-01T07:21:56Z
91344cbe57c66de2442c968da596f2077c4f7f75,"Enable GenericIndexed V2 for built-in(druid-io managed) complex columns. (#3987)

* Enable GenericIndexed V2 for complex columns.

* SerializerBuilder to use  GenericColumnSerializer.",2017-03-01T06:06:54Z
a08660a9ca2c0e28ad5ee9177b7a2f8db90f0b14,"Support ingestion of long/float dimensions (#3966)

* Support ingestion for long/float dimensions

* Allow non-arrays for key components in indexing type strategy interfaces

* Add numeric index merge test, fixes

* Docs for numeric dims at ingestion

* Remove unused import

* Adjust docs, add aggregate on numeric dims tests

* remove unused imports

* Throw exception for bitmap method on numerics

* Move typed selector creation to DimensionIndexer interface

* unused imports

* Fix

* Remove unused DimensionSpec from indexer methods, check for dims first in inc index storage adapter

* Remove spaces",2017-03-01T03:04:41Z
5ccfdcc48b1c3b20738798f16d1f9ea47211b7eb,"Fix testDeadlock timeout delay (#3979)

* No more singleton. Reduce iterations

* Granularities

* Fix the delay in the test

* Add license header

* Remove unused imports

* Lot more unused imports from all the rearranging

* CR feedback

* Move javadoc to constructor",2017-02-28T18:51:41Z
ef6a19c81bcda7dcb4862c301f88616cba0ae4c0,"buildV9Directly in MergeTask and AppendTask (#3976)

* buildV9Directly in MergeTask and AppendTask

* add doc",2017-02-28T18:04:32Z
78b8a57ad6ccf37e4b9b6b63ec518aca42d30af5,"Update PullDependencies.java (#3970)

Hi guys,

I've stumbled on this incomplete info line while debugging my mvn packaging job. 

Cheers,
Fokko Driesprong",2017-02-25T09:30:30Z
469ae374a36a6b9790b47452e0b514c6f35bcf73,"add kill task link on console (#3974)

* add kill task link on console

* refresh after kill",2017-02-25T09:28:16Z
c3bf40108d9e4ba169551754cccada2967eac6ef,"One granularity (#3850)

* Refactor Segment Granularity

* Beginning of one granularity

* Copy the fix for custom periods in segment-grunalrity over here.

* Remove the custom serialization for now.

* Compilation cleanup

* Reformat code

* Fixing unit tests

* Unify to use a single iterable

* Backward compatibility for rolling upgrade

* Minor check style. Cosmetic changes.

* Rename length and millis to duration

* CR feedback

* Minor changes.",2017-02-25T07:02:29Z
58b704c3b42451e18a027314df216eec76117380,"Don't allow '__time' as a GroupBy output field name (#3967)

* Don't allow '__time' as a GroupBy column field name

* Tweak exception message",2017-02-23T22:39:17Z
02fc625b5f895848a918539b2b183d4e7cb034f3,"Fix bug with SegmentLoaderLocalCacheManager (#3929)

* Fix bug with SegmentLoaderLocalCacheManager

* Use collections.sort",2017-02-23T20:31:38Z
2ead572639871826dd6998e6800cb718f532983b,"make QueryResource return ETag header if If-None-Match header is provided (#3955)

also do not process query and return HTTP 304 NOT MODIFIED if given If-None-Match value matches current ETag",2017-02-23T19:39:59Z
1098ba7a7f4bbf7939f533ff7cf7b7b6a911c2f1,Update toc.md (#3703),2017-02-23T17:39:06Z
7ce05d58bc96aa447310bd5b75aad9b6e4616ec1,"fix NPE in search query when dimension contains null value (#3968)

* fix NPE when dimension contains null value in search query

* add ut

* search with not existed dimension should always return empty result",2017-02-23T16:07:59Z
ebd100cbb01e442c6d34eda7983270ba943115c2,Set default query granularity for null value (#3965),2017-02-23T01:38:43Z
f21641f0dc2b91cb64c9af32803bd0bbc6848970,"Fix over-optimistic log message. (#3963)

""Wrote task log"" could be logged before the output stream is flushed and
closed, which could generate an error and not actually write the log.",2017-02-22T23:02:53Z
edb032b96df8581440d4fb450dc470e47c5c4859,add datasource in intermediate segment path (#3961),2017-02-22T22:31:00Z
372b84991cdbe92e741809cffb6f6dc75d7a2fc8,"Add virtual columns to timeseries, topN, and groupBy. (#3941)

* Add virtual columns to timeseries, topN, and groupBy.

* Fix GroupByTimeseriesQueryRunnerTest.

* Updates from review comments.",2017-02-22T21:16:48Z
7200dce112d8f69f3f59d16b2b8290d69459aa5e,"Atomic merge buffer acquisition for groupBys (#3939)

* Atomic merge buffer acquisition for groupBys

* documentation

* documentation

* address comments

* address comments

* fix test failure

* Addressed comments

- Add InsufficientResourcesException
- Renamed GroupByQueryBrokerResource to GroupByQueryResource

* addressed comments

* Add takeBatch() to BlockingPool",2017-02-22T20:49:37Z
e7d01b67b6e2a303ba9436da9a258633ecf91971,"Move SQL configs to sql.md. (#3959)

This puts all the SQL stuff in one place. It also makes life easier by
pointing out that configs be made in either common.runtime.properties
or the broker runtime.properties.",2017-02-22T16:37:24Z
985203b634ecf2f5ec8ce5f85e34cb16043996cf,"Finalize fields in postaggs (#3957)

* initial commits for finalizeFieldAccess #2433

* fix some bugs to run a query

* change name of method Queries.verifyAggregations to Queries.prepareAggregations

* add Uts

* fix Ut failures

* rebased to master

* address comments and add a Ut for arithmetic post aggregators

* rebased to the master

* address the comment of injection within arithmetic post aggregator

* address comments and introduce decorate() in the PostAggregator interface.

* Address comments. 1. Implements getComparator in FinalizingFieldAccessPostAggregator and add Uts for it 2. Some minor changes like renaming a method name.

* Fix a code style mismatch.

* Rebased to the master",2017-02-22T00:32:14Z
a47206eaf8d14eb762bd04c73553859cfcf66f1f,"Ability to filter on virtual columns. (#3942)

This didn't need much other than having BitmapIndexSelector return null from
various methods to trigger cursor based filtering.",2017-02-22T00:03:31Z
f910c050fd24fe28b876c891ff4bf4c056baf048,"CachingClusteredClientTest: Use groupBy v1. (#3958)

GroupBy v2 doesn't cache on the broker, so it isn't actually testing
what the test was supposed to be testing. Also, the test failed due
to mismatched expectations.",2017-02-21T22:53:34Z
128274c6f069b6bc083c4a6bdc509a62e1df2aa1,"Disable caching on brokers for groupBy v2 (#3950)

* Disable caching on brokers for groupBy v2

* Rename parameter

* address comments",2017-02-21T17:49:49Z
bc33b68b513da2a6a89e3467f7289197d323924e,"Use GroupBy V2 as default (#3953)

* Use GroupBy V2 as default

* Remove unused line

* Change assert to exception propagation",2017-02-18T15:40:40Z
361d9d9802d7517c961fc6eac90e38c14668c6c5,"fix dynamic schema data can't rollup correctly (#3949)

* fix dynamic schema data can't rollup correctly

* add ut",2017-02-17T21:07:29Z
a029b33499801c3b0698200397ec4408c28ee3ea,"fix cache populate incorrect content when numBackgroundThreads>1 (#3943)

* fix cache populate incorrect content when numBackgroundThreads>1

* simplify code by using Futures.allAsList and use CountDownLatch in UT

* fix test code style and assert countDownLatch.await()",2017-02-17T15:17:19Z
797488a6774a64117fccaf4e346cc1882b066c41,"Removing Integer.MAX column size limit. (#3743)

* Removing Integer.MAX column size limit.

* On demand creation of headerLong, use v2 instead of v3

* Avoid reusing the same object from a previous test.

* Avoid reusing the same object from a previous test part#2

* code formatting.

* GenericIndexed/Writer code review changes.

* GenericIndexed/writer code review requested changes.

* checkIndex() to static

* native endianess for genericIndexedV2, code  review requested changes.

* Formatting

* Hll fix.

* use native endianess during bag size calculation.

* Code review requested changes.

* IOPeon close() changes.

* use different tmp directory path for testing.

* Code review requested changes.",2017-02-17T02:09:43Z
e5fb0e1ff5ee915a5bb21fe0803ebce5abeabcb1,"New property for each metric that tells the StatsDEmitter to convert metric values from range 0-1 to 0-100.  This (#3936)

prevents rates and percentages expressed as Doubles (0.xx) from being rounded down to 0.",2017-02-16T21:55:56Z
ca6053d0450a0b45c469e00d615118f2c81ec0b0,"SQL: Resolve column type conflicts in favor of newer segments. (#3930)

* SQL: Resolve column type conflicts in favor of newer segments.

Helps with schema evolution from e.g. long -> float, which is supported
on the query side.

* Take columns from highest timestamp instead of max segment id.

* Fixes and docs.",2017-02-16T01:48:49Z
16ef513c7d562ceb68c9ff9eab986c5d7f32f81d,"SQL: Add context and contextual functions to planner. (#3919)

* SQL: Add context and contextual functions to planner.

Added support for context parameters specified as JDBC connection properties
or a JSON object for SQL-over-JSON-over-HTTP.

Also added features that depend on context functionality:

- Added CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP functions.
- Added support for time zones other than UTC via a ""timeZone"" context.
- Pass down query context to Druid queries too.

Also some bug fixes:

- Fix DATE handling, it was largely done incorrectly before.
- Fix CAST(__time TO DATE) which should do a floor-to-day.
- Fix non-equality comparisons to FLOOR(__time TO X).
- Fix maxQueryCount property.

* Pass down context to nested queries too.",2017-02-15T22:09:14Z
3c54fc912a54af07012441c01bd95e180211f9fb,fix numShards = -1 not being handled correctly (#3937),2017-02-15T02:45:38Z
a459db68b6ff43b285475f3a6cb8381404b4a45d,"Fine grained buffer management for groupby (#3863)

* Fine-grained buffer management for group by queries

* Remove maxQueryCount from GroupByRules

* Fix code style

* Merge master

* Fix compilation failure

* Address comments

* Address comments

- Revert Sequence
- Add isInitialized() to Grouper
- Initialize the grouper in RowBasedGrouperHelper.Accumulator
- Simple refactoring RowBasedGrouperHelper.Accumulator
- Add tests for checking the number of used merge buffers
- Improve docs

* Revert unnecessary changes

* change to visible to testing

* fix misspelling",2017-02-14T20:55:54Z
78b0d134ae144f10f6486bc8df0d0d632fef97f8,"Require Java 8 and include some Java 8 dependencies. (#3914)

* Require Java 8 and include some Java 8 dependencies.

- Upgrade Jetty to 9.3.16.v20170120.
- Upgrade DataSketches to 0.8.4.
- Bundle caffeine-cache by default.
- Still target Java 7 when compiling base Druid classes.

* Update cluster, quickstart docs.

* Remove oraclejdk7 from travis.yml.",2017-02-14T20:51:51Z
28d85702aded503aa49e708771b4cbbbbd73688e,"Fix rolling of request log files. (#3916)

* Use common date format for request log files.

* Remove code duplication in creating logging FileWriter.",2017-02-14T17:33:43Z
af67e8904e2a98f5a5b991c876899c96295d55ec,PreComputedHyperUniquesSerde: Fix formatting. (#3932),2017-02-14T17:32:29Z
a2875a4d917e35bbb28e34e1eeda3fc83e1c619a,pre-computed HLL support for hyperUnique aggregator (#3909),2017-02-13T23:26:20Z
8854ce018ef75670304ada2ab38b173828778c56,"File.deleteOnExit() (#3923)

* Less use of File.deleteOnExit()
 * removed deleteOnExit from most of the tests/benchmarks/iopeon
 * Made IOpeon closable

* Formatting.

* Revert DeterminePartitionsJobTest, remove cleanup method from IOPeon",2017-02-13T23:12:14Z
9dfcf0763a076130b02f7fcf9fdeb96306a1564e,disable javascript execution by default (#3818),2017-02-13T23:11:18Z
8cf7ad1e3a82bec61026e02d8631a97ee35f75c2,druid.coordinator.asOverlord.enabled flag at coordinator to make it an overlord too (#3711),2017-02-13T23:03:59Z
9ab9feced6416869ddd71a45e3119135b8b66872,"Close all aggregators when closing onHeapIncrementalIndex (#3926)

* Close all aggregators when closing onHeapIncrementalIndex

* Aggregators are now handled as Closeables, remove unnecessary mock in test

* Fix variable shadowing",2017-02-13T23:01:27Z
1f263fe50b52446e111ccb570302d971ff789b90,"alert when resetting offsets (#3931)

* alert when resetting offsets

* add more data to alerts",2017-02-13T21:49:24Z
c1eee9bbf3c8b983d56efe7d81a2f166f7c77b9d,"modified ""end"" column to `end` (#3903)

* modified ""end"" column to `end`.  ""end"" is interpretted as a string rather than dereferencing the column value

* SQLMetadataConnector.getQuoteString defines the string that should be used to quote string fields

* positional arguments for String.format

* for Connectors that use "" need to include the \ escape as well",2017-02-13T20:36:27Z
991e2852da7c47b634a01c9c508346e620a7bd14,"Add PostAggregators to generator cache keys for top-n queries (#3899)

* Add PostAggregators to generator cache keys for top-n queries

* Add tests for strings

* Remove debug comments

* Add type keys and list sizes to cache key

* Make post aggregators used for sort are considered for cache key generation

* Use assertArrayEquals()

* Improve findPostAggregatorsForSort()

* Address comments

* fix test failure

* address comments",2017-02-13T20:23:44Z
8e31a465ad9100636f8dbf1a00e90fcf4119ed77,report hand off count finite appenderator driver (#3925),2017-02-13T18:41:24Z
b7a88706f373a1309159a0d2ad16aab3c15735cd,"Add maprfs scheme (#3920)

Add maprfs scheme to JobHelper to treated as HDFS deep storage",2017-02-13T02:37:58Z
38000576eaeac5fff92c2e5bc4bdec66d956c244,"Optimizations of union, intersection and iterators of concise bitsets (part of #3798) (#3883)

* Port of metamx/extendedset#10, metamx/extendedset#13, metamx/extendedset#14, metamx/extendedset#15, metamx/bytebuffer-collections@9b199e334990d16defe003e2b436240c9f60a156, metamx/bytebuffer-collections#38 to Druid, remove unused code from extendedset module

* Remove ConciseSet.modCount

* Replace comments with assertions in ImmutableConciseSet

* Fix comments

* Fix asssertions in ImmutableConciseSet

* Add tests

* Comment fix",2017-02-11T02:02:26Z
33c635aff291504b83a8503d19ded026deee460c,use as() method of base segment in reference counting segment (#3921),2017-02-10T02:24:47Z
ca2b04f0fd00e9c3fac5a3c9184b627c886cbc83,"Add long/float ColumnSelectorStrategy implementations (#3838)

* Add long/float ColumnSelectorStrategy implementations

* Address PR comments

* Add String strategy with internal dictionary to V2 groupby, remove dict from numeric wrapping selectors, more tests

* PR comments

* Use BaseSingleValueDimensionSelector for long/float wrapping

* remove unused import

* Address PR comments

* PR comments

* PR comments

* More PR comments

* Fix failing calcite histogram subquery tests

* ScanQuery test and comment about isInputRaw

* Add outputType to extractionDimensionSpec, tweak SQL tests

* Fix limit spec optimization for numerics

* Add cardinality sanity checks to TopN

* Fix import from merge

* Add tests for filtered dimension spec outputType

* Address PR comments

* Allow filtered dimspecs on numerics

* More comments",2017-02-09T04:39:29Z
e08cd0066b54d8b65ece59ce559fcb6feff9ee6d,verify no duplicate aggregator names in DataSchema (#3917),2017-02-09T00:12:07Z
919158865644ae24afd9e7fbbeb1e9dc97963ccf,Fix mvn javadoc:jar failure due to HadoopFsWrapper. (#3912),2017-02-08T19:54:41Z
97765fdfef7d5640412bec9711c87349595facab,"Simplify LikeFilter implementation of getBitmapIndex, estimateSelectivity. (#3910)

* Simplify LikeFilter implementation of getBitmapIndex, estimateSelectivity.

LikeFilter:
- Reduce code duplication, and simplify methods, at the cost of incurring an extra box
  of ImmutableBitmap into a SingletonImmutableList. I think this is fine, since this
  should be cheap and the code path is not hot (just once per filter).

Filters:
- Make estimateSelectivity public since it seems intended that they be used by Filter
  implementations, and Filters from extensions may want to use them too. Removed
  @VisibleForTesting for the same reason.
- Rename one of the estimatePredicateSelectivity overloads to estimateSelectivity, since
  predicates aren't involved.

* Address PR comments.

* Remove unused import

* Change List to Collection",2017-02-08T19:46:01Z
12317fd00166a22cf6fa31c7b2a668c8a22eaf46,Bump version to 0.10.0-SNAPSHOT. (#3913),2017-02-07T01:54:35Z
ca9f0e2b276e5bc3a8fab402205cbb271f4d6943,"Don't override finalize() and reduce locking in LoadBalancingPool and ReferenceCountedResourceHandler (#3874)

* Specialize LoadBalancingPool as MemcacheClientPool, reduce locking and don't override Object.finalize()

* Remove locking and don't override Object.finalize() in ReferenceCountingResourceHolder

* Add leak counts in ReferenceCountingResourceHolder and MemcacheClientPool. Add tests for ReferenceCountingResourceHolder and MemcacheClientPool

* Fix a race condition in ReferenceCountingResourceHolder.increment()",2017-02-07T01:14:46Z
4c49a545175ece61205f1345fac24c8b3bc01f5c,package contrib extensions as well in separate mvn profile (#3870),2017-02-06T21:13:01Z
ddd8c9ef974c14911df2a851a955ba9d98938889,"Add filter selectivity estimation for auto search strategy (#3848)

* Add filter selectivity estimation for auto search strategy

* Addressed comments

* Lazy bitmap materialization for bitmap sampling and java docs

* Addressed comments.

- Fix wrong non-overlap ratio computation and added unit tests.
- Change Iterable<Integer> to IntIterable
- Remove unnecessary Iterable<Integer>

* Addressed comments

- Split a long ternary operation into if-else blocks
- Add IntListUtils.fromTo()

* Fix test failure and add a test for RangeIntList

* fix code style

* Diabled selectivity estimation for multi-valued dimensions

* Address comment",2017-02-06T19:15:03Z
8a13a8576570d614608e169020136c2e450cfb0e,"Introduce SegmentizerFactory (#3901)

* Introduce SegmentizerFactory
- that knows how to deserialize specific type of segment
- Default implementation is MMappedQueryableSegmentizerFactory which creates QueryableIndexSegment
- Unit test for the default behavior

* review comments",2017-02-06T18:05:12Z
2aa2fa57b5f60fa06851194a6b66dd4cc4869185,Simple doc fix (#3907),2017-02-06T10:22:17Z
93b71e265ee790f86ad42c9e015a134a8135aa13,Extract HLL related code to separate module (#3900),2017-02-03T17:45:11Z
8f4394ca49721738a9abef8badc097399724f73b,Update segments.md (#3904),2017-02-03T16:31:14Z
1aabb45a0972ed673ae5c7a9f5f7d8701b2420cb,"auto reset option for Kafka Indexing service  (#3842)

* auto reset option for Kafka Indexing service in case message at the offset being fetched is not present anymore at kafka brokers

* review comments

* review comments

* reverted last change

* review comments

* review comments

* fix typo",2017-02-02T20:57:45Z
a457cded28b18e5dea75044e267cbae9b78b1338,"Druid Extension to enable Authentication using Kerberos. (#3853)

* Add extension for supporting kerberos security

- This PR adds an extension for supporting druid authentication via
Kerberos.
- Working on the docs.

* Add docs

* review comments

* more review comments

* Block all paths by default

* more review comments - use proper Oid

* Allow extensions to override httpclient for integration tests

* Add kerberos lock to prevent multithreaded issues.

* review comment - remove enabled flag and fix router injection

* Add Cookie Handling and more detailed docs

* review comment - rename DruidKerberosConfig -> AuthKerberosConfig

* review comments

* fix travis failure on jdk7",2017-02-02T20:55:21Z
182261f7131b3a9cf4f50e0e305d9a25017ddd28,Allow configurable temp directory for query processing (#3893),2017-02-02T18:22:28Z
a73f1c9c70bb11ec0b1297f9354f6450eefdfc0f,Make s3 work better (#3898),2017-02-02T18:04:30Z
e6b95e80aacc0cb144616016506feb850aaeb2cc,Remove deprecated Aggregator/AggregatorFactory methods (#3894),2017-02-01T22:43:18Z
151ff6d064d5ff36141f4ac5741111773ca2514b,"flattenSpec: Document that ""expr"" is ignored for type ""root"". (#3884)",2017-01-31T18:27:20Z
17c6512ad83e4fae1031dbda361825ad59ea60d4,"integration-test update - use KafkaProducer in ITKafkaTest and add retries to task submission (#3888)

* use KafkaProducer instead of old Producer in ITKafkaTest

* add retries to OverlordResourceTestClient.submitTask(..)",2017-01-27T15:38:17Z
d3a3b7ba0ca882e089ebd7412930f83e66719755,"Add virtual column types, holder serde, and safety features. (#3823)

* Add virtual column types, holder serde, and safety features.

Virtual columns:
- add long, float, dimension selectors
- put cache IDs in VirtualColumnCacheHelper
- adjust serde so VirtualColumns can be the holder object for Jackson
- add fail-fast validation for cycle detection and duplicates
- add expression virtual column in core

Storage adapters:
- move virtual column hooks before checking base columns, to prevent surprises
  when a new base column is added that happens to have the same name as a
  virtual column.

* Fix ExtractionDimensionSpecs with virtual dimensions.

* Fix unused imports.

* CR comments

* Merge one more time, with feeling.",2017-01-27T02:15:51Z
ac84a3e011b3978652148668a9eb3b0fd95cc473,"SQL: Add resolution parameter, fix filtering bug with APPROX_QUANTILE (#3868)

* SQL: Add resolution parameter to quantile agg, rename to APPROX_QUANTILE.

* Fix bug with re-use of filtered approximate histogram aggregators.

Also add APPROX_QUANTILE tests for filtering and running on complex columns.
Includes some slight refactoring to allow tests to make DruidTables that
include complex columns.

* Remove unused import",2017-01-26T02:39:26Z
75d9e5e7a7cc3ef4c7a474f3329ac86810822187,"DimensionSelector-related bug fixes and optimizations (fixes #3799, part of #3798) (#3858)

*  * Add DimensionSelector.idLookup() and nameLookupPossibleInAdvance() to allow better inspection of features DimensionSelectors supports, and safer code working with DimensionSelectors in BaseTopNAlgorithm, BaseFilteredDimensionSpec, DimensionSelectorUtils;
 * Add PredicateFilteringDimensionSelector, to make BaseFilteredDimensionSpec to be able to decorate DimensionSelectors with unknown cardinality;
 * Add DimensionSelector.makeValueMatcher() (two kinds) for DimensionSelector-side specifics-aware optimization of ValueMatchers;
 * Optimize getRow() in BaseFilteredDimensionSpec's DimensionSelector, StringDimensionIndexer's DimensionSelector and SingleScanTimeDimSelector;
 * Use two static singletons, TrueValueMatcher and FalseValueMatcher, instead of BooleanValueMatcher;
 * Add NullStringObjectColumnSelector singleton and use it in MapVirtualColumn

* Rename DimensionSelectorUtils.makeNonDictionaryEncodedIndexedIntsBasedValueMatcher to makeNonDictionaryEncodedRowBasedValueMatcher

* Make ArrayBasedIndexedInts constructor private, replace it's usages with of() static factory method

* Cache baseIdLookup in ForwardingFilteredDimensionSelector

* Fix a bug in DimensionSelectorUtils.makeRowBasedValueMatcher(selector, predicate, matchNull)

* Employ precomputed BitSet optimization in DimensionSelector.makeValueMatcher(value, matchNull) when lookupId() is not available, but cardinality is known and lookupName() is available

* Doc fixes

* Addressed comments

* Fix

* Fix

* Adjust javadoc of DimensionSelector.nameLookupPossibleInAdvance() for SingleScanTimeDimSelector

* throw UnsupportedOperationException instead of IAE in BaseTopNAlgorithm",2017-01-25T23:28:27Z
3136dfa421833aa0d83fef7f5b08ebf697088b2d,"LikeFilter: Read value lazily when doing a prefix-based match. (#3880)

This speeds up cases where we don't actually need to read the value,
such as ""LIKE 'foo%'"".",2017-01-25T21:22:07Z
b3dae0efc352c609fba4c4e008dc9ecb97532845,catch all errors (#3844),2017-01-25T01:01:30Z
515caa8a852f257075f17aa5d32a218e10449a15,"ITKafkaIndexingServiceTest fixes (#3872)

* remove wait between sends, wait for ingestion to complete before querying

send fixed number of events

more fixes

* handle interrupted exception

* remove while

* review comments",2017-01-22T22:37:35Z
efb1b40fe01bd345f99a2437f9795d99f0089800,build sqlserver-metadata-storage contrib extension (#3871),2017-01-20T22:39:15Z
2b8d3c102ba2d0a2de0ea5fce0aea127f6689a01,"Remove throttling on drop segments (#3736)

* Remove throttling on drop

* Throttle loadqueuepeon segment change requests to ZK

* Make initial delay configurable, add docs, shutdown gracefully

* Make loadqueuepeon repeat delay configurable",2017-01-20T18:02:19Z
bb7c496d883d6dc921e6412fc8a2e1493f287704,SQL: Use topN for single-dim queries with LIMIT but no ORDER BY. (#3867),2017-01-20T17:59:28Z
af93a8d1894374b69adfef9e086fb925a7bc27bd,"Sequences refactorings and removed unused code (part of #3798) (#3693)

* Removing unused code from io.druid.java.util.common.guava package; fix #3563 (more consistent and paranoiac resource handing in Sequences subsystem); Add Sequences.wrap() for DRY in MetricsEmittingQueryRunner, CPUTimeMetricQueryRunner and SpecificSegmentQueryRunner; Catch MissingSegmentsException in SpecificSegmentQueryRunner's yielder.next() method (follow up on #3617)

* Make Sequences.withEffect() execute the effect if the wrapped sequence throws exception from close()

* Fix strange code in MetricsEmittingQueryRunner

* Add comment on why YieldingSequenceBase is used in Sequences.withEffect()

* Use Closer in OrderedMergeSequence and MergeSequence to close multiple yielders",2017-01-20T04:07:43Z
9cc3015ddd6e57c3604e4c566f771f620791fa7c,"Bypass Calcite's SemiJoinRule and use our own. (#3843)

This simplifies DruidSemiJoin, which no longer needs to add aggregation back
in. It also allows some more kinds of queries to plan properly, like the one
added in ""testTopNFilterJoin"".",2017-01-20T03:51:14Z
d51f5e058d2b21875a029689566fbc8855e3c79a,"SQL: Ditch CalciteConnection layer and add DruidMeta, extension aggregators. (#3852)

* SQL: Ditch CalciteConnection layer and add DruidMeta, extension aggregators.

Switched from CalciteConnection to Planner, bringing benefits:

- CalciteConnection's JDBC interface no longer sits between the SQL server
  (HTTP/Avatica) and Druid's query layer. Instead, the SQL servers can use
  Druid Sequence objects directly, reducing overhead in the query return path.

- Implemented our own Planner-based Avatica Meta, letting us control
  connection timeouts and connection / statement limits. The previous
  CalciteConnection-based implementation didn't have any limits or timeouts.

- The Planner interface lets us override the operator table, opening up
  SQL language extensions. This patch includes two: APPROX_COUNT_DISTINCT
  in core, and a QUANTILE aggregator in the druid-histogram extension.

Also:

- Added INFORMATION_SCHEMA metadata schema.

- Added tests for Unicode literals and escapes.

* Verify statement is actually open before closing it.

* More detailed INFORMATION_SCHEMA docs.",2017-01-20T00:32:20Z
33ae9dd485e92f76174675ecb067e4c90efd06d7,"streaming version of select query (#3307)

* streaming version of select query

* use columns instead of dimensions and metrics;prepare for valueVector;remove granularity

* respect query limit within historical

* use constant

* fix thread name corrupted bug when using jetty qtp thread rather than processing thread while working with SpecificSegmentQueryRunner

* add some test for scan query

* add scan query document

* fix merge conflicts

* add compactedList resultFormat, this format is better for json ser/der

* respect query timeout

* respect query limit on broker

* use static consts and remove unused code",2017-01-19T22:09:53Z
ae5a349a54e7358e8fa9ab23cfafe6554dd7d8d7,"Exclude the transitive dependency LGPL jar since it is not needed (#3865)

* Exclude the transitive dependency LGPL jar since it is not needed

* add reason why exclude

* exclude from the root dependency

* add banning tool  to enforce exclusions",2017-01-19T19:49:08Z
ff52581bd305c8b64d4f040cc37fa8310fc69ef3,"IndexTask improvements (#3611)

* index task improvements

* code review changes

* add null check",2017-01-18T22:24:37Z
7004f5d499e5c4cad724e2fdc783f889f5c5d616,make ITKafkaTest less non-deterministic (#3856),2017-01-17T22:52:51Z
e550d48772ae44206be31f0c78c0e8ea96275cdd,"Using fully qualified hdfs path. (#3705)

* Using fully qualified hdfs path.

* Review changes.

* Remove unused imports.

* Variable name change.",2017-01-17T20:40:22Z
558dc365a4e16ab980aab59ebf1b11a184457979,renaming classes to be run by mvn and comment non operational tests (#3847),2017-01-17T19:59:12Z
dd0c4e2ead50bdbbf9ef9d8c886f908d7628f686,"Migrating extendedset from Metamarkets. (#3694)

* Migrating extendedset from Metamarkets.

* Notice change

* More details in NOTICE

* NOTICE formatting.

* suppress header checkstlye for extendedset.",2017-01-17T18:10:27Z
b0232b4e403b7e175f876d3224a0a36654974416,Replace our AggregateValuesRule with Calcite's. (#3845),2017-01-12T21:51:50Z
31bea380eb3d91bd6efa20bb9d0c8a8c80344870,Updated Apache Zookeeper to the latest stable version (#3841),2017-01-12T21:39:29Z
e86859b228a809cb70001097ba315f345cc70edb,"SQL support for nested groupBys. (#3806)

* SQL support for nested groupBys.

Allows, for example, doing exact count distinct by writing:

  SELECT COUNT(*) FROM (SELECT DISTINCT col FROM druid.foo)

Contrast with approximate count distinct, which is:

  SELECT COUNT(DISTINCT col) FROM druid.foo

* Add deeply-nested groupBy docs, tests, and maxQueryCount config.

* Extract magic constants into statics.

* Rework rules to put preconditions in the ""matches"" method.",2017-01-12T02:32:53Z
76620615a1af511d83ed9898dc22c781abbde72d,Properly respect the enableAvatica and enableJsonOverHttp options. (#3834),2017-01-11T20:43:34Z
d80bec83ccf4bfaf42d31bcfb0564ee1eba483ca,"Enable auto license checking  (#3836)

* Enable license checking

* Clean duplicated license headers",2017-01-11T02:13:47Z
c099977a5b7cf4cfeed722abc616375db60743cd,"Add an option to SearchQuery to choose a search query execution strategy (#3792)

* Add an option to SearchQuery to choose a search query execution strategy.

Supported strategies are
1) Index-only query execution
2) Cursor-based scan
3) Auto: choose an efficient strategy for a given query

* Add SearchStrategy and SearchQueryExecutor

* Address comments

* Rename strategies and set UseIndexesStrategy as the default strategy

* Add a cost-based planner for auto strategy

* Add document

* Fix code style

* apply code style

* apply comments",2017-01-11T02:04:20Z
ce0049d8ff98e9c0b21a35a92039af2de3540422,DruidCoordinator: Leave the ServerInventoryView running when we lose leadership. (#3830),2017-01-09T07:06:05Z
229559b46ac9eb77ad1dbad69b9d6d9683761a4c,Make TaskLockbox's ReentrantLock fair (#3828),2017-01-07T20:34:47Z
3c012305d145c3c6da430748f2c3f05e6f980c62,SqlResource: Fix incorrect labeling of aliased columns. (#3829),2017-01-07T20:33:53Z
97ce006719be2c7114ddd070f54d1f24ebbc6701,use correct joda-time (#3827),2017-01-07T00:31:05Z
a4f81a6471d7d7e47b14141eb3c3e8810b8b3830,Update to Calcite 1.11.0. (#3825),2017-01-06T22:45:17Z
2aa8385fc0a6cec06e4c627e25f32bfc4188b93b,Include loadqueuepeon size to compute disknormalized cost (#3826),2017-01-06T22:30:23Z
dddeae813a8da4f87827272df6713cf542700335,"Update caching.md typo (#3824)

* Update caching.md

Typo of Command vs Comma

* Update index.md

Fixing `Command` typo",2017-01-06T20:14:07Z
a5f82e8acfec1c5221eee73d00ae92f89df25496,"Randomly choose a server when multiple best servers are available (#3822)

* Randomly choose a server when multiple best servers are available

* Use one pass instead of two

* Fix code style issues",2017-01-06T05:34:05Z
3c63cff57abc6d3c64d521c365b7f87db4197f26,"Remove makeMathExpressionSelector from ColumnSelectorFactory. (#3815)

* Remove makeMathExpressionSelector from ColumnSelectorFactory.

* Add @Nullable annotations in places, fix Number.class check.

* Break up createBindings, add tests.

* Add null check.",2017-01-06T02:06:38Z
7ced0e8759143bf35f598f0a48c192bb21e5c6be,"log sizes of created smoosh files (#3817)

* log when merging of intermediate segments starts during batch ingestion

* log sizes of created smoosh files",2017-01-05T00:52:22Z
220ca7ebb65829df2d5eb8460735cc3855c728c2,Ignore DimFilterHavingSpec testConcurrentUsage. (#3814),2017-01-04T00:43:58Z
1f35120c7e1375f1915729d4e854c659ffc34b54,"Downgrade to avatica-server 1.8.0, skip avatica-core. (#3813)

This matches the version bundled by Calcite 1.10.0.",2017-01-04T00:00:37Z
d8702ebece43a7103766240e218aa1f9ac441627,"Filters: Use ColumnSelectorFactory directly for building row-based matchers. (#3797)

* Filters: Use ColumnSelectorFactory directly for building row-based matchers.

* Adjustments based on code review.

- BoundDimFilter: fewer volatiles, rename matchesAnything to !matchesNothing.
- HavingSpecs: Clarify that they are not thread-safe, and make DimFilterHavingSpec
  not thread safe.
- Renamed rowType to rowSignature.
- Added specializations for time-based vs non-time-based DimensionSelector in RBCSF.
- Added convenience method DimensionHanderUtils.createColumnSelectorPlus.
- Added singleton ZeroIndexedInts.
- Added test cases for DimFilterHavingSpec.

* Make ValueMatcherColumnSelectorStrategy actually use the associated selector.

* Add RangeIndexedInts.

* DimFilterHavingSpec: Fix concurrent usage guard on jdk7.

* Add assertion to ZeroIndexedInts.

* Rename no-longer-volatile members.",2017-01-03T22:30:22Z
80e2394f948562ecff670dbec899694d2671d7ca,"Allow users to specify additional command line args for creating druid package (#3812)

* Allow users to specify additional command line args for creating tar balls

This PR allows users to specify additional command line options to the
pull deps command while creating druid distribution.
e.g. To also package graphite-emitter in druid tarball one can run -
mvn package -Ddruid.distribution.pulldeps.opts='-c
io.druid.extensions.contrib:graphite-emitter'

* Set default to --clean instead of blank value",2017-01-03T19:44:35Z
351d570684fe44f160b878ee5b0d48f6d83eb1ee,Improve startup script - create PID and LOG dir if they do not exist (#3808),2017-01-02T17:20:22Z
02519d5b64f3e09f2c4909fd63e6909df1924b80,"Exhibitor Support (#3664)

* allow JsonConfigTesterBase to treat the fields of collections

* [Feature] Exhibitor Support (#3664)

This patch provides the integration of Druid & Netflix Exhibitor. Druid
currently use Apache Curator as ZooKeeper client. Curator can be
integrated with Exhibitor to achieve a live/updating list of the
ZooKeeper ensemble. This patch enables Druid to use this features.",2017-01-02T17:15:36Z
49d71e9b385968fe5ffb985aa889b0039b7c9e34,Fix the build after #3697 (#3807),2016-12-26T23:06:48Z
33800122ad08c5ec8ea97ad370d0c66e11b608d7,"Don't return leaked Objects back to StupidPool, because this is dangerous. Reuse Cleaners in StupidPool. Make StupidPools named. Add StupidPool.leakedObjectCount(). Minor fixes (#3631)",2016-12-26T06:35:35Z
76cb06a8d8161d29d985ef048b89e6a82b489058,"Lookup cache refactoring (the main part of #3667) (#3697)

* Lookup cache refactoring (the main part of druid-io/druid#3667)

* Use PowerMock's static methods in NamespaceLookupExtractorFactoryTest

* Fix KafkaLookupExtractorFactoryTest

* Use VisibleForTesting annotation instead of Javadoc comment

* Create a NamespaceExtractionCacheManager separately for each test in NamespaceExtractionCacheManagersTest

* Rename CacheScheduler.NoCache.ENTRY_DISPOSED to ENTRY_CLOSED

* Reduce visibility of NamespaceExtractionCacheManager.cacheCount() and monitor() implementations, and don't run NamespaceExtractionCacheManagerExecutorsTest with off-heap cache (it didn't before)

* In NamespaceLookupExtractorFactory, use safer idiom to check if CacheState is NoCache or VersionedCache

* More logging in CacheHandler constructor and close(), VersionedCache.close()

* PR comments addressed

* Make CacheScheduler.EntryImpl AutoCloseable, avoid 'dispose' verb in comments, logging and naming in CacheScheduler in favor of 'close'

* More Javadoc comments to CacheScheduler

* Fix NPE

* Remove logging in OnHeapNamespaceExtractionCacheManager.expungeCollectedCaches()

* Make NamespaceExtractionCacheManagersTest.testRacyCreation() to have similar load to what it be before the refactoring

* Unwrap NamespaceExtractionCacheManager.scheduledExecutorService from unneeded MoreExecutors.listeningDecorator() and specify that this is ScheduledThreadPoolExecutor, which ensures happens-before between periodic runs of the tasks

* More comments on MapDbCacheDisposer.disposed

* Replace concat with Long.toString()

* Comment on why NamespaceExtractionCacheManager.scheduledExecutorService() returns ScheduledThreadPoolExecutor

* Place logging statements in VersionedCache.close() and CacheHandler.close() after actual closing logic, because logging may fail

* Make JDBCExtractionNamespaceCacheFactory and StaticMapExtractionNamespaceCacheFactory to try to close newly created VersionedCache if population has failed, as it is done already in URIExtractionNamespaceCacheFactory

* Don't close the whole CacheScheduler.Entry, if the cache update task failed

* Replace AtomicLong updateCounter and firstRunLatch with Phaser-based UpdateCounter in CacheScheduler.EntryImpl",2016-12-24T02:04:27Z
0e5bd8b4d421c24e036e4104752f0e40c6d6a66a,"Add dimension type-based interface for query processing (#3570)

* Add dimension type-based interface for query processing

* PR comment changes

* Address PR comments

* Use getters for QueryDimensionInfo

* Split DimensionQueryHelper into base interface and query-specific interfaces

* Treat empty rows as nulls in v2 groupby

* Reduce boxing in SearchQueryRunner

* Add GroupBy empty row handling to MultiValuedDimensionTest

* Address PR comments

* PR comments and refactoring

* More PR comments

* PR comments",2016-12-22T03:11:37Z
4ca3b7f1e43245f59737756201d037c5b7d0e8a2,"overlord helpers framework and tasklog auto cleanup (#3677)

* overlord helpers framework and tasklog auto cleanup

* review comment changes

* further review comments addressed",2016-12-21T23:18:55Z
6440ddcbca1e38847b726b170b68c54221cc5e31,"Fix #3795 (Java 7 compatibility). (#3796)

* Fix #3795 (Java 7 compatibility).

Also introduce Animal Sniffer checks during build, which would
have caught the original problems.

* Add Animal Sniffer on caffeine-cache for JDK8.",2016-12-21T18:19:13Z
c0c34f82ad24098f3820e81b9feeef7f2028e0ba,"Fix reindexing of segments in Google Cloud Storage (#3788)

Google Cloud Storage allows `:` in paths. For this reason `google` was
not added to https://github.com/druid-io/druid/blob/da007ca3c2a7acec4b86186de95bc370d6867f6a/indexing-hadoop/src/main/java/io/druid/indexer/JobHelper.java#L585
Normally this is not an issue but when reindexing segments the Hadoop
code for `getSplits` trips up on the `:` and returns:
`Relative path in absolute URI`
This patch URL encodes the `:` character making it work in Hadoop as
well.",2016-12-21T01:16:33Z
c5df30d813d248b6021a5744ecef8d6af4f8d5be,"fix JodaUtils.condenseIntervals(..) to correctly take end or current/next interval on overlap (#3793)

* remove unused duplicate JodaUtils.java

* fix JodaUtils.condenseIntervals(..) to correctly take end or current/next interval on overlap",2016-12-20T20:07:23Z
fd14997b1d06b62ccc98b5ba94af2b27da661b63,fix MetadataStorage binding so that it is always Noop except for coordinator iff derby is configured (#3789),2016-12-20T00:24:09Z
ebb4952f3fbac502bdf0640099a7734aaf698464,SQL: Support for descending timeseries. (#3790),2016-12-19T19:19:15Z
f576a0ff147ac636a663ad1663ecb0597b261b7e,"Contrib Extension for Ambari Metrics Emitter (#3767)

* Contrib Extension for Ambari Metrics Emitter

extension to enable druid to send metrics to ambari metrics server
(https://cwiki.apache.org/confluence/display/AMBARI/Metrics)

review comments

switch to public repo

* review comments

* add docs

* fix pom version

* Add link for doc page in extensions.md

* remove unused imports

* review comments

review comments

remove unused dependency

review comment",2016-12-19T19:12:47Z
35160e55953a476ca17b8676bf984a68a2a8f192,"Add metrics for Query Count statistics (#3470)

* Add metrics for Query Count statistics

This PR adds a new metrics monitor “QueryCountStatsMonitor” which emits
three new metrics -
1) query/success/count - number of successful queries
2) query/failed/count - number of failed queries
3) query/interrupted/count - number of interrupted/timedout queries

fix bindings

* make fields final

* fix imports

* AsyncQueryForwardingServlet implement QueryStatsProvider

* remove unused import",2016-12-19T17:47:58Z
8eee259629684b7a88955f296e99934d99662125,add documentation on segments generated (#3785),2016-12-19T17:41:47Z
da007ca3c2a7acec4b86186de95bc370d6867f6a,Replace caravel with superset (#3780),2016-12-17T04:47:52Z
dd63f543251927ef2410baa69666db638d1ede04,Built-in SQL. (#3682),2016-12-17T01:15:59Z
2bfcc8a592476c9b2c72d8bab88844065a7d7e01,"First and Last Aggregator (#3566)

* add first and last aggregator

* add test and fix

* moving around

* separate aggregator valueType

* address PR comment

* add finalize inner query and adjust v1 inner indexing

* better test and fixes

* java-util import fixes

* PR comments

* Add first/last aggs to ITWikipediaQueryTest",2016-12-16T23:26:40Z
93c34d3c3fce0ac10865f1babfd60fd48803068f,Ability to add hadoop config directory via environment variable (#3781),2016-12-16T19:19:15Z
8cfcb95fbc23b090deb5371e90c3650ac547cec8,"Add Filtered and Composing request loggers (#3469)

* Add Filtered and Composing request loggers

Add Filtered and Composite Request loggers
- enables users to filter request logs for slow queries.

fix test

* review comments

* review comment

* remove unused import",2016-12-16T19:18:32Z
5e39578eeedb03634affc57c155137af9f671ac8,"Enable parallel test (#3774)

* Enable parallel test

* Remove unnecessary NotThreadSafe annocation

* Randomize the start port when finding available ports

* Fix test failure

* Change to handle all negatives",2016-12-15T05:05:56Z
ed322a4bebc89ba666adefaf9c1e6e298e44be35,remove size from default analysisTypes list for segmentMetadata query (#3773),2016-12-14T02:01:21Z
7b18fb79e0d6ff9f28b265b7fc116f8e481b9c75,"as per @itaiy suggested will close then try to connect. (#3669)

* as per @itaiy suggested will close then try to connect.

* use close instead of flush

* git fix comments

* break the loop in case of interrupted",2016-12-13T18:20:28Z
469ab210919a26bad235cf337cd3c322371302fc,"[Feature] Thrift support for realtime and batch ingestion (#3418)

* Thrift ingestion plugin

1. thrift binary is platform dependent, use scrooge to generate java files to avoid style check failure
2. stream and hadoop ingesion are both supported, input format can be sequence file and lzo thrift block file.
3. base64 and protocol aware

change header

* fix conlicts in pom",2016-12-13T18:05:15Z
48b22e261a01ae6baf24023bb00b8ae910c7c725,"support atomic writes for local deep storage (#3521)

* Use atomic writes for local deep storage

* fix pr issues

* use defaultObjMapper for test

* move tmp pushes to a intermediate dir

* minor refactor",2016-12-13T18:03:22Z
4be3eb0ce7eb785491ef83978ea5df24862a19c1,"report message gap, source gap and sink count in RealtimePlumber (#3744)

* report message gap, source gap and sink count in RealtimePlumber

* report message gap, sink count in Appenderator

* add ingest/events/sourceGap in metrics.md

* remove source gap",2016-12-13T17:23:02Z
07384d6f4001e4719fe54e95d75d53d825d46089,Update Apache curator to a non-leaky version (see CURATOR-354) (#3769),2016-12-12T17:52:40Z
0b9dff0bc16475dd1d9239bd727e7dde57e659b3,"fix worker thread pool exhaustion bug (#3760)

* fix worker thread pool exhaustion bug

* code review changes

* code review changes",2016-12-09T23:23:11Z
7f087cdd3b5c6c48f1a41ef31be1fab603c7d822,allow Kafka consumer group.id to be overriden by config (#3765),2016-12-08T23:53:13Z
6386e6a4dcdd9e5565348c5a173fa15508d809b1,"root and java-util pom cleanup (#3764)

* Remove bytebuffer-collections dependency from the root pom and java-util pom cleanup.

* Remove json-smart exclusion from root pom",2016-12-08T19:30:19Z
880a021a7ae0c627c5c7b091fb3e010c4420adfa,"Fix missed travis failures from PR 3567 and 2798 (#3761)

* Fix checkstyle failures from PR 3567

* Fix GranularityPathSpecTest compile failure",2016-12-08T03:07:31Z
f794246ec1e681c666579abdc0c5fccf1f1b8098,"Trimming out outside of given interval (#2798)

* Trimming out outside of given interval (Fix for #2659)

* addressed comments",2016-12-08T02:05:50Z
bb9e35e1af7695a38b5d217db3546c3bd09bb399,Add Greatest and Least post aggregations (#3567),2016-12-08T01:58:23Z
943982b7b0059d538002a05259cd4c801b901518,"Configurable HTTP compression. (#3759)

* Configurable HTTP compression.

* Call real-time nodes real-time processes in docs.",2016-12-08T01:40:39Z
d9807835f9b75e36ba7d352d1e5f2d22b1bdd050,Add BitmapIterationBenchmark and update to JMH 1.17.2 (#3751),2016-12-07T23:50:33Z
949e65165cddf9062e059d40b2c13608713cb993,"Bitset iteration optimization and improve safety (#3753)

* Deduplicate looking for bitset.nextSetBit() in BitSetIterator.next() and hasNext()

* Add BitmapIterationTest

* More elaborate comment on why Roaring is not tested in BitmapIterationTest",2016-12-07T23:49:16Z
87c61fa74915089bfca0a26def829977c9a6bc1e,"Refactor boolean cast code, add tests (#3016)",2016-12-07T21:10:39Z
70e83bea6d4f9a4b97bc0c6797e1e20aac168ce4,"Fix PathChildrenCache's ExecutorService leak (#3726)

* Fix PathChildrenCache's executorService leak in Announcer, CuratorInventoryManager and RemoteTaskRunner

* Use a single ExecutorService for all workerStatusPathChildrenCaches in RemoteTaskRunner",2016-12-07T21:00:10Z
dc8f814accab73f3b8fa318d8592d5c3e5b76bbf,"Optimize Iterator<ImmutableBitmap> implementation inside Filters.matchPredicate() so that it doesn't emit empty bitmap in the end of the iteration, and make it to follow Iterator contract, that is throw NoSuchElementException from next() if there are no more bitmaps (#3754)",2016-12-07T20:54:09Z
361af4c94f1514cd9fd8a5f49e2bfdb514e7526a,"Wait for any pending realtime task to complete before disabling datasource (#3757)

Noticed this in our internal testing, sometimes realtime index tasks in
kafkaIndexing service can get stuck waiting for handoff if datasource
is disabled before there task completion.
This is a workaround to ensure integration tests do not hit this case
until https://github.com/druid-io/druid/issues/1729 is fixed.",2016-12-07T18:17:16Z
06d0ef9c6c63426aaeb9237cda04e323b5294692,allow and load extensions with absolute paths in druid.extensions.loadList (#3747),2016-12-07T01:40:23Z
d1896a2d62dffe5dd2f3b1e0750c0f2aaf73fd33,Disable flush after every ObjectMapper write (#3748),2016-12-07T00:45:23Z
b1bac9f2d3b3456d2b9872cee9c29c937bebc9e5,"groupBy v2: Ignore timestamp completely when granularity = all, except for the final merge. (#3740)

* GroupByBenchmark: Add serde, spilling, all-gran benchmarks.

Also use more iterations.

* groupBy v2: Ignore timestamp completely when granularity = all, except for the final merge.

Specifically:

- Remove timestamp from RowBasedKey when not needed
- Set timestamp to null in MapBasedRows that are not part of the final merge.",2016-12-07T00:17:32Z
f995b1426f15d14d7012e212af57dd7e9bd611c5,retry loadSegment with all locations (#3681),2016-12-06T20:00:59Z
5440a06b2db1873f2fc94980e9fec9d3f83cbc76,"make sure CliCoordinator initializes and starts DerbyMetadataStorage first if configured (#3700)

* make sure CliCoordinator initializes and starts DerbyMetadataStorage first if configured

* Revert ""make sure CliCoordinator initializes and starts DerbyMetadataStorage first if configured""

This reverts commit 54f5644054626d4a9e2448bb4bd5e6ce9a9fca1d.

* make sure CliCoordinator initializes and starts DerbyMetadataStorage first if configured",2016-12-06T18:22:04Z
45da7e48f1f48e71bc0fa74882de54a9eb4734b6,"groupBy sort results by (dimensions,timestamp) instead of (timestamp,dimension) (#3672)

* sortByDimsFirst flag for groupBy query

* Remove need for KeyType in Grouper<KeyType> to be Comparable<KeyType>

* fix review comments

* fix review comments regarding removing code duplication of dim/time comparison

* move comparator for KeyType object to KeySerdeFactory so that creation of comparator does not need KeySerde

* remove unnecessary system.out.println

* make access static var NATURAL_NULLS_FIRST directly

* further review comments addressing",2016-12-06T17:48:56Z
d904c79081aace3e4629fc506a0ef7ac839bafab,"Normalized Cost Balancer (#3632)

* Normalized Cost Balancer

* Adding documentation and renaming to use diskNormalizedCostBalancer

* Remove balancer from the strings

* Update docs and include random cost balancer

* Fix checkstyle issues",2016-12-06T01:18:20Z
c74d267f50bc255bbde6f67420bd870b1252dbab,"Support virtual column for select query (#2511)

* Support virtual column for select query

* Addressed comments",2016-12-05T23:14:35Z
4e67dd28c0e785e8765b5110864b0d882594eeeb,RemoteTaskRunnerConfig: Fix Guice error on startup. (#3737),2016-12-05T18:49:53Z
ff420584534920506c98699bd82ab88586feb5c8,Expressions: Allow escapes in quoted identifiers. (#3735),2016-12-05T18:47:55Z
b64e06704e928d15d263beb395a4265a36f99e3e,Fix SingleScanTimeDimSelector when an extractionFn returns null for a timestamp. (#3732),2016-12-02T23:27:54Z
f4cc8c2b2f25cba84cfd2a6f5fdb8418967c1099,IndexBuilder: Close IncrementalIndex when done. (#3734),2016-12-02T22:56:34Z
353fee79dd725d204ca520e7c6ea6316775eda07,"Add ""asMillis"" option to ""timeFormat"" extractionFn. (#3733)

This is useful for chaining extractionFns that all want to treat time as millis,
such as having a javascript extractionFn after a timeFormat.",2016-12-02T21:45:16Z
102375d9bbc2ad577a4bbf8e51b2586278f1681e,"Add ""strlen"" extractionFn. (#3731)",2016-12-02T20:08:51Z
4c5d10f8a3ac80f6e627f6a81df99a73d6d000a1,"Add DimFilterHavingSpec. (#3727)

* Add DimFilterHavingSpec.

* Add test for DimFilterHavingSpec with extractionFns.",2016-12-02T18:04:30Z
a8069f2441b6c11f11306b3bc5b34cb9841098ff,"Retry on dataSource metadata CAS failures where retrying might help. (#3728)

This retries when the start condition is met but SELECT -> INSERT/UPDATE
fails, which indicates a race. If the start condition isn't met, there
won't be any retrying.",2016-12-01T18:50:15Z
27ab23ef448cbb291a6f26dd5a72396ce7e7fbde,"Don't update segment metadata if archive doesn't move anything (#3476)

* Don't update segment metadata if archive doesn't move anything

* Fix restore task to handle potential null values

* Don't try to update empty metadata

* Address review comments

* Move to druid-io java-util",2016-12-01T15:49:28Z
68735829ca49e56e6de7f006a7aab428c6e043c7,"Add, fix equals, hashCode, toString on various classes. (#3723)

* TimeFormatExtractionFn: Add toString.

* InDimFilter: Add toString, allow accepting any Collection of values.

* DimensionTopNMetricSpec: Fix toString.

* InvertedTopNMetricSpec: Add toString.

* HyperUniqueFinalizingPostAggregator: Add equals, hashCode, toString.",2016-12-01T03:00:14Z
477e0cab7c0449fc386dc82df4479bb2b997024c,"Filter fixes and tests (#3724)

* More robust Filter tests.

All Filter tests now exercise the CNF and post-filtering features.

* Fixes to RowBasedValueMatcherFactory and to bound filters.

- Change Comparables to Strings in ValueMatcher related code.
- Break out RowBasedValueMatcherFactory, fix a variety of issues around nulls, and add tests.
- Fix bound filters on long columns with non-numeric bounds, and add tests.",2016-12-01T00:10:05Z
e4465e63bd3393c137fb59067dab0ccdc8f9021e,"Fix ordering of sections on dimensionspecs.md. (#3722)

The Filtered and List DimensionSpecs were mixed in with the extraction functions.",2016-11-30T00:28:36Z
877992fe638b7d80c8fd9b90d811709200081664,use sync kafka producer for deterministic test (#3721),2016-11-29T18:04:51Z
2640d170c327b65297c58fa5452fe1b4bd6903f3,"Blacklist workers if they fail for too many times (#3643)

* Blacklist workers if they fail for too many times

* Adding documentation

* Changing to timeout to period and updating docs

* 1. Add configurable maxPercentageBlacklistWorkers
2. Rename variable

* Change maxPercentageBlacklistWorkers to double

* Remove thread.sleep",2016-11-29T07:08:56Z
6922d684bf3d270d774d7cf1bc0926b11a957e33,"GroupBy: Validation of output names, and a gross hack for v1 subqueries. (#3686)

v1 subqueries try to use aggregators to ""transfer"" values from the inner
results to an incremental index, but aggregators can't transfer all kinds of
values (strings are a common one). This is a workaround that selectively
ignores what the outer aggregators ask for and instead assumes that we know
best.

These are in the same commit because the name validation changed the kinds of
errors that were thrown by v1 subqueries.",2016-11-29T07:05:03Z
9f7050e221768aa2893caa0745f0dc69ef4edd45,Fix some grammar and spelling mistakes (#3717),2016-11-28T19:49:30Z
c070b4a816c7c0a5fbdd755a7c801eede01a7b03,"Fix concurrency defects, remove unnecessary volatiles (#3701)",2016-11-23T00:42:28Z
7d37f675bae44400dafac9de48d74bfd8f8ba655,fix the documented property name for specifying avro reader schema (#3708),2016-11-22T23:02:41Z
7ee6bb74109efaf2a1b88ad5faa14a110f377da5,"option to reset offest automatically in case of OffsetOutOfRangeException (#3678)

* option to reset offset automatically in case of OffsetOutOfRangeException
if the next offset is less than the earliest available offset for that partition

* review comments

* refactoring

* refactor

* review comments",2016-11-21T22:29:46Z
7c63bee7f5489a476114fb98678bfa0319cc49af,Add mapreduce.job.classloader.system.classes property to 'Other Hadoop Versions' docs (#3706),2016-11-19T00:16:50Z
7b56cec3b9e913b7d04ba9d174ef33ee48601816,Fix resource leaks (#3702),2016-11-18T15:51:36Z
7e80d1045a2c69567a0a9d28cfabf8404ccdf1c1,"Exercise v2 engine in the groupBy aggregator and multi-value dimension tests. (#3698)

This also involved some other test changes:

- Added a factory.mergeRunners step to AggregationTestHelper's groupBy chain, since the v2
  engine does merging there.
- Changed test byteBuffer pools from on-heap to off-heap to work around
  https://github.com/DataSketches/sketches-core/pull/116 for datasketches tests.",2016-11-17T04:02:25Z
7d36f540e809198206238c93f253ce54e4deed03,"WIP: Add Google Storage support (#2458)

Also excludes the correct artifacts from #2741",2016-11-16T08:36:45Z
607f64376c86f2247ec334f92d5f70375da50f78,Update branch in deploy-docs.sh. (#3695),2016-11-15T21:46:46Z
094f5b851b90c79c3ea67c26edd18f46820da4b1,"Support Min/Max for Timestamp (#3299)

* Min/Max aggregator for Timestamp

* remove unused imports and method

* rebase and zip the test data

* add docs",2016-11-15T07:00:21Z
2df98bcaa680ef79ce8211be5a12f6744ef4c814,Fixed Missing commas in json example of Lookup (#3680),2016-11-15T05:56:18Z
bb2663628961adf173557b07df07a2df039ffe86,"Constant flattening in math expression (#3090)

* Constant flatteing in math expression

* Addressed comments and fixed some bugs

* Addressed comments",2016-11-14T22:14:10Z
9ad34a3f03ffc1e98a74379a9929d08e7b8394af,"groupBy v1: Force all dimensions to strings. (#3685)

Fixes #3683.",2016-11-14T17:30:18Z
bcd20441be05623d003d4446bf58f0463e73df37,Make buildV9Directly the default. (#3688),2016-11-14T17:29:32Z
7c0f462fbc12dfa6e24016673cca83b82539c83f,fix bug in StringDimensionHandler and add a cli tool for validating segments (#3666),2016-11-12T02:46:25Z
988d97b09c06e5b72e6f8780b6dfc556253e602b,"Unwrap exceptions from RuntimeException in URIExtractionNamespaceCacheFactory.populateCache() (part of #3667) (#3668)

* Unwrap exceptions from RuntimeException in URIExtractionNamespaceCacheFactory.populateCache()

* Fix tests",2016-11-12T01:25:41Z
fbbb55f8673ec8c5fb3fe025bb910f8f583c23d8,"Update emitter dependency to 0.4.0 and emit ""version"" dimension for all druid metrics (#3679)

* Update emitter dependency to 0.4.0 and emit ""version"" dimension for all druid metrics, not only query metrics

* Remove unused imports

* Use empty string instead of ""testing-version"" as a version placeholder",2016-11-11T23:17:27Z
3e408497b35cfc80f0815708f9fd235cdf6fd44f,"Migrating  bytebuffercollections from Metamarkets. (#3647)

* Migrating  bytebuffercollections from Metamarkets.

* resolving code conflicts and removing <p> from bytebuffer-collections.",2016-11-11T18:51:07Z
ddc078926b3c92a475f68dd285777a2ad62d25c2,consolidate different theta sketch representations into SketchHolder (#3671),2016-11-11T18:20:41Z
52a74cf84f58aa8b8ecccf8dd83308c65ceb1971,"Use timestamp in millis as Map key instead of DateTime object (#3674)

* Use Long timestamp as key instead of DateTime.

DateTime representation is screwed up when you store with an obj
and read with a different DateTime obj.

For example: The code below fails when you use DateTime as key
```
        DateTime odt = DateTime.now(DateTimeUtils.getZone(DateTimeZone.forID(""America/Los_Angeles"")));
        HashMap<DateTime, String> map = new HashMap<>();
        map.put(odt, ""abc"");
        DateTime dt = new DateTime(odt.getMillis());
        System.out.println(map.get(dt));
```

* Respect timezone when creating the file.

* Update docs with timezone caveat in granularity spec

* Remove unused imports",2016-11-11T18:20:20Z
fd5451486cd962c279ce0c9007a326b0255d4071,"Short-circuiting AndFilter. (#3676)

If any of the bitmaps are empty, the result will be false.",2016-11-11T18:14:56Z
1acc816196c8723d121915ab1f7c33de3fbfacd4,"FileSmoosher requested changes (#3673)

* FileSmoosher requested changes 

from https://github.com/metamx/java-util/pull/55

* Addressed code review requested changes.",2016-11-10T18:11:49Z
b76b3f8d85892da06b172883667abee597ec0a57,reset-cluster command to clean up druid state stored on metadata and deep storage (#3670),2016-11-09T17:07:01Z
575aeb843a71e9c54a154ec107211d77ec0b858d,Metadata Storage extension for Microsoft SqlServer (sqlserver-metadata-storage) (#3421),2016-11-08T22:56:52Z
37ecffb64805b1a6c5512405b5633ae93d9998d4,Add support for Confluent Schema Registry in the avro extension (#3529),2016-11-08T22:10:45Z
657e4512d2a6499a9d0609b2cc32d134e9507e3a,"Checkstyle checks for AvoidStaticImport, UnusedImports. (#3660)

Excludes tests from AvoidStaticImport, since those are used often there and
I didn't want to make this changeset too large. Production code use was minimal
and I switched those to non-static imports.",2016-11-05T18:34:36Z
22b57ddd601c5022ee49b06ee79290471ad6fe84,"Make ExtractionNamespaceCacheFactory to populate cache directly instead of returning callable (#3651)

* Rename ExtractionNamespaceCacheFactory.getCachePopulator() to populateCache() and make it to populate cache itself instead of returning a Callable which populates cache, because this ""callback style"" is not actually needed.

ExtractionNamespaceCacheFactory isn't a ""factory"" so it should be renamed, but renaming right in this commit would tear the git history for files, because ExtractionNamespaceCacheFactory implementations have too many changed lines. Going to rename ExtractionNamespaceCacheFactory to something like ""CachePopulator"" in one of subsequent PRs.

This commit is a part of a bigger refactoring of the lookup cache subsystem.

* Remove unused line and imports",2016-11-04T20:33:16Z
4cbebd093136c98b325c9b7a309cf3c40bd1d37c,"SubstringDimExtractionFn, BoundDimFilter: Implement typical style toString. (#3658)",2016-11-04T20:31:47Z
2bbbad9908da13839cdca95ad2139676786710ea,Add NOTICE for TestNG code. (#3661),2016-11-04T19:54:52Z
c49a9d56935502a7f3e719b405e0059c6ecb9751,"Call out semver expectations for modules (#3659)

* Call out semver expectations for modules

* Update modules.md

* Link to versioning",2016-11-04T19:52:05Z
600bbd4a172706c6db88dea85086d67276dadd34,"BucketExtractionFn: Implement hashCode, fix toString. (#3656)",2016-11-04T18:24:02Z
8b3c86f41f92ee37594003d197441c306c8c51cb,Fix FilteredAggregatorFactory toString formatting. (#3657),2016-11-04T18:23:55Z
2c504b6258c9078b738bf368ec522af7b32d7432,"Add ""like"" filter. (#3642)

* Add ""like"" filter.

* Addressed some PR comments.

* Slight simplifications to LikeFilter.

* Additional simplifications.

* Fix comment in LikeFilter.

* Clarify comment in LikeFilter.

* Simplify LikeMatcher a bit.

* No use going through the optimized path if prefix is empty.

* Add more tests.",2016-11-04T17:55:03Z
b961b6a69f4d81bc0504ff05dd7cadae26f531ee,"Add configs to enable running integration tests for cluster running behind proxy (#3646)

* Add configs to enable running integration tests for cluster running behind proxy

As part of https://issues.apache.org/jira/browse/KNOX-758
I am working on adding support for proxying druid queries & UIs using
Apache KNOX gateway.
This PR adds support for integration-tests to be run using the proxy
gateway.
Changes Include -
1) Instead of hostName and port, ability to specify url in the config
file.
2) tests now use HTTPClient defined in DruidTestModule that can pass in
the request.

Note - the config changes are backwards compatible and existing configs
should work fine.

* review comments

* review comments",2016-11-04T15:19:38Z
b99e14e732d56478f184d60beaae214ada337b47,"Support configuration for handling multi-valued dimension (#2541)

* Support configuration for handling multi-valued dimension

* Addressed comments

* use MultiValueHandling.ofDefault() for missing policy",2016-11-04T04:38:54Z
420358029061acb09e5f40370881f88e5a36d8d5,"URIExtractionNamespace: Treat null values in lookup maps as missing entries. (#3512)

* URIExtractionNamespace: Treat null values in lookup maps as missing entries.

This is useful when many logical lookups are derived from the same base JSON file,
and some lookups' values may be unknown sometimes.

* Add test, logging message, and address other comments.

* Update docs.",2016-11-03T20:53:04Z
e10def32f2709e764f699d7c1af19511738da92b,"Support string type in math expression (#2836)

* Support string type in math expression

addressed comments

addressed comments

Addressed comments

* Updated math function document

* Addressed comments",2016-11-03T03:10:48Z
2362effd8cdef157c00f8a9edf33520b90645f1d,"use FileSystem.rename(from,to,Rename.NONE) so that tmp dirs from replicating tasks are not moved to the segment directory created by first task (#3650)",2016-11-02T22:58:55Z
36a1543222dcbae54d68791f1107435aabd7fc52,"Lookup cache bug fixes (#3609)

* Return better lastVersion from JDBCExtractionNamespaceCacheFactory's cache populator callable

* Return the lastVersion if URI lookup last modified date is not later than the last cached, from URIExtractionNamespaceCacheFactory's cache populator callable

* Fix a race condition in NamespaceExtractionCacheManager.cancelFuture()

* Don't delete cache from NamespaceExtractionCacheManager if the ExtractionNamespaceCacheFactory returned the same version as the last; Better exception treatment in the scheduled cache updater runnable in NamespaceExtractionCacheManager (in particular, don't consume Errors); throw AssertionError in StaticMapExtractionNamespaceCacheFactory if the lastVersion != null)

* In NamespaceExtractionCacheManager, put NamespaceImplData.latestVersion update in the same synchronized() block with swapAndClearCache(id, cacheId); Turn getPostRunnable which returns a callback into a simple updateNamespace() method

* In StaticMapExtractionNamespaceCacheFactory.getCachePopulator(), check the input directly, not inside a callback

* In URIExtractionNamespaceCacheFactory, allow URI last modified time to go backwards

* Better logging in NamespaceExtractionCacheManager

* Add comment on lastVersion nullability in URIExtractionNamespaceCacheFactory",2016-11-02T16:40:19Z
2961406b9034a6ef454329a2accebeacdce27c7b,"fix zero period in PeriodGranularity causing gran.iterable(start, end) infinite loop (#3644)",2016-11-02T10:10:07Z
4b0d6cf78903ba47816264fb27e771f33ef6f52c,"Fix resource leaks (ComplexColumn and GenericColumn) (#3629)

* Remove unused ComplexColumnImpl class

* Remove throws IOException from close() in GenericColumn, ComplexColumn, IndexedFloats and IndexedLongs

* Use concise try-with-resources syntax in several places

* Fix resource leaks (ComplexColumn and GenericColumn) in SegmentAnalyzer, SearchQueryRunner, QueryableIndexIndexableAdapter and QueryableIndexStorageAdapter

* Use Closer in Iterable, returned from QueryableIndexIndexableAdapter.getRows(), in order to try to close everything even if closing some parts thew exceptions",2016-11-02T03:53:52Z
eb70a12e436946f2857eba16f710c3f6d0c4ff06,fix cleanup of tmp dir in HdfsDataSegmentPusher (#3636),2016-11-01T17:45:38Z
f1dee037d6c7ed1858b05794356708358e5e60e7,fix 'No Such File' error when execute script out of druid installation directory (#3517),2016-11-01T16:57:09Z
45940d6e4071739d7017718c2801e44380356432,"Math expressions support for missing columns. (#3630)

Also add SchemaEvolutionTest to help test this kind of thing.

Fixes #3627 and includes test for #3625.",2016-11-01T16:40:25Z
0e269ce72ac75b35d27b9257a8c6774f98cfbc82,max row limit is necessary is connector is setup for streaming (#3635),2016-11-01T16:39:55Z
89d9c61894f122b4973ad5d8d325e114b0a7ebf4,Deprecate Aggregator.getName and AggregatorFactory.getAggregatorStartValue. (#3572),2016-10-31T22:24:30Z
32c5494e974877806b34b8e44a876610a70fe756,eagerly allocate the intermediate computation buffers (#3628),2016-10-31T22:24:07Z
9f5c895d5fe52ad005cd26aad12540abe59ec625,Fix imports in DefaultOfflineAppenderatorFactoryTest. (#3624),2016-10-31T19:23:19Z
f6995bc9084d3a56121fe6e83b9d62ad4d204529,"offline appenderator factory. (#3483)

* adding default offline appenderator

* adding test

* fix comments

* fix comments",2016-10-31T17:05:58Z
317d62e18c30b17af60c3f5761440fec8c0df988,teeny tiny wording change (#3623),2016-10-31T16:46:54Z
3fca3be9ea3c17f565970097eed5b9afec316121,SpecificSegmentQueryRunner misses missing segments from toYielder() (#3617),2016-10-30T18:47:29Z
23a8e2283628640b849065763de0d765f4c18fc0,"fix SketchMergeAggregatorFactory.finalizeResults, comparator and more UTs for timeseries, topN (#3613)",2016-10-28T22:48:33Z
6a845e1f7bd7d5c84d681739ed0bd5522c159186,"Adding getDelegate() to directly access delegate. (#3616)

👍",2016-10-27T22:57:36Z
78159d7ca442cf8d99ea356d39932ab3adb8e10f,"Move off-heap QTL global cache delete lock outside of subclass lock (#3597)

* Move off-heap QTL global cache delete lock outside of subclass lock

* Make `delete` thread safe",2016-10-27T16:53:53Z
079964029903db37b2a3dad454491f5deee0a22e,Faster interval comparator (#3605),2016-10-26T08:50:27Z
98465f47b54e1472da2c4a5ec0269a60bdc73a8d,start stop metamx lifecycle annotated objects as well (#3610),2016-10-25T22:56:16Z
898c1c21af2e200c04088d0f1f46fcf091c43a3e,"More best-effort parse long (#3603)

* More best-effort parse long

* addressed comments",2016-10-25T17:31:51Z
3c56cbdf825c6ca7ffd338e98bc8873a12fe94a3,fix timing issue with KafkaLookupExtractorFactoryTest (#3604),2016-10-25T14:04:51Z
641469fc38ea90d5fbe8a3320891b5bd87e2a52f,"manage overshadowing efficiently at coordinator (#3584)

* manage overshadowing efficiently at coordinator

* take readlock in VersionedIntervalTimeline.isOvershadowed()",2016-10-24T17:19:08Z
9bb735133f21b9e29c4020408bf894df1b7ae600,Move copyright to proper druid.io form (#3602),2016-10-21T23:23:53Z
4b3bd8bd630130fb852dfa3054bd9a60d507fd2b,"Migrating java-util from Metamarkets. (#3585)

* Migrating java-util from Metamarkets.

* checkstyle and updated license on java-util files.

* Removed unused imports from whole project.

* cherry pick metamx/java-util@826021f.

* Copyright changes on java-util pom, address review comments.",2016-10-21T21:57:07Z
8b7ff4409aa4b4e33baadf5a549f179ad9632a19,"Math expressional parameters for aggregator (#2783)

* Supports expression-paramed aggregator (squashed and rebased on master) also includes math post aggregator (was #2820)

* Addressed comments

* addressed comments",2016-10-19T18:58:35Z
b113a34355a6fdbf115b737299aced1815138cde,"In CPUTimeMetricQueryRunner, account CPU consumed in baseSequence.toYielder() (#3587)",2016-10-18T14:06:42Z
2c5c8198db5193aa02af76bc2b6946bdd9b6e606,Make query/cpu/time still report on error (#3535),2016-10-18T13:26:21Z
8ea5f9324dc4cb12b455be097fe1d341a98a7660,Integration Tests - fix middlemanager  property name in doc (#3586),2016-10-18T13:23:34Z
dd0bb6da1e1f52235d44b4eb4ea7a3aab9e6ad1a,Unit test for #3544: Avoid exceptions for dataSource spec when using s3. (#3571),2016-10-17T19:41:43Z
9611358f0a7cb324e58c8b8fb5d4ed3782981bd5,"Small topn scan improvements (#3526)

* Remove unused numProcessed param from PooledTopNAlgorithm.aggregateDimValue()

* Replace AtomicInteger with simple int in PooledTopNAlgorithm.scanAndAggregate() and aggregateDimValue()

* Remove unused import",2016-10-17T17:36:19Z
285516bedeafa0be90e5b835ab6e1d37d525b83e,"Workaround non-thread-safe use of HLL aggregators. (#3578)

Despite the non-thread-safety of HyperLogLogCollector, it is actually currently used
by multiple threads during realtime indexing. HyperUniquesAggregator's ""aggregate"" and
""get"" methods can be called simultaneously by OnheapIncrementalIndex, since its
""doAggregate"" and ""getMetricObjectValue"" methods are not synchronized.

This means that the optimization of HyperLogLogCollector.fold in #3314 (saving and
restoring position rather than duplicating the storage buffer of the right-hand side)
could cause corruption in the face of concurrent writes.

This patch works around the issue by duplicating the storage buffer in ""get"" before
returning a collector. The returned collector still shares data with the original one,
but the situation is no worse than before #3314. In the future we may want to consider
making a thread safe version of HLLC that avoids these kinds of problems in realtime
indexing. But for now I thought it was best to do a small change that restored the old
behavior.",2016-10-17T16:39:12Z
c2ae734848952de343df38eb22865b5e1f01b337,"KafkaIndexTask: Allow run thread to stop gracefully instead of interrupting (#3534)

* allow run thread to gracefully complete instead of interrupting when stopGracefully() is called

* add comments",2016-10-17T14:52:19Z
c1d3b8a30c9cd4fc8dc8f2d391214b8ac19a1da9,"Remove dropwizard-jdbc dependency from lookups-cached-single. (#3573)

Fixes #3548.",2016-10-17T14:37:47Z
0ce33bc95f557f4da5e18d16944f39bfafdda14e,"HdfsDataSegmentPusher: Properly include scheme, host in output path if necessary. (#3577)

Fixes #3576.",2016-10-17T14:37:18Z
472c409b9967a5b301aea3c2233f7e3351704645,"KafkaLookupExtractorFactory: shutdown kafka consumer on close() (#3539)

* shutdown kafka consumer on close

* handle close() race condition",2016-10-15T16:55:51Z
3b6261c690785966779bf0f92d811b5f655bd441,"Add druid-lookups-cached-single to default distribution build (#3550)

Fixes #3527",2016-10-15T15:11:04Z
4554c1214b448b1b33e273fee8e9f5e142006eb9,Avoid exceptions for dataSource spec when using s3 (#3544),2016-10-15T01:24:19Z
5dc95389f70388b73f141a4f2e5908c042a17912,"Add Checkstyle framework (#3551)

* Add Checkstyle framework

* Avoid star import

* Need braces for control flow statements

* Redundant imports

* Add NewLineAtEndOfFile check",2016-10-13T20:37:47Z
85ac8eff90ff1f4356ad4f0f3570e681781220a8,"Improve performance of IndexMergerV9  (#3440)

* Improve performance of StringDimensionMergerV9 and StringDimensionMergerLegacy by avoiding primitive int boxing by using IntIterator in IndexedInts instead of Iterator<Integer>; Extract some common logic for V9 and Legacy mergers; Minor improvements to resource handling in StringDimensionMergerV9

* Don't mask index in MergeIntIterator.makeQueueElement()

* DRY conversion RoaringBitmap's IntIterator to fastutil's IntIterator

* Do implement skip(n) in IntIterators extending AbstractIntIterator because original implementation is not reliable

* Use Test(expected=Exception.class) instead of try { } catch (Exception e) { /* ignore */ }",2016-10-13T15:28:46Z
ddc856214d0b1876759fe6eed71543f5156f6a64,"When inserting segments, mark unused if already overshadowed. (#3499)

This is useful for the insert-segment-to-db tool, which would otherwise
potentially insert a lot of overshadowed segments as ""used"", causing
load and drop churn in the cluster.",2016-10-11T01:10:18Z
6f21778364934a84f88e0ecac7a0f1ec088885bd,"Support finding segments in AWS S3. (#3399)

* support finding segments from a AWS S3 storage.

* add more Uts

* address comments and add a document for the feature.

* update docs indentation

* update docs indentation

* address comments.
1. add a Ut for json ser/deser for the config object.
2. more informant error message in a Ut.

* address comments.
1. use @Min to validate the configuration object
2. change updateDescriptor to a string as it does not take an argument otherwise

* fix a Ut failure - delete a Ut for testing default max length.",2016-10-11T00:27:09Z
1e79a1be82218260f950d8e309dfab23ded732de,fix useExplicitVersion (#3559),2016-10-10T19:28:06Z
3a83e0513e1b1b7dfb43b285afc5cf89ae418a53,Doc update(batch-ingestion) to include useExplicitVersion. (#3557),2016-10-07T21:48:00Z
c255dd8b19ad51305fde2d84552587d9cac810e7,fix datasegment metadata (#3555),2016-10-07T21:30:33Z
078de4fcf9402c5cc13c0aabf2753b5712e84ddf,Use explicit version from HadoopIngestionSpec. (#3554),2016-10-07T20:59:14Z
7e6824501cee9325edf74f1df3497514bb0733ef,"fix: QueryResource thread name includes whole inner query string for nested query (#3549)

* print exception details from QueryInterruptedException

* in QueryResource.java, set thread name to include dataSource names and not whole query string e.g. from QueryDataSource",2016-10-07T01:30:52Z
76a60a007e056d6dc9a228d8cf1f20832225038c,create parent dir on HDFS if it does not exist (#3547),2016-10-06T23:14:00Z
76e77cb61030fa78ef47e5e47f67751a73ffed1c,Make segment creation gauva 14 friendly (#3520),2016-10-05T22:25:03Z
1523de08fba12c830d41721666a21ef28c14c201,SketchAggregatorFactory.combine(..) returns Union object now so that it can be reused across multiple combine(..) calls (#3471),2016-10-05T15:40:14Z
592903571a31a40227b767eb98b4317259c014db,add context to kafka supervisor for the kafka indexing task (#3464),2016-10-05T01:08:43Z
e419407ebaa27a430befce32b1393f2b68bf3490,"handle supervisor spec metadata failures (#3456)

close kafka consumer in case supervisor start fails",2016-10-04T17:15:28Z
43cdc675c7780c5dafe3903b51e589cee4c7d776,"Add support for timezone in segment granularity (#3528)

* Add support for timezone in segment granularity

* CR feedback. Handle null timezone during equals check.

* Include timezone in docs.
Add timezone for ArbitraryGranularitySpec.",2016-10-03T15:15:42Z
40f2fe7893f9aed267475164f81632ab15f4a0f8,Bump versions to 0.9.3-SNAPSHOT (#3524),2016-09-29T20:53:32Z
654e1db309edc9b4a8fffeafdbe4b9e99fcce51e,Add simple test to FunctionalExtractionTest (#3522),2016-09-29T06:45:15Z
78b06a7d7e1ad4ade27ca213cf3aea308d714e09,make global http client worker threads configurable (#3514),2016-09-29T06:18:51Z
d0ea84149f441fa37dd54bb21880aebfa0d8691b,Changing num threads to 9 (#3492),2016-09-28T16:44:51Z
91e6ab4fcf65bcd92938c89fe3a91348cd8452f7,"LRU cache guarantee to keep size under limit (#3510)

* LRU cache guarantee to keep size under limit

* address comments

* fix failed tests in jdk7",2016-09-28T00:13:06Z
56b05860977bf6a1ae15e617f31f9f19476878f1,secure BrokerQueryResource endpoints (#3506),2016-09-26T18:27:24Z
15c9918c659822b79a6c05dc34228b4119edc901,log exceptions while trying to pause task (#3504),2016-09-23T23:53:23Z
d5a8a35fec3e99db89272a0ce83bf386ae2737b3,"groupBy: GroupByRowProcessor fixes, invert subquery context overrides. (#3502)

- Fix GroupByRowProcessor config overrides
- Fix GroupByRowProcessor resource limit checking
- Invert subquery context overrides such that for the subquery, its own
  keys override keys from the outer query, not the other way around.

The last bit is necessary for the test to work, and seems like a better
way to do it anyway.",2016-09-23T21:41:09Z
7195be32d85478c5ea23cc12d99ed4c8afa423ef,"groupBy v2: Fix dangling references. (#3500)

Acquiring references in the processing task prevents dangling references
caused by canceled processing tasks.",2016-09-23T20:29:11Z
9226d4af3ce31705a59ca0812e2a5271b514c0dd,"configurable shutdownTimeout for Kakfa supervisor (#3497)

* configurable shutdownTimeout

* cr change",2016-09-23T19:26:45Z
ca9114b41bd3a3de7d9e176f049fee7e4a8fa7e9,"add supervisor reset API (#3484)

* add supervisor reset API

* CR doc changes and kill running tasks / clear offsets from supervisor",2016-09-23T00:51:06Z
6099d203037dec1c50f5d6eca960db9f95067f27,"[FIX] ReleaseException when the path is being written by multiple tasks (#3494)

* fix ReleaseException when the path is being written by multiple task

* Do not throw IOException if another replica wins the race for segment creation

fix if check

* handle logging comments

* fix test",2016-09-22T19:25:41Z
f8d71fc602cf8a9dc0b3c6a1d6184863b679e788,groupBy: Fix maxMergingDictionarySize config. (#3488),2016-09-22T17:02:33Z
c87ecea975d8822649989ef04096476a69e84420,Fix ListFilteredDimensionSpec blacklisting on non-present values. (#3487),2016-09-22T16:12:02Z
74e1243c7e59690434b9815b05b123585223c091,Fix test fail of PollingLookupTest.testApplyAfterDataChange (#3489),2016-09-22T15:33:59Z
49c0fe0e8bbbc685a3e8281c4b9239ddf6e7d742,"Show candidate hosts for the given query (#2282)

* Show candidate hosts for the given query

* Added test cases & minor changes to address comments

* Changed path-param to query-pram for intervals/numCandidates",2016-09-22T15:32:38Z
67920c114e56b87ab911ed90280639fc40d63184,Fixed info message (#3481),2016-09-21T22:50:29Z
27bd5cb13aa25d7bd0848722ac0a33d5d79fca2a,"Add forceExtendableShardSpecs option to Hadoop indexing, IndexTask. (#3473)

Fixes #3241.",2016-09-21T19:40:04Z
05ea88df5c1d5aac57e5217f25fad1b6787fe679,fix kafka-indexing-service pom to not reference specific version but parent version for druid core dependencies (#3472),2016-09-20T22:18:21Z
96fcca18ea3ee8702f24ceba2001004bc3128a99,update KafkaSupervisor to make HTTP requests to tasks in parallel where possible (#3452),2016-09-20T17:21:15Z
54ec4dd5846cdb35f3faa4898b6b7df033f3e60e,"Support renaming of outputName for cached select and search query results (#3395)

* support renaming of outputName for cached select and search queries

* rebase and resolve conflicts

* rollback CacheStrategy interface change

* updated based on review comments",2016-09-20T15:19:14Z
3175e17a3bc3cb8d2f4dd4a6a2f752a59f4581c8,Cached lookup module. first cut implementing JDBC cache (#2819),2016-09-16T20:45:54Z
95e08b38ea6e77e2d6895678ea53cbdf8f5aaae0,"[QTL] Reduced Locking Lookups (#3071)

* Lockless lookups

* Fix compile problem

* Make stack trace throw instead

* Remove non-germane change

* * Add better naming to cache keys. Makes logging nicer
* Fix #3459

* Move start/stop lock to non-interruptable for readability purposes",2016-09-16T18:54:23Z
76fcbd8fc50c6dfd1d948e7ec3553b1090cab367,"Update Curator, ZK to latest stable versions. (#3461)",2016-09-16T16:16:14Z
d981a2aa02aedfdf18e0bed5848e704bd9597563,Avoid interrupting ZookeeperConsumerConnector.shutdown() #3346 (#3403),2016-09-15T00:44:27Z
7a2a4bc6de718945772a9d7ec7ccf866290ddaf0,JavaScript: Disable now affects worker selection and router strategy too. (#3458),2016-09-13T23:37:42Z
e0e28866ee037a9ff206b1353ecf738964719443,"JavaScript docs: Fix links and typos, add to TOC. (#3457)",2016-09-13T22:26:44Z
a069257d37536435e3069267bed0530e453005a5,"avro-extension -- feature to specify multiple avro reader schemas inline  (#3368)

* rename SimpleAvroBytesDecoder to InlineSchemaAvroBytesDecoder

* feature to specify multiple schemas inline in avro module",2016-09-13T21:54:31Z
76a24054e38acba868f32030ad509239089c9290,"JavaScript docs, including docs for globals. (#3454)",2016-09-13T20:46:55Z
bcff08826be53106faa236332b4d5651ea06789e,KafkaIndexTask: Treat null values as unparseable. (#3453),2016-09-13T17:56:38Z
ba6ddf307e574022c679f9eece84585104ed2802,"Adding hadoop kerberos authentification. (#3419)

* adding kerberos authentication

* make the 2 functions identical",2016-09-13T17:42:50Z
df766b2bbd2ee2bbc9c8b2b952e3708e1c9ac86a,"Add dimension handling interface for ingestion and segment creation (#3217)

* Add dimension handling interface for ingestion and segment creation

* update javadocs for DimensionHandler/DimensionIndexer

* Move IndexIO row validation into DimensionHandler

* Fix null column skipping in mergerV9

* Add deprecation note for 'numeric_dims' filename pattern in IndexIO v8->v9 conversion

* Fix java7 test failure",2016-09-12T19:54:02Z
1a5042ca26cd0b94f545dbaced85934b27867bf0,"updated dependency on sketches-core (#3443)

* updated dependency on sketches-core to 0.7.0

* Use sketches-core-0.4.1, which is the latest version still compatible
with JDK7",2016-09-09T23:21:32Z
6a1cd7fc661d0d885b1fd19439fcf5e1cf25becf,"avoid throwing exceptions fix#3389  (#3441)

* avoid throwing exceptions

* log alert

* fix comments",2016-09-09T23:19:50Z
d108461838688420956167e3f2165f01443594ab,"groupBy v2: Parallel disk spilling. (#3433)

In ConcurrentGrouper, when it becomes clear that disk spilling is necessary, switch
from hash-based partitioning to thread-based partitioning. This stops processing
threads from blocking each other while spilling is occurring.",2016-09-09T22:49:58Z
1344e3c3afb56d7035d41afe4e3c02305da8f7d4,Clearer filter docs. (#3448),2016-09-09T20:47:13Z
3b6c81e7c0110333151bae525123fccc7934921d,fix cleanup of hadoop ingestion intermediate path (#3385),2016-09-07T20:06:56Z
1e3f94237e464aeb5793d3a9c70f353ef67cd557,"groupBy v2: Configurable load factor. (#3437)

Also change defaults:

- bufferGrouperMaxLoadFactor from 0.75 to 0.7.
- maxMergingDictionarySize to 100MB from 25MB, should be more appropriate
  for most heaps.",2016-09-07T19:14:59Z
4f0bcdce36aca8ec0a3014e95c8c4477ed019cbd,"Eager file unmapping in IndexIO, IndexMerger and IndexMergerV9 (#3422)

* Eager file unmapping in IndexIO, IndexMerger and IndexMergerV9. The exact purpose for this change is to allow running IndexMergeBenchmark in Windows, however should also be universally 'better' than non-deterministic unmapping, done when MappedByteBuffers are garbage-collected (BACKEND-312)

* Use Closer with a proper pattern in IndexIO, IndexMerger and IndexMergerV9

* Unmap file in IndexMergerV9.makeInvertedIndexes() using try-with-resources

* Reformat IndexIO",2016-09-07T17:43:47Z
c0e62b536a219ed4421dac2d9a4b46ef5d49c4e6,"Changes to lambda architecture paper required for HICSS (#3382)

* changes for hicss

* more updates

* revert test changes

* final edits",2016-09-07T04:32:21Z
146a17de48f56f52e99027190e200069d94d0814,KafkaIndexTask: allow pause to break out of retry loop (#3401),2016-09-07T04:29:37Z
8d2ae144a8d5242e2472127aeb0880df96ba7021,groupBy: Short-circuit identity preCompute manipulators. (#3434),2016-09-07T04:28:44Z
1d0796498762d7688038972c9793be48d3730a8f,"LimitedTemporaryStorage: Fix perf bug. (#3432)

FilterOutputStream has an inefficient implementation of write(byte[], int, int).
So let's extend OutputStream directly and use efficient implementations of all
methods.",2016-09-06T22:39:36Z
6827c093119aa76f5459e4121de74f839b7949ef,"GroupByBenchmark: Fix queryable index generation, improve memory use. (#3431)

With the old code, all on-disk segments were the same. Now they're different.
This will end up altering benchmark results for queryMultiQueryableIndex,
likely making them slower (since values won't group as well as they used to).

The memory changes will help test with larger/more segments, since we won't
have to hold them all in memory at once.",2016-09-06T21:37:55Z
5b1ae21bd1de819c4fceb3daa483d900e688651c,retry calls to getStartTime (#3429),2016-09-06T21:02:22Z
3a97fd4d6c71af86fc18ee564a43c80804a19873,doc fix (#3430),2016-09-06T19:13:30Z
2235988069de43e66710c9f503137de2b89ad63c,update wikipedia search query in the integration tests as per the fix in commit 0076b5f (#3420),2016-09-01T17:13:17Z
8ed18944888c4568d6606b15416475b8423ad395,"groupBy: Omit timestamp from merge key when granularity = all. (#3416)

Fixes #3412.",2016-09-01T16:02:54Z
6d25c5e0530717e3e52a5499648e78e003b55ab0,"Avoid materializing all groupBy results with order + limit. (#3410)

The old TopNFunction code did Sequences.toList on the input sequence before
using a priority queue to find the top N items. Now, the priority queue
is used in an accumulator, so there is no need to fully materialize the results.

Also removed equals/hashCode from the limitFn and remove limitFn from the
GroupByQuery's hashCode, since that wasn't necessary and the implementation
of hashCode wasn't correct anyway.",2016-08-31T21:08:07Z
1268e2902c81bf13f47fdf2bd2f27ee795927d13,Add groupBy test for multiple multi-value dimensions. (#3415),2016-08-31T18:21:10Z
e9050c2b4c533d5032fd3229ca5608cfcc111754,TimeFormatExtractionFn: Allow null formats (equivalent to ISO8601) and granular bucketing. (#3411),2016-08-31T15:28:53Z
0076b5fc1aeaf656bde67c4646c41f0a9f3f85e7,"Interval bug fix for search query (#2903)

* support query granularity and interval for search query

* skip unncessary bitmap calculation when query interval contains whole the data interval of the given segments.

* use binary search to find start and end index for the given interval

* fix based on comment

* bug fix based on the review comments and add unit tests",2016-08-31T15:22:44Z
48dce88aab46bd27354b8499a83c9317136725e7,Add flag binaryAsString for parquet ingestion (#3381),2016-08-31T00:30:50Z
c4e8440c229535d9f6b08128cae4102cbfd30ee9,"Adds long compression methods (#3148)

* add read

* update deprecated guava calls

* add write and vsizeserde

* add benchmark

* separate encoding and compression

* add header and reformat

* update doc

* address PR comment

* fix buffer order

* generate benchmark files

* separate encoding strategy and format

* fix benchmark

* modify supplier write to channel

* add float NONE handling

* address PR comment

* address PR comment 2",2016-08-30T23:17:46Z
4e91330a179d6140d54bb58b922f90f907797619,"Use DimensionSpec in CardinalityAggregatorFactory (#3406)

* Use DimensionSpec in CardinalityAggregatorFactory

* Address PR comments

* Fix requiredFields()",2016-08-30T22:54:02Z
4c2b8d29d3f9d8ff53e972fa022fe02df9999341,Make RTR assign pending tasks by insertion order (#3405),2016-08-30T19:22:44Z
b11e9544ea5e578ee6bce127d84817bc715ba098,"GroupBy v2: Improve hash code distribution. (#3407)

Without this transformation, distribution of hash % X is poor in general.
It is catastrophically poor when X is a multiple of 31 (many slots would
be empty).",2016-08-30T06:39:08Z
f037dfcaa4614eafc9a85b1b0e91f94b808ab128,fix missing segments duplicate retried (#3398),2016-08-29T18:16:21Z
6b40bf8b32a052b29f35d2cf871a3542b43d3dfd,"doc: added note to README, about necessary hdfs config after insert-segment-to-db (#3402)",2016-08-28T23:39:33Z
8bee07e81ef8bec0fcabd4fd2f0b793df8a090ee,Respect server-side sorting of tasks in coordinator console (#3404),2016-08-28T23:38:29Z
2e0f253c324b2e697074cd4359419944d5a87b0b,"introducing lists of existing columns in the fields of select queries' output (#2491)

* introducing lists of existing columns in the fields of select queries' output

* rebase master

* address the comment. add test code for select query caching

* change the cache code in SelectQueryQueryToolChest to 0x16",2016-08-25T16:07:53Z
d6240376981cac56c40c641b270f983e3df3078d,"Pull-deps: correct the library directory in the document (#3361)

* Pull-deps: correct the library directory in the document

* Pull-deps: correct the library directory in the document in the last example command",2016-08-17T00:18:15Z
edb0eca3a907be67187616386b4334aff4274de1,fix docs (#3370),2016-08-16T23:25:50Z
6beb8ac3425471bdbb4bb739f6e72ab197409a6a,fix some docs and add new content (#3369),2016-08-16T22:00:18Z
e4f0eac8e6421a17fbe6bdaa79076d202542a1f1,Fix issue #2707 (#2708),2016-08-16T17:19:44Z
eafafce1aa058a495e214045ccbfe4d82adca240,fix old usage of dimension as string instead of dimensionSchema in DataSchema (#3365),2016-08-16T16:58:04Z
ed924bf214a373a0ceae4e078157c8b8e7f674b5,allow registrants to opt out of announcing themselves when registering as a chat handler (#3360),2016-08-16T05:21:28Z
362b9266f88ad2b3152857673ae70cfc3642ac33,"Adding filters for TimeBoundary on backend (#3168)

* Adding filters for TimeBoundary on backend

Signed-off-by: Balachandar Kesavan <raj.ksvn@gmail.com>

* updating TimeBoundaryQuery constructor in QueryHostFinderTest

* add filter helpers

* update filterSegments + test

* Conditional filterSegment depending on whether a filter exists

* Style changes

* Trigger rebuild

* Adding documentation for timeboundaryquery filtering

* added filter serialization to timeboundaryquery cache

* code style changes",2016-08-15T17:25:24Z
70d99fe3c60d9845188aa0aa9754d5afac18d9a5,"Initialize ApproximateHistogram Module in ApproximateHistogramGroupByQueryTest (#3363)

or else the test fails if ran independently.",2016-08-15T17:19:33Z
e1b0b7de3e8fccd89cfb5c2ad1a6aaa9b020a2aa,"IndexBuilder: Allow replacing rows, customizable maxRows. (#3359)",2016-08-12T22:22:45Z
df89f25b1546c435054052ed17601358fd3da998,fix can't get latest offset in KafkaEightSimpleConsumerFirehoseFactory (#3355),2016-08-12T01:00:24Z
454587857c89800409744b639632da1fc7eb4a30,Make StringComparator deserialization case-insensitive (#3356),2016-08-12T01:00:11Z
18af480017472337091d277fc6713418269c39e1,"Rename fields in OrderedMergeIterator (#3149)

* code readable

* fix the pre middle manager peon no stop

* Revert ""fix the pre middle manager peon no stop""

This reverts commit 6cef4980bfbeed6c26f49f55de47d575c35bb639.",2016-08-11T16:42:12Z
2f46effc8e6aa55c2bbcc169b7ed84d445b3a74e,FileTaskLogsTest: Throw unthrown exception. (#3352),2016-08-11T16:40:28Z
03cfcf002b681255a7c9e1db2aea1201ef155a67,fix the race described in #3174 (#3205),2016-08-10T18:29:50Z
043562914d1af0286a0132e12cc02abc58578561,Update IncrementalIndex.getMetricType() to return type name stored by ComplexMetricsSerde instead of AggregatorFactory.getTypeName() (#3341),2016-08-10T18:03:44Z
46da6822314c8917cb04766a7a5a6ec7a332099c,avro-extensions -- feature to specify avro reader schema inline in the task json for all events (#3249),2016-08-10T17:49:26Z
1eb7a7e882b7d034bcd7a6ae7eb75096f2ff10f8,Restore optimizations in BoundFilter. (#3343),2016-08-10T15:53:17Z
a2bcd97512d3b8cc98e10dde98d16700cb6e3ac3,"IncrementalIndex: Fix multi-value dimensions returned from iterators. (#3344)

They had arrays as values, which MapBasedRow doesn't understand and
toStrings rather than converting to lists.",2016-08-10T15:47:29Z
b21a98e2f6af2be60a6fb550a3605d25fa76fd1d,fix NPE if queueBufferLength is null in KafkaEightSimpleConsumerFirehoseFactory (#3345),2016-08-10T14:59:17Z
890e3bdd3f0deecd80565a20b0192f213516a8fb,More informative query unit test names (#3342),2016-08-10T05:24:48Z
8035c734090d58451737e70bf64ae1ad55fbcb0e,"Implement EnvironmentVariablePasswordProvider (#3329)

* Implement EnvironmentVariablePasswordProvider

* Review Comment : rename passwordKey to passwordVariable

* add docs

* improve doc layout

* review comment: rename property for variable",2016-08-09T21:33:51Z
8899affe48971f7a1e50683081132dbe887b7b7f,"Introduce standardized ""Resource limit exceeded"" error. (#3338)

Fixes #3336.",2016-08-09T17:50:56Z
21bce96c4c70ebbdcce2074b5fcfdc8953672818,"More useful query errors. (#3335)

Follow-up to #1773, which meant to add more useful query errors but
did not actually do so. Since that patch, any error other than
interrupt/cancel/timeout was reported as `{""error"":""Unknown exception""}`.

With this patch, the error fields are:

- error, one of the specific strings ""Query interrupted"", ""Query timeout"",
  ""Query cancelled"", or ""Unknown exception"" (same behavior as before).
- errorMessage, the message of the topmost non-QueryInterruptedException
  in the causality chain.
- errorClass, the class of the topmost non-QueryInterruptedException
  in the causality chain.
- host, the host that failed the query.",2016-08-09T08:14:52Z
2613e6847791ea0beedfdc246b206116908fcdfc,Update java-util to 0.27.10. (#3337),2016-08-09T08:07:30Z
39351fb8d27c9cb9b4e094b5b495f335e544caa6,"Mask properties from logging (#3332)

* Mask properties from logging

* mask ""password"" by default",2016-08-08T16:06:10Z
ed5b92d6122a7e669afb6a680684653de513e26e,document how to check MM enabled/disabled (#3331),2016-08-05T21:56:51Z
1aae5bd67d8c42dbcb76c4fdf086bd7dcb043bda,"Nicer handling for cancelled groupBy v2 queries. (#3330)

1. Wrap temporaryStorage in a resource holder, to avoid spurious ""Closed""
   errors from already-running processing tasks.
2. Exit early from the merging accumulator if the query is cancelled.",2016-08-05T21:48:06Z
decefb74777f6e1af89ec7375d5e9508fa6b6175,"Add time interval dim filter and retention analysis example (#3315)

* Add time interval dim filter and retention analysis example

* Use closed-open matching for intervals, update cache key generation

* Fix time filtering tests for interval boundary change",2016-08-05T14:25:04Z
1e3979a5e8e7c586a3960c82c7cf4530cc286225,Add variance aggregator from hive to NOTICE (#3327),2016-08-05T00:43:55Z
5b3f0ccb1fd763a690f76555aef131f4cbc09299,"Support variance and standard deviation (#2525)

* Support variance and standard deviation

* addressed comments",2016-08-05T00:32:58Z
33dbe0800c672c02db134922f1c58bc213018e5d,Makes kafka lookup extraction factory's replace() behavior consistent with other lookup extraction factories (#3326),2016-08-04T17:24:19Z
9437a7a3136270c4464b11f010beb9883d0e4501,"HLL: Avoid some allocations when possible. (#3314)

- HLLC.fold avoids duplicating the other buffer by saving and restoring its position.
- HLLC.makeCollector(buffer) no longer duplicates incoming BBs.
- Updated call sites where appropriate to duplicate BBs passed to HLLC.",2016-08-04T01:08:52Z
be79b095bad4a8eb84521392e94514b4d625d821,fixing expected result for segmentMetadata query in integration tests (#3318),2016-08-03T19:13:27Z
a4b95af839a16dacc217ef2733fa2ea0391c1be1,"Fix grouper closing in GroupByMergingQueryRunnerV2. (#3316)

The grouperHolder should be closed on failure, not the grouper.",2016-08-03T04:02:30Z
0299ac73b816a6ac1bfeb953d2a39a3c8277d2c2,"Fix FilteredAggregators at ingestion time and in groupBy v2 nested queries. (#3312)

The common theme between the two is they both create ""fake"" DimensionSelectors
that work on top of Rows. They both do it because there isn't really any
dictionary for the underlying Rows, they're just a stream of data. The fix for
both is to allow a DimensionSelector to tell callers that it has no dictionary
by returning CARDINALITY_UNKNOWN from getValueCardinality. The callers, in
turn, can avoid using it in ways that assume it has a dictionary.

Fixes #3311.",2016-08-03T00:39:40Z
ae3e0015b6ff293cd50d326b28b0824df6476f3f,"Fix ClassCastException in nested v2 groupBys with timeouts. (#3310)

Add tests for the CCE and for a bunch of other groupBy stuff.

Also avoids setting the interrupted flag when InterruptedExceptions
happen, since this might interfere with resource closing, no other
query does it, and is probably pointless anyway since the thread
is likely to be a jetty thread that we don't actually want to set
an interrupt flag on.

Also fixes toString on OrderByColumnSpec.",2016-08-02T22:02:44Z
50d52a24fc5fd613cc1a3e3de215ef13399698b1,"ability to not rollup at index time, make pre aggregation an option (#3020)

* ability to not rollup at index time, make pre aggregation an option

* rename getRowIndexForRollup to getPriorIndex

* fix doc misspelling

* test query using no-rollup indexes

* fix benchmark fail due to jmh bug",2016-08-02T18:13:05Z
0bdaaa224b8ef90c714c93d0653be65e7d90d53e,Use Long.compare for NumericComparator when possible (#3309),2016-08-02T03:36:56Z
bc20658239807f74f7b6126eda85abebf16c9456,"groupBy nested query using v2 strategy (#3269)

* changed v2 nested query strategy

* add test for #3239

* update for new ValueMatcher interface and add benchmarks

* enable time filtering

* address PR comments

* add failing test for outer filter aggregator

* add helper class for sharing code

* update nested groupby doc

* move temporary storage instantiation

* address PR comment

* address PR comment 2",2016-08-02T01:30:39Z
d51ec398d460e27821ff967ddfbde8a270e99b18,fix parquet docs (#3304),2016-08-01T14:54:48Z
a6105cbb8660ddc1e5951db3da6847809994d480,"Add numeric StringComparator (#3270)

* Add numeric StringComparator

* Only use direct long comparison for numeric ordering in BoundFilter, add time filtering benchmark query

* Address PR comments, add multithreaded BoundDimFilter test

* Add comment on strlen tie handling

* Add timeseries interval filter benchmark

* Adjust docs

* Use jackson for StringComparator, address PR comments

* Add new TopNMetricSpec and SearchSortSpec with tests (WIP)

* More TopNMetricSpec and SearchSortSpec tests

* Fix NewSearchSortSpec serde

* Update docs for new DimensionTopNMetricSpec

* Delete NumericDimensionTopNMetricSpec

* Delete old SearchSortSpec

* Rename NewSearchSortSpec to SearchSortSpec

* Add TopN numeric comparator benchmark, address PR comments

* Refactor OrderByColumnSpec

* Add null checks to NumericComparator and String->BigDecimal conversion function

* Add more OrderByColumnSpec serde tests",2016-07-29T22:44:16Z
d04af6aee4897909ab756b3940c669ef5feb8f70,"Add `slf4j` requst logger (#3146)

* Add `slf4j` requst logger

* Address comments

* Fix conflicts with master

* Fix removed map value",2016-07-29T22:15:41Z
e5397ed316dfd902b80c408c9bf0a5178f9fbeb5,Link up Hadoop class loading docs better. (#3302),2016-07-29T17:19:54Z
1fa681934c5d768ca941f028f5c4b9638cd1a70d,"fix ConcurrentModificationException in CachingClusteredClient.run() (#3278)

* fix ConcurrentModificationException in CachingClusteredClient.run()

* obtain new copy of PartitionHolder to avoid potential multi-threads read/write issue",2016-07-29T02:52:50Z
884017d981c190e301eb85a732c741df8bfb1700,"""all"" type search query spec (#3300)

* ""all"" type search query spec

* addressed comments

* added unit test",2016-07-29T01:16:15Z
255399720030ecf249356990863b98017670223e,"Associate groupBy v2 resources with the Sequence lifecycle. (#3296)

This fixes a potential issue where groupBy resources could be allocated to
create a Sequence, but then the Sequence is never used, and thus the resources
are never freed.

Also simplifies how groupBy handles config overrides (this made the new
unit test easier to write).",2016-07-28T01:44:19Z
546e4f79b00557061b4a7a801c55a24764ae873b,"Add size of pending deletes to historical metrics (#3295)

* Add size of pending deletes to historical metrics",2016-07-27T18:30:47Z
b1e3fe77f5b9d1ecb74a4462e78efe519223a732,"More logging around how the coordinator balancer is happening (#3279)

* More logging around how the coordinator balancer is happening

* Address comments

* Address code review comments and add actual logging",2016-07-27T07:54:32Z
9a068e1ba69735d6a9ec210bf62ace07e4e0669b,fix broken link and use of pipes in table (#3290),2016-07-26T22:46:51Z
2f275497b6d5e244314e5650ad5c0abfee7cd027,Fix caching of extension classloaders. (#3289),2016-07-26T22:19:15Z
b0fa274481fde66306300109eeaeabf6fbba87cc,fix segmentMetadata query results in integration tests (#3288),2016-07-26T21:05:14Z
8030f1cb6774b91018af3e11a9c8dd160c027a3f,"Be more respectful of maxRowsInMemory. (#3284)

- Appenderator: Respect maxRowsInMemory across all sinks.
- KafkaIndexTask: Respect maxRowsInMemory across all partitions.",2016-07-26T21:02:35Z
9b5523add39ee2f2280a4e4957dc5266479059e6,"Reference counting, better error handling for resources in groupBy v2. (#3268)

Refcounting prevents releasing the merge buffer, or closing the concurrent
grouper, before the processing threads have all finished. The better
error handling prevents an avalanche of per-runner exceptions when grouping
resources are exhausted, by grouping those all up into a single merged
exception.",2016-07-26T20:29:02Z
188a4bc89aa0fc19887546dd6de9c813d4ae45a2,"Revert ""Optionally intern ServerInventoryView inventory objects. (#3238)"" (#3286)

This reverts commit a931debf790eaf4454ae13f35e11ba9d39765645.
Fixes #3283

The core issue here is that realtime nodes announce their size as 0, so a coordinator which interns the realtime version of the data segment will not be able to see the new sized announcement when handoff occurs.

This is caused by the `eauals` method on a `DataSegment` only evaluating the identifier. the `eauals` method *should* be correct for object equivalence, and things which need to check equivalence of some sub-portion of the object should do so explicitly.",2016-07-26T18:47:34Z
95a58097e244fc59fe2a322f044527efac4d61c6,"Hadoop InputRowParser for Orc file (#3019)

* InputRowParser to decode OrcStruct from OrcNewInputFormat

* add unit test for orc hadoop indexing

* update docs and fix test code bug

* doc updated

* resove maven dependency conflict

* remove unused imports

* fix returning array type from Object[] to correct primitive array type

* fix to support getDimension() of MapBasedRow : changing return type of orc list from array to list

* rebase and updated based on comments

* updated based on comments

* on reflecting review comments

* fix bug in typeStringFromParseSpec() and add unit test

* add license header",2016-07-26T16:42:56Z
76fabcfdb29c8163f9b6acb32dee5bce43907fdd,"Fix #2782, Unit test failed for DruidProcessingConfigTest.testDeserialization (#3231)

On systems with only once processor this test fails.",2016-07-25T22:51:09Z
3dc2974894d86b98345a6e2ca34861f2e3898b71,"Add timestampSpec to metadata.drd and SegmentMetadataQuery (#3227)

* save TimestampSpec in metadata.drd

* add timestampSpec info in SegmentMetadataQuery",2016-07-25T22:45:30Z
d5ed3f13479ca2638618bb057b38c3bf7eee50a2,change expected response from ACCEPTED to OK (#3280),2016-07-24T02:48:30Z
b316cde5540056b3d9397d62ee9b711fff3dc8ae,Appenderator tests for disjoint query intervals. (#3281),2016-07-24T02:48:15Z
c58bbfa0c67ca1c68d83c46b1e0655155e9633f9,"Intern DataSegments in SQLMetadataSegmentManager (#3267)

* Helps with heap pressure on coordinator",2016-07-21T23:46:08Z
a42ccb6d19997bb67622e0444ca564e974ddf24c,"Support filtering on long columns (including __time) (#3180)

* Support filtering on __time column

* Rename DruidPredicate

* Add docs for ValueMatcherFactory, add comment on getColumnCapabilities

* Combine ValueMatcherFactory predicate methods to accept DruidCompositePredicate

* Address PR comments (support filter on all long columns)

* Use predicate factory instead of composite predicate

* Address PR comments

* Lazily initialize long handling in selector/in filter

* Move long value parsing from InFilter to InDimFilter, make long value parsing thread-safe

* Add multithreaded selector/in filter test

* Fix non-final lock object in SelectorDimFilter",2016-07-21T00:08:49Z
cd7337fc8a468007c6a0008f876ef840165cb1c6,"Calculate max split size based on numMapTask in DatasourceInputFormat (#2882)

* Calculate max split size based on numMapTask

* updated docs & fixed possible ArithmeticException",2016-07-20T23:53:51Z
fd798d32bcfdbbeb71379f723fd2aeeb2fcabbe2,fix testSecuredGetServer ut (#3262),2016-07-20T17:20:13Z
06624c40c095f461d6e1584ac3602281ea182d67,"Share query handling between Appenderator and RealtimePlumber. (#3248)

Fixes inconsistent metric handling between the two implementations. Formerly,
RealtimePlumber only emitted query/segmentAndCache/time and query/wait and
Appenderator only emitted query/partial/time and query/wait (all per sink).

Now they both do the same thing:
- query/segmentAndCache/time, query/segment/time are the time spent per sink.
- query/cpu/time is the CPU time spent per query.
- query/wait/time is the executor waiting time per sink.

These generally match historical metrics, except segmentAndCache & segment
mean the same thing here, because one Sink may be partially cached and
partially uncached and we aren't splitting that out.",2016-07-20T03:15:13Z
50db86cb17c3d627bfdcbe3e11bee1bc53f546cf,Quickstart: Use hadoopyString for batch indexing instead of string. (#3263),2016-07-19T17:18:10Z
47894c4effb5b78c3366f000ab5fbdeb2358c091,"add comment for default hadoop coordinates (#3257)

1) Modify CliHadoopIndexer to share constant from `TaskConfig.DEFAULT_DEFAULT_HADOOP_COORDINATES`
2) add comment to pom.xml as discussed in
https://github.com/druid-io/druid/pull/3044

fix name",2016-07-18T22:23:11Z
a9a73c5f71ad0a9e315e0212245c8a56c3c360bd,Distribution: pull-deps compiled hadoop version (#3044),2016-07-18T16:39:15Z
13d8d96bc6054900425aaf7a18295f54f0116c1e,Update to guice-4.1.0. (#3222),2016-07-18T15:08:43Z
dd4ec751d0d12b4039c10852b7e4ddbfdb7b5326,"Update docs for working with Hadoop dependencies. (#3252)

- Attempt to make things clearer in general
- Point out that HDFS deep storage and MR jobs don't use the same loading mechanism
- Recommend using mapreduce.job.classloader = true when possible",2016-07-18T12:47:58Z
3f82108d15eeb908e670f995f6c246dd092f7353,optionally enable coordinator auto kill tasks on all dataSources via dynamic config (#3250),2016-07-18T01:47:52Z
79958182209bbd23e048760e954e996346efa9c7,"Increase test timeout to prevent failing on slow machines (#3224)

constantly timing out on one of slow build machines, increasing the
timeout fixed it.

Running io.druid.granularity.QueryGranularityTest
Tests run: 33, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.776
sec - in io.druid.granularity.QueryGranularityTest",2016-07-18T01:44:48Z
90f5d8cd174f2e09625503e6c02c2676f93d36a6,Fix path in cluster.md. (#3253),2016-07-17T15:30:20Z
6cd1f5375b0bf91353d17c1fcb7def25937b6985,"Better harmonized dimensions for query metrics. (#3245)

All query metrics now start with toolChest.makeMetricBuilder, and all of
*those* now start with DruidMetrics.makePartialQueryTimeMetric. Also, ""id""
moved to common code, since all query metrics added it anyway.

In particular this will add query-type specific dimensions like ""threshold""
and ""numDimensions"" to servlet-originated metrics like query/time.",2016-07-14T18:55:51Z
55e7a52475ab25b2bc70b8be1c9b6029e7c8f3d5,Replace deprecated usage for StringInputRowParser and JSONParseSpec (#3215),2016-07-14T16:19:17Z
a1715c8cdacd8e0957fc4f99067304f26c3f77b8,"fix-3237 (#3244)

DruidBroker use FilteredServerInventoryView instead of
ServerInventoryView",2016-07-14T05:30:35Z
6a03a0cfece5af5c048662aa1438cd9ceb227e47,Fix ingest/persist/backPressure docs. (#3243),2016-07-14T04:56:28Z
c622a252367eff56f43e79c75eecb0f8dd2cb35a,"BenchmarkDataGenerator: Don't generate timestamps at the end instant of the interval. (#3242)

Because timestamps at the end instant are not actually part of the interval. This
affected benchmark numbers, since it meant some data points would not be queried
(the interval for the query was based on getDataInterval) and also the
TimestampCheckingOffsets could not use the allWithinThreshold optimization.",2016-07-14T04:50:10Z
a931debf790eaf4454ae13f35e11ba9d39765645,Optionally intern ServerInventoryView inventory objects. (#3238),2016-07-14T03:19:26Z
3ab4a4efbc3f72abc4f7abe802fd677d8d390009,Fix formatting in granularities doc. (#3229),2016-07-08T16:29:58Z
ea03906fcfb29a70fe7525b2d3114782f7da7903,"Configurable compressRunOnSerialization for Roaring bitmaps. (#3228)

Defaults to true, which is a change in behavior (this used to be false and unconfigurable).",2016-07-08T04:54:19Z
5d9fd0a713c9f761f33f6e04b1d5590e337986fa,"Migrate IndexerSQLMetadataStorageCoordinator.getUnusedSegmentsForInterval to streaming (#3043)

* Migrate IndexerSQLMetadataStorageCoordinator.getUnusedSegmentsForInterval to streaming
* Missed query from #2859

* Make inReadOnlyTransaction part of SQLMetadataConnector",2016-07-06T23:55:27Z
3f1681c16c456c64837b843b20b5e0d232da0047,"Caffeine cache extension (#3028)

* Initial commit of caffeine cache

* Address code comments

* Move and fixup README.md a bit

* Improve caffeine readme information

* Cleanup caffeine pom

* Address review comments

* Bump caffeine to 2.3.1

* Bump druid version to 0.9.2-SNAPSHOT

* Make test not fail randomly.

See https://github.com/ben-manes/caffeine/pull/93#issuecomment-227617998 for an explanation

* Fix distribution and documentation

* Add caffeine to extensions.md

* Fix links in extensions.md

* Lexicographic",2016-07-06T22:42:54Z
b8a4f4ea7b85e96248cfed6f041826697a8c8b0b,"DumpSegment: Add --dump bitmaps option. (#3221)

Also make --dump metadata respect --column.",2016-07-06T19:42:50Z
fdc7e88a7d963ac68ac40290818633768ad495b7,"Allow queries with no aggregators. (#3216)

This is actually reasonable for a groupBy or lexicographic topNs that is
being used to do a ""COUNT DISTINCT"" kind of query. No aggregators are
needed for that query, and including a dummy aggregator wastes 8 bytes
per row.

It's kind of silly for timeseries, but why not.",2016-07-06T15:08:54Z
bfa5c05aaa4b4b4a982d14bdba54db00a925cc25,"Make global lookup cache introspector class public (#3199)

* Make global lookup cache introspector class public
* Fixes #3187

* Make KafkaLookupExtractorIntrospectionHandler a public static class",2016-07-01T22:50:57Z
e1313e4b90bb434a33131a62c74abd52343f3f2e,add log msg when event recvr firehose buffer is full (#3209),2016-07-01T22:35:30Z
8eeae2e84460cf2c1fb2f50492ac94ba070e309e,remove bad docs on setting up clusters (#3188),2016-07-01T20:41:40Z
99844dfeb564087d7bb21934dd087fa8941794fb,"remove need for tmp extensions dir (#3211)

correct lib path relative to base distribution dir",2016-07-01T19:55:57Z
d2636d1a64e207861a9f22be4cf2cdba79845ade,"[pull-deps] If --clean flag is not set, skip creating root extension directories if they already exist. (#3130)",2016-07-01T16:18:57Z
8b7d9750ee0d03244447858c7134b34c2dc18de6,Update extension docs for global lookup module (#3206),2016-06-29T19:51:52Z
485e381387edf1795c5ebbb8002537f14b4ed8cb,"remove datasource from hadoop output path (#3196)

fixes #2083, follow-up to #1702",2016-06-29T15:53:45Z
4c9aeb73538fad1443df438314a4570940edf9fd,"Revert ""update druid console version (#3189)"" (#3203)

This reverts commit 496b801bc39bec26a4084d6332a1da676091a5dd.",2016-06-29T15:29:57Z
f3a36621335e6205c58e37ee1a5f3fb3f0e50742,Fix compile error in SearchBinaryFnTest (#3201),2016-06-29T14:44:45Z
b24425a2805f2bf5819df3e94f1f88a1dda32ead,update docs with new behavior (#3200),2016-06-28T23:17:04Z
efbcbf5315721ae3f42a009c93c66ad028a17b9d,"Support alphanumeric sort in search query (#2593)

* support alphanumeric sort in search query

* address a comment about handling equals() and hashCode()

* address comments

* add Ut for string comparators

* address a comment about space indentations.",2016-06-28T22:06:18Z
1d40df4bb7f75b0f81f11d9b6947ee589e49744a,fix kafka consumer concurrent access during shutdown (#3193),2016-06-28T20:23:17Z
496b801bc39bec26a4084d6332a1da676091a5dd,update druid console version (#3189),2016-06-28T01:02:40Z
bf53490d70f5f03d244c8efcb49d55fa85976dac,fix: no split file will throw IndexOutOfBounds Exception (#3179),2016-06-26T19:50:18Z
45f553fc28d49adf8b625dd64c3edd5913e395ab,Replace the deprecated usage of NoneShardSpec (#3166),2016-06-25T17:27:25Z
4cc39b2ee7f67bf59c283d3e4a6f9bb17bc4771f,"Alternative groupBy strategy. (#2998)

This patch introduces a GroupByStrategy concept and two strategies: ""v1""
is the current groupBy strategy and ""v2"" is a new one. It also introduces
a merge buffers concept in DruidProcessingModule, to try to better
manage memory used for merging.

Both of these are described in more detail in #2987.

There are two goals of this patch:

1. Make it possible for historical/realtime nodes to return larger groupBy
   result sets, faster, with better memory management.
2. Make it possible for brokers to merge streams when there are no order-by
   columns, avoiding materialization.

This patch does not do anything to help with memory management on the broker
when there are order-by columns or when there are nested queries. That could
potentially be done in a future patch.",2016-06-25T01:06:09Z
0aa7d71ca50d653652d84c59a9962aa5cfee2e81,Add doc link to eclipse formatting settings as well (#3131),2016-06-24T22:27:50Z
94b3c74cdcb33fa010b84fc10d725fb1f29f9f06,"Druid launch script improvements (#3175)

* Add status command to launch scripts

* make druid init script to pick up config directories from environment variables

make druid init script to pick up config directories from environment
variables",2016-06-24T22:02:34Z
8a08398977899630556ebfe1e4c29379a8a39858,"Add segment pruning based on secondary partition dimension (#2982)

* add get dimension rangeset to filters

* add get domain to ShardSpec and added chunk filter in caching clustered client

* add null check and modified not filter, started with unit test

* add filter test with caching

* refactor and some comments

* extract filtershard to helper function

* fixup

* minor changes

* update javadoc",2016-06-24T21:52:19Z
6be18376c0e0b10424e10565c3424b585e3d6e29,"Make forking task runner have more informative thread names during the long-blocking part (#3172)

* Make forking task runner have more informative thread names during the long-blocking part

* Make string.format do the work",2016-06-24T15:56:01Z
15f833a86172bce04e8f76ecf00f99bc04fa576f,"Make extension classloader caching keyed on directory (#3165)

* Make extension classloaders keyed by extension directory
* Fixes #3163

* Add in same-directory-name unit test",2016-06-24T00:13:19Z
66d8ad36d7aa57e240b7f595796003ba1fe5cbf2,"adds new coordinator metrics 'segment/unavailable/count' and (#3176)

'segment/underReplicated/count' (#3173)",2016-06-23T21:53:15Z
da660bb592b055edf79a7560dee22155c57e2923,"DumpSegment tool. (#3182)

Fixes #2723.",2016-06-23T21:37:50Z
a437fb150bf1721cd5e11ab3f852d74d9a46be20,Fix SegmentMetadataQuery when queryGranularity is requested but not present. (#3181),2016-06-23T21:30:50Z
2696b0c45160da6420f0644ba6f5f3559c6d0509,"Retry for transient exceptions while doing cleanup for Hadoop Jobs (#3177)

* fix 1828

fixes https://github.com/druid-io/druid/issues/1828

* remove unused import

* Review comment",2016-06-23T20:38:47Z
6f330dc8163aa1bcaad72c1172eebbde100b60dd,"Better handling for parseExceptions for Batch Ingestion (#3171)

* Better handling for parseExceptions

* make parseException handling consistent with Realtime

* change combiner default val to true

* review comments

* review comments",2016-06-22T23:38:29Z
24860a1391762d19d840165d5d9cb6a7f9aed6bd,"Two-stage filtering (#3018)

* Two-stage filtering

* PR comment",2016-06-22T23:08:21Z
ebd654228b590d8a926c23fe179e64daa1f1c141,fix: avro types exception in sketch (#3167),2016-06-22T20:54:20Z
f46ad9a4cb9aa6d768b7ffc9fc5bdc6358ede748,"support Union Segment metadata queries (#3132)

* support Union Segment metadata queries

fix 3128

* remove extraneous sys out",2016-06-21T17:30:50Z
12be1c0a4bbbb3f955e57a8dc18c4279fd8f29e2,"Add bucket extraction function (#3033)

* add bucket extraction function

* add doc and header

* updated doc and test",2016-06-17T16:24:27Z
8c76fe7b9700e31527cf8265beba1e2fae0d5c25,"docs: change OR to AND inside query docs about multi-value dims (#3162)

* docs: replace OR by AND inside topnquery docs about multi value dimensions

* docs: replace OR by AND inside groupby docs about multi value dimensions",2016-06-17T15:54:18Z
8b2103683372c9ca421c46ec93a1c59f7bfe2e6e,Make integration test dependency copy run in batch mode (#3152),2016-06-17T01:44:15Z
07288c8fc0d28cf3ac3791fd0c3510cb789bb09b,"update compares some more (#3158)

* update compares some more

* fix

* fix

* fix",2016-06-17T01:34:43Z
c12712e8b86906b87db6a8d0d8da6a0262816571,"Move ""libraries.md"" out of docs, onto the main site. (#3159)",2016-06-17T01:14:35Z
674f94083e381f302fab9e43f15fb940a3b3934c,"Add more logging around failed S3DataSegmentMover DeleteExceptions (#3104)

* Add more logging around failed S3DataSegmentMover DeleteExceptions

* Fix test NPE",2016-06-16T21:58:33Z
6c2fd75e4645613cf26b9e1f654fc7d1d7691458,"update vs spark doc (#3116)

* update vs spark doc

* update based on comments",2016-06-15T17:30:19Z
7da4a283a96429b6b6267140eb3f921107bbab6b,Add missing layout: toc to TOC. (#3144),2016-06-14T17:48:05Z
f7fa1d8c621762b47627c00139da1c57344174f2,"[QTL] Allow S3 version finder to search entire s3 object key (#3139)

* Allow S3 version finder to search entire s3 object key
* Previously only was able to search immediate ""directory""

* Update method javadoc

* Expand docs a bit better",2016-06-14T04:02:28Z
e7ac2e8ba28236191859f456c799aaf6536c5728,Set a non-zero exit code when error incommand parsing (#3137),2016-06-14T03:38:37Z
dc2bf9efa5c2569858d4f9a4622eb45970323d73,"Update absolute TOC links. (#3138)

See druid-io/druid-io.github.io#286.",2016-06-14T00:57:52Z
ebf890fe797530848e2c3cf95082cfd403ddcf5b,Update master version to 0.9.2-SNAPSHOT. (#3133),2016-06-13T20:10:38Z
aa2982ee31f3558e1e2f5020de4bc1fae9b06207,Update bytebuffer-collections to 0.2.5 (#3117),2016-06-13T15:41:20Z
3b3e772748141192c10b502189319d985a302b5b,Add --no-default-remote-repositories flag to pull-deps. (#3120),2016-06-13T11:31:18Z
53886a677c63e1c9c4b85db00ae43b5c1d3492ef,include avro in the druid tarball (#3123),2016-06-13T11:28:21Z
cf90508793e03a4b813852da43831c17a8b95cb8,Disable cobertura travis portion (#3122),2016-06-13T06:57:35Z
7294ea87c3c3655812b4196f6c218bf45e27b74f,link to statsd metrics emitter docs from development/extensions.html doc page (#3125),2016-06-10T23:27:16Z
0d427923c01cd27fff4a270e9e72393a3ae9cdc5,"fix caching for search results (#3119)

* fix caching for search results

properly read count when reading from cache.

* fix NPE during merging search count and add test

* Update cache key to invalidate prev results",2016-06-10T00:49:47Z
c2155e13bdb7f307feace0e060c2be554feb61ec,upload.sh: Use awscli if s3cmd is not available. (#3114),2016-06-09T00:01:46Z
5998de7d5b328fbdec86ec917daffb153e80f8e5,"Fix lenient merging of conflicting aggregators. (#3113)

This should have marked the conflicting aggregator as null, but instead it
threw an NPE for the entire query.",2016-06-08T22:56:48Z
37c8a8f186344c238b96a8ba9c2a33da7524ac42,Speed up filter tests with adapter cache (#3103),2016-06-08T14:41:10Z
4faa298977bf17af6e6a812bf0cca04eac409c55,update kafka client for kafka indexing service to 0.9.0.1 (#3109),2016-06-08T13:51:03Z
5321ba3e8fc8aaa1f7f3f126e4df05698db67f41,"Switch to absolute TOC (#3110)

Depends on druid-io/druid-io.github.io#282",2016-06-08T04:39:34Z
ab4209c82a324a9b3c604cb07045505466c4f272,killDataSourceWhitelist in CoordinatorDynamicConfig accepts comma separated list of strings in addition to json array of strings so that coordinator console can do the updates correctly (#3095),2016-06-07T22:39:41Z
c5dbf364e319efa8e24db385683af368fe14f53b,"Fix JSON flatten docs, add link to path expression tester (#3105)",2016-06-07T21:39:57Z
4ab675e8637b1690106c96785ffd4918672c4b25,Fix command name in example (#3088),2016-06-07T17:44:27Z
9f93be448e41cac8913f2005b12324770079e780,Fix logical operator in example (#3093),2016-06-07T17:44:18Z
99ee3f4dc38ca2df1f6b3859db732cb81190eca2,"Fixups, clarifications to lookup docs. (#3060)",2016-06-07T17:43:35Z
fa41a6466a543d403f20daa7932fe8af01cdddfc,"Cleanup the base lookup cluster wide config docs (#3061)

* Cleanup the base lookup cluster wide config docs

* Add better examples in lookups-cached-global.md

* Use actual valid stock lookups

* Fixed maps with :

* Add mix of lookups

* Better examples in extension

* Remove unneeded namespace requirement

* Add extra line space

* Add link to lookup tiers

* Renamed header",2016-06-07T17:42:41Z
e6b32c24ae7ca40f112129fbedd8ba723e9cb105,bug fix for getNewNodes() in ListenerDiscoverer (#3092),2016-06-07T11:02:42Z
5a3db634ff7c122f01c702f0c9052523efa1977f,add synchronization to SupervisorManager (#3077),2016-06-07T06:29:23Z
8cac7105462ff244f2ca52159f3d351215de1f4b,"Async lookups-cached-global by default (#3074)

* Async lookups-cached-global by default
* Also better lookup docs

* Fix test timeouts

* Fix timing of deserialized test

* Fix problem with 0 wait failing immediately",2016-06-03T20:58:10Z
a2290a8f05d2c42462aa5d39737893706f5cf6ca,support seamless config changes (#3051),2016-06-03T20:50:19Z
6d38dde2f869bb4cbd8b383882a757abdc3c6546,exclude slf4j-log4j12 (#3075),2016-06-03T18:39:23Z
54139c68159149017ea4ed9510346934d4e68997,"Fix NPE in registeredLookup extractionFn when ""optimize"" is not provided. (#3064)",2016-06-03T17:58:17Z
2db5f49f3526ec16e7535cebdb977b65cb762583,Fix JavaScriptConfig. (#3062),2016-06-03T06:59:00Z
bbc5509078d86f9bc56a41a2bf021730c501cd2f,Limit number of jetty threads that can be used by lookups (#3068),2016-06-03T05:33:12Z
6171e078c8fdd2250e331f1c225db2b4e3be8809,"Improve NPE message in LookupDimensionSpec when lookup does not exist. (#3065)

The message used to be empty, which made things hard to debug.",2016-06-03T02:59:12Z
603fbbcc2009ba1e1cff66669df266a525d2aeb7,"Fix docs for ""contains"" search spec. (#3066)",2016-06-03T02:03:40Z
474286bbce500cf7195919396128a752acc7704a,Make TaskMaster giant lock fair (#3050),2016-06-02T19:10:40Z
13c267bfeef4f095c3853c7fa9685b34b1230c11,Added new line for site formatting (#3059),2016-06-02T18:36:45Z
44237e25d931cbc2756ee16f8aee7d766623fe61,fix duration format and number format (#3057),2016-06-02T17:09:21Z
b4737336e5f5431f17f5bf1a1f1f68f6298f48a3,Added info about Google Cloud Storage (#3056),2016-06-02T17:06:07Z
447033985e107716e9631379e19c2bfbe9add968,"Make S3DataSegmentMover not bother checking for items if they are the same (#3032)

* Make S3DataSegmentMover not bother checking for items if they are the same",2016-06-02T16:27:21Z
d552a5c034d3f1da6ae1ab083a0ec29eb4d77000,"Documented getAuditTime, getPayload methods in AuditEntry.java (#3045)

* Documented getAuditTime, getPayload methods in AuditEntry.java

* author tag removed from documentation",2016-06-02T15:20:33Z
545cdd63abf7e957b4d70a9e64281eeff2b86e32,"ensure the cleaning of overshadowed unloaded segments (#3048)

* ensure the cleaning of overshadowed unloaded segments

* add testing plus comments",2016-06-02T14:03:58Z
767190d5db2a5ad7cca30cc02f54943564ea6064,"Clear up confusing wording (#3052)

There is no such thing as a ""Java aggregator"" in Druid from a user's point of view, there are just native aggregator that happen to be implemented in Java.",2016-06-01T22:41:50Z
874a0a4bdd50308ddab5c2ef5c95d3be7fd244dd,MetadataResource: Fix handling of includeDisabled. (#3042),2016-06-01T18:56:37Z
5e44ed71322101717f72d276c2196c2c392fc8a0,Fix redirect-making and version-replacing in deploy-docs. (#3041),2016-05-31T23:36:10Z
cd5c5419bb660af0231936ced15b79f55e532eaa,"Make docs deploying better. (#3040)

- Make redirects for old links based on _redirects.json
- Replace #{DRUIDVERSION} tokens in docs with current version
- Allow origins named something other than ""origin""
- Can use either s3cmd or awscli, depending on availability",2016-05-31T22:34:58Z
f6c39cc844833f2ace72cb050a0e4a5cf4477536,"Kafka task minimum message time (#3035)

* add KafkaIndexTask support for minimumMessageTime

* add Kafka supervisor support for lateMessageRejectionPeriod",2016-05-31T18:37:00Z
e662efa79fbdb9e0664982565d6b91c25765a903,segment interface refactor for proposal 2965 (#2990),2016-05-27T03:36:41Z
a004f1e1c5883c0c751ca428b09bf3a07e725c51,appenderator plumber work from gian's branch (#2913),2016-05-26T21:46:32Z
847501a93984cfd3fb7c99af5a7b94f1045a6e80,"Add better messages around LookupCoordinatorManager failures (#3027)

* Add better messages around LookupCoordinatorManager failures
* Catches #3026

* A few more little tests

* Add more forceful shutdown",2016-05-26T19:32:35Z
e2653a8cf4a1d727c5a0e0406092002e68634052,handle a NPE in LookupCoordinatorManager.start() (#3026),2016-05-26T16:55:33Z
ebb6831770e6da5d84b1c39c3e6d27554852e784,"rm , of jobProperties. jackson can not parse it (#3012)",2016-05-26T16:46:33Z
3ef24c03b3f3d4a55e5a7bf738ca3c3fa356db9b,"Validate X-Druid-Task-Id header in request/response and support retrying on outdated TaskLocation information, add KafkaIndexTaskClient unit tests (#3006)

* validate X-Druid-Task-Id header in request and add header to response

* modify KafkaIndexTaskClient to take a TaskLocationProvider as the TaskLocation may not remain constant",2016-05-26T05:05:18Z
b5bd40659733ee5acf7e0be1cd317f6602b1cda4,"fix #2991: race condition in OnheapIncrementalIndex#addToFacts (#3002)

* fix #2991: race condition in OnheapIncrementalIndex#addToFacts

* add missing header

* handle parseExceptions when first doing first agg",2016-05-26T02:05:46Z
b72c54c4f8bdab1becc685cabe8b2062391c8ad4,"Add benchmark data generator, basic ingestion/persist/merge/query benchmarks (#2875)",2016-05-25T23:39:37Z
7e67397b5a35f670e41f1a88b910f13251535077,fix-3010: look through all versions to find the set with complete partitions (#3013),2016-05-25T18:01:22Z
245077b47fc9352455740ece9e16889c88c146e2,Fix formatting in lookups-cached-global.md (#3009),2016-05-25T00:28:39Z
c738c0e1cd402885511e2b658b7b40770fd18a36,Silly Typo in docs,2016-05-24T20:31:58Z
8024b915e28f80ccd225450fe2ceb9da1cbdcb82,"[QTL] Implement LookupExtractorFactory of namespaced lookup (#2926)

* support LookupReferencesManager registration of namespaced lookup and eliminate static configurations for lookup from namespecd lookup extensions

- druid-namespace-lookup and druid-kafka-extraction-namespace are modified
- However, druid-namespace-lookup still has configuration about ON/OFF
  HEAP cache manager selection, which is not namespace wide
  configuration but node wide configuration as multiple namespace shares
  the same cache manager

* update KafkaExtractionNamespaceTest to reflect argument signature changes

* Add more synchronization functionality to NamespaceLookupExtractorFactory

* Remove old way of using extraction namespaces

* resolve compile error by supporting LookupIntrospectHandler

* Remove kafka lookups

* Remove unused stuff

* Fix start and stop behavior to be consistent with new javadocs

* Remove unused strings

* Add timeout option

* Address comments on configurations and improve docs

* Add more options and update hash key and replaces

* Move monitoring to the overriding classes

* Add better start/stop logging

* Remove old docs about namespace names

* Fix bad comma

* Add `@JsonIgnore` to lookup factory

* Address code review comments

* Remove ExtractionNamespace from module json registration

* Fix problems with naming and initialization. Add tests

* Optimize imports / reformat

* Fix future not being properly cancelled on failed initial scheduling

* Fix delete returns

* Add more docs about whole introspection

* Add `/version` introspection point for lookups

* Add more tests and address comments

* Add StaticMap extraction namespace for testing. Also add a bunch of tests

* Move cache system property to `druid.lookup.namespace.cache.type`

* Make VERSION lower case

* Change poll period to 0ms  for StaticMap

* Move cache key to bytebuffer

* Change hashCode and equals on static map extraction fn

* Add more comments on StaticMap

* Address comments

* Make scheduleAndWait use a latch

* Sanity renames and fix imports

* Remove extra info in docs

* Fix review comments

* Strengthen failure on start from warn to error

* Address comments

* Rename namespace-lookup to lookups-cached-global

* Fix injective mis-naming
* Also add serde test",2016-05-24T17:56:40Z
0ac1b27d53a0e5f6b826cb6c436e33d57fdabc86,"Allow manually setting of shutoffTime for EventReceiverFirehose (#2803)

* Allow dynamically setting of shutoffTime for EventReceiverFirehose

Allow dynamically setting shutoffTime for EventReceiverFirehose

review comments and tests

* shut down exec on close",2016-05-24T14:24:00Z
dea4391a49888a1b034e99ca13b4e80f4ab63702,fix broken links (#3003),2016-05-23T13:38:21Z
dcabd4b1ee1e87f83c7524b1a62cc5ad1b17687b,"Add lookup optimization for InDimFilter (#2938)

* Add lookup optimization for InDimFilter

* tests for in filter with lookup extraction fn

* refactor

* refactor2 and modified filter test

* make optimizeLookup private",2016-05-19T23:29:16Z
00de26c76a79b5fca8f4d33a1f053cf0e53d8d54,"fix extensions docs (#2995)

* fix extensions docs

* fix mistakes",2016-05-19T21:01:06Z
99e8fb02167842128d3cb79c4f34e9ed9b8d372e,Fix typo in CONTRIBUTING.md (#2988),2016-05-18T20:46:53Z
778f97a80eb7693fe020b160bb1bc4e6f2c952a8,"attempt to fix-2906 (#2985)

* attempt to fix-2984

* review comments

* Add test",2016-05-18T20:12:38Z
a8c2f07f1c483a768aa5a58310faddbe60c0451d,Make formatting IntelliJ 2016 friendly (#2978),2016-05-18T19:42:21Z
970614875b541ef6c72dd871cda5a7235c57406c,Fix race where results from an IncrementalIndexSegment could be cached. (#2983),2016-05-18T08:27:50Z
15ccf451f9b12cbceff853dd71fac7accc258be8,"Move QueryGranularity static fields to QueryGranularities (#2980)

* Move QueryGranularity static fields to QueryGranularityUtil
* Fixes #2979

* Add test showing #2979

* change name to QueryGranularities",2016-05-17T23:23:48Z
eaaad01de7d89cdf5396c962e903f9f68885c50d,"[QTL] Datasource as lookupTier (#2955)

* Datasource as lookup tier
* Adds an option to let indexing service tasks pull their lookup tier from the datasource they are working for.

* Fix bad docs for lookups lookupTier

* Add Datasource name holder

* Move task and datasource to be pulled from Task file

* Make LookupModule pull from bound dataSource

* Fix test

* Fix code style on imports

* Fix formatting

* Make naming better

* Address code comments about naming",2016-05-17T22:44:42Z
fb01db4db7becebd63116d211a536b220659006b,"[QTL] Allows RegisteredLookupExtractionFn to find its lookups lazily (#2971)

* Allows RegisteredLookupExtractionFn to find its lookups lazily

* Use raw variables instead of AtomicReference

* Make sure to use volatile

* Remove extra local variable.

* Move from BAOS to ByteBuffer",2016-05-17T18:29:39Z
e79284da5955497d651f1842e119acf71f7d7586,"new interval based cost function (#2972)

* new interval based cost function

Addresses issues with balancing of segments in the existing cost function
- `gapPenalty` led to clusters of segments ~30 days apart
- `recencyPenalty` caused imbalance among recent segments
- size-based cost could be skewed by compression

New cost function is purely based on segment intervals:
- assumes each time-slice of a partition is a constant cost
- cost is additive, i.e. cost(A, B union C) = cost(A, B) + cost(A, C)
- cost decays exponentially based on distance between time-slices

* comments and formatting

* add more comments to explain the calculation",2016-05-17T16:56:00Z
2863adef602e5bf81379af049cf330ac8625f6f0,"Add jconsole.sh example script for connecting (#2947)

* Can change logging at run-time",2016-05-16T22:37:15Z
c41bfe50d0edb473faeecd3fc5e3f7d0241a0e97,Using quotes around the cp (#2934),2016-05-16T22:16:48Z
a54381a0842a914aa0158b0afed910af1b2e5f1f,"Fix CombiningSequence.close on single element sequences. (#2969)

Regression introduced by #2892.",2016-05-14T06:12:30Z
681ffdb4173966d66161ae6d5885c8235cbd15e9,try to make DruidCoordinatorTest deterministic (#2967),2016-05-13T21:43:28Z
a9b721a01b8edc68f37a8fedec2ec59a4ebe9b61,"Allow user to set cost balancer threads more than or equal to the number of cores. (#2964)

* Allow user to set cost balancer threads more than the number of cores.

Allow user to set cost balancer threads more than the number of cores.

* modify test",2016-05-13T18:27:42Z
d3e9c47a5ff95d68984f30206b76dd110e22c022,use correct ObjectMapper in Index[IO/Merger] in AggregationTestHelper and minor fix in theta sketch SketchMergeAggregatorFactory.getMergingFactory(..) (#2943),2016-05-13T04:36:31Z
e3ea842cd388f84e802a42fdd951085ca081efd8,add available query granularity strings (#2960),2016-05-13T01:49:31Z
d821144738835b64e5739e9fb878805e056158aa,at historicals GpBy query mergeResults does not need merging as results are already merged by GroupByQueryRunnerFactory.mergeRunners(..) (#2962),2016-05-13T00:41:24Z
abf64a13b0564d60d78e91ef5d3074724e493c30,"reconnect to the graphite after transient disconnect (#2952)

* reconnect to the graphite after transient disconnect

* catch the socket exception and retry",2016-05-12T18:32:36Z
01bebf432af197198ec6972c42ba8a488e01c159,GroupByQuery: Multi-value dimension tests. (#2959),2016-05-12T18:31:50Z
81cab8a7bb86ce3e7d8d00f601db692ed01f7606,"Make lookups more idempotent on update requests. (#2954)

* No longer fails if an update fails but it shouldn't have replaced it",2016-05-11T18:22:35Z
f2510cf1255b25f87a8de81c2496c4686495da1e,Remove DataSchema equals() and hashcode(),2016-05-10T23:09:28Z
6332bd70f4437fc91b2f18fcc6787a89b0e44700,Add smile provider (#2951),2016-05-10T23:03:39Z
2288c783952e7211ae192ae951d0798c2b77f6af,"chore_fix-quickstart-docs (#2946)

Fixes a small grammatical error in the `./docs/content/tutorials/quickstart.md` whereby a sentence didn't make sense",2016-05-10T16:52:24Z
13a2b265a5e3a05d043ac9391a4db34f397ae80c,Adds init scripts (#2939),2016-05-10T16:00:13Z
45b2e65d7553e62509e0ce7e56b2ad76dbd5cd8c,"[QTL] adding listDelimiter to lookup parser spec (#2941)

* adding listDelimiter to lookup parser spec

* cleaning code",2016-05-10T10:11:16Z
0c04650e69f17e4aac9afeefe696f1bdd0edf088,Lookup Announcer eager starting (#2944),2016-05-10T06:51:47Z
454bb034f1d0d13defda8de9e6b564ce64bf2ec6,"Nicer toString on ListneingAnnouncerConfig (#2936)

* Helps with debugging",2016-05-10T06:51:06Z
a31348450fb558aa0c962ce2b503c959057a9936,"Add toString for LookupConfig (#2935)

* Helps with operations and getting where the snapshot dir is",2016-05-10T01:20:00Z
b8af84d1fc75790b565ec02f300d401e0f1d75a0,Update tutorials to tranquility v0.8.0. (#2937),2016-05-09T18:50:37Z
79a54283d43e7e5200bbadbc9de2acc3d2323e2c,"Optimize filter for timeseries, search, and select queries (#2931)

* Optimize filter for timeseries, search, and select queries

* exception at failed toolchest type check

* took out query type check

* java7 error fix and test improvement",2016-05-09T18:04:06Z
2cfd337378fcd2220b61874c310f7ed6459ca2e9,"Merge pull request #2933 from dclim/SQLMetadataSupervisorManagerTest-fix

add uuid to primary key for supervisor table",2016-05-09T16:41:32Z
90b0b0a4adb9f2e7dbe7cfed2a1a420c53dad5dc,"Make URIExtraction not require FileSystem impls for URIs it understands (#2929)

* Make URIExtraction not require FileSystem impls for URIs it understands
* Fixes #2928

* Preserve URI information

* Simply case for exact matching

* Move unused variable",2016-05-08T17:53:53Z
8b570ab1301f8dd4ebd7839d7bd5bc47b0a92188,make it clear what LookupExtractorFactory start/stop methods return (#2925),2016-05-05T17:38:40Z
fffa9c8265a7410769cf1bc955ae455c54009076,"Fix flattenSpec docs, ""nested"" should be ""path"". (#2924)",2016-05-05T15:59:41Z
a2dd57cf65aba1a48f62a0cba923cb0b261dd0e4,"Optimize CostBalancerStrategy (#2910)

* Optimize CostBalancerStrategy

Ignore benchmark test in normal run

fix test

review comments

fix compilation

fix test

* review comments

* review comment",2016-05-05T15:29:08Z
b489f636986f0bccee135f3c7f8444c61df7b75b,"Supervisor for KafkaIndexTask (#2656)

* supervisor for kafka indexing tasks

* cr changes",2016-05-05T06:13:13Z
2a769a9fb7162cda56e61745357ea4393fe68569,"Make S3DataSegmentPuller do GET requests less often (#2900)

* Make S3DataSegmentPuller do GET requests less often
* Fixes #2894

* Run intellij formatting on S3Utils

* Remove forced stream fetching on getVersion

* Remove unneeded finalize

* Allow initial object fetching to fail and be retried",2016-05-04T23:21:35Z
035134d0705a037d9d09349dde3156255ec54bc4,fix for file not found execption at the graphite extension module (#2917),2016-05-04T22:37:10Z
f8ddfb9a4bb082fb4fc163005ff041a7a77d1f1f,"Split SegmentInsertAction and SegmentTransactionalInsertAction for backwards compat. (#2922)

Fixes #2912.",2016-05-04T20:54:34Z
e067acd443bed562fbd099f7d2ddadd6d094e9c7,Remove extraneous files introduced in #2410. (#2923),2016-05-04T19:22:39Z
50065c82884965afc04c5768b2756f5c685e0d4c,fix spurious failure of RTR concurrency test (#2915),2016-05-04T17:30:20Z
44e52acfc0067bbdfce65b6a0abc026a7af81055,Link up metrics configuration to what they mean (#2921),2016-05-04T17:30:02Z
8e2742b7e8eaa5bacf7479f2086df7e8555928bd,adding QueryGranularity to segment metadata and optionally expose same from segmentMetadata query (#2873),2016-05-03T18:31:10Z
40e595c7a0825b10f0074e221f09b07e51862b3e,"Remove types from TimeAndDims, they aren't needed. (#2865)",2016-05-03T18:10:25Z
45a3a26ef7b9e1271cdeabd03d94623d8787b6bb,"Add more math functions (#2822)

* Add more math functions

* added function list",2016-05-03T17:55:13Z
e680665f1c54410f0913e6f67f9cfb66b55797e5,"Fix Avro parseSpec example, ""type"" should be ""format"". (#2918)",2016-05-03T16:22:43Z
841be5c61f0de79e520da31d9a9a44ca97bab30c,periodically emit metric segment/scan/pending (#2854),2016-05-03T05:38:13Z
2729fea84dd553631a907f4ff883345e9f388d54,"Fix parsing fail of segment id with datasource containing underscore (#2797)

* Fix parsing fail of segment id with underscored datasource (Fix for #2786)

* addressed comment

* renamed and moved code into api. added log4 dependency for tests

* addressed comments

* fixed test fails",2016-05-03T05:37:28Z
6c5bf91f9a189fe1cec4511c2beb6d617aa6024a,"publish metrics numJettyConns to see how number of active jetty connections change over time (#2839)

this can be compared with numer of active queries to see if requests are waiting in jetty queue",2016-05-02T21:08:25Z
6b957aa07212b39a55496dff0f07b7f6611bc238,"[QTL] Make URI Exctraction Namespace take more sane arguments (#2738)

* Make URI Exctraction Namespace take more sane arguments
* Fixes https://github.com/druid-io/druid/issues/2669

* Update docs

* Rename error message

* Undo overzealous deletion of docs

* Explain caching mechanism a bit more in docs",2016-05-02T19:54:34Z
54b717bdc39a1230fc3b21e26661fd6b7f5af9e6,"[QTL] Move kafka-extraction-namespace to the Lookup framework. (#2800)

* Move kafka-extraction-namespace to the Lookup framework.

* Address comments

* Fix missing kafka introspection

* Fix tests to be less racy

* Make testing a bit more leniant

* Make tests even more forgiving

* Add comments to kafka lookup cache method

* Move startStopLock to just use started

* Make start() and stop() idempotent

* Forgot to update test after last change, test now accounts for idempotency

* Add extra idempotency on stop check

* Add more descriptive docs of behavior",2016-05-02T16:45:13Z
e1eb3b1d95a948941e1d516b63005263c5b9cc2b,"Merge pull request #2905 from javasoze/eclipse_formatting

eclipse formatting fixes and added import order specs",2016-04-30T01:42:03Z
488d12d592fa522e751e86dd42c2b417f22bcff3,"CombiningSequence: Delay making next yielder on creation until it is actually asked for. (#2892)

This fixes the behavior of limited combining sequences (otherwise limit = 1 would
actually yield 2 elements).",2016-04-29T18:12:58Z
2203a812bcd86238a4dae1af4a9f6bc481980cfe,statsd-emitter (#2410),2016-04-29T01:41:02Z
5f0a9ccc570d1e458cc69539ebef8794cd735478,fix ClassCastException in FiniteAppenderatorDriver (#2896),2016-04-29T01:39:24Z
3f71a4a3020bd65a54ae8753ff8f6c5540eec97c,Fix missing log arguments in PendingTaskBasedWorkerResourceManagementStrategy (#2898),2016-04-29T01:15:41Z
67b47c982f22b8543988701099beec27c4aa5a9c,Datasketches: Remove isInputThetaSketch from cache key. (#2899),2016-04-29T01:14:52Z
0d745ee1207df4990ab92082ec33c75f5777757e,"Basic authorization support in Druid (#2424)

- Introduce `AuthorizationInfo` interface, specific implementations of which would be provided by extensions
- If the `druid.auth.enabled` is set to `true` then the `isAuthorized` method of `AuthorizationInfo` will be called to perform authorization checks
-  `AuthorizationInfo` object will be created in the servlet filters of specific extension and will be passed as a request attribute with attribute name as `AuthConfig.DRUID_AUTH_TOKEN`
- As per the scope of this PR, all resources that needs to be secured are divided into 3 types - `DATASOURCE`, `CONFIG` and `STATE`. For any type of resource, possible actions are  - `READ` or `WRITE`
- Specific ResourceFilters are used to perform auth checks for all endpoints that corresponds to a specific resource type. This prevents duplication of logic and need to inject HttpServletRequest inside each endpoint. For example
 - `DatasourceResourceFilter` is used for endpoints where the datasource information is present after ""datasources"" segment in the request Path such as `/druid/coordinator/v1/datasources/`, `/druid/coordinator/v1/metadata/datasources/`, `/druid/v2/datasources/`
 - `RulesResourceFilter` is used where the datasource information is present after ""rules"" segment in the request Path such as `/druid/coordinator/v1/rules/`
 - `TaskResourceFilter` is used for endpoints is used where the datasource information is present after ""task"" segment in the request Path such as `druid/indexer/v1/task`
 - `ConfigResourceFilter` is used for endpoints like `/druid/coordinator/v1/config`, `/druid/indexer/v1/worker`, `/druid/worker/v1` etc
 - `StateResourceFilter` is used for endpoints like `/druid/broker/v1/loadstatus`, `/druid/coordinator/v1/leader`, `/druid/coordinator/v1/loadqueue`, `/druid/coordinator/v1/rules` etc
- For endpoints where a list of resources is returned like `/druid/coordinator/v1/datasources`, `/druid/indexer/v1/completeTasks` etc. the list is filtered to return only the resources to which the requested user has access. In these cases, `HttpServletRequest` instance needs to be injected in the endpoint method.

Note -
JAX-RS specification provides an interface called `SecurityContext`. However, we did not use this but provided our own interface `AuthorizationInfo` mainly because it provides more flexibility. For example, `SecurityContext` has a method called `isUserInRole(String role)` which would be used for auth checks and if used then the mapping of what roles can access what resource needs to be modeled inside Druid either using some convention or some other means which is not very flexible as Druid has dynamic resources like datasources. Fixes #2355 with PR #2424",2016-04-28T23:50:28Z
890bdb543d4015cb8f506d30ec793bd888c8edbf,doc fixes (#2897),2016-04-28T22:34:58Z
9669e79df23653a78a283b4087ab710dfe8664b0,fix misleading error log due to race in RTR and concurrency test (#2878),2016-04-28T17:28:00Z
16080dc54fabd77d0e98d6c80cdaef9bc6492ada,"Adjust colliding aggregator cache IDs. (#2891)

- Renumbered ApproximateHistogramAggregatorFactory from 8 to 12,
  8 was taken by CardinalityAggregatorFactory
- Renumbered ApproximateHistogramFoldingAggregatorFactory from 9 to 13,
  9 was taken by FilteredAggregatorFactory",2016-04-28T17:11:34Z
909abd17f35627b152b7925682e067bee1a0cd10,"Sketch cache key should include size, isInputThetaSketch. (#2893)",2016-04-28T17:10:46Z
90ce03c66fa9170e5959d31033c48b7f6f45d690,Fix integer overflow in SegmentMetadataQuery numRows. (#2890),2016-04-27T21:37:04Z
c29cb7d71183a89ca3c2854f7ec9e089018aba21,add pending task based resource management strategy (#2086),2016-04-27T17:40:53Z
bf5e5e7b75c2e098997fcad87cb2c4af5c3991e5,"fix #2886 (#2887)

Fixes https://github.com/druid-io/druid/issues/2886",2016-04-27T15:29:41Z
58510d826b0728334e17a1fcdb1c0b26c115dc1f,fix emit wait time (#2869),2016-04-27T00:07:03Z
5658bd99eb30af01645533fa9c2f3e8559b4b57b,added contextual time parse (#2867),2016-04-25T20:35:10Z
55785267e4c04f0ac4a49aa405503bc1011493c9,postAgg filedName must match name of AGG (#2874),2016-04-22T18:11:54Z
9151099e08cd889873edccd01c1dfb5ae3cef0e4,add document for druid.segmentCache.numBootstrapThreads (#2872),2016-04-22T04:06:08Z
6dc7688a2992500ef36873b71c07ab82c7e6c61a,"TimeAndDims equals/hashCode implementation. (#2870)

Adapted from #2692, thanks @navis for original implementation.",2016-04-22T00:45:20Z
3cfd9c64c966ef1ea58eaf02b6be3c28540647b6,"make singleThreaded groupBy query config overridable at query time (#2828)

* make isSingleThreaded groupBy query processing overridable at query time

* refactor code in GroupByMergedQueryRunner to make processing of single threaded and parallel merging of runners consistent",2016-04-22T00:12:58Z
7641f2628f41eb59ff3e93785853f20900c64bc0,add control and status endpoints to KafkaIndexTask (#2730),2016-04-21T22:34:59Z
984a518c9fb8431dfbad2631f0bf6d5700f22401,"Merge pull request #2734 from b-slim/LookupIntrospection2

[QTL][Lookup] adding introspection endpoint",2016-04-21T17:15:57Z
c74391e54caed826993e769525a0bb21e96ea771,"JavaScript: Ability to disable. (#2853)

Fixes #2852.",2016-04-21T14:43:15Z
5938d9085bad6b7b6d0f79838e2c9ca17cb5dea6,"Stream segments from database (#2859)

* Avoids fetching all segment records into heap by JDBC driver
* Set connection to read-only to help database optimize queries
* Update JDBC drivers (MySQL has fixes for streaming results)",2016-04-20T21:40:07Z
7d3e55717d27752a2674a90da0c374ba8ac5c558,"Reduce cost of various toFilter calls. (#2860)

These happen once per segment and so it's better if they don't do
as much work.",2016-04-20T20:28:47Z
fc91120b5477d905277a40d8bc79699cbf615f32,"Merge pull request #2857 from metamx/upgrade-zk

upgrade zookeeper client dependency to 3.4.8",2016-04-20T05:06:07Z
59460b17cc704d9d8ea61693c34a6203f971d4bf,"Add Filters.matchPredicate helper, use it where appropriate. (#2851)

This approach simplifies code and is generally faster, due to skipping
unnecessary dictionary lookups (see #2850).",2016-04-19T22:54:32Z
b2745befb76858d7ddeab9a2c6f565f07a86de79,remove obsolete comment (#2858),2016-04-19T20:06:58Z
f80a5dc4efc46e81ac11fd4e61856c062fdec5a0,"Avoid creating multiple NoneShardSpec objects (#2855)

* Avoid creating multiple NoneShardSpec objects
* deprecate NoneShardSpec constructor",2016-04-19T17:30:14Z
dbf63f738fbdd74b4d9f9b48f6c02a59615f64ae,"Add ability to filter segments for specific dataSources on broker without creating tiers (#2848)

* Add back FilteredServerView removed in a32906c7fd11c9a8554df2621a172353a523a9dd to reduce memory usage using watched tiers.

* Add functionality to specify ""druid.broker.segment.watchedDataSources""",2016-04-19T17:10:06Z
08c784fbf6425e9470d47baef2c2a86f96416e54,"KafkaIndexTask: Use a separate sequence per Kafka partition in order to make (#2844)

segment creation deterministic.

This means that each segment will contain data from just one Kafka
partition. So, users will probably not want to have a super high number
of Kafka partitions...

Fixes #2703.",2016-04-19T05:29:52Z
7b65ca78893576f7d4f50ab9c87aad922cc739f5,"refactor ClientQuerySegmentWalker (#2837)

* refactor ClientQuerySegmentWalker

* add header to FluentQueryRunnerBuilder

* refactor QueryRunnerTestHelper",2016-04-18T21:00:47Z
838768c6327b8d605fa2a8080acfd3d7b66469e7,"upgrade curator, fixes #2829 (#2849)",2016-04-18T20:17:36Z
7c0b1dde3ad2bb7489191223f45398cca7f8356a,DimensionPredicateFilter: Skip unnecessary dictionary lookup. (#2850),2016-04-18T19:38:25Z
f5822faca3f898a254be4af34549d51a1d452ac0,"Fixed wrong parseSpec in Avro Hadoop Parser (#2846)

`parseSpec` should contain `format` instead of `type`. It was wrongly defaulting to `tsv`",2016-04-16T18:34:54Z
c1e690288c6c52a3b2ec5ff97d1b7644da9f3f90,Improve some log (#2807),2016-04-15T16:34:26Z
632b21472be52a130e26a1645ceea5a5e55f836b,"fix test failure (#2818)

formatting changes",2016-04-15T04:40:19Z
b534f7203c5355ef5ae4a66bf5ce33d5a203de89,Fix performance regression from #2753 in IndexMerger (#2841),2016-04-15T04:39:41Z
a26134575bea28cf4656e3c277984e7da307c500,Fix NPE in TopNLexicographicResultBuilder.addEntry() (#2835),2016-04-14T00:27:16Z
639d0630b80fc20b35b1e18e2f66d9e2df2fddb7,jackson conflict workaround in hadooop ingestio & parquet extension coordinate update (#2817),2016-04-13T21:20:33Z
0c4a42bb6f829269631f42f070af20a907c3363a,change toc entry (#2834),2016-04-13T20:45:07Z
e320d13385318cc64e0c76e5a63918c7522f4805,Fix various broken links in the docs. (#2833),2016-04-13T20:30:01Z
725ee1401d21c965fdb6fc383c6dc0bd66a3dd11,Update tranquility version in the docs. (#2832),2016-04-13T18:33:59Z
aa25cc1f6882e2035872152d72e205245b4d9ed6,"Fix up Kafka tutorial (#2831)

1) Remove extraneous section
2) Remove -SNAPSHOT version",2016-04-13T18:33:45Z
22c2cd57fb6b7b034b7523b433d1a650c72d5e7d,update readme (#2830),2016-04-13T18:33:31Z
abd951df1a64cec6921f2115c1ad8778f0fdaec2,"Document how to use roaring bitmaps (#2824)

* Document how to use roaring bitmaps

This fixes #2408.
While not all indexSpec properties are explained, it does explain how roaring bitmaps can be turned on.

* fix

* fix

* fix

* fix",2016-04-13T02:28:02Z
db35dd7508ee8db816fee49d49be970e35211153,fix issue #2744. Check for null before combining metrics (#2774),2016-04-12T21:46:31Z
ed5377465abf1f3f7eac778b662bf03b2bcb48c8,add AirBnB Caravel to list of libraries (#2719),2016-04-12T19:53:50Z
37d2ab623e599c056014acac1d6530854f071aaf,"Merge pull request #2815 from slaunay/documentation/hadoop-classpath-issue-fix-with-configuration

Doc for mapreduce.job.user.classpath.first=true",2016-04-12T17:51:51Z
bf4aa965fb720aec0d6b56cdd409e69c47ad2a72,"Merge pull request #2777 from metamx/postgresql-upsert

support PostgreSQL >= 9.5 upsert capability",2016-04-12T17:24:08Z
886ee4e30d8566bd390088342e496af2689dc7a8,"Merge pull request #2821 from metamx/review-comments-2784

handle review comments for PR 2784",2016-04-12T17:20:43Z
b486eff6b73677f26cc293a0db6a3fe12c4fa7f2,"Merge pull request #2805 from metamx/query-time-start

request log should reflect time the query was received",2016-04-12T16:44:42Z
deb6ecf91909d41678465fd37b2c8e5999443fd8,"handle review comments for PR 2784

https://github.com/druid-io/druid/pull/2784#discussion_r59062021",2016-04-12T16:22:00Z
1bf1dd03a0a2739f57fb5130ba348edb71876b21,"Merge pull request #2812 from mrijke/fix-missing-equals-hashcode-filters

Add missing equals/hashcode to JS, Regex and SearchQuery DimFilters",2016-04-12T06:30:23Z
bd6bd34cd8d1d3f55a671c1ecc640ea03f3e008b,"Merge pull request #2090 from himanshug/math_exp

math expression support",2016-04-12T04:36:17Z
49ef4d96cb23f1947317146ff6e63929b084c533,"Merge pull request #2802 from navis/optimize_multiplepath_concat

Optimize adding lots of paths to pathspec",2016-04-12T04:35:28Z
21e406613cd8cc30dbbaa4ff11cfc1922d977ebf,"Merge pull request #2809 from metamx/fix2694

Fix test for snapshot taker to better check for lookup perist failure",2016-04-11T21:52:47Z
9440598685c0a0eb92ef0c21a28e1d273cac5d35,fix integration-test (#2814),2016-04-11T20:46:32Z
de68d6b7c455f6468f3400c977a8de11c32fb617,"Add missing equals/hashcode to JS, Regex and SearchQuery DimFilters

 This commits adds missing equals() and hashcode() methods to
 the JavascriptDimFilter, RegexDimFilter and the SearchQueryDimFilter.",2016-04-11T09:59:39Z
234125878a8561d258642d9179d7ca2cb6a7d822,"Merge pull request #2808 from metamx/moveLookupSaveStateConfigDocs

Move lookup config doc to proper location",2016-04-08T19:50:42Z
aa6a230c9067a736bea6ab70b5f00df32da108dd,"remove DruidSQL.g4, its failing with newer version of ANTLR, will bring it back and fix if needed later",2015-12-16T16:57:04Z
308211cc1830c7f7257920145f337685e2ccc5a0,math expression language with parser/lexer generated using ANTLR,2015-12-16T07:03:10Z
36ccfbd20e2e73889de8d86a4a5b31a1b0ed22b7,math expression language with hand written parser/lexer,2015-12-14T07:15:50Z
2b99f717e4615a387780460e9ee485c5a93ce1db,Move lookup config doc to proper location,2016-04-08T15:15:18Z
d4d1d615c1fafeed526660ddf8d55fe03f44fc7d,"request log should reflect time the query was received, as opposed to processed",2016-04-07T19:39:34Z
d5787dd3cde0e23dca469ef1be142b3a25c531a9,"Merge pull request #2784 from metamx/lite-segment-announcements

Add ability to skip loadSpec,dimensions, metrics from DataSegment Announcements",2016-04-07T14:51:22Z
edd74f2b67c8ef7e16c01796350ec3a1ee827d22,"Allow Lite DataSegment Announcements

separate config for each skipping dimensions, metrics and loadSpec

Add test

fix test comment

Add docs",2016-04-04T09:24:30Z
bbb326decfcd2ae9dbe345d04c53d7fbb0fb9359,"Merge pull request #2799 from b-slim/fix_snapshot

MapLookupFactory need to be Ser/Desr ready.",2016-04-07T07:52:34Z
bf1eafc4e1efa55eea00ce685f0392474471d938,remove all the mock lookupFactory,2016-04-06T20:37:52Z
59eb2490a0af4751fcb59cceded0b17637f412ee,MapLookupFactory need to be Ser/Desr.,2016-04-06T20:02:18Z
f915a591380eb56eee6a9ac4a08927e883d613e2,"Merge pull request #2691 from metamx/lookupExtrFn

Add ExtractionFn to LookupExtractor bridge",2016-04-06T16:13:08Z
f82044bdb6d1342862d0299540813f2174255037,"Merge pull request #2795 from jon-wei/filter_support_fix

Remove extra println from InFilter",2016-04-05T23:04:44Z
051fd6c0eb97c3a2d81d89ebb8e03932268d117b,Remove extra println from InFilter,2016-04-05T21:55:49Z
289bb6f88598f5f87a1b3a16b51fbc93e8027a30,"Merge pull request #2690 from jon-wei/filter_support

Allow filters to use extraction functions",2016-04-05T21:40:15Z
0e481d6f9396de21e6d85f3aaecec9b25cc84f63,Allow filters to use extraction functions,2016-04-02T00:18:27Z
aaf40e69a036077c45a22171f5d12f7bc426af9c,"Merge pull request #2779 from gianm/followup

Additional ExtractionFn null-handling adjustments.",2016-04-02T06:12:47Z
e060a9f283d716fdfb380e1b16282399d8e3b0a4,"Additional ExtractionFn null-handling adjustments.

Followup to comments on #2771.",2016-04-02T01:35:24Z
0f8a037bcd5365387e46e90dec8bebdebbb54302,support PostgreSQL >= 9.5 upsert capability,2016-04-01T23:52:47Z
18b9ea62cf381a24e49043d63cf9861a355b945d,"Merge pull request #2771 from gianm/extractionfn-stuff

Various ExtractionFn null handling fixes.",2016-04-01T23:35:46Z
23d66e5ff9abf354541f0442122f452c344eb892,"Merge pull request #2765 from navis/invalid-encode-nullstring

Null string is encoded as ""null"" in incremental index",2016-04-01T21:43:40Z
abc53f551f12d955866cda877a1c906f64edf5ca,"Merge pull request #2770 from metamx/dead-code

remove unused code",2016-04-01T21:40:52Z
b6e4d8b2c1413293f28d340f904f1460535b01b7,"Various ExtractionFn null handling fixes.

- JavaScriptExtractionFn shouldn't pass empty strings to its JS functions
- Upper/LowerExtractionFn properly handles null Objects (DimExtractionFn's implementation works here)
- MatchingDimExtractionFn properly returns nulls rather than empties
- RegexDimExtractionFn properly attempts matching on nulls and empties
- SearchQuerySpecDimExtractionFn properly returns nulls when passed empties",2016-04-01T21:19:54Z
eea7a47870b14a5123c82d0836ea49a546232478,"Merge pull request #2576 from navis/paging-from-next

Add option for select query to get next page without modifying returned paging identifiers",2016-04-01T20:50:36Z
4eb5a2c4f10fe20bd1ab680450f830244ddc0dab,"Merge pull request #2715 from navis/stringformat-null-handling

stringFormat extractionFn should be able to return null on null values (Fix for #2706)",2016-04-01T20:45:28Z
ad39080246f9162a06472c2f0a2f3822fa4569b5,"Merge pull request #2769 from gianm/optimize-tests

BaseFilterTest: Test optimized filters too.",2016-04-01T20:44:45Z
693a4b4558da6d3497a294d1958d3aa77913a98a,"Merge pull request #2768 from rasahner/IT_fixRealTimeIndexTaskTest

fix calculation of expected timestamp for  ITRealtimeIndexTaskTest query",2016-04-01T20:21:13Z
728da7522411cd3714771617a6866f14476fd994,remove unused code,2016-04-01T20:10:35Z
23364a47fdb32fc37260941e2517ed7657c0fd29,BaseFilterTest: Test optimized filters too.,2016-04-01T19:44:59Z
10ec53dc1cf74e8a8271e344f913cbab8b8e2e3b,fix calculation of expected timestamp for query in ITRealtimeIndexTaskTest,2016-04-01T15:47:17Z
077522a46fe4c2fbf6b31e6915d8017240b42593,stringFormat extractionFn should be able to return null on null values (Fix for #2706),2016-03-24T02:10:24Z
f0e55f5d318298ac48a2194309ee1599a944d330,"Null string is encoded as ""null"" in incremental index",2016-03-31T07:16:08Z
29bb00535b7210da64836efe5138a74bed0889b1,Add option for select query to get next page without modifying returned paging identifiers,2016-03-02T04:39:00Z
2fc5918e69b13896b9a6da48a08c94dac08a0cd3,"Merge pull request #2763 from druid-io/b-docs

clean up for extensions docs",2016-03-31T04:53:03Z
5f9240fcbcb3dba73d130ee9fa6cbd300ce264f2,"Merge pull request #2577 from navis/native-in-filter

Implement native in filter",2016-03-31T03:02:54Z
3d68da94fe1bf97263964f74edbbe5836b192093,"Merge pull request #2661 from navis/utf8-estimated-length

Utility method for length estimation of utf8",2016-03-31T02:56:14Z
73176a3930e2fb19cf16f2536096f24c5b2b5217,"Merge pull request #2764 from jon-wei/time_and_dims

Remove unnecessary type check in TimeAndDimsComp",2016-03-31T02:55:32Z
108535fd072064467536071c349e1254ef269ad1,Implement native in filter (Fix for #2577),2016-03-02T06:38:01Z
e0cfd9ee19f8e9013592f585c10b5bb660173fce,Utility method for length estimation of utf8,2016-03-15T07:38:37Z
5503bf1b381ef94a220acc3debd2506669253757,Remove unnecessary type check in TimeAndDimsComp,2016-03-31T00:54:15Z
14dbc431ef08f984c0deaf163bee0c424ed68f48,clean up for extensions docs,2016-03-31T00:14:58Z
595d359c3b20f6ed271785628be2c2ba5bc5eba8,"Merge pull request #2618 from navis/fix-task-validation

Add missing modules for validating tasks",2016-03-30T15:34:57Z
a8b28879f11c5985e83cb98808aa86d405d106bb,"Merge pull request #2369 from du00cs/master

[Feature] Extension: Offline Ingestion with limited Parquet Support",2016-03-30T06:19:35Z
c868d374c0959e0d3dafed5b8b695b1ea53f3f4d,Add missing modules for validating tasks (Fix for #2618),2016-03-09T14:44:48Z
23a8830bc2cfcc49bbda6539674342556569cd8a,"Merge pull request #2757 from druid-io/fix-conf

Update libraries.md",2016-03-30T04:32:01Z
0f67ff7dfb6ddec5e9f9552f74d3a4a31b0a6829,"reoganize code folder according to recent upstream folder changes, seperate it from avro code and take it into extensions-conrib. docs rewite too",2016-03-28T07:51:36Z
95733a362f72a40d3097f37e954cd5dec54da403,"Merge pull request #2753 from gianm/null-filtering-multi-value-columns

More consistent empty-set filtering behavior on multi-value columns.",2016-03-30T01:52:25Z
95d42cfd9e08e6f2a53129cf71322ad803ddd0c9,"Merge pull request #2758 from pjain1/fix_npe_in_filter

handle null values in In Filter",2016-03-30T00:53:02Z
1853f36e9f93376943ea14684e1de85adca174fe,"More consistent empty-set filtering behavior on multi-value columns.

The behavior is now that filters on ""null"" will match rows with no
values. The behavior in the past was inconsistent; sometimes these
filters would match and sometimes they wouldn't.

Adds tests for this behavior to SelectorFilterTest and
BoundFilterTest, for query-level filters and filtered aggregates.

Fixes #2750.",2016-03-29T01:30:22Z
4bff008d65a402356835c4f5357c659058d83200,"Update libraries.md

Adding embedded-druid information in helper libraries",2016-01-28T18:15:54Z
d892918a3d5b79ac14ad5b200bb70a796f2ff4c9,handle null values in In Filter,2016-03-29T22:03:26Z
77fff5709e2a168b3af9d57792f28e2e3f7647f8,"Merge pull request #2756 from gianm/rabbit-bbirp

RabbitMQ: Swap SIRP to BBIRP so it can use more kinds of parsers.",2016-03-29T18:54:35Z
9877c570d3668f06c565d84f078a3a7ffb657dc8,RabbitMQ: Swap SIRP to BBIRP so it can use more kinds of parsers.,2016-03-29T15:42:06Z
1e02eeab13ab1019f158f41c08d1ac5483c901e4,"Merge pull request #2683 from metamx/default_retry

Better defaults for Retry policy for task actions",2016-03-29T15:02:59Z
0081bb87f0c88fc2fc8a0cdb6dc8ff8006aa16d1,"Merge pull request #2755 from gianm/scary-warning

Overlord: Avoid a scary Jersey warning.",2016-03-29T14:59:53Z
e023df2b923d1a229bb71f632104e6fd89ea53a1,"Merge pull request #2754 from gianm/i-dont-get-it

Remove error suppression code from IncrementalIndexAdapter.",2016-03-29T02:29:53Z
195c9c5240f24713fc087dbc027896dc680c17f2,"Overlord: Avoid a scary Jersey warning.

Avoids the following message from being printed on Overlord startup:

WARNING: Parameter 1 of type io.druid.indexing.common.actions.TaskActionHolder<T> from
public <T> javax.ws.rs.core.Response io.druid.indexing.overlord.http.OverlordResource.doAction
(io.druid.indexing.common.actions.TaskActionHolder<T>) is not resolvable to a concrete type",2016-03-29T02:06:20Z
5120b8ab5cf9e155db9ef82e4aebe3fb210599a4,"Merge pull request #2752 from druid-io/cleanup

cleanup distinct count agg",2016-03-29T01:58:18Z
c7ff0d698e1fe6ae34203d04b53ced1d03c05f80,Remove error suppression code from IncrementalIndexAdapter.,2016-03-29T01:40:27Z
c418a55638e527f0b4801aa2a45c07564eebff54,cleanup distinct count agg,2016-03-29T00:29:41Z
62c1dc7a09a01ec8776c815c9236ee587cc1e43d,"Merge pull request #2602 from binlijin/distinctcount

implement special distinctcount",2016-03-29T00:20:17Z
c2284929dc1b4e42242b71f504f047ed44af4488,"Merge pull request #2739 from gianm/fix-wtmtest-failure

Fix handling of InterruptedException in WorkerTaskMonitor's mainLoop.",2016-03-28T21:52:10Z
9cb197adec870b0b9bb06e1b81fedf1d054660c2,"Merge pull request #2722 from himanshug/fix_hadoop_jar_upload

config to explicitly specify classpath for hadoop container during hadoop ingestion",2016-03-28T21:49:03Z
7a84c267f796da29a140403b9dde26aa683918cc,"Merge pull request #2743 from metamx/fixlookuptest

Fix LookupCoordinatorManager and Test for alerts",2016-03-28T21:41:37Z
4764e8640963437489a33c55d2bf17af00a13f66,Add docs for RegisteredDimensionExtractionFn,2016-03-28T20:27:49Z
4a98c4fbacd084fdcb4d3869ea60429e1600a21f,Fix LookupExtractionFn equals and hashCode,2016-03-19T17:14:10Z
0ee861d0daf17a0ef8c2dc8c9615700e9dee1ee0,Add ExtractionFn to LookupExtractor bridge,2016-03-19T05:16:26Z
e2cabc93ca05942fede0b23b1a0d6f900d3e0863,"Merge pull request #2747 from gianm/fix-docs-kafka-lookup

Fix extension reference in Kafka namespaced lookup docs.",2016-03-28T17:41:36Z
89a8277ae2ca5feb73eada7f9be84b4d371925e0,"Merge pull request #2712 from guobingkun/make_runnables_pluggable

make Coordinator IndexingService helpers pluggable",2016-03-28T17:18:18Z
05151bc3250d16ede6873c985ab0c678c13866bd,"Fix LookupCoordinatorManagerTest for alerts
* Also fixes bad alerting on missing nodes",2016-03-26T03:33:53Z
dbdfcd24433a70785c884a27314cb3db04423504,"Fix extension reference in Kafka namespaced lookup docs.

The reference to io.druid.extensions:kafka-extraction-namespace is wrong (should
be druid-kafka-extraction-namespace) and unnecessary (the extension id is written
at the top of the doc file).",2016-03-28T16:23:24Z
7fe277e6dadf2776b5b81557c4b41a23ab607507,"Merge pull request #2727 from gianm/optimize-bound-filter

BoundFilter optimizations, and related interface changes.",2016-03-27T01:59:05Z
0dae28b6afd1fbc3bcba8277c5d134145e20dcd6,"Merge pull request #2729 from jon-wei/fix_hyperunique_comparator

Fix HyperUniquesAggregatorFactory comparator",2016-03-26T22:39:35Z
a0216dcf7d48cc4cb1935fbdb222854d6b730aa0,"Merge pull request #2735 from metamx/fixlookupDocs

Move lookup docs that are in druid-proper back into lookups.md",2016-03-26T22:38:48Z
3c4691aa5aaf81a1eb045c661a0c613711cb4fad,"Merge pull request #2741 from gianm/examples-wiki

Downgrade geoip2, exclude com.google.http-client.",2016-03-26T06:08:38Z
01f3221a62d06b6b1241184ca168072ed927adf4,"Merge pull request #2665 from jisookim0513/remove-druid-server-serialization

remove serialization of DruidServer",2016-03-25T22:54:05Z
977e867ad89c4ad45554544143a07641980535ff,"Downgrade geoip2, exclude com.google.http-client.

Reverts ""Update com.maxmind.geoip2 to 2.6.0"" and exclude the google http client
from com.maxmind.geoip2. This should satisfy the original need from #2646 (wanting
to run Druid along with an upgraded com.google.http-client) while preventing
Jackson conflicts pointed out in #2717.

Fixes #2717.

This reverts commit 21b7572533592f1700f86379483d87e9e340f2a7.",2016-03-25T21:24:58Z
2970b49adcf01a8ddf7270837a159dc9b88283ac,"BoundFilter optimizations, and related interface changes.

BoundFilter:

- For lexicographic bounds, use bitmapIndex.getIndex to find the start and end points,
  then union all bitmaps between those points.
- For alphanumeric bounds, iterate through dimValues, and union all bitmaps for values
  matching the predicate.
- Change behavior for nulls: it used to be that the BoundFilter would never match nulls,
  now it matches nulls if """" is allowed by the lower limit and not excluded by the
  upper limit.

Interface changes:

- BitmapIndex: add `int getIndex(value)` to make it possible to get the index for a
  value without retrieving the bitmap.
- BitmapIndex: remove `ImmutableBitmap getBitmap(value)`, change callers to `getBitmap(getIndex(value))`.
- BitmapIndexSelector: allow retrieving the underlying BitmapIndex through getBitmapIndex.
- Clarified contract of indexOf in Indexed, GenericIndexed.

Also added tests for SelectorFilter, NotFilter, and BoundFilter.",2016-03-24T00:37:49Z
02d0c704b163cc92649dcb799b0d1dc5f9b0922c,"Merge pull request #2737 from gianm/fix-iisa-valueMatcher-predicate

Fix predicate-based ValueMatcher behavior for IncrementalIndex on missing columns.",2016-03-25T21:11:18Z
9afaa2b94a2ba444e30af002ed750c843e02666e,Fix HyperUniquesAggregatorFactory comparator,2016-03-25T01:38:42Z
2dff26512d26bfa29ee6c4d8f61864537fbacd92,"Merge pull request #2733 from gianm/docs-datasketches-broken-link

Fix broken link in datasketches-aggregators.md.",2016-03-25T19:35:49Z
0d3c5a3b6c21b8c985f0a411fca8967885a39b33,remove serialization of Druid Server and add tests for ServersResource,2016-03-15T22:33:58Z
ee4bb96855739e3c3cfff0008c40dbbe50f7169f,"Fix handling of InterruptedException in WorkerTaskMonitor's mainLoop.

I believe this will fix #2664.",2016-03-25T19:17:33Z
ab324e4ac09d7e98a0d159ed53aee80274f3e51d,Move lookup docs that are in druid-proper back into lookups.md,2016-03-25T16:57:34Z
4ac9e0316134a776fe8dda8437cdec91664750b9,"Fix predicate-based ValueMatcher behavior for IncrementalIndex on missing columns.

Missing columns should be treated the same as columns containing 100% nulls.",2016-03-25T17:23:56Z
0872448ff09dd20010645feb4004fc5ed212d1c3,"make Coordinator IndexingService helpers pluggable
Fixes #2682
IndexingService helpers are added according to the settings in runtime.properties.
Rather than having all the config.isXXX checks there, it makes sense to have a pluggable
approach for allowing the dynamic configuration to bring in implementations for helpers
without having to have hard-coded sets of available helpers. Plus, it will also make it possible for extensions to plug helpers in.

With https://github.com/druid-io/druid-api/pull/76, we could conditionally bind a helper to Coordinator's runlist.
The condition is driven by the value set in the runtime.properties.",2016-03-18T16:38:06Z
6d18382fb220b6187f14108849c76f1158bb1d55,Fix broken link in datasketches-aggregators.md.,2016-03-25T16:32:40Z
e78a469fb7698eefa736222fbf5f9fffe59a81de,UTs for ExtensionsConfig,2016-03-24T18:28:49Z
004b00bb96a8195d8169bee788807beab0377602,config to explicitly specify classpath for hadoop container during hadoop ingestion,2016-03-18T16:43:23Z
ef0bc5d64fa00a789063363dcd5ba850222ec03c,"Merge pull request #2726 from gianm/move-flatten-json-benchmark-test

Move FlattenJSONBenchmarkUtilTest into the correct location.",2016-03-25T15:00:05Z
980943074bf54b83e6963bc97d532b4c8109fd9d,"Merge pull request #2724 from guobingkun/conditional_multi_bind

Conditional multi bind",2016-03-25T00:09:27Z
0b03c9405fa65e86dd0b2eec3ec10489ff3cffd9,"Merge pull request #2614 from sirpkt/calendric_gran

Support week, month, quarter, and year in query granularity",2016-03-24T23:21:01Z
1869c350d84068a16ce9d5b84d79bfcbdd356936,Move FlattenJSONBenchmarkUtilTest into the correct location.,2016-03-23T20:59:00Z
62edbab4349e4b8941f9f2c5b9979d5cdd3307af,"Conditional multi bind

Usage example:
       ConditionalMultibind.create(props, binder, Animal.class)
                           .conditionBinder(""animal.type"", Predicates.equalTo(""cat""), Cat.class)
                           .conditionBinder(""animal.type"", Predicates.equalTo(""dog""), Dog.class);

At binding time, this will check the value set for property ""animal.type"" in props. If the value is ""cat"", it will
add a binding to Cat.class. If the value is ""dog"", it will add a binding to Dog.class.

At ingestion time, you will get the items that satisfy their corresponding predicates by calling
injector.getInstance(Key.get(new TypeLiteral<Set<Animal>>(){}))",2016-03-24T21:23:22Z
56343c6cdc8428d35aabead3532955c2d4147fa2,"Merge pull request #2704 from navis/simple-optimize

optimize single elemented and/or filter",2016-03-24T21:13:48Z
f26e73d1333fbdb70b32b49f9f2c3cf0770cc91a,"Merge pull request #2720 from gianm/druid-api

Move druid-api into the druid repo.",2016-03-24T20:51:10Z
fb25c083ec6a0480320eebd5847e70266edb994e,"Merge pull request #2721 from guobingkun/refine_doc

refine description for mergeBytesLimit",2016-03-24T20:48:57Z
d4a96843f99dd359d26346f3c34cef5cf586f55b,"Merge pull request #2710 from himanshug/fix_sketch_estimate_comparator

fix SketchEstimate post aggregator's getComparator() and test changes to verify same",2016-03-24T20:34:32Z
0fa04305a6113b6041a7f96db2a24ff991f8bf0e,refine description for mergeBytesLimit,2016-03-24T18:06:59Z
7e7a886f65743c2a4b1750feca43750aea68413a,"Move druid-api into the druid repo.

This is from druid-api-0.3.17, as of commit 51884f1d05d5512cacaf62cedfbb28c6ab2535cf
in the druid-api repo.",2016-03-24T17:53:31Z
4aead38130b22ea8772de22367844972d03f8dea,fix SketchEstimate post aggregator's getComparator() and test changes to verify same,2016-03-23T16:32:59Z
2729efca718a9d9a543e1f368dd50694a6ddf388,implement special distinctcount,2016-03-24T03:11:11Z
bfc0ae7d2aa1f555b387849c4f423782bb8b2631,"Merge pull request #2714 from rasahner/DOC_minorFix

dynamic config endpoint is at coordinator",2016-03-24T01:43:56Z
8750f4b58c7c2910ffed1c4bcb05c03da946bb49,"Merge pull request #2713 from gianm/filter-extensions

Filters: Add filter.toFilter method, use that instead of the instanceof chain in Filters.",2016-03-24T01:04:08Z
713062053c527ddeb72c62cbd4ecc53c3265d30f,"Filters: Add filter.toFilter method, use that instead of the instanceof chain in Filters.

I believe that the instanceof chain in Filters exists because in the past, Filter
and DimFilter were in different packages (DimFilter was in druid-client and Filter
was in druid-processing). And since druid-client didn't depend on druid-processing,
DimFilter couldn't have a toFilter method. But now it can.",2016-03-23T19:54:56Z
448e0127b9351d1f8b4ac57aa3c8cb6db717b51a,dynamic config endpoint is at coordinator,2016-03-23T22:22:19Z
a5d55297494c41dc4442b16fc33a15fb225cb30b,"Merge pull request #2711 from gianm/filtered-aggregator-impls

All Filters should work with FilteredAggregators.",2016-03-23T20:37:21Z
dd8619890212706ee2d5c1fde6acd3c79835ec03,"All Filters should work with FilteredAggregators.

This removes Filter.makeMatcher(ColumnSelectorFactory) and adds a
ValueMatcherFactory implementation to FilteredAggregatorFactory so it can
take advantage of existing makeMatcher(ValueMatcherFactory) implementations.

This patch also removes the Bound-based method from ValueMatcherFactory. Its
only user was the SpatialFilter, which could use the Predicate-based method.

Fixes #2604.",2016-03-23T19:16:59Z
a6af1974f7f5363fee3b139a116cebed16782251,"Merge pull request #2699 from gianm/docs-fix-broken-links

Fix a bunch of broken links in the docs.",2016-03-23T18:14:29Z
8a473111c55090bd1242ea2d95b4b2b40a3ece84,"Merge pull request #2650 from rasahner/IT_index_hadoop

add test for batch indexing from hadoop",2016-03-23T18:04:55Z
2dfd3877c09fdb0c6ca3077c406aa2672b476c12,Fix a bunch of broken links in the docs.,2016-03-22T20:59:57Z
bbf08fcc2465b0985d6025c14d57eaa15f90a826,"Merge pull request #2675 from binlijin/clean_temp_file

clean tmp file when index merge fail",2016-03-23T16:09:07Z
9956df56099e928d3b23050f900cc721ce984e32,"Merge pull request #2705 from kilida/patch-1

Duplicate statement in ReservoirSegmentSamplerTest.java",2016-03-23T15:42:27Z
d1f8f2b2fd5e15df016162361e090ee8176842ac,"Merge pull request #2698 from druid-io/fix-ext-docs

refactor extensions into their own docs",2016-03-23T05:04:12Z
57d78d329347eee8da6e608960c2c41cf4196dd8,clean tmp file when index merge fail,2016-03-23T02:55:12Z
f25b2ed6f857052c68c0c781dcd727967018bb4e,Duplicate statement in ReservoirSegmentSamplerTest.java,2016-03-23T02:14:36Z
943cbe6e76915a58d64ed32de64d75182ab691c8,refactor extensions into their own docs,2016-03-22T20:54:49Z
041350c31b49d5f54acedc2b2dfb58ed88f281f3,"Merge pull request #2701 from gianm/mvd-docs

Improved docs for multi-value dimensions.",2016-03-23T01:09:37Z
91f6be4884888799c42524765c0392d785116e80,optimize single elemented and/or filter,2016-03-23T00:25:15Z
451c0bc6d8dfa7961afd92aae7b9b43f6aefce8f,"Merge pull request #2702 from pjain1/improve_docs

how to query in the querying section, correct default for select strategy, formatting",2016-03-22T23:40:35Z
826b37125990a8739038f95835232e1ec10602c0,"Merge pull request #2697 from guobingkun/remove_duplicate_version_converter

remove duplicated DruidCoordinatorVersionConverter",2016-03-22T22:48:09Z
39ecb9929d48714a073edad779b3f9be440300f3,"how to query, correct default for select strategy, formatting",2016-02-28T23:41:33Z
ff25325f3b7a476b43b3b90c12f0ee9123966306,"Improved docs for multi-value dimensions.

- Add central doc for multi-value dimensions, with some content from other docs.
- Link to multi-value dimension doc from topN and groupBy docs.
- Fixes a broken link from dimensionspecs.md, which was presciently already
  linking to this nonexistent doc.
- Resolve inconsistent naming in docs & code (sometimes ""multi-valued"", sometimes
  ""multi-value"") in favor of ""multi-value"".",2016-03-22T21:16:34Z
a6e9ff48eca493c2e2ec219502d1c51b86467823,"Merge pull request #2688 from pjain1/props_cli

do not inject properties directly in module",2016-03-22T20:27:19Z
3778adf1f4f901177630ab3a97d0a3483ad62055,remove duplicated DruidCoordinatorVersionConverter,2016-03-22T19:45:52Z
7b93195dc66777531ca61b96157651116b0244d1,do not inject properties directly in module,2016-03-18T21:34:11Z
00d7021291fafdc4784ad3008fec959563a01f9a,"Merge pull request #2607 from jon-wei/dim_schema

Support use of DimensionSchema class in DimensionsSpec",2016-03-22T16:53:46Z
3220b109adf37b2c168f36b3582a06f3bb6a0597,"Merge pull request #2570 from binlijin/single_dimension_partitioning

Single dimension hash-based partitioning",2016-03-22T16:51:06Z
bce600f5d5073d9a077b3ea53cb3fd4e4d1ead58,Single dimension hash-based partitioning,2016-03-22T05:15:33Z
a59c9ee1b1a72c77940231473cb23bb8dd6c42f1,Support use of DimensionSchema class in DimensionsSpec,2016-03-21T20:12:04Z
7f29f2ac3bbc64f3352e2f184413a98a82345005,"support week, month, quarter, year in query granularity",2016-03-07T11:30:37Z
527b728f3eada8b468fa83a2b7b96147e0e8bc57,"Merge pull request #2689 from metamx/fix-broadcast-lockup

fix servlet startup sequence, fixes #2681",2016-03-19T16:38:31Z
11b8d1ed70d7e79e831c82e68544636887fae34a,"Merge pull request #2686 from gianm/fix-analysistypes-docs

Fix analysisTypes docs for SegmentMetadataQuery.",2016-03-18T23:15:38Z
25967d0ed89446c42bb52f90b3019ce56eeb00a0,"fix servlet startup sequence, fixes #2681",2016-03-18T22:05:57Z
76ae30604e3623d7a37f3077c0ab27cec490f0b1,Fix analysisTypes docs for SegmentMetadataQuery.,2016-03-18T20:17:33Z
ed8f39fcfe193e28b26f098b08d6b61138adcfbc,"Better defaults for Retry policy for task actions

This PR changes the retry of task actions to be a bit more aggressive
by reducing the maxWait. Current defaults were 1 min to 10 mins, which
lead to a very delayed recovery in case there are any transient network
issues between the overlord and the peons.

doc changes.",2016-03-18T17:30:38Z
52522eb0e00d606dbfdecef7c8ab9df759e493d6,"Merge pull request #1576 from metamx/queryTimeLookup_announce

[QTL] Query time lookup cluster wide config",2016-03-18T18:57:52Z
5da9a280b60cea912602c68c86dfb8f3d1f92e30,Query Time Lookup - Dynamic Configuration,2016-03-18T00:11:00Z
45c413af7e4449153869eee889e1fb30e8817828,"Merge pull request #2674 from metamx/fix-broadcast-lockup

separate HTTP client pool for cancellation requests",2016-03-17T22:23:42Z
1718a7224bc71243c4bb6195ddec9d38cc95a992,"separate HTTP pool for cancellation requests

* reduces contention between queries and cancellation requests
* more aggressive timeouts for cancellation requests",2016-03-15T20:27:16Z
c716af5b04474fcd4e4f2728a220f6ddfdfb528c,"Merge pull request #2678 from metamx/fixImports

Fix some google related imports",2016-03-17T18:53:16Z
e99f0ff2be2fca8449c93a1c5124124b6bebb6fa,"Merge pull request #2677 from gianm/updversion

Update version to 0.9.1-SNAPSHOT.",2016-03-17T18:33:36Z
a52c6d3bee83120477e7f46089a507519b5601d1,Fix some google related imports,2016-03-17T18:03:29Z
738dcd8cd941d999f29ceb5008f7ea5c475c322c,"Update version to 0.9.1-SNAPSHOT.

Fixes #2462",2016-03-17T17:34:19Z
cf342d8d3c6f14519521bdfb1d7442dd949d2405,"Merge pull request #2517 from b-slim/adding_lookup_snapshot_utility

[QTL][Lookup] lookup module with the snapshot utility",2016-03-17T16:39:47Z
0c86b29ef03b42394957f7153c144b13a79eb015,lookup module with the snapshot utility,2016-02-20T21:07:45Z
60fc5d9ad5ba0c290a1fc4ff6011f5f60ba54f5a,"Merge pull request #2672 from himanshug/upload_mysql

update upload.sh to upload mysql-metadata-storage tarball too",2016-03-16T21:25:03Z
e0a648e29a5604acb054acadead2b690cf67fe3c,update upload.sh to upload mysql-metadata-storage tarball too,2016-03-16T20:20:47Z
011efbfca7472c719f193b147995d215cecefbbb,"Merge pull request #2663 from pjain1/warn_predicate_firehose

do not silently ignore rows",2016-03-16T18:07:26Z
89110ffd3d866f8688d80821e57b83cdcfb996eb,"Merge pull request #2671 from rasahner/IT_searchCount

add count field to expected returns for search queries",2016-03-16T15:37:46Z
1205c572bba94bbb2ce4c59e0ce1bf38bc6bce65,add count field to expected returns for search queries,2016-03-16T14:45:38Z
948b19a08856697bf0360cdc33d5cbd869e3a8e3,do not silently ingnore rows,2016-03-15T16:47:32Z
8cea85816d95de0dbddda2cb9e083918d60df398,"Merge pull request #2668 from navis/fix-document-selectquery

Document for search query was not updated properly (Fix for #2662)",2016-03-16T03:34:27Z
8c481e496b155e8c495ca91d91f5efde1857264c,"Merge pull request #2666 from dclim/caching-doc-fix

caching doc fix",2016-03-16T01:07:38Z
71ee9e2aacb6253fcc958a0e03f3934150d83743,Document for search query is not updated properly (Fix for #2662),2016-03-16T00:22:18Z
553b67797158a09cc3e3855b8ae2d4ade7449026,caching doc fix,2016-03-15T23:09:33Z
b2b62a723fe6f298da5f7af4e75d3c4532165983,"Merge pull request #2657 from gianm/ports-docs

Additional ports docs.",2016-03-15T20:23:07Z
32399bc71121bab1c835c21a8b1ac90baec85372,"Merge pull request #2588 from metamx/abstract-zkworker

Use ImmutableWorkerInfo instead of ZKWorker",2016-03-15T17:27:21Z
ec949d76e36d5150d84b5d4b4cabe6843bd186dd,"Merge pull request #2655 from navis/hint-coordinator-client

Add hint message for missing `druid.selectors.coordinator.serviceName`",2016-03-15T03:57:40Z
ea3281ad78ca2792218aa9c9e9e3269f3448baaa,"Merge pull request #2645 from atomx/gs-scheme

Add gs:// hdfs support",2016-03-15T03:15:42Z
a938f0853b74c01459b5a4386227a7c3b7891eab,Additional ports docs.,2016-03-15T02:11:18Z
e7a7ecd65d7d11f8e4b0d26b81edf900fb303ec0,add test for batch indexing from hadoop,2016-02-16T15:23:37Z
2ac8a221732a30d96f6d0b8bd73bea1eb096d8c2,"Merge pull request #2579 from metamx/closerIsCloser

Make CloserRule use guava's Closer",2016-03-15T00:18:19Z
5ec5ac92c69f070422a6edb5198f7de6e2bcc820,"Merge pull request #2382 from himanshug/broker_segment_tier_selection

at broker, if configured, only add segments from specific tiers to the timeline",2016-03-14T23:53:06Z
83e1d5d7bf7eebbeea0d62272db13fe17eb24b5d,Add hint message for missing `druid.selectors.coordinator.serviceName`,2016-03-14T23:39:07Z
a64979463f4b326b3a5ac0131259f5040dc53ee4,Make CloserRule use guava's Closer,2016-03-02T17:11:14Z
06813b510a80f758de01aa7812be10a346c1fa73,"Merge pull request #2571 from himanshug/gp_by_avoid_sort

avoid sort while doing groupBy merging when possible",2016-03-14T21:46:51Z
a41a70d3708bfdac3834722928aea904e461736a,"Merge pull request #2651 from gianm/ports-docs

Docs on default ports.",2016-03-14T21:15:52Z
02805a74a1b800319ac0ebf476ab9b40e31e5135,"Merge pull request #2648 from chtefi/master

Ignore case when testing for table existence",2016-03-14T20:57:53Z
dbdbacaa188eb03e18814334b590a88c2ffcd243,"Merge pull request #2260 from navis/cardinality-for-searchquery

Support cardinality for search query",2016-03-14T20:24:40Z
e51277b96c88ee51bcc5271e88f577f9b91745f0,Docs on default ports.,2016-03-14T18:25:21Z
773d6fe86c9e29dae4e84b3dc033d5ecb2bd608e,"Merge pull request #2646 from atomx/update-maxmind

Update com.maxmind.geoip2 to 2.6.0",2016-03-14T18:20:48Z
9cceff22749a7e1a2d077bdebf87b2874827dbf5,"Use ImmutableWorkerInfo instead of ZKWorker

review comments

add test for equals and hashcode",2016-03-03T17:49:55Z
d51a0a0cf4ddb39bc70e43bae4a015dffe57f87c,"Merge pull request #2220 from gianm/appenderator-kafka

Appenderators, DataSource metadata, KafkaIndexTask",2016-03-14T18:14:36Z
2861e854f02108fbb94e5e362db3737828c675d4,"Merge pull request #2540 from pjain1/remove_kill

Remove extra parameter from deleteDataSourceSpecificInterval endpoint and correct exception message for invalid interval",2016-03-14T16:16:23Z
8cc3582e705b88cb3998f548e925b7ab563b1f5b,"Merge pull request #2644 from metamx/optimize-timeboundary

optimize timeboundary for min or max bound",2016-03-13T18:16:24Z
416cb03687f3bc2872ae4ce8e66edd9d868e2992,Ignore case when testing for table existence,2016-03-12T22:39:04Z
21b7572533592f1700f86379483d87e9e340f2a7,"Update com.maxmind.geoip2 to 2.6.0

com.maxmind.geoip2 2.6.0 depends on com.google.http-client 1.15.0-rc (3 years old).
When trying to include other libraries in Druid that require an up to date version of com.google.http-client this causes a problem.",2016-03-12T09:44:00Z
375620cfb38dd02fee87c994ca4326dc4ee751b7,"Add gs:// hdfs support

Used to access google cloud storage",2016-03-12T08:57:57Z
be341bf4e31427bccc5a62f2ea87760bd873b90f,Support cardinality for search query (Fix for #2260),2016-01-13T12:43:22Z
cf7f6da392abf4aea155271e7299115802fadeea,"Merge pull request #2634 from gianm/stopGracefully-avoid-interrupt

ThreadPoolTaskRunner: Make graceful shutdown logs less scary.",2016-03-12T00:36:10Z
a3f0048ea48990dde2d5b1c0754e7fd9e899c842,"Merge pull request #2631 from gianm/plumbers-rpe

Better logging for ParseExceptions on index aggregation, and remove unnecessary exception handling.",2016-03-11T22:22:58Z
6f0d6ef0e98b7504a771dc5f225bdb8e75f36e8d,optimize timeboundary for min or max bound,2016-03-11T22:00:32Z
f381c6066e6b389e2885f067e93fd313d8fc94e9,"Merge pull request #2638 from gianm/attempt-fix-2637

WorkerTaskMonitor: stop() waits for mainLoop to exit.",2016-03-11T21:27:24Z
79a95f7789f7ecbfd77726d5f35936ccd57603da,"WorkerTaskMonitor: stop() waits for mainLoop to exit.

Fixes #2637.",2016-03-11T17:07:28Z
61cd838d6b0d8213967383a63b01c55efefd399b,"Merge pull request #2640 from guobingkun/fix_doc

fix broken link for Tasks",2016-03-11T18:55:04Z
96c981cd0a811bb5f45a1835770172748246baa5,fix broken link for Tasks,2016-03-11T17:36:34Z
05397a9b4f4154094430f8ffa097f9dfa71e3efb,"ThreadPoolTaskRunner: Make graceful shutdown logs less scary.

- It's okay to suppress InterruptedException during graceful shutdown, as
  tasks may use it to accelerate their own shutdown.
- It's okay to ignore return statuses during graceful shutdown (which may
  be FAILED!) because it actually doesn't matter what they are.",2016-03-11T03:38:26Z
f4ab1c2e52ca89acd4ce44e54cb19bfa206ffadc,"Merge pull request #2632 from gianm/examples-druid-provided

examples: Switch druid-server, druid-common to ""provided"".",2016-03-11T03:57:32Z
d63473e0d55192c5c1fa1ec1183b0581c0c2f744,"examples: Switch druid-server, druid-common to ""provided"".",2016-03-11T02:43:29Z
f22fb2c2cf896b4b436e718548b825d7496aa470,"KafkaIndexTask.

Reads a specific offset range from specific partitions, and can use dataSource metadata
transactions to guarantee exactly-once ingestion.

Each task has a finite lifecycle, so it is expected that some process will be supervising
existing tasks and creating new ones when needed.",2016-03-02T00:51:50Z
187569e702437e8f37880bd78ef76001f70b2cb7,"DataSource metadata.

Geared towards supporting transactional inserts of new segments. This involves an
interface ""DataSourceMetadata"" that allows combining of partially specified metadata
(useful for partitioned ingestion).

DataSource metadata is stored in a new ""dataSource"" table.",2016-03-02T00:51:35Z
3d2214377dad2476ad3a8a78f65932d808c9e654,"Appenderatoring.

Appenderators are a way of getting more control over the ingestion process
than a Plumber allows. The idea is that existing Plumbers could be implemented
using Appenderators, but you could also implement things that Plumbers can't do.

FiniteAppenderatorDrivers help simplify indexing a finite stream of data.

Also:
- Sink: Ability to consider itself ""finished"" vs ""still writable"".
- Sink: Ability to return the number of rows contained within the sink.",2016-03-01T23:38:32Z
08284fea626931dbacc794c62833116d1c690f24,Publish test-jar for indexing-service.,2016-01-07T06:33:07Z
92c828f90410125ac17e3cf35b615189298243a2,Make SegmentHandoffNotifier Closeable.,2016-01-06T19:10:51Z
ad5ffdf483d5071378528a619b55ee504676b8b9,Nix Committers.supplierOf; Suppliers.ofInstance is good enough.,2015-09-15T20:31:14Z
8a11161b20c4387a76710b4ebc4d5c8135a8df2d,"Plumbers: Move plumber.add out of try/catch for ParseException.

The incremental indexes handle that now so it's not necessary.

Also, add debug logging and more detailed exceptions to the incremental
indexes for the case where there are parse exceptions during aggregation.",2016-03-11T00:39:26Z
dc0214bddb9ef509e2d16e5b6f8b8e60f446086a,while GroupBy merging use unsorted facts in IncrementalIndex wherever possible,2016-03-01T16:35:56Z
02dfd5cd809a59dca062573b09e01cb314b8e974,update IncrementalIndex to support unsorted facts map that can be used in groupBy merging to improve performance,2016-03-01T16:10:50Z
1e49092ce767239572fd00dc0fd4e38bf648d977,"Merge pull request #2627 from himanshug/fix_datasource_inputformat_locations

fix regression - bug in DatasourceInputFormat best effort split location finder code",2016-03-10T21:46:04Z
90d7409e1ae1819aecca44dc85cfc6daf9fe7bd4,"Merge pull request #2611 from himanshug/gp_by_max_limit

only allow lowering maxResults and maxIntermediateRows from groupBy query context",2016-03-10T21:44:13Z
863aa668083fefa71d25db5267620196d43c1800,"Merge pull request #2597 from metamx/forwardPortMMX23

Forward port - Fix dependency problems",2016-03-10T20:56:52Z
eab8a0b54d95eb0174ab7aa9b523b05c3e097630,in DatasourceInputFormat code for determining segment block locations avoid the split calulation by helper TextInputFormat,2016-03-10T20:24:48Z
7b1bfbf7045b13f4a2c20cc6cbdf4d474a25ea41,Add documentation to modules about what should be excluded.,2016-03-03T20:53:32Z
d299540efceda6dc39ec09e1efc50776d6c7b134,Make HadoopTask load hadoop dependency classes LAST for local isolated classrunner,2016-03-01T21:30:17Z
ba1185963b0c4b1d6634e21cf0df9aff013d7da6,"Fix a bunch of dependencies
* Eliminate exclusion groups from pull-deps
* Only consider dependency nodes in pull-deps if they are not in the following scopes
	* provided
	* test
	* system
* Fix a bunch of `<scope>provided</scope>` missing tags
* Better exclusions for a couple of problematic libs",2016-02-26T20:17:01Z
cf3965c82e14b942c4ac5aae10388b62344d8cb1,"Merge pull request #2625 from gianm/clarify-parser-docs

Clarify parser docs.",2016-03-10T17:44:23Z
a2b16527872c1f900258982d5227bd97033351a3,"Clarify parser docs.

- Clarify what parseSpecs are used for.
- Avro, Protobuf should use timeAndDims parseSpecs.
- Hadoop jobs should use hadoopyString string parsers.",2016-03-10T16:45:04Z
68cffe1d9186db14aea3c7a303236dccdb5f4da2,"Merge pull request #2615 from gianm/timeseries-skipEmptyBuckets-cache

Fix caching of skipEmptyBuckets for TimeseriesQuery.",2016-03-10T02:45:59Z
5bb9fcf785f377b9b51313521255c7195c949454,"Merge pull request #2620 from guobingkun/fix_log

log exception correctly in DatasourceInputFormat and IndexGeneratorJob",2016-03-09T23:33:48Z
0f3a7c94c691125724c5a9442bff26cf95f86c1f,"Merge pull request #2616 from gianm/getContextBoolean

Make specifying query context booleans more consistent.",2016-03-09T22:23:10Z
c20d7682a993b70d4a043637b1880fd821894367,log exceptions correctly in DatasourceInputFormat and IndexGeneratorJob,2016-03-09T18:43:04Z
4c3a3f8da640419f52fd5837fbd612aab3e993c0,"Merge pull request #2537 from druid-io/refactor-ext

refactor extensions into core and contrib",2016-03-09T16:18:42Z
94da1f8f5944060babe433084cc6768cac1b2e76,"Merge pull request #2608 from gaodayue/hdfs_federation_support

support Federationed HDFS",2016-03-09T04:41:13Z
708bc674fa8ca67dc4c9e714649ba34acb1b39a8,"Make specifying query context booleans more consistent.

Before, some needed to be strings and some needed to be real booleans. Now
they can all be either one.",2016-03-09T03:37:12Z
40dad6dff48f1fc26546ad6e6faca27db6d737cd,Fix caching of skipEmptyBuckets for TimeseriesQuery.,2016-03-09T03:22:12Z
e3e932a4d4029224db9842ade5df35e3719c41c3,refactor extensions into core and contrib,2016-03-01T01:43:35Z
163e53641514b56345532fea4efdd5ac15b15b1b,"Merge pull request #2601 from navis/fix-combine-sequence

Relay final value to yielder in CombineSequence (Fix for #2586)",2016-03-08T23:59:08Z
ca5de3f5835e87ec445ad1bfb55d995ee66cd584,only allow lowering maxResults and maxIntermediateRows from groupBy query context,2016-03-08T21:03:59Z
8e36e6fa43268d0f5e17019ef0f0f840a9b8602c,"Merge pull request #2610 from dclim/add-combineText-doc

add combineText property and cleanup batch ingestion doc",2016-03-08T20:54:16Z
9e31e2ce0eddd2d7aa08f965aa0570bee10bfae2,"Merge pull request #2605 from himanshug/robust_hdfs_kill

let hdfs segment kill be a success when segment file does not exist",2016-03-08T20:43:59Z
9c2420a1bc9b8fb4b1e1963060a4de8d3aedff3c,"Merge pull request #2599 from himanshug/datasource_isolation

make coordinator db polling for list of segments more robust",2016-03-08T20:43:49Z
e7018f524f27acbf1b1c13d4884caab104014bde,"Merge pull request #2598 from himanshug/handoff_timeout

optional ability to configure handoff wait timeout on realtime tasks",2016-03-08T20:43:36Z
de869f6efc932560b915d1c62486f4125c4e1c21,"Merge pull request #2584 from himanshug/gp_by_max_limit

allow groupBy maxRows limit be overridable by context",2016-03-08T20:43:25Z
df29667a89bbfec8171bec72f5f7198d68495e51,add combineText property and cleanup batch ingestion doc,2016-03-08T20:10:34Z
db11d8bbe50baf180eb4d61ab4e924dda38e6fd9,"Merge pull request #2609 from metamx/showBadLog

Add LogTest to show bad log behavior",2016-03-08T18:53:27Z
3afa9e916be8769abee311c30aef7b4dbf91ac36,"Merge pull request #2578 from b-slim/fix_metric

override metric name",2016-03-08T18:04:50Z
908eb7eb4d3c01bfa76e9ed2084121bcc27231f3,Add LogTest to show bad log behavior,2016-03-08T17:42:12Z
1b3fd8a8aabbec60aadf03cae23d71cb01c98f65,added more tests and fixed concat+combine,2016-03-08T17:08:52Z
c72438ead03adceeec96346fb5e2d3d50a3c1d0d,override metric name,2016-03-02T15:07:32Z
a6dc3703ca33a2d025c49d1db3f914bdca43b366,use ISODataTimeFormat for both hdfs and viewfs schema to support Federationed HDFS,2016-03-08T05:55:05Z
4ff1620131703b06ca831fb2f5467ae1f80ef32d,Relay final value to yielder in CombineSequence (Fix for #2586),2016-03-07T01:04:55Z
ea408f531eac216c6de4bd393f6a3f249ac46797,let the hdfs segment kill be success when segment file does not exist,2016-03-07T22:51:41Z
099acb4966e14a130520a36f97f6633996f0c590,allow groupBy max[Intermediate]Rows limit be overridable by context,2016-03-02T23:13:58Z
1288784bde6090e0244b01f59ee17c896f1c12f7,"in coordinator db polling for available segments, ignore corrupted entries in segments table so that coordinator continues to load new segments even if there are few corrupted segment entries",2016-03-04T22:49:01Z
040263659847b03e8ad2c03dd560dc4d34c44f19,configurable handoffConditionTimeout in realtime tasks for segment handoff wait,2016-03-05T00:53:44Z
4fa08a13291949f9b2b98cee8300e6b38e376695,"Merge pull request #2592 from himanshug/inc_index_storage_adapter_fix

fix regression - reintroducing the safety check removed in commit-1d602be",2016-03-04T20:31:28Z
2ad134638dba05ee66e9a9182e7f90209bf75d68,"Merge pull request #2589 from b-slim/fix_real_time

Make realtime kafka firehose skip corrupt message",2016-03-04T20:14:23Z
623e89aa54a4d836cbc94601d44e1816b150fdb7,skip corrupt message,2016-03-03T21:15:49Z
c544ebf25e04e1c461b61219e7ff81465a97ad0c,reintroducing the safety check removed in commit-1d602be so that dim value ids are less than cardinality,2016-03-04T05:23:18Z
9fbcd86930a567276c73f316bd802af884e453e4,"Merge pull request #2590 from jisookim0513/master

fix default number of connections on broker config documentation",2016-03-03T23:08:52Z
177b575d416a142424a2a8792e669ae07e771562,fix default number of connections on broker config documentation,2016-03-03T21:50:48Z
703dc7a48fa7c30eab908adf5b1877325a3b15c1,"Merge pull request #2585 from gianm/overlord-workers-api

OverlordResource: Use getZkWorkers on RemoteTaskRunner.",2016-03-03T02:15:05Z
d06c1c5c855b5ffde1296bfeaa2ee15541dbe7d5,"Merge pull request #2583 from guobingkun/fix_multiple_specs_2

update querySegmentSpec when passing query to getQueryRunner",2016-03-03T02:05:34Z
e9c23bf376d2dff0b27dbfeff0e34fb5c4511094,"OverlordResource: Use getZkWorkers on RemoteTaskRunner.

Restores old behavior of this api, from before #2249 when getWorkers returned ZkWorkers.",2016-03-03T01:31:30Z
9e74772d6bdcb7f2b1afd34290bcb34b37835e47,"Merge pull request #2574 from gianm/allostuff

Make first few allocatePendingSegment retries quiet.",2016-03-02T23:16:53Z
cfe2dbf1eb24e76a0020495d0d5d8cad77585746,"Merge pull request #2580 from gianm/rtc-basePersist

RealtimeTuningConfig: Use different default basePersistDirectory per instance.",2016-03-02T22:56:49Z
4a58462fc7674f50a580debc82bba81992575f7c,"update querySegmentSpec when passing query to getQueryRunner
After finding the FireChief for a specific partition, Druid will need to find the specific queryRunner for each segment being queried by passing the query to FireChief. Currently Druid is passing the original query that contains all the segments need to be queried, it's possible that fireChief.getQueryRunner(query) returns more than 1 queryRunner because query.getIntervals() is not specific to a single segment.

In this patch, for each segment being queried, Druid will update the query with its corresponding SpecificSegmentSpec.",2016-03-02T08:17:33Z
e65e6a49a55f70ed5db40472ea3c27cbd63ca7c7,RealtimeTuningConfig: Use different default basePersistDirectory per instance.,2016-03-02T18:09:04Z
004028b887153dad60128ce875c382f2e2d85850,"Make first few allocatePendingSegment retries quiet.

Some light retrying can happen during normal operation (SELECT -> INSERT races) and the
ensuing log messages would be scary for users.",2016-03-02T01:49:17Z
612e327426a275b43a4fde2c3b6a0ad3480893a5,"Merge pull request #2581 from gianm/fix-deadlock

CliPeon: Fix deadlock on startup by eagerly creating ExecutorLifecycle, ChatHandlerResource.",2016-03-02T19:37:49Z
7557eb28004e2640f5228463f1955b971aa3f46c,"CliPeon: Fix deadlock on startup by eagerly creating ExecutorLifecycle, ChatHandlerResource.

See stack traces here, from current master: https://gist.github.com/gianm/bd9a66c826995f97fc8f

1. The thread ""qtp925672150-62"" holds the lock on InternalInjectorCreator.class,
   used by Scopes.SINGLETON, and wants the lock on ""handlers"" in Lifecycle.addMaybeStartHandler
   called by DiscoveryModule.getServiceAnnouncer.
2. The main thread holds the lock on ""handlers"" in Lifecycle.addMaybeStartHandler, which it
   took because it's trying to add the ExecutorLifecycle to the lifecycle. main is trying
   to get the InternalInjectorCreator.class lock because it's running ExecutorLifecycle.start,
   which does some Jackson deserialization, and Jackson needs that lock in order to inject
   stuff into the Task it's deserializing.

This patch eagerly instantiates ChatHandlerResource (which I believe is what's trying to
create the ServiceAnnouncer in the qtp925672150-62 jetty thread) and the ExecutorLifecycle.",2016-03-02T18:01:14Z
441234eafb663af9b90e0489f2896572e5c92f26,"Merge pull request #2573 from gianm/sqlystuff

SQLMetadataConnector: Fix overzealous retries on ""insert"".",2016-03-02T18:21:00Z
80d954578d4c45d7843ea7350d29897f7ef4bed1,"Merge pull request #2572 from gianm/fix-rit-taskresource

Fix default TaskResource for RealtimeIndexTasks.",2016-03-02T18:20:27Z
d002b09e361bda5b18408d8c58dbe9f079397a47,"Merge pull request #2575 from gianm/tasklocation-toString

TaskLocation: Add toString method.",2016-03-02T03:13:20Z
acd95d3e2886f4cbd6ab45953635a89c76557636,"TaskLocation: Add toString method.

Necessary because these objects are used in log messages.",2016-03-02T01:52:04Z
102fc92120bbc9d22a7aac53a99645270963a407,SQLMetadataConnector: Fix overzealous retries that were preventing EntryExistsException from making it out.,2016-03-02T01:20:33Z
a355bfb7a917af3eeda258694a2c986b2a9e82ae,"Fix default TaskResource for RealtimeIndexTasks.

It was supposed to be the same as the task id, but it wasn't because
""makeTaskId"" has a random component.",2016-01-06T18:42:42Z
c82b680cd4a41c1784d07678b54128c70200b45a,"Merge pull request #2565 from sascha-coenen/feature-pulldeps-local-mvn-repo

pointing pull-deps tool to local maven repository",2016-03-01T21:26:18Z
9340cae98544aff4405c80f14ce1d8f6b13b21d3,"Merge pull request #2457 from bjozet/docs/fixes

Default value for maxRowsInMemory",2016-03-01T15:43:26Z
2462c82c0ea8766f40cf454c57557a5c63d2c09d,"New defaults for maxRowsInMemory rowFlushBoundary

To bring consistency to docs and source this commit changes the default
values for maxRowsInMemory and rowFlushBoundary to 75000 after
discussion in PR https://github.com/druid-io/druid/pull/2457.

The previous default was 500000 and it's lower now on the grounds that
it's better for a default to be somewhat less efficient, and work,
than to reach for the stars and possibly result in
""OutOfMemoryError: java heap space"" errors.",2016-02-25T09:39:26Z
31b502773af855f8293e2b894daca4a456f3d630,"Merge pull request #2480 from navis/pagingfail-over-segments

Select query cannot span to next segment with paging",2016-03-01T06:12:41Z
55c9320671b88ff5d5bac1517a8fecbff230eb05,"Merge pull request #2542 from guobingkun/fix_multiple_specs

[Fix Bug] Realtime Node may double count query results when multiple spec files are specified.",2016-02-29T21:53:14Z
4edcb1b86157a0b028f75a89184c8a21c31014d7,"Refactor FireChief + UTs for RealtimeManagerTest
Add tests that verify whether RealtimeManager is querying the correct FireChief for a specific partition
make FireChief static and package private, add latches in the UT",2016-02-25T06:37:07Z
e5c25725c00de871bbfa7a4217f009f05c4d107b,"Merge pull request #2562 from himanshug/fix_2556

with nested GpBy query outer query results need to be further merged",2016-02-29T20:17:33Z
5b3d99c4128104289834f60f116e65a712519a52,pointing pull-deps tool to local maven repository,2016-02-29T20:13:00Z
68631d89e975ab2edc01421519c09a8c7b31b983,Allow realtime nodes to have multiple shards of the same datasource,2015-07-01T15:36:09Z
14a306c55361573d43eff759eacf7cb4f482e2a9,"Merge pull request #2553 from guobingkun/versioning_mysql

Give mysql tarball a version",2016-02-29T16:59:23Z
0722ced413326752017d009aa46177989cdf4770,with GpBy query outer query results need to be further merged,2016-02-29T05:01:21Z
5aa1164b1adc7e7a555bd0b0168ae488420807fb,"Merge pull request #2482 from navis/lazy-init-boundfilter

Lazily initialize predicate for bound filter",2016-02-29T13:18:35Z
b1ff9208316b070205999066529a6ebd88bf7031,Lazily initialize predicate for bound filter,2016-02-17T13:50:26Z
5f1e60324ad42daabb74b753a6259290d0a3fbe9,Added more complex test case with versioned segments,2016-02-29T05:36:42Z
aa871b935328c2ccec76c820c372e40bb3e117a3,versioning mysql tarball,2016-02-25T23:55:11Z
2686bfa394241673111bfad12de18c334369ac9e,Select query cannot span to next segment with paging,2016-02-17T07:22:43Z
8f97b1e40c578c5e21703286a6d87a155c4765f0,"Merge pull request #2554 from guobingkun/improve_include_extensions

improve doc on including druid and hadoop extensions",2016-02-27T04:05:57Z
dd060eb8263b279cc4e514ffdf1743ecebc927b0,"Merge pull request #2558 from gianm/hdfs-log-overwrite

HdfsTaskLogs: Allow overwriting existing logs.",2016-02-26T23:50:51Z
7e708811019cfa4f1e854f31c6d7b260b2250450,"HdfsTaskLogs: Allow overwriting existing logs.

Necessary because ForkingTaskRunner pushes logs when gracefully stopping,
but it may need to re-push those logs when the task finishes for real after
restoring.",2016-02-26T23:10:19Z
ca1bf648d1807cd4f124a581ba72a32ca0ac4fd1,"Merge pull request #2533 from metamx/javaOptsArray

Allow specifying peon javaOpts as an array",2016-02-26T22:05:49Z
c6803c4364f0fc315d318baf08e966c4336f26bf,Allow specifying peon javaOpts as an array,2016-02-24T16:12:50Z
18f9e05f0f00b3f9f144f3bc899669d27ca0f89f,improve doc on including druid and hadoop extensions,2016-02-26T06:30:01Z
eb13d7afe3eda43efdb917877bc6be2533af2c93,"Merge pull request #2521 from himanshug/fix_2497

RTR has multiple threads for assignment of pending tasks now",2016-02-26T16:14:15Z
6b3c96c63ade1e30fb44bb9fa900bcba00f6bf48,better exception for invalid interval,2016-02-25T03:01:07Z
9f8faabddb046db8def4ca6801d531f16c495b05,"Merge pull request #2469 from pdeva/patch-10

correct service names",2016-02-26T15:45:58Z
bc156effe7ac917dd7d9046d007c757e170fa946,RTR has multiple threads for assignment of pending tasks now.,2016-02-22T21:42:15Z
1fe277ee29d6ef1900667e2a0bf436b80d8f2a56,"Merge pull request #2367 from se7entyse7en/feature-rackspace-cloud-files-static-firehose

Adds support to use Rackspace's cloudfiles as static firehose",2016-02-26T01:31:06Z
29d29ba98d3373f121ac550b5cbf4ccbf71d0375,"Merge pull request #2263 from jon-wei/flex_dims3

Allow IncrementalIndex to store Long/Float dimensions",2016-02-26T01:23:02Z
3a9fe2aad0a986336a5db2572caf2759a51a3afc,"Merge pull request #2231 from lizhanhui/pull_request

Add druid-rocketmq module",2016-02-26T01:19:57Z
3691fbd84925f71076b9e7d38b06cbe87918c767,"Merge pull request #2548 from metamx/moreLoggingJDBCNamespace

More logging for JDBCExtractionNamespaceFunctionFactory",2016-02-26T01:13:20Z
53a5f07c1480d2f738f28c817a096f7cf1e6ae7e,"Merge pull request #2544 from metamx/fixMaxPort

Limit PortFinder to 0xFFFF",2016-02-26T01:12:53Z
143e85eaa52c100484dacda970441a9c8ef4c644,"Merge pull request #2419 from gianm/task-hostports

Plumb task peon host/ports back out to the overlord.",2016-02-26T01:11:53Z
e987e2d73dd23ff9a1f0430809b0accc6a0e9b21,"Merge pull request #2552 from gianm/fix-dumb-bug

Fix parsing of druid.indexer.server.maxChatRequests.",2016-02-25T23:49:24Z
b331fb4a83dae2bb3c4322f0f2a48abf6face019,Fix parsing of druid.indexer.server.maxChatRequests.,2016-02-25T22:47:15Z
a8820d837b466b9c370748641b60bc5170f0910e,More logging for JDBCExtractionNamespaceFunctionFactory,2016-02-25T17:48:56Z
4c522a8159d829cc5ddf5686b26aea865168632c,"Merge pull request #2543 from metamx/fixUnregisterChildPorts

UnRegister port in ForkingTaskRunner",2016-02-25T17:02:31Z
3fa7a7ebfeb68ee966c7ed8966bcadc199e29c7b,Limit PortFinder to 0xFFFF,2016-02-25T16:09:08Z
187b788089982acf667e11326975cbd7dfb1c806,UnRegister port in ForkingTaskRunner,2016-02-25T16:04:25Z
b82b487f200712b118e09b880b72cb032c9f6f28,remove extra kill parameter,2016-02-24T23:16:18Z
cf0bc905fb009c4bd94570639e890b5ba47c66b1,"Plumb task peon host/ports back out to the overlord.

- Add TaskLocation class
- Add registerListener to TaskRunner
- Add getLocation to TaskRunnerWorkItem
- Implement location tracking in existing TaskRunners
- Rework WorkerTaskMonitor to do management out of a single thread so it can
  handle status and location updates more simply.",2016-02-08T23:59:02Z
917e7e58f585894d017ffef12ae2c2540e53c562,"Merge pull request #2536 from jon-wei/regex_extraction_rename

Rename 'replaceMissingValues...' parameters in RegexExtractionFn",2016-02-24T22:41:06Z
c17ce024675b97ce0d80cae6ffbcf77de30ffd27,Allow IncrementalIndex to store Long/Float dimensions,2016-02-24T21:34:06Z
fd3782522c4bbbaeb3f847bf5cb2b0dc73840e53,Rename 'replaceMissingValues...' parameters in RegexExtractionFn,2016-02-24T21:12:56Z
6ac32c551801ca4956504e6320c3b2ee7f57f678,"Merge pull request #2530 from himanshug/fix_plumber

In persistAndMerge, increase the scope of try-catch block so that any…",2016-02-24T17:11:32Z
fb7eae34ede2da6e09300ea5477d07e8ac71ff4e,"Merge pull request #2249 from metamx/workerExpanded

Use Worker instead of ZkWorker whenever possible",2016-02-24T07:53:22Z
a3b37e92259ebdb9cde00134b15e9cb9ce1cc957,"In persistAndMerge, increase the scope of try-catch block so that any exception while persisting hydrants is caught and consequently that sink is abandoned or the task will forever wait for handoff to happen.",2016-02-24T04:22:33Z
6c9e1a28addfaa86a04d86e5002944394a3e5d58,"Merge pull request #2519 from gianm/unparseable-handling

Better handling of ParseExceptions.",2016-02-23T23:16:29Z
ac13a5942a5936a7935829baa84f5c8df8f84f4d,"Use Worker instead of ZkWorker whenver possible
* Moves last run task state information to Worker
* Makes WorkerTaskRunner a TaskRunner which has interfaces to help with getting information about a Worker",2016-01-11T23:48:48Z
93540c0631640a4636c73c3e6f2b7dc465ef7ab9,"Merge pull request #2503 from gianm/jetty-qos

Add druid.indexer.server.maxChatRequests for QoS; deprecate separate ports.",2016-02-23T18:35:53Z
4f300cfe49190e68cef92ae2df96146beb439565,"Merge pull request #2526 from druid-io/b-slim-patch-1

fix docs about sketches",2016-02-23T18:23:53Z
3534483433dcfa93ea7e94922375a77311d11215,"Better handling of ParseExceptions.

Two changes:
- Allow IncrementalIndex to suppress ParseExceptions on ""aggregate"".
- Add ""reportParseExceptions"" option to realtime tuning configs. By default this is ""false"".

Behavior of the counters should now be:

- processed: Number of rows indexed, including rows where some fields could be parsed and some could not.
- thrownAway: Number of rows thrown away due to rejection policy.
- unparseable: Number of rows thrown away due to being completely unparseable (no fields salvageable at all).

If ""reportParseExceptions"" is true then ""unparseable"" will always be zero (because a parse error would
cause an exception to be thrown). In addition, ""processed"" will only include fully parseable rows
(because even partial parse failures will cause exceptions to be thrown).

Fixes #2510.",2016-02-19T21:35:06Z
11c9a63ee307f20a0c90fbf9d14eb1daa86c4b36,"Merge pull request #2522 from himanshug/doc_update

fix thetaSketchSetOp doc",2016-02-23T17:33:55Z
86c4900347e011d8bbffe7e6dec10a823fc3a4d2,fix thetaSketch post aggregator doc,2016-02-23T15:14:19Z
c7cb5bff14b3859fb99d1812732bc0a4c0e6a28d,fix thetaSketchSetOp doc,2016-02-23T05:28:10Z
0c984f9e324cfb2cf11193bbe4d2fdebbcb48491,"Merge pull request #2109 from himanshug/segments_in_delta_ingestion

idempotent batch delta ingestion",2016-02-22T22:00:45Z
79614bd1597a05571e4494a723192fa983616e11,"Merge pull request #2514 from himanshug/doc_update

updating thetaSketchSetOp post agg documentation to reflect the possibility of nesting",2016-02-22T19:13:58Z
3bdd7570246d11746eb1220cab847491510c2732,"Merge pull request #1773 from b-slim/log_details

Adding downstream source when throwing QueryInterruptedException",2016-02-22T18:16:07Z
f7679dd5a9758bbedcd33da9f7c26227a5012486,updating thetaSketchSetOp post agg documentation to reflect the possibility of nesting,2016-02-22T15:38:58Z
21b0b8a07dcc327d34c3f527eee6c8bb890ed8f9,new coordinator endpoint to get list of used segment given a dataSource and list of intervals,2016-02-10T03:37:14Z
09ffcae4ae0b69500d77d9600a81c30f848a34dc,give user the option to specify the segments for dataSource inputSpec,2015-12-17T03:31:07Z
77925cc06101aea3bf1e7f96173e825d0336ae40,adding downstream source of  QueryInterruptedException,2016-02-16T19:54:53Z
8ee81947cdcdbed1067beea7e508e5f82cb44965,"Merge pull request #2494 from himanshug/fix_timeseries

do not drop post-aggs in TimeseriesQueryToolChest.makePreComputeManipulatorFn",2016-02-20T18:37:32Z
23c993c9e7810ee268ed6904d89633da075aa9f6,"Add druid.indexer.server.maxChatRequests for QoS; deprecate separate ports.

- Add druid.indexer.server.maxChatRequests, which sets up a QoSFilter on the main Jetty server.
- Deprecate druid.indexer.runner.separateIngestionEndpoint
- Deprecate druid.indexer.server.chathandler.*",2016-02-19T00:49:21Z
8a41f0337758bfdd958d0bde19b66d478019a109,"Merge pull request #2496 from gianm/hll-finalizing-comparator

Add comparator to HyperUniquesFinalizingPostAggregator.",2016-02-19T21:03:43Z
499288ff4bfb1da5b10365a3c8d5562c2c391a17,"Merge pull request #2509 from metamx/hadoopIsolatorTest

Add hadoop classloader isolation tests for HadoopTask",2016-02-19T20:23:22Z
a3c29b91cc6ab1f72e644d61a4412d4185b544a2,"Merge pull request #2505 from gianm/rt-exceptions

Harmonize realtime indexing loop across the task and standalone nodes.",2016-02-19T19:23:14Z
9dff0e5dbd154a3b416ba21eca1f8db7565efa95,Add hadoop classloader isolation tests for HadoopTask,2016-02-19T17:32:03Z
44e925c98ff10e73751b7333551bdcd445495776,"Merge pull request #2506 from metamx/failTravisFaster

Fail travis builds faster",2016-02-19T19:01:37Z
ddf913d6267e37f361973a96054508981935d799,"Merge pull request #2508 from gianm/ftr-shutdown-logging

ForkingTaskRunner: Better logging during orderly shutdown.",2016-02-19T18:02:24Z
9acc2834ff60c6efb7081579bf1a47f0ea0cb9e8,"Merge pull request #2501 from metamx/forwardport2500

Make HadoopTasks's classloader a single one",2016-02-19T17:56:38Z
c0c6cf77fab042a0bd5a97c1033d1a7f5d80d53c,ForkingTaskRunner: Better logging during orderly shutdown.,2016-02-19T16:58:16Z
d25c46cb9f719f1177e7378640e3536912b48889,"Add comparator to HyperUniquesFinalizingPostAggregator.

This makes it possible to do groupBys with clauses like ""HAVING uniques > 10"".
Beforehand you couldn't do it with either an aggregator (because it returns
an HLLV1 which the havingSpec can't understand) or a finalized postaggregator
(because it didn't have a comparator).

Now you can at least do it with a finalizing postaggregator. Trying it with
the aggregator alone still doesn't work.

Added some topN and groupBy tests verifying the comparator, and added an
@Ignore test that should pass if havingSpecs are made work on the aggregator
directly.",2016-02-18T19:45:09Z
dd3cf93430dc5b610656cdfad603a604a499759f,Fail travis builds faster,2016-02-19T15:38:06Z
243ac5399bc9d73aa034eb33b7fde9ccdf6e7827,"Harmonize realtime indexing loop across the task and standalone nodes.

- Both now catch ParseExceptions on plumber.add (see https://groups.google.com/d/topic/druid-user/wmiRDvx2RvM/discussion)
- Standalone now treats IndexSizeExceededException as fatal (previously only the task did)",2016-02-19T15:31:26Z
4725522759c74b2dde6755524be6ecd7f13ec333,update middlemanager.conf,2016-02-19T05:47:50Z
87752be74093c5d3e80e3fc4c05e138235f6485d,Make HadoopTasks's classloader a single one,2016-02-18T17:44:32Z
7e5d9a84f937f7b6b74cb438051fe591d4868a45,"Merge pull request #2498 from guobingkun/fix_tarball

generate tarball by mvn package",2016-02-18T23:57:20Z
9e4c908922dd82925176acdba66decba6524e7b1,generate tarball by mvn package,2016-02-18T21:39:13Z
5ba8893fa38936309ecbf5e65b4ae6ddbd322678,"Merge pull request #2490 from guobingkun/better_printing

Integration tests: print expected results in json",2016-02-18T15:36:13Z
72ab621c2acc5daf8b3397c4677706e4d6a1eeef,Integration tests: print expected results in json format,2016-02-18T04:23:39Z
11b0117422c90aa33cfbf7e80afcc944f4f32633,do not drop post-aggs in timeseries query tool chest makePreComputeManipulatorFn like other query types,2016-02-18T02:51:35Z
083f019a4807e810e6d801b487e1324b36f09c77,"Merge pull request #2465 from druid-io/more-doc-fix

more doc fixes",2016-02-17T19:00:38Z
1c4cfd58298da2ff2ac8cf12e7aa2ae37fbd0cca,"Merge pull request #2485 from rasahner/DOC_fixDockerLink

integration-tests/README: fix link to docker-install",2016-02-17T18:10:55Z
661c3aac4f5abfe155f0b939bcd879f5e6ad1744,"Merge pull request #2483 from druid-io/b-slim-patch-1

clarification about monitoring period",2016-02-17T17:46:25Z
7da6594bfe8347302eeab1044d1d9214a6e131c2,more doc fixes,2016-02-12T22:19:28Z
19774b5e9ae5f9d509120aed4b227a2197a2f04f,integration-tests/README: fix link to docker-install,2016-02-17T17:21:14Z
761059f68be28e698109e532c0f352d48d8f8379,"Merge pull request #2484 from gianm/compression-doc

Multivalued dimensions can be compressed since 0.8.0.",2016-02-17T17:18:08Z
3a996216bd363f9db7f164a8e5aa90b5785a926a,Multivalued dimensions can be compressed since 0.8.0.,2016-02-17T16:33:21Z
5a69fe891a2106d90257283683b540f22a4b60a2,"Merge pull request #2472 from redBorder/master

Fixed equal distribution strategy when exist disabled middleManagers.",2016-02-17T15:29:14Z
e9f1c94822430e4ad1cac259e1b76b7649786b5a,Update metrics.md,2016-02-17T15:27:15Z
ebbb1aa74e3d84049a3f68c60031291ae2254771,Update metrics.md,2016-02-17T15:05:16Z
07d714b1b5eb25d561500360cc96eb4450205cec,Fixed equal distribution strategy when exist disable middleManager with same currCapacityUsed.,2016-02-15T16:07:43Z
64409cd6bba1863f33d9bc0773631181e6e63f89,"Merge pull request #2475 from rasahner/IT_updateQueryTests

query tests: add max and min to segment metadata query results",2016-02-16T23:58:28Z
a785f0e6ce20415688c528e7feaa76bc7ff77d78,query tests: add max and min to segment metadata query results,2016-02-16T18:59:06Z
5364aa5b6c0e78a8672b967ce0a58ef1a3da7ac3,"Merge pull request #2470 from rasahner/IT_killFalse

integration-tests: stop using kill=false to disable segments",2016-02-16T17:43:35Z
e60fc1b7f16676647ee3ab72e70196e0779a457a,"Merge pull request #2474 from CHOIJAEHONG1/support-alphanumeric-dimensional-sort-in-gropu-by

delete System.out.println() in test code (#2474)",2016-02-16T13:35:22Z
32b9d57b23734deb8b21d991e2b399557c8db446,handle a failing UT in GroupByQueryRunnerTest after merging into the master,2016-02-16T07:56:57Z
b25bca85bc923ef1d83e22edf69d492b947c8cb8,Merge branch 'master' of https://github.com/druid-io/druid into support-alphanumeric-dimensional-sort-in-gropu-by,2016-02-16T07:42:05Z
e89afc901be65999de1702d76d4bf112d34ca144,delete System.out.println() in test code,2016-02-16T06:26:37Z
cd315627c9017493095f0b49a067d08f984ff32b,"Merge pull request #2393 from CHOIJAEHONG1/support-alphanumeric-dimensional-sort-in-gropu-by

support alphanumeric sorting for dimensional columns in groupby (#2393)",2016-02-16T05:11:30Z
16092eb5e2e9841e8b95bc7e4f4e5691890d22e7,"Merge pull request #2464 from gianm/print-properties

Make startup properties logging optional.",2016-02-14T21:11:35Z
34b143ae10ca10895ccc3ddaf0ab42b407a94b99,integration-tests: stop using kill=false to disable segments,2016-02-14T18:54:43Z
dd81b5ebe41f1b7b8acdccdda9f0ef1ca3997ac2,"correct service names

use a `/` instead of `:` cause thats how the service names are declared in the respective config files of coordinator and overlord",2016-02-13T23:26:19Z
3ab432ab0226183d638bae4db413a5e517ea51f5,"Merge pull request #2461 from himanshug/fix_bug_2456

fix for transient failure in OffheapIncrementalIndex",2016-02-12T22:15:39Z
e0c049c0b092be48449943a6072e582446a389f0,"Make startup properties logging optional.

Off by default, but enabled in the example config files. See also #2452.",2016-02-12T22:12:16Z
da5fcd0124fd83c6a2c0a7729c4229c80c5f0255,"before facts get it , indexAndOffsets should already know about it",2016-02-12T19:04:46Z
d63eec65a1eaac6d1963802cab425c4e582c6927,"Merge pull request #2208 from navis/metadataquery-minmax

Support min/max values for metadata query",2016-02-12T01:28:07Z
e1b022eac95b1ccd86da53a36aa371869a5337a9,"Merge pull request #2349 from navis/dimensionspec-for-selectquery

Support dimension spec for select query",2016-02-12T00:38:16Z
dd2375477ace5517500d91079f536e3a4a113be4,Support min/max values for metadata query (#2208),2016-01-06T04:32:38Z
2d037ef05e199edebcb8fc04fa88538bf6ab6d35,"Merge pull request #2453 from DreamLab/fix/topn_sorting_anomaly

Fix for unstable behavior of HyperLogLog comparator",2016-02-12T00:05:34Z
4d63196535d58c238c17135612531c4a1dce200f,Support dimension spec for select query,2016-01-28T23:52:10Z
47d48e1e67ddeae6b1cf94ac60bc84e12f024706,"Merge pull request #2452 from gianm/print-properties

PropertiesModule: Print properties, processors, totalMemory on startup.",2016-02-11T22:49:34Z
f277a54a5cae71ed5f5685b157e0141015bc5f05,removed unsafe heuristics from hll compareTo and provided unit test for regression,2016-02-11T22:46:24Z
368988d187dfe8b70dc6979db97186c7a9d5db58,"Merge pull request #2291 from druid-io/lookupManager

Promoting LookupExtractor state and LookupExtractorFactory to be a first class druid state object.",2016-02-11T22:07:27Z
29f7758e74199458b8d52bf8ffa9f2d7ed03e506,"PropertiesModule: Print properties, processors, totalMemory on startup.",2016-02-11T21:51:04Z
6b45a9e4a795d85d244decdb08d0f1b43857ced9,"Merge pull request #2449 from b-slim/fix_docs

fix docs about search query limit",2016-02-11T21:01:41Z
438a4a99708eed151c8a97cae18fdcab14192ea3,fix docs about search query limit,2016-02-11T16:40:42Z
5779b327420b9bef239f04e43616526ae9ab3920,"Merge pull request #2439 from metamx/fix2435

Make QuotableWhiteSpaceSplitter able to take JSON",2016-02-11T19:14:43Z
d435a9b1e930e723eb31ab48910012800b085146,"Merge pull request #2448 from metamx/fixBigJarHadoopPlace

Fix dependencies.",2016-02-11T18:47:00Z
f0871ea40b73c188196660b35c3d9af8133137b4,"Merge pull request #2239 from sirpkt/filtered-aggregators-at-ingestion

fix NPE with filtered aggregator at ingestion time",2016-02-11T18:21:28Z
4e119b7a24db6fd420c57489d8a472a278586968,Adding lookup ref manager and lookup dimension spec impl,2016-01-21T19:54:37Z
7a0bfa693beb44de6709848fe226d6093d5e29ae,"Merge pull request #2425 from will-lauer/sketchErrorBounds

Adding optional error bounds to sketch aggs and post-aggs",2016-02-11T17:41:17Z
189376a6f9ce9835798ce6937e963f817800a4ec,"Adding optional error bounds to sketch aggs and post-aggs

By setting a new optional parameter, `errorBoundsStdDev`, to the number
of standard deviations to use when computing error bounds, the return
type for both the SketchMergeAggregator and the SketchEstimate
PostAggregator can be changed from a simple double (estimate) to a JSON
object containing the estimate, expected high bound, expected low bound,
and standard devations used when computing bounds (same value as passed
in).",2016-02-05T21:29:16Z
40ade32a1f807d0fd111de3eb437d46b7d22090a,"Fix dependencies.
* Don't put druid****selfcontained.jar at the end of the hadoop isolated classpath
* Add `<scope>provided</scope>` to prevent repeated dependency inclusion in the extension directories",2016-02-11T05:16:04Z
2f2e2ff5b998ac23e10551c2ec0e6c027c06365e,support alphanumeric sorting for dimensional columns in groupby,2016-02-04T05:05:13Z
05a144e39aeecfaefe0bc2d5e8ba6852c1f63731,"fix crash with filtered aggregator at ingestion time

- only for selector filter because extraction filter is not supported as
  cardinality is not fixed at ingestion time",2016-01-11T09:03:42Z
1430bc2c884a493756868374bcf868c77df8110f,"Merge pull request #2276 from harshjain2/feature-2021

Fix for issue 2021.",2016-02-11T01:04:45Z
f204dfbebe1e7b3772cf1c761117fb9c331d3cd3,"Merge pull request #2413 from pdeva/patch-9

added note about including extension lib",2016-02-11T01:01:27Z
3a6452c6d4149e068528317cce9030a397b5ff4d,"Make QuotableWhiteSpaceSplitter able to take json
* Fixes #2435",2016-02-11T00:06:06Z
91f23583f5f624c60c1c099c4fa5b7d120e0bb37,"Merge pull request #2436 from gianm/mm-less-suppressey

Harmonize znode writing code in RTR and Worker.",2016-02-11T00:11:30Z
fa92b77f5a54fbed5df8ef8cdea31415ef93208d,"Harmonize znode writing code in RTR and Worker.

- Throw most exceptions rather than suppressing them, which should help
  detect problems. Continue suppressing exceptions that make sense to
  suppress.
- Handle payload length checks consistently, and improve error message.
- Remove unused WorkerCuratorCoordinator.announceTaskAnnouncement method.
- Max znode length should be int, not long.
- Add tests.",2016-02-10T19:51:04Z
2b35e909853e03298b0eb3cb6c0bbdde22f11eeb,"Merge pull request #2431 from himanshug/job_helper_refactor

In JobHelper.makeSegmentOutputPath(..) use DataSegmentPusherUtils",2016-02-10T22:42:08Z
2b69e4b00f52fd5e8f872862cb98a3626a36b38b,"Merge pull request #2429 from metamx/hadoopClasspath

Make hadoop classpath isolation more explicit",2016-02-10T21:16:51Z
2bde8b1d68d2bf0790c01316bd46984e22c3b8f4,"Make hadoop classpath isolation more explicit
* Fixes #2428",2016-01-11T18:06:02Z
a3eb863c8ea431bfc899f421abbb4a66c91a310a,Fix for issue 2021,2016-02-10T16:49:12Z
d1cb17d3f7af788002bb5a218debcecc1a152fb5,at broker - only add segments from specific tiers to the timeline,2016-02-03T05:59:03Z
2faae9d0d1aedf85176cf595b10a9de536e965e7,In JobHelper.makeSegmentOutputPath(..) use DataSegmentPusherUtils to construct the segment storage path,2016-02-08T05:24:46Z
69a6bdcf03169ba85bbbffa352ef89ac5e3ebe67,"Merge pull request #2427 from gianm/rolling-doc

Freshen up rolling update docs",2016-02-09T23:32:27Z
56ee81049ee907f108423d27a8b72ebfd28e1edc,"Merge pull request #2423 from metamx/test-0.9-build-2

fix #2420",2016-02-09T21:58:29Z
95d5526e7c8ef379f3cbf8ee764d57ec797b4620,"Freshen up rolling update docs

1. Clarify what ""Indexing Service / Realtime"" means
2. Add info about restore-based middle manager rolling restarts
3. Add info about what happens in middle manager updates
4. More consistent capitalization and spelling of node types",2016-02-09T21:54:00Z
f6eebf588497bb6df834404f7dd9866d04bff67b,"Merge pull request #2422 from rasahner/docMinorFixes

some minor doc changes",2016-02-09T16:03:22Z
078cc87eb28b7f08abb45e919831232848144005,turn off attaching artifacts second time,2016-02-02T20:36:02Z
1d57e3267d5e3c108744739bf0ba2df2019a8ae4,some minor doc changes,2016-01-29T17:43:01Z
b75862da7e537474f1d9368ba4a5a6f1a0ec2146,make 0.9 compatible,2016-02-09T01:25:34Z
b1673ee90e642276154664748b5f627756189b84,"Merge pull request #2409 from gianm/smq-merged-thing

SegmentMetadataQuery: Retain segment id when merging, if possible.",2016-02-08T23:43:39Z
c9c20bb7f318d4685b9b4a587767ab547be57ca7,"Merge pull request #2395 from metamx/fixExtractionDimFilterNullTest

Actually check cache key null checking in ExtractionDimFilterTest",2016-02-08T22:10:52Z
57bf61029b64084fcc49c1f34b4bdc09d66d96dd,"Merge pull request #2416 from druid-io/fix-docs

fix docs",2016-02-08T22:09:20Z
6fc5bcb1efd7e5d9f754211d414f8c31e61f3f22,fix docs,2016-02-08T21:20:04Z
bd9c04244ffbf3e9ca07c7c8885e619f1c072c8f,"SegmentMetadataQuery: Retain segment id when merging, if possible.

This is helpful on realtime nodes, where two analyses from two different hydrants
are merged together but they are actually from the same segment.",2016-02-05T01:35:47Z
525a911a3c23fee94052e34e0ea34002a6640bb2,added note about including extension lib,2016-02-08T20:59:41Z
08802c345d547aba98f594ea46bd33477573a119,"Merge pull request #2325 from himanshug/gp_by_merge

new OffHeapIncrementalIndex that does only aggregations off-heap",2016-02-05T21:47:12Z
9fe1b28ee5451fb948a339157fed70a872c8e264,provide configuration to enable usage of Off heap merging for groupBy query,2016-01-23T06:13:09Z
b40c342cd118f3b7a4393c5449b829cbe844c5c8,make Global stupid pool cache size configurable,2016-01-23T06:12:22Z
72a1e730a2d6df31c07e6643430a224e7994c1ec,OffheapIncrementalIndex updates to do the aggregation merging off-heap,2016-02-03T16:47:05Z
907dd77483c0cdbe550fbd351b4ea31260866ca3,OffheapIncrementalIndex a copy/paste of OnheapIncrementalIndex,2016-02-03T16:26:45Z
aeb4c5a8702cb70366c943af8a17990f94bbf3b8,"Merge pull request #2403 from druid-io/another-fix

whitespace fixes",2016-02-05T00:26:22Z
9e2295aa61ca71ef73f5b66fc0362578244eb0cd,whitespace fixes,2016-02-05T00:25:51Z
979c9a3589f551284b367db01e15b449d248a7b8,"Merge pull request #2402 from druid-io/another-fix

fix spacing again",2016-02-05T00:13:30Z
b52e1e9161978474b06d19d55836cf336174146c,fix spacing again,2016-02-05T00:13:12Z
0497fb8a68baacdda89eb85b9321c250a2870338,"Merge pull request #2401 from druid-io/ez-fix

fix rendering",2016-02-05T00:06:43Z
962e7bac14dc118113ac70f7d44e199552698e7a,fix rendering,2016-02-04T23:58:20Z
ebe4f9e928e98fc7a0cdfad525557bc01f98b4c8,"Merge pull request #2400 from druid-io/tut-fix

tutorial fix",2016-02-04T23:40:44Z
8405a7710ee8b3c750a6b7015e1ed4588ea481a9,tutorial fix,2016-02-04T23:37:47Z
e3273230cc101f025102ded0c8d46c183a6a80ac,"Merge pull request #2399 from metamx/md-to

move table of contents to Markdown and fix broken link",2016-02-04T23:28:29Z
eb593aeb907fd48f6c22141c0ef52f01020fd747,"css link is broken

removing in favor of adjusting on the site",2016-02-04T22:48:32Z
bbc5e5d470b0a19c5865704d6b5d06652c599357,"move table of contents to Markdown

fixes #2397",2016-02-04T22:35:38Z
8ac77a964480b66cf904400b400fe58e8b7dd1d1,"Merge pull request #2398 from implydata/doc-render

Numerous fixes to enables docs to render correctly",2016-02-04T23:14:18Z
003f54e26890a69cabba16480083a6894a7f2f84,add doc rendering,2016-02-04T19:53:09Z
7abad742e523e0600593adcc748af92416702fa6,"Merge pull request #2216 from druid-io/new-tutorials

Completely rework the Druid getting started process",2016-02-04T18:43:13Z
aac5f9b2c967d958d5c6698c15212e0547ad10e7,Actually check cache key null checking in ExtractionDimFilterTest,2016-02-04T17:44:13Z
1aa363cea7d11db387740cfd493cd609f6c9a189,new quickstart,2016-01-06T05:27:52Z
9fde5924368e4d508934506c532bdfb7c4013a23,"Merge pull request #2383 from liubin/fix-doc

[doc] fix doc format",2016-02-04T17:35:42Z
da77591129425aaa0d42b29c83506d4dc757260a,"Merge pull request #2392 from metamx/fix2391

Allow ExtractionDimFilter value to be null",2016-02-04T01:47:14Z
d4f00096ff5f53235432380f37b3927547b1eade,"Allow ExtractionDimFilter value to be null
* Fixes #2391",2016-02-03T23:51:47Z
633ee6ee3482b62b7a0855b7e66f8cd8b6004d26,"Merge pull request #2381 from himanshug/gp_by_builder_bug

lazily create comparators for row columns when needed",2016-02-03T23:06:25Z
8af67e76d3c0b2d18644084779e7033246775e5e,"Merge pull request #2385 from chtefi/patch-1

Fix broken link",2016-02-03T22:29:23Z
45530145b1a43abca604b00ce8ac00cdfc30b581,"Merge pull request #2387 from pjain1/fix_coord_ut

Fixes #2386",2016-02-03T22:27:49Z
6e7d90cf56eaafd2fa0b8137e2c1624fd940bd82,UTs for DefaultLimitSpec,2016-02-03T21:59:12Z
29e0d7f971e188af3f423dca0be958a034c7546b,lazily create comparators for row columns when needed,2016-02-03T05:36:25Z
9002548eeb5ee543c6dccd9acb000af9f683bd87,increase test time out and general clean up,2016-02-03T19:08:10Z
bcd69496e8bdc4b070c3a1d4a7acbeb7a187a273,Fix broken link,2016-02-03T12:07:22Z
39a46663870a62843323ed8c4eb783e99400d8c2,fix doc format,2016-02-03T08:24:19Z
a7378776809511479cfe927ce448bd7f4b6fb550,"Merge pull request #2376 from metamx/communityCommitters

Identify druid.io as committer in pom.xml",2016-02-03T07:23:57Z
2b84251a7d942318bab8563c3872691647d6ed56,"Merge pull request #2085 from navis/refactor-incremental-index2

Replace string[] with int[] for dimensions",2016-02-03T07:21:28Z
1d602be0f9771f6db53fcff5cb8c37e2c2279dd5,Replace string[] with int[] for dimensions,2015-12-11T11:45:16Z
13ff87fd12881520f086e30feab0c6fb0f0d3d89,"Merge pull request #2379 from metamx/fix2378

Allow ScalingStats to be null",2016-02-03T02:45:03Z
a0728fa8544488762715ed1ddda525469f0f90c5,"Allow ScalingStats to be null
* Fixes #2378",2016-02-03T02:00:38Z
b90cee5d0d92d5dc16161373947c588451778cd7,"Merge pull request #2375 from metamx/moreLog4jChecks

Add check for log4j-core in Log4jShutterDownerModule",2016-02-03T01:06:50Z
3a26b3926c81e35d7b2fdbf834058f0f7570cc5e,Identify druid.io as committer in pom.xml,2016-02-03T01:01:58Z
5111fd52f2eade90f52c26d7b7b87b7882ac26c5,Add check for log4j-core in Log4jShutterDownerModule,2016-02-02T23:48:06Z
57a3d97837f2e614dec1b875ca4111bb37852a4f,"Merge pull request #2371 from metamx/fix-2335

remove convertProperties",2016-02-02T19:13:32Z
ffbe923fb5af2795726e450ae74580facfff3ace,"remove convertProperties

fixes https://github.com/druid-io/druid/issues/2335",2016-02-02T18:13:50Z
dc89cdd0f943f5a3af6ed207fa63900897661755,"Merge pull request #2336 from himanshug/fix_2331

limit size of X-Druid-Response-Context header to 7K",2016-02-02T18:06:59Z
9de57eb1c8fc27b5ad5fe2dd58d0ed48a2a74cdc,Added documentation,2016-02-02T13:32:12Z
3294f33838de74b4dfc3ee646c222398a41ae28c,Added support to use Rackspace's cloudfiles as static firehose,2016-02-01T15:21:55Z
377e3583f85fc125827f6181b53ba875a1998aec,"Merge pull request #2222 from binlijin/topN_optimize

optimize topn on particular situation",2016-02-02T06:55:34Z
a5ef30ff84ad6931f2e744658e48f1803ffbd67e,optimize topn on particular situation,2016-02-02T06:20:09Z
2307500b45ce422927d777aa60cbb0d4d7370b29,"Merge pull request #2365 from metabase/master

Add Metabase to libraries",2016-02-01T20:03:52Z
ee2a0e4afaeb5835b1f857e089629cbac4544f31,Update libraries.md,2016-02-01T19:47:50Z
459c2a49ca6b6465961a8a6b0cd97ec9fc3bbe3c,"Merge pull request #2364 from metamx/fix2356

Add more docs around timezone handling",2016-02-01T18:58:15Z
dcc6a975ff229f915004f803a8ec8c0764d1983b,"Merge pull request #2363 from jaebinyo/master

Fixed the broken link in the doc (other-hadoop.html)",2016-02-01T18:38:14Z
c9393e52890ff256b4a9493ca63265aa6fc721e1,"Add more docs around timezone handling
* Fixes #2356",2016-02-01T16:51:07Z
67b655645797509d7d5282c01be4d4adee534c95,"Merge pull request #2361 from pjain1/tasklife_test_refactor

clean up TaskLifecycleTest",2016-02-01T11:26:34Z
66a74a2b88475c339a4515ada90b990af6003be1,Fixed the broken link,2016-02-01T09:07:24Z
bbfb8aa7ddac934083375a49e34116bc5320eff8,"Merge pull request #2358 from druid-io/addCommunityExtensions

Add Community Extensions",2016-02-01T01:45:11Z
616a882e22307afd39bf85cb60505f268eadd1be,"Merge pull request #2360 from erikdubbelboer/duplicatedoc

Remove duplicate doc section",2016-02-01T01:44:53Z
9c816c3ec7cca957d1e95980c57931a281f8d361,"Merge pull request #2359 from erikdubbelboer/removecomment

Remove incorrect comment.",2016-02-01T01:43:58Z
7853a9cc414b78d088405f455c12a402fe7165fa,clean up TaskLifecycleTest,2016-01-31T02:44:07Z
246473c58a9b1906a042217fc101afac805bccee,Remove duplicate doc section,2016-01-30T13:50:32Z
f72b6134999651cc00b3689b68c7d16148e19d2c,"Remove incorrect comment.

The CloudFilesDataSegmentPuller can't handle URI data pulls.
This comment was obviously copied from the s3 module and never removed.",2016-01-30T11:02:44Z
5ec5c7221b1f588be7d25596444662fabb8325a5,"Add Community Extensions

Add a ""Community Extensions"" section to the known libraries",2016-01-29T21:09:15Z
6c8a024b84fbff79fe12778252b9208bbc6a2e5a,"Merge pull request #2357 from gianm/restorestuff

Fix NPE caused by stopping a RealtimeIndexTask before firehose connects",2016-01-29T20:34:21Z
5fd4b79373c271267050b66fcd0088a8add9f609,RealtimeIndexTask: Fix NPE caused by calling stopGracefully before a firehose had been connected.,2016-01-29T19:20:23Z
c4fde52160773dca18bad002589957880b0aeeb3,Fix 'graceful shutdown aborted' log message in ThreadPoolTaskRunner.,2016-01-29T19:07:07Z
867d6e84b3a7b335aeb1a04c5419abd36be84919,"Merge pull request #2352 from navis/port-conflict-in-test

AsyncQueryForwardingServletTest#testDeleteBroadcast sometimes fails by port conflict",2016-01-29T18:32:55Z
728055f0ebacbbfe90c12356cece08d7ff020620,"Merge pull request #2353 from bjozet/doc-fixes

DOCs: Missing 'type' for leaveIntermediate",2016-01-29T17:24:16Z
93c50d85385eb1969fc29b5dd20f15edfc9f3339,"Merge pull request #2094 from navis/simplify-index-merge

Simplifying dimension merging",2016-01-29T17:23:14Z
6227f2f9ae3ff728f26852935c878394ec64b0eb,"Merge pull request #2271 from navis/descending-for-select-query

time-descending result of select queries",2016-01-29T17:12:08Z
d373573c25163fc6c332783bc1cd149c455c1e26,"DOCs: Missing 'type' for leaveIntermediate

Added missing 'Boolean' as type for leaveIntermediate row in table TuningConfig",2016-01-29T13:42:19Z
c03918f89aaa2c8669f29a6930dd1498933c9655,AsyncQueryForwardingServletTest#testDeleteBroadcast sometimes fails by port conflict,2016-01-29T10:28:58Z
55a888ea2f981018efd69e2a0eb31d5cad0c4ede,time-descending result of select queries,2016-01-15T07:23:07Z
dd774ef4dde3b4bb1c917c158b5a6696aed4d456,one-pass merging of dictionary & index,2015-12-15T09:38:19Z
edd7ce58aa7aed6b0c81146e19121ce9392b9515,"Merge pull request #2348 from AlexanderSaydakov/fix-aggregator-test-helper

fixed createIndex",2016-01-28T22:01:36Z
ef8e78ca98efe18c7b5e4e6a0653a8cec0419f7c,"Merge pull request #2346 from himanshug/fix_bug

Fixes bug in kill task scheduling DruidCoordinatorSegmentKiller.findIntervalForKillTask()",2016-01-28T21:26:26Z
e0860661b116718ba89b714d6218232f1bd6aa0d,fixed createIndex,2016-01-28T21:20:50Z
f6b4dbd6975d3378266a07da07d00abfbcbf15c9,bug fix and unit tests for DruidCoordinatorSegmentKiller,2016-01-27T18:43:23Z
ab3edfa8fc500dc0eb8683f576880fa80cd53e20,moving DruidCoordinatorSegmentKiller class out of DruidCoordinator,2016-01-27T16:27:24Z
99017f45188b1a3f655b5ddc08a4b5004c58e3f1,"Merge pull request #2326 from navis/use-reverse-iterator

use reverse-iterator if possible",2016-01-28T14:18:38Z
3880f54b87ebc5b8c0ab7a276e00d70b33384517,"Merge pull request #2332 from himanshug/configurable_partial

make populateUncoveredIntervals a configuration in query context",2016-01-28T05:04:35Z
7324ece8f9d9095b83effcf3cd9bf66712ec9e38,use reverse-iterator if possible,2016-01-25T08:11:17Z
a7bde8f4da63b78004d7c6d04757d2683ca0a869,limit size of X-Druid-Response-Context header to 7K due to https://github.com/druid-io/druid/issues/2331,2016-01-26T21:30:47Z
5a3642bb93a1bedaf93bdee047382fa198cb6f59,"Merge pull request #2247 from metamx/pedanticBuild

Enable strict building in travis",2016-01-27T18:27:03Z
e3d1e07b34dfc57b881d5d921aa069815aac9111,"Merge pull request #2261 from metamx/improve-segment-ordering

Prioritize loading of segments based on segment interval",2016-01-27T18:05:54Z
2e5004095a419e73e358a06651ec8b2699ebb476,"Merge pull request #2341 from gianm/smq-test

SegmentMetadataQuery: Fix merging of ColumnAnalysis errors.",2016-01-27T17:37:06Z
25630c7ebb9cbd0ff2604f30c411c268fcb4b65e,"Merge pull request #2344 from metamx/testVersionedTimelineReturnsEmpty

Add missing timeline test for VersionedIntervalTimelineTest",2016-01-27T17:31:59Z
71dbe5c0f05a7ed0f9eb10f2b13104f2ffb65aa3,Enable pedantic checks during travis build,2016-01-12T22:45:35Z
508734c8b028ade5d3b366d072ae9bee3cd28078,Long constant reformatting in tests `l` --> `L`,2016-01-11T23:26:39Z
4282eac06737e21243d0657964d31c4e5b443ebd,Add missing timeline test for VersionedIntervalTimelineTest,2016-01-27T16:49:08Z
abf2f457b12dcb128ebc437d7b8cc5a3e37c20a5,"Merge pull request #2343 from gianm/fix-lookups

Fix a couple of problems with lookups",2016-01-27T16:34:11Z
fd6bf3fe22a7e138eb722187a5b74f35e783a00f,"Use interval comparator instead of bucketMonthComparator

fix when two segments have same interval

review comments",2016-01-13T16:00:41Z
b1e6c017625d1102c900afadbc57657e63aa43ac,"Make LookupExtractor abstract methods public, they have to work across classloaders.",2016-01-27T07:02:53Z
cac4651da07c0994754d32a1d2645e04067498c7,Fix spelling of 'dimReverseExtractionNamespace'.,2016-01-27T05:50:40Z
795343f7efdc0e552c63a9956956e876312b16e5,"SegmentMetadataQuery: Fix merging of ColumnAnalysis errors.

Also add tests for:
- ColumnAnalysis folding
- Mixed mmap/incremental merging",2016-01-26T23:58:47Z
cac675351ed18a7fd9093b6b496e35e58d5d781a,"Merge pull request #2340 from himanshug/data_src_input_no_segments

add ignoreWhenNoSegments flag to optionally ignore no segments error",2016-01-27T00:45:13Z
b3437825f00f8d920281f3fe7373da10786c69c5,add ignoreWhenNoSegments flag to optionally ignore the dataSource inputSpec when no segments were found,2016-01-26T23:00:12Z
3719b6e3c8e57b55847f230952230d8201d4c614,make populateUncoveredIntervals a configuration in query context,2016-01-25T20:09:16Z
3844658fb593a055fd15f55ba7ce6b9ff92d53ba,"Merge pull request #2323 from druid-io/update-druidapi

Update druid-api to 0.3.16",2016-01-26T19:02:10Z
8f7d062add554da98608d520c7eb85d75fcc2296,"Merge pull request #2334 from guobingkun/fix_doc

[fix doc]: Coordinator druid.coordinator.merge.on triggers an Append Task",2016-01-26T17:46:26Z
b07db4089cbcf2d7105bebadfb8ca66648711ec7,fix doc: Setting druid.coordinator.merge.on will trigger an Append Task instead of Merge Task.,2016-01-26T16:19:20Z
1b2a56828517bad8f6d195a591694133ef4c2c5f,"Merge pull request #2327 from abbondanza/master

Updates number of parts in a topN query",2016-01-25T18:12:47Z
145c65c72d5a036be98b7b816b88e7b5ee55546c,"Updates number of parts in a topN query

This threw me off a bit, so I'm sure it may throw others off, too.
Updating from 10 to 11 parts.",2016-01-25T15:29:25Z
41730b96d4546927fccfb8e84abbea8cdfef0c43,Fix for issue 2021,2016-01-24T21:18:22Z
fc32e34e1e320701707b56dc9b626225bea66f3e,"Merge pull request #2324 from himanshug/ut

unit test: adding single threaded indexing and querying test for IncrementalIndex",2016-01-23T23:25:41Z
09d367866736cc67d0015d606e184ad534061197,adding single threaded indexing and querying test for IncrementalIndex,2016-01-23T04:54:01Z
0000b9fc626bec17bac83d8b72a594715bfa89ce,"Remove sorting in ProtoBufInputRowParserTest
Due to processing/src/test/java/io/druid/data/input/ProtoBufInputRowParserTest.java",2016-01-23T00:02:25Z
e941303bc6c99b27f68d2c3c75af5bff3f095669,"Remove sorting of dimensions in AvroStreamInputRowParserTest
Due to https://github.com/druid-io/druid-api/pull/68",2016-01-23T00:01:41Z
937ae6ad204a5d328e7db817787a46786677accd,"Update druid-api to 0.3.16

Fixes https://github.com/druid-io/druid/issues/2316",2016-01-22T22:37:16Z
073c101d723a869ff3ccc0f03a09c0f0fb1e88f7,"Merge pull request #2322 from himanshug/fix_regression

fixing regressions",2016-01-22T20:52:50Z
7a6109f0ca05d2543ddc2d2e16131cfe9991c44f,"Merge pull request #2321 from gianm/pending-index

Replace two-column index on pendingSegments table with one-column index.",2016-01-22T19:38:15Z
dccf6366762a83a752f590a0b269aaf0c8993f58,adding null aggregators and false hasMultipleValues to expected results of segment metadata query,2016-01-22T17:34:22Z
2f7f5119cf939d1d4a03e804c901ad9f4ca765d7,older segments might not have field bitmapSerdeFactory for dimension columns and we must use appropriate default,2016-01-22T16:18:10Z
789b35a108f7159ba8e78528733ecf79cbd11b00,"Merge pull request #2264 from himank/CustomExceptionMapper

Adding custom mapper for json processing exception",2016-01-22T19:09:18Z
0bd9bff0752759abdd3db63cf6878c3a7b303e6a,"Replace two-column index on pendingSegments table with one-column index.

Fixes #2319.",2016-01-22T16:19:34Z
1a5d4e714cf696e9c273d8fd8a6c197bba700d92,Adding custom mapper for json processing exception to return bad request instead of 500,2016-01-14T02:00:35Z
df814247b96d443eb81ed8b9576de130090df17f,"Merge pull request #2318 from binlijin/rename_persistBackgroundCount

rename persistBackgroundCount to numBackgroundPersistThreads",2016-01-22T07:24:35Z
cd1c71ceb4044b42bf252990873aff4994b0b58e,rename persistBackgroundCount to numBackgroundPersistThreads,2016-01-22T06:29:41Z
1d1f4d996df36c71f4f4851796049fbde27ea8cf,"Merge pull request #2111 from binlijin/optimize-create-inverted-indexes

optimize create inverted indexes",2016-01-22T03:36:27Z
f03b65480fd84495045120204ef6e08731b838bb,"Merge pull request #2295 from gianm/segment-metadata-query-query-metadata

SegmentMetadataQuery support for returning aggregators.",2016-01-22T03:12:46Z
55f7dd4629b254301f0ade6552635e468c6c7d0d,optimize create inverted indexes,2016-01-22T02:40:09Z
d416279c141ee24873f4959846789235d9b8517e,SegmentMetadataQuery support for returning aggregators.,2016-01-20T01:05:46Z
5a9cd890596360c8dd87279fd66e14a0730b575b,"Merge pull request #2305 from gianm/segment-metadata-query-multivalues

Add StorageAdapter#getColumnTypeName, and various SegmentMetadataQuery adjustments",2016-01-22T01:22:34Z
e5913be90e14d6953d6064afad5660ca11b6fec7,"Merge pull request #2257 from tubemogul/index-merge-bug

Adds support for empty merge metrics. fixes #2256",2016-01-22T00:38:00Z
87c8046c6c0ef0a4baf96d6d0c543b498bba376e,"Add StorageAdapter#getColumnTypeName, and various SegmentMetadataQuery adjustments.

SegmentMetadataQuery stuff:

- Simplify implementation of SegmentAnalyzer.
- Fix type names for realtime complex columns; this used to try to merge a nice type
  name (like ""hyperUnique"") from mmapped segments with the word ""COMPLEX"" from incremental
  index segments, leading to a merge failure. Now it always uses the nice name.
- Add hasMultipleValues to ColumnAnalysis.
- Add tests for both mmapped and incremental index segments.
- Update docs to include errorMessage.",2016-01-20T19:39:53Z
3f998117a6ed90fb92741aff421de391ab342dc2,"Merge pull request #2306 from jon-wei/inherit2

More specific null/empty str handling in IndexMerger",2016-01-21T22:36:09Z
1e44445f06ec799beed0b81c2cfe3994d9b4c5ee,Adds support for empty merge metrics. fixes #2256,2016-01-12T16:54:28Z
459a2360678235132ae9e223b349e8c980e0f847,More specific null/empty str handling in IndexMerger,2016-01-20T10:55:24Z
a752bc064ec755237b5b61efb577b8eca89aa619,"Merge pull request #1978 from b-slim/graphite_emitter

 Graphite emitter",2016-01-21T20:22:35Z
e0d90f875c443217c2e3c8b3453e01299662804d, Graphite emitter,2016-01-20T16:49:55Z
ab635c5cd35ed87159f3a83c91caa9e34df6da25,"Merge pull request #2315 from rasahner/docUpdateBuild

docs: edits related to loadList",2016-01-21T17:52:27Z
c9368702fa3fac37f8a1bc00b44f068cb46bc0bb,do some editing of the instructions for using mysql for metadata,2016-01-21T02:46:26Z
04d30543538deac2b6fb5263b66d04e6e0522966,"Merge pull request #2303 from CHOIJAEHONG1/localfirehouse-basedir-npe

Throw an IAE when baseDir is null in LocalFireHose",2016-01-21T15:58:52Z
201539260c4d111530c0699f6bf0a799a68f1472,"Merge pull request #2076 from b-slim/issue_2010_upper_lower_extractionFN

adding lower and upper extraction fn",2016-01-21T15:58:07Z
78feb3a13e002b91df21e80c5b07ede0b58a65f2,adding lower and upper extraction fn,2016-01-20T20:39:51Z
dcb7830330aeac77150bbc4bc7edf871b38fe9f1,"Merge pull request #984 from drcrallen/thread-priority-rebase

Use thread priorities. (aka set `nice` values for background-like tasks)",2016-01-21T09:32:34Z
500c11a35a968b4c6d2c8011c92f2b4ae0fc6676,"Merge pull request #2311 from metamx/commentsIn2309

Minor field name change in RemoteTaskRunnerFactory to be more descriptive",2016-01-21T03:27:49Z
66e74b1a6380fe573b9d742f67c67e4f02b56771,"Minor field name change in RemoteTaskRunnerFactory to be more descriptive
* Addresses https://github.com/druid-io/druid/pull/2309#discussion_r50335081",2016-01-21T01:41:50Z
5a932d28c14b0b968c72979986738a8c692c3a60,"Merge pull request #2288 from tubemogul/index-merge-bug2

Null check in IncrementalIndexAdapter.getDimValueLookup()",2016-01-21T01:07:15Z
2a69a58570b32ecf7b7e73c050263b9cc679ea01,"Merge pull request #2149 from binlijin/master

Do persist IncrementalIndex in another thread in IndexGeneratorReducer",2016-01-21T01:06:42Z
067baf10f2e0b7a5aa7bf91d3c32f5dcc069026b,"Merge pull request #2310 from metamx/testFor2308

Add basic tests to some CliXXX classes",2016-01-21T01:00:06Z
996c1173c6e196658aa0818e5b8ad5d9791923d2,"Merge pull request #2223 from navis/besteffort-split-locations

Best effort to find locations for input splits",2016-01-21T00:53:43Z
eddc18ecf2e5cb53391f4f7cc327aea95eab35a2,Add basic tests to some CliXXX classes,2016-01-21T00:18:40Z
551d08da2a03c6bdfa752ef3289aecef2aaed8b8,"Merge pull request #2309 from metamx/fix2308

Fix overlord scheduled executor injection",2016-01-21T00:04:57Z
3152d08844678d0248e296cad6f3637931ee284d,"Fix overlord scheduled executor injection
* Fixes https://github.com/druid-io/druid/issues/2308",2016-01-20T22:15:24Z
2e1d6aaf3d79de5d8dbee29e3ede61d510fa1cd3,"Use thread priorities. (aka set `nice` values for background-like tasks)

 * Defaults the thread priority to java.util.Thread.NORM_PRIORITY in io.druid.indexing.common.task.AbstractTask
 * Each exec service has its own Task Factory which is assigned a priority for spawned task. Therefore each priority class has a unique exec service
 * Added priority to tasks as taskPriority in the task context. <0 means low, 0 means take default, >0 means high. It is up to any particular implementation to determine how to handle these numbers
 * Add options to ForkingTaskRunner
    * Add ""-XX:+UseThreadPriorities"" default option
    * Add ""-XX:ThreadPriorityPolicy=42"" default option
 * AbstractTask - Removed unneded @JsonIgnore on priority
 * Added priority to RealtimePlumber executors. All sub-executors (non query runners) get Thread.MIN_PRIORITY
 * Add persistThreadPriority and mergeThreadPriority to realtime tuning config",2014-11-04T04:53:55Z
0c5f4b947cbae17d3d89b17adf08245bf2988443,"Merge pull request #2301 from metamx/fix-2299_2

fix reference counting for segments",2016-01-20T19:21:35Z
61aca6f9cc8c5a9828128d6947d5df163bf89a27,"remove wrong checks

sink never have null hydrants and hydrants never have null adapters",2016-01-20T18:13:53Z
695f107870f1ebd2b86d63e970be2621cc6117bd,"Merge pull request #2302 from metamx/lowerCaseGranPathTest

Make GranularityPathSpecTest check with lower-case enums",2016-01-20T17:18:06Z
6f4dfbc8d12c24ba10570a3d0f06728a9b22fcb0,"Merge pull request #2296 from loganlinn/loganlinn-dataGranularity-type-doc

Update batch-ingestion.md",2016-01-20T16:58:49Z
ac6c90e657d8722e6e800c6e3c115f60ce2cf999,"Merge pull request #1953 from metamx/taskRunnerResourceManagement

Move resource managemnt to be the responsibility of the TaskRunner",2016-01-20T16:57:47Z
3c5ca3a5f2f022d2c0bbc26c305befc5769cebb0,Make GranularityPathSpecTest check with lower-case enums,2016-01-20T16:35:13Z
7132428bbaea0b86a971182ae17ed84a630d5f96,throw IAE when baseDir is null in LocalFireHose,2016-01-20T16:27:32Z
59ea186af7a539cdf6a203abaf912649c7ef41f6,fix reference counting for segments,2016-01-20T11:54:21Z
50ceec78a2ccc73f7a742660d1607d665a33be83,null check in IncrementalIndexAdapter.getDimValueLookup(),2016-01-19T09:03:44Z
fc0992950326e727e2f586a7594ec661c9e40627,"Merge pull request #2293 from jon-wei/index_merger_test_fix

Consolidate IndexMergerTest and IndexMergerV9Test",2016-01-20T01:42:11Z
c3bdaefe1fa75a6982c825c6dbcc4121dc061937,"Update batch-ingestion.md

Fix documented type of the `dataGranularity` config",2016-01-20T01:20:47Z
8e43e2c4460710158f3ed61ea2794282a1223d5f,Do persist IncrementalIndex in another thread in IndexGeneratorReducer,2016-01-20T01:20:09Z
bc1e9b27c80d3732d881b991cdc4a2a3119045e3,Consolidate IndexMergerTest and IndexMergerV9Test,2016-01-20T00:28:35Z
cb8f714f828145c1021b64a44545cb1af7b23fd6,"Merge pull request #2006 from jon-wei/inherit_dim_order

Preserve dimension order across indexes during ingestion",2016-01-19T23:20:15Z
747343e6212e0c8581e2f0ce7cd6a928fb2241e6,Preserve dimension order across indexes during ingestion,2016-01-19T21:34:11Z
df2906a91cc37c3d452a7ede9b64594cf40527b8,"Merge pull request #2290 from gianm/index-merger-v9-stuff

Respect buildV9Directly in PlumberSchools, so it works on standalone realtime.",2016-01-19T21:04:00Z
0c31f007fc2de7875932153c61288de07d1ccb6d,"Merge pull request #1728 from himanshug/aggregators_in_segment_metadata

Store AggregatorFactory[] in segment metadata",2016-01-19T20:55:49Z
fe841fd96174301dfbf2d49d293ba04764a1acf4,"Merge pull request #2118 from guobingkun/fix_segment_loading

Fix loading segment for historical",2016-01-19T20:25:48Z
a99aef29a1b0f811a9ce3c4ddacea486df0f4dee,adding aggregators to segment metadata,2015-11-06T04:52:10Z
1dcf22edb7fe294c0144d2d95f5b952cfa1a3225,"Respect buildV9Directly in PlumberSchools, so it works on standalone realtime nodes.

Also parameterize some tests to run with/without buildV9Directly:

- IndexGeneratorJobTest
- RealtimeIndexTaskTest
- RealtimePlumberSchoolTest",2016-01-19T20:15:06Z
1b359d6a47451603b92ca283ddfeff75de82dbb2,"Merge pull request #2285 from fjy/stringformat

fixed #1873, add ability to express CONCAT as an extractionFn",2016-01-19T19:23:12Z
c4ad50f92c25f9af06dbb9f9278012f62b4147b8,"Fix loading segment for historical
Historical will drop a segment that shouldn't be dropped in the following scenario:
Historical node tried to load segmentA, but failed with SegmentLoadingException,
then ZkCoordinator called removeSegment(segmentA, blah) to schedule a runnable that would drop segmentA by deleting its files. Now, before that runnable executed, another LOAD request was sent to this historical, this time historical actually succeeded on loading segmentA and announced it. But later on, the scheduled drop-of-segment runnable started executing and removed the segment files, while historical is still announcing segmentA.",2015-12-17T21:26:32Z
a2e327ed08a207c8146ecee52b70e96a8c5dc035,"Merge pull request #2275 from himanshug/local_segment_killer_fix

kill unwanted parent directories when a segment is deleted from LocalDataSegmentKiller",2016-01-19T06:54:01Z
52eb0f04a727b524096c69c1b22a9d619ad0f2d7,adding a new method getMergingFactory(..) to AggregatorFactory,2015-09-18T17:17:06Z
77fc86c015b03d621bc18b39101662e304aac8d0,making AggregatorFactory abstract class,2015-09-18T17:09:25Z
164b0aad7a4a5e281098d0c4799a5eb5b1e32e84,"removing Map<String,Object> segmentMetadata from methods in Index[Maker/Merger] and using Metadata class
instead of a Map to store segment metadata",2015-11-02T05:03:55Z
dcd3a24f595f308e8dfac09f122d2773edddfc78,adding log line for segment being killed in HdfsDataSegmentKiller,2016-01-15T21:10:16Z
637d2605e7acb2e25c0426a12fef5c09b21b0215,kill unwanted parent directories when a segment is deleted from LocalDataSegmentKiller,2016-01-15T18:11:50Z
3459a202ce751cb60884519ef902e35280550895,"fixed #1873, add ability to express CONCAT as an extractionFn",2015-11-20T02:10:38Z
592638f6b300c0e0d68e4fc14abe5a1855c6b79a,"Merge pull request #2209 from sirpkt/cascade_extraction_functions

support cascade execution of extraction filters in extraction dimension spec",2016-01-18T15:59:36Z
3f4cd22820566a6996524ba733ea2a91eee8a931,"Merge pull request #2281 from gianm/zk-346

ZooKeeper 3.4.7 was unreleased, revert to 3.4.6.",2016-01-18T15:57:24Z
da5d7b93769124f6e65d9332dcce020163449614,Reformat code according to Druid Java and Scala style,2016-01-18T08:37:03Z
42ee473052c1bd390b78f60843ebe195c05dc80c,"ZooKeeper 3.4.7 was unreleased, revert to 3.4.6.",2016-01-18T05:31:29Z
238dd3be3c1973ed27eeb10adcebefa17605429f,support cascade execution of extraction filters in extraction dimension spec,2016-01-06T08:15:08Z
b3dcc04d9e6e7c624183f101994d77c766b8f64b,"Merge pull request #2279 from gianm/multitenant-docs

Some more multitenancy docs",2016-01-18T01:57:41Z
2d3f6e7705844958aacebebf79bc990a2c57c7b1,Some more multitenancy docs,2016-01-18T01:47:49Z
f03f7fb625ab5e15131f6a6b59ea86ee6999cd03,Best effort to find locations for input splits,2016-01-07T08:20:10Z
71f1cd5e34a76bfc24803f742c1452b25536d8a7,Fix for issue 2021,2016-01-17T10:40:04Z
f6a1a4ae20911792c001889ff75af639d7736241,"Merge pull request #2138 from KurtYoung/feature-build-v9

build v9 directly",2016-01-16T19:35:46Z
82ff98c2bfa46163660a1a418f34db45bbca9f6b,add config for build v9 directly and update docs,2016-01-13T06:06:35Z
1f2168fae5ce590efab0621069f92f99615a16f0,"add IndexMergerV9

add unit tests for IndexMergerV9 and fix some bugs

add more unit tests and fix bugs

handle null values and add more tests

minor changes & use LoggingProgressIndicator in IndexGeneratorReducer

make some static class public from IndexMerger

minor changes and add some comments

changes for comments",2015-12-24T05:56:41Z
bb50d2a2b2d946b36bd29aae214d3259869e9971,add some streaming writers,2015-12-22T04:15:29Z
2e54553a8f3b1a378d0a370f12b76989cbaf0710,"Merge pull request #1990 from himanshug/schedule_kill_task

support periodic hard delete of segments",2016-01-15T21:22:33Z
7c65880e554b7f4cd41549026f07d26065311ebc,"Merge pull request #2270 from rasahner/warnOfChatHandlerNoop

if chathandler is noop, log using warn instead of info",2016-01-15T20:29:27Z
6ec6835b5d8accaf902762bf2e78af5a60d99983,Fix for issue 2021.,2016-01-15T19:28:33Z
34cd8f8c7245aabb4069c4cfb5f3cade40c2f2ad,"Merge pull request #2258 from fjy/acl-zk

acl for zookeeper is added",2016-01-15T17:27:08Z
e4d15f3729dc4d9641540c673fbfda5718a49d65,"Merge pull request #2133 from navis/log4j-shudown-callback

callbacks registered to Log4jShutdown is not executed when stop is called",2016-01-15T12:28:46Z
a54c72672614a25c326b3f84d3800ec1d8708ff7,"Merge pull request #2266 from anubhgup/fix-announce

Fix loss in segment announcements when segments do not fit in zNode",2016-01-15T01:10:43Z
e0932ba1c2447b18d38cb2a2d5f04ee7d1af347c,"Merge pull request #2267 from himanshug/fix_topn_multi_val_filter

Remap id's returned in XXXFilteredDimensionSpec.getRow() as per reduced cardinality",2016-01-15T01:06:54Z
7704699b4068c0febc924b03100cbe02aa6cabc1,"Merge pull request #2265 from navis/strlen-dimension-ignored

Strlen sort spec ignores dimension",2016-01-15T01:06:33Z
dc1a62c3d9a6c86eacc742bf538d2f9a8497c775,"Merge pull request #2248 from metamx/druidNodeHashEquals

Add hashCode and equals to DruidNode",2016-01-15T00:04:58Z
6d09ab839fd8c4b3081e73d173228b5a461d25ce,"Fix for loss in segment announcements when segments do not fit in the znodes during compress mode.

Added unit test (from Navis).",2016-01-14T03:17:51Z
7361cd173f97b9529d7b5dba3cfab6887a43c0c5,"if chathandler is noop, log using warn instead of info",2016-01-14T16:12:42Z
ae6a111444bf3739fef992cae224ad3eca81c6ee,fix XXXFilteredDimensionSpec to remap the dictionary encodings as per new cardinality,2016-01-14T03:56:58Z
a3140b25484ab6b9bf4ef714c7a6179c6afb765e,fix topN filtering on multi-valued dimension bug,2016-01-12T08:32:41Z
ea9fabdf2ff3f38819075135c756925a7844c6ea,Strlen sort spec ignores dimension,2016-01-14T02:05:44Z
1908d63162036f1f937abe7bac1667e826f7823b,acl for zookeeper is added,2015-12-24T15:12:47Z
4c014c1574d461f01d3e7ed0bfc5db1a52d262ba,"Merge pull request #2228 from metamx/incremental-index-mem2

Improve heap usage for IncrementalIndex",2016-01-13T22:48:03Z
976d4c965bd81b37d3abbc7535abbb31afd06cef,Move resource managemnt to be the responsibility of the TaskRunner,2015-11-11T20:16:03Z
dfc631c2d08d6fe21b52563f4e260c268191b237,"Merge pull request #2014 from navis/DRUID-2013

Support descending time ordering for time series query",2016-01-13T06:47:24Z
18479bb757029c4878211da3a2297fd68c8c158b,time-descending result of timeseries queries,2015-12-14T01:29:05Z
d7ad93debc4c8424883fadf91f64fb7f252c41b1,"Merge pull request #2221 from binlijin/topN_minTopNThreshold

Allow change minTopNThreshold per topN query",2016-01-13T00:22:20Z
eb2d251ac84e32815b836f8f71bd5b0cbe131aac,support periodic hard delete of segments,2015-11-19T06:11:34Z
4863e2ca4f8ccdf60e69721f95b5455d07baadd9,"cache metric selectors instead of creating new ones for every metric in each row

clear selectors on close.

Add comments about thread safety.",2016-01-07T16:41:16Z
01a0715ee29b4d819a0518769afe170e741ddc2e,"Merge pull request #2161 from metamx/query-metrics-timeout

Fix Query metrics for query timeout",2016-01-12T15:50:40Z
0b627dde718df67488cf56790037baa54a8933b0,"Revert adding synchronized to swapRequest method as the caller method onWaitEnd(), is only invoked in synchronized code blocks. There is no need to repeat sync it even if java's synchronized keyword holds a reentrant mutex semantic ^_^.",2016-01-12T11:33:39Z
03cdf3a8fe02dcddce76debd8b1213fc138b1626,Update license text in pom.xml,2016-01-12T10:11:58Z
dc47e809243289f3d77adc73c3c311973897f5ae,"1. Add newline to pom.xml
2. Change RocketMQ to rocketMQ
3. Make swapRequests methods synchronized in all places.
4. Make comparator static and final and use Long.compare.",2016-01-12T10:03:16Z
9073e79a2345100771548a340ecae7e5b554b587,"Merge pull request #2245 from guobingkun/debug_to_info

change log level to info for ITKafkaTest",2016-01-12T06:30:24Z
dfe6abb7213d3d151c015c3918da28121b79fbdd,"Merge pull request #2250 from himanshug/agg_test_helper_fix

remove redundant registering of json modules in AggregationTestHelper",2016-01-12T06:12:00Z
ef3cddabe99c9ae6c0a317a8ae6586e62e9f7b5f,adding UTs for DruidCoordinatorConfig,2015-12-28T22:07:16Z
2751f785f8fb6bdc9a7202605b1814a0d63e3c5d,add doc,2016-01-12T03:25:11Z
419fa5adaf128fd6b799e0e0dc88fee42d597cf0,"Merge pull request #2169 from navis/refactor-incremental-index3

Simplify information in IncrementalIndex",2016-01-12T02:17:39Z
976ebc45c08f4a2bdbe6f6752c04b391f136ba11,Simplify information in IncrementalIndex,2015-12-29T04:39:37Z
b973604bf8039d6e710863d5e9abb57e902ea914,remove redundant registering of json modules in AggregationTestHelper,2016-01-12T01:03:22Z
b0e04a9162d9c2455bd61ceee1297c11afacfe81,Add hashCode and equals to DruidNode,2016-01-11T22:36:20Z
36ca5b170356f36774c5a8f2e48abb7d6544091f,change log level to info for ITKafkaTest,2016-01-11T21:34:37Z
8d1686039a0d0fd0042e2f43956abb676910ed84,"Merge pull request #1830 from metamx/peonDaemonChecker

Check for non-daemon threads when CliPeon exits",2016-01-11T18:48:52Z
fafc7c07bac651a615edbaa859b14043c7a3f9d4,"Merge pull request #2238 from rasahner/docServerviewEndpoint

doc: add information about new serverview coordinator endpoint",2016-01-11T18:44:18Z
ea623e43d2a8fadf517ad84456bc31c05d7601c2,"Merge pull request #2240 from metamx/fix-load-rule

Fix loadRule when one of the tiers had no available servers",2016-01-11T18:05:31Z
32bc2f776ec28f4967ec9c40226b76839195b2bc,"Fix loadRule when one of the tiers had no servers

When one of the tiers have no servers, LoadRule should ignore that tier
and continue to load/drop segments in other available tiers.

the bug also causes whacky behavior with LoadRule with non existent
tier where the segment balancer keeps on moving segments to other nodes
in existing tiers but the extra segment copies are never dropped
eventually leading to all the tiers getting full .",2016-01-11T10:23:14Z
abe134bef699c0f301dfbf862cca57eb8c7ba59a,Fix typo,2016-01-11T03:50:19Z
3d46356dc9763aebf09ab1ad9ba8ba27b70c291d,Update code on PR comments,2016-01-11T03:38:32Z
c1b813011c4301b8d3d82500c29b0d1bbff222e4,doc: add information about new serverview coordinator endpoint,2016-01-11T01:47:23Z
1b162a67ffdece84484e2203fb52c1103c1de772,"Merge pull request #2235 from druid-io/updateCommonsIO

Update commons-io to 2.4",2016-01-10T16:48:25Z
cea4bff50bd50178400dac27efe347fe18e78288,"Merge pull request #2236 from pdeva/patch-8

Updated log4j version",2016-01-09T19:44:54Z
62aa8fec94c7d2cd3aa5123a2aa0640ff1c86bf9,Updated log4j version,2016-01-09T18:45:40Z
c1abcc3ef9c4bbc24cdaacad62a868f3c8c74ac2,"Update commons-io to 2.4

Hadoop2.3.0 uses version  2.4 as per http://central.maven.org/maven2/org/apache/hadoop/hadoop-project/2.3.0/hadoop-project-2.3.0.pom",2016-01-09T05:39:50Z
6f174f01caab3ad3d16b86707b69eef15dca5026,"Merge pull request #2233 from metamx/rename-for-consistency

fix casing to be consistent with other classes",2016-01-08T20:40:14Z
d255f4baac56fc9427a2e67760231870ed5d02ed,"Merge pull request #2234 from pjain1/emit_realtime_metrics

emit handoff count metrics",2016-01-08T20:24:16Z
0d12e7024bd4908bcb33be9ec39dcc5344dc5935,"Merge pull request #2229 from metamx/improveTimeoutsJDBC

[WIP] Make timeouts more explicit on what is failing in JDBCExtractionNamespaceTest",2016-01-08T18:36:46Z
9dba0f67e7002a65534619f74d9f026eb9d21071,emit handoff count metrics,2016-01-08T18:22:07Z
46a7f2660d9d37fce9dce733f77934731f07f0db,fix casing to be consistent with other classes,2016-01-08T18:13:54Z
0665b49e65a7f42a753024d47dd7aa5a95e1c2b9,"Merge pull request #2232 from himanshug/doc_fix

document size attribute in thetaSketchSetOp post aggregator",2016-01-08T07:07:36Z
0d5f82aee73368362fa52f6f8ad01e27a24ed8a3,document size attribute in thetaSketchSetOp post aggregator,2016-01-08T05:59:03Z
15fc0702321ad65bc5aaff4be7346c39b4c3b35b,"Merge pull request #2213 from himanshug/fix_curtator_test_base

[wip] trying/finding fix for announcer test failures",2016-01-08T02:23:49Z
8eb332c1c4c521118a185e2825d15aa075dc0c4b,Add druid-rocketmq module,2015-07-09T11:10:36Z
d0b10c29d7542249c804a3f8d7f3b9f178981b08,"Merge pull request #2197 from metamx/clearIncIndexClose

Make OnHeapIncrementalIndex clean maps on close()",2016-01-07T23:43:47Z
486a6baf6ecce694f62b93297e226d0f4ac5c21b,"Merge pull request #2211 from rasahner/LogTestStartEnd

log start/end of each integration test, make test method names unique",2016-01-07T23:42:29Z
24010b0df14962ddb68cb00f4484e29dee31cae0,"Merge pull request #2227 from druid-io/bytebufferUpdate

Update bytebuffer-collections to 0.2.4",2016-01-07T21:35:11Z
13c63bad72c87f046d6a1e7e669e6bd78ec0a9f9,Make timeouts more explicit on what is failing in JDBCExtractionNamespaceTest,2016-01-07T19:16:36Z
33504d0190fb9ea7538409331f81c2c68a27d29a,"log start/end of each integration test, make test method names unique",2016-01-06T14:26:02Z
5ace91fd7a090578e27fcfb2846c48d5cb9f7e6f,"Merge pull request #2098 from dclim/sparse-granularity-fix

continue hadoop job for sparse intervals",2016-01-07T18:24:17Z
b7b4d9f284dfdfaab4e2ccbaa30c82e85313c91a,"Update bytebuffer-collections to 0.2.4

Pulls in fix for https://github.com/RoaringBitmap/RoaringBitmap/issues/61",2016-01-07T18:21:49Z
4ecd901a1ab30dbd8ca9bacfd9959986a54e342c,"Merge pull request #2219 from himanshug/identity_extraction_fn_singleton

make IdentityExtractionFn singleton",2016-01-07T18:08:28Z
aaea95ed1b981e07945dfd392cc12246806fca95,"Merge pull request #2207 from himanshug/theta_sketch_select_query

fix bug for thetaSketch metric not working with select queries",2016-01-07T17:46:09Z
1bfb4e3988323aedd974d1502a639d49a4fb2f6b,"Emit query/time for failed and timeout queries

emit query/time metric also

add success flag

fix success flag for router metrics

review comments

formatting.",2015-12-24T06:37:00Z
010c6e959c846e1e1c2ff2edd4931d541c74fa32,add test,2016-01-07T10:01:46Z
2308c8c07f08c02dd7eb161250dd0d5d8c1e7998,continue hadoop job for sparse intervals,2015-11-24T02:27:45Z
a6bfcc5bfd77df809d667da03050bdf2b8a450a8,Allow change minTopNThreshold per topN query,2016-01-07T06:51:00Z
3048b1f0a5058fcd83c48015252b7a942fa63f5c,"Merge pull request #2174 from metamx/ingest-size-metrics

Add metrics for ingest/bytes/received for EventReceiverFirehose",2016-01-07T06:05:55Z
4cc81d3efff03ae59f31e7bffe0d924a2f0dbbe3,"Merge pull request #2096 from b-slim/add_use_case_unapply

Add use case unapply",2016-01-07T05:58:12Z
217079d0c759840f7e02e4c6d80a24b0b0edee37,make IdentityExtractionFn singleton,2016-01-07T04:29:07Z
dd262f0451e627b9f0fd438b538b6b551642fb3e,"Merge pull request #2215 from pjain1/fix_doc_metrics

correct metric name - segment/added/count -> segment/assigned/count",2016-01-07T00:21:54Z
768d07b70219d1b0fe8203091c82babd282a5860,correct metric name - segment/added/count -> segment/assigned/count,2016-01-06T21:55:11Z
e5df3934a90a007975c8583b9cd6b3ae39535ebe,"Merge pull request #2214 from metamx/happy2016

Happy 2016!",2016-01-06T20:32:30Z
902f51433d06148fcfd2a46a8cc2b38f8d15e6e6,"Merge pull request #2125 from mangeshpardeshiyahoo/master

Add extraction function support for Dimension Selector",2016-01-06T20:22:26Z
75ee9521972a335cd595da451164b7c8b3760bc0,Add extraction function support for dimension Selector,2015-12-18T15:58:44Z
d8505a6cccd2f38869a310058bb9db999768c278,Happy 2016!,2016-01-06T17:22:42Z
032d3bf6e66379c0f8d68adffa981c5f30bb0a3f,Optimization of extraction filter by reversing the lookup,2015-12-10T22:53:26Z
7ab810f3eb06d44d788f7934a804309d9eb6831b,do not ignore exceptions from curator cleanup in CuratorTestBase,2016-01-06T15:38:06Z
716a0e14577de6dc72d19936e66155ad15edd3c0,"Merge pull request #2206 from druid-io/add-ds-test

add pusher tests for all deep storages",2016-01-06T14:57:49Z
2103906a482671dacf40fa8542fa625e9a08ce9b,add pusher tests for all deep storages,2016-01-06T00:42:05Z
c6634d7c2c6bbb570b697ddcffdc69ca06709d62,adding json for thetaSketch Memory object representation,2016-01-05T06:01:19Z
62e5e45da8057318bc401b5c73445b2eae24c8b1,add select query UT for thetaSketch,2016-01-06T03:53:44Z
3f048f0b155e5778fc20e707197628d8b21815c3,adding support to execute Select queries in AggregationTestHelper so that Select query based UTs can be written for complex aggregator implementations,2016-01-06T03:36:52Z
6d886da7d996b339a24183ac7eacd12e40b92fac,"Merge pull request #2191 from duilio/fix-rackspace-cloudfiles-segment-size

store uncompressed index size on cloudfiles storage extension",2016-01-06T01:17:35Z
c71d172aeedcdc2c787744bc2aaace09c518cc76,"Merge pull request #2205 from metamx/removeWeirdSCMTag

Manually fix <tag> from <scm> in pom.xml",2016-01-05T23:58:20Z
3c4bdb7cc808c940cd2b149512d60688df43b059,Manually update <tag> from <scm> in pom.xml,2016-01-05T22:34:25Z
82bdfbbbf154e7e4787d96610d8f6bae7255d713,"Merge pull request #2155 from metamx/taskConfigTmpdir

Make TaskConfig pull from java.io.tmpdir",2016-01-05T19:58:39Z
8bb08f39e3d806264edbd2854bf678f961c7157a,"Merge pull request #2201 from metamx/fix-2199

Attempt to fix RTRTest transient failures",2016-01-05T17:27:33Z
f675ca667128c612762adbfb568a600236cb7774,"Merge pull request #2203 from gianm/update-java-util

Update java-util, fixes #2193",2016-01-05T16:45:26Z
b93feb5e772db1efb5a645da05581fc3aba0778b,"Update java-util, fixes #2193",2016-01-05T16:16:03Z
14989f272da9a6f28e91e5647546033e8219c51a,"Add metrics for ingest/bytes/received for EventReceiverFirehose

review comments

review comments",2015-12-30T16:37:41Z
45f402f22f0349c19db9df95ae0a24e17394b024,"increase timeout

tune timeouts",2016-01-05T13:24:08Z
d413808e6692eef5d9703e1959f15226a8733771,"Merge pull request #1858 from zhaown/avro-module

Support avro ingestion for realtime & hadoop batch indexing",2016-01-05T03:02:10Z
5e57ddb8cc1c40e1dedb0692c941ec4879f589ce,Adding avro support to realtime & hadoop batch indexing.,2015-10-25T13:17:31Z
443ce2db9d8af03d95850dc5256eacb5da8a7dac,callbacks registered to Log4jShutdown is not executed when stop is called,2015-12-21T04:35:44Z
863d84e30e91876a04d25958b086802c7071281b,"Merge pull request #2194 from metamx/DRUID-2160

Fixes to JDBCExtractionNamespaceTest",2016-01-04T23:00:50Z
3944658a9bb5a67c2dadf838552508825eae4f79,"Merge pull request #2198 from metamx/bytebuffer023

Update bytebuffer-collections to 0.2.3",2016-01-04T19:46:02Z
2097669cce312c4a14b24e839113bd28c805f199,"Update bytebuffer-collections to 0.2.3
* Fixes https://github.com/druid-io/druid/issues/2175",2016-01-04T19:20:45Z
91fc32749b3ce4294db60b8af869eb7f3e83f928,Make OnHeapIncrementalIndex clean maps on close(),2016-01-04T19:17:36Z
03a70fc22738cc0fce287ed777e6d4a1856d7697,"Merge pull request #2196 from rasahner/trivialDocFix

trivial documentation fix",2016-01-04T18:48:48Z
0961c0b70380509ff01c8efc52cb338bd0ad9771,trivial documentation fix,2016-01-04T18:39:10Z
ebccea6bb01340da153ccb50c071732e6b9a64b5,"Merge pull request #2188 from druid-io/doc-fix

small fixes to documentation",2016-01-04T18:25:26Z
e18301d99c7e0bb9177c808ac740ccf6085ee85f,"Make TaskConfig pull from java.io.tmpdir
* Also makes paths built off of java.nio.file.Paths instead of String.format",2015-12-23T19:00:32Z
6e176250f9af066dfb5b3049acd6855467bce097,"Merge pull request #2192 from rasahner/docker_zookeeper347

integration-tests: update zookeeper version to 3.4.7",2016-01-04T18:13:40Z
957646be2ca3b8b0698e45ba2ee95bccad0513bc,Fixes to JDBCExtractionNamespaceTest,2016-01-04T17:18:35Z
e280ab5f075c9dd85b285ca540bf3ca21035ffc7,update zookeeper version to 3.4.7,2016-01-04T14:37:52Z
43e75234747a0a2f3ff10de4e2aaa18a987b25a6,"Merge pull request #2189 from pjain1/fix_realtime_example

add ChatHandlerServerModule to realtime example",2016-01-04T15:57:54Z
5ea0b96d9a0287701950435e0829df6f4646ea36,store uncompressed index size instead of the compressed one in cf storage extension,2015-12-28T11:31:21Z
d3d2ee03cee93eac46759da27600edcabd323ace,minor fixes to docs,2016-01-03T19:37:06Z
2865c15fd36a4940a05224f0ea43c2d5dbed2e23,"Merge pull request #2184 from druid-io/dev-docs

Disable known bad unit tests until they are fixed",2016-01-03T19:30:05Z
57d91d754d249d656f17fbf741ee84d3c51256f9,"Comment out buggy unit tests, fix #2185",2016-01-02T19:14:20Z
5a63c3dd63fe6bab4a81046055f34b0e86a12368,"Merge pull request #2186 from druid-io/dev-docs2

Add intro developer docs",2016-01-03T16:36:41Z
a0ab65d16973683799541a231b8197093b451384,"Merge pull request #2179 from druid-io/the-docs

Multiple improvements for docs",2016-01-03T16:07:38Z
88f6b9b5adaa65b32672ffd7403e069f4489db4f,Multiple improvements for docs,2016-01-01T00:32:51Z
06a8e1482081b940d388bdedff6fcf2aefa1252a,Add intro developer docs,2016-01-02T22:24:52Z
8451f21fedac0894875b097c79398a4f839158ee,"Merge pull request #2181 from druid-io/fix-test

Fixes #2180",2016-01-02T16:30:30Z
9d179b96a8e3c4781244341f30bc6b1d6f43e502,"Merge pull request #2183 from druid-io/fix-jdbc

increase timeouts for jdbc tearDown",2016-01-02T16:05:39Z
a2c9033d31ccf97d0204bcfe6fc7d64250c5b7ad,"Merge pull request #2182 from druid-io/fix-announcer-test

Fix announcer test bad check",2016-01-02T16:04:20Z
89fc18bb55bd4049c234e9048ed4e7164dd1d9f1,increase timeouts for jdbc tearDown,2016-01-02T04:08:06Z
8424b2b456a3e5716afd28ffbb915c101a240788,Fix announcer test bad check,2016-01-02T03:55:22Z
b5c094d9512426a43fe0d88404db276e414cb9e0,Fixes #2180,2016-01-02T00:44:10Z
fc2257489ed0db8ac7df0403c28a9e9cc4fbc10b,"Merge pull request #2100 from himanshug/doc_update

doc update to make it easy to find how to do re-indexing or delta ingestion",2015-12-31T17:41:54Z
3d886d7dbf5d50c5c86e8e78d0d7d5ddf3face0b,"Merge pull request #2176 from druid-io/fix-again

attempt to fix transient tests again",2015-12-31T06:43:00Z
48de9dfafae281549b28c08d1fe547ece948073a,doc update to make it easy to find how to do re-indexing or delta ingestion,2015-12-30T21:02:53Z
ca46f1d40cf41a69636a410ecc1494d86a73d674,attempt to fix transient tests again,2015-12-31T05:37:15Z
f8219432eea99255efbb9174057e3f1c5f0170cf,"Merge pull request #2130 from himanshug/fix_filter_multi_valued

Feature to ""fix"" filtering on  multi-valued dimensions",2015-12-31T00:46:50Z
e1ea93b6fc8120dfee742ab6ad3cf2ba2790e7da,documenting querying behavior on multi-valued dimensions,2015-12-31T00:01:22Z
b47d807738429dd0e54c3f1b5654cfcbba3dab2f,"Add support for filtering at DimensionSpec level so that multivalued dimensions can be filtered correctly
also adding UTs for multi-valued dimensions",2015-12-19T09:01:20Z
fa5c3bb014e557ee6dc6f2278f2ed64cf1584700,adding decorate(DimensionSelector) to DimensionSpec to enable support for arbitrary filtering/transformations to returned dimension values,2015-12-19T08:58:54Z
3c107c57575d27e60d8536e4945dc3c2253e03b0,"Merge pull request #2150 from himanshug/emit_query_bytes

emit query/bytes metric",2015-12-30T19:44:19Z
b68265399cfd0cec73be9f6f3a068589c541d553,"Merge pull request #2168 from druid-io/remove-indexmaker

Remove IndexMaker",2015-12-30T06:54:29Z
df893dbaf844e98a6ffa2e02f3e793eceef8e3eb,"Merge pull request #2141 from gianm/fix-restoring-realtime

Fix some problems with restoring",2015-12-30T05:14:45Z
492adeaaa76968eda21238f60ff350d677f60cef,"Merge pull request #2172 from gianm/remove-kafka-seven

Remove unused kafka-seven extension.",2015-12-29T21:19:28Z
efc90ee63bb009afc4d959eabeb9392a85a58a0d,"Merge pull request #2148 from metamx/fixBenchmarkSources

Fix coveralls",2015-12-29T18:34:34Z
7ffa706655f2a6835071c8ebe9ed172389a0bf36,"Merge pull request #2152 from metamx/add-taskId

Add taskId to realtimeMetrics",2015-12-29T18:33:40Z
e14ad74088f6b8a5f613dcaed8f17f7bdb2796d2,"Merge pull request #1936 from b-slim/between_range_with_predicat

adding Upper/Lower Bound Filter",2015-12-29T18:11:22Z
b1261035a7ffb730e4ede4e47a7f463e1d1ddaed,"Merge pull request #1861 from guobingkun/insert_segment_tool

insert-segment tool",2015-12-29T18:06:07Z
891d6391889d0813069a82661d3cc1b33d6b5860,Remove unused kafka-seven extension.,2015-12-29T17:05:27Z
4484d1e3e617ec628ec5e3857b4bee4cefe36e38,"Merge pull request #2165 from druid-io/fix-all-the-things

Fix all transient test failures",2015-12-29T07:37:01Z
38b0f1fbc27aa3dfd5f78ea6470393f140fb44f8,fix transient failures in unit tests,2015-12-28T06:13:43Z
faf421726b4eba3163d07d82f78a6f10f434bcc6,remove IndexMaker,2015-12-28T01:09:53Z
d94821998f7a503c60b5a0f15e0759941f01a731,"Merge pull request #2153 from navis/fix-testfail-DruidCoordinatorTest

Another try to fix DruidCoordinatorTest#testCoordinatorRun",2015-12-28T01:03:46Z
8cb52bddd84a336e3715bb74f19478acc32894b5,"Merge pull request #2140 from navis/fix-sporadic-testfail4

Fix sporadic fail of RemoteTaskRunnerTest#testWorkerRemoved",2015-12-27T22:55:49Z
e4906508652e1332c04aecd1e3b4a3738f179a16,"Merge pull request #2110 from navis/fix-sporadic-testfail

Fix sporadic fail of URIExtractionNamespaceFunctionFactoryTest#testReverseFunction",2015-12-27T22:45:09Z
5042b20eb4d3540edad4e7d26b3eee2ae7997973,"Merge pull request #2164 from pdeva/patch-7

correct docs",2015-12-27T22:43:51Z
b9d1d0057a079b8deac8935650378b79d58c4919,"Merge pull request #2163 from pdeva/patch-6

List who can access metadata storage",2015-12-27T22:43:44Z
77863285e994f01e85fc0ab58dcab91c60943b13,fix typo,2015-12-27T22:28:23Z
b308a134838b237ebfcea82e2c5d596d2e92385f,correct docs,2015-12-27T22:27:20Z
98fc08b0de9c3c4e749f39a0b680288e0e59e5b7,"List who can access metadata storage

This is useful to know which ip addresses you need to allow to access your RDS instance for example",2015-12-27T22:25:17Z
9aa62e4631cfb75fd1694e9c7e372bc2b1efb62a,"Merge pull request #2154 from navis/fix-testfail-WorkerTaskMonitorTest

Fix sporadic fail of WorkerTaskMonitorTest#testRunTask",2015-12-24T04:52:33Z
2aee353f178f7c33a91306ddb21125ba71de3d42,"Merge pull request #2151 from navis/fix-testfail-xxServerViewTests

Another try to fix xxServerViewTests",2015-12-24T04:51:01Z
10c19fe9f8b7753642d2c5b3ab66d3d27f65a161,Another try to fix DruidCoordinatorTest#testCoordinatorRun,2015-12-23T18:02:37Z
a8f6c6110dfc49e10f2c63d60715293fe8cd4df3,Fix sporadic fail of WorkerTaskMonitorTest#testRunTask,2015-12-23T17:31:30Z
2c3c4a3f8f702cce99bbd7696850341b6503613f,Another try to fix xxServerViewTests,2015-12-23T08:25:08Z
508629916d86141f9951943180bf348dfb2b0a89,"Merge pull request #2137 from guobingkun/fix_serverview_transient_error2

[Don't merge]Another effort on fixing the transient error for XXXServerViewTest",2015-12-23T15:33:54Z
978a3fd8aec19fbc92f29b017d0409944ff196bc,"Add taskId to realtimeMetrics

Add task Id to Realtime Metrics",2015-12-23T12:35:25Z
1a8546a682502124af0bfcd75f0622cc74b5bc35,emit query/bytes metric,2015-12-22T05:51:07Z
89e2a9a6d24bb4c37a3d54df3201de2111bf8f7b,build at Tue Dec 22 21:30:00 CST 2015,2015-12-23T03:30:00Z
d30faa530dee955723388ae0e30526b589c87720,"Merge pull request #2144 from metamx/fixjdbcExtractionNamespaceStartStop

Reorder Before/After in JDBCExtractionNamespaceTest",2015-12-23T03:26:19Z
c3374b04e8ca18f426ca965b4e3c6a7756cc23fa,"Merge pull request #2143 from gianm/fix-segment-metadata-intervals

SegmentMetadataQuery merging fixes.",2015-12-23T02:23:25Z
a9d5bcf2dc319861e79f898afa3135fc4060984a,Fix coveralls,2015-12-22T22:09:26Z
32edd1538d74285ed61ac909af58c2995696a1e4,"RealtimeIndexTask: Fix a couple of problems with restoring.

- Shedding locks at startup is bad, we actually want to keep them. Stop doing that.
- stopGracefully now interrupts the run thread if had started running finishJob. This avoids
  waiting for handoff unnecessarily.",2015-12-22T07:30:36Z
f4ce2b9bc5ff0b3f536da24f10ae5e08a4b0d028,TaskLockbox: Consider active tasks active even if they have no locks.,2015-12-22T07:25:03Z
a110eafff74af742012e658e71ac476ffef4ad18,build at Tue Dec 22 17:30:00 CST 2015,2015-12-22T23:30:00Z
daaa24d7ad78f7dd4a6a626335e03a20897cb101,"Merge pull request #2145 from gianm/restoring-option

druid.indexer.task.restoreTasksOnRestart configuration.",2015-12-22T23:22:32Z
4b93528334f0ddfe9c23eeee25d178be02ddb203,build at Tue Dec 22 17:00:01 CST 2015,2015-12-22T23:00:01Z
b8d9860dbc860a2f972a84493b97748ebabfd326,build at Tue Dec 22 16:00:00 CST 2015,2015-12-22T22:00:00Z
ffdb9407e5d6052e563c433568776dcccee35af9,build at Tue Dec 22 15:30:00 CST 2015,2015-12-22T21:30:00Z
6f54c1b60d940a55e93236c41386419bf2bf5dee,build at Tue Dec 22 15:00:00 CST 2015,2015-12-22T21:00:01Z
4e61261c6868c682218325928b3f3ca26fa07cf7,build at Tue Dec 22 14:30:00 CST 2015,2015-12-22T20:30:00Z
4961b8c0bd807bac8e7a4d56542f30a985f3848e,build at Tue Dec 22 14:00:00 CST 2015,2015-12-22T20:00:00Z
0a635a11d6187654ee756bc633908e0dd9a0c97f,build at Tue Dec 22 13:40:00 CST 2015,2015-12-22T19:40:00Z
05c9e1b598513098b7a99b173cfe54b38bce7ae9,"Reorder Before/After in JDBCExtractionNamespaceTest
* Fixes https://github.com/druid-io/druid/issues/2120",2015-12-22T16:48:24Z
849ab2d9585035d13f7cc3edf5c1821441c9a7b7,build at,2015-12-22T19:08:29Z
455980d659be4d2eefc0cc3c8db258946cdfa558,address another node exists failure,2015-12-22T19:06:20Z
bad270b6c4a751df6941e02c817bbb44f44eb4c0,druid.indexer.task.restoreTasksOnRestart configuration.,2015-12-22T18:31:20Z
2ffeda5d251497e9473335d2a504aa0508a5294a,build number 13,2015-12-22T16:19:39Z
7e64d5179fb9fe2c056d379d4dbe85b1849c397b,"Merge pull request #2139 from himanshug/emit_query_node_bytes

emit query/node/bytes metric",2015-12-22T16:07:04Z
83f4130b5f7930efa3c5059f2adeebf0adfcbeab,"SegmentMetadataQuery merging fixes.

- Fix merging when the INTERVALS analysisType is disabled, and add a test.
- Remove transformFn from CombiningSequence, use MappingSequence instead. transformFn did
  not work for ""accumulate"" anyway, which made the tests wrong (the intervals should have
  been condensed, but were not).
- Add analysisTypes to the Druids segmentMetadataQuery builder to make testing simpler.",2015-12-22T09:21:56Z
807cd6fa8332da43edfa01a432fed28211ea48d4,add ChatHandlerServerModule to realtime example,2015-12-22T11:40:54Z
bc573484f3ea228af4edd69403b611220680e6a2,build number 12,2015-12-22T06:52:58Z
8a179fc2734e89699f2586b5d6faa3d5f3f96d1d,Fix sporadic fail of RemoteTaskRunnerTest#testWorkerRemoved,2015-12-22T05:26:56Z
7b5fd760581d8f4c8b07ac3655ce6bd7e3a85d40,"Merge pull request #2119 from navis/fix-sporadic-testfail2

Fix sporadic fail of DruidCoordinatorTest#testCoordinatorRun",2015-12-22T05:28:32Z
b96f560255c8589380fb01a02ccfa21e15b1a63b,emit query/node/bytes metric,2015-12-22T05:23:20Z
e38b7554e479ab2da59ce5b81cd6f133bd54c85e,"Merge pull request #2136 from rasahner/unitTestGroupbyHaving

for completeness, unit test for groupby/having with unrecognized type",2015-12-22T02:38:45Z
06c220ae7b107d683fbcaca3319c6dd4deda3699,build number 11,2015-12-22T01:40:47Z
93a91e5633be9023ade862cc7eb421a1ae476832,build number 10,2015-12-22T00:21:15Z
471dd7e16435ca420f277beb9ae16a2836715377,build number 9,2015-12-21T23:35:18Z
627c311923971b37c14ba9d3479ec55de5c45d74,build #8,2015-12-21T23:06:37Z
293f2ad65d51e23bec1058f495808146ab4dcdde,build #7,2015-12-21T22:09:19Z
9ed843ea219b3952fddd0166d6089f0373a2ba81,build #6,2015-12-21T21:41:23Z
f8342ca2404ddced13b15cf688d06c3db13fd0e0,build #5,2015-12-21T21:10:37Z
52261c5539f30d54a6538207900c740559ef6ab2,build #4,2015-12-21T20:41:38Z
47a8f2d3f16404a8b1ae9f0f3593cac964154a57,build #3,2015-12-21T19:56:43Z
5cc56cf9e72fab672479484b06b50bccd7d833b5,build #2,2015-12-21T19:05:38Z
f12cfa99fac06342f3c067df445f69cf05b1c810,another effort on fixing the transient error for Broker/CoordinatorServerViewTest happend on Travis build,2015-12-21T17:07:43Z
dded4441d3f716e90e4afe02e67d69a005d8bd57,"for completeness, add unit test for groupby/having with unrecognized type",2015-12-21T17:30:26Z
c2a2d19d62e577bf621937efe8353ad27d6cee34,"Merge pull request #2126 from guobingkun/remove_single_announcer

Remove SingleDataSegmentAnnouncer in favor of BatchDataSegmentAnnouncer",2015-12-21T16:55:07Z
65d4fd394e1917a390bd48848ee9c6a04bc95763,"Merge pull request #2134 from himanshug/fix_transient_ut_failure

trying to fix transient errors in testRealtimeIndexTask() by increasing",2015-12-21T16:28:54Z
7b24d1f35526e6ecd210ef1cc206899eae6c360e,Fix sporadic fail of DruidCoordinatorTest#testCoordinatorRun,2015-12-18T08:44:49Z
78215a2053c3fe33defc8d64e26729fce359f2d5,"Merge pull request #2132 from navis/fix-sporadic-testfail3

Fix sporadic fail of io.druid.client.CoordinatorServerViewTest",2015-12-21T06:12:04Z
5e178499e897d44290d858360c6b74e43681e1b3,trying to fix transient errors in testRealtimeIndexTask() by increasing overall timeout and unlimited wait for segment publish,2015-12-21T06:11:20Z
951a4e9b35b61737a001827c5c1e759c524dc7d5,Remove SingleDataSegmentAnnouncer in favor of BatchDataSegmentAnnouncer,2015-12-18T21:19:01Z
89b477970f5d6c022676f41700be66e4c5d5f43b,"DataSegmentFinder tool

`insert-segment-to-db` is a tool that can insert segments into Druid metadata storage. It is intended to be used
to update the segment table in metadata storage after people manually migrate segments from one place to another.
It can also be used to insert missing segment into Druid, or even recover metadata storage by telling it where the
segments are stored.

Note: This tool expects users to have Druid cluster running in a ""safe"" mode, where there are no active tasks to interfere
the segments being inserted. Users can optionally bring down the cluster to make 100% sure nothing is interfering.",2015-10-26T01:44:43Z
ad3312171bb0e74606a75331285400f10fa49d0f,Fix sporadic fail of io.druid.client.CoordinatorServerViewTest,2015-12-21T02:39:32Z
e469655784d2c67559689504e2dcef65b145ca4e,"Merge pull request #2131 from himanshug/add_comment

adding comments to explain merge failure in segmentMetadata query",2015-12-20T01:23:37Z
e1631967e387da32876dadd3837d09c7db029edd,adding comments to explain merge failure in segmentMetadata query,2015-12-19T17:39:24Z
c88c39e1d70b68fed425ea49108ddc0d3da57b31,"Merge pull request #2129 from himanshug/fix_segment_metadata_query

Fix and UT for testing segment analysis merge",2015-12-19T15:58:57Z
7ecad1be2483643f53636231cea8b72aa64292ef,Fix and UT for testing segment analysis merge,2015-12-19T06:24:02Z
1b46ea7b3def5343ff5a14c01c35d4034c9f3f64,"Merge pull request #2121 from metamx/jdbcExtractionNamespaceLocking

Add nicer locking and shorter timeouts to JDBCExtractionNamespaceTest",2015-12-19T03:02:36Z
5d1f6e5e5120f0f5bf8f2cddbf6cfd9e49f4fdfe,"Merge pull request #2127 from gianm/datasketches-distribution

Add datasketches to the distribution.",2015-12-19T01:30:32Z
7019d3c4216d209972c2afd7ba1d541970793d5b,"Merge pull request #2107 from jon-wei/fix_smq

More efficient SegmentMetadataQuery",2015-12-19T00:40:47Z
14229ba0f24a6440b5dfad6bae96294b9b626e95,"Merge pull request #1922 from metamx/jsonIgnoresFinalFields

Change DefaultObjectMapper to NOT overwrite final fields unless explicitly asked to",2015-12-18T23:38:32Z
918b45a78cd1328cdf606a92adc1fddd35bf0184,Add datasketches to the distribution.,2015-12-18T23:34:43Z
71f554bf805f34fc1c12431a080cb4cb652b69e2,"Merge pull request #2101 from himanshug/fix_extraction_dim_filter_cache_key

add extractionFn bytes to cache key in ExtractionDimFilter",2015-12-18T20:05:43Z
9e6874cc7e02a2355270ef77d76f659462a9eda8,"Merge pull request #2084 from binlijin/master

minor optimize IndexMerger's MMappedIndexRowIterable",2015-12-18T19:42:55Z
e52c9d2b3caed427dcb6fb3ba57f2c50cc148bd5,"Merge pull request #2095 from guobingkun/fix_client_merge_task_and_serde

Fix getType() and Json serialization in ClientMergeQuery + serde tests",2015-12-18T19:40:13Z
cc21a5fac7c859465ba98724efa0f372b87935db,"Merge pull request #1999 from himanshug/remove_min_max_aggs

remove min/max aggregator factory",2015-12-18T19:38:52Z
409eb0b7c6f9a992b82d58b69d04c484c4bed737,Add nicer locking and shorter timeouts to JDBCExtractionNamespaceTest,2015-12-18T18:33:38Z
31b205afcdc1aff055b536546c1d2aabf3e96640,Fix sporadic fail of URIExtractionNamespaceFunctionFactoryTest#testReverseFunction,2015-12-18T05:37:00Z
3d135e35b47dc4d43a30c3d563a15cee7f95bc72,"Merge pull request #2112 from himanshug/num_rows_fix_test2

adding numRows attribute to segment metadata query expected results",2015-12-18T03:33:10Z
0a12108b1968be9bba5cc8c1c4932f2d4c896198,"Merge pull request #1934 from druid-io/more-specs

Add docs for more specs",2015-12-18T03:19:42Z
398a3ec6202f7fd7d522a7ba856b677e20955808,add docs for more specs,2015-11-07T03:00:53Z
47910a8333d844bd50a88b90c32be6e18439ca2a,adding numRows attribute to segment metadata query expected results,2015-12-17T23:52:36Z
356b07c6c37698aa74199e499ec0416f4e3de227,More efficient SegmentMetadataQuery,2015-12-17T20:45:14Z
f8cf84f466951a9c206795985082eb451b290fab,"Merge pull request #1995 from himanshug/num_rows_seg_metadata_query

add numRows to segment metadata query response",2015-12-17T20:23:46Z
82ea34800380c63fd5be7e28d5875280a440e4d7,add extractionFn bytes to cache key in ExtractionDimFilter,2015-12-16T20:00:38Z
628643d80e41cb8d6687b4d13692afe7bfa674a1,"Merge pull request #2091 from rasahner/noDefaultForGroupbyHaving

take away default for groupBy/having",2015-12-16T07:07:40Z
cb085f99d368134ff8638ce8f6e1f6fdcc5e69cc,"Merge pull request #2097 from metamx/update-coordinator-docs

update the coordinator API docs to better explain how to format ISO86…",2015-12-16T01:35:48Z
2f32cb1fb62f6df5c0fe1f229bb171c2a611be66,update the coordinator API docs to better explain how to format ISO8601 intervals in the request url,2015-12-16T00:15:26Z
1e5aa2f3ac8686898515a8e287d9da41a0c80475,fix getType() and Json serialization in ClientMergeQuery and add serde tests,2015-12-15T17:13:41Z
3441cf311018877417784b8855d17e365665b448,take away default for groupBy/having,2015-12-14T20:49:55Z
e6c2db89da3532c29a58862d275bd987f5a8f414,"Merge pull request #1921 from jon-wei/flat_json

Add docs and benchmark for JSON flattening parser",2015-12-15T04:53:54Z
e7f06cf61c7feac200130a4126cc699b61b171a4,"Merge pull request #2075 from jon-wei/regex_extract

Configurable value replacement on match failure for RegexExtractionFn",2015-12-15T03:10:50Z
c88f75df7c7b3a7860ecb739828e20aa3a70f834,Configurable value replacement on match failure for RegexExtractionFn,2015-12-09T20:01:52Z
6bf6644028e6687c1d053011abd344ffafd5dab8,"Merge pull request #2092 from stevemns/docfix-workerstrategy

Change sample worker config spec with host:port instead of ip:port.",2015-12-14T23:56:24Z
2b5a01033203bce606dbb9cafd6c2b804feb9bfa,"Change sample worker config spec with host:port instead of ip:port.

Also extend description of the 'affinity' property of the worker strategy
fillCapacityWithAffinity and fix a couple typos of middle manager (to
be more consistent throughout the page).

Add additional verbiage about appropriate middle manager host value.",2015-12-14T22:01:37Z
362bea1090e2701a4d5852e2603e41e0305e035f,minor optimize IndexMerger's MMappedIndexRowIterable,2015-12-11T07:04:46Z
d531e69d1af3fd8a4722af64d205dfe4e13e6bde,"Merge pull request #2079 from binlijin/master

reduce bytearray copy to minimal optimize VSizeIndexedWriter",2015-12-11T05:30:09Z
9436cd529d0399aca61484605f03f221d6364579,"Merge pull request #2077 from b-slim/add_bulk_apply

adding bulk lookup andbulk reverse lookup functions",2015-12-10T23:15:35Z
d95adb5749b413a5dc487b143c2ebd31661c3920,"Merge pull request #1949 from metamx/overlord-console-redirect

redirect to overlord console by default",2015-12-10T23:11:00Z
77afdf25e32fddd1aab282edb206383e694c9efe,adding Bound Filter,2015-12-10T14:42:04Z
ee1a39801a940f657d8f48d38cefcc97dffb7c4b,adding bulk lookup and reverse lookup,2015-12-09T22:05:03Z
0eafbd55b231ec283d9979c39a6d802114d6074b,reduce bytearray copy to minimal optimize VSizeIndexedWriter,2015-12-10T08:34:39Z
a2d0bea2235dec7912db375060bc1cf9df81b98e,"Merge pull request #2074 from guobingkun/add_comment

Add comment to BrokerServerViewTest",2015-12-10T00:19:27Z
c53bf85d83a4d9f985f1442d81c7b5f8bcfa7eae,Add docs and benchmark for JSON flattening parser,2015-12-09T23:35:26Z
f29c25b826d5adce8f66f98f9d81d16147824973,"Merge pull request #2047 from binlijin/master

optimize InputRowSerde",2015-12-09T21:14:07Z
f4ba13a1ac4c477f08d853f2e8c0f5099c61a85b,"Merge pull request #2029 from b-slim/add_reverse_fn

Adding reverse lookup function to LookupExtractor.",2015-12-09T20:50:13Z
31502a920cc29adad6ec2281802b887fdf644686,"Add comment to BrokerServerViewTest
Explain why we need to do explicit checks on existences of zNodes before we create them. Address issue: https://github.com/druid-io/druid/issues/1512",2015-12-09T19:59:33Z
ce79d707ddf63784f6b980a4ce883b3753969c60,"Merge pull request #2072 from guobingkun/fix_transient_error_brokerserverviewtest

An effort to fix transient error in BrokerServerViewTest",2015-12-09T19:12:35Z
3667f283cec475b4076e91b2a0dd5bdb6f577978,"Merge pull request #2030 from rasahner/intTestRmAllSegments

int tests: in unloadAndKill, remove all segments if no date range given",2015-12-09T19:12:14Z
9015a68c037ad07b03905df91f8cfb6f57afc5ae,"Merge pull request #2002 from navis/DRUID-2001

fixed #2001 GenericIndexed.fromIterable compares all values even when it's not sorted",2015-12-09T16:56:49Z
161c4ce28863445061e392fba295821e5a4a00de,An effort to fix transient error in BrokerServerViewTest,2015-12-09T16:45:49Z
85f339b687231aeb397786b4c798e6ded96dbbd2,introduction and  implem of reverse lookup function unApply.,2015-12-01T16:34:09Z
e2d91f2680c776e7f86ec92caef865bcf8ca2750,"Merge pull request #2068 from guobingkun/fix_typo

fix typo in InitializationTest.java",2015-12-09T07:05:44Z
c4de26ef099175b22dd3637338b9fe54d08e6516,fix typo in InitializationTest.java,2015-12-09T06:09:17Z
788acdbd1cb2f29bfba8625f38f1f358c0e74a73,"Merge pull request #2067 from metamx/fixInitializationTest

Fix InitializationTest",2015-12-09T02:32:42Z
219367221b8bbbc3f52ed664d740ee76f5c3bbac,optimize InputRowSerde,2015-12-09T01:51:56Z
5bc6d61a25a71edf8f1a1ba9e730ab5e94c67d43,Fix InitializationTest,2015-12-09T01:37:56Z
d41ed55c1ccbabddfc4864da0681731da27efb2a,"Merge pull request #2063 from gianm/update-java-util

Update java-util.",2015-12-09T01:30:25Z
b0ab363022ded48a565b5a93bd2a07b8f8b34b65,"Merge pull request #2052 from gianm/service-names

Change service names in docs, examples to match defaults in the code.",2015-12-08T23:40:35Z
f6f7bec2b6a57cc98bd683263fc8e834c376c66f,Update java-util.,2015-12-08T22:20:06Z
dcd15735cddedeeaf9f05ab06625dcfeb69a1f85,"Merge pull request #2015 from metamx/handoff-notifier-coordinator

Remove ServerView from RealtimeIndexTasks and use coordinator http endpoint for handoff information",2015-12-08T22:06:39Z
a32906c7fd11c9a8554df2621a172353a523a9dd,Remove FilteredServerView,2015-12-05T06:02:30Z
9491e8de3b196c5187480f45c39785a73b129424,"Remove ServerView from RealtimeIndexTasks and use coordinator http endpoint for handoffs

- fixes #1970
- extracted out segment handoff callbacks in SegmentHandoffNotifier
which is responsible for tracking segment handoffs and doing callbacks
when handoff is complete.
- Coordinator now maintains a view of segments in the cluster, this
will affect the jam heap requirements for the overlord for large
clusters.
realtime index task and nodes now use HTTP end points exposed by the
coordinator to get serverView

review comment

fix realtime node guide injection

review comments

make test not rely on scheduled exec

fix compilation

fix import

review comment

introduce immutableSegmentLoadInfo

fix son reading

remove unnecessary logging",2015-11-26T18:22:20Z
ae4357dfabdb60367c45984a30c433cfae657066,"integration tests: in unloadAndKill, remove all segments if no date range given",2015-12-02T17:40:59Z
6c23d8edb47fa7ec5a1e32f8d1ec66150b7bae8e,"Merge pull request #2043 from mangeshpardeshiyahoo/master

Add dimension selector support for groupby/having filters",2015-12-08T06:38:53Z
d7ce12092900055f1a84f1f676a18875da4d9c44,Add dimension selector support for groupby/having quries,2015-11-24T14:22:37Z
56fd48c0e4df7d9bf39ce25f633759395728dd01,"Merge pull request #2056 from guobingkun/fix_server_selector2

Bug fix: stale segment in ServerSelector",2015-12-08T00:57:33Z
ba980dcadbbde0ac8f381a7b75067b3bcb9d5346,"Merge pull request #2058 from cheddar/report-uncovered-segments

Add ""uncoveredIntervals"" to responseContext",2015-12-08T00:42:42Z
f2c1e1c0a2d8c0b4cf79370a6ad5d772083c584f,"Merge pull request #2060 from tubemogul/deletetask-docs

removed documentation about (removed) DeleteTask",2015-12-08T00:28:24Z
a36185926e69b011a44221ba861f18c026bd5a06,"Add ""uncoveredIntervals"" to responseContext

This change will cause the CachingClusteredClient to populate the ""uncoveredIntervals""
key in the responseContext map.  The value will be any intervals that were requested in
the query but are not actually covered by the segments underlying the data source.

For unit testing, CachingClisteredClientTest is testing the caching behavior of the
object and it is pretty hard to adjust it to only test this new behavior, so I created
a new, parallel ""CachingClusteredClientFunctionalityTest"" to simplify testing just
basic functionality.",2015-12-07T18:41:53Z
4ed0128b3b8fb44708a13ff2402d9b02646d57a6,removed documentation about (removed) DeleteTask,2015-12-07T23:56:46Z
970b9cfcaadaa309a9dc5890ed1361ce0a9b3650,fix stale segment in ServerSelector,2015-12-07T04:58:55Z
cacd8f7a27df817a16d8bec711777f5269dd4b8a,"Merge pull request #2028 from navis/parse-spec-validator

fix for #1939, Druid ParseSpec validator",2015-12-07T19:53:01Z
00416e26ff60504a95cfd2782563ade22de82133,"Merge pull request #2012 from himanshug/add_comment

adding more comments to why drops do not happen",2015-12-07T19:50:06Z
d957a6602ccbb73c409af8df8ecde386f3e69e7c,"Merge pull request #2049 from himanshug/hadoop_indexing_unique_path

add a unique string to intermediate path for the hadoop indexing task",2015-12-07T19:46:16Z
fe05545f58620e41922c6acde672342c834f2809,"Merge pull request #2055 from jkukul/documentation-fixes

Minor documentation fixes.",2015-12-07T18:50:38Z
8248f7f40cdcdb6debee2e0f2465c5e73c52d821,Minor docs fixes in 'Evaluate Druid' section.,2015-12-07T18:42:52Z
345299aefe09abb7dfb88f9048174e4e419266cd,"Merge pull request #2054 from AdrieanKhisbe/update-tutorial

Update Tutorial with new Zookeper Version and instructions",2015-12-07T15:24:15Z
5d10088e2d54a25c862650d085a830f59b143482,Update Tutorial with new Zookeper Version and instructions,2015-12-07T05:50:42Z
6cfaf59d7e899c77ee402e0a9a9437a8dcf72c31,add a unique string to intermediate path for the hadoop indexing task,2015-12-05T22:24:08Z
8e594a2e720e08bc96282a65a567286807a613d3,"Change service names in docs, examples to match defaults in the code.",2015-12-06T15:57:33Z
b44fedb1cbb31a517330bcfec58a6ef2dc496fe2,"Merge pull request #2051 from himanshug/fix_doc

update the examples for batch reindexing/delta ingestion to use ""intervals""",2015-12-06T06:36:13Z
efe3c9f4a59ed002ce2597db6ab57cf67d052ef4,"update the examples for batch reindexing/delta ingestion to use ""intervals"" instead of deprecated ""interval""",2015-12-06T06:22:20Z
5f2466afd1e143bb4a3e94188e51f23781f81bbb,"Merge pull request #2045 from metamx/updateEmitter036

Update mmx emitter to 0.3.6",2015-12-06T05:20:17Z
431469e9c1bc7ae4ce838f012f0f24dc3120f8b5,remove min/max aggregator factory which are replaced by double[min/max] aggregator factories,2015-11-23T05:19:36Z
b661f00dc88bc64d619e4d8836effdb9c586ce50,"Merge pull request #2050 from himanshug/update_license_hdr

unifying license header in all java files",2015-12-06T04:29:07Z
62ba9ade37f2ab96d3894a0eb622ed5e4f290a03,unifying license header in all java files,2015-12-06T04:16:23Z
b9760e1219a7a0475a009844111417343de97b36,"Merge pull request #2031 from liuqiyun/1914-v2

Druid Issue #1914: Added an injection test for ZkCoordinator.",2015-12-05T05:20:17Z
3781aa380f76118bd8367f6bf3ea64569eb6544e,Added an injection test for ZkCoordinator.,2015-12-05T03:56:22Z
ea5fdc30f8e56bbdafdf14a0212922110ab61924,"Update mmx emitter to 0.3.6
* 0.3.5 updated better logging messages
* 0.3.6 updates validator dependency to help prevent stale validator jars from being pulled in",2015-12-04T20:50:22Z
d21a6406956b19bfb9b7aa0d64e6767716be3948,"Merge pull request #2034 from b-slim/fix_cache_key

Fix getCacheKey for DimFilters",2015-12-04T17:13:06Z
20544d409bdddaba6c9246957fb3aea94496eb01,"Merge pull request #1988 from himanshug/multi-interval-batch-delta

support multiple intervals in dataSource inputSpec",2015-12-04T17:07:52Z
fb4ff3cf54319b5f22e73b867278962c4ce83707,fix getCacheKey,2015-12-03T20:43:10Z
c36edf6fdf6eda41ecfdaf81d80bf042f0a9c91e,"Merge pull request #2037 from metamx/updateIncrementalIndexTestCopyright

Update IncrementalIndexTest copyright notice",2015-12-04T03:47:56Z
020a5e708140c6a4abd4382b28910ef5a484c676,"Merge pull request #2024 from metamx/fairBigTaskQueueLock

Make the TaskQueue big lock fair",2015-12-04T03:32:53Z
61aaa090120c6455ae2ea9e5aee7016785180aaa,support multiple intervals in dataSource input spec,2015-11-18T19:39:02Z
86f0a36e838d095a4a373b1abc85b37ee68e842a,support multiple intervals in SegmentListUsedAction,2015-11-18T19:10:32Z
221fb95d07ae2559059aa85bf01169460fbfcf2e,add support for getting used segments for multiple interval in IndexerMetadataStorageCoordinator,2015-11-18T19:00:41Z
2ae34aea3a433138d71d903c1915d19a2a74df1f,"Merge pull request #2036 from gianm/no-doclint

Disable javadoc linting.",2015-12-04T03:12:00Z
fde4753e257d4f29462fdf26a0eeac356e684d55,Disable javadoc linting.,2015-12-03T22:06:22Z
4a70d8e775493d456e5c4591e2bab8b5f50aa433,ParseSpecValidator,2015-12-02T12:07:10Z
9d02f47201b93e2df6364ed96ffc8d08f458828b,Update IncrementalIndexTest copyright notice,2015-12-04T02:03:08Z
be8c6fafb048e622a313ab9b5b40a00f412d44ff,"Merge pull request #2017 from tubemogul/issue/63

fixes issue #63",2015-12-04T02:01:11Z
045df54404bc265a9a3f5ef35bd7d613428c8ac6,"Merge pull request #1961 from metamx/druidMetricsVersion

Add the druid artifact version to metrics when emitted",2015-12-04T01:34:57Z
b6cc2428e17ad5e49bcf780e32f122166c10fd44,fixes issue #63,2015-11-22T09:53:33Z
1ca3166a26baa050e7855bbc9b226e5972b7063b,"Merge pull request #2035 from gianm/scala-formatting

Update Scala formatting in intellij_formatting.jar.",2015-12-03T21:37:51Z
d7d438250808fd93568f3c7bb09ba8ece19bebe4,"Update Scala formatting in intellij_formatting.jar, and rename style to ""Druid Java and Scala style"".",2015-12-03T21:28:48Z
0eab8417cbe9117b86805c053c83065e08916a3b,"Merge pull request #2008 from codingwhatever/regex-search-query

Regex search query",2015-12-03T15:57:34Z
596b7ebd9ad6ba5278ff1d9cf1651cf6909a575f,Adding RegexSearchQuerySpec,2015-11-23T21:38:29Z
d02be6194da79726af83adfc689f73f2104d9004,"Merge pull request #1967 from metamx/realtime-metrics-improvements

Add datasource and taskId to metrics emitted by peons",2015-12-03T05:48:13Z
00c6027777e238dc750d8f8788bc83b640ee72a9,"Merge pull request #1986 from metamx/substring

fixes #1874 adding a substring extraction function, tests, and documentation",2015-12-03T05:45:47Z
e71436fb34a91db364cc1aa6cb24c6793e5e3cda,"Merge pull request #2018 from gianm/fix-fragment-search-query-spec

Fix serde for FragmentSearchQuerySpec and add some tests.",2015-12-02T23:38:11Z
68ef5f437a455a75f4b688b36a659985efcbc5de,"fixes #1874 adding a substring extraction function, tests, and documentation",2015-11-18T03:11:37Z
87357a0534f510773f6e06087fc4efbe8d74bf32,fixed #2001 GenericIndexed.fromIterable compares all values even when it's not sorted,2015-11-24T01:29:25Z
dbaaa6af9299f8e7cf59b0d24398304324dfd198,Make the TaskQueue big lock fair,2015-12-02T03:13:07Z
1eb821134639e161cdf10421b03f428a46e1b9b8,"Add datasource and taskId to metrics emitted by peons

This PR adds the datasource and taskId to the jvm and sys metrics
emitted by the peons.

fix spelling

review comment

review comment",2015-11-13T21:12:59Z
cd2cff24ff4f8466b1d236e55f8a61da98eaab15,Fix serde for FragmentSearchQuerySpec and add some tests.,2015-12-01T01:34:35Z
7c91219130a2b16cffdf9d5025bbd0bb8a09590f,adding more comments to why drops do not happen when there are no segments in db,2015-11-25T22:07:53Z
bad96537a94c04e8f37f540dc54a368ebfd88a31,"Merge pull request #2009 from jon-wei/multival_json_doc

Update data formats doc with info about JSON multi-value dimensions",2015-11-25T06:47:53Z
78e07ea591cfef1060a655a700d08ef67745c619,"Merge pull request #2004 from navis/DRUID-2003

fixed #2003 ColumnSelectorBitmapIndexSelector throws NPE for dimension not supporting bitmap",2015-11-25T06:12:30Z
95dca4440f85727cc98838d2e660a5bed1b23f72,Update data formats doc with info about JSON multi-value dimensions,2015-11-24T22:37:56Z
8e83d800d6f6f92022f93b4ca01de4dd7e461ee4,"Merge pull request #1881 from gianm/restartable-tasks

Restorable indexing tasks",2015-11-24T05:14:37Z
c73418c181124709a963b6dccc2a6e155754fa90,fixed #2003 ColumnSelectorBitmapIndexSelector throws NPE for dimension not supporting bitmap,2015-11-24T01:45:36Z
13af2601020b935cf95199f720a3ea32a17f249c,"Merge pull request #1957 from metamx/skip-incremental-segment

Ability to skip Incremental Index during query using query context",2015-11-24T01:32:57Z
f3185938a87f4f7c120fadb357c485230861d521,"Merge pull request #1997 from gianm/fix-nullable-actions

Switch TaskActions from Optionals to nullable.",2015-11-24T00:02:40Z
501dcb43fa32f78213cc7449b011c0ce2b61fdc3,"Some changes that make it possible to restart tasks on the same hardware.

This is done by killing and respawning the jvms rather than reconnecting to existing
jvms, for a couple reasons. One is that it lets you restore tasks after server reboots
too, and another is that it lets you upgrade all the software on a box at once by just
restarting everything.

The main changes are,

1) Add ""canRestore"" and ""stopGracefully"" methods to Tasks that say if a task can
   stop gracefully, and actually do a graceful stop. RealtimeIndexTask is the only
   one that currently implements this.

2) Add ""stop"" method to TaskRunners that attempts to do an orderly shutdown.
   ThreadPoolTaskRunner- call stopGracefully on restorable tasks, wait for exit
   ForkingTaskRunner- close output stream to restorable tasks, wait for exit
   RemoteTaskRunner- do nothing special, we actually don't want to shutdown

3) Add ""restore"" method to TaskRunners that attempts to bootstrap tasks from last run.
   Only ForkingTaskRunner does anything here. It maintains a ""restore.json"" file with
   a list of restorable tasks.

4) Have the CliPeon's ExecutorLifecycle lock the task base directory to avoid a restored
   task and a zombie old task from stomping on each other.",2015-10-28T04:07:38Z
36569094ce83c8604b06002d852467233e390c11,"EventReceiverFirehose: Drain buffer when closed, until empty.",2015-10-28T01:07:06Z
c0580bf06305c69f7bb3658badd91d9500e67f2b,"Merge pull request #1928 from druid-io/new-compares

New comparisons for Druid",2015-11-21T00:40:59Z
bec7dacd86f3f4b28bf3ec292390750556a9451c,"Merge pull request #1994 from himanshug/how_to_contrib_update

updating how to contribute guide",2015-11-20T18:33:34Z
666d7857875bd056d91ae84c498eb0b45e22420c,"Switch TaskActions from Optionals to nullable.

Deserialization of Optionals does not work quite right- they come back as actual
nulls, rather than absent Optionals. So these probably only ever worked for the local
task action client.",2015-11-20T17:09:49Z
7a89b2e1a6e43cba84905fba2af02066d698ed0b,add numRows to segment metadata query response,2015-11-20T07:12:39Z
5260783db46efc59f09ddb2d258123f030e70a91,updating how to contribute guide,2015-11-20T05:30:28Z
6305dfe1b91fbe06d34cc23771807ed25ed318a9,"Merge pull request #1991 from himanshug/sketch_agg_upgrade

datasketches module updates",2015-11-19T21:16:14Z
f99bad7988a93f464ee7cbf547ed19b6aba90e8f,reformat datasketches module to satisfy druid style guidelines,2015-11-19T07:07:03Z
fde9df272077319b8aacf0a552367d748cbfa054,"update to sketches-core-0.2.2 .
adds support for ""cardinality"" aggregator.
do not create sketch per event at ingestion time to make realtime ingestion faster",2015-11-10T07:40:01Z
24ba20c52f2f72ca063ac7b2ea194c1b42e14c32,"Merge pull request #1979 from metamx/update-docker-stuff

switch integration tests docker image to Java 8 + cleanup",2015-11-19T05:24:05Z
21c84b5ff7c7da089620ce35a5734690bb232008,"Merge pull request #1896 from gianm/allocate-segment

SegmentAllocateAction (fixes #1515)",2015-11-19T05:05:46Z
d93640bfcba821cec95cf1572b449fce45c39dd4,"Merge pull request #1974 from jon-wei/dim_order_merge

Allow IndexMerger to use non-lexicographic dim order when merging indexes",2015-11-19T01:51:34Z
e52c15606615d9aae0bdff2fde08f61a2eaf4afa,"Merge pull request #1880 from gianm/rtr-adjust

RTR: Ensure that there is only one cleanup task scheduled for a worker at once.",2015-11-18T23:12:55Z
60f649dab10d64ab16c318b6bfe373ec75c57ec6,"Ability to skip Incremental Index during query using query context

This PR adds adds the ability to skip incremental index when querying
results from realtime nodes. default behaviour is to include
incrementalIndex in queries.

review comment",2015-11-12T01:37:11Z
e3e615933637199322133593a85b27dbb1acc6e8,"Merge pull request #1985 from metamx/FixLookupCacheKey

Change LookupExtractionFn cache key to be unique",2015-11-18T18:13:55Z
7abe9994189af694bd9c7b3dc78040026d11c078,Change LookupExtractionFn cache key to be unique,2015-11-18T02:02:40Z
87c43fbf02ef4d53773b1e6fd483217c4b491566,"Merge pull request #1981 from rasahner/fixFormattingSchemaDesign

fix formatting in schema-design",2015-11-18T01:51:16Z
7545ab718841455650bc080bb053d9b5c7ca6ff5,"Merge pull request #1983 from metamx/fix-mysql-57

fix #1701 - MySQL 5.7 defaults break database character set check",2015-11-18T01:36:41Z
ba41f37ce1a9131a34dcb6cee8a0e1e7098f763a,fix #1701 - MySQL 5.7 defaults break database character set check,2015-11-17T23:50:30Z
8fcf2403e35382b26d326dacb2a0fbf5e3d6202c,"Merge pull request #1943 from metamx/realtime-caching

Enable caching on intermediate realtime persists",2015-11-17T23:06:43Z
a4ed2ce2d11a86ceef895759442c7322b44a9733,fix formatting in schema-design,2015-11-17T22:50:53Z
350fdbeec12158b822246ba6f8d144e21e849f32,switch to Java 8 + cleanup,2015-11-13T01:28:56Z
4afc62be2964f31d593a7c99fc4feaf8f8478db2,Allow IndexMerger to use non-lexicographic dim order when merging indexes,2015-11-16T20:38:56Z
8fa34ee671950275a4ba7b0edcf09c9f2928083d,"Merge pull request #1973 from metamx/cachemonitor-optional-injection

CacheMonitor - make cache injection optional",2015-11-17T21:02:06Z
9118b010c0462d7e409af6dabc3b478c957fd30c,"Merge pull request #1976 from noddi/feature/count-parameter-rules-history

Add count parameter to rules history endpoint.",2015-11-17T20:41:50Z
dbe201aeed51aafd9a5aca755be1cef159629a16,"Merge pull request #1929 from pjain1/jetty_threads

separate ingestion and query thread pool",2015-11-17T20:14:25Z
6c498b7d4ac8035acca36a07b39c977e094e4bf8,separate ingestion and query thread pool,2015-09-28T21:38:36Z
b0a444eafc7d0c9361ae97cdec6aab01ce69ccdd,Add count parameter to rules history endpoint.,2015-11-16T20:07:53Z
d7eb2f717efb6579499fd2021e4cf0831fcf2784,enable query caching on intermediate realtime persists,2015-11-10T18:23:56Z
71376efd575376c935d0c7d3cda796dc206e1e25,"make cache injection optional

allows enabling the CacheMonitor for all index tasks, even if some don't
bind any cache instance.",2015-11-16T18:30:32Z
0fb7e4e040a1a34bb306f7acc8efa90dfda6e43c,"Merge pull request #1975 from gianm/query-to-strings

Better toString for groupBy, segmentMetadata queries.",2015-11-16T21:08:50Z
57f213d536d232e28e121657e654d5433399bd1e,"Better toString for groupBy, segmentMetadata queries.",2015-11-16T20:49:40Z
acc1a215c71e914df7f816d5fb2570519589d7ef,"Merge pull request #1968 from metamx/fix-integration-tests

Fix ITUnionQueryTest failing on machines with less than 4 cores",2015-11-13T23:19:54Z
4486b3fe8b96e4493135cf7848ee38edb552cc81,"Fix ITUnionQueryTest failing on machines with 1 core

ITUnionQueryTest runs 4 realtime tasks and runs a unionQuery over them,
the worker is not able to run all the tasks concurrently on machines
with less cpu cores as it picks default worker capacity.
Explicitly specify worker capacity to avoid this.",2015-11-13T21:46:36Z
46527a96107603f4b47a8f7ed952361870c8528a,"Merge pull request #1954 from metamx/fix-stupid-aws-limit

EC2 autoscaler: avoid hitting aws filter limits",2015-11-13T18:52:35Z
846bef3d7a895934b7320a824208d7bf8ab1c59c,"Merge pull request #1964 from metamx/update-docker-stuff

update integration-test docker instructions for docker-machine",2015-11-13T00:52:57Z
bd7d2c9b3a7fdf0ebbfc0feeae6c9df09a28c64e,update integration-test docker instructions for docker-machine,2015-11-13T00:44:28Z
353e568cbd242915cdc93c029f2625f53a9a1372,"Merge pull request #1959 from jon-wei/indexadapter_getrows

Fix IncrementalIndexAdapter getRows() Iterable",2015-11-12T22:38:33Z
cdceaf2d269db79e8eb6c68702cb507a7807721a,Fix IncrementalIndexAdapter getRows() Iterable,2015-11-12T21:09:57Z
af34e9c8cbda63964e454c98e100a8dced3e87ab,Add the druid artifact version to metrics when emitted,2015-11-12T19:43:24Z
ef74cd394cf5cc585b8a1d2a5046b90afa9699ff,"Merge pull request #1960 from binlijin/master

optimize index merge",2015-11-12T19:38:20Z
4f46d457f181b08ab9b641ea4bb653e15c615ab4,"Merge pull request #1947 from noddi/feature/count-parameter-history-endpoints

Add count parameter to history endpoints",2015-11-12T18:23:44Z
148153b47c13feeb6f70875b593b80fa1a88a8d4,"Merge pull request #1897 from himanshug/new_sketch_aggregation

complex aggregator based on http://datasketches.github.io",2015-11-12T17:01:01Z
7788f7c2a1adb2ac13fa53ef0b9c61a1c7bfff3e,update doc with new thetaSketch api,2015-11-10T07:17:35Z
338f88b86b32056748e96b7ce39bfe65b34474af,"further simplifying the api, users just need to use thetaSketch as aggregator",2015-11-10T07:04:19Z
88ae3c43f984ae4932f58c82e0c917d8940bc5e3,"changing names to be explicit about theta sketch algorithm
old names are still valid though so as to be backwards compatible for now",2015-11-06T16:18:23Z
6c6a38cedb9e46af105b9aa54c8afc62ef5be6fd,adding datasketches aggregator to documentation,2015-10-30T20:53:24Z
9c569be11e66cd094ccfa9be744b377f0019fd7d,adding datasketches module to top level pom,2015-10-30T18:55:04Z
817cf41f5c090d9ab0d898b2c3bdabf362329819,druid aggregators based on datasketches lib http://datasketches.github.io/,2015-10-30T18:10:08Z
749ac12f88551207490a9b16a795fdfa08439050,EC2 autoscaler: avoid hitting aws filter limits,2015-11-11T21:43:48Z
286b8f8c6fc54d3cfd4a4e38fb5fb653bd8c0f35,optimize index merge,2015-11-12T03:08:54Z
465cbcf9a7c8b5280f9316dff5d9967b51ab165e,"Merge pull request #1956 from metamx/remove-unused-imports

Cleanup + remove unused imports",2015-11-12T01:36:47Z
e4e5f0375b538ac7e2a2f7c36d00bd861e584c44,"SegmentAllocateAction (fixes #1515)

This is a feature meant to allow realtime tasks to work without being told upfront
what shardSpec they should use (so we can potentially publish a variable number
of segments per interval).

The idea is that there is a ""pendingSegments"" table in the metadata store that
tracks allocated segments. Each one has a segment id (the same segment id we know
and love) and is also part of a sequence.

The sequences are an idea from @cheddar that offers a way of doing replication.
If there are N tasks reading exactly the same data with exactly the same logic
(think Kafka tasks reading a fixed range of offsets) then you can place them
in the same sequence, and they will generate the same sequence of segments.",2015-10-30T21:39:16Z
dc4ae59aafeb0b041426c9abe036aa2a70e01ada,"Merge pull request #1865 from noddi/bugfix/issue-560

Fix #560 - datasource segments summary shouldn't include replication.",2015-11-11T23:29:08Z
6e5d2c6745698a0fef277a5833abd5064194aee9,Add count parameter to history endpoints.,2015-11-11T11:36:43Z
9f7859867201678ee29d3dac681bc864f7920764,"Merge pull request #1950 from zhxiaogg/feature/ut_remote_task_action_client

add unit test for RemoteTaskActionClientTest",2015-11-11T20:29:54Z
8e743b70c62c353a877dbb3f0766d2fc6b426d01,"SegmentIdentifier, like a pre-DataSegment.",2015-10-30T20:30:16Z
e26f7fca360edae7bd8c7b65653637d801f2270d,cleanup cache interface,2015-11-11T20:23:11Z
fa6142e217e3b6e22ba21218bcfd86ec422cdf6c,cleanup and remove unused imports,2015-11-11T20:14:28Z
c197a4cf32e21e5a8e0fd3ea6fb6d07fd2234b88,"fix #1918, add unit tests for RemoteTaskActionClient",2015-11-11T18:00:08Z
abae47850a99ca7345bde6a9b053b397524e1f8e,Add backwards compatability for PR #1922,2015-11-11T18:27:00Z
b519fcf99bba41b9a52fa9d9e904acbfe236a0dd,redirect to overlord console by default,2015-11-11T17:54:22Z
9e12a501fee4e9d806df713cf2d5016ce0e877c2,"Merge pull request #1946 from gianm/local-storage-better-permission-error

Better error message when LocalDataSegmentPusher cannot create its directory.",2015-11-11T17:02:25Z
07157f9e9d07abdf9ea44543eeb932786fe053cc,"Merge pull request #1945 from dclim/hadoop-spatial-dim

fix spatial dimension transformer to work with hadoop",2015-11-11T04:01:20Z
f2c271e500d7763ded505393ab48c876d9da49ec,Better error message when LocalDataSegmentPusher cannot create its directory.,2015-11-11T03:47:37Z
fd0935ecb90c8e058a812ee6309286760f49dedd,fix spatial dimension transformer to work with hadoop,2015-11-11T02:16:51Z
e75c2a407d4257266251ad09aa7b21f2a18df6e8,"Merge pull request #1944 from druid-io/fix-doc

fix website rendering for this doc",2015-11-11T00:04:40Z
e923de3eea25f1ebd70e69cde1c3551938d1deeb,fix website rendering for this doc,2015-11-10T23:36:30Z
cf779946ef22f032b7657f53d696fc05b662d4bb,"Merge pull request #1791 from guobingkun/event_receiver_firehose_monitor

EventReceiverFirehoseMonitor",2015-11-10T19:09:42Z
a57cbfd2c36140a75a149013d7ae04748ac75f9b,"Merge pull request #1387 from metamx/enableShutdownLogging

Add special handler to allow logger messages during shutdown",2015-11-10T01:20:09Z
46bf1ba5efa535a323c442e4f5a5c32eae3058e9,remove unneeded,2015-11-10T01:03:00Z
8a8bb0369e2a1506cd993b4af0c3aa67310632ea,address more comments,2015-11-10T00:56:43Z
b99576d8541b0e7cfc0567c0d8a8c35190cf4c6e,rework compares again,2015-11-10T00:40:07Z
0b319093df7b7f6433c56b324ffab46f9286a37a,New comparisons for Druid,2015-11-06T20:21:51Z
afd67a39a10350010cc918d1f460a41800032e28,"Merge pull request #1940 from metamx/repackageGuiceJackson

Move Jackson Guice adapters into io.druid",2015-11-09T22:08:38Z
78b42c108750309c2e0014d7d22d9bdc853c1b80,"Merge pull request #1941 from guobingkun/custom_extension

add doc for bundling custom extensions with other Druid extensions",2015-11-09T19:32:33Z
b24eccfb9e4589d5ebea0043e0675fdacb98ff6e,add doc for bundling custom extensions with other Druid extensions,2015-11-09T19:09:32Z
1df4baf489435f838d808fe935918a4665b7df31,"Move Jackson Guice adapters into io.druid
* Removes access to protected methods in com.fasterxml
* Eliminates druid-common's use of foreign package com.fasterxml",2015-11-09T18:49:34Z
7816d6714820023000abda1b53dd1b30580eed72,"Merge pull request #1935 from gianm/unbuffered-ftr-logging

ForkingTaskRunner: Log without buffering.",2015-11-08T01:17:24Z
fe6efb636766206ec23c588fb85fbe94f1149f1f,"Merge pull request #1932 from gianm/data-schema-exclude-metric-names

DataSchema: Exclude metric names from dimension list.",2015-11-07T23:22:33Z
fc55314d1c43041f958cc522c72de6da1d46de8e,"ForkingTaskRunner: Log without buffering.

In #933 the ForkingTaskRunner's logging was changed to buffered from
unbuffered. This means that the last few KB of the logs are generally
not visible while a task is running, which makes debugging running
tasks difficult.",2015-11-07T23:16:51Z
8b5de492cc760fcfd798404a7465fbde40836678,Fix #560 - datasource segments summary shouldn't include replication.,2015-10-26T20:37:32Z
6b908a506136614db07b65e98ed26fc34f95a723,"DataSchema: Exclude metric names from dimension list.

Otherwise we could end up with a metric and a dimension with the same column name.",2015-11-07T01:57:41Z
61139b9dfa40bd04870252c33d301b387147bafe,"Merge pull request #1912 from b-slim/in_filter

Adding in filter",2015-11-06T22:47:47Z
c511273efd6cd391609a3db4bfdcd6096503370c,adding in filter,2015-11-04T22:15:14Z
e9533db987b57102370497635aac23cba8df05fe,"Merge pull request #1850 from metamx/friendlyBardCache

Allow setting upper limit on the number of cache segments a broker will try to fetch.",2015-11-06T18:25:49Z
dfbd0e2b60a14f93476d00e8576e027290c7306e,"Merge pull request #1925 from gianm/fix-index-generator

Fix reference to INDEX_MAKER in IndexGeneratorJob.",2015-11-06T17:56:30Z
0e75642e019fdf95fb3984019905888c09e73738,"Merge pull request #1923 from himanshug/fix_index_generator_job

remove LoggingProgressIndicator from IndexGeneratorJob",2015-11-06T17:26:06Z
cf8b9a861379f338c3fd7275ea1f60cffb9ce050,"Merge pull request #1920 from metamx/upgrade-curator

Update curator to 2.9.1",2015-11-06T17:25:27Z
75122dc396b3058408287533f6d5d6431849e436,Fix reference to INDEX_MAKER in IndexGeneratorJob.,2015-11-06T17:19:58Z
6bed63312118eb2dbd34cad78de4fa90b8810453,"do not use LoggingProcessIndicator in IndexGeneratorJob because that uses Stopwatch methods from guava not available in older guava versions, this makes the behavior same as LegacyIndexGeneratorJob",2015-11-06T06:40:51Z
929b981710c6845685701c7df6f1a1a9cf92c429,Change DefaultObjectMapper to NOT overwrite final fields unless explicitly asked to,2015-11-06T02:09:47Z
c89681824199afa432936d299c3e639815b6bda7,"Update curator to 2.9.1

Lots of bugfixes since 2.8.0
- https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12314425&version=12333324
- https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12314425&version=12332392",2015-11-05T21:05:06Z
379ca87e6ad888c60da7ed2149f393ac5320a254,"Merge pull request #1919 from metamx/old-todo

fix a very old todo",2015-11-05T21:33:06Z
223d1ebe9f8afd56168e67d1518676dc0d13c219,fix a very old todo,2015-11-05T21:00:30Z
7cbff731e32cc33efecd994b53f35be4e9c33f29,"Merge pull request #1917 from gianm/math-is-hard

RemoteTaskActionClient: Fix statusCode check.",2015-11-05T19:25:41Z
cb409ee9287a60e77a130458cc1be3fc312682f9,RemoteTaskActionClient: Fix statusCode check.,2015-11-05T18:03:49Z
2d4d3a40de2730366587df39a16958e69fbb8895,"Merge pull request #1913 from druid-io/fix-zkc

fix zkcoordinator inject",2015-11-05T05:34:30Z
4efc90dda3d9d550ebda3a34f14c623b6e72fc33,fix zkcoordinator inject,2015-11-05T01:30:17Z
3c3ea128ccb1722ad01099ae31bc2516f3731171,"Merge pull request #1895 from druid-io/cleanup-codebase

Cleanup the Druid codebase",2015-11-04T23:16:33Z
8f231fd3e3850f49ac1e38bd8c515296886f879b,cleanup druid codebase,2015-11-04T01:03:42Z
1cbc514eb5145b4697a504001f8defc37232fba6,"Merge pull request #1719 from se7entyse7en/feature-rackspace-cloud-files-deep-storage

Add Rackspace Cloud Files Deep Storage Extension",2015-11-04T19:13:25Z
861338c5e96a2c5769b0d87684117a45c65e4f56,"Merge pull request #1904 from rohitkochar/doc

modifying the documentation as per Issue#1903",2015-11-04T17:48:45Z
af12c4488044a4203ab7fd738b6e4dee5744e701,"Merge pull request #1911 from himanshug/fix_topn_doc

since topN is descending by default, inversion makes it ascending",2015-11-04T17:38:49Z
67c218bed6a098eec1d911611d82b483aad183dd,"since topN is descending by default, inversion makes is ascending",2015-11-04T17:36:49Z
c924f9fe56ddd92b3115720921f3b303a55af862,Added cloudfiles-extensions in order to support Rackspace's cloudfiles as deep storage,2015-09-10T10:18:01Z
69a3b38f811e47c561356f3afa5aab1ae0406b01,made changes as per review comments,2015-11-04T05:40:28Z
5eff83833f19bf502ced85e6281bcdc9469fd6d6,"Merge pull request #1906 from guobingkun/fix_curator_compress_doc

Fix curator compress doc",2015-11-03T23:24:09Z
3ee28c35cec89d9968a193fd25e3aa59bad5c8f0,fix curator compress doc,2015-11-03T22:48:59Z
8defe292702780f7bb3c0de69a74a4857bc92d2d,"Merge pull request #1901 from guobingkun/fix_typo_and_rename

Fix metadata typo and rename default extension directory",2015-11-03T22:02:11Z
3b3d88bd03c54044f9190bd34f14785c832b8cd4,"Merge pull request #1857 from noddi/feature/intervals-route

Queryable intervals",2015-11-03T21:19:04Z
962f65cc76d91f5f61df98c81be17b1a58631450,fix metadata typo and rename default extension directory,2015-11-02T23:29:48Z
cec09a9967df109263281e332b5e4bfca7443b7d,"Merge pull request #1804 from himanshug/objectify_index_creators

static to non-static conversion for methods in Index[Merger/Maker/IO]",2015-11-03T19:25:32Z
2a617c777e5936964615ed3d293a29ef8d1c4739,modifying the documentation as per Issue#1903,2015-11-03T16:18:19Z
f681c84014a70f8f33ccaf2a20f6411c614590a4,"Merge pull request #1892 from navis/DRUID-1878

Make 'search' filter have a case sensitive option (for #1878)",2015-11-03T15:11:00Z
e5b2a68a704252b06b878a783fda689f4e5acf40,"Merge pull request #1902 from himanshug/approx_histo_blog

add metamarket histogram post to approx-histo doc",2015-11-03T07:26:40Z
c74a4490e1fa8347b7676292029041ba59bf8c5f,add metamarket histogram post to approx-histo doc,2015-11-03T07:19:22Z
84f7d8d2640184b789b941bf80c521edd031eac4,making static final variables in HadoopDruidIndexerConfig upper case,2015-10-21T17:53:37Z
8b67417ac80358da1d2e73026646ce218879918d,"make methods in Index[Merger,Maker,IO] non-static so that they can have
appropriate ObjectMapper injected instead of creating one statically",2015-09-19T02:54:51Z
f4d6e116d6d42c96341908f3d27e168f68c85869,"Merge pull request #1898 from rasahner/longerTimeoutsWikipediaQueryTest

wikipediaQueryTest: use big timeouts in hopes of preventing spurious failures",2015-11-02T23:44:00Z
0d85774a27c7e44a61818d3be0444890014af4aa,"Merge pull request #1899 from itsmee/docs-historical-improvements

Docs improved: more details about caching and memory for segments on historicals",2015-11-02T20:48:56Z
1d3edf0690de0a0c3a64d01e46007d71dfc34d98,"Merge pull request #1900 from metamx/fix-doc

fix doc - correct default value for maxRowsInMemory",2015-11-02T17:26:38Z
e03fc2032f1c01181dc839240ed5761a03ec5103,changed equals/hashCode implementation,2015-11-02T08:21:35Z
efc49da073bf5ef2da319b3efbdabfbc1c575d2a,fix doc - correct default value for maxRowsInMemory,2015-11-02T06:09:24Z
69c86716d6d02d3016a3d5fd6cbc342fd086035c,addressed comments,2015-11-02T05:21:29Z
95a5ae0373ada64529144304ada9ad3ea4a8cbbb,Docs improved by adding more details about local cache and memory for segments on historicals.,2015-11-01T19:56:28Z
0eead6154a3dc8717bdc5d4289deb9784d618625,"Merge pull request #1893 from guobingkun/move_distribution_artifacts

move distribution artifacts to distribution/target",2015-10-31T20:37:08Z
040db413c59593f2d7b56b9543f1b0261b29ccb7,wikipediaQueryTest: use very big timeouts in hopes of preventing spurious test failures,2015-10-31T14:13:02Z
f90ddfdb89290b2047dd666d3bf6d0d8afff2430,"Merge pull request #1745 from himanshug/numbered_to_elastic

making NumberedShardSpec elastic",2015-10-30T23:01:03Z
e8692380c7a73c6fda4471ccc288f24e442448ae,"Merge pull request #1894 from guobingkun/airline_option

fix pull-deps remoteRepository option",2015-10-30T22:43:16Z
7d52a2a86e2e2089183aed10e1d869eb2cc9bc6c,"Merge pull request #1888 from metamx/router-cancellation-forward

forward cancellation request to all brokers, fixes #1802",2015-10-30T22:00:45Z
dffa89a5bf70de9330755341de854d9863493352,move distribution artifacts to distribution/target,2015-10-30T15:01:14Z
c3b6fcce9d796a741d2a5e5e0b1c95b23aed1c19,"Add EventReceiverFirehoseMonitor

add an EventReceiverFirehoseMonitor so that we can monitor how many
events have been queued in the EventReceiverFirehose and get a sense
about whether the firehose is under too much pressure.",2015-09-23T18:07:04Z
657a5ac346bcf9779d0ee78bc8b3f009d66a0346,fix pull-deps remoteRepository option,2015-10-30T15:48:18Z
6de51e022d083f68db66460179e36d2cb48f155b,Coordinator - add intervals route.,2015-10-24T15:23:43Z
032c3e986d023b3b06ead895e86e1d390e54afca,Make 'search' filter have a case sensitive option(#1878),2015-10-30T07:16:46Z
25a0eb7ed5b60a42c4a6a7d8f1459e5cc10c4f71,"Merge pull request #1799 from dclim/nested-groupby-aggregator-fix

Support multiple outer aggregators of same type and provide more help…",2015-10-30T01:01:31Z
149333d77dac415c950b8c6c7c6546ecdb96f22d,"forward cancellation request to all brokers, fixes #1802",2015-10-09T04:50:32Z
726f39c63aa798eb221679e101fb60dcce741cfc,"Merge pull request #1890 from gianm/gitignore

.gitignore new distribution artifacts",2015-10-29T22:29:53Z
022a577b7b7a21726c9f4ab669ad5dc58f57e979,.gitignore new distribution artifacts.,2015-10-29T19:44:18Z
194f632b004adef1cba2fe3435da548713d09e16,Check for non-daemon threads when CliPeon exits,2015-10-14T17:45:49Z
dfce14ed17634cd814b99c5318654f387e982cc7,Allow setting upper limit on the number of cache segments a broker will try to fetch.,2015-10-23T18:34:35Z
03d1d58088e4d4c7bb532fc3b0a1d8864867362a,"Merge pull request #1889 from metamx/update-server-metric

update server metrics and emitter version",2015-10-29T17:31:13Z
dcd4468156a00343f8dc797ef8af021ea5c1e4f9,"update emitter version

contains changes -
- https://github.com/metamx/emitter/pull/9
- https://github.com/metamx/emitter/pull/13
- https://github.com/metamx/emitter/pull/12
- https://github.com/metamx/emitter/pull/10",2015-10-29T12:13:03Z
20a3ebc022cbdc46dd98a767987e6e5129ef975c,"update server metrics version

- fixes Sigar loading for JvmCpuMetrics
https://github.com/metamx/server-metrics/pull/16

update server metrics",2015-10-23T14:56:22Z
16ae8866b86992ba5207b90fe70cf8113d721b95,Log and continue on failure to schedule cleanup for missing workers at startup.,2015-10-28T15:10:48Z
56e0709da9d2a80a7be4de74c22950141fc5d439,"Merge pull request #1882 from redBorder/master

Update Ruby libraries in docs",2015-10-28T15:06:46Z
a2510c9b0bfc7d34a3290bb99e9cbb05523541a5,Update ruby-druid URL,2015-10-28T09:31:30Z
04c5d0f8e2054b4189550bd9df766e1cb3e40844,Update Ruby libraries in docs,2015-10-28T08:08:26Z
513bc76252f532e94216321a61e36df2e91bdd26,"RTR: Ensure that there is only one cleanup task scheduled for a worker at once.

This is accomplished by making sure that scheduleTasksCleanupForWorker is only called
from the PathChildrenCache event thread, having it cancel existing cleanup tasks when
it adds a new one, and having tasks check on finish that the thing they are removing
from the task list is actually themselves.",2015-10-28T04:16:37Z
59872bd0cdc443d6f1a71742d57fa9a1eee87a42,"Merge pull request #1809 from metamx/fifoPriorityExecutorService

Make PrioritizedExecutorService optionally FIFO",2015-10-27T22:19:32Z
ea2267e08c1abba42eaee5de139f02589ce7c2a6,"Merge pull request #1868 from gianm/fix-announcements

Historical and MiddleManager server announcements should not remove parents.",2015-10-27T21:50:05Z
060402a2165cb7fb5aff7549e32e9f5b4578dc13,"Merge pull request #1855 from himanshug/fix_having_specs

fix [GreaterThan,LessThan,Equals] HavingSpecs",2015-10-27T21:46:04Z
7df7370935dde662e50b094ee1d09ff3203d0662,"Merge pull request #1862 from metamx/indexingServiceMMGone

Add timeout to shutdown request to middle manager for indexing service",2015-10-27T21:38:01Z
7a2ceef690959e4d7e0377e45dcbe9888a2204ef,"Add special handler to allow logger messages during shutdown
* Adds a special PropertyChecker interface which is ONLY for setting string properties at the very start of psvm",2015-05-22T23:01:34Z
ecdafa87c53b752c45fee80f78f6523509b4cb35,Make PrioritizedExecutorService optionally FIFO,2015-10-07T17:10:57Z
67d58f6d8d16bd4b198ad933733bbeef4099bf7f,Update CoordinatorRuleManager for http-client 1.0.4,2015-10-27T21:08:45Z
44a2b204df6f976ec1740e6c89932c88f6206326,Add timeout to shutdown request to middle manager for indexing service,2015-10-26T18:49:20Z
a71c7270b9d3468d1184c25311e6669290ea4505,"making [GreaterThan,LessThan,Equals] HavingSpecs more robust by carefully using long vs float for comparison",2015-10-23T21:20:48Z
4b92752deb899eb11240ea8335846abab5ce4f9c,"Historical and MiddleManager server announcements should not remove parents.

Removing parent paths causes watchers of the ""announcements"" path to get stuck
and stop seeing new updates.",2015-10-27T06:09:38Z
4f746ddf6345ee23e87d897d39893df2fefc664a,"Merge pull request #1864 from himanshug/hdfs_storage_hadoop_version

hdfs-storage refer to top level property for hadoop version instead of hardcoding to 2.3.0",2015-10-27T06:25:53Z
c0eb4858804a7bdb6ca6839f91cb4de50db2a8f1,"Merge pull request #1867 from himanshug/hdfs_class_setup_test_fix

fixing hadoop test scope dependencies in indexing-hadoop",2015-10-27T06:21:45Z
aeffeaf3e24995d232c7c4beb339707f94ddd941,fixing hadoop test scope dependencies in indexing-hadoop,2015-10-26T20:47:45Z
c523733c3fbf53daeca953e117b29a90c71a688d,"Merge pull request #1859 from rasahner/baseOnCommunity

some changes for support of our integration tests",2015-10-26T21:19:26Z
e9cfb7f46f5c49a8bd63469adecf99e7d35fb6b9,refer to top level property for hadoop version instead of hardcoding 2.3.0,2015-10-26T20:51:48Z
ea4ed5692ccb086e0c15d42f64ecc708d07e9527,"Merge pull request #1863 from guobingkun/add_loadqueue_full_doc

[doc] add description for /druid/coordinator/v1/loadqueue?full",2015-10-26T19:30:37Z
44aad069da9eb29aacd33472c01397df9f78f06d,add description for /druid/coordinator/v1/loadqueue?full,2015-10-26T19:19:13Z
7e1cde25b675033e33cec1f3fd0083dd106a51cc,"Merge pull request #1820 from himanshug/doc_files

Removing the md files created for redirection",2015-10-26T16:37:11Z
5a082b2f5e540adf4ee90d44fa64f27acadd5832,"Merge pull request #1824 from metamx/UniformGranularitySpecHashEquals

Add hashCode and equals to UniformGranularitySpec",2015-10-26T16:34:01Z
5f23703216601ab01a0471a0740215c0d12f8e0d,"Merge pull request #1638 from guobingkun/remove_maven_client_code

Remove Maven client at runtime + Provide a way to load Druid extensions through local file system",2015-10-26T16:30:05Z
6c9ba72dea8d76e0c5159a3f015c8ace89e57f17,some changes for support of our tests,2015-10-22T21:39:30Z
f88d59b5c014ed03a0d4687dca0135630a55c01d,"Merge pull request #1854 from b-slim/patch-2

Fix documentation about lookup",2015-10-23T23:49:08Z
16f84161da5062c0da377b64072f7f30ff63b770,Fix documentation about lookup,2015-10-23T23:40:54Z
2c3753ccca3d03cb6277fee13731dbd48e9c4eb0,"Merge pull request #1815 from metamx/jar-upload-race

Fix Race in jar upload during hadoop indexing",2015-10-23T19:34:23Z
72c408cf2d66ad8695c576f16ed327e7d534dedf,"Merge pull request #1770 from metamx/merge-time

Add segment merge time as a metric",2015-10-23T05:03:41Z
853f95f64cea84f18079a4e607e2106a08012d65,"Merge pull request #1845 from metamx/moreVerboseRuleAuditLogging

Add more verbose logging to SQLMetadataRuleManager",2015-10-22T21:12:46Z
6a7f8fa054b5ec3088e541f5c7ad528128c65d92,"Merge pull request #1846 from metamx/notifyWhenSegmentPollStarts

Add debug logging to start of segment manager polling",2015-10-22T18:52:26Z
3641a0e55380da227e024e0ce966ddf1e8c8e355,"Fix Race in jar upload during hadoop indexing - https://github.com/druid-io/druid/issues/582

few fixes

delete intermediate file early

better exception handling

use static pattern instead of compiling it every time

Add retry for transient exceptions

remove usage of deprecated method.

Add test

fix imports

fix javadoc

review comment.

review comment: handle crazy snapshot naming

review comments

remove default retry count in favour of already present constant

review comment

make random intermediate and final paths.

review comment, use temporaryFolder where possible",2015-10-09T15:17:56Z
7cecc550454c7846a659fc942f35f84cbe24812c,"Add segment merge time as a metric

Add merge and persist cpu time

Fix typo

review comment

move cpu time measuring to VMUtils

review comments.",2015-09-24T11:30:14Z
58a4d39b8f4ddde92520f0909052ba6b590d4f40,"Merge pull request #1843 from gianm/config-doc-fix

""druid.manager.segment"" should be ""druid.manager.segments""",2015-10-21T23:20:55Z
6ceab03fc46651dc89617dedd3b89c758eddef78,Add debug logging to start of segment manager polling,2015-10-21T23:15:18Z
1cad5713545463aec86f858d7be285523f4c4e18,Add more verbose logging to SQLMetadataRuleManager,2015-10-21T23:11:40Z
d068ec3b9d02426de41cf47197a9f79b88d7f7e1,"""druid.manager.segment"" should be ""druid.manager.segments""",2015-10-21T22:50:07Z
4914925d659068877665b26ccb4c53076db8f3a8,"New extension loading mechanism

1) Remove maven client from downloading extensions at runtime.
2) Provide a way to load Druid extensions and hadoop dependencies through file system.
3) Refactor pull-deps so that it can download extensions into extension directories.
4) Add documents on how to use this new extension loading mechanism.
5) Change the way how Druid tarball is generated. Now all the extensions + hadoop-client 2.3.0
are packaged within the Druid tarball.",2015-07-08T03:51:44Z
b7c68ec4495d8426e1b99b85a4ed7104feddcd38,"Merge pull request #1842 from metamx/DRUID-1841

Do not pass `druid.indexer.runner.javaOpts` to Peon as a property",2015-10-21T18:15:36Z
8dd30e6e184fd99a9b8ac425163dde3cbc27ece2,"Merge pull request #1832 from guobingkun/improve_granularity_doc

add examples for duration and period granularities",2015-10-21T18:13:24Z
2de5e9cefbf4dd281e29ef890081e813058d6b00,add examples for duration and period granularities,2015-10-15T21:23:23Z
e4ac78e43dc3b1efdb68769db7911bed3f592eb2,bump next snapshot to 0.9.0,2015-10-20T18:44:26Z
0292db648d83e03bffe4f0bbd9fcfb49fce60aed,"Merge pull request #1833 from metamx/improve-log

Improve alert message in CachingClusteredClient - Add Datasource info.",2015-10-20T20:40:57Z
532e1c9fd56a9ed5c3c0402b2d9d553492ecc166,"Do not pass `druid.indexer.runner.javaOpts` to Peon as a property
* Still places `druid.indexer.runner.javaOpts` on the command line, but the Peon no longer tries to have the property `druid.indexer.runner.javaOpts` set
* Fixes https://github.com/druid-io/druid/issues/1841",2015-10-20T16:04:38Z
092b5b19d24a9df5b5b83fa4beb174e238ec0a7c,"Merge pull request #1838 from druid-io/update-paper-again

more edits to radstack paper",2015-10-19T02:53:31Z
c40dd73a5952c07f163a0ef580301f9347cfc429,more edits to radstack paper,2015-10-19T02:52:44Z
170cce69d4facdd24bd34bb34d65f2aa69110840,"Merge pull request #1834 from guobingkun/fix_doc

fix ingestion faq link",2015-10-19T00:31:22Z
ccd17f818a1d12a3928868701d4556bfac4b4dd9,"Merge pull request #1837 from druid-io/update-paper

add more details to radstack paper",2015-10-19T00:31:08Z
89785b2f528ea46b80699b90d3515952652a86a2,add more details to paper,2015-10-19T00:30:24Z
620e334d0fd7a2871c05ca0f00085463eba06013,fix ingestion faq link,2015-10-16T15:14:14Z
bf214f23b29373d7ac8dc190d00162b0a446731d,Improve message for alert - Add Datasource info.,2015-10-16T14:13:21Z
46ecdfa7573f7bf9af6ee18d5473fe6d0fb201ca,add comment explaining logic,2015-10-15T22:04:06Z
28d7233b3e0a9763039643f4961b344058ed3b6d,"Merge pull request #1786 from rasahner/testEnhancements

enhance test support and update realtime test to use serverTime",2015-10-15T21:32:23Z
ff0fbec40a329068c0ca2335bf386d05f9bb1853,"Merge pull request #1831 from rasahner/lookupLookup

fix doubled word",2015-10-15T21:32:00Z
83d31844db35a80b2b5374466da685cc59a0e459,fix doubled word,2015-10-15T20:59:07Z
f31ae897241353139e21bc88640ef5f57dc81d17,enhance test support and update realtime test to use serverTime,2015-09-29T20:48:37Z
4c2c7a2c370de18c4d0fa877036a839ee1d6264d,update version to 0.8.3,2015-10-15T04:40:55Z
a68397adce039306b0e27fe36217a15aa97ee0cc,"Merge pull request #1829 from metamx/update-coveralls

update coveralls plugin",2015-10-14T19:52:26Z
5a98d4e650168b23312930c9a8647f0ef389dc48,update coveralls plugin,2015-10-14T17:25:23Z
f432b8e3f9fd714b9b64ba0d8cef7db65dd8a6ac,"Add hashCode and equals to UniformGranularitySpec
* Also add hashCode != 0 to AllGranularity and NoneGranularity",2015-10-13T21:56:05Z
c9d699404016c03c2209dd33e393f610d8fadd14,"Merge pull request #1821 from himanshug/storage_adapter_update

cache max data timestamp in QueryableIndexStorageAdapter",2015-10-13T17:52:43Z
febf2645316df03730a5e0ca50678dd012a07136,"Merge pull request #1822 from himanshug/outer_query_multiple_interval_fix

support multiple non-consecutive intervals in outer query of nested group-by",2015-10-13T17:44:52Z
273ec21d3d5c34256ceb4a8e4a6a8ca026d09c24,"Merge pull request #1811 from metamx/ServerDiscoverySelectorIPv6

Server discovery selector ipv6 friendly",2015-10-13T17:42:05Z
75061dad673acc05b992c068990ff19091382983,"Merge pull request #1823 from himanshug/datasource_pathspec_querygranularity

For dataSource inputSpec in hadoop batch ingestion, use configured query granularity for reading existing segments instead of NONE",2015-10-13T17:28:15Z
490de1f98ae9691ab8f4dee59033fcb8783a9721,support multiple non-consecutive intervals in outer query of nested group-by,2015-10-12T21:01:49Z
0368260018cfcd7f59f996a0dc4bf7d97ca038ee,"For dataSource inputSpec in hadoop batch ingestion, use configured query granularity for reading existing segments instead of NONE",2015-10-13T03:19:44Z
fbba30eb604b7354da936cc50ffa14adba238450,"cache max data timestamp in QueryableIndexStorageAdapter so that TimestampCheckingOffset
does not have to get it per cursor.",2015-10-09T14:53:22Z
24f33938d8899fd983c5ba1a24df785113b31561,Removing the md files created for redirection,2015-10-12T20:21:55Z
bf11723a529327bb987825c88e50bece9b451736,Update usages of io.druid.client.selector.Server to build URL or URI directly instead of using String.format,2015-10-12T18:22:23Z
f4e4dac43433cf262e14a1a0bc816961b1f3e223,"Merge pull request #1818 from metamx/moreSerdeTestsForLookupExtraction

Add hashCode and equals to stock lookups",2015-10-12T17:55:38Z
8ed5d2c06a4741277058450c4d592fa967b4ae21,Add hashCode and equals to stock lookups,2015-10-12T17:29:39Z
95d59b9bc39eede3a75341c60c687ac8bed568b2,"Merge pull request #1812 from metamx/bumpServerMetricsVersion

Bump server-metrics to 0.2.5 to catch a few fixes.",2015-10-09T18:22:25Z
968b640261f2f03e73d333a2c6255ed9b9a029fb,"Merge pull request #1814 from gianm/rt-docs

Adjust realtime constraints in the docs.",2015-10-09T17:59:31Z
933cbdf78063c3f792937be4537532925792a0fa,Adjust realtime constraints in the docs.,2015-10-09T17:51:25Z
e9b81430f4c6f18cd364e25faddf1b15c60df29b,Bump server-metrics to 0.2.5 to catch a few fixes.,2015-10-08T18:05:51Z
283ddfcf71ef68fc88bd590a1cf70439b51fd225,"Merge pull request #1808 from metamx/revert-jetty

Revert ""update jetty to 9.2.13.v20150730 (latest Java 7 compatible ve…",2015-10-08T17:08:23Z
e450877a7889a86497c8cd9be377e3433ac35997,Make ServerDiscoverySelector more IPv6 friendly,2015-10-08T17:03:50Z
693e14a14d350dbabcbd88ef999123a6d7f2d27a,Add unit tests for ipv6 in ServerDiscoverySelectorTest,2015-10-08T16:53:05Z
38664904e27dff3febd776fd705b2b5a6dbf7258,"Revert Jetty version

update to 9.2.10, latest version that is working

revert to jetty 9.2.5, last known good version",2015-10-07T15:13:51Z
e797d222c7321d2de4ae53bbaedcbba60584603f,"Merge pull request #1806 from himanshug/fix_index_exceeded_msg

Fix index exceeded msg to give maxRowCount as well",2015-10-07T21:04:56Z
020a706ac48891cc57d04b295a0ba0c1f2964661,"Merge pull request #1800 from metamx/hybrid-cache

Hybrid L1/L2 cache",2015-10-06T22:18:07Z
b11c0859e83b61d78931f72f375864a89a364221,hybrid l1/l2 cache to combine local and remote cache,2015-10-01T15:25:03Z
2737fd83f545b7cbdbe8ab897ff88fbfedcdbf7a,in the IndexSizeExceededException put maxRowCount to confirm if it is correctly picked up from configuration,2015-10-06T18:46:54Z
8654732ef606d81e4b6d9925e9bf9c243fa1cbfb,"make IndexSizeExceededException constructor take formatString and arguments than just fixed String
like ISE, IAE etc",2015-10-06T18:44:22Z
b5737a233a14bde4bd07812bdda201b17fc099e5,"Merge pull request #1801 from guobingkun/clientInfoResource

Fix ClientInfoResource",2015-10-06T14:53:44Z
d8a1dd8d684b737dde99bd079e2389e32ed23a29,"Merge pull request #1765 from metamx/brokerCpuMetrics

Add CPUTimeMetricQueryRunner to ClientQuerySegmentWalker",2015-10-05T17:51:30Z
2bc4aed1e56667dbb60a5ce8cb436335e4d19a91,Add CPUTimeMetricQueryRunner to ClientQuerySegmentWalker,2015-09-23T00:42:26Z
57c8e564514b21bd0a56abb12701299be3327717,"Fix ClientInfoResource

Fix ClientInfoResource so that it doesn't return empty list for overshadowed segments",2015-09-30T05:15:23Z
166c4fcf46128a72a0c320eab40b38384aa1e59c,"Merge pull request #1795 from metamx/announcerTestTransactions

Try and make AnnouncerTest a bit more predictable",2015-10-02T18:04:33Z
42e971d1c133c75af4afb5db7cd4ad702308d30e,"Merge pull request #1797 from himanshug/fix_ingest_segment_firehose_ut

ingest segment firehose ut",2015-10-02T16:27:22Z
7d635a2ce2c4eb287201cce7b03072be20d1ab01,Try and make AnnouncerTest a bit more predictable,2015-10-01T18:52:04Z
e5b3226b62fa0dcb59a33adde2e8ee9cb981b240,"Merge pull request #1793 from himanshug/fix_chunking_link

fixing the link to chunkPeriod doc",2015-10-02T14:10:11Z
8871e94be2784b38e3f4f8f37296a1096d1fbea1,"Merge pull request #1798 from metamx/rollbackAWSSDK

Update httpcomponents and aws-sdk",2015-10-02T05:02:35Z
5db4c5a089a87fd0b142485faeb40cbb0f59bc33,move cache bindings into a dedicated module,2015-10-02T02:03:41Z
261465fac2e76b61b78fa3c84588f9f14b19ccd4,"Merge pull request #1794 from metamx/update-libraries

update R / Python clients",2015-10-01T22:34:04Z
f4e0a76820be2b230d5c672a619c5173a258c11c,Support multiple outer aggregators of same type and provide more helpful exception when the same inner aggregator is referenced by multiple types of outer aggregators,2015-10-01T21:15:12Z
e2b16ab281d64cf285216e5f9d142e981b5426c1,update java-util dep version,2015-10-01T19:54:40Z
b9740a727b1e4341fd313bcc60c4230e01e5f55f,unit test for IngestSegmentFirehose,2015-10-01T15:45:26Z
bdae0cb135e8966476028c681abcd66088595a6f,Update httpcomponents and aws-sdk,2015-10-01T20:09:56Z
9006e255ef868994a4c4b9515907e276d168c8b4,fixing the link to chunkPeriod doc,2015-10-01T18:03:46Z
faf4c865d5c6d91d760afe058168f535105381ea,update R / Python clients,2015-10-01T17:42:09Z
4da1575680fa4c6f0f231c8d422663b544964f82,"Merge pull request #1792 from gianm/groupby-hyperunique-postagg-test

GroupByQueryRunnerTest for hyperUnique finalizing post aggregators",2015-10-01T13:07:56Z
774765dc40af17ffe79a84cd4e94d5b0aaff5659,GroupByQueryRunnerTest for hyperUnique finalizing post aggregators,2015-10-01T04:09:29Z
e3bb93e8c779a06b26b208c9e08915e87ca1e61a,"Revert ""Merge pull request #1781 from dclim/nested-groupby-multiple-same-aggregator-fix-v2""

This reverts commit dae488b7c001f11f88584598fcfa15026880794d, reversing
changes made to 397be4b897ccbd84d778218224d7dabb3db0a102.",2015-10-01T04:03:53Z
dae488b7c001f11f88584598fcfa15026880794d,"Merge pull request #1781 from dclim/nested-groupby-multiple-same-aggregator-fix-v2

Fix failure in nested groupBy with multiple aggregators with same fie…",2015-10-01T02:28:34Z
8e20a1e1f3df6d3588ab1e7768aecbf267481365,"Use DoubleSumAggregatorFactory instead of CountAggregatorFactory, add test for non-integers",2015-09-30T23:11:39Z
70ae5ca922411cb8f1a82c6d9f06df80f8ab449f,"Fix failure in nested groupBy with multiple aggregators with same fieldName

Version 2 - Throws an exception if an outer query references an
aggregator that doesn't exist in the inner query, and then uses the
inner query aggregator names to form the columns for the intermediate
incremental index.

Also deleted all the getRequiredColumns() methods which are no longer
being used.

We do something wacky by adding an aggregator factory for the post
aggregators when building the intermediate incremental index, otherwise
queries on post aggregate results fail because the data isn't in the
incremental index.

Closes #1419",2015-09-22T21:45:00Z
397be4b897ccbd84d778218224d7dabb3db0a102,"Merge pull request #1790 from druid-io/kafka-extraction-namespace-pomCleanup

Cleanup kafka-extraction-namespace",2015-09-30T20:01:48Z
bc22d4ff6ce1553793e66537c46895e1ff991ee1,"Cleanup kafka-extraction-namespace

Remove extra build defines in kafka-extraction-namespace's pom.xml",2015-09-30T18:33:04Z
8199ecf1a401e0f9f9402a864786890903492163,"Merge pull request #1782 from jon-wei/smq_cachekey

Add analysisTypes to SegmentMetadataQuery cache key",2015-09-29T22:51:35Z
41ff271339462a467d0db5db3fcfa401f25be8f5,Add analysisTypes to SegmentMetadataQuery cache key,2015-09-28T21:11:13Z
2d847ad6548d85fbacd5f177dea08c69186f3201,"Merge pull request #1730 from metamx/union-queries-fix

fix #1727 - Union bySegment queries fix",2015-09-29T19:23:25Z
eb48a9eb819f66fb29fe6643e1792ede366576ef,"Merge pull request #1784 from dclim/documentation-fixes

Minor documentation fixes for CONTRIBUTING.md",2015-09-29T18:53:35Z
ff5e3b7e7ddef72d0be6d36d83e1ae50e8de6307,"Merge pull request #1783 from gianm/smq-lci-caching

Separate ListColumnIncluderator cache key parts with nul bytes",2015-09-29T18:27:33Z
a58df303bef1673cd7aa69c87b62d57e9e8bc990,Minor documentation fixes for CONTRIBUTING.md,2015-09-29T18:22:35Z
573aa96bd6d84838025792fde22e85b270c24e67,"fix #1727 - Union bySegment queries fix

Fixes #1727.
revert to doing merging for results for union queries on broker.

revert unrelated changes

Add test for union query runner

Add test

remove unused imports

fix imports

fix renamed file

fix test

update docs.",2015-09-14T20:54:12Z
62d4ced4dd2fc6fe49b9c3d19f949fe8f19e38ae,Separate ListColumnIncluderator cache key parts with nul bytes,2015-09-29T01:17:44Z
d2e400f0636f816b00000e16ca23f5491459248f,"Merge pull request #1740 from metamx/validate-locks

fix #1715",2015-09-29T16:38:42Z
25bbc0b92303200991148ed5f9d68f808d695f7b,"Merge pull request #1778 from gianm/redirect-fixes

Redirect fixes",2015-09-25T16:54:48Z
348172203f61939cce44b06a52d0e6cc57060eb4,OverlordRedirectInfo: Fix ability to detect that there is no leader.,2015-09-25T15:53:40Z
696f5336e07c4f743ec773573e300b9ed4ff89f0,"Merge pull request #1777 from pjain1/fail_realtime

fail task if finishjob throws any exception",2015-09-25T16:00:02Z
b630720164882ab0f875ac0871ca2f8c77b8548c,"fail task if finishjob throws any exception

add realtime task failure test",2015-09-25T14:01:53Z
906e99d631072624cf2edf43f4c6d57c10deb1c9,RedirectFilter: User agents are more likely to preserve method on 307.,2015-09-25T15:52:19Z
4c72dabce9a8bdc726cc2c001d53bda94b3c9738,"Merge pull request #1776 from dclim/update-twitter-example

Modified the Twitter firehose to process more properties",2015-09-25T14:45:31Z
f42f6247eeb48e462b18ce8ae0c3c70ad98d505f,"Modified the Twitter firehose to process more properties

Add dimensions such as screen name, retweet and verified booleans,
source, location, and originator information to support additional
analytics.",2015-09-25T06:21:15Z
d60610ced3ab0448bbc971ddd4199cc1d16cc62d,"Merge pull request #1775 from gianm/retry-table-creation

SQLMetadataConnector: Retry table creation, in case something goes wrong.",2015-09-25T05:24:03Z
aa9d90355e76ab4103a50989d2a5dd6f4d2f8296,"Merge pull request #1772 from gianm/fix-overlord-startup

RemoteTaskRunner: Fix for starting an overlord before any workers ever existed.",2015-09-25T04:55:03Z
3aba401ee01776147c1866e3cc121d183e0194ff,"SQLMetadataConnector: Retry table creation, in case something goes wrong.

Also rejigger table creation methods to not take a DBI. It's already available
inside the connector, and everyone was just using that one anyway.",2015-09-25T04:39:36Z
9dfc74bb4ecafba07bd29b4e5de7f3c5a470ec62,"Merge pull request #1774 from himanshug/merge_task_updates

update doc about aggregation field in merge task and a null check",2015-09-25T04:29:30Z
63bf0210774cc13c1e1b0dbd5c20bf53e9e49c56,RemoteTaskRunner: Fix for starting an overlord before any workers ever existed.,2015-09-23T16:21:45Z
6e550d5346bcf3f2fdcf2facc79a854130209710,update doc about aggregation field in merge task and a null check,2015-09-25T03:25:07Z
b638400acb726d98bfd8462ee69425d087906089,"fix #1715

fixes #1715
- TaskLockBox has a set of active tasks
- lock requests throws exception for if they are from a task not in
active task set.
- TaskQueue is responsible for updating the active task set on
tasklockbox

fix #1715

fixes #1715
- TaskLockBox has a set of active tasks
- lock requests throws exception for if they are from a task not in
active task set.
- TaskQueue is responsible for updating the active task set on
tasklockbox

review comment

remove duplicate line

use ISE instead

organise imports",2015-09-16T20:33:08Z
a5718ee8b7303c1e72aa8138e8c513aa562081d7,"Merge pull request #1764 from metamx/enableLogging

Enable logging for memcached in factory",2015-09-23T23:53:58Z
5dd5fc7221a922f1e6bb9b54a1ab8c2d7436f081,"Merge pull request #1767 from metamx/revertDirectToMasterCommit

Revert ""Update README.md""",2015-09-23T03:54:30Z
f4fa153f1a05170fd24c683b0097e1f5a0739477,"Revert ""Update README.md""

This reverts commit f46d140fd3e2daeb85c2ff15281d3b4eef1f923a.",2015-09-23T03:38:12Z
f46d140fd3e2daeb85c2ff15281d3b4eef1f923a,"Update README.md

Add Gitter Badge",2015-09-23T03:30:21Z
2cb0fb4669df33ba16add05f5b0e955424e17e71,"Merge pull request #1753 from jon-wei/segmentmetadataquery_flags

Allow SegmentMetadataQuery to skip cardinality and size calculations",2015-09-22T21:52:28Z
e6a6284ebd37584c7d56ca3f346be42ea8ca70ff,Allow SegmentMetadataQuery to skip cardinality and size calculations,2015-09-18T01:53:03Z
4308aa93e23538a3247ec7dd8b2792292e59387e,Add meter metrics for memcached,2015-09-22T19:50:54Z
46ba60f10fe7db08fdafa3f21827f9325de2f129,Enable logging for memcached in factory,2015-09-22T18:13:47Z
1c86eac9e19ae34ade6e7b4766cd3bf780c90ac5,"Merge pull request #1760 from metamx/memcached082Updates

Update memcached client for better concurrency in metrics.",2015-09-22T17:59:43Z
35caa753aa8ba1cbc88ab9a6db4023809e4fb16b,"Merge pull request #1761 from gianm/local-path-for-hadoop

LocalDataSegmentPusher: Fix for Hadoop + relative paths.",2015-09-22T15:57:44Z
4efbe649a3b5ba95cbbb3d9fd3021c7aeae6254b,LocalDataSegmentPusher: Fix for Hadoop + relative paths.,2015-09-22T01:09:08Z
e6f07a832db890f20ff795a09530e7d7216d6701,Update memcached client for better concurrency in metrics. Also fixes another injection problem,2015-09-22T01:27:46Z
63a3a4a25443304fcab97559ab03239c3fb861d5,"Merge pull request #1763 from metamx/server-metrics-fixes

fix NPE and duplicate metric keys",2015-09-22T14:39:01Z
0fe9aeb3d6d95c037ab89907bddb6d7f4cd985bf,fix NPE and duplicate metric keys,2015-09-22T05:50:49Z
61b0743943f7d59cc912d1d6482c54f2ec004862,"Merge pull request #1748 from metamx/forkingJavaOptionsWithQuotes

Allow ForkingTaskRunner javaOpts to have quoted arguments which contain spaces",2015-09-22T02:03:00Z
045f72505c6f08372a2642309eb2a57030b00bc2,"Merge pull request #1759 from metamx/update-roaring

better faster smaller roaring bitmaps",2015-09-22T01:50:19Z
34a8fbcd689dd6c1d17ccb77ca06a4360d4ff8df,"Merge pull request #1755 from metamx/update-druid-api

update druid-api for timestamp parsing speedup",2015-09-22T00:43:13Z
465035e53113c6452ea85480c33039ccf22a5774,Allow ForkingTaskRunner javaOpts to have quoted arguments which contain spaces,2015-09-17T20:35:03Z
df6988bbd278c8e32a9ae529e61c3db9611d782f,better faster smaller roaring bitmaps,2015-09-21T22:48:21Z
490b1aea2a98cda2044be8a3fcb31b5fe63f4ce4,"Merge pull request #1758 from metamx/fixMemcachedInjection

Fix memcached cache provider injection and add test",2015-09-21T22:36:29Z
0511d739e3faf55d4983d43f3130f74b05c4a1c8,"Merge pull request #1756 from himanshug/indexing_service_msging

improving msging when indexing service is not found",2015-09-21T22:28:22Z
37eb83a1d0e2177cc808c18b27394e2d980ec147,Fix memcached cache provider injection and add test,2015-09-21T22:00:22Z
8f489c1f6662dfc305a162b4677691021f33c6db,fix type cast warnings,2015-09-21T16:55:44Z
af86c0e6ea56dd41a9b5004c8ebc443f7408a2c2,update druid-api + java-util for timstamp parsing speedup,2015-09-19T00:59:59Z
117a6754b5e4ea615fdeaac8499dffc387cc3373,improving msging when indexing service is not found,2015-09-19T04:07:44Z
6605a60ef07c6a7a5435075c48e4490ec6459c09,"Merge pull request #1747 from jon-wei/realtime_corrupt_sink_fix

Account for potential gaps in hydrants in sink initialization, hydrant swapping (e.g. h0, h1, h4)",2015-09-18T22:22:50Z
9f6bb03ef49c3cd0ad9e62f3ec2996f69cf5143f,"Account for potential gaps in hydrants in sink initialization, hydrant swapping (e.g. h0, h1, h4)",2015-09-16T22:25:34Z
d325bb55ae3a30f420027e3b0dc1651e27e73277,"Merge pull request #1744 from metamx/memcached-connection-pooling

Memcached connection pooling",2015-09-18T17:24:56Z
df4c8a3aa5da490a427adca80e6eec7f7b59cc59,balance memcached cache across multiple connections,2015-09-16T17:49:19Z
1f897257b5a8c081215aa0c352e46272006e2f0c,add simple load balancing pool,2015-09-16T21:35:02Z
aaa8a88464e89b23a83306e5ee4232ae2bdc32e9,"Merge pull request #1739 from jon-wei/segment_realtime

Allow SegmentAnalyzer to read columns from StorageAdapter, allow SegmentMetadataQuery to query IncrementalIndexSegments on realtime node",2015-09-18T01:36:53Z
ea2a7733f5ae4e63feeef3abff9bba2ed967b697,"Merge pull request #1751 from metamx/softerIndexTestConcurrency

Soften concurrency requirements on IncrementalIndexTest",2015-09-18T00:21:01Z
df4c2bab10c5e8bbca7b1d469aecc757d87869a5,Soften concurrency requirements on IncrementalIndexTest,2015-09-17T22:51:07Z
e48f6dd6602e2ab4949c29a862caffedaae45e9e,"Merge pull request #1736 from gianm/additional-ingest-segment-timeline-test

IngestSegmentFirehostFactoryTimelineTest for overshadowing of the middle of a segment.",2015-09-17T21:42:29Z
aab8c627c6cf1dfd379b87c4492276ce0427001d,"Merge pull request #1741 from metamx/nicerConcurrencyTesting

Add better concurrency testing to IncrementalIndexTest",2015-09-17T15:35:40Z
a7b1cacbbf4ed2da24e47efa017a1afa82202708,"make NumberedShardSpec ""elastic"" and UTs",2015-09-17T02:33:49Z
22dfa8ecf73d5f95d17a5fcb81771150971d13f7,"change ParitionHolder.isComplete() to accept chunks beyond the ""end""",2015-09-17T02:33:11Z
367c50d4ba5a2b377fdbc98651c3f1cc05303195,"Allow SegmentAnalyzer to read columns from StorageAdapter, allow SegmentMetadataQuery to query IncrementalIndexSegments on realtime node",2015-09-16T01:20:21Z
46a520c07cc55fda061b0a36eb8df2a03c76e4b9,"Merge pull request #1743 from dclim/example-segment-publisher-fix

Disable metadata publishing attempt in example script",2015-09-16T23:25:35Z
aed7cab11e82a1dcf3f5e677f07c0a6575672c54,"Merge pull request #1742 from druid-io/add-search-filter

add docs for search filter",2015-09-16T23:09:35Z
c9ccf9a56538a767538a9b677376d3e4abaf5566,add docs for search filter,2015-09-16T22:51:35Z
13e808368f9d1d0a86256ddca7fc400bdd80968e,"Disable metadata publishing attempt in example script

Example config no-ops DataSegmentPusher and DataSegmentAnnouncer but
still binds SegmentPublisher to MetadataSegmentPublisher which was
throwing exceptions when it tried to publish and no DB was configured.
Setting this binds NoopSegmentPublisher instead.",2015-09-16T22:57:04Z
6e1eb3b7fef1c462503f4b64e206165e34e544a0,Add better concurrency testing to IncrementalIndexTest,2015-09-16T20:47:20Z
9705c5139b6bb321db8db9c8df9f8c918159f312,"Merge pull request #1732 from jon-wei/segmentmeta

Add support for a configurable default segment history period for segmentMetadata queries and GET /datasources/<datasourceName> lookups",2015-09-16T19:36:25Z
2ccd0a11c72a8f879baa51a048a46d3e6e07a019,"Merge pull request #1737 from gianm/hadoopyString-docs

Docs: Suggest hadoopyString parser for Hadoop.",2015-09-16T18:30:15Z
b29cbf97a6955d854bc0da087650f83e248f11c4,Docs: Suggest hadoopyString parser for Hadoop.,2015-09-16T17:19:15Z
64e33b2bcb7ed61fcda8de9c997dfca7bcc04d6b,IngestSegmentFirehostFactoryTimelineTest for overshadowing of the middle of a segment.,2015-09-16T17:17:12Z
42bd4f60498841fd88e170c4e7f0ad88b70402a7,"Merge pull request #1695 from himanshug/allow_hadoop_based_input_row_parser

Allow writing InputRowParser extensions that use hadoop/any libraries",2015-09-16T17:16:18Z
e8b9ee85a75368b0d91533964f1a947f3637a058,"HadoopyStringInputRowParser to convert stringy Text, BytesWritable etc into InputRow",2015-09-01T03:27:34Z
74f4572bd49a04b4ca381fcd7b8f360c8ef52480,"Lazily deserialize ""parser"" to InputRowParser in DataSchema
so that user hadoop related InputRowParsers are created only when needed
this allows overlord to accept a HadoopIndexTask with a hadoopy InputRowParser
and not fail because hadoopy InputRowParser might need hadoop libraries",2015-09-01T03:24:10Z
b464da438cdb1474734dbadf48e1f62d3fb72d6f,"Merge pull request #1688 from metamx/moreMemcachedMetrics

More memcached metrics",2015-09-15T22:33:51Z
52f02a43c4519ae55b53789792617bd779b38778,"Merge pull request #1735 from druid-io/add-pivor

add pivot as a UI",2015-09-15T22:30:36Z
8a21b4cae3deb6facc67cc5e08b3cd6a31e6ad12,"Merge pull request #1697 from metamx/betterMissingQTLLogging

Better logging of URIExtractionNamespace failures due to missing files",2015-09-15T22:29:27Z
beab6fd487649e51de278b3e89f03db5746af21a,add pivot as a UI,2015-09-15T21:58:32Z
f5ed6e885c5585aa652f23953f361eed9e355024,"Merge pull request #1702 from himanshug/double_datasource_in_storage_dir

do not have dataSource twice in path to segment storage on hdfs",2015-09-15T21:00:35Z
8b071a72300e814238e35a8bbb00407eb54092ff,"Merge pull request #1710 from metamx/incrementalIndexConcurrentTestLatching

Add some basic latching to concurrency testing in IncrementalIndexTest",2015-09-15T20:55:52Z
518a1a3f9e7df1e78749d5e1db4ec48c4b6572a0,"Merge pull request #1734 from metamx/test

fix broken integration-test",2015-09-15T18:35:18Z
9c5166c89cab87b04883767581dc56ebee5ce9c0,fix broken integration-test,2015-09-15T17:50:22Z
193fb4fdfc8fea20e0e0983fb39e39236850cda8,Add support for a configurable default segment history period for segmentMetadata queries and GET /datasources/<datasourceName> lookups,2015-09-11T02:15:12Z
bd605a097e917d0d525d17138f6457b99fd5e90d,"Merge pull request #1731 from metamx/regex-extraction-npe

fix NPE with regex extraction function",2015-09-14T22:55:05Z
5f36e7a99273525b84a3d9343197d3139ca821e0,"Merge pull request #1712 from metamx/searchQueryDimExtraction

Add dimension extraction functionality to SearchQuery",2015-09-14T22:26:13Z
08a527d01ab7209c92918ddb2ad5dee478e13d5d,fix NPE with regex extraction function,2015-09-14T21:45:30Z
e569f4b6a7c7c716c9235b5985ec8f4fd7e49306,"Add dimension extraction functionality to SearchQuery
* Add IdentityExtractionFn",2015-09-09T03:32:53Z
5ff92664f8e3ed560299b896dcc79825f1c6f43b,"Merge pull request #1696 from metamx/cpuTimeReporting

Add CPU time to metrics for segment scanning.",2015-09-14T15:53:55Z
34ef81572d1442fdce36d3bd357a98dfafddefb8,"Merge pull request #1700 from himanshug/update_agg_test_helper

update indexing in the helper to use multiple persists and merge",2015-09-14T13:56:29Z
1548fa8afccc68f9ab488d0b2c04b3f4a1f46303,"Merge pull request #1721 from himanshug/hdfs_fs_init_fix

fix for ""java.io.IOException: No FileSystem for scheme: hdfs"" error",2015-09-13T00:26:01Z
1715849642ff23707406cd9db7a05ac42309e0c5,"Merge pull request #1718 from metamx/task-duration

Adds task duration to indexer console for completed tasks.",2015-09-12T05:35:08Z
43012d3c48c8a3022f7ab877aaf5b26fa7eb97a0,"Merge pull request #1725 from metamx/genericIndexedWriteOptimizationObjectsSorted

Don't check for sortedness if we already know GenericIndexedWriter isn't sorted",2015-09-12T05:33:53Z
8d3cdd8572b96efce3ddf3e479fa392c98bbbb1c,Don't check for sortedness if we already know GenericIndexedWriter isn't sorted,2015-09-11T23:32:09Z
5f9be8dd0a692dc6fb54151159d6c74bb4a7f8dc,"Merge pull request #1723 from guobingkun/fix_typo

fix typo in segments.md",2015-09-11T21:51:55Z
e222e6b86be12832a76f77c522a9f253d9bb3da3,fix typo in segments.md,2015-09-11T21:32:32Z
b989a7054c394d0d8742cf29cadcb36247150a34,"fix for ""java.io.IOException: No FileSystem for scheme: hdfs"" error
aka workaround for https://issues.apache.org/jira/browse/HDFS-8750",2015-09-10T18:12:32Z
252bb5a6bcdb8cf9bb28442c033263e50fe24a2b,"Merge pull request #1720 from himanshug/faq_update

update ingestion faq to mention dataSource inputSpec",2015-09-11T19:40:34Z
075b6d43859dae5d21080ee37e00e79da05e3ea2,update ingestion faq to mention dataSource inputSpec as an option of reindexing via hadoop,2015-09-10T19:40:10Z
d6849805ea681cebc2debf8f4b01da2fba0dba70,Add some basic latching to concurrency testing in IncrementalIndexTest,2015-09-08T21:00:17Z
4681ff22ed261459e5c0f2d4240db353ab31ecfd,add task duration in response for completed tasks,2015-09-10T08:15:20Z
e5532367e1c076e98b5b856b503469122febc31b,"Merge pull request #1717 from himanshug/doc_fix

in configuration/index.md s/instantialize/initialize",2015-09-10T04:35:21Z
39d23ffc4595e3dfd73627dab37a9fd1399343f5,in configuration/index.md s/instantialize/initialize,2015-09-10T02:18:26Z
7c5d2fa68603c68cf169af48bd6172ed8251c3cd,"Merge pull request #1699 from himanshug/composing_emitter

composing emitter module to use multiple emitters together",2015-09-10T02:05:39Z
ebdb6129337cb5272a844edb4634e46ab8d3efcc,composing emitter module to use multiple emitters together,2015-09-02T18:38:57Z
67aa3dc1534540ecc39de9987cd0e6bd4b77d68c,"on HDFS store segments in ""dataSource/interval/.."" and not in ""dataSource/dataSource/interval..""",2015-08-31T16:37:35Z
fe0233adf2d163f0d6afcd1c96e2ba3880d028c9,removing unused imports from HadoopIndexTask,2015-08-31T15:56:57Z
5da58e48e0a65679b08b4db8e1521bf8ea2ad2da,use Rule based TemporaryFolder for cleanup of temp directory/files,2015-09-03T19:11:39Z
44911039c5aa4583c2c7b86a7f2fae63be9623ec,"update indexing in the helper to use multiple persists and final merge to
catch further issues in aggregator implementations",2015-09-03T03:57:42Z
58138568198ec2001e32a59863e4c4ca414a134c,More memcached metrics,2015-08-29T15:15:26Z
fcf5cae81daab972758a97f9b3b9f5ec24831636,Add CPU time to metrics for segment scanning.,2015-09-02T17:29:11Z
1977ac9c5db990c90f43b86b8e1c99fd952756d1,Better logging of URIExtractionNamespace failures due to missing files,2015-09-02T21:25:41Z
07266d682a4456012f048593e14d702779404588,"Merge pull request #1694 from metamx/namespaceExtractionCacheManagerTestImprovements

Better timing and locking in NamespaceExtractionCacheManagerExecutorsTest",2015-09-04T22:06:22Z
0b8a3035c60ae0d16a102b93d5d3b97e5d12afe1,Better timing and locking in NamespaceExtractionCacheManagerExecutorsTest,2015-08-27T18:42:02Z
9b5889b39333127b538e55571d46d79df8b13bef,"Merge pull request #1703 from metamx/fix-npe

add null check for task context.",2015-09-04T18:04:12Z
47aac991ec7a0950f3cadbbac891003eee883a7f,"add null check for task context.

make variable final",2015-09-04T16:09:36Z
75a582974b8d3305981af30e691c67dee35acb63,"Merge pull request #1639 from gianm/new-plumber

New plumber",2015-09-04T01:52:57Z
66a9a332d0cdc6222903c620e4c8a574cdcc72c7,"Merge pull request #1604 from metamx/task-jvm-config

Allow task to override ForkingTaskRunner tunings and jvm settings",2015-09-03T21:43:49Z
062a47fba4fd62eb9672c2e639c805313c5d1989,"Modify Plumbers in these ways,

1) Persist using Committer instead of Runnable. (Although the metadata object
   is ignored in this patch)

2) Remove the getSink method.

3) Plumbers are now responsible for time-based and hydrant-full-based periodic
   committing. (FireChief, RealtimeIndexTask, and IndexTask used to do this)",2015-07-25T15:29:02Z
726326abc3dbbfcbe20362398f6c5c406f4ac34b,"Add Task Context and ability to override task specific properties

override javaOpts

fix compilation

review comments

Add Test for typecast

review comments - remove unused method.",2015-08-03T17:59:34Z
4546652b3baa55c3c3dc31f15e2d2052987e79e7,"Merge pull request #1698 from gianm/docs-skipEmptyBuckets

Timeseries skipEmptyBucket docs.",2015-09-02T22:30:43Z
cbef4a15b086b176da579a0b0d543cbaec08f8af,Timeseries skipEmptyBucket docs.,2015-09-02T21:52:52Z
e79572b4bce981f372e678f91affb16210c51d3b,"Merge pull request #1637 from metamx/peonPlaysNiceOnShutdown

Make jetty scheduler threads daemon thread",2015-09-02T18:33:20Z
0096e6a0a0b26e79763598aa2d6d59301e214636,"Merge pull request #1658 from metamx/cleanupJDBCExtractionNamespaceTest

Hopefully add better timeouts and ordering to JDBCExtractionNamespaceTest",2015-09-02T18:19:49Z
82f9ecf56b492e8b79e44d9bdcc7b2318c92310d,"Merge pull request #1620 from metamx/longFriendlyQTL

Allow long values in the key or value fields for URIExtractionNamespace",2015-09-02T17:55:35Z
ce3506b8e17bd97dcdfc8e3731cd08713dbde40d,"Merge pull request #1542 from metamx/audit-rule-history

add endpoint to fetch rule history for all datasources",2015-09-01T20:57:28Z
4f61b42f409864ea9cb1d3f965a55e8c921408e3,"Merge pull request #1578 from b-slim/fix_extraction_filter_2

Fix UT and documentation to the extraction filter",2015-09-01T17:46:20Z
d89b0fa76a41700b2c988fd72aaa5c035c0712b8,"Merge pull request #1662 from qix/pathFormat-doc

Add documentation for pathFormat in batch ingestion",2015-08-31T18:14:54Z
29c29b42d30cdbecb870180000265bf356d1059b,Add default value and link to joda docs,2015-08-31T18:09:54Z
5e3a83871e69f82ed869a8ae54c5d6616f6efe8c,"Merge pull request #1687 from himanshug/num_reducer_override

do not let user override hadoop job settings explicitly provided by druid code",2015-08-31T16:30:26Z
9ca61061289fdfba4cb68a8a7f6c8fe7e79df5b4,user specified hadoop settings are ignored if explicitly set in code,2015-08-31T15:50:18Z
0835e12f2ab05af816a1d66885d35b359eb11e9b,"add endpoint to fetch rule history for all datasources.

review comments

Review comment

fix compilation",2015-07-21T19:24:17Z
dfe3be0f6dd1950c3009988d47cff23efd585eff,"Merge pull request #1689 from metamx/lz4TranscoderUpdate

Update LZ4Transcoder to match Compressed strategy factory type.",2015-08-29T19:31:59Z
04ff6cd355f89ed786801846d3c6f0e28962b80f,"Merge pull request #1685 from gianm/close-loudly

Close output streams and channels loudly when creating segments.",2015-08-29T04:32:22Z
413c0d1c9e7bff3f27aa868985e548bd4fae4d90,Update LZ4Transcoder to match Compressed strategy factory type.,2015-08-29T02:19:48Z
8cf7eff93c525d9a04f9ec92665407b26474b90f,"Merge pull request #1686 from gianm/fix-imports

Replace funky imports with standard ones.",2015-08-29T01:32:48Z
940e1aa3eb5f15ee24700bbcf747bd2c803e6ac7,"Replace funky imports with standard ones.

1) Lots of Guava imports were not coming from the actual Guava
2) junit.framework.Assert should be org.junit.Assert",2015-08-29T00:58:35Z
e7b4cf942b83a7f3f8fd0401fec6ca3a6198f283,"Merge pull request #1682 from jon-wei/master

Support parsing of BytesWritable strings in HadoopDruidIndexerMapper",2015-08-29T00:46:26Z
7d6fa2ba50e3501f77adddb14eaa556b5ed2b9c8,Close output streams and channels loudly when creating segments.,2015-08-29T00:14:03Z
e5c4927b144e0a496d6c241d116ce7180b84ae02,Add support for parsing BytesWritable strings to Hadoop Indexer,2015-08-26T21:20:26Z
ceaa49ec4f7f871fa29b58576bb28c1294061dd9,"Merge pull request #1681 from gianm/ingest-segment-overlapping

Fix overlapping segments in IngestSegmentFirehose, DatasourceInputFormat",2015-08-28T16:12:51Z
1b0b1d5fbb78755c52c779fab202e30fc8cf3c42,"Merge pull request #1683 from gianm/remove-unused-indexer-interface

Remove unused Indexer interface.",2015-08-28T16:12:28Z
e575ef2b20e14432e26b166b47af184dcbde795d,Remove unused Indexer interface.,2015-07-24T23:00:34Z
414a6fb477d96b6b9439a9b9b151cf051e5a27f4,"Fix overlapping segments in IngestSegmentFirehose, DatasourceInputFormat.

Fixes #1678. IngestSegmentFirehose (and its users) need to remember which
windows of which segments should actually be read, based on a timeline.",2015-08-28T03:05:01Z
19c63a1103d2b3458f18dfe762ce7e37c5841084,"Merge pull request #1609 from himanshug/kafka_firehose2

Experimental kafa simple consumer based firehose",2015-08-28T04:04:02Z
2e0dd1d792dfcef196bb2d5a4168844948007007,"adding UTs and addressing review comments  to
firehoseV2 addition to Realtime[Manager|Plumber],
essential segment metadata persist support,
kafka-simple-consumer-firehose extension patch",2015-07-31T16:36:03Z
2237a8cf0f4315c681299b7404eab67d1e45e574,kafka 8 simple consumer firehose,2014-09-29T22:22:17Z
10af233b37433ca3120e1bce5e2a2b5cc2841a3d,"Merge pull request #1622 from metamx/smile-eventreceiverfirehose

Support for JSON Smile format for EventReceiverFirehoseFactory",2015-08-27T17:42:25Z
c1388a16856832513bafa51ac19bf98b53c513dc,"Merge pull request #1632 from Hailei/fix-subquery-innerquery-demension

Inner Query  should build on sub query",2015-08-27T17:25:38Z
6e5900e354bf9555d0bf4dfcde9d11858f1da545,"Merge pull request #1676 from metamx/fix-convert-segment-task

fix convert segment task",2015-08-27T12:43:09Z
ac8e32b58e9510942762c6fe8f77b76ba7488ac9,Hopefully add better timeouts and ordering to JDBCExtractionNamespaceTest,2015-08-22T02:03:16Z
b306739e9c084d9909aec22bbbe3a6a0d39a72f4,"fix convert segment task

1) fix serde
2) fix wrong parameter being passed when creating subtask

remove sysout",2015-08-27T05:54:34Z
5b67ec6cdab61d3fe1aad2077cb28764e4dfa4ef,"Merge pull request #1672 from metamx/derbyRule

Migrate TestDerbyConnector to a JUnit @Rule",2015-08-27T05:56:18Z
e38cf54bc81c5523d8fbd7a5c5b136d1401c0ec6,Migrate TestDerbyConnector to a JUnit @Rule,2015-08-26T19:58:26Z
94da7af94ec6b087178cd458001ee710ba534591,"Merge pull request #1675 from metamx/update-druid-api

update druid-api for jackson 2.4.6",2015-08-27T02:29:45Z
25853aee9b47913c5384c6a624ab2b49b6c4e4a4,update druid-api for jackson 2.4.6,2015-08-27T02:23:37Z
12fd78f4d8215c17e2db1bbcacd78c9358aae79a,"Merge pull request #1673 from guobingkun/patch-1

Fix batch ingestion doc",2015-08-27T02:12:13Z
e9e3aae9ab422f6c5ac5bc3700359775c67225cb,"Merge pull request #1 from metamx/testFor1632

Add test for #1632",2015-08-27T02:02:12Z
b928c6377150ccea2b07a3c4d9e1a2f5a7f761b3,"Merge pull request #1674 from gianm/jackson-downgrade

Downgrade Jackson to 2.4.6.",2015-08-27T01:35:24Z
2a866f49df20c5aa37e56b5ad218cb2eb119210e,Downgrade Jackson to 2.4.6.,2015-08-27T01:20:08Z
e9237611c51f949feb4eed6641824e77f18e2c9a,"Merge pull request #1668 from metamx/cachingClusteredClientCodeCleanup1

Code cleanup for CachingClusteredClientTest",2015-08-27T00:13:55Z
ae1f104c10cecfc45b9f1a6ad6ba6c7f40a1fc1e,Fix batch ingestion doc,2015-08-26T20:16:21Z
b24a88b32803142f02b6ebf285eb5d45b13bc9aa,Allow long values in the key or value fields for URIExtractionNamespace,2015-08-12T20:55:19Z
4befd6bfef64690eec93ef1fa64d85513200ed42,"Merge pull request #1670 from druid-io/fix-format

fix formatting",2015-08-26T16:22:37Z
bdfe67fe17b60b26c03fef0ef3b5b8a5dcd00ef3,fix formatting,2015-08-26T16:21:32Z
33b862166a8765bd2fb0136be1ec603739c384ca,"Merge pull request #1659 from himanshug/segment_kill_update

on kill segment, dont leave version, interval and dataSource dir behind on HDFS",2015-08-26T14:23:20Z
fdb6a6651bec93dbdbc8b09d5e1e25455b097fde,"Merge pull request #1669 from metamx/upgrade-dependencies

Upgrade dependencies",2015-08-26T04:30:22Z
24aa762c795fd998b706094e0b1edd0ab2173ff7,Add test for #1632,2015-08-26T03:45:16Z
5c19ffa98c94b43fee1439be27c7465d5acef26c,"Merge pull request #1663 from gianm/segment-insert-constraints

TaskActionToolbox: Remove allowOlderVersions, lift interval constraint",2015-08-26T01:11:46Z
10946610f445bda0499a70d23ce72172e5874e87,"Merge pull request #1656 from druid-io/all-the-docs

more docs for common questions",2015-08-26T00:49:47Z
4055f9ca48ece0c81449b14286520d5388573d25,more docs for common questions,2015-08-21T20:54:00Z
c4d0e8d29b6eaf33ef33ec68a7fb708b63d4a3b8,remove unnecessary pom verbiage,2015-08-25T22:12:06Z
d5143c080793ea2d94ae6c5ba43500ad4fac315f,update java-util to 0.27.2,2015-08-25T22:16:00Z
21aadb892797497f80e483adbe76243b460ba185,update joda to 2.8.2,2015-08-25T22:13:48Z
dc11f907c93f6dd9a35773e80578aeae87356724,update jdbi to 2.63.1,2015-08-25T22:12:34Z
123f6340d507e511a4ada463f2a17963e9ee783b,update coveralls plugin to 3.2.0,2015-08-25T20:30:57Z
3a83a0fe40022888c0ae1210f8b28cbcbb4bf22c,update irc library to 1.0-0014,2015-08-25T20:28:49Z
2fa87c4bba0f04b35c9e9e523b24af5ac90c30ab,update joda-time to 2.8,2015-08-25T20:28:30Z
f681b2022d5b7d9f3e7ac30c9c3b172645bf7e7e,update aws-sdk to 1.10.12,2015-08-25T20:28:19Z
8be5fe091f69b4493e41d74efcfefd5f04e1fcb7,update slf4j to 1.7.12,2015-08-25T20:27:54Z
172a44b79458752477ecfdc0f552fc817c7368ce,update log4j to 2.3,2015-08-25T20:27:40Z
51f6a9a2c9d90e77d36443ae3c25445542e1452d,update jackson to 2.6.1,2015-08-25T20:27:12Z
ac4a856a17b6934e5bd6884aaf7453df7d039279,update jetty to 9.2.13.v20150730 (latest Java 7 compatible version),2015-08-25T20:20:08Z
8b294d4d984c93d63e6ec71fc3ad1c813e34df57,update mapdb to 1.0.8,2015-08-25T19:51:28Z
edaaf528abb1f8c8bf99a0babe658e249020bb85,update jets3t to 0.9.4,2015-08-25T19:48:25Z
9a0c15c52cad7237a295ad01cc497cb78cbd9361,update airline to 0.7,2015-08-25T22:30:12Z
d601038271868bd78a07801be5a46da2dae60643,update druid-api to 0.3.11,2015-08-25T22:55:26Z
33681525e3822b882109e989f8a5bcc1c25ce776,"TaskActionToolbox: Remove allowOlderVersions switch, lift interval constraint.

allowOlderVersions has been stuck true for a while due to a bug (introduced in
566a3a61), but I think it's actually OK this way. I think it's reasonable to
expect tasks to choose versions in some way that makes sense, so long as they
don't choose one larger than their taskLock version. This is still verified.

The interval constraint was introduced to force tasks to break up their
segment insert lists into manageable chunks. They are already doing this, and
I think it's reasonable to expect them to do so without enforcement.

Lifting these constraints paves the way for transactional insertion of segments
that have varying versions and may be for varying intervals.",2015-08-25T01:01:39Z
e21954a70fe91d18054d05be29977b6841a30ac2,"Merge pull request #1619 from metamx/update-server-metrics

update server metrics",2015-08-25T20:58:28Z
c325b194c0b79917577599738b2c525dd19faa74,"Merge pull request #1661 from pjain1/poll_rules

Poll rules immediately after change",2015-08-25T20:46:55Z
85aeda834c62ea444c7128effda633305a370ba8,Code cleanup for CachingClusteredClientTest,2015-08-25T19:49:55Z
2c8b3901be8ce0b6bfec3d4fb22f445378cd9ee9,"Merge pull request #1665 from gianm/consolidate-sql-retrying

Consolidate SQL retrying by moving logic into the connectors.",2015-08-25T19:43:48Z
2bf9a70bfaabf62efe7a0a08cd4de29b077f0def,"Consolidate SQL retrying by moving logic into the connectors.

Also change boolean removeLock to void addLock in MetadataStorageActionHandler.",2015-08-25T01:29:06Z
de8f806cc11d5839537cacdd3a6931c41882458a,"Merge pull request #1654 from gianm/index-add-taskResource

Add ability to provide taskResource for IndexTask.",2015-08-25T17:25:35Z
2122cd09b1c901ee1c5094300d3814b38481e22e,"Merge pull request #1664 from rasahner/docTimedFirehose

add documentation about TimedShutoff firehose",2015-08-25T02:19:08Z
3def847e286667b67f5f6d4cf7015b02c5d56c11,add documentation about TimedShutoff firehose,2015-08-25T01:41:42Z
2301b60365601f2cb930f5c766c270b5251a872f,Add ability to provide taskResource for IndexTask.,2015-08-17T04:56:41Z
5e42aee49ebb7f5fc70d19c632ee51275d011b50,Add documentation for pathFormat in batch ingestion,2015-08-24T21:35:41Z
073c32f01be86c21def3f9401a168905ae8109f4,Poll rules immediately after change,2015-08-24T18:45:35Z
3331987b10ddd77886fdf44b3d67a05ed585bf8c,"Merge pull request #1648 from himanshug/fix_comma_multiple_inputs

handle commas in the path before calling MultipleInputs.addInputPaths",2015-08-24T16:08:50Z
5b5a76ef6cca2ab88768470624469060f53f1a58,adding unit test for HdfsDataSegmentKiller.testKill(..),2015-08-24T03:06:46Z
c2bebfe39e9d4507edb5560a93a0def262e39ea9,"delete version, interval, dataSource directories on segment deletion if possible, so that they are not left behind and consume ns quota on HDFS",2015-08-24T03:06:12Z
0c11097b4f067387a4a01bace3cf76f67e7704dd,"Merge pull request #1655 from druid-io/add-postgresql-docs

add postgresql setup docs",2015-08-21T20:37:53Z
5a48376788759bf1366c1839738cbbed08b4b36e,add postgresql setup docs,2015-08-21T20:17:01Z
6ff6fd80e81445b5006cbddf82192bdb76fb62b1,"Merge pull request #1647 from himanshug/approx_histo_test

Approx histogram ""integration"" unit test",2015-08-21T18:19:12Z
e3964cd9f6e6137631a27dba71ce90fb930272d8,"Merge pull request #1653 from metamx/fix-success-flag

fix success flag emitted in router query metrics",2015-08-21T14:56:57Z
6d85a62ed21020b972960a020f4b42b3d12ac7b8,fix success flag emitted in router query metrics,2015-08-21T06:55:57Z
5bf4b81481c73d81a5d710633f1d4bbf08033c08,"Merge pull request #1650 from druid-io/workaround-assembly-bug

remove maven metadata from embedded repo",2015-08-21T03:15:59Z
b3c570e78ddc9389df614d12677db40370a799a4,update BatchDeltaIngestion.testDeltaIngestion(..) to check for proper glob path handling,2015-08-20T22:03:15Z
85e3ce9096c50aa2c2e2e509841fe484c92853ba,"split hadoop glob path before adding it to MultipleInputs
This can be safely reverted once https://issues.apache.org/jira/browse/MAPREDUCE-5061 is fixed",2015-08-20T22:02:43Z
a603bd9547a2ec36301ab35c1dfe73f623d43143,"HadoopGlobPathSplitter implementation to split hadoop glob paths
This can be safely reverted once https://issues.apache.org/jira/browse/MAPREDUCE-5061 is fixed",2015-08-20T22:02:01Z
0eed015142c80e24c75e3bf36f2bcda5c76aab04,"remove maven metadata from embedded repo

workaround for maven assembly bug
https://issues.apache.org/jira/browse/MASSEMBLY-677",2015-08-20T22:26:59Z
e6b20db62d09751c69f2ba97da9787336fa4aabd,"Support for JSON Smile format for EventReceiverFirehoseFactory

Support for Smile format for EventReceiverFireshoseFactory.
would help in decreasing network load on middle managers ingesting high
data volumes.

review comments",2015-08-13T14:32:57Z
9b54124cd088a1a213fbe9a6cd47778004796bb0,pseudo integration tests for approximate histogram,2015-08-20T06:22:58Z
c57c07f28af338341186e36c7e940faf70ba8a71,"add ability for client code to provide InputStream of input data in addition to File
It would be needed when input data file does not reside in the same jar
but you could still use getResourceAsStream() to read the data inside a file",2015-08-20T05:54:58Z
1ecec1da5a2df0be89ac4630578108d554f7cdb8,"Merge pull request #1645 from himanshug/approx_histo_doc_update

update approx-histogram document to explain how to ignore rows with no value",2015-08-19T20:44:16Z
0daeb830b0f0e078d34aaec8e7b87f9ae74c579f,update approx-histogram document to explain how to ignore rows with no value at ingestion time,2015-08-19T20:20:37Z
38b8ccab042eebe182b26d6bc0c45793b1a13a08,"Merge pull request #1643 from himanshug/msg_update

helpful cause explaining why SegmentDescriptorInfo did not exist",2015-08-19T19:20:33Z
03f4c3e816b6482a75191a9c0f6d24b9960000b8,"Merge pull request #1644 from druid-io/fix-tar-long-files

fix assembly tar with long filenames on some platforms",2015-08-19T19:11:57Z
21fa1ac6d6770849f1ce95484cf653ccaec97dba,fix assembly tar mode on some platforms,2015-08-19T17:13:16Z
cf3ec8eb46c7406b1bdc3d41e036992540b859e5,helpful cause explaining why SegmentDescriptorInfo did not exist,2015-08-19T15:29:04Z
d996e0aecc33060efa7a3aaa1875550425da9759,"Merge pull request #1640 from druid-io/maven-repo-tarball-clean

Package extensions in tarball + run_druid_server goodness",2015-08-19T04:54:39Z
1abcd75696ca6f547a20387e63695cc72d11effd,"Merge pull request #1624 from metamx/expandTimeouts

Expand timeouts on JDBCExtractionNamespaceTest",2015-08-19T04:32:50Z
6a0389297c51f3c6a468137e8fc96e4be212c84b,"Merge pull request #1634 from metamx/IrcFirehoseFixes

Allow IrcFirehoseFactory to shutdown cleanly",2015-08-19T04:06:34Z
5ca440ff15cb528dc4af11f08249b755c2d7170d,run_druid_server.sh,2015-08-19T00:35:07Z
601cd829875bc929d4330c7ad8749ab6871e3138,"Use local repository instead of maven central:
- Use local repo in run_example_server.
- Add extensions-repo to common.runtime.properties for the tarball.",2015-08-19T00:01:17Z
2093187c91fd3325959082d847b58b92dd58c64c,"rework tarball distribution:
- move assembly out of druid-services into a 'distribution' module
- create separate 'extensions-distribution' module and assembly to
  package extensions and their dependencies into a local maven
  repository
- include this extensions maven repository in the binaries tarball",2015-08-18T18:28:30Z
3b2e41e42a6e139f3776339cc6e7935cb8b574d9,update for next release,2015-08-19T00:16:46Z
38110820c304ad8de4581385275ae3588a41d2e5,Expand timeouts on JDBCExtractionNamespaceTest,2015-08-13T18:45:40Z
13773865cfdcb02e1405af96315cad97c9f41419,Make jetty scheduler threads daemon thread,2015-08-18T00:39:48Z
9ff6a637bbbae7eb92d9593c91ec204bc276d416,"Merge pull request #1635 from druid-io/fix-versions

update version numbers in docs",2015-08-17T23:54:50Z
0cbda0c01d80b4fe8fd905dec6c837685e67d8ae,update version numbers in docs,2015-08-17T23:41:12Z
b9792b57bcc206fbe9a84278172a5bcfd9b0367d,"Merge pull request #1374 from himanshug/batch_delta_ingestion3

Feature for hadoop batch re-ingesion and delta ingestion",2015-08-17T22:52:49Z
cd2c3776f8fdbe9f54fd6ec21ba2163fa339dd9b,Allow IrcFirehoseFactory to shutdown cleanly,2015-08-17T20:24:41Z
7549f02578080968983f609f8715cc6c7e9d505f,support the case filter value is null,2015-08-17T20:09:37Z
f9e3f922e662508e3a0a87a37571b8d344ac0cf0,"Merge pull request #1633 from pjain1/edit_metrics

swap description and dimension column for some JVM metrics",2015-08-17T20:07:57Z
41fa9bf994db2f195ef007d780c90317262e3fb7,swap description and dimension for some JVM metrics,2015-08-17T20:03:06Z
234a9588179bf7f3a615b0301a3c3ed2ca3442ee,Inner Query  should build on sub query,2015-08-17T10:18:26Z
cfd81bfac712a07d1bf39e6fe39157bb712b8e8b,updating the docs on how to do hadoop batch re-ingesion and delta ingestion,2015-07-22T18:49:57Z
a3bab5b7d96f2f81da02da3158504232c6906826,IndexGeneratorJobTest type unit test for batch delta ingestion and reindexing,2015-08-12T22:33:09Z
15fa43dd43131e594cd011ee2805f689d4d1a097,"changing DatasourcePathSpec, to get segment list, so that hadoop indexer uses overlord action to get list of segments and passes when running as an overlord task. and, uses metadata store directly when running as standalone hadoop indexer
also, serialized list of segments is passed to DatasourcePathSpec so that hadoop classloader issues do not creep up",2015-08-12T22:32:35Z
45947a1021fc525dfd919b807618da53a5f4f4d2,"add ability to specify Multiple PathSpecs in batch ingestion, so that we can grab data from multiple places in same ingestion

Conflicts:
	indexing-hadoop/src/main/java/io/druid/indexer/HadoopDruidIndexerConfig.java
	indexing-hadoop/src/main/java/io/druid/indexer/JobHelper.java

Conflicts:
	indexing-hadoop/src/main/java/io/druid/indexer/path/PathSpec.java",2015-05-18T18:41:06Z
1ae56f139bd79b378c779ebf47154a0ed346fae5,"Druid Hadoop InputFormat and pathSpec

Conflicts:
	indexing-hadoop/src/main/java/io/druid/indexer/path/PathSpec.java
	indexing-service/pom.xml",2015-06-25T21:10:28Z
f1d309a67187f270f663937a2e61945ce88e41fa,do not run parser if value from InputFormat is already an InputRow,2015-07-17T22:20:16Z
4d4aa8bfc6cc72eaf45bdc87c7cdb2c4c20decda,"refactor IngestSegmentFirehoseFactory so that IngestSegmentFirehose becomes reusable

Conflicts:
	indexing-service/src/main/java/io/druid/indexing/firehose/IngestSegmentFirehoseFactory.java",2015-05-18T18:42:30Z
958dd1a451e15b81fb039d12e421ad752f4e158d,"Merge pull request #1629 from metamx/fix-1584

Update post-aggregations.md",2015-08-14T18:07:47Z
3f15d81f763f9b98d347377ca087e2950d956488,"Update post-aggregations.md

fix for  the issue: https://github.com/druid-io/druid/issues/1584",2015-08-03T08:26:48Z
c1d274faff7b9e383522d7bb8633c2846fb4ce77,"Merge pull request #1628 from druid-io/revert-1608-guice40

Revert ""Update to guice 4.0""",2015-08-14T16:57:20Z
db19d2d547a370a6b688d1695aa9954eb962b5ae,"Revert ""Update to guice 4.0""",2015-08-14T16:26:07Z
8d6fe021e3c7a03518b08270c4a83a96b0dd846f,"Merge pull request #1627 from metamx/fix-realtime-tasks

explicitly call lifecycle stop",2015-08-14T15:17:00Z
08f50fcc3789968a1e86756ecf6639544c1332c0,explicitly call lifecycle stop,2015-08-14T12:05:17Z
24dc23967f4d3b13c08dc1d49a11c503f400909b,"Merge pull request #1607 from druid-io/even-more-docs

Fixes and more docs across many areas",2015-08-13T18:53:53Z
43978eba994a6440a24c8f15d902e47332e1f84c,Fixes and more docs across many areas,2015-08-07T18:39:52Z
901cc2206088bee90e05f5f7b64b6b898214fa2d,"Merge pull request #1617 from metamx/increaseNECMETTimeout

Increase timeout in tests for NamespaceExtractionCacheManagerExecutorsTest",2015-08-12T17:38:01Z
a6a98863395d38e1fa07f3032adb7e219ef4906d,"update server metrics

changes include -
1) https://github.com/metamx/server-metrics/pull/8 - Add custom
dimensions for Jvm and Sys monitors
2) https://github.com/metamx/server-metrics/pull/9 - Add net, tcp,
uptime and cpu metrics",2015-08-12T17:22:17Z
76fbb12959312ab659008683c27264e106597b94,Increase timeout in tests for NamespaceExtractionCacheManagerExecutorsTest,2015-08-11T20:54:54Z
be891056212225f4212c50e26d3ed66c2f71939e,"Merge pull request #1602 from metamx/more-code-cleanup

Some perf Improvements in Broker",2015-08-11T20:51:49Z
fbdb841928f4b9b291808eb2514206eae16ea052,"Merge pull request #1603 from metamx/optimize-lexicographic-topN

Optimizations for LexicographicTopNs",2015-08-11T20:35:34Z
b8d8a8da9e088797b74f4df6711ba1de028e7d0f,"Optimisations for LexicographicTopNs

initial review for perf optimizations for lexicographic TopNs

fix compilation

create map with proper size

review comment

review comment

review comments",2015-08-06T11:36:35Z
738da3fdb24cd19429f4e448d1de31b6f442a1fa,"Merge pull request #1616 from gianm/fix-1545

Avoid the Hadoop objectMapper in the local IndexTask. Fixes #1545.",2015-08-11T17:54:15Z
bc0c7dd65d846a1742c24b280be4b71792f981ed,Avoid the Hadoop objectMapper in the local IndexTask. Fixes #1545.,2015-08-11T17:40:53Z
fadd8a4342f0ef37852bfdb27ba75d96d8b1a9af,"Merge pull request #1608 from metamx/guice40

Update to guice 4.0",2015-08-10T22:00:26Z
c8c8169c6952a42e534d1101af329902da72e634,Bump druid-api to 0.3.10 to include guice 4.0 update,2015-08-10T20:56:11Z
7e61216287324207b2541ff31e71f213e023c134,"Update to guice 4.0
 - Mark a lot of `@Provides` methods as final since guice 4.0 disallows overriding them",2015-08-07T18:42:16Z
ae1736eeb43b9c8634f8647b83c0b0a9bfa85d54,"Merge pull request #1612 from metamx/jdk8Jersey1p19

Bumb Jersey to 1.19",2015-08-10T20:42:13Z
dd0f0efc709fd066bd34791db6ae82f702ee5e8a,"Merge pull request #1614 from metamx/approxhist-disclaimer

disclaimer + more docs for approximate histograms",2015-08-10T20:37:07Z
f583cad2e258a9ffa6be1ce34d4028c76226cb03,disclaimer + more docs for approximate histograms,2015-08-10T19:17:03Z
b6fa1996c03ec2aa26f85c5633e306713be25f25,"Merge pull request #1613 from metamx/travis-cache-maven

faster build: cache maven dependencies in travis",2015-08-08T14:53:15Z
07b2b77c294140b6d62c5ea78227c32b7c9f6eda,faster build: cache maven dependencies in travis,2015-08-08T01:05:25Z
7d5a77b8820ba5a22e4d2c19f7646315f60a0eb3,Bumb Jersey to 1.19,2015-08-08T00:32:27Z
2d22bcc11b79be697bdf183d04644345c9cdde5b,"Merge pull request #1611 from metamx/betterTimingTests2789

Better handling of slow stuff in NamespaceExtractionCacheManagerExecutorsTest",2015-08-07T22:39:04Z
8be82c00bd65c982426e0e8cc669922c757e466f,Better handling of slow stuff in NamespaceExtractionCacheManagerExecutorsTest,2015-08-07T22:09:18Z
f0bc362981cdefd38eb93f266a51ed1d979c1246,clean code if is not needed anymore,2015-08-07T17:38:41Z
64d638a386fd752056ea18193e96b7cff81de409,optimize  makeMatcher,2015-08-04T14:07:47Z
e6226968a68484360ddf88014be22189cd14b6c0,"Merge pull request #1589 from druid-io/fix-firehose-doc

Add a lot more docs for firehoses",2015-08-06T19:45:24Z
78263a95c0dc85ea0700611320136b33aebc647f,"Merge pull request #1605 from metamx/friendlierNamespaceTests

Better handle timeouts in namespace tests",2015-08-06T18:54:11Z
644253af1c21833b169a50a3428f1387b0ce5d7b,"Merge pull request #1601 from metamx/stupidPoolLockless

Remove locks from StupidPool",2015-08-06T18:45:20Z
0326a7ac69e0de0b36cf1a778e7b138d2d8f9e7b,"Merge pull request #1597 from metamx/fix-doc

some docs were missing before, hopfully this is more clear",2015-08-06T18:17:23Z
8cdcf69714d6f216500ec6463ff2b4529b5951cb,Better handle timeouts in namespace tests,2015-08-06T17:20:18Z
1a46c4c71c322772373d38d6f1c00e6525879cbd,avoid creating mergeSeqence when not required,2015-08-06T08:55:13Z
b33c644da0d2a423ba179567893a80e7b8786b90,"avoid unnecessary call to MultipleSpecificSegmentSpec.getIntervals()

avoid unnecessary call to MultipleSpecificSegmentSpec.getIntervals()
profiling shows it took upto 6-12% of cpu time in
JodaUtils.condenseIntervals",2015-08-06T08:21:17Z
7fe8562980efb6630aa71b26916b4580b45d8dad,Remove locks from StupidPool,2015-08-05T21:06:34Z
9dd18de1a5cd7d3c779e98f03875257efd4c4ed2,"Merge pull request #1596 from metamx/console-artifact

make console a maven dependency instead of filedump",2015-08-04T22:28:45Z
0357dc2cd8b547589470b613b44744a095bac856,"some docs were missing before, hopfully this is more clear",2015-08-04T18:08:44Z
012fff66160df8bbb5684304f2518598b796ac6f,fix firehose docs,2015-08-02T17:37:07Z
07ee1acca235897c81e62b49d45d95434b5a2768,make console a maven dependency instead of filedump,2015-08-04T16:49:34Z
b05be0a1045f102599f2fb6ce96c806b35f23474,"Merge pull request #1593 from metamx/run-tests-offline

Fix test so that it can run offline",2015-08-04T16:23:40Z
ba76806f3abcf5957eb45591ba0edf743f1a2a1c,"Merge pull request #1591 from b-slim/patch-1

typo in the documentation after changing the code",2015-08-04T16:23:25Z
3078d905faa87a32d9ab194f6ebb7cd0faa9ae03,"Merge pull request #1586 from onlychoice/fix_javaOpts

Fix configuration for javaOpts, remove quotation marks",2015-08-04T02:27:45Z
1cb7304505fe9038f3e9503e07741fb3ca3bb4f9,"Merge pull request #1594 from pdeva/patch-3

added required config option",2015-08-04T02:09:54Z
27997f968225608d5e1a46ddf94597bb9f31e3b1,added required config option,2015-08-04T02:08:05Z
7848429cbf58d9ca829e9b27abf55c68776b1fee,unused imports,2015-08-03T19:50:52Z
1ddaa3fb33698da498f917a87418eac88fd6f606,"Merge pull request #1592 from metamx/clean-test-files

clean temporary files",2015-08-03T18:47:20Z
f490547faf6fd3b0ea64f95a253c853ac7fd530f,"Fix test so that it can run offline too

Test was getting stuck for me when I tried to run it offline while
resolving the host. creating unresolved SocketAddress works around
this.",2015-08-03T18:07:04Z
2679efee7a2d01cbfbc3af1979797341899cab44,clean temporary files,2015-08-03T18:02:58Z
1fdfc67ffa6f178aa4f118100bd0d2b977b2fd16,typo in the documentation after changing the code,2015-08-03T15:45:03Z
83de5a47166eadad81c1e38e0cff26f4d710ccf7,addressing reviewers comments,2015-07-31T16:30:47Z
dda0790a60ef3738552a539eb41e637adfa3e5ea,"Fix extractionFilter by implementing make matcher
Fix getBitmapIndex to consider the case were dim is null
Unit Test for exractionFn with empty result and null_column
UT for TopN queries with Extraction filter
refactor in Extractiuon fileter makematcher for realtime segment and clean code in b/processing/src/test/java/io/druid/query/groupby/GroupByQueryRunnerTest.java
fix to make sure that empty string are converted to null",2015-07-24T14:54:12Z
65654ddbf95be684819285097f4c0ffb83229e66,adding documentation about extraction filter,2015-07-27T21:23:14Z
d3e838ff34912eb991c6042ba7f99492f6627132,"Fix configuration for javaOpts, remove quotation marks",2015-08-01T03:26:37Z
5478b5bef8532d98519a39eeff86d02a2218faa1,"Merge pull request #1583 from KurtYoung/master

fix realtime index task json description in doc",2015-08-01T01:33:33Z
5790367f6add1030b00ca25f81d407f010676b16,"Merge pull request #1585 from guobingkun/fix_transient_error

Fix transient error in BrokerServerViewTest",2015-07-31T19:53:32Z
479b09c2ddc6b27992df25ee1f251a2dd0eb8d12,fix transient error in BrokerServerViewTest,2015-07-31T18:33:55Z
2b2bba8d59dec5c48dce7f4514b146b786a7bda1,fix realtime index task json description in doc,2015-07-31T05:59:58Z
335d0df401616bce05779dea8b41d0dc6729f75c,"Merge pull request #1582 from himanshug/fix_mysql_tutorial_ref

fix mysql references in tutorial docs",2015-07-31T03:20:08Z
7ee509bcd00fd53136bd52564e3ceae823904d28,fix mysql references in tutorial docs,2015-07-31T03:05:05Z
99c240d1ebc304ce652f97784f14482d43c3af0e,"Merge pull request #1580 from himanshug/update_druid_api

update druid-api to 0.3.9",2015-07-30T21:57:48Z
a9ee2a383f5ef8f9b87fa33dea39ce5082f93111,update druid-api to 0.3.9,2015-07-30T21:35:37Z
f4567c995c543eef6ea0bd86f609fa9545619712,"Merge pull request #1572 from himanshug/cache_doc_update

update doc with useCache and populateCache flags",2015-07-28T21:50:13Z
22567946cf7c463d184a795151c67deb3d013da8,"Merge pull request #1259 from metamx/queryTimeLookup

Query Time Lookup",2015-07-28T21:43:05Z
c17bc3fd743a4c8bb929bb5fa7d8360bdcc247fe,update doc with useCache and populateCache flags,2015-07-28T19:40:39Z
50864906200f8334061f47fef6bca3f992d93e18,"Merge pull request #1571 from druid-io/add-md

Add setup to metadata store page",2015-07-28T18:38:02Z
9946eebc02b5e1262da1681c520436f30a89845c,Add setup to metadata stoer page,2015-07-28T18:36:48Z
cc50217eb0b3504af7d4c2667746f03f6f45c48e,"Merge pull request #1568 from metamx/detailedSegmentLoadingErrors

More detailed error logging on segment activities",2015-07-28T18:31:16Z
afa13783a5280500a76aa47bb8b002906e5fa8ab,"Merge pull request #1567 from metamx/moreS3DataMoverLogging

More detailed logging of error message on S3DataSegmentMover",2015-07-28T18:31:01Z
ba59f8afc4ae5ab34dcaeadf165bed4b75bf5872,"Merge pull request #1550 from himanshug/optionally_log_all_requests

print *all* HTTP requests to log if configured",2015-07-28T18:19:36Z
86ede702b11d76abce251d26fe22db8e9217888d,"Add namespaced lookups as extensions
* Adds kafka, URI, and JDBC namespace defintions
* Add ability to explicitly rename using a ""namespace"" which is a particular data collection that is loaded on all realtime, historic nodes, and brokers. If any of these nodes has the namespace extension, ALL nodes have the namespace extension.
* Add namespace caching and populating (can be on heap or off heap)
* Add NamespaceExtractionCacheManager for handling caches
* Added ExtractionNamespace for handling metadata on the extraction namespaces
* Added ExtractionNamespaceUpdate for handling metadata related to updates
* Add extension which caches renames from a kafka stream (requires kafka8)
* Added README.md for the namespace kafka extension
* Added docs
* Added namespace/size, namespace/count, namespace/deltaTasksStarted metrics

Add static config for namespaces via `druid.query.extraction.namespace`
* This is a rebase of https://github.com/b-slim/druid/tree/static_config_only",2015-06-17T00:17:41Z
90b475975e7eac393f6b8ead47be5d9180ed18ca,Log all the requests to debug level in logger io.druid.jetty.RequestLog,2015-07-25T17:07:29Z
6f65e6d3ef63ff33ebbbc3731aa965c680996ac0,"Merge pull request #1547 from pjain1/improve_overlord_test

add test to OverlordResourceTest",2015-07-28T17:35:48Z
4195deb41be749bc80900d0698ff4163a70b8fdb,"Merge pull request #1563 from metamx/simplify-sequence-merging

simplify merging of results on broker",2015-07-28T16:56:28Z
0bd904fa36fb2899eb7cf68f56ec3b47abf0a655,"Merge pull request #1569 from pdeva/patch-2

Specify dynamic dimension schema",2015-07-28T03:36:03Z
ef0439229db675f9800bfe1d9181eb4631edd443,"Specify dynamic dimension schema

Document how druid can dynamically infer dimension columns",2015-07-28T03:20:53Z
c492d4448db41a4e687c49dd75a8d041a3cb29b4,More detailed S3DataSegmentKiller error messages,2015-07-27T20:36:52Z
fe7818ddd22fec2ba0d5a58852ea4358751e26e8,More detailed AzureDataSegmentKiller error messgaes,2015-07-27T20:35:40Z
3f901e7291d431e895cd8910e68e81aa92e9a333,More detailed logging of error message on S3DataSegmentMover,2015-07-27T20:28:54Z
5fba5e035fd2d0bfe49fff1fde112ce9615147c2,"Merge pull request #1564 from guobingkun/simple_change

Use IOUtils.toString in getTaskAsString()",2015-07-27T19:40:27Z
f9a64f31f371a6a42bb58ef00dbe32077153a951,use IOUtils.toString in getTaskAsString,2015-07-27T18:34:19Z
efb6e0649e8c392e99c736601af688a3f4ad1a6c,"simplify merging of results on broker.

add benchmark

formatting and review comments

organize imports",2015-07-27T17:19:59Z
5f1f4424eb8d949e136d05c9f8f5364ffcd76ea2,"Merge pull request #1552 from rasahner/doc-chathandler

remove references to chathandler type ""announce""; it's the default",2015-07-27T17:36:27Z
ccd46088b2f183665733abb0b54ceebe3d3fcc26,"Merge pull request #1549 from himanshug/example_router_config

adding router config to examples/config",2015-07-27T17:15:48Z
4801de62a27d4673c6596f8d8128b478d82e9ecd,"make ""announce"" the chathandler default in realtime node,
remove doc references to chathandler type ""announce"" since it is the default now,",2015-07-24T14:01:16Z
27cd7730c8a7d59bc51012ae1d13a68f959fe7f7,"Merge pull request #1561 from pdeva/patch-1

correct key name",2015-07-26T18:01:29Z
76bf8ccd8cc8dfbc76f57be3957397dea5938142,correct key name,2015-07-26T04:58:37Z
60a27a9121aa98eacc8c8d8ea67c3d868605f4ea,"Merge pull request #1555 from metamx/convertSegmentDocs

Add convert.md to document conversion task",2015-07-25T15:25:03Z
b9359b753106bdd584f33be2e48beaaf3d60bceb,Add convert.md to document conversion task,2015-07-24T23:07:15Z
034e0a4f344021cb4d3aea673798d0da2efa979b,adding example config for starting middle manager,2015-07-24T21:43:41Z
68e50c2e9a85ead16ce9d97381f97adf972516d3,"Merge pull request #1553 from druid-io/schema-design

Added section on best practices for schema design and a few other edits",2015-07-24T21:18:18Z
92293ef094c35777930b5fba8fdb5504d8bc96b6,Added section on best practices for schema designa and a few other edits,2015-07-24T19:00:36Z
2e1b6173466b75f1518a7ed501326d6756f23992,add more tests,2015-07-14T02:25:22Z
299367b0da5f3c59691b9b05205a393896265368,adding router config to examples/config,2015-07-24T03:47:47Z
0b1e0ae0ca87050b6a6eee627e906bf137da884e,"Merge pull request #1548 from himanshug/update_curator

update curator version to 2.8.0",2015-07-23T19:36:16Z
efef20e754eb0dbe31b973e4943c91d628cdbce1,"update curator version to 2.8.0
to get fix for https://issues.apache.org/jira/browse/CURATOR-168",2015-07-23T18:49:55Z
a8411e31a0d2332a97deb039237f9037758d839d,"Merge pull request #1544 from himanshug/combiner_doc

updating hadoop tuningConfig doc with useCombiner flag",2015-07-22T23:02:16Z
119ec13d2332eb9b55aac5fecf9758064432fdf1,updating hadoop tuningConfig doc with useCombiner flag,2015-07-22T18:55:00Z
e2ca556fa37185d157c6629a4674c66af65b5a53,"Merge pull request #1543 from mistercrunch/master

Documentation entry for Panoramix (a druid UI)",2015-07-22T02:00:11Z
db4928e73b08d3e45c6696f44a61979a7c82e648,Documentation entry for Panormix (a druid UI),2015-07-22T01:23:04Z
ce5de2b7a7553875eef1c89dccb729cb088ca152,"Merge pull request #1541 from himanshug/fix_agg_test_helper

dont waste memory in storing all lines from input",2015-07-21T05:08:20Z
d11d9b6c45d956295a6379b41034e03297c519a8,"dont waste memory in storing all lines from input
CharSource.readLines() reads all lines from input into a in-memory list
Since we need an iterator here, so this wastage can be easily prevented",2015-07-21T02:59:38Z
97242356b4c26d4f4a77a5b54bd0f95334b87bd1,"Merge pull request #1480 from guobingkun/kill_task_test

Unit tests for KillTask and MetadataTaskStorage",2015-07-20T23:31:45Z
0481c8ca26f7291de50e815f7032da7b0c15d99c,"Merge pull request #1406 from zhaown/fix-breaking-while-exceeding-max-intermediate-rows

Fix breaking while exceeding max intermediate rows.",2015-07-20T20:41:22Z
c4ed8fee56c84bc23c41b833995d663aad84d4e1,"Merge pull request #1472 from himanshug/combiner

Use Combiner to merge InputRows at the Mapper during Hadoop Batch Ingestion",2015-07-20T20:33:10Z
0eec1bbee2d25f4fa15667376723133013cb8ef2,json serde tests for HadoopTuningConfig,2015-07-15T18:19:36Z
f836c3a7acccc3c286af52470dda676c58324156,"adding flag useCombiner to hadoop tuning config that can be used to add a
hadoop combiner to hadoop batch ingestion to do merges on the mappers if possible",2015-07-15T18:17:16Z
4ef484048a4baa050f917ac939d8b6dda18832cf,"take control of InputRow serde between Mapper/Reducer in Hadoop Indexing
This allows for arbitrary InputFormat while hadoop batch ingestion that
can return records of value type other than Text",2015-07-15T18:00:57Z
f7a92db332485172ef5f0239d26b7c480b1f2b9d,generic byte[] serde for InputRow,2015-07-15T17:09:25Z
0439e8ec23d3f0fa2f276b60c2009cb5900e880f,"adding serde methods for intermediate aggregation object to ComplexMetricSerde
This provides the alternative to using ComplexMetricSerde.getObjectStrategy()
and using the serde methods from ObjectStrategy as that usage pattern is deprecated.",2015-07-15T17:05:49Z
020827349e8a80e07dab38b2400dfe478a7420ef,"Merge pull request #1539 from mvfast/cdh_workaround

Cdh workaround",2015-07-20T16:16:42Z
7211791585fd4d10845b88e9ead5a71e3633ac61,add workaround for cdh,2015-07-19T01:02:06Z
ce295a02cfb7c541d4e6817e746bd90e90a50035,"Merge pull request #1538 from himanshug/reco_hadoop_cp

recommend druid-hdfs-storage and hadoop dependencies to be in the classpath",2015-07-19T05:10:51Z
524b05f073cfcafba8def8ea300e3db30f2cbc10,Fix breaking while exceeding max intermediate rows.,2015-07-19T02:41:53Z
dd95ef77c09697056ee5508320ae4453017a07b6,recommend druid-hdfs-storage and hadoop dependencies to be in the classpath instead of added as an extension,2015-07-18T21:18:12Z
6e8da5de86822e1406e7d0e36a391dea426ddad2,"Merge pull request #1441 from metamx/queryResourceFlusher

Add flush prior to close on output stream in QueryResource",2015-07-17T23:32:52Z
0655e61d61710cc4d3e36cb035f845f62759c9a5,"Merge pull request #1507 from rasahner/feature-IntTestConfig

integration-tests: add ability to get configuration information from a file",2015-07-17T23:23:54Z
e051e93d19913e35f1a20d989717d0e29b33d780,"Merge pull request #1518 from RealROI/more-azure-features

Azure Blob Store support for Firehose and Indexing Service Logs",2015-07-17T23:10:22Z
0bda7af52ce2a70f37e03af9becf0c0ac0811ef7,"Add more support for Azure Blob Store

Azure Blob Store support for Task Logs and a firehose for data ingestion",2015-07-09T22:49:57Z
df5bc8974fc4962f05d8e79fe4a3250ac3d8921d,add ability to get configuration information from a file,2015-07-06T19:15:15Z
e21195f98702936aad6f52aceb6fcd0aae42f838,"Merge pull request #1469 from guobingkun/table_config

Inconsistent property names for ""druid.metadata.storage.tables.xxx""",2015-07-17T14:43:19Z
19af3bc9bcef0e022317574e78cc8226f0c2d850,"Merge pull request #1535 from metamx/alphanum-docs-tests

Update alphanumeric sort docs + more tests / examples",2015-07-17T03:09:41Z
2c464ad9367de51ab42607072beaad14be3df592,correct reference in docs + more tests / examples,2015-07-17T00:47:16Z
9616c10b1d8defded086a09b0b3d32fcbe0e91dc,remove import static,2015-07-17T00:46:21Z
c1308203b81d088006b9a48ffe2fddcb1e29f6b4,"Merge pull request #1532 from metamx/fixTopNDimExtractionDoubleApply

Fix TopN dimension extractions being applied twice",2015-07-16T20:39:02Z
3a0793aaf937762c8f46bb1aa9ff2f6022bee628,"Merge pull request #1533 from metamx/extraCheckGroupByDimExtraction

Add more unit tests for group by",2015-07-16T04:09:00Z
7d0b77c2616ca2296199dcceff6fffca92306fc4,Add more unit tests for group by,2015-07-16T00:21:50Z
4b1bd29424a29bc014f04096e0305d5932e5bc5e,"Merge pull request #1534 from metamx/fix-histogram-cachekey

fix histogram aggregator cache key",2015-07-16T01:32:52Z
6e4108c29b2f2069b97f0098b889821886d9feb5,"Merge pull request #1530 from sherry-q/ingestion-doc-fix

Fix Doc data-formats.md",2015-07-16T01:01:17Z
a15a2c4047ea6f7765d6ad48f8789ae5505b5c7b,fix histogram aggregator cache key,2015-07-15T20:02:42Z
9092c665b7f46190273e86dc1678642b2d484511,Fix TopN dimension extractions being applied twice,2015-07-15T23:58:15Z
850460446d1fec7cb2fef340f45bf2ba2e1267f5,"Merge pull request #1531 from druid-io/fix-ver

Fix versions in tutorials",2015-07-15T23:22:39Z
0074138bb9801edb686c30760c99e424c807c250,fix versions in tutorials,2015-07-15T23:17:09Z
bec8e8e23afca44b02a89d51c0171b379741c3af,fix doc data-formats.md,2015-07-15T22:13:33Z
456ad9ffba88f8e4e8df3ce21408ce12feeb3812,"Merge pull request #1529 from metamx/update-versions

inrement version",2015-07-15T20:25:31Z
4cfb00bc8a414e7892f8ac6e05af5dc5f8068d6e,inrement version,2015-07-15T20:09:05Z
a4cb0332fbf069a9405cdab996f8b909959a5784,"Merge pull request #1524 from metamx/peonShutdown

Make CliPeon run shutdown hooks properly",2015-07-15T17:09:33Z
6ea99ddc2cb40f9ddc6ee1259b24430e9e453e4b,"Merge pull request #1526 from metamx/execsMigration

Move lots of executor service creation to Execs",2015-07-15T15:48:55Z
44d63e4f7e64dbd567fdda846796ddc22c9a56cc,"Merge pull request #1528 from solimant/master

fix #1525 - typo: ""HadoopBatchIndexer""",2015-07-15T04:07:19Z
3b692fb6f7e94c10f98ac9a71ce10cd63ae86ea9,"fix #1525 - typo: ""HadoopBatchIndexer""",2015-07-15T03:48:24Z
ab705504ef8a595515bb02768c0cdf7f82da071b,"Merge pull request #1527 from metamx/integrationTestDocChange

Minor change to integration-tests README formatting",2015-07-15T00:03:11Z
80a18243dd419db258e3f97a91e1cdada54e4cf0,Minor change to integration-tests README formatting,2015-07-15T00:01:06Z
9400c473a81170f6ef3742bea13ba34cbfda2af6,Remove comments,2015-07-14T23:21:36Z
92d5c250ab75dfdb44943de8b67b3d4a415cdd8c,Remove comment,2015-07-14T23:20:36Z
5eadd395e2c64243791bdb781f494e0baef01215,Move lots of executor service creation to Execs,2015-07-14T22:32:17Z
2b87ad307da95b4ea4d39927e48b73bc9701f669,"Make CliPeon run shutdown hooks properly
* Also make jetty threads daemon",2015-07-14T21:26:27Z
62ce73ce59d8a0a1b4e6a795bb6b3973fa55b1c7,"Merge pull request #1522 from gianm/dependency-docs

Clearer language around external dependencies in tutorials.",2015-07-14T21:08:03Z
183f51fe5830c562aef4c64e5c7d1a47127bbaa6,Clearer language around external dependencies in tutorials.,2015-07-14T17:49:24Z
798c3320d0027814c4f8a961283d860ec71c6dbd,"Merge pull request #1475 from himanshug/derby_in_examples

for example/tutorial, use derby instead of mysql",2015-07-14T17:18:21Z
da8e86146e3fbd1c804d13229e6a7cd30f275d73,"Merge pull request #1505 from metamx/improve-test

Modify test to check for multiple shards for same interval",2015-07-14T15:50:47Z
3f7ba58227c81d42006f1d5f74d2fbe6b63c2440,"Merge pull request #1504 from metamx/fix-1447

fix for #1447",2015-07-14T15:50:08Z
14a07077a2f6956228449494fcff515258f6b4af,"Merge pull request #1519 from solimant/master

add section: ""What to Do When You Have a Firewall""",2015-07-14T06:20:59Z
91c15a90a9ce620aedec71a893f46a6f0bb5a6f1,"add section: ""What to Do When You Have a Firewall""",2015-07-14T05:12:16Z
e2ddfb7a1a2aa419754d0397efae86e54803294f,"Merge pull request #1511 from pjain1/remove_test

remove flaky overlord test",2015-07-13T23:38:34Z
1affdf7beca64f91606cb5ba569b93f447f7c275,"Merge pull request #1502 from samjhecht/poll-alerting

add alert on errors polling for rules",2015-07-13T23:37:37Z
59dec89f6abbd194dd18ac6122513b9aeb690384,remove flaky overlord test,2015-07-13T20:32:12Z
fc438e5a722fc172dffb67fc429f48e97278ac64,"add alert on errors polling for rules

reset retrystarttime after alerting",2015-07-08T21:14:20Z
725086cc89ba8789050487021b479346e6243719,"Merge pull request #1506 from gianm/realtime-plumber-nulls

Consider null inputRows and parse errors as unparseable during realtime ingestion.",2015-07-13T15:12:12Z
9068bcd06292e6aa4623995175af207b5b0824b6,"Consider null inputRows and parse errors as unparseable during realtime ingestion.

Also, harmonize exception handling between the RealtimeIndexTask and the RealtimeManager.
Conditions other than null inputRows and parse errors bubble up in both.",2015-07-09T19:11:38Z
cac722968ea60776c99af9e34ea7783b9b2a4229,"Merge pull request #1503 from metamx/fix-leaking-zk-nodes

Fix leaking Status Path nodes in ZK",2015-07-10T22:40:18Z
9f19e966588915314d5d687c36f07c3573110a80,"Merge pull request #1477 from pjain1/overlord_test

overlord and task master test",2015-07-10T21:27:14Z
55c4fe64f3a655b75f05347509dfffe93d0d0fc3,overlord and task master test,2015-06-26T15:07:58Z
e9b627bf55578bb2493213649b33b73e3401f0e7,"Merge pull request #1476 from pjain1/improved_tests

all the review comments have been taken care of, so merging.",2015-07-09T21:25:30Z
1766341648f29293cffa2fa575ecfec58e630b18,"Modify test to check for multiple shards for same interval

Modify test to check for multiple shards for same interval.",2015-07-09T15:05:31Z
58cc3954ffe4f24c6c505fb7df7a22dd9b1c6395,improved coordinator and datasourceresource tests,2015-06-23T05:12:33Z
5fe27fe4ad6ee391aef229046621b397447eae52,"fix for #1447

fixes #1447",2015-07-09T13:35:48Z
8d7a566bae970fb8c6b94fba3b2f3eb61d2b8fd7,"Fix leaking Status Path nodes in ZK

- remove  ZK status path nodes for workers after they are removed",2015-07-09T11:50:09Z
b3d360f990755fa06adbd7bb54b9bd6a48804421,"Merge pull request #1499 from metamx/fix-groupby-caching

fix groupBy caching to work with renamed aggregators",2015-07-09T06:52:11Z
184b12bee849a2058e38488e01632046fc9dfc3f,"fix groupBy caching to work with renamed aggregators

Issue - while storing results in cache we store the event map which
contains aggregator names mapped to values. Now when someone fire same
query after renaming aggs, the cache key will be same but the event
will contain metric values mapped to older names which leads to wrong
results.
Fix - modify cache to not store raw event but the actual list of values
only.

review comments + fix dimension renaming

review comment",2015-07-07T13:39:55Z
31d05e33a13855c5870f2b66e535549db19ceb75,"Merge pull request #1500 from metamx/fix-1466

emit alert on errors when polling segments",2015-07-07T21:50:29Z
448d245a447459ccfdc4fbbb058889d7be7fa60a,"Merge pull request #1497 from druid-io/rework-realtime-eg

rework the realtime examples a bit; add more faq",2015-07-07T21:09:33Z
08d00cc80fe6d70bfc7e919a2f7f9be03a79d33e,rework the realtime examples a bit; add more faq,2015-07-03T00:57:10Z
1a3163ad7fa6ff4841ae64a542fc6a55ba7da15a,"Merge pull request #1501 from himanshug/fix_doc_link

make concepts link in toc more robust",2015-07-07T20:47:26Z
db00533bc81f23b7b905d67c54da0167687ee167,make concepts link in toc more robust,2015-07-07T19:53:22Z
b2bc46be178e9f844523d7d5af0148cd49b72686,"Merge pull request #1484 from tubemogul/feature/1463

JobHelper.ensurePaths will set job properties from config (tuningConf…",2015-07-07T17:58:16Z
3e960dcc01ddfdd0d26d7f380b6d7ba3cb0cc2de,"Merge pull request #1496 from druid-io/more-docs

Add more docs based on proposed wishlist",2015-07-07T17:03:02Z
fe36f7f8526dc3fe28ce1139afc263b1ad32fee8,emit alert for DB polling error,2015-07-07T14:21:36Z
66d105940dfd60c3aa6d7192c506d4d47390ea24,"Merge pull request #1465 from gianm/hadoop-indexer-config-hdfs

read hadoop-indexer configuration file from HDFS",2015-07-06T18:25:13Z
d846f3ced6eca018dcb4a8fae537170633c20789,"Merge pull request #1498 from rasahner/doc_localFirehose

say explicitly that local firehose searches dirs recursively for files",2015-07-05T22:34:36Z
acd20e8c00a7f4c38a55a3ee53388160c92340ba,say explicitly that local firehose searches directories recursively for files,2015-07-05T19:46:44Z
42ac41d55e6b877606142da7fc367531e84193e4,add more docs based on proposed wishlist,2015-07-03T00:46:08Z
e7f2cb31906dc80133369adf3d00f72d124f84c8,"Merge pull request #1494 from krismolendyke/patch-1

Make postAggregations example a list type.",2015-07-02T19:58:40Z
5b5e3caba93dc4efdb84e26699796b77c9a5621e,Make postAggregations example a list type.,2015-07-02T18:37:23Z
3ce32f97ec3f13bc7ef47a0f078e52e3902f5957,"Merge pull request #1493 from metamx/cleanupTestFiles

I'm not your mom, indexing-service/test... cleanup after yourself",2015-07-02T17:03:12Z
b9eebfd73b8e0f0316cd9850a6c972b3d80ac71c,"Merge pull request #1488 from metamx/testingFriendlylog4j2XML

Add optional log4j2 for debugging",2015-07-01T22:39:06Z
c0b60c0d2f630ee4c188ad2f778422f926616ea6,"I'm not your mom, indexing-service/test... cleanup after yourself",2015-07-01T22:00:09Z
fdbc1adb0a7ed73212f25bff64a73e0a54b36e13,"Merge pull request #1491 from metamx/remove-unused

ModuleList is already part of Initialization",2015-07-01T20:50:51Z
6ad451a44ae16b70eef7d9bdbe264db46b6ddbc0,"JobHelper.ensurePaths will set job properties from config (tuningConfig.jobProperties) before adding input paths to the config.
Adding input paths will create Path and FileSystem instances which may depend on the values in the job config.
This allows all properties to be set from the spec file, avoiding having to directly edit cluster xml files.

IndexGeneratorJob.run adds job properties before adding input paths (adding input paths may depend on having job properies set)

JobHelperTest confirms that JobHelper.ensurePaths adds job properties

javadoc for addInputPaths to explain relationship with
addJobProperties",2015-06-26T07:57:22Z
9789417612dd1bd5cef5f00a4d541a309963fbd6,ModuleList is already part of Initialization,2015-07-01T18:37:28Z
2c463ae435e4efb922dbb7f28a3cbf01e2c036ba,"Merge pull request #1489 from metamx/moveTestPackages

Move some test packages",2015-07-01T18:18:09Z
eec972afa31ea00d36ab1e91a7127dab7eb707b1,"Merge pull request #1490 from metamx/smallCommentInDimExtrTopN

Add coments to DimExtractionTopNAlgorithm",2015-07-01T17:47:49Z
5e19a615f124f6c690bca7e915475efcf6a9d932,Add coments to DimExtractionTopNAlgorithm,2015-07-01T16:54:31Z
7a2a8a3d6e3ceffcb5cc67d892a658db56d1dd84,Move extraction tests to more reasonable package,2015-07-01T16:51:38Z
a37d631cea1009f4efae17f300134566bd1abf82,Add log4j2 for debugging which can be specified with `-Dlog4j.configurationFile=/some/path/druid/common/src/main/resources/log4j2.debug.xml` during testing and development,2015-07-01T16:52:28Z
f2919b98b10e0893cf2c7769c1f30563f3227e60,"Merge pull request #1471 from metamx/direct-client-metrics

add query/node/time metrics to DirectDruidClient",2015-07-01T05:06:44Z
473bc101d75e6e8668395a5fe32e6195139aea0b,"for example/tutorial, use derby instead of mysql",2015-06-28T23:23:16Z
b4eec5b47dd67051ebe6ef2efec65f523e05cf7c,"Merge pull request #1483 from himanshug/fix_doc_links

fix toc links per the shortened names from commit d2346b68344",2015-06-30T19:18:40Z
12f5d1743e837e28844fa7c1893039072e0a145e,fix toc links per the shortened names from commit d2346b68344,2015-06-30T19:16:40Z
282a0f9760336ec16430c887cf975e9d9fe5ee5e,Unit tests for KillTask and MetadataTaskStorage,2015-06-18T18:46:30Z
b5b9ca14461c0b54d5b0b81ec27e42cf8e3e44c6,"Merge pull request #1470 from pjain1/rtindex_test

Realtime Index Task test",2015-06-29T21:51:35Z
8c551ed889701a7c6ef281444e5743efd83d3bf2,very minor fix to the TOC,2015-06-29T17:49:45Z
e42d5ac785e76955ac20d270a1f561fee846b1cc,Merge branch 'master' of https://github.com/druid-io/druid,2015-06-29T17:49:30Z
2f522f8c8d3ed28f94d24d5071d399685362d9ad,"Merge pull request #1479 from himanshug/fix_doc_imgs

fixing the links to doc images",2015-06-29T17:23:06Z
4114b4902e56d752f29c96f3a73ba9671a601236,fixing the links to doc images,2015-06-29T17:17:42Z
4a0ae7d8d54f67a63e9289ca892b3faf214e3f68,"Fix inconsistent druid property names for ""druid.metadata.storage.tables.xxx"" between document and code",2015-06-26T20:35:43Z
8172bdff1cf88861270c1961e64cb929906c98df,"Merge pull request #1468 from guobingkun/fix_npe_for_storage_action_handler

Fix npe thrown from SQLMetadataStorageActionHandler",2015-06-29T14:57:51Z
284b80b09e4dc9db2e1c082a05ac37e6c0980c38,Realtime Index Task test,2015-06-18T21:28:14Z
2da12de59824a811549f9d2280a1e81053591cd3,add back query/node/(time|ttfb) docs,2015-06-27T00:56:57Z
28fa1642b904e29103b35cc53d95e04d99fba7f5,add node time metrics to DirectDruidClient,2015-06-26T22:18:11Z
f883ff2dabbd88e06a7e03c4b4750df5a642a98c,"Merge pull request #1467 from metamx/cachingclientNoEmit

Remove metrics emitting from caching clustered client",2015-06-26T23:21:23Z
fbcac10e000ac866ba7feb6d048e48d418218f56,Remove metrics emitting from caching clustered client,2015-06-25T22:42:46Z
e4e18b17b5232816e150eb2e18159f807d80b178,fix npe thrown from getEntry() and getStatus() SQLMetadataStorageActionHandler due to a non-exist entryId,2015-06-26T15:40:56Z
4a3a7dd1adf892f3fda75681e04e10851083ca15,read hadoop-indexer configuration file from HDFS,2014-09-08T13:54:12Z
0c85c8c60a31863f8bdac2d46a92e87d86dd5d9a,"Merge pull request #1462 from pjain1/validate_rules

tieredReplicants can be null",2015-06-24T20:29:27Z
ff738ace050b4fbc37a372c6fcc0b75666540a83,converting null tieredeplicants to default and not allowing empty ones,2015-06-24T15:42:57Z
985955534656e012a307c4021faf3a0c45ae43b0,"Merge pull request #1446 from conradlee/docs-segment-details

Improve segment file documentation",2015-06-24T19:14:59Z
f214b412ca034ce891cccd827cb7f0d6e9f54ed2,Improve segment file documentation,2015-06-17T23:06:44Z
9104d08a6aa24e667e11ec658c7e9a1968a7ac1f,"Merge pull request #1461 from rasahner/doc_queryFixes

minor fixes to TimeseriesQuery and Aggregations",2015-06-24T15:12:09Z
a938e65315339d3b33962d41a52971eb437fc783,minor fixes to TimeseriesQuery and Aggregations,2015-06-24T13:24:07Z
8795792dba9aa35874d951c28d3c809fab88df43,"Merge pull request #1454 from optimizely/hao/hadoop-fixes

A couple of hdfs related fixes",2015-06-23T20:40:25Z
726ed432a1acba00f7c6e76a06da341d761080d8,"Merge pull request #1451 from rasahner/doc_minorFixes

minor documentation fixes in Tasks.md, index.md, indexing-service.md",2015-06-23T17:15:47Z
2544f3655eef99282cf069cabdeb14ac52d49ed2,"Merge pull request #1457 from ravishrathod/rabbitmq-doc

updating doc for rabbitmq firehose",2015-06-23T15:24:49Z
36b445378962754cc060e0c7c478ad3573f75093,"Merge pull request #1455 from druid-io/fix-protobuf

Fix protobuf impl and docs",2015-06-23T06:15:40Z
37cafbdebbccf6f8b9efa07ea2044a9e05715b68,"Merge pull request #1459 from metamx/fix-redirects

fix broken redirects",2015-06-23T06:09:50Z
d9dfff068978359f1a16d0dfc5dbe7652ee3206f,fix broken redirects,2015-06-23T06:04:04Z
6fa49b771cbf43a0bc5add623018d575b61deb2b,"Merge pull request #1453 from metamx/concicebenchmarkComplement

Update bytebuffer-collections and add basic ConciseComplementBenchmark for testing concise complements",2015-06-23T03:11:42Z
88b2ef5d6bb4c0a907ea4036c2dd6d027b7e6b84,Update bytebuffer-collections,2015-06-23T01:07:24Z
0c13fd80181f568e5d1ec6b312908d36650de021,"Merge pull request #1450 from metamx/cache-key-distribution

Fix bad distribution of cache keys across cache nodes",2015-06-23T00:58:15Z
0d8a526ef3a34cb3176ddeedadae6009331062f9,Merge branch 'master' of https://github.com/druid-io/druid,2015-06-23T00:47:26Z
4a83a22f8c8d25615c0ceb25f879d350ab250469,"Merge pull request #1445 from metamx/JSWorkerSelectStrategy

JavaScript Worker Select Strategy",2015-06-22T22:19:13Z
34c8f4c3dac6cd6059d77e7f4554a853f3d8a2f9,"Merge pull request #1437 from metamx/limitUsedSegmentInterval

Add start and end bounds to getUsedSegmentsForInterval",2015-06-22T19:11:38Z
8d91c8d3992ea5927e463801530da99d7220f9f8,"Add start and end bounds to getUsedSegmentsForInterval
* Add unit tests
* Add javadoc for methods in IndexerMetadataStorageCoordinator",2015-06-13T01:06:05Z
f0f453940f2d52368d1f87c382a6abaa34bc9373,"Merge pull request #1456 from metamx/test-1120

test for #1120",2015-06-22T17:54:24Z
9213fd3801fc3c416b3728113030e97f9138ce85,updating doc for rabbitmq firehose,2015-06-22T06:40:11Z
f9cdb0ad61526c65750ab988304457f5ed5c2023,"test for #1120

Make the changes described in #1120 to add test for the issue described
there.",2015-06-21T18:04:21Z
9c7499355987323365200b8457d596265bf07243,fix protobuf impl and docs,2015-06-21T04:59:38Z
1931491c9f13f7e1b5dbeacab15ece3d2cd910f7,"A couple of hdfs related fixes
* Class loading issue with hdfs-storage extension
* Exception when using hdfs with non-fully qualified segment path",2015-06-20T00:22:20Z
b72a70522b8a6d8c9a123eee57828b0012daa55f,Add basic ConciseComplementBenchmark for testing concise complements,2015-06-19T23:47:41Z
f1951b253ce64495b840d488375c0429b8493c21,"Fix bad distribution of cache keys across nodes

With the existing hash function some nodes could end up with 3 times the
number of keys as others. The following changes improve that to roughly
less than 5% differences across nodes.

- switch from fnv-1a to murmur3_128 hash
- increase repetitions for ketama algorithm
- test to analyze distribution

Also updates spymemcached for recent bugfixes",2015-06-19T19:35:36Z
4ba34fe43d86e643b0fbec83be88c0c1c17ecef4,"minor documentation fixes in Tasks.md, index.md, indexing-service.md",2015-06-19T22:09:53Z
fb4052d577a660d7c2e7279da297ff9defb2dc41,"JavaScript Worker Select Strategy

this PR adds a JavaScriptWorkerSelectStrategy which allows defining
arbitrary logic for selecting workers to run task using a JavaScript
function.

This gives users full control to implement complex worker selection
strategies based on task attributes.

more tests and a complex javascript config

fix for java8 modify for nashorn compatibility",2015-06-17T14:28:30Z
0a5bb909a2a87a9a23e0b16ff8119f3c701372b3,[maven-release-plugin] prepare for next development iteration,2015-06-19T00:35:19Z
59c6b2b279caaa75abe1ddc39a1617504106cbdf,[maven-release-plugin] prepare release druid-0.8.0-rc1,2015-06-19T00:35:14Z
d276d2c90bb913d2aa0b89705af92d5ab3c46c72,"Merge pull request #1444 from druid-io/logging-improvement

Separate bootstrap threads from loading threads on historical startup",2015-06-17T22:24:07Z
06c97b6d7db9eb74ebb52659630c0447e8332fee,"Separate out the ""bootstrapping"" threads from the ""loading"" threads.

It is highly recommended to keep loading threads single threaded.  There can be benefits to having multiple bootstrapping threads, though.  Those bootstrapping threads shouldn't be kept alive for the whole life of the process, however.

Also, adjust some logging and do some code cleanup.",2015-06-17T18:32:12Z
f7a7daeff97004afe96825094e435068f1c5d1f0,"Merge pull request #1434 from metamx/fix1433

Wipe FileContext off the face of the earth",2015-06-17T04:42:40Z
0539e0073d3405937d2bbc57c5333509066a1c11,"Merge pull request #1442 from guobingkun/broker_server_view_test

Unit test for BrokerServerView",2015-06-17T02:45:20Z
1aad7ce521ea21dfcaa6793b8c669266933f2761,Add a bit more information to the mapping logging logic.,2015-06-17T02:11:04Z
446d01cc53846f275497069c894da34f14a2c38d,Unit test for BrokerServerView,2015-05-29T15:06:14Z
69bbe21512e05c90f258468ae609f8d3e7a07504,Add flush prior to close on output stream in QueryResource,2015-06-16T18:40:56Z
94a567732a8ff663cd9436438fc715bcf565804e,"Wipe FileContext off the face of the earth
* Fixes https://github.com/druid-io/druid/issues/1433
* Works arround https://issues.apache.org/jira/browse/HADOOP-10643
* Reverts to the prior method of renaming",2015-06-12T22:04:34Z
0de914823d7cec53d4d984b5152c7100a5760f4c,"Merge pull request #1435 from metamx/jitterWaitTimes

Add jitter to the retries for RemoteTaskActionClient",2015-06-16T05:24:19Z
acc0a3fbf7260bf580ccf6cd6845ea9fb016c1f1,Add jitter to the retries for RemoteTaskActionClient,2015-06-13T00:43:25Z
6763e3780a85d70403ab075cc498ce56c352bf7b,"Merge pull request #1417 from metamx/rtr-fixes

fix behaviour of middlemanagers around ZK disconnects , fixes #709",2015-06-10T21:42:49Z
9cf8662aeb04a170e5a54939867028c79bf54965,"Merge pull request #1427 from guobingkun/fix_issue_1016

Fix duplicate extension loading issue described in #1016",2015-06-10T21:42:24Z
bdf4d541e315856bfa368d09c630bb80f4c42ede,"Fix issue #1016 that if user specifies extension coordinates, the local extensions will be loaded twice,
which could cause Guice duplicate binding errors.
Add unit test to replicate duplicate extension issue. Update documents. Add an package accessible getter for loadersMap for testing only.
Notice that extensions explicitly specified in druid.extensions.coordinates have a higher priority than ones included in the classpath.
Extension modules that don't have a canonical class name will be ignored.",2015-06-05T06:01:23Z
e9afec4a2b124dbc87fbda602f74ede00b982725,"fix task status issues on zk outages

docs

review comments

fix test

review comments

Review comments

fix compilation

fix typo",2015-06-02T17:33:37Z
78d468700b28f5a38f422edb4bb2d2503e610f75,"Merge pull request #1388 from metamx/fix-1360

fix race described in 1360",2015-06-10T18:59:36Z
7fd9dcff4894407eb3877fd7cdf7c02319d00c0b,"Merge pull request #1409 from metamx/convertTaskMerger

Converter to use TaskMerger not TaskMaker",2015-06-10T18:58:52Z
f6b336ac3e297b62583decf8d9ca5ee5fe08a345,"Merge pull request #1432 from metamx/config-fix

fix passing of config from IndexTuningConfig to RealtimeTuningConfig",2015-06-10T18:42:58Z
6230ac90ae823839c8009bb4f554b77f0ecacfcc,Use IndexMerger for conversion,2015-06-01T21:44:20Z
0004ba249fed011ee31b4c1afd18814e80c657ce,"Merge pull request #1351 from metamx/hadoopConvert

Add Hadoop Converter Job and task",2015-06-10T18:07:06Z
963682d69681691f39dbe047905929b9fe4bd9af,Add check for valid rowFlushBoundary configuration and fix tests,2015-06-10T16:08:34Z
191b302f6af41d38a512d053874e333ae7362378,"fix passing of config from IndexTuningConfig to RealtimeTuningConfig

- pass rowFlushboundary correctly instead of using default.
- fixes indexTask failing with
io.druid.segment.incremental.IndexSizeExceededException when
rowFlushboundary is set higher than
RealtimeTuningConfig.defaultMaxRowsInMemory

rename test method",2015-06-10T13:51:39Z
e5937482bc7e79945a4ee51858f909091b26b2de,"Merge pull request #1431 from pjain1/coordinator_ut

Druid Coordinator test",2015-06-10T14:24:39Z
af9ea08041b58895a66b8a7dc3d76b54ee92828d,"fix race described in 1360

review comments

review comments

review comments

no need to remove

fix test

review comments",2015-05-26T16:28:38Z
056cab93ed1022a94fd781b2ceef5079ad58f330,"Add Hadoop Converter Job and task
* Fixes https://github.com/druid-io/druid/issues/1363
* Add extra utils in JobHelper based on PR feedback",2015-05-04T18:37:07Z
b72e6fd51a114c8067092b874a58751e88f299a6,Druid Coordinator Unit test,2015-06-01T15:08:15Z
6ae4ecc7d445b40f9c5e3cb2e6a6a29116a0a774,"Merge pull request #1428 from metamx/abstractifyHadoopConfigStuff

Abstractify hadoopy indexer configuration.",2015-06-08T18:26:34Z
2a76bdc60a76358746616c2e5e4126e59f33c3a8,"Abstractify hadoopy indexer configuration.
* Moves many items to JobHelper
* Remove dependencies of these functions on HadoopDruidIndexerConfig in favor of more general items
* Changes functionalities of some of the path methods to always return a path with scheme
* Adds retry to uploads
* Change output loadSpec determining from using outputFS.getClass().getName() to using outputFS.getScheme()",2015-06-05T23:56:29Z
04e4aac03bf8bc6845648ff5e3c983c75b03d01e,"Merge pull request #1430 from guobingkun/lazy_init_abstract_http_client_provider

Make AbstractHttpClientProvider contents lazily instantiated",2015-06-08T16:33:35Z
22607d19be5f748bfd52bc6d260638c5e1eba6d3,Make AbstractHttpClientProvider contents lazily instantiated,2015-06-08T14:01:45Z
52f261eea76d9584887138bb3e1c9a10197685f6,"Merge pull request #1429 from druid-io/fix-doc

rename servermonitor to historicalmetricsmonitor in docs",2015-06-06T00:33:06Z
afdd9304cf2f8d62a045fa9c6148f667f2fb93b5,rename servermonitor to historicalmetricsmonitor in docs,2015-06-06T00:32:04Z
b0085c8a8bb257766ea1ce4b7dc011bb57f2efdb,"Merge pull request #1426 from druid-io/more-links

Add more links for talks",2015-06-05T21:37:19Z
6744eb2889e2f38c2942afc5c8da22bf8ccffa25,Add more links for talks,2015-06-05T21:35:56Z
c6f36dcccb5453cdd51c2ecf37f1e26fe1b26647,"Merge pull request #1411 from metamx/more-benchmarks

More benchmarks for data compression",2015-06-05T05:01:39Z
395ba79f8b50e192fa77d444ea743fefcdea541d,"Merge pull request #1403 from metamx/mergerMakerTests

Improvements around resource handling in IndexMerger / IndexIO / QueryableIndex",2015-06-04T22:59:10Z
f1721fa9120d7b534192d6c373acaeaecc99e46d,"Merge pull request #1410 from guobingkun/unit_test

Unit tests for LoadQueuePeon and SegmentLoaderLocalCacheManager",2015-06-04T22:58:13Z
1646f650b67a3b48c332aadc7df4a934fc3fada3,"Unit tests for LoadQueuePeon and SegmentLoaderLocalCacheManager, JavaDoc for LoadPeonCallback",2015-05-27T04:40:02Z
ed8eb5c99120e744b30090c2ae63e173c9ba1137,"Improvements around resource handling in IndexMerger / IndexIO / QueryableIndex
* Fix resource leak in `io.druid.segment.IndexIO.DefaultIndexIOHandler#validateTwoSegments(java.io.File, java.io.File)`
* Un-deprecate `close()` in `QueryableIndex` and make it inherit `Closeable`
* Fix resource leaks in various unit tests
* Add `CloserRule` for closing out resources",2015-05-29T16:26:39Z
f81a0d92107548cdd3166a45b4f418a2c989b0f3,"Merge pull request #1425 from guobingkun/guice_fix

Anyways, @guobingkun , if possible,  can you please test proposed change and send another PR to fix #1016 .  but that doesn't necessarily hold this PR, so I'm merging this.",2015-06-04T19:43:26Z
f44f7f07de5d75a6596f0d60f5f42de500d308f4,"Merge pull request #1424 from pjain1/validate_rules

Check lower bound of replicant values for rules",2015-06-04T19:16:50Z
1030899cdfe78b740d957e9819141b2e8df6d40f,Check lower bound of replicant values for rules,2015-06-01T15:23:05Z
37873eb4f0bb11fa0bcca289ba3188ada2069afc,"more benchmarks + filter

fix test

Modify test to access random filtered rows

formatting

fix test

remove main method

Add newline

Add newline",2015-06-02T05:26:48Z
dc26350480188441b0fe492a3b158774d59caaff,Separate overwrite of Guice modules into 2 steps so that extension modules can overwrite cli modules,2015-06-04T02:14:28Z
50ad0e64748fd4721408b8cbeb8233dd8ec85f3e,"Merge pull request #1412 from pjain1/alphaNumericTopN_NPE_fix

NPE fix for TopN query with alphaNumericTopN metric spec",2015-06-04T14:49:31Z
a7b09e857c4c44964b74b3d1582fc6f2cd425622,NPE fix for alphaNumericTopN when pervious stop is not specified,2015-06-02T18:04:09Z
35e2fde18ef334e20a7c897658723ce7c9b28d15,"Merge pull request #1386 from himanshug/aggregation_testing1

General class for testing any Aggregation Implementation",2015-06-04T06:43:36Z
7f5164db14187ae941b43a555f0c65554bb9fb72,"Merge pull request #1418 from metamx/reduce-test-runtime

reduce test runtime",2015-06-04T04:40:36Z
21864a940744a4295503135d3ebf2276b9c01b8f,"reduce test runtime

fix check

fix test",2015-06-03T11:52:33Z
ef9b67cce36d5d856d30156c408c1ae869cb0c93,"Merge pull request #1422 from metamx/fix-ec2-public-ip

fix public IP not working in EC2 autoscaling",2015-06-03T23:30:51Z
4ebdfea76f0b30a327f2770b78e220ebb826b7c6,fix public IP not working in EC2 autoscaling,2015-06-03T22:46:10Z
c096c21b6ad7975ab055d9836fa5dfe7314f422f,"Merge pull request #1413 from metamx/TaskUtilIdCommonizer

Move TaskUtils.makeId to AbstractTask",2015-06-03T20:54:22Z
8289914f76ceaddb5fc79a86f11e62e98f982518,"Make AbstractTask.makeId use AbstractTask.joinId
* Also remove TaskUtil",2015-06-02T18:12:39Z
92d7316ed88b6b994d353262819f8d3ea348d250,"Merge pull request #1414 from metamx/timeout2TIMEOUT

Replace ""timeout"" with QueryContextKeys.TIMEOUT",2015-06-03T00:11:09Z
1c4d42bc15dadb5dce6bb44ee83d281e0a54f2ec,"Replace ""timeout"" with QueryContextKeys.TIMEOUT",2015-06-02T21:49:21Z
224886ab52867bb6c33b176173dbef1f2b36b8cf,"Merge pull request #1370 from metamx/dimExtractionOptimizations

Add optimizations for ExtractionFn by enabling MANY_TO_ONE vs ONE_TO_ONE codepaths",2015-06-02T20:25:19Z
f48db09e35c8dc009e236933eb7d6578c47ff170,"Add optimizations for ExtractionFn by enabling MANY_TO_ONE vs ONE_TO_ONE codepaths
* Also adds LookupExtractionFn and MapLookupExtractor which takes in an explicit mapping of renames
* Add injective to javascript extraction fn",2015-04-07T01:21:41Z
215c1ab01e139f214ba5ff3b30195c840f984b12,UTs for hyperUnique aggregation,2015-05-22T22:02:39Z
160d5fe6b7a927d4b1bd431a52ddb3e2bd69ecac,a general class for testing any [complex] aggregation implementation,2015-05-22T22:01:49Z
ab3486235306b8c41ada08c1bb6ebaf91711fab9,"Merge pull request #1408 from druid-io/rename-links

Update links to point to druid-io",2015-05-31T20:38:32Z
74d88404142da13a26ab4fd4657cf2dfacc3882d,Change tranquility links,2015-05-31T17:59:38Z
39c55b417ed76cddb3eddf72a9cacee08892dd71,"Merge pull request #1405 from himanshug/fix_doc

in batch ingestion metadataUpdateSpec->type is derby, mysql etc",2015-05-30T03:42:21Z
be4ecc4b910427eede825757dec6c12fdd95199a,"in batch ingestion metadataUpdateSpec->type is derby, mysql etc and not metadata",2015-05-30T03:16:18Z
24306d20b6c70f72d71fac69fa667d1e210d2dad,"Merge pull request #1344 from himanshug/change_tutorial_file_names

change all docs/content/*.md filenames to only have lowercase and dashes",2015-05-30T02:37:04Z
96103e1227c8cbf2dd5b18f1b873e0cdd77bd599,remove whirr from documentation,2015-05-29T19:46:37Z
d2346b68344ad56e05da85519f4572ef7ff00384,"shorten links and file names

* remove redundant parts in file names
* delete unsupported ""Druid-Personal-Demo-Cluster""",2015-05-29T00:10:34Z
8edc2aaca34982bb405df1a6d0cdb0e5dd19d7d2,"renaming all *.md filenames to only have lowercase and dashes
so that they are editable on case-insensitive os as well",2015-05-05T21:07:32Z
20fdb627d99b3cf0d29c85270f801868d8c4d7c8,"Merge pull request #1399 from druid-io/overlap-check

Add schema check for overlap between dimension and metric names",2015-05-29T16:39:22Z
185c99deec91dba3687128121d953d06abe0ffd9,Add schema check for overlap between dimension and metric names,2015-05-28T21:24:46Z
069fc25528fe9eef9231350af8ef4657b78241f4,"Merge pull request #1402 from metamx/IndexMergerTests

Add more IndexMergerTests",2015-05-29T04:15:18Z
ac9057c00e0c3771e6e87a45cbe87c8fc5f33277,"Merge pull request #1401 from metamx/ec2-public-ip

flag to enable public IP in EC2 autoscaling",2015-05-29T03:21:32Z
55292bba13832ab8146d951264c0a0d2cd38bca9,Add more IndexMergerTests,2015-05-29T01:18:20Z
d834a974bab08368d008fc23a4d20c2a83a54add,flag to enable public IP in EC2-VPC autoscaling,2015-05-29T00:28:52Z
2fb2b6ce6b4ac40107ae4dcb467ade098bc37901,"Merge pull request #1397 from druid-io/fix-index-task-slow

Make the index task use indexmerger and not indexmaker",2015-05-29T00:14:48Z
13c402d5d69ff4c302a322e3252acb3b024e03de,"Merge pull request #1400 from metamx/groupByCheckForNullDimSpec

Add checkin GroupByQuery for null DimensionSpec in dimension list",2015-05-28T22:48:30Z
1ebe622c7dc72022a3da38bd303f62e08c0ff2a2,Add checkin GroupByQuery for null DimensionSpec in dimension list,2015-05-28T21:54:41Z
bb1145ef5664858048dbd798d53ba936d414e410,Make the index task use indexmerger and not indexmaker,2015-05-28T20:33:45Z
f588a95f36f42dc86179dee2cabf7d0075141520,"Merge pull request #1396 from druid-io/minewhat-master

druid production architecture diagram",2015-05-28T00:08:44Z
5812b3dd5cf8c1360d1c3fd6ec32f35bbe31508e,druid production architecture diagram,2015-03-17T20:08:33Z
fe286d28d100cd468c6532e768a1ae7cea821d7d,"Merge pull request #1395 from druid-io/new-logs

Additional schema validations and better logs for common extensions",2015-05-28T00:01:13Z
be2a35188e540cc8c2c960676e273e8d88149346,Additional schema validations and better logs for common extensions,2015-05-27T16:48:25Z
f9c624c7db6692a1352698adeb5e31c94f3dd23f,"Merge pull request #1361 from mrijke/groupby-limithavingorder-unittest

GroupBy Query with Having/Limit/Orderingspec inconsistencies (UnitTest)",2015-05-27T21:49:18Z
1a3f04f0edf1a9b3b2ee7a180f0bd5f4cc044de9,"Merge pull request #1354 from metamx/multi-valued-dimension-compression

Enabling compression for multiValued dimension",2015-05-27T06:43:53Z
55092d225c83e3dd919144c6a68980f6bdbbf964,"Merge pull request #1392 from metamx/fixRoaringConciseExtractionFilter

Fix roaring extraction filter on empty values",2015-05-26T21:33:29Z
fd64c24e4353a0448c68f34795d88d4abcfc622d,Fix roaring extraction filter on empty values,2015-05-26T20:54:18Z
81415282aa6902120ba367521ef337390cb781b4,"Enabling compression for multiValued dimension

Add test and refactoring

Add benchmark tests",2015-05-11T05:02:54Z
600b30566cd94bed06876fd8a474a289ab0c3c4d,"Merge pull request #1385 from metamx/brokenDimExtractionFilter

Fix for breaking Dimension Extraction Filter on empty filter",2015-05-25T16:51:17Z
e97d22a10a33c793b52314f50160f429e2d0c596,Fix Extraction Filter cast problems for empty results,2015-05-22T22:20:11Z
e1399b7ce4b7477dba8a4217c8fb26fff5263c14,Add unit test to show breaking Dimension Extraction Filter,2015-05-22T22:02:11Z
cd6df1febae87353b06f9b74459a85f4bcb5b780,"Merge pull request #1384 from gbuisson/patch-1

added clj-druid to query libraries (clojure)",2015-05-22T20:16:50Z
c1b175259506b37d0f20aebf47d2098c49d70ab4,"Merge pull request #1383 from metamx/psql-transient

retry transient exceptions for PostgreSQL, fixes #1382",2015-05-22T20:01:53Z
75c092ccb17fbbd93a21551554c6db91c2b71429,"Merge pull request #1375 from metamx/MetricManipulatorFnInstances

Modify MetricManipulatorFns to use instanced classes",2015-05-22T19:56:47Z
042653ebcbd2892a0932194af33e006c73efa66a,Modify MetricManipulatorFns to use instanced classes,2015-05-18T21:21:01Z
490c97b041df31987dc997954d30d88384dda056,"Merge pull request #1381 from himanshug/fix_seg_metadata_regression

Fixing the regression caused by #1172",2015-05-22T19:26:29Z
6b23e02d2bf3f67ed9619453e65a2299a20a1c76,"retry transient exceptions for PostgreSQL, fixes #1382",2015-05-22T13:35:03Z
723df735e9eeb4a7ba625969ce25749638600dea,force eagerness of processing of SegmentMetadata queries on the processing executor by converting the Sequence into List,2015-05-22T02:15:15Z
5852b648525fc48c74383c160de486c183cbcc87,"adding UT for SegmentMetadata bySegment query which catches following regression caused by commit 55ebf0cfdf5c290a462f188d71c806b595eec689
it fails when we issue the SegmentMetadataQuery by setting {""bySegment"" : true} in context with exception -
java.lang.ClassCastException: io.druid.query.Result cannot be cast to io.druid.query.metadata.metadata.SegmentAnalysis
at io.druid.query.metadata.SegmentMetadataQueryQueryToolChest$4.compare(SegmentMetadataQueryQueryToolChest.java:222) ~[druid-processing-0.7.3-SNAPSHOT.jar:0.7.3-SNAPSHOT]
at com.google.common.collect.NullsFirstOrdering.compare(NullsFirstOrdering.java:44) ~[guava-16.0.1.jar:?]
at com.metamx.common.guava.MergeIterator$1.compare(MergeIterator.java:46) ~[java-util-0.27.0.jar:?]
at com.metamx.common.guava.MergeIterator$1.compare(MergeIterator.java:42) ~[java-util-0.27.0.jar:?]
at java.util.PriorityQueue.siftUpUsingComparator(PriorityQueue.java:649) ~[?:1.7.0_80]",2015-05-22T16:29:35Z
da0cc32bc84d85ae359601486780e91301872dda,"Revert commit 55ebf0cfdf5c290a462f188d71c806b595eec689
which caused following regression
 it fails when we issue the SegmentMetadataQuery by setting {""bySegment"" : true} in context with exception -
java.lang.ClassCastException: io.druid.query.Result cannot be cast to io.druid.query.metadata.metadata.SegmentAnalysis
at io.druid.query.metadata.SegmentMetadataQueryQueryToolChest$4.compare(SegmentMetadataQueryQueryToolChest.java:222) ~[druid-processing-0.7.3-SNAPSHOT.jar:0.7.3-SNAPSHOT]
at com.google.common.collect.NullsFirstOrdering.compare(NullsFirstOrdering.java:44) ~[guava-16.0.1.jar:?]
at com.metamx.common.guava.MergeIterator$1.compare(MergeIterator.java:46) ~[java-util-0.27.0.jar:?]
at com.metamx.common.guava.MergeIterator$1.compare(MergeIterator.java:42) ~[java-util-0.27.0.jar:?]
at java.util.PriorityQueue.siftUpUsingComparator(PriorityQueue.java:649) ~[?:1.7.0_80]",2015-05-22T02:13:45Z
9e90dc00550b22e6ea1bca7e75234555df5a0027,added clj-druid to query libraries (clojure),2015-05-22T15:49:31Z
4466e77b2574c7b8fd8092d4b2a642a6ec45a10e,"Merge pull request #1371 from guobingkun/unit_test

Unit test for IndexGeneratorJob",2015-05-22T14:34:24Z
5ad5d7d18bac3c473209e0aa2e995682eaceb524,"Merge pull request #1379 from flowbehappy/fix-hadoop-ha

bug fix: hdfs task log and indexing task not work properly with Hadoop HA",2015-05-22T13:14:50Z
fae86e83ad3f92e700efb3e391a5eab06e405216,"Merge pull request #1367 from metamx/hadoopTaskAbstraction

Abstractify HadoopTask",2015-05-21T20:25:51Z
07659f30ab290885a4a7a23941757fc7324a9573,bug fix: hdfs task log and indexing task not work properly with Hadoop HA,2015-05-21T12:26:58Z
82da4794641cc7eedcb16a5d14504ad94364f58b,"Fix for GroupBy with Having+Limit+Orderspec

  * Inverted function arguments to compose postProcFn for GroupBy queries
    with havingspec + limitspec.
  * Replaced query.getLimitSpec() with null in GroupByQueryToolChest's
    mergeGroupByResults
  * Added unittest to verify functionality",2015-05-13T09:02:49Z
b46aff12ae5684f4c73b094844d06c1305ffb1f3,Unit test for IndexGeneratorJob,2015-05-07T19:35:12Z
e6d22565adbca83665049e9a274b7ae3ba476d8e,"Merge pull request #1368 from himanshug/fix_seg_metadata_complex_column

in segment metadata query return actual complex data type name",2015-05-16T02:52:16Z
2fd3e9e8e58256c9409bd0459267ef75871ada3c,"return size = 0 in ColumnAnalysis if its unknown
that is if complex agg did not implement inputSizeFn() so
that segment metadata query shows atleast some information.
also instead of COMPLEX, return type of data stored.",2015-05-15T02:35:49Z
21ba859f3392d2d7e8ab75997234e1d1232ebe2a,"Merge pull request #1366 from metamx/futurizeSQLMetadataSegmentManager

Properly shutdown SQLMetadataSegmentManager and SQLMetadataRuleManager",2015-05-16T00:33:25Z
1d33f46ecee562c352d6219e3046967560f7ca07,"Merge pull request #1373 from metamx/segmentMetadataQueryDocClarification

Modify SegmentMetadataQuery.md to refer to flat data instead of `TSV`",2015-05-15T23:27:26Z
051c3ccedef0917380aa65eb52d29cd6d07c082a,Add futures to SQLMetadataSegmentManager and SQLMetadataRuleManager,2015-05-14T23:46:20Z
03df582fe436c1f2dced391c4580e69bab5bcbf1,Modify SegmentMetadataQuery.md to refer to flat data instead of `TSV`,2015-05-15T20:49:51Z
87924c7c661da1468d1ada8d86838736f9978158,"Merge pull request #1369 from druid-io/add-toc

Add missing toc entry for data ingestion",2015-05-15T17:18:00Z
614e79a0da4d616dceb4ecc82e19e6aa02f4a778,Add missing toc entry,2015-05-15T17:11:14Z
29ba05c04f964f44df649bf0384994752c4f75ab,"Abstractify HadoopTask
* Add `invokeForeignLoader` to commonize the way tasks are attempted to be launched in a foreign class loader
* Add `buildClassLoader` to accomplish the common tasks for hadoop jobs when building a ClassLoader",2015-05-15T00:04:43Z
3c3db7229c68012fea79891dd8508720570f8a40,"Merge pull request #1355 from himanshug/long_max_min_aggregators

Long max/min aggregators",2015-05-13T19:08:11Z
4b907a93c522a8f2aba2a3c859a52b07e62b4b19,updating the aggregators doc,2015-05-11T03:17:49Z
cebb550796acdea004169670f388b83fb732472a,additional UTs for [DoubleMax/DoubleMin] aggregation,2015-05-13T04:37:55Z
d0ec94512909dc883081267967fac9fb0b4f8d70,"adding aliases doubleMax and doubleMin for max and min respectively
renamed all [Max/Min]*.java to [DoubleMax/DoubleMin]*.java and created [Max/Min]AggregatorFactory.java which can be removed when we dont need the min/max aggregator type backward compatibility",2015-05-12T18:13:16Z
2de38f7d2975acdd23ff1c9a60bf5529dc6c7bd2,UTs for long[Max/Min] aggregation,2015-05-11T15:08:42Z
00436f93e2402f80f5899350fc7149e023d6b878,long max/min aggregators implementation,2015-05-10T15:30:46Z
ad286cc02e15b135123c9c28a3bdd12ad5734891,"Merge pull request #1357 from druid-io/oh8

update pom to 0.8",2015-05-12T05:04:03Z
7a6acf5c1b6f4a912a367a563c9e03fb28697bb9,update pom to 0.8,2015-05-12T01:41:58Z
9fb9b8a5108235153d9751122688f1b553899e24,"Merge pull request #1353 from himanshug/alerts_doc

documenting druid alerts schema",2015-05-10T02:05:32Z
f2adb2235047d62dc1a818572e3e6a690a076952,documenting druid alerts schema,2015-05-10T02:03:10Z
eb76889a5a7570ee52a99e3af440228d4c247a46,"Merge pull request #1349 from druid-io/fix-toc

Add back some links in TOC",2015-05-08T20:34:38Z
a2dc58cd2d03e22974131ebd6573593124be0029,"Merge pull request #1345 from pjain1/unit_test_warn_fix

fix warn msg and some unit tests",2015-05-08T15:06:20Z
70f089594f55a90f89d253be2be3f01e63b09d76,Add back some links in TOC,2015-05-07T23:38:09Z
01448d264c5244f189b69f59b4d781702b2b97d2,Fix warn msg and added some unit tests,2015-04-29T16:34:00Z
ed8cfbf74d069bba8d539c9ecbd86391e244f066,"Merge pull request #1348 from druid-io/fix-typo

fix typos with batch ingestion in docs",2015-05-07T22:07:48Z
b19435d17262f5b9ad80771bf8fb243b7656182e,fix typos with batch ingestion in docs,2015-05-07T21:46:17Z
8fcc5a2d51f9c387e7de398e76ef304f35500018,"Merge pull request #1347 from gianm/task-shutdown-doc-fix

Tasks are not actually sigkilled.",2015-05-07T15:51:46Z
1519a1c9309659e26512c60d3cd11c96b72a06c8,Tasks are not actually sigkilled.,2015-05-07T15:44:28Z
33265d63e1026eb911d1b877042160058016b785,"Merge pull request #1262 from metamx/fix-null-dimension

fix handling of dimension having only null values",2015-05-06T20:51:26Z
7b649f699333341d483e61c26c1546f8e07c4b66,"Merge pull request #1305 from davrodpin/azure-storage-overall-improvements

Overall improvement on Azure Deep Storage extension.",2015-05-06T05:26:58Z
11a76169b4f340122170b85cf32cd94b60d65251,"Overall improvement on Azure Deep Storage extension.

  * Remove hard-coded azure path manipulation from the puller.
  * Fix segment size not being zero after uploading it do Azure.
  * Remove both index and desc files only on a success upload to Azure.
  * Add Azure container name to load spec.
      This patch would help future-proof azure deep-storage module and avoid
      having to introduce ugly backwards-compatibility fixes when we want to
      support multiple containers or moving data between containers.",2015-04-17T23:36:41Z
7c4054aaa3464ab2add5c1fcf7e318b9bff0f123,"Merge pull request #1343 from metamx/fix-npe

fix NPE",2015-05-05T18:02:44Z
34be1e96fa07ea65f16289602a47fa5aa2c156b3,"fix NPE

review comments

Add test

fix test for java8",2015-05-04T09:56:50Z
7608bf5799e9ab4f01d28a30ec08bad9a4b83731,"Merge pull request #1342 from guobingkun/unit_test

Fix a potential issue in DeterminePartitionsJob, and two unit tests, reformat code",2015-05-05T16:24:23Z
1ee550dd918890a7e09a7792ceaec9a50003b13b,"Fix a potential issue in DeterminePartitionsJob by making HadoopDruidIndexerConfig non-static, and two unit tests for DeterminPartitionsJob and LocalDataSegmentKiller",2015-04-30T15:21:38Z
d7562fd4d1e2dfe786dc5bb8cdd0fc0829a27e63,"Merge pull request #1337 from gianm/delay-firehose-connect

Realtime: Delay firehose connection until job is started.",2015-05-05T00:18:28Z
e69d82a2b4d585a5c452ce2a52ec1e346e84dc27,"Realtime: Delay firehose connection until job is started.

Some firehoses (like the Kafka firehose) acquire input resources when they
connect, so it helps to delay this until after plumber.startJob() runs.",2015-05-04T17:54:07Z
8eb441ec08388e4ea153c574c1fc289c594168f0,RealtimeManager: Include partitionNum in chief thread name.,2015-05-04T17:53:48Z
8f8400e24ee08964df4b6b6b11b0ff87f4de75b1,"fix handling of dimension having only null values

fixes #1211

fix value matcher

more improvements

more fixes for partial null column

fix handling of dimension having only null values

fixes #1211

fix value matcher

more improvements

more fixes for partial null column

review comment

IndexMaker speedups
* About 15% speedup

Conflicts:
	processing/src/main/java/io/druid/segment/IndexMaker.java

fix handling of dimension having only null values

fixes #1211

fix value matcher

more improvements

more fixes for partial null column

fix handling of dimension having only null values

fixes #1211

fix value matcher

more improvements

more fixes for partial null column

review comment

review comments

review comment

fix failing tests

review comment

fix compilation",2015-04-06T14:24:46Z
6be596c45ebf2a318ed3ada94e29e3d000e2151f,"Merge pull request #1336 from metamx/fix-1330

fixes #1330",2015-05-04T16:06:32Z
50158357ff032e24c4af9328a43e5cdcd23b4645,"fixes #1330

fixes #1330,
Avoid creating Period instance as creating a Period from Long.MAX_VALUE
throws arithmetic exception.
After this query metric will emit duration in seconds instead of
minutes.",2015-05-04T15:04:28Z
2ec87838d2d9afe4b39cf9d7b00f7da0c0410e67,"Merge pull request #1333 from himanshug/convert_props_ut

UTs for ConvertProperties",2015-05-03T22:11:53Z
eca69fd0841a8b3bd5aa4cde3bdc624f3513077d,remove validation query config from docs as its not valid anymore,2015-05-03T13:30:39Z
aa10626b61b5a8dd6264eab0e7bdfe8258e2a4b2,adding druid.db.tables.xxx renames and druid.db.connectory.*validation* from ConvertProperties,2015-05-02T00:40:08Z
8722f4cc185463af3341dc68e21f7c2758a26b09,UTs for ConvertProperties,2015-05-02T00:39:25Z
592ba565e0bdbba9ea13bf45eec8000cf533ec21,"Merge pull request #1334 from himanshug/fix_default_indexing_service_name

fix doc for druid.[host,port,service] etc",2015-05-03T06:05:14Z
fd3b23072b9a7726064852473c1f5db8883fc509,"fixing defaults for druid.[host,port,service] in docs etc",2015-05-02T20:44:03Z
ce7ad41aaa8bee816d1b9cb1b237697db829a4c4,removing port number from druid.host in production-cluster-configuration as its gives the intuition that port name is mandatory to be specified which is not true anymore,2015-05-02T20:34:36Z
f734471f2296199626dc3b993ca596fbf1cfbc51,"Merge pull request #1331 from metamx/fixIrcFirehoseNameNick

fix IRCFirehoseFactory json name/nick mismatch",2015-05-01T22:35:08Z
27e25fe5132fcf5f1288def741c74775a26547a7,"fix IRCFirehoseFactory json name/nick mismatch
* Now it is nick as per wikipedia example",2015-05-01T19:31:40Z
15ed308a4b0dd2ea6433cb92698324f18324587e,"Merge pull request #1322 from himanshug/fix_audit_tbl_idx

fixing the typo for audit table (type, created_date) index creation",2015-04-30T20:22:04Z
a2bde3af1b80f706402a75718a266e4f00c2d05b,"Merge pull request #1327 from druid-io/more-coord-logs

Additional coordinator logs to figure out when racy things might be hap...",2015-04-30T17:51:09Z
85335227fbb0fc992c7dc10bdb6560b5cff00f4b,"Merge pull request #1326 from himanshug/add_audit_tbl_config

add audit table name configuration doc",2015-04-30T17:25:20Z
a7f9bb1a1ea5540a64c894472a6ffa223b3db3b5,Additional coordinator logs to figure out when racey things might be happening,2015-04-30T15:26:52Z
3982301484b5271eb994e654aecd118a4c837973,add audit table name configuration doc,2015-04-30T11:45:57Z
40121bc800db2f569f416b67e423158aaa5f58c7,"Merge pull request #1324 from metamx/fixMasterPropertiesTest

Partial revert of https://github.com/metamx/druid/commit/467fcfae0329f0aaa442b98c9f8f25c1b2b949ae",2015-04-30T05:15:21Z
de16eb34afe0fb4a79877771158e2778250440e9,Partial revert of https://github.com/metamx/druid/commit/467fcfae0329f0aaa442b98c9f8f25c1b2b949ae,2015-04-30T00:20:51Z
8b16d70e19ef545bc7eccf88d101302649254d74,"Merge pull request #1320 from davrodpin/fix-deep-storage-doc

Remove duplicated Azure doc. section.",2015-04-29T23:09:37Z
bfdb5dcb5ded75c999627dc3938d01951208f383,"Merge pull request #1317 from metamx/overlord-endpoints

proxy /druid/indexer requests on the coordinator to the indexing overlord",2015-04-29T23:07:42Z
520ad68f8488525973e06d2e2045fc336848e373,"Merge pull request #1323 from metamx/redoUpdater

Add options to the properties converter to update from 0.6.x to 0.7.x",2015-04-29T22:50:59Z
e055a7e86927e925f4326ba7eeec0b946b203a70,"Add options to the properties converter to update from 0.6.x to 0.7.x
* Removed 0.5 --> 0.6 converter",2015-01-13T01:05:02Z
4aa9381f6ad953582fd52a3f2b18d4bb4cdcfcac,"fixing the typo for audit table (type, created_date) index creation",2015-04-29T22:09:35Z
1dda3268d19057e191cefa4f2e8f6c837fbaf32a,Remove duplicated Azure doc. section.,2015-04-29T02:42:19Z
6e84caf3d5aed64d02dcd856239e65e6b9f99dcd,"Proxy Requests from coordinator to overlord

Add unit test and support https scheme

review comments",2015-04-28T16:21:13Z
95e0429eb1bcd0ae657ee59cf6a17be934963753,"Merge pull request #1318 from himanshug/broker_retries_cfg

adding druid.broker.retryPolicy.numTries config to documentation",2015-04-29T05:32:44Z
e5d61f4e6e3515d7fb6d3e302bd75cce2c16fd2a,"Merge pull request #1319 from metamx/fixipv6UnitTests

Fix DruidNodeTest for ipv6 only hosts",2015-04-28T22:41:11Z
062a413ccd9eaf3a53de91e1fc335d9f2d03a7c0,Fix DruidNodeTest for ipv6 only hosts,2015-04-28T17:01:33Z
42ed88e1cb078096f468beb751e9e49d8c9b07c9,adding druid.broker.retryPolicy.numTries config to documentation,2015-04-28T18:15:16Z
16f7b51d3c1ce61a68765a5a4b24fc88d8e4b642,"Merge pull request #1316 from himanshug/druid_server_maxSize

adding druid.server.maxSize config doc",2015-04-28T15:26:42Z
0beaec557856b740e70545e1dfcfd421b4da844d,adding druid.server.maxSize config doc,2015-04-28T14:34:05Z
85902246cace0514151bd6b112c8873378fe8513,"Merge pull request #1314 from druid-io/update-server-metrics

Update server metrics to use schemaless design",2015-04-27T23:53:18Z
d6ef2c20dfb99bc6c5aece92fd1c27cf359acac5,Update server metrics to use schemaless design,2015-04-27T22:06:25Z
721505c0178488603f6065cbad2351b147c63729,"Merge pull request #1208 from druid-io/rework-metrics

Schemaless metrics + additional metrics for things we care about",2015-04-27T22:04:54Z
963e5765bf4b456d5353fee315c80855e8b1089a,Schemaless metrics + additional metrics for things we care about,2015-03-16T22:57:10Z
625ae830d9fd2289fd8ca79e1b903f0235d62deb,"Merge pull request #1313 from metamx/indexIOValidatorTSFix

Fix IndexIO segment validator to account for timestamp mismatches.",2015-04-27T20:01:39Z
27016c028915ab600352c23e9f690d8252218591,Fix IndexIO segment validator to account for timestamp mismatches.,2015-04-27T19:42:16Z
962997f3f7eee8f2f9b2bbbbed4a5cbb1d33afeb,"Merge pull request #1310 from metamx/optionalValidation

Optional validation on ConvertSegmentTask",2015-04-27T18:19:57Z
633fdb029e2352b18e2567c383e332888e8e0748,"Add option to ConvertSegmentTask to skip validation
* Validation is enabled by default",2015-04-24T20:08:20Z
0f04798dda9c477415779abc7dbcf1adc3b3a5fe,"Merge pull request #1311 from metamx/staticS3FirehoseFactoryGZFix

Fix concatenated gzip files in StaticS3FirehoseFactory",2015-04-26T15:31:35Z
5f854123ca26c5af973c5780b48125fe809bd9eb,"Merge pull request #1312 from estliberitas/patch-1

Update Realtime-ingestion.md",2015-04-26T15:30:58Z
070da15a662483a1dac88bc0fa42f5b97a9b2efe,"Update Realtime-ingestion.md

Add note about sharding and firehose configurations",2015-04-26T13:55:49Z
16a0c40d4cb1f801f22640361578c60f8b3d0d01,Fix concatenated gzip files in StaticS3FirehoseFactory,2015-04-24T22:06:28Z
29341f98378b16ec1a5d6da6e2bd98cc6432d58b,Fix random unit test failure from NoopTask ID collision,2015-04-24T20:07:48Z
7081c830e4ca12c3a89b7026d678167c29da4b10,"Merge pull request #1303 from metamx/fix-timeboundary-caching

add test for exception during timeboundary",2015-04-23T21:46:25Z
0f7946bb39d62739f7f398ae2e4c210276e8685a,"Merge pull request #1308 from metamx/indexMakerSpeedups

IndexMaker speedups",2015-04-23T21:07:40Z
303727e6a9b8e5e6ca7e0f3b32205aec52cf6e88,"IndexMaker speedups
* About 15% speedup

Conflicts:
	processing/src/main/java/io/druid/segment/IndexMaker.java",2015-04-23T01:26:17Z
edb82607fe0be5f1b89da63bdbdb89f7b56c3af9,"Merge pull request #1306 from metamx/cleanupIndexCreation

Cleanup some code in index creation and add `reprocess` method, fixes #1309",2015-04-23T20:14:34Z
f2300430d1928ce1d29b4203a4d1b897808c05e3,"Cleanup some code in index creation.
* Add some unit tests
* Add io.druid.segment.IndexMerger.reprocess for quick re-indexing of data
* Add dim-value validation to validation checker (instead of ONLY index #)
* General code refactoring to make things a little easier to read",2015-04-22T19:51:32Z
958b34e0c2a9f0d202d7bd24cd53b72d7b95be0e,"fix exception during timeboundary

Fix Exception during time boundary query where results can be
represented as integers",2015-04-22T17:34:51Z
f5943ed4947182ae6d0e43be419ee950bc6fab10,"Merge pull request #1307 from vogievetsky/master

Added facetjs to the library list in the docs",2015-04-23T02:50:52Z
58879ca0bf6decfb752d3427ac5b685c1dcadb90,added facetjs to the library list in the docs,2015-04-23T01:38:01Z
7939f436810aa92c5653c0f314dc8c4f526cb717,"Merge pull request #1296 from druid-io/limit-test

Add test for order by metric and limit across multiple days",2015-04-22T18:28:06Z
97d87a06d0846071c816fb850345290ab4e73db8,Add another test for limit across multiple days,2015-04-18T01:41:44Z
28f69d6bd3d64a7f7dad62888bece7d5bd26d6a1,"Merge pull request #1299 from metamx/improve-filter-datasource-metadata

Improve filtering of segments for dataSourceMetadataQuery",2015-04-22T18:07:35Z
8f227f2bf3209f3414ebb96f8e713efa78433ade,"Merge pull request #1304 from metamx/fix-cache-serde

fix serde issues when pulling timestamps from cache",2015-04-22T18:06:31Z
a0a28de5516a54c77de826097050ed413b442118,fix serde issue when pulling timestamps from cache,2015-04-22T17:47:12Z
f15a41270a0767ca9cc84cc025e2a38a15afc1e6,"Merge pull request #1302 from metamx/fix-groupby-doc

Updates groupBy doc:",2015-04-22T03:22:23Z
1216512e49e26310f70ffabaa45c295b1fbf739f,"Updates groupBy doc:

* changes sample dimension names to be more meaningful
* fixes timestamps in example output
* adds formatting to names appearing in paragraphs for easier reading",2015-04-22T00:30:37Z
be6994675112d844818a35cc3773b84c740bc3bb,fix typo,2015-04-21T18:14:26Z
702e5ceb2d9a33e7a60f57d34988b04cdec3cc84,"Merge pull request #1247 from druid-io/new-docs

Rework the Druid documentation",2015-04-21T17:20:54Z
4575c5378c0107eaa86e03f3d0358473efc63cbc,Rework the druid docs,2015-03-26T17:44:11Z
6b0ba7602bc95da7e28269abb44a77ac81d9d101,"Merge pull request #1300 from rasahner/fixes-Coordinator.md

minor fixes in the Endpoints section of Coordinator.md",2015-04-21T16:39:18Z
2b4406671e5415086cc91e6870be09ead38c3518,"Merge pull request #1301 from druid-io/fix-type

fix count agg factory type",2015-04-21T16:24:20Z
7805357ab102212141b088d53da0c97126938763,fix count agg factory type,2015-04-21T16:23:04Z
bb8c0cb50b2b7b89dda4f26b7c46b7878b6a21a1,"Improve filtering of segments for dataSourceMetadataQuery

dataSourceMetadataQuery only needs to be executed on latest segments at
present, modify filterSegments and add test.",2015-04-21T04:01:13Z
f73f14ab91b9be36293027686e1c54ea8371aa0c,"Merge pull request #1297 from metamx/versionConverterTaskUpdates

Update VersionConverterTask for IndexSpec and allowing Forced updates",2015-04-20T23:44:35Z
7479ac9012e6cba78f895e88e08aaf37a4a37844,Update VersionConverterTask for IndexSepc and allowing Forced updates,2015-04-17T18:48:21Z
6ef29419759c29e29d4027591c25e2ec0c6e164e,"minor fixes:
 1. leader endpoint returns a string, not a json object
2. ""enabled and enabled"" -> ""enabled and disabled""",2015-04-20T22:02:44Z
0c734c691af57c49df3f58c324db25ecc5357007,update druid-api version to fix bug,2015-04-18T22:52:39Z
1addbe163ae49ab0b942496713471c735422e638,"Merge pull request #1295 from anubhgup/master

Fix type of values in sql update.",2015-04-18T03:26:17Z
4c240da4e9e79317fe6f8f8d49a49aacfa0c7fd4,Fix type of values in sql update.,2015-04-17T22:36:09Z
b438ca32d52078dc41ccb51f2282832fa11535dd,"Merge pull request #1294 from druid-io/update-api

Update druid-api version",2015-04-17T21:58:56Z
d260515a4346f656e5ad242da906053f181fb76d,update druid-api version,2015-04-17T21:21:33Z
eb1df425b1f6183ce0f74f85e2de5a29ff14169e,"Merge pull request #1292 from guobingkun/havingSpec_on_postAggregation

GroupByQuery on PostAggregation",2015-04-17T18:25:22Z
cf155e4ebabecae2bd895658e34f36d3e1063c2f,"Fix an issue that after broker forwards GroupByQuery to historical, havingSpec is still applied
on postAggregations which are removed in the forwarded query.

Add a unit test to replicate the issue.
Add a query that can replicate this issue into integration test.",2015-04-16T20:46:48Z
8b68b8f3c2d0f743c429d007494914cde1fde294,"Merge pull request #1282 from davrodpin/validate-deep-storage-impl

Add doc. on how to validate a deep storage implementation.",2015-04-17T03:40:54Z
1e22c75ca7c57bc208b89d9fecb3faeb101a45fe,"Merge pull request #1289 from davrodpin/reformat-deep-storage-options

Reformat deep storage options",2015-04-17T03:40:30Z
5b76a52c99bb1677590ea3facea3bf53aae154a4,Reformat Deep Storage options to use table.,2015-04-16T23:30:42Z
f912e45464bb9040b550b3f7911e3ccef8f470a5,Add doc. on how to validate a deep storage implementation.,2015-04-14T18:43:17Z
baeef08c4cf1914691c1e883fd2a02924672db63,Add Microsoft Azure as a Deep Storage option.,2015-03-17T23:08:42Z
f0a19349bfd36122d31bad997040021b7cc8c704,fix up some comments for contributed test,2015-04-16T22:07:09Z
90b17a5259223eca4fda8cbef5fbbaa8d4464527,"Merge pull request #1285 from venkateshk/limitspec-tests

Unit test to surface bug with limit-spec order by over specific query intervals",2015-04-16T20:52:58Z
d0fc7db68421d3d3d30adb1ea23c4064ef733497,"Merge pull request #1287 from metamx/fix-dim-backwards-compat

remove overzealous check for backwards compatibility",2015-04-16T05:15:28Z
1d153674b637ecbd519463ecb8c2e494f7bf4de4,remove overzealous check for backwards compatibility,2015-04-16T05:06:53Z
1cfc13cc4152728693b015d0fab9c6641fb0e5de,"Merge pull request #1286 from metamx/fix-java-util-conflict

updated dependencies to java-util 0.27",2015-04-16T00:36:30Z
b535d30912e2f7f43595b612acc29eca6ecf9369,"updated dependencies to java-util 0.27

java-util 0.27 is not binary compatible with 0.26",2015-04-15T23:22:59Z
ea5572d001320b7dcf803e824ca90a37bc55d5ac,"Merge pull request #1271 from metamx/strictErrorChecking

Add stricter checking for potential coding errors",2015-04-15T22:21:41Z
abdeaa07461dcf1318b934002f99822e35ad29e7,"Add stricter checking for potential coding errors
Can use via `mvn clean compile test-compile -P strict'",2015-04-08T21:11:44Z
a2ba5b618399804586cb57e3872b28ed81910166,Unit test to surface bug with limit-spec order by over specific query intervals,2015-04-15T13:31:10Z
281adc045776bc4acaf267d144db5bf6bda01b6f,"Merge pull request #1265 from metamx/dimension-compression

Support for Dimension Compression",2015-04-14T21:10:59Z
49d1f4e5682d8920e7f5a13bb9ffb34039d58df5,add documentation for dimension compression,2015-04-08T21:02:32Z
3a3046ccf32380e3dcaf25c1addc5ee3bc01b4a7,"add support for dimension compression

- compression for single-value dimensions using CompressedVSizeIntsIndexedSupplier
- makes dimension compression configurable via IndexSpec
- IndexSpec also enables configuring bitmap and metric compression",2015-04-14T06:38:08Z
bafc5114b4f25b7b477a8b48e73d8674c11ae122,"add toString, equals, and hashCode to BitmapSerdeFactory",2015-04-14T06:21:48Z
d20128b89bd04a0c32a20185a410aacbbb023571,add compressed variable-size ints column type,2015-04-14T04:57:19Z
ce928d9636f73e6e0890031e609becd0e2df0f02,add compressed ints column type,2015-04-14T04:47:22Z
5c236792387070747b4405544f52fec6dc8de46b,add WritableSupplier and IndexedMultivalue,2015-04-14T05:04:46Z
1abb9cce7c767ce015176416710fabb54cd002f0,make IndexedInts closeable + add fill method,2015-04-14T04:51:46Z
ed0d49933ea5850c664cf3bad6117bc2a870f1d9,fix memory leak in CompressedXXXIndexedSupplierTest,2015-04-14T07:10:03Z
6790e6cf0f900f47f843b66588762be3060f44b2,add fromList to CompressedLongsIndexedSupplier,2015-04-14T05:44:29Z
f0726f4d943a8583e620b68a2859835ba0e9a3d8,fix typing on StupidResourceHolder,2015-03-14T20:34:52Z
9f7ab92d8152e57c62d95d01c8d9ba0dc072260e,"Merge pull request #1276 from metamx/fix-broken-links

[docs] fix broken links",2015-04-10T01:19:50Z
d0fb5c8458db030f92f44fe207a868d78ad66340,"Merge pull request #1277 from druid-io/document-query-processors

Add some javadoc to the two Query processing interfaces",2015-04-10T01:19:09Z
7517f0d0f01507decefe1283c12640ab578b62ba,"Add some javadoc to the two Query processing interfaces to help aid in implementations of new Queries.

Also, remove some comments that did not have enough context to actually make sense to anyone but the original author (at least, I hope they make sense to the author, I definitely don't know what was being said).",2015-04-10T01:11:42Z
66a4daa3635ca5a60fda5721283da205e538dc52,[docs] fix broken links,2015-04-10T00:35:42Z
700dc6fbc07e8a60c6a8556dd6c0e1d0867f9548,"Merge pull request #1275 from infynyxx/update_deprecated_job_initialization

use Job.getInstance() to fix deprecated warnings",2015-04-09T22:07:49Z
a053e90e9725ea338e1dbd959add1baab650e30f,"Merge pull request #1273 from b-slim/patch-3

typo or backward compatibility problem",2015-04-09T19:52:18Z
3044bf55929d35fb87d995a3585599b7291d1bba,use Job.getInstance() to fix deprecated warnings,2015-04-09T17:22:21Z
d854ceebbd4854f40c31ef8a5822bf0c9de34582,"typo or backward compatibility problem

2147483648 will break the node since druid 0.7 it is parsing it as an `int`",2015-04-09T00:12:01Z
a609e6bcd586d3f4b8ce58d59e16b8bd0ef91710,"Merge pull request #1272 from metamx/fixHDFSstoragePom

Minor fix in hdfs-storage pom.xml",2015-04-08T21:36:53Z
b29816bddb1e9fad5e8368796a59918e0d3bf5e3,Minor fix in hdfs-storage pom.xml,2015-04-08T21:29:16Z
6127fee480d90885a20293777c25f0bc14fa48bb,"Merge pull request #1269 from metamx/fix-travis-ci-heapsize

work around Travis CI not setting appropriate heap limits",2015-04-08T21:00:18Z
9962a33cdf26b0e57b1cc53dbd745c9716d925ec,"Merge pull request #1270 from metamx/fix-broken-link-druid-cluster-tutorial

fixes #112 broken link",2015-04-08T20:36:40Z
905fa84d453cc5d502236336ad5806e71b737fec,fixes #112 broken link,2015-04-08T20:23:10Z
2c773dee606f051aa8eb95828c02293d52356112,work around Travis CI not setting appropriate heap limits https://github.com/travis-ci/travis-ci/issues/3396,2015-04-08T19:44:49Z
85ee8f1e1a09a72b67ca75a6302c95c56f999b2f,"Merge pull request #1267 from b-slim/patch-2

fix typo (missing ```)",2015-04-07T22:16:56Z
a9b5529ff825eb2c7405bd2172b340b19c9f6965,fix typo (missing ```),2015-04-07T19:54:04Z
44e23a8267cffeff5ddcb3d959d8dca904aa56bb,"Merge pull request #1224 from metamx/alert-improve

skip raising false alert when the coordinator looses leadership",2015-04-07T17:11:34Z
9d0267d6f3be5c868f94f51d40de46d1113e353f,"Merge pull request #1261 from metamx/fix-hadoop-snapshot-jar-uploading

always re-upload snapshot self-contained jars to hdfs",2015-04-07T16:58:18Z
e03709b3969a9b3f4f04ec627d0f9eb7f04002d8,"Merge pull request #1264 from druid-io/fix-index-task

Ignore rows with invalid interval for index task",2015-04-07T00:23:07Z
195a3b8bb8a02fd66449fb824490a3cb00ff8ace,ignore rows with invalid interval,2015-04-06T23:08:40Z
8b5fa8f85da2d6cd4133f67d1add72705a06686e,always upload SNAPSHOT self-contained jars,2015-04-03T23:56:20Z
9e028840ede979a5e085f61e3bcf1d8fed5efd93,"Merge pull request #1257 from himanshug/fix_doc

fixing storageDirectory property typo in example configuration",2015-04-02T21:31:59Z
882b58a70fd497d8cd32f940dc090613e0ab7f6c,"Merge pull request #1246 from druid-io/new-paper

A new paper on how to architect an analytics stack",2015-04-02T21:22:34Z
457edb5d25a9994f3319eed9039f7df5af30bcd2,correcting storageDirectory property typo,2015-04-01T05:54:38Z
74af1f947e8648438475404c3ee691ad9582b886,How to architect an analytics stack,2015-03-26T17:41:16Z
834fd71e34c818d5299c95c09b743d5615a21094,"Merge pull request #1254 from bobrik/on-the-right

Menu is on the right now",2015-03-31T22:58:57Z
9264644cf92e36b4bed50483a1d5e0680252d290,"Merge pull request #1255 from infynyxx/fix_doc_link2

fix doc link",2015-03-31T22:58:49Z
def4cddfea413d927707655f51a62ef02d23d21f,fix doc link,2015-03-31T22:19:24Z
a6887da923c7f93bab89bc081b7156b840d8d9b8,menu is on the right now,2015-03-31T04:59:15Z
208e307915b11dc0be95d618676d3a59d95158b2,"Merge pull request #1251 from metamx/uriSegmentLoaders

Revert ""Revert ""Overhaul of SegmentPullers to add consistency and retries""""",2015-03-31T00:43:51Z
aea7f9d192053733262484b3d636729054e653cb,[maven-release-plugin] prepare for next development iteration,2015-03-30T23:35:24Z
060d7aef03748c7253e04e423392e2dd361282fc,[maven-release-plugin] prepare release druid-0.7.1,2015-03-30T23:35:20Z
1c6cbea89c9b02704c42619db02e95b9bf646f95,"Revert ""Revert ""Overhaul of SegmentPullers to add consistency and retries""""

This reverts commit f904bc785860f97c4b741d69df4c606bf1bfe3ae.",2015-03-30T20:40:04Z
cb3e9f722a4387e996610a557ea79e98c9a7cc87,"Merge pull request #1250 from druid-io/revert-1132-uriSegmentLoaders

Revert ""Overhaul of SegmentPullers to add consistency and retries""",2015-03-30T20:16:10Z
f904bc785860f97c4b741d69df4c606bf1bfe3ae,"Revert ""Overhaul of SegmentPullers to add consistency and retries""",2015-03-30T20:15:50Z
1e38def170aaca1a07e9280c547242301fb80b47,"Merge pull request #1132 from metamx/uriSegmentLoaders

Overhaul of SegmentPullers to add consistency and retries",2015-03-30T20:04:01Z
6d407e86772a39ad47a3b5abae9b0fabc1cc638c,"Add URI handling to SegmentPullers
* Requires https://github.com/druid-io/druid-api/pull/37
* Requires https://github.com/metamx/java-util/pull/22
* Moves the puller logic to use a more standard workflow going through java-util helpers instead of re-writing the handlers for each impl
  * General workflow goes like this: 1) LoadSpec makes sure the correct Puller is called with the correct parameters. 2) The Puller sets up general information like how to make an InputStream, how to find a file name (for .gz files for example), and when to retry. 3) CompressionUtils does most of the heavy lifting when it can",2015-02-18T00:37:28Z
9c741d58f415846623aaae1fc17ae774fbe974d3,"Merge pull request #1248 from b-slim/patch-1

Fix typo in the query body",2015-03-30T15:20:53Z
425c5f750c5e1b1a6496e48b5a51d22f92892cbe,"Fix typo in the query body

last `,` will break the query.",2015-03-30T14:34:38Z
e5653f07521e8d5a5850f9ddebf75325a5fdc1ba,"Merge pull request #1190 from vigiglobe/master

Fix NPE when partionNumber 0 does not exist.",2015-03-26T20:25:39Z
2c58e355fd48724a0be52debc0e561de446965f3,"Merge pull request #1239 from metamx/log4j2forRealz

Exclude log4j from curator dependencies in favor of log4j-1.2-api",2015-03-26T20:21:13Z
9cd6c08e960ad41315e2c1d6768b9c34c1681af9,Exclude log4j from curator dependencies in favor of log4j-1.2-api,2015-03-24T00:19:16Z
85174364ae9c519a9603f16d71d0a11bbc70dee1,"Merge pull request #1241 from infynyxx/hdfs_druid_remove_deprecated_code

use ByteSink and ByteSource instead of OutputSupplier and InputSupplier",2015-03-26T19:05:09Z
fb7005435b28ccca2ece3a6812734f2e8244cdea,"use ByteSink and ByteSource instead of OutputSupplier and InputSupplier

They are being deprecated and will eventually be removed in Guava 18.0",2015-03-24T03:23:51Z
47cc11829d2d137175d3941db390d4d6b6e83495,"Merge pull request #1240 from himanshug/async_query_forwarding_servlet_router_fix

adding router numMaxThread configuration for ProxyServlet HttpClient executor",2015-03-26T17:15:44Z
389ea4c32fe36d51f69635f41961fb4e4e26e694,"Merge pull request #1245 from b-slim/fix_injector_plus_ut

Bug fix @DruidSecondaryModule plus unit test",2015-03-26T17:04:44Z
40cb7020799d8cf30e809be73ce656a2a0bebd5d,"Merge pull request #1242 from andrewserff/master

twitter_runtime.spec example does not work",2015-03-26T17:03:06Z
a9c47de5717ee1df85344cd2f3fa3df52e9a7e2d,"Merge pull request #1243 from metamx/fix-union-timeline-lookup

fixes TimeboundaryQuery and DataSourceMetadata queries returning wrong values for union queries",2015-03-26T17:02:56Z
d539054ed20b719664a78978bac6d0163b846667,"Merge pull request #1244 from metamx/plumber-config

fix examples and doc",2015-03-26T17:02:43Z
1e6be7796e5bd169cab52fc8cbb1613cb14a4164,bug fix @DruidSecondaryModule plus unit test,2015-03-26T15:23:53Z
99bf430844ea3c4551f50a5823e43b4c00b1a54e,fix examples and doc,2015-03-26T13:31:10Z
638bf9d4e9566b749d53b959b24ff3a38c494c52,return sorted List of TimeLineObjectHolder,2015-03-26T06:21:09Z
518b42c900d8791e0c39c45501adfb59031f291d,Updated the twitter_runtime.spec so that it works and includes geospatial indexs,2015-03-25T22:21:43Z
942c17a2aad1f80381dca7faf7ee05d3fadecae0,"Remove timeline chunk count assumptions.
* Replace with generic iterables",2015-03-10T21:04:47Z
9fd14cad4f0b454dface2242e736816cd13bcb18,"Merge pull request #1203 from metamx/add-tests

add ut for TierSelectorStrategies",2015-03-24T18:16:47Z
729431ba8a1bc27afe742d792f8795fd972c31c3,"Merge pull request #1219 from metamx/fix-link

fix mvn soft link for integration tests",2015-03-24T17:30:50Z
084c57bf0d8c6c15044646c18bc86e86a0fe9df4,"fix mvn soft link for integration tests

add comment and remove mvn in default container

remove unused links",2015-03-17T19:30:18Z
b131a4fd3be8ab777ce3e1fa381123d741898676,adding router numMaxThread configuration for ProxyServlet HttpClient executor,2015-03-24T02:46:27Z
3b894f9fb90bb12ba269b27f039b5a595111d295,"add ut for TierSelectorStrategies

fix test",2015-03-16T08:01:22Z
a5505ec05f2524ff398fd3cb01fe27240e94e20a,"Merge pull request #1238 from metamx/updateMySQLConnector

Update mysql-connector-java to 5.1.34",2015-03-23T23:07:52Z
3ed4b19201256ef750f6c9953ac8a34b9e3084f0,Update mysql-connector-java to 5.1.34,2015-03-23T22:43:34Z
644759055d0ad820776bbc807e7efaead7fcce27,"Merge pull request #1236 from metamx/contribFormatFix

Minor fixes in CONTRIBUTING.md",2015-03-23T21:29:30Z
be75bcb6daa9cdbf4903dbf85d8f26874e09bb6a,Minor fixes for CONTRIBUTING.md,2015-03-23T21:10:29Z
95602de34ea432dbfc457c174f010431384133a8,"Merge pull request #1230 from metamx/updateMapDbVersion107

Update MapDB to version 1.0.7",2015-03-23T21:04:25Z
23528299c9afab84f5401679f5b089aae0a33c6b,"Merge pull request #1235 from druid-io/comments-update

Minor update to zk comments to make it more clear what is happening",2015-03-23T21:02:08Z
a0ce1caaf8398ad9ff08edcb304d26482ea9a1ee,minor update to zk comments to make it more clear what is happening,2015-03-23T18:47:43Z
9325300b62e928345d02f4e892ace6007ddc801f,"Merge pull request #1231 from infynyxx/https_maven_repo

use https maven repo URL to download dependencies",2015-03-23T17:55:27Z
b2f3521cc2cf2430107d5123ffecc60696bfd178,"Merge pull request #1233 from himanshug/async_query_forwarding_servlet_test_fix

checking potential fix for build failures on AsyncQueryForwardingServletTest",2015-03-23T17:29:37Z
b5b32dbcb48bc8c304bbfa107ad802ba3b7d8493,in test explicitly setting maxThreads for ProxyServlet to work around https://tickets.puppetlabs.com/browse/TK-152,2015-03-22T00:51:13Z
998321687135ec99461daa97f14a00a3fc68fd5f,use https maven repo URL to download dependencies,2015-03-20T18:09:07Z
bb9118319f5c47895595df94bade35b58fb398c8,"Merge pull request #1226 from dkharrat/master

Honor ignoreInvalidRows in reducer of Hadoop indexer",2015-03-20T15:36:09Z
5250d89adf7c9e1f2c17289cd083ab01cff5ae91,"Update MapDB to version 1.0.7
The update fixes a bunch of HTree issues which we have not encountered yet, but we use HTRee in many of our MapDB usages
http://www.mapdb.org/changelog.html#Version_107_2015-02-19",2015-03-20T15:31:23Z
3a6dc99384d169e50a1837ea3cbab0c8302457ad,log invalid rows in mapper of Hadoop indexer,2015-03-20T00:34:37Z
58d5f5e7f07068cf7a9de8ad0d17ccdaf9b0701d,"Honor ignoreInvalidRows in Hadoop indexer

The reducer of the hadoop indexer now ignores lines with parsing
exceptions (if enabled by the indexer config).",2015-03-20T00:33:54Z
46eae49bf5529e1c6f31c915c12d9a46cc03953f,"Merge pull request #1229 from himanshug/remove_map_writable_parser

Removing MapWritableInputRowParser from indexing-hadoop",2015-03-20T00:40:59Z
8c1f0834ba7a1f15ec8823615af8b8286b5fe901,Removing MapWritableInputRowParser from indexing-hadoop it should really be an extension if user needs,2015-03-19T23:37:08Z
a98187f798d9d1fba710a3f6919936ff15eebb97,"Merge pull request #1177 from himanshug/custom_input_format1

Feature:  Make hadoop input format configurable for batch ingestion",2015-03-19T22:49:36Z
b389cfe404c030fce6f4552bde8b50d51fd550d1,[maven-release-plugin] prepare for next development iteration,2015-03-19T19:38:17Z
60e7d543cce8ca76ba45c2791f2e892a19f103ea,[maven-release-plugin] prepare release druid-0.7.1-rc1,2015-03-19T19:38:13Z
6a47c1530c8eeb8d4e48780972ed0a747a96f7a4,update versions to prepare for rc release,2015-03-19T18:39:38Z
db06bda5e03b00dfe1daa5fa342f35b945f19bea,fix ingestion docs,2015-03-19T00:23:22Z
3e664a4c322e0c558bbddac6b863a2083e7f73d7,fix plumber docs,2015-03-18T22:56:27Z
70f009e517fdaa23e9c4f82719d526cce7da154d,Merge branch 'master' of https://github.com/druid-io/druid,2015-03-18T22:54:31Z
8de3eab8327b3b31eb13c8eb7178196ad65ab7cd,fix doc formatting,2015-03-18T22:53:00Z
3f7a7ba5d37ecdc8f038dca0503f694f5591f2c2,"For batch hadoop indexing, make hadoop input format configuration. Given input format must extend from org.apache.hadoop.mapreduce.InputFormat",2015-03-06T22:41:24Z
4467d1c9cc7e3d17799d79328a9f65712fab3dd8,"Merge pull request #1225 from b-slim/fix_http_client

Using new release of the http-client.",2015-03-18T15:31:01Z
03547b40884db69aa202a8f9465a87215fe92adc,"Using new release of the http-client.
This new version 1.0.1 it has a bug fix that was  causing can not add a handler exceptions.
Bug description can be found [here](https://github.com/metamx/http-client/pull/16)",2015-03-18T14:33:45Z
21cd75bcf6d56c71e77900650bb3a7bea1a56294,"improve alert

skip doing false alert when the coordinator looses leadership",2015-03-18T04:12:22Z
6bcdf7f60f1899691daca0ff95882084cdf1baf4,"Merge pull request #1223 from metamx/AnnounceIdUUID

Add consistency to UUIDUtils handling",2015-03-17T23:09:58Z
868100c79cf6acf7c66d728a8c30e6bcb50ff6f4,"Add consistency to UUIDUtils handling
* Use ""_"" instead of ""-""",2015-03-17T23:03:41Z
65e05071b67a5e012755cfe3a2857992bf08774a,"Merge pull request #1205 from druid-io/update-jets3t

Update jets3t version to support aws v4 auth",2015-03-17T22:39:17Z
8d0dfd9af1b22f75202134ed0e4401a372172110,"Merge pull request #1221 from metamx/AnnounceIdUUID

Change announcement ID to a UUID instead of Timestamp",2015-03-17T22:38:53Z
b0e33ac879ac3f619f09c4657b44dd9797fbe4bd,"Merge pull request #1206 from metamx/group-by-NPE-fix

fix race in groupByParallelQueryRunner",2015-03-17T22:35:48Z
79b1443cc3f79f29d9ba7b9f54f495539e3a20b9,"Change announcement ID to a UUID instead of Timestamp
* Also add a UUIDUtils to the common package",2015-03-17T21:22:12Z
9d6b728054061b3ca0eb452b5655e485a975a3e1,"Merge pull request #1215 from metamx/log-audit-IP-Address

Add remote ip address in audit log.",2015-03-17T20:59:31Z
c847b3b8612c83730757fb7f2e14c046f6caf06e,"Merge pull request #1218 from himanshug/task_storage_config_fix

add correct guice init of TaskStorageConfig to CliPeon",2015-03-17T20:08:43Z
f60f77d0f5f3bbafe33c3789d816fd81254a8d52,"Merge pull request #1214 from druid-io/fix-arb-gran

This fixes arbitrary gran spec breaking for the benchmarking blog post and other places",2015-03-17T19:28:19Z
bfe10bd1564b470aa8b1f13165d70cbf5e343b65,This fixes arbitrary gran spec breaking,2015-03-17T17:36:35Z
4a8f5dfa0f4fb0841219f9754f20b7112a172f1c,add correct guice init of TaskStorageConfig to CliPeon,2015-03-17T19:03:54Z
f9821d242fb8c953df1fe3af05101f67b79e0587,also log author ip address in audit log,2015-03-17T17:45:15Z
39e60b34054f7d7bffd7fa53efebe90f8a46f114,"fix race in groupByParallelQueryRunner

add UT and use a queue for better concurrency",2015-03-16T19:06:58Z
2c834b878e767d7c86c93c2a4884bfe487968aa0,Update jets3t version to support aws v4 auth,2015-03-16T17:50:04Z
36b4c6a371c6441db48ca82194d67a2acbf532a3,fix set up with first tutorial,2015-03-13T20:54:45Z
e7d8f8034eb9f906cc509710cb2ee9f1747c6bcc,"Merge pull request #1201 from metamx/make-task-id-more-unique

randomize task ID to fix spurious test failure",2015-03-13T18:36:55Z
ddfafa071198bbdc34c1983a9a7e0bed218747f7,randomize task ID to fix spurious test failure,2015-03-13T01:06:59Z
a508c0955f2285c989da8acc2a459d9b76e83071,"Merge pull request #1195 from himanshug/task_storage_config_fix

correctly parse recentlyFinishedThreshold from config",2015-03-12T23:50:49Z
526a386f50be7c576d6ca82321b02e320caa1c5a,"Merge pull request #1193 from metamx/reduce-test-verbosity

move test output to file for cleaner build logs",2015-03-12T22:42:34Z
8c94fad5ee7a3d00dc5b1587b8631c9f0609b1fe,"Merge pull request #1197 from metamx/fix-build-link

fix build badge link",2015-03-12T21:54:41Z
48c1757cc31562df7ed106f32deb325a0e6d52ee,fix build badge link,2015-03-12T21:54:01Z
7fb4b1d2bb49579a014f19e713bdf66d637fad4c,"Merge pull request #1144 from metamx/javaLoggingManager

Add log4j2 hooks to other loggings",2015-03-12T21:38:51Z
edfcea18d879f34e6b4cf8bca3b761f372694389,Add log4j2 hooks to standard java logging,2015-02-19T18:29:54Z
3892a945063067505732315527b9d471a2929c8b,"Merge pull request #1100 from metamx/audit-config-changes

Auditing Rules and Dynamic Configuration Changes",2015-03-12T19:57:54Z
3ec4a30ab5a527b48de10a3d9fdd1de65ff1f782,"initial commit

review comments

more refactoring and cleaning of redundant code

add UT + docs + more refactoring

fixes + review comments

more cleanup

end points to fetch history

review comments

remove unnecessary changes

review comments rename header name

review comments + add test for MetadataRulesManager

review comments docs",2015-02-09T16:53:55Z
127b6fd857e67f535d4c04bd020d114b429e5795,"Merge pull request #1172 from himanshug/segment_metadata_eager

force eager the processing of segment metadata query on the processing executor",2015-03-12T17:19:48Z
199b11ad0b7af5badb5e1e4ebbdeffe1f6d84c9f,"Merge pull request #1196 from metamx/kafka-update

update to kafka 0.8.2.1, because it's better™",2015-03-12T17:19:29Z
11b32306020f354ae76b373d52d5f583f8722b95,"update to kafka 0.8.2.1, because it's better™",2015-03-12T16:54:52Z
23545fc01c07730938b55701244bdf36e9a54a84,correctly parse recentlyFinishedThreshold from config,2015-03-12T14:13:24Z
43d263930d98a16c6f225a1b14112eeefc566a15,"Merge pull request #1194 from metamx/add-coverage-badge

add coverage badge to readme",2015-03-12T03:40:54Z
963b701e87e349b55f011993399e04c4de0e53c7,add coverage badge,2015-03-12T03:35:56Z
fc613771d2373f5495cc544d706417521379611f,"move test output to file for cleaner build logs

- removes the need for special test log4j2.xml",2015-03-12T00:56:14Z
75e92fd4dc17e06d43b30ba336551441c5f5f01f,"Merge pull request #1192 from metamx/fix-bad-rebase

fix file missing from previous PR rebase",2015-03-12T00:44:17Z
0a5a3fe2dc795e104c740b71eb40f09366bc0c03,fix file missing from rebase,2015-03-12T00:30:11Z
a1d38f8526103081da3cb0a98501302af0190079,"Merge pull request #1159 from metamx/time-extraction

Add time extraction functions to project time as a dimension",2015-03-11T23:50:02Z
e01ed160308f2ca4c165b7d503aaa82878e17de1,serde tests + equals/hashCode fixes for extraction functions,2015-03-10T22:09:59Z
d3f5bddc5cb30dade742f278c1c00e65b2e9c2e7,"Add ability to apply extraction functions to the time dimension

- Moves DimExtractionFn under a more generic ExtractionFn interface to
  support extracting dimension values other than strings
- pushes down extractionFn to the storage adapter from query engine
- 'dimExtractionFn' parameter has been deprecated in favor of 'extractionFn'
- adds a TimeFormatExtractionFn, allowing to project the '__time' dimension
- JavascriptDimExtractionFn renamed to JavascriptExtractionFn, adding
  support for any dimension value types that map directly to Javascript
- update documentation for time column extraction and related changes",2015-02-27T01:13:07Z
55ebf0cfdf5c290a462f188d71c806b595eec689,force eager the processing of segment metadata query on the processing threadpool by using ChainedExecutionQueryRunner in SegmentMetadataQueryRunnerFactory.mergeRunners(..),2015-03-05T00:12:31Z
c97fbdf6169817310a6336b5b79c668bfd061d78,"Merge pull request #1044 from metamx/groupby-postagg-naming-bug

Ensure unique names for aggregators / post-aggregators + optimize groupBy post-aggregators",2015-03-11T03:25:28Z
9944c288af5630bd5606baf176a2e5df91a2b59c,"Merge pull request #1189 from gianm/iam

Need a null check for iamProfile.",2015-03-11T00:53:52Z
b00c243786e2ab35b6d4a917404992b2a2060276,Need a null check for iamProfile.,2015-03-11T00:52:07Z
909b8fd67fde3712de0bc6aa422cf73ac21d8d9a,"Merge pull request #1188 from gianm/iam

EC2AutoScaler: Allow setting ""iamProfile"".",2015-03-11T00:48:25Z
b810cdfe585774c02554a7a30bb9b066347384f7,"EC2AutoScaler: Allow setting ""iamProfile"".",2015-03-11T00:41:35Z
d102a897608c1e9e81db4e02f1fcebdf4974baa9,Fix license on EC2AutoScalerSerdeTest.,2015-03-11T00:31:30Z
217e67406304af97315b8258d295bd357b5d2164,"Handling aggregators and post aggregators with duplicate names
* add test for same-name groupBy hyperUniques post-agg
* add test for same-name post-agg in groupby with approx histogram
* Fixes https://github.com/druid-io/druid/issues/1045
* Throws an error if post aggs and aggs do not have unique names
* Add more groupBy tests for Having filters",2015-01-17T01:11:24Z
9f242ed1ba09ce1f91bf150327fad046c5ce7064,"Merge pull request #1182 from druid-io/better-docs

Rework the druid docs and fix many mistakes",2015-03-10T21:23:38Z
064d65a009c88f1fed1b4dd98671c5e9e4a43b7c,rework the druid docs and fix many mistakes,2015-03-09T23:14:52Z
0b467624ec5aae95e4bae3f120daea41f447b3a7,"Merge pull request #694 from druid-io/arithmetic-op-strategies

normal division & configurable ordering for ArithmeticPostAggregator",2015-03-10T20:48:27Z
2d79c6e5b90ea896bb450309da91550b6268e678,"Merge pull request #1187 from metamx/update-design-diagram

updates Realtime node's dataflow connection, s/historical/deep storage; ...",2015-03-10T20:46:21Z
fa2c43158913ecc76eda4a4e4018a2d3f820ad6f,"Merge pull request #1186 from metamx/dataFormatDocsUpdate

Update Data_formats.md to match arguments used in 0.7.x",2015-03-10T20:45:37Z
705a7b3f2353cfd7ba6cf8813506479b2620524d,"updates Realtime node's dataflow connection, s/historical/deep storage; a bit more information on how Realtime nodes drop segments based on said segments' uptake by Historicals",2015-03-10T20:44:36Z
9992cc93f3214a6f96eef3c50e6daf7aa7976352,"Merge pull request #1185 from gianm/subnets

EC2AutoScaler: Support for setting subnetId.",2015-03-10T20:41:32Z
2ac610771ed740bdff0a8757ddc778b0a3624a2a,Update Data_formats.md to match arguments used in 0.7.x,2015-03-10T20:41:11Z
9235b4506387439a3d6586b95aa52b20f24f5812,EC2AutoScaler: Support for setting subnetId.,2015-03-10T18:28:12Z
c7ec8ba15b68b171bf7931505e6f95aa8c47d6e4,"Merge pull request #1184 from metamx/docs-event-receiver-firehose

fix docs and add docs for event receiver firehose",2015-03-10T17:23:19Z
425ad982617b47e3ed58c00c6f17816852ec6dcf,fix docs and add docs for event receiver firehose,2015-03-10T15:59:57Z
cee7e12cb72059ed39754d448948b2687ead95e4,"Merge pull request #1183 from metamx/update-design-diagram

updates diagram: s/MySql/metadata storage",2015-03-09T23:54:03Z
f98e168ed526268156ce9f26b731dea5abae1b7d,updates diagram: s/MySql/metadata storage',2015-03-09T23:41:21Z
e9b38f4abe824ea47c10a93e753a7860121f2d50,"Merge pull request #1181 from metamx/coveralls-coverage

add code coverage report using coveralls.io",2015-03-09T22:39:53Z
ef842b2eaeaaeac5685944a94d15a6249a462278,add test coverage,2015-03-09T20:44:54Z
2abdce1dc067f03e9005c899676db3e192f4a854,"Merge pull request #1180 from metamx/logging-groupBy-NPE

add null check early to catch root cause for groupBy NPE while running bySegment query",2015-03-09T16:16:33Z
704f463dbf4e759aace2de4159f7b3ee9586ef37,fix property name in doc,2015-03-09T15:49:29Z
6e935cca0a6854fb6c03f4f09fb72b72efa19aed,add null check early to catch root cause,2015-03-09T15:40:28Z
88a1d1e0488255224af8e0632b1b026b3cca4f5a,"Merge pull request #1179 from himanshug/batch_ingest_no_data

fail early if there is no input data found for batch hadoop indexing",2015-03-07T19:00:52Z
6a0405de2047c344ec6f3d0f6a61c19b2c146483,fail early if there is no input data for batch hadoop indexing,2015-03-07T18:45:57Z
a54f93ea4295f205585653d501ac6b8eb843564f,"Merge pull request #1178 from himanshug/doc_fix

simple typo fix on Concepts-and-Terminology.md",2015-03-07T17:55:30Z
cb5ed4942c352d086a4c5c9e93b793961bf56979,simple typo fix on Concepts-and_Terminology.md to correct navigation to spec file info,2015-03-07T17:29:24Z
e161021902339f87adb4bd7027986cfaa991bb86,"Merge pull request #1171 from druid-io/fix-rt-task

Add more metrics and fail when realtime tasks fail to persist and merge",2015-03-07T00:42:23Z
86a0a3cab845e8597f7e7436fc7cc4f34b73a504,add more metrics and fail when realtime tasks fail to persist and merge,2015-03-04T22:05:52Z
bfe61703f5d9bc450e5555f8cee95c2f486cad86,"Merge pull request #1167 from himanshug/servlet_filter_holder2

feature to add servlet filters in a druid node via extension modules",2015-03-06T17:53:01Z
956361dbbd0b6d27502a22d90141794da6976b8f,"Refactoring: Moved BaseJettyServerInitializer.java to JettyServerInitUtils.java and changed it from abstract class to a utils class containing static methods
And, moved jetty stuff to its own package io.druid.server.initialization.jetty",2015-03-04T20:49:09Z
3c787eb213462968296dafec315ec44115ae3979,"Merge pull request #1174 from himanshug/java-util-update

updating java-util version to 0.26.15",2015-03-06T00:46:58Z
a98af90398c81a536e2fa22229d6fdafd2eb3912,"Merge pull request #1173 from himanshug/druid-api-update

updating druid-api version to 0.3.5",2015-03-06T00:29:53Z
492148c8373a74ef65f29a6c22b291ce6c0f744f,updating java-util version to 0.26.15,2015-03-06T00:29:50Z
fba9d31f6ebb51a74d72311041cbc8d3ae63655d,updating druid-api version to 0.3.5,2015-03-06T00:07:32Z
9850b99b3b2dc52fa4d8854fca58b44b4826d5e5,"Merge pull request #1170 from metamx/fix-archive-task

break up archive task actions",2015-03-05T06:09:00Z
113d204b104a242cc9cd6ed6b6771875c0c18c74,"break up archive task actions, which was missed in #566a3a6112",2015-03-04T21:19:52Z
0d47c0c36d1f27ac21a2942a1195f52c1c09a43c,"normal division and configurable ordering for ArithmeticPostAggregator

Fixes #510",2014-08-21T17:05:38Z
a8648d8f3da58f87fc82fccb3bc2447e36716339,feature to add servlet filters in a druid node via extension modules,2015-03-04T04:35:02Z
d8e199a3f5f6adad27fccbded35785981bb64996,"Merge pull request #1161 from himanshug/zk_ood_updates

Fix to maintain correctness when out-of-order ZK updates are received",2015-03-03T22:42:31Z
dda2a62ff57436686627f1ac815a0dd3506b643f,"on receiving ZK ADD/UPDATE events, get latest data from zookeeper instead of taking it from the event which might be stale due to event coming out of order etc",2015-03-03T02:42:18Z
9578304d6f6994b6b0cc2c36558de56b977ffce3,"Merge pull request #1130 from housejester/jde-building

Various improvements to the tutorial and building experience.",2015-03-02T22:48:32Z
d685e2ab04169d958430af8bfc21a1a2c29cb83f,"Merge pull request #1165 from friedhardware/fix-NPerror-select

Added null check for the pagingSpec on a Select Query.",2015-03-02T22:17:06Z
e8605c63a97b2f3cd140a37e7ddbff08c81facb6,"Merge pull request #1150 from himanshug/broker-parallel-chunk-process

interval chunk query runner now processes individual chunk in a threadpool",2015-03-02T21:50:23Z
29039fd54157b70477a62a37776b5876be148e54,interval chunk query runner now processes individual chunk in a thread pool and prints metrics query/time per chunk,2015-02-23T01:40:47Z
a76a24742bb1d3037b5767ae3ece445e00aec1f7,"Merge pull request #1149 from himanshug/broker-get-datasource-update

updating ClientInfoResource.getDatasource() with a full flag",2015-03-02T21:28:27Z
e6130e0fdcdf9e48621698a22a2b1059ddac4a3e,Added null check for the pagingSpec on a Select Query.,2015-03-02T20:41:59Z
a39f4f8bf4a0304ea241dbec6164d506ef6783c9,updating ClientInfoResource.getDatasource() with a full flag to return all the served intervals for given data source along with the dimension and metric information,2015-02-22T23:27:56Z
437d61ed8fe7f242c99c00b051c3497d2cea3c2c,"Merge pull request #1164 from mrijke/docfix-cache-configs

Docfix: Update Cache config pages",2015-03-02T19:47:50Z
3a90beb0d99e2ae8da446feb41fd4951bbf669dc,"Merge pull request #1158 from metamx/cleanup-async-servlet

Cleanup router servlet + tests for gzip proxying",2015-03-02T19:42:04Z
17743b94f3866dd2e1208003ce6359f2735eb750,"Cleanup router servlet + tests for gzip proxying

- Uses method overrides instead of modified Jetty code, now that
  ProxyServlet provides enough method hooks for proper overrides.
  This means we may also benefit from any Jetty ProxyServlet fixes
- Adds test for async proxy servlet to make sure gzip encoding is
  properly proxied.
- Router now proxies POST requests for requests that are not Druid
  queries, by only treating /druid/v2/* endpoints as queries.",2015-02-27T22:27:14Z
2531bb9664672eb7812c593c53ba00c7af8dafce,"Docfix: Update Cache config pages

 * Update Broker-Config.md Cache options table
 * Update Historical-Config.md Cache options table (broker->historical)",2015-03-02T17:03:06Z
1d98717d24b500cee63d822dd013ed4ec7c4e993,"Merge pull request #1162 from mrijke/fix-metric-monitor-names

Update metrics monitors names in Configuration.md",2015-03-02T18:33:19Z
6cf5055ddfd7de97ab824e1a5ef60795c4c4a22e,"Merge pull request #1163 from mrijke/docfix-default-druid.emitter-value

Update default value for druid.emitter in Configuration.md",2015-03-02T18:29:54Z
092acaea9d54d38ff2ee5c593a7770351b148b56,"Update metrics monitors names in Configuration.md

Updated the metric package names to reflect the new names in 0.7",2015-03-02T10:29:48Z
d52f3bb8170acce7d8c59a45b98dbe5c987825d8,Update default value for druid.emitter in Configuration.md,2015-03-02T11:06:30Z
c21086b6a80d543a412a39ad265f8d9388d3fafa,"Merge pull request #1113 from metamx/fix1111

Make Realtime queries not submit to thread pools for the master merger",2015-02-27T19:13:25Z
9cb5d9bd00d76c39290a2dcb8497fb1a64fd9962,"Various improvements to the tutorial and building experience.

- Improve geo ip download stability
- Retry default geo ip download if corrupt
- Clarify docs on building & where to get artifact",2015-02-11T16:10:58Z
6e315ddcd2eaff70ccda3786ede9a6d36394a15f,"Merge pull request #1154 from infynyxx/fix_doc_link

fix broken docs link",2015-02-26T01:05:55Z
b633111c76cc7ee65e9af0008e3d5123781c2855,"Merge pull request #1156 from druid-io/fix-log

Print better messages when there are problems with ingestion",2015-02-26T01:02:46Z
9a3ed353dc734fd80a107ac2051e7d7188f48e0b,Have a more meaningful message when events are dropped or unparseable,2015-02-26T00:05:51Z
af807c6215ae5aadd1aa5eb97df2143e3f5e491b,"Merge squashed version of pull request #1148 from 'himanshug/unit-tests'

Also updated license header as part of the squash.",2015-02-25T23:49:59Z
467fcfae0329f0aaa442b98c9f8f25c1b2b949ae,UTs for services,2015-02-16T23:17:51Z
2192d0cb572645d2eaf6a6b293baf5ef1d33f722,UTs for server,2015-02-16T23:13:46Z
bd5cecdd44036c1ed1e5c869cb9aa212a168461c,UTs update for indexing service,2015-02-16T23:07:10Z
30f64ff19eada8fc94adee3223880fd817a559d3,UTs update for indexing-hadoop,2015-02-23T19:42:20Z
e6ee98e2d215f1768d3dfff457eca09a748f8dbf,UTs update for common,2015-02-22T16:58:35Z
69ba802abbe1c751be88ce7a36184e9f8009d287,"Merge pull request #1109 from metamx/fixAnnouncerTest

Make the Announcer closing and unannouncing atomic.",2015-02-25T23:24:18Z
0784d7e30e14451711f949aee7c14858382339c0,"Merge pull request #1152 from himanshug/metastorage-pwd-provider

support for metadata store PasswordProvider interface",2015-02-25T23:19:37Z
708f35151d29a57a469c6077963557da8a6b5ac7,"Merge pull request #1121 from gianm/issue-1116

Use the proper FileSystems for writing segments and caching jars. (for issue #1116)",2015-02-25T21:03:59Z
005f4da2c0ca1cf3a140d6ff09f3bee1d35f75ec,"Merge pull request #1143 from metamx/update-rhino-1.7rc5

Update Rhino to 1.7RC5",2015-02-25T20:50:23Z
6424815f883247c346f04cd67732aebadd2558a2,"Merge pull request #1097 from metamx/better-hadoop-sort-key

Sort HadoopIndexer rows by time+dim bucket to help reduce spilling",2015-02-25T20:49:58Z
3d50a3771ad64ee4d922b9844b4bed35ac46ea3e,"Merge pull request #1151 from himanshug/remove-s3-fs-dep

removing dependency on NativeS3FileSystem and other file systems",2015-02-25T20:31:45Z
126262edce6a3a4c7ca94fcf02f2ea229462b74c,support for PasswordProvider interface to enable writing druid extension which can get metadata store password from secured location or anywhere instead of plain text properties file,2015-02-23T15:22:42Z
aa9dbb773dbf2c890af7a1aa764d24a73d82b285,"Merge pull request #1153 from metamx/announcerTestForWaitingFix

Use forWaiting() in AnnouncerTest",2015-02-25T05:48:54Z
d1fb42c554a63b36eeff19a000d0a0f81835cc84,fix broken docs link,2015-02-25T04:41:13Z
46bd614d63a308bd9db767e3c258ccb4701aebf9,fix broken links,2015-02-25T04:14:17Z
29a352270843f4a919fdd45b0cd7fd0de028df8e,"Use forWaiting() in AnnouncerTest
* Helps reduce random failures in unit test on slow systems",2015-02-24T16:35:07Z
b167dcf82cfd0a494f6e9447731249f90740ffd6,[maven-release-plugin] prepare for next development iteration,2015-02-23T22:28:06Z
e81ac2ba4302d488f6c9a3dda8a89af9c10d35e8,[maven-release-plugin] prepare release druid-0.7.0,2015-02-23T22:27:58Z
01a4f19ea26c08d2c8d3cfdc588b0ad48d40a501,removing dependency on NativeS3FileSystem and other file systems,2015-02-22T17:17:58Z
7c022125844483f0895da648a1d39cdbcdb03585,"Merge pull request #1146 from metamx/fix-typo

fix typo",2015-02-20T00:21:23Z
667c3d4f8cd0b4dc486a5363c3a2e55e33877cfe,fix typo,2015-02-19T19:41:37Z
49eae0fb7012f6ff61fbc0c0f91c16dc273cedea,"Merge pull request #1140 from housejester/jde-log4j2

Update docs and examples for log4j2 usage.",2015-02-19T18:52:33Z
562de6c62100995de52931f8cd983b3eaccced9e,"Update docs and examples for log4j2 usage.

- Put configs early in classpath in examples so log4j2.xml will get picked up properly
- Add an example log4j2.xml file.
- Update Logging doc.",2015-02-18T19:19:47Z
6d3200c67fa8e292a8039696e566c4452f24ac3f,"Merge pull request #1145 from metamx/remove-build-script

remove build.sh in favor of mvn package",2015-02-19T18:36:27Z
475ba9d0684f725c8caed52dae4fd25000dec598,remove build.sh in favor of mvn package,2015-02-19T18:31:50Z
b697652771b77d4dd7b22241d734ff9011037536,"Merge pull request #1141 from metamx/readme-cleanup

Clean up README and license",2015-02-19T18:23:11Z
c4d721fffdafc398664331e7a21c6ff6bb7659ad,update Rhino to 1.7RC5,2015-02-19T17:47:11Z
704acb2336cb06f6f1d8c5e0cbf5cbc7d010ae3c,Clean up README and license,2015-02-19T00:50:18Z
46ba773409c0fea7831b227530392e5c6df9fec9,"Merge pull request #1139 from metamx/rename-binary

rename Druid binary assembly",2015-02-19T01:44:25Z
8e33e5842288c74be9330947de6bd74960f72f06,rename Druid binary assembly,2015-02-19T01:25:09Z
25db9abb7f7daa0d849a9516ba9b63c46d39819e,"Merge pull request #1138 from metamx/better-default-hostname

Better default hostname",2015-02-19T01:37:34Z
6b391e40556eb7404f236440bc798b9dca452923,expose additional ports in Docker to help debugging,2015-02-19T00:46:06Z
53d2b961c59adf99821041ed7cdc856b0057a1b8,default to canonical hostname instead of localhost,2015-02-19T00:44:48Z
d459235af57a76c01b325c8c166600efe8c89382,"Merge pull request #1137 from druid-io/more-compares

Add more compare docs for other technologies",2015-02-19T00:25:58Z
63e9c6200a69d2937d9a6954bcc2a19f49469785,update readme,2015-02-19T00:09:10Z
6d05f4fe5e704ecfc9bb37f5777a267fb869450e,Add more compare docs,2015-02-18T22:07:10Z
146a6a3b2b715bacf883c6091a9f164ecbc0cd5c,"Merge pull request #1135 from metamx/topNDocumentation

Add more TopN documentation regarding Aliasing",2015-02-18T23:39:27Z
c1a7e6a31cfb607aa01976294bb0d7704cbc7b35,"Merge pull request #1136 from metamx/examples-use-default-ports

Use default ports in examples and fix incorrect docs",2015-02-18T21:21:09Z
19e11ae60161f6c3fea626cb7dcb14db0726fc06,Use default ports in examples,2015-02-18T19:46:27Z
2e27b888ed6a09c5239c9c207aa60405437c1d14,"Add more TopN documentation regarding Aliasing
* Addresses concerns in https://github.com/druid-io/druid/issues/1134",2015-02-18T19:01:30Z
9b94f725fe312879e0114e803deb4d0d54db31fa,"Merge pull request #1133 from metamx/kafka-eight-docs

Update Tutorials and Examples for Kafka 0.8",2015-02-18T15:56:48Z
cff218ee20fca8f79176b29450196779efdeeb5a,update example + tutorial for kafka 0.8,2015-02-18T04:26:58Z
018653700bd96417dcaf7336c361df30518f3ff8,update docs jekyll config,2015-02-18T04:25:15Z
683fa1dc65719d9a74aa4e98388c0586f20ffb43,"Merge pull request #1131 from druid-io/fix-tutorials

Go through and fix mistakes in tutorials and docs",2015-02-18T07:58:20Z
3fab045b2d4065f729b84f929a56779749eb805b,Go through and fix mistakes in tutorials and docs,2015-02-17T23:21:16Z
2a455013939d6385b42144b63170c19d78011c37,"Merge pull request #1110 from metamx/move-to-sonatype

Move Druid release artifacts to Sonatype",2015-02-17T19:54:16Z
b42b41cca7428b6dade4e2163e412fea4265fada,"Bind value of column ""partitioned"" as boolean, as it is defined in the ""create table"" ddl.",2015-02-17T07:44:18Z
5d12502f9dec468cb49cd84512357076308ae5ce,"Merge pull request #1123 from housejester/jde-tutorial-common

Common Configs in Tutorial",2015-02-16T16:23:59Z
2593864c522b0c684a5ca9b1441d07a5a655a859,"Merge pull request #1126 from gianm/md-insert-or-update-tx

Use jdbi inTransaction for SQLMetadataConnector's insertOrUpdate.",2015-02-16T16:23:05Z
e00de8c19f017f0426da93257a17a905f2dacd80,"Use jdbi inTransaction for SQLMetadataConnector's insertOrUpdate.

This fixes an issue where failed transactions were not properly rolled back.",2015-02-16T15:41:40Z
38e8dfdc989121a307abba2e10e69418b88f262a,replace Kafka 0.8.1.1 with 0.8.2.0 stable,2015-02-13T22:36:55Z
1971c1679cd7e62e6c22d3f7c3e1c2e2615cee82,do not build kafka-seven extension by default,2015-02-13T22:32:47Z
78df7f616520842136a39d4c496151235f6eccdd,"Move Druid release artifacts to Sonatype

- Switch to using Druid parent POM
- Add required fields for Sonatype
- Common plugin versions and settings have been moved to the parent pom
- Cleanup artifacts and POMs for consistent formatting
- Remove org.hyperic.sigar dependency and update docs to reflect necessary jars to add at runtime when sigar is needed",2015-02-04T00:48:00Z
8d1aa2beb3f3d3b949f3e0be95f9b5102246da5f,"Add common config dir to classpath in examples

Also adds query examples in the Cluster tutorial",2015-02-13T19:53:28Z
fd5a7d1f084a8d05a9fff600cd76f567eedad1a9,Use the proper FileSystems for writing segments and caching jars. (for issue #1116),2015-02-13T00:19:59Z
d29740ed9fd26f6c289c1b02c525e33d20662f2d,[maven-release-plugin] prepare for next development iteration,2015-02-13T00:16:00Z
211fd15b7ed7b1f50237e731de8907fd3e537578,[maven-release-plugin] prepare release druid-0.7.0-rc3,2015-02-13T00:15:56Z
13de51494efe73a4562ca32a2ca5b143f0feaa96,update versions in tutorials and docs,2015-02-13T00:11:31Z
e915675b97ee806c511c701417ef3c28beda4b3f,"Merge pull request #1112 from druid-io/fix-examples

Update realtime node configs for examples; fixes #1111",2015-02-12T23:44:15Z
27f32bdc8dac811e448a6c9dd5930d70bdcbc88f,"Merge pull request #1117 from druid-io/update-pom

update poms for bb collections for druid-api for bug fixes",2015-02-12T23:38:14Z
5fa839888c2e1167c4e66e30db60c562dc0efecc,"Merge pull request #1118 from metamx/fix-integration-tests

fix-tests",2015-02-12T23:11:26Z
feebcd757fc9763eba4bf82c7ade59a257e51b98,"fix-tests

add columns to parseSpec",2015-02-12T20:49:27Z
90bc62eb5c4320a56af1ff55b1ec39ef6c6fbf43,"Merge pull request #1108 from metamx/improve-groupby-perf

Improve groupby by removing conversion to case insensitive row",2015-02-12T19:45:20Z
b370dfbdb35d90f256584bc97ce0f38f53cc910d,update poms for bb collections for druid-api for bug fixes,2015-02-12T19:43:34Z
9bcbf0993ad94d99799d3d245e0ce557780de274,"Merge pull request #1114 from druid-io/more-docs

Add docs for http endpoints",2015-02-12T19:30:08Z
2d5c3e3c58b9fe9e7dadb90b328641c1fe0ba38c,"Merge pull request #1115 from metamx/travisCImark

Add build status image to README.md",2015-02-12T19:21:20Z
7c4e896fd7b90c6ef5f1129e2389ecb9e9b601eb,Add build status image to README.md,2015-02-12T04:26:55Z
bd500fcf4be6da129af69745feef1c1ec6f57901,Make the Announcer closing and unannouncing atomic.,2015-02-11T16:17:44Z
34ed474d4061c2c7e6cdc4859e40460f8f3407db,Add docs for http endpoints,2015-02-12T00:12:51Z
e116600c7fe2b88861765f1ce3f14cbcac101e13,"Make Realtime queries not submit to thread pools for the master merger
Fix https://github.com/druid-io/druid/issues/1111",2015-02-11T23:43:51Z
63338e6e3536b81a61d8b6e847e58a620176d646,Update realtime node configs for examples; fixes #1111,2015-02-11T22:34:02Z
8410023b6e18dbb01956760be772018be333b2f9,"Merge pull request #1092 from metamx/jacksonObjectMapperCopyFix

Remove ObjectMapper::copy() from QueryResource",2015-02-11T17:45:12Z
15cf432b743896cb2b17acba2c19280079afc263,"remove conversion to case insensitive row

this is not required after death to casing in 0.7",2015-02-11T14:10:36Z
d51b37cfd51e2777d5b698d6b4eebfec28c5d305,"Remove QueryResource's ObjectMapper::copy() in favor of using the injected ObjectMapper directly
* Workaround for https://github.com/FasterXML/jackson-databind/issues/696",2015-02-05T03:55:19Z
b1ec7afc12c4718703a858ba15391516c613803d,Sort HadoopIndexer rows by time+dim bucket to help reduce spilling,2015-02-06T22:00:40Z
c5e99bf6ec46e7ca2b6e05f05bab42353c6c1274,"Merge pull request #1105 from metamx/fixEmptyExtractionFilter

Fix empty results on ExtractionFilter.",2015-02-10T22:25:58Z
b9cb311a52a6c4b3964c8da8fe6d80695dfb8675,"Fix empty results on ExtractionFilter.
* Now returns empty results rather than erroring out
* Added unit tests for multiples case",2015-02-10T17:54:04Z
31e248736dbf87875ff40993d7dfc094935c0ed9,"Merge pull request #1106 from druid-io/update-http-client

Update http client to 1.0.0",2015-02-10T21:37:27Z
708759e1e0e7fd9f0a64ae7bca93a1bede69d0cb,Update http-client to 1.0.0,2015-02-10T01:14:33Z
a5424d59b3a9123a892463b8bdfd56684176430a,"Merge pull request #1104 from metamx/fix-npe

Fix NPE for union queries",2015-02-10T17:55:39Z
e5fa8e0cb4f4d79e09d615a47b22e44460485e0a,"Fix NPE for union queries

filter non-existing datasources for union queries.

handle review comment",2015-02-10T04:44:54Z
1418cbb0e95bb4211ae8193a1e62c85eee036736,"Merge pull request #1103 from metamx/fix-request-time

fix change in request/time meaning introduced by d2c729a, fixes #1102",2015-02-10T01:23:05Z
2db3144f04c4d2e1dbe09a10bd6efec8b62f43d6,"fix change in request/time meaning introduced by d2c729a, fixed #1102",2015-02-10T00:41:30Z
72333731c35b32647d753e8544f4e7695e89e004,"Merge pull request #1101 from druid-io/update

Update poms and add docs for backwards compat JSON parser",2015-02-10T00:14:57Z
e5debb2dec581f32a988b0c2c946c5ac162b2d13,update poms and add docs for backwards compat,2015-02-09T19:33:29Z
040e771da2cefb063f2aa658d340ffff690cfe18,"Merge pull request #1099 from metamx/console_cleanup

console cleanup",2015-02-08T17:06:05Z
f47f0d51c7c4d8f9b8fecdcf8ca79425042e25d1,"removed unecessary logging
fixed simplifyInterval logic",2015-02-07T05:13:25Z
9f353ca2bd28901ddf3d2246376edd86d1d5364b,"Merge pull request #1098 from metamx/Enable_full_iso8601_durations_in_console

better regex for durations",2015-02-07T01:30:45Z
a0fc20fc0997bdc116ca78ac12b99c7ac8090a9b,better regex for durations,2015-02-07T01:02:31Z
1ee4f7cc13192102ff7556b629dbb65c00aa9b68,"Merge pull request #1096 from metamx/incremental-index-time-selector

fix `__time` column selector for incremental index",2015-02-06T21:07:59Z
a7dcaffb535e65a93137b2ea7cfbd10710b9ba3d,"fix `__time` column selector for incremental index

- also adds tests for selecting the time column",2015-02-06T19:21:43Z
42e902b6e3e1dedcff8604e09f6418e90bc39bbc,"Merge pull request #1090 from metamx/alphanum-attribution

update code attribution",2015-02-04T23:51:34Z
0fbc6071c9ddeac4bb3ab498133551acafdcb3db,update code attribution,2015-02-04T23:28:44Z
7df02847b7ef34845025d8e0a92f51251660acc7,"Merge pull request #1089 from metamx/linking-to-old-console

fixed links back to old console",2015-02-04T23:22:07Z
dae91e58946f17b72dbb678be0cef04fc8e0a94c,fixed links back to old console,2015-02-04T22:21:46Z
cb4f894ef768fda94592c20f8f54199074e74c97,"Merge pull request #1087 from metamx/fixIndexerBaseRelativity

Fix overriding base of IndexerZkConfig to be absolute instead of relative",2015-02-04T22:10:21Z
60b2d920bc3b3dd6923498b629fc8557619114b3,"Merge pull request #1088 from metamx/upload-docs-s3

Upload documentation to static.druid.io",2015-02-04T21:23:27Z
79a3e8f59fd942f22f99145fe1de21b70342fe98,"Fix overriding base of IndexerZkConfig to be absolute instead of relative
* Updated docs to clarify ZK config behavior
* Added unit tests for this case",2015-02-04T20:02:54Z
ae78b1450ece2b0eea5f5626b9de345f325c661d,upload documentation to static.druid.io,2015-02-04T20:56:52Z
25cf15824b099b04450983cc1997f24142c7b337,"Merge pull request #1085 from gianm/dsmrv-fix

DataSourceMetadataResultValue fixes and JodaUtils adjustments.",2015-02-04T01:51:33Z
085ad8d34569503fba11631bb7b5cc8fb26a7098,Fix DataSourceMetadataResultValue serde.,2015-02-04T01:39:42Z
1298b4abd32fd218d43f418706f8201064a1816e,"JodaUtils: Bring in MIN/MAX instants a bit.

This prevents the difference overflowing a long.",2015-02-04T01:34:33Z
67ecb07ccda130b25872427699eab1ee3dff3948,update version in docs,2015-02-03T22:26:42Z
1f12c5b2f17f5870d2edcd4025396e709b300f61,[maven-release-plugin] prepare for next development iteration,2015-02-03T20:06:49Z
e82d431be78e43c252a200b46c0e77459cbe9492,[maven-release-plugin] prepare release druid-0.7.0-rc2,2015-02-03T20:06:41Z
4eff269536815ae69bad8973ed473dcc5c608b18,"Merge pull request #1079 from druid-io/cleanup-deps

Remove non friendly dependencies from Druid",2015-02-03T19:56:41Z
ffb180e29d4227b6104d7d31082f8aee86f2c3be,"Merge pull request #1080 from metamx/fix-cost-balancer-strategy

fix integer value overflow and add test",2015-02-03T19:45:03Z
6da6b9eeda9f7814b7b81087d323b6291b82ca62,fix integer value overflow and add test,2015-02-03T07:50:40Z
3e5d338c8e576bea389cb197252afa2ad7355e29,Remove non friendly dependencies from Druid,2015-02-03T02:16:56Z
b5e80b7b38e5af8ef2beb197dc83aed4a5c0ed30,"Merge pull request #1083 from metamx/contrib-docs

Provide more guidelines for contributing",2015-02-03T19:34:03Z
d20a2afdda66b40e5ee24e642f044fee9c968b4b,Provide some guidelines + formatting fixes,2015-02-03T18:15:20Z
6ef3a762b69f6280214cef2c251f75f2ccf20a77,"Merge pull request #1081 from metamx/contrib-docs

Contributing docs",2015-02-03T18:15:23Z
465360536e90d7162a4cf750eed2c21350d4a2d3,initial contrib doc,2015-01-28T21:05:15Z
71b4c5fa865e97f53cbb37b47e2c6867bf8000a4,"Merge pull request #1076 from metamx/remove-threadlocals

remove thread-locals in GenericIndexed in favor of wrapped objects",2015-02-03T04:02:33Z
cb2e300eba45015384ffc6ad78451c60fe72fe6d,remove thread-locals in GenericIndexed in favor of wrapped objects to reduce GC pressure,2015-01-31T02:09:25Z
ccebf281e69eb0d6d9395c0402bb9bd11e259219,"Merge pull request #995 from druid-io/null-fixes

Towards consistent null handling",2015-02-02T22:39:39Z
42eba986ce0e2a08589f20c429c66de395bec8da,"Towards consistent null handling

This commit also includes
1) the addition of a context parameter on timeseries queries that allows it to ignore empty buckets instead of generating results for them
2) A cleanup of an unused method on an interface",2014-12-24T01:33:06Z
92e616de11aab695e2d5110de0413cf0a6baa6dc,"Merge pull request #1077 from metamx/remove-unused-imports

remove unused imports",2015-02-02T18:45:27Z
ba932bb1f21be2958b2031bf92b6f6d797245f10,remove unused imports,2015-02-02T16:23:39Z
d05032b98a01724773014f2689b1498b44a8e1d0,towards a community led druid,2015-01-31T04:36:38Z
b94b24c46e997c0cfe1e6ce9ab68625c5044d773,"Merge pull request #1072 from metamx/common-aws-config

Common AWS module + consistent credential chain for both S3 and auto-scaling",2015-01-30T22:41:24Z
14837d7808073b0bda20d24382fb7a8eb1241574,"Merge pull request #1075 from metamx/fix-test-timeout

increase test timeouts on DruidClusterBridgeTest",2015-01-30T22:31:32Z
a01a22dba1234d794626f597357bb203cfe62785,"Merge pull request #1074 from druid-io/overlord-leader

Add an endpoint to return the overlord leader",2015-01-30T21:44:49Z
cd7e768640fc65aaa07fe0e8d6b758317f5b3252,increase test timeouts on DruidClusterBridgeTest,2015-01-30T21:18:35Z
bd49528805a122515fedc0b15fc8efc93ed4a700,"Merge pull request #1073 from druid-io/fix-statusPath

Fix worker status path announcement with indexer zk config",2015-01-30T20:51:21Z
649f285feb4d418729705f1873c3db0e9ecd02a8,Add an endpoint to return the overlord leader,2015-01-30T20:37:48Z
bc1405bee0be0cb451896d816e28644b1a84ccf2,fix worker status path announcement with indexer zk config,2015-01-30T20:26:08Z
f00872c41b7cac5de5a94c387a45ccaa857918ba,move common AWS related classes into a separate module,2015-01-29T21:31:34Z
d875d7294b803ad1d4dd44b94c3c9f5ad1093822,"Merge pull request #1070 from metamx/fix-topn-missing-hll-npe

fix NPE for topN over missing hyperUniques column",2015-01-29T00:28:52Z
f24a89a22a3b92940606fb0ec74c4d70feb77b1d,fix NPE for topN over missing hyperUniques column,2015-01-28T00:12:41Z
05b2bf3fddf00915d2dcf46ebfedca7dbdd44919,"Merge pull request #1067 from druid-io/fix-worker-select

Make dynamic worker selection actually work as intended",2015-01-27T22:54:16Z
2c2771b90eb51e90741c191dce2dd59700b83485,Make dynamic worker selection actually work,2015-01-27T22:17:12Z
b78ef22829d39d103fcaad296df7acdc8cca735b,"Merge pull request #1063 from metamx/fix-dimension-exclusion

fix dimension exclusion",2015-01-27T22:10:41Z
2d96b62e6cd71c683a0165d7a8909bff61728f59,"Merge pull request #1066 from metamx/fix-background-caching-ordering

fix background caching not preserving result order",2015-01-27T22:09:17Z
59c190732243b60edef87031698a419aaa2bedd3,add test for out-of-order background-caching execution,2015-01-27T20:51:35Z
f2d66858c537c350c9e9192f6cb584ccbd595408,"add test for IngestSegmentFirehose

fix failing integration tests
add test for ingestSegmentFirehose",2015-01-27T17:36:30Z
cd9ba1f85225c1d54b646e2fdb1cb8ace08d3b45,fix serde bug,2015-01-27T10:47:36Z
b334d7973df39b4a3458df59eff863b29a04ae18,fix background caching not preserving result order,2015-01-26T17:43:24Z
6993d84f02c5a8d19813f6d59930f53b430ce361,"Merge pull request #1064 from metamx/groupByHashIndexCoStore

Add a hash map for storing groupBy partition index",2015-01-26T17:46:36Z
226dd91a3174dad24514b8ed476718411292005c,"Add a hash map for storing groupBy partition index
* Improves groupBy performance by approx 15%",2015-01-23T04:45:09Z
0f3eac4705439730de4e81099eb0b46fe22fde6f,fix dimension exclusion,2015-01-22T19:01:23Z
b9337e883ac5df8c0274240890553cc9e6eb9a83,I'm all about them doc fixes,2015-01-22T06:04:48Z
f437e1654325d50a3f0954a0d125c3ecea8d3f09,moar doc fixes,2015-01-22T05:59:16Z
e33e45e69e1490c4732c5d8fe6d0f7230fc9e200,one more doc fix,2015-01-22T05:52:23Z
74a4fddcfe9d8455e1753c4b71d5807b4bdf7b22,fix task docs,2015-01-22T05:48:48Z
b71fff0db40e30048cc2423b8290c8a19c1e4285,"Merge pull request #1061 from druid-io/fix-docs

Add more docs for production clusters",2015-01-21T22:22:12Z
7540f2f5622d9a4cd1930f0fb0bee2fe042c8e8e,Add more docs for production clusters,2015-01-21T22:10:13Z
70824870755243bed4af768090dd601e5e9279ba,"Merge pull request #1060 from metamx/fix-test-timeout

fix BatchServerInventoryViewTest test timeout",2015-01-21T01:43:04Z
26c5c2193f94069cac5e23cb4eee256edf445941,fix BatchServerInventoryViewTest test timeout,2015-01-21T00:35:42Z
1f94de22c62b18c5ce49aae267c56c8a2af9a8dd,[maven-release-plugin] prepare for next development iteration,2015-01-20T22:23:55Z
17476edc31cb9c947213981737cd47ca9bf32b25,[maven-release-plugin] prepare release druid-0.7.0-rc1,2015-01-20T22:23:51Z
5a2030c49b8883d3b654f9a42b9277856b44e11a,"Merge pull request #1059 from druid-io/remove-test

Remove test rejection policy - it has no place anywhere",2015-01-20T21:39:46Z
a74ced97d9f8792778ce84411862913850dd3352,"Merge pull request #1058 from druid-io/equal-dist

Add a new equal distribution strategy for assigning tasks",2015-01-20T21:27:32Z
1ff5829d6d1cc60d077f025f09b80faf599fe0bb,remove test rejection policy,2015-01-20T21:22:30Z
2d516fa59122b0432956a1c635d269219e5739cf,Add a new equal distribution strategy for assigning tasks,2015-01-20T21:09:24Z
c532d076359b918d125698c4e709c3c29220fbc7,"Merge pull request #1011 from metamx/log4j2

Upgrade to log4j2",2015-01-20T20:51:07Z
f7ed046417a070294cbbf00a5222114739fcf124,"Merge pull request #1057 from druid-io/S3ForwardsCompat

Remove parser in the constructor of statics3 firehose as it is no longer...",2015-01-20T20:48:47Z
dd9b646037567dea24736e2d7d330c54caa1da2b,Remove parser in the constructor of statics3 firehose as it is no longer needed with the new ingestion schemas,2015-01-20T15:44:12Z
3d27747f7e31a46da89c83a1f5c5a41466984ea2,"Upgrade to log4j2
Default behavior is as before.
Added documentation for how to enable synchronous logging for select chatty classes:
* io.druid.client.ServerInventoryView
* io.druid.client.BatchServerInventoryView
* io.druid.curator.inventory.CuratorInventoryManager
* com.metamx.http.client.pool.ChannelResourceFactory",2014-12-18T20:54:58Z
91a79dbf9592f2f9259508bd4df41f4a6e2fdf98,"Merge pull request #1031 from metamx/ingestmetadata-query

DataSourceMetadata query",2015-01-20T05:55:35Z
56bad2114a201ac9f976767fc7728a9ee76f9ce8,"Merge pull request #1054 from metamx/increase-test-wait-time

use waiting multiple when waiting in AnnouncerTest",2015-01-19T19:03:35Z
068518216be814e6798cc02de1f55400a357cab3,"Merge pull request #1048 from metamx/update-tutorial

update tutorial to create db utf8 by default",2015-01-19T19:02:17Z
b5f0d119f1b1bb8b030957ce130fa2dcc216c5df,use waiting multiple when waiting in AnnouncerTest,2015-01-19T18:19:13Z
a550dd1f45f1fc34250eae3b1edf8e9e5d1f386c,"Merge pull request #1049 from metamx/SlowIncrementalIndexTest

Account for very slow writer threads in IncrementalIndexTest",2015-01-19T18:14:30Z
1fe79135dc753149c7e019d8b26f8b2eb7831610,"Merge pull request #1050 from druid-io/fix-rt

Fix a small bug where an NPE can occur if a closeable is not present",2015-01-19T18:00:56Z
52f65b1273bb11cd8d98f48d3da2098da7b09701,Fix a small bug where an NPE can occur if a closeable is not present,2015-01-17T23:23:01Z
7bb038756c7866e330b75e31a8c09899cf5f3c38,Account for very slow writer threads in IncrementalIndexTest,2015-01-17T20:45:47Z
2443dda46bcac7b41262f3cb13863ba8c22156c8,update tutorial to create db utf8 by default,2015-01-16T21:44:02Z
38c155e143c8a282ce7c93ffba508527d0523264,Merge branch 'master' of https://github.com/druid-io/druid,2015-01-16T21:14:49Z
0ae737f383e183cdf0ba065ca25ae0b4c264cf9a,"Merge pull request #1039 from metamx/enforce-utf-8

ensure MySQL database defaults to UTF-8 on startup",2015-01-16T21:10:07Z
b4041c13e57f878e247dd2aefad7c6791b853314,"Merge pull request #1029 from metamx/fixChainedExecutionQueryRunnerTest

Address spurious test failures",2015-01-16T21:08:32Z
3b3aad78cb10b55b60252beadf9942358be653d1,"Merge pull request #1027 from metamx/concurrentOnHeapIncrementalIndexFix

Fix concurrency issues in OnheapIncrementalIndex",2015-01-16T20:54:42Z
c68869f76570cbc60cf88354f0f8bcf8c5c2741a,"Merge pull request #1042 from metamx/expand-sharding-info

New section to provide detail on how and why to set up sharding",2015-01-16T20:54:04Z
197af967efa668c8be988685d32f95e684e04dc2,"Fix concurrency issues in OnheapIncrementalIndex
* Was encountering weird errors when fast writes were coming in while queries were happening.
* Added unit tests which tend to cause concurrency query problems",2015-01-13T22:33:46Z
503631f6ffec656d50e9ceaf83cda794faadc8ff,review comments.,2015-01-16T14:51:40Z
e86273a9ae555c915faa2e89d1381e07eb9e2d31,"New section to provide detail on how and why to set up sharding

* Different types of sharding strategies
* How and what to configure
* Redundancy and scale-out",2015-01-16T05:19:53Z
6bc6e71b0de64f3e6ff763a3f2a815b52a4587a3,Add messages to catch spurious test failures,2015-01-15T21:53:17Z
ebafa2a78657972e6fcc8d69c460f8172cfd5271,Fix spurious test failures in ChainedExecutionQueryRunnerTest,2015-01-15T02:58:01Z
f7ea308b250a6c6813cb99504c79117a3d49682a,fix minor error output problem,2015-01-15T23:57:45Z
cd9635ff5ebd620b66793ac5e324be5d6edfd6ea,"Merge pull request #1034 from druid-io/minor-rename

minor rename of things in hadoop ingestion config to match 0.6.x",2015-01-15T23:46:13Z
c0de179aa0c6b58fe234b78e7ff828ad1aa752ec,ensure MySQL database defaults to UTF-8 on startup,2015-01-15T23:27:57Z
ccddbf8747928f7da108bd6b64444754f31b9f37,minor rename of things in hadoop ingestion config to match 0.6.x,2015-01-15T22:04:55Z
5bfcc43377675c90f175a55543046fcef04fea43,"Merge pull request #1008 from metamx/stringConversionJavaUtilUpdate

Update all String conversions to and from byte[] to use the java-util StringUtils functions",2015-01-15T21:50:27Z
ee28e990ced5287b031b05822bd46098425bc976,"Merge pull request #1030 from mrijke/docfix-taskexample

Fix some of the Task json examples to have the correct description",2015-01-15T19:18:30Z
c7452b75f6150d1fe9e81aea1c1b567f51df279f,Merge branch 'master' into ingestmetadata-query,2015-01-15T12:30:31Z
58b334c8e6c9a0d13e5d330ac2bccccdd4aed92d,Fix some of the Task json examples to have the correct description,2015-01-15T08:41:23Z
6f1537d1534739ffda1d86aea531327c342e418e,"Merge pull request #1025 from druid-io/rt-retry

Add retry capabilities for realtime logic",2015-01-13T22:28:36Z
021a7de759ef9a58a285bd7c7d98b7a737055c51,Add retry capabilities for realtime logic,2015-01-13T18:42:03Z
705e5ab0b181f2f513585eccb624e284279e0ddf,"Merge pull request #1021 from druid-io/log-mpp

Add more metrics and logs for when ingestion may be throttled",2015-01-09T22:37:30Z
f811c8d1ad43c1b53ab8683c1747cd0bc33fcbe3,"Merge pull request #1018 from metamx/faster-builds

new faster container builds in Travis-CI",2015-01-09T22:36:14Z
84cc32ba3285740c78d100f1c415393e100877f3,Add more logging for when ingestion may be throttled,2015-01-08T21:53:45Z
a02ef1dbf12bd926ffe069c868047338e6f0d8e9,update batch ingest docs,2015-01-08T22:38:10Z
a8f8c268d263b0566e63facac94eca259c640e19,"Merge pull request #1019 from metamx/fixZkInjection

Fix indexing service using incorrect announcement path in ZK + cleanup config.",2015-01-08T19:36:21Z
67757b6aeac264b55a506d31f46edf2b2ce06f66,"Change IndexerZkConfig to use @JacksonInject instead of just straight @Inject
* Updated IndexerZkConfig to use no setters, and take all arguments from constructor instead
* Also added more unit tests",2015-01-08T17:34:31Z
d5f4182de4535a3999bfbfc703530bf4731cea97,global test timeouts + fix test race condition,2015-01-08T06:55:53Z
9acc8c72ee1e506a37a688378565581da031e298,new faster container builds in Travis-CI,2015-01-07T23:07:14Z
8ea237d6a101d9c1458da258870973c9ee82896b,"Merge pull request #1017 from druid-io/integrationtest

Integration tests",2015-01-07T22:28:18Z
f69e0591b06ae095a9271f3fda24792436fb66f3,working integration tests,2014-11-06T18:23:24Z
5e7f68058d3b3f4312b2a47f88ff6723da2319f0,"Merge pull request #1013 from metamx/backgroundTimeout

Change background caching to trigger cache population on Futures end.",2015-01-07T21:38:00Z
c1295202ffc5bdd49128840b1ce653f5f33cab37,Allow background caching run after the futures are finished,2015-01-06T01:55:51Z
f6893cc2f3ff498de8e0b696b54fd2b24675021b,"Merge pull request #1015 from gianm/mpp-docs

Improve maxPendingPersists docs.",2015-01-07T17:59:52Z
dde21a16e1b29b446b219084635f8fc5edecd332,Improve maxPendingPersists docs.,2015-01-07T17:55:33Z
5e4aa760fe3114a588eec0a769ee70834018a3de,"Merge pull request #1009 from metamx/missingPluginVersions

Add some missing versions for maven plugins",2015-01-05T22:44:20Z
dec424b4af646fbf1426df82531223e4dca125b5,"Merge pull request #1010 from metamx/fixTestsModuleMissing

Added a few places where tests were using Object instead of Module",2015-01-05T22:04:10Z
f6fbb733b87492813eb2d067d1b96afb92bbea18,Added a few places where tests were using Object instead of Module,2015-01-05T21:47:25Z
c20142f2a905ecd9cfc0c6433abd01947dff2d4a,Add some missing versions for maven plugins,2015-01-05T21:27:29Z
852e863425312c053d6f8c5d678d6ac3e5404aef,"Merge pull request #981 from druid-io/strictModuleTyping

Use Module instead of generic Object in Guice related items",2015-01-05T20:43:20Z
ab0ddc0d7c76e9edaa660f6a5ee1953b65767472,"Merge pull request #998 from drcrallen/zkConfigJackson

Change zk configs to use Jackson injection instead of Skife",2015-01-05T20:42:40Z
b1b5c9099e335b69641209fcdb9400f78b9220fc,"Update all String conversions to and from byte[] to use the java-util StringUtils functions
* Speedup of GroupBy with javaScript filters by ~10%
* Requires https://github.com/metamx/java-util/pull/15",2014-12-10T01:03:01Z
c0469c99d6c842e20b582ea31bca103cac5b48e7,"Merge pull request #1007 from metamx/fix-hadoop-index-bitmap-property

workaround to pass down bitmap type to hadoop map-reduce tasks",2015-01-03T01:53:12Z
f1375b0bfb52edb676d75e504a09d3ab15a0b6c6,workaround to pass down bitmap type to map-reduce tasks,2015-01-03T01:26:59Z
f17c59e21b6e88628ef4f692e4658b757cb2006b,"Merge pull request #1004 from drcrallen/cachingMemoryHelpers

Add memory hinting and concurrency helpers in CachingClusteredClient",2015-01-03T00:40:00Z
81fdc791e09340e41a024f77c3280a4cf72b7490,Add memory hinting and concurrency helpers in CachingClusteredClient,2015-01-02T22:05:57Z
2aa9e1bf3f3c13aa15c652d9c1dd478d56a5aeee,"Merge pull request #1006 from metamx/fix-lzf-exceeding-chunksize

Tests for larger compression chunks + throw errors on decompression",2015-01-02T22:45:41Z
3fc6cf918d44488dceb90b75cb4ee2afc1c90a21,add test for large chunks,2015-01-02T21:41:52Z
f2f9cbeca8f3a14078f5786c8505b6f256405439,throw error rather than returning garbage results,2015-01-02T21:41:32Z
aca381ba6ac2ce600d81efec509db8dbd096cf65,"Merge pull request #1002 from metamx/fix-lzf-exceeding-chunksize

fix LZF compression with buffers exceeding LZF chunk size",2015-01-02T22:27:23Z
071943a367d1dcc21897d80b228ccb4beab53e47,fix LZF compression with buffers exceeding LZF chunk size,2015-01-02T19:37:03Z
d25c677bdd33355f892346b37a262163cc600afb,"Merge pull request #993 from metamx/fix-bitmap-factory-serde

fix bitmap factory serde",2014-12-31T01:25:49Z
2e63bcd0202c0f0f8b7171f68813d98932a6795a,"Merge pull request #994 from metamx/fix-test-timeout

fix test timeout",2014-12-31T01:17:44Z
1fda1c19a11f799368e125801852aae150779fe3,"Merge pull request #978 from flowbehappy/issue-977

fix issue #977",2014-12-29T23:24:39Z
65286a24e0a8116473319834eeea4e6a19a5aa6a,"Change zk configs to use Jackson injection instead of Skife
* Also added generic config testing class JsonConfigTesterBase",2014-12-01T21:35:38Z
574ab3017c5ae112b41be1bfef2e288d4445d6b3,fix test timeout,2014-12-24T00:25:38Z
f2439899e7f41ef5b8b2c5e2765ac689b0391774,fix bitmap factory serde,2014-12-23T23:07:32Z
7a9bf85230b96c7eab2a94c685dbd0618106bdab,"Merge pull request #991 from metamx/update-pom-repository

update pom to point to druid-io/druid",2014-12-23T22:29:58Z
85787270a369e7e83d4b39de7da0d644505e71e3,"Merge pull request #992 from metamx/update-doc-links

update docs to point to druid-io/druid",2014-12-23T22:29:41Z
47fa1b3d101622fc2c52f39e79f1171e6cd73f21,update docs to point to druid-io/druid,2014-12-23T19:26:52Z
bfb9e1a0932fe65d2fd5e4ddfdea1b80e4c8c340,update pom to point to druid-io/druid,2014-12-23T19:17:20Z
bf4b52384cfa0ebe582d222004273762de674bda,"Merge pull request #988 from drcrallen/queryErrorFixer

Fix NPE in QueryResource on bad query",2014-12-23T07:16:59Z
458236c8fd363ea9aaa09174b174513244d7991c,Add simple unit tests for QueryResource,2014-12-23T05:53:58Z
4338af0e3f2ef3f91c3a8cf78e91122c54c89e21,Fix NPE in QueryResource on bad query,2014-12-22T20:59:47Z
2c533547c34c83d0ada9afe82e5eb4836ac01b0d,"Merge pull request #987 from gianm/gzip-filter-taming

Disable checkGzExists in the default GzipFilter.",2014-12-22T18:43:14Z
badc09e85cc6e31120f6f50d63e78058be18b526,"Disable checkGzExists in the default GzipFilter.

It is unhelpful because we don't actually have any precomputed .gz resources,
and checking for them inside jars is expensive.",2014-12-21T17:19:21Z
6ebf0bd62a51b3ca82808ca89f7fa0736a1a40c1,"Merge pull request #986 from metamx/test-timeouts

Set global timeout on tests to avoid false-negatives on slower hardware",2014-12-20T01:27:07Z
27a31693129c893ed09ab997952178d283db88b5,increase test timeouts,2014-12-20T00:26:28Z
500c809bbe4ab64f26970bea37360067c861c628,"Merge pull request #983 from druid-io/CompressionStrategyTestConcurencyExpansion

Lengthen CompressionStrategyTest::testKnownSizeConcurrency() timeout",2014-12-20T01:01:46Z
9f264632f77ef812ec56386b817da72ac9e0e453,"Merge pull request #985 from metamx/travis-ci

add travis-ci config",2014-12-20T00:38:54Z
9cf41b022a4f01e1dc408f8736fc849b6ddb1280,add travis-ci config,2014-12-19T23:53:19Z
971afab36f5517fee0b3639ec545b70da2b95a7e,Lengthen CompressionStrategyTest::testKnownSizeConcurrency() to have 2m timeout on its test to account for shared Jenkins build lag,2014-12-19T20:52:22Z
7c8d4a7433010e2b9c4c857ac27a87b2f72c3501,Use Module instead of generic Object in Guice related items,2014-12-19T04:45:26Z
f13eab644ad5f9616d3233e0354bb6ff3e98c91b,Keep HdfsTaskLogsConfig creator,2014-12-19T02:48:39Z
63df70cbe25d44a36cab6dbcd5a21894c7977f34,"Merge pull request #976 from metamx/deadlockFix

Fix deadlock in DirectDruidClient",2014-12-18T20:03:08Z
a637a23eaec2d881c6f65860b54e283b28d9762d,fix issue #977,2014-12-18T11:09:13Z
a0b2a63d7fe9e3f23a378ca84d17fbed35eccee7,Fix deadlock in DirectDruidClient,2014-12-17T02:32:41Z
76cd7e0f56a1dad626d25bb7a6761b6a9840add0,update druid api,2014-12-16T19:45:48Z
ee81a29a72fc1ec9dcc93718db4ccdacb93db820,"Merge pull request #974 from metamx/fix-log4j

update http client and fix log4j dependencies",2014-12-16T19:37:12Z
882874ce602ef3a3045ffdb27bcdef20af78db48,address cr,2014-12-16T19:37:38Z
b3999bbc6a369886886d26a8881a9884329c1c58,update http client and fix log4j dependencies,2014-12-16T19:29:50Z
be507b8cb430112a4d61f6cd799d781d590a8b2f,"Merge pull request #943 from mrijke/partialdimextractfn-nullpointer

Fix NullPointerException in PartialDimExtractionFn",2014-12-16T19:29:27Z
80e4b68ee70b9be07fce13e8e0041ff0091bbe6a,review comments,2014-12-16T15:46:48Z
bbbde336eb5553decc3906942212b337f2c6c798,"Merge pull request #973 from metamx/revert-972-revert-837-master

Revert ""Revert ""Support more AWS credentials providers for S3 storage""""",2014-12-16T02:27:38Z
c0af7b2a5d5d9cf2755f420f91d755a34763626c,fix broken ut,2014-12-16T02:29:15Z
d1060963275ae1036b67bac7c5c31cf454444832,"Revert ""Revert ""Support more AWS credentials providers for S3 storage""""",2014-12-16T02:27:28Z
761fd54b403ed372a06f668f864381f6de9f0b71,"Merge pull request #972 from metamx/revert-837-master

Revert ""Support more AWS credentials providers for S3 storage""",2014-12-16T02:16:46Z
714317a492aed6e2d5b3915a9fc05a4307ada4b2,"Revert ""Support more AWS credentials providers for S3 storage""",2014-12-16T02:16:37Z
e9238161cdfe4fa5063a135652514781d16febd6,fix broken test,2014-12-16T02:12:44Z
1089072a731de48d5bb9b1e2fdb3256e4c4e9432,"Merge pull request #971 from metamx/fixBackCompat

Add deprecated smile media type for backwards compatability during upgrades",2014-12-16T02:01:01Z
242edd14e55f54a573beee2c0deafabd0a247f4e,Add deprecated smile media type for backwards compatability during upgrades,2014-12-16T01:59:32Z
feb9b2f5d982c19cf1a89fb05f4123ec69f4d9ef,"Merge pull request #970 from metamx/log4j

Add log4j in services",2014-12-16T01:45:08Z
d1fcd4e92e16e4d05deb10af3a3bb0ff4f03d233,Add log4j in services,2014-12-16T01:39:19Z
43d27ddaf07834dc73da43c85ea09a2f9384f0f3,update http client and fix logging,2014-12-16T00:59:57Z
4f0c0c5ae2e3f42a34aa97d5a49fc7bc46d80d1f,i hate guice,2014-12-16T00:04:19Z
af1185b58c130f266422d454c05e4dad1c657cda,"Merge pull request #969 from metamx/fixRemoteLogViewing

Remove try-with-resources for log stream in WokerResource",2014-12-15T23:26:02Z
54068e8b1d6ddee5546424182b40ed9c161e8dae,Remove try-with-resources for log stream in WokerResource,2014-12-15T23:24:59Z
ac407fb6baffa0264f902fb621a4f4cccfaf05cc,clean up defaults,2014-12-15T23:05:02Z
e8729523902ffbebacd502bd4ea73099d6224f16,fix working path default bug,2014-12-15T22:51:58Z
a520835972101663353ae0ab8529d7fe75952a40,"Merge pull request #957 from metamx/fix-gzip-encoding

fix gzip compression",2014-12-15T21:20:36Z
eed679a1bab1494806b7d7e0a6f0ddc19e2cefd7,"Merge pull request #967 from metamx/more-logs

Add more logs for CIM",2014-12-15T21:20:27Z
e166260f807bbd368f96f88fc195ac368f163e7b,more inventory logs,2014-12-15T21:19:47Z
9c6e32fc3f30d3e8f961df08bcf06b54570523dc,address cr,2014-12-15T21:06:36Z
61101bee6ca4f229a74f9f564ec8bd4fda5d5e1a,more logs for CIM,2014-12-15T20:57:40Z
b3fe91bb50fa58073c4b1f043ebb058d8c7be7fd,"Merge pull request #830 from metamx/union-merge-on-historical

Union merge on historical",2014-12-15T20:36:47Z
7487321a222ad79b31bb2140894427c8370f74b5,"Merge pull request #837 from gnethercutt/master

Support more AWS credentials providers for S3 storage",2014-12-15T20:36:16Z
31cda0b83032c8a9567446422a4228fb4886c684,"Merge pull request #958 from metamx/fix-router-service-discovery

fix router discovering brokers with default names",2014-12-15T20:35:39Z
335fbebb9404419e015dcd62d358cb531efe38d4,"Merge pull request #960 from metamx/new-config

Rewrite config docs for 0.7.x",2014-12-15T20:35:25Z
8a3ce8acd9cb7b3baa0fe378265094355b31d115,"Merge pull request #963 from metamx/twitterFirehoseUpdate

Added more Twitter fields to TwitterSpritzerFirehoseFactory",2014-12-15T20:35:15Z
77bf5da317339477f132a1d297e8d9b386aa6203,fix typo,2014-12-15T18:07:51Z
3cb7999eb9d7a426561e6e1bcc67a048d209eac3,i hate hadoop dependencies,2014-12-15T17:52:46Z
56dfe5d883d4c4af35790e0cef64e1362374bedb,Merge branch 'master' of github.com:metamx/druid,2014-12-15T17:42:08Z
88858ea1c3fb462bb878c1379cf3eaa4bec80b27,make default handler service announcing,2014-12-15T17:42:03Z
bed3e7e1d20955c73a8847d68eee7721df8fc784,"Merge pull request #966 from metamx/fix-tasklog-streaming

fix task log streaming",2014-12-14T17:31:41Z
bd91a404919d0e2a9c025db8e69a7f7e02f49732,fix task log streaming,2014-12-13T23:22:55Z
225a039a019299bd8dc78f45a5cff2ac5dfa3490,"Merge pull request #965 from metamx/doc-fix

Fix documented default value for druid.coordinator.merge.on.",2014-12-13T19:13:14Z
020f8653f0d426e083bd8484db5b07d3dabc5bf3,Fix documented default value for druid.coordinator.merge.on.,2014-12-13T16:01:38Z
3c33118f3adf7ee3d02c485b561c1150a5b7afb0,"Merge pull request #962 from metamx/add-broker-loadstatus

add loadstatus endpoint for serverView status",2014-12-13T01:13:48Z
e7222c6429e6cb191bb9531e666f2811253d04b4,"Merge pull request #964 from metamx/fix-index-task-tmpdir

fix IndexTaskTest temp dir",2014-12-13T01:13:27Z
092dfe0309964d1025415588906f2bf14f2d477a,"fix IndexTaskTest tmp dir

- Create local firehose files in a clean temp directory to avoid
firehose reading other random temp files that start with 'druid'",2014-12-13T01:05:40Z
687c82daa882e7d5b494aff766a4913b4b10f632,"Added more Twitter fields to TwitterSpritzerFirehoseFactory
* Now with GEOGRAPHY support!",2014-12-12T00:33:28Z
fc7f1e6975f54484f2fe71e01ec4ff02b8abbc3c,"Merge pull request #932 from metamx/directDruidClientSpeedupRebase

Replace AppendableByteArrayInputStream in DirectDruidClient",2014-12-12T22:44:36Z
ca8300a461d814d10197d177795c0586616390b5,"Replace AppendableByteArrayInputStream in DirectDruidClient
* Replace with SequenceInputStream fueled by an enumeration of ChannelBufferInputStream which directly wrap the response context ChannelBuffer
* Added zero-length byte array when DirectDruidClient is done. This prevents an odd race condition on `done`.",2014-11-20T01:12:04Z
4b5282d22405c5f4a793d598933bddb67b04867a,add loadstatus endpoint for serverView status,2014-12-12T20:59:49Z
016d07fda3d4e46ca500b3c2047f1e0f6eb2b54f,"Merge pull request #961 from metamx/fixTwitter

Fix the twitter firehose",2014-12-12T19:17:23Z
92ea82da6d30264bb18c6bcf5d94e0a564d86748,"Fix the twitter firehose
* It was missing some json annotations",2014-12-12T00:18:12Z
818f85e745125157fede9ca44233e5eb99e6d072,rewrite config docs,2014-12-11T23:52:26Z
352480ac77e949a84bab5e8deb0cad74e6a08d5e,"make method protected to prevent accidental usage

- add documentation as to why",2014-12-11T23:18:34Z
3abf348d2ca7d8e0f1f4d74acd90242e7ba468d0,fix router discovering brokers with default names,2014-12-11T01:32:34Z
dfecfb71beaec1ba98cbf728d2a118ba4fe6cdde,"Merge pull request #959 from metamx/remove-health-endpoint

/status replaces /health",2014-12-11T17:03:05Z
a0d3579a9276ec5e0216ca116414ab7f4497e126,add docs + fix tests,2014-12-11T12:28:01Z
7ad03087c03bca7b7ec377931ad3e0d69493cba2,Merge branch 'master' into ingestmetadata-query,2014-12-11T11:24:38Z
32b4f55b8a6b5f806a8ab0abe9f1738a7b17ef0a,review comments refactoring,2014-12-11T11:03:14Z
eb661d3130a393340ac4fcf78a09914bc8037ef4,/status replaces /health,2014-12-11T01:35:05Z
0de56efe5cea746f72cce77155d135ddf565fe69,"fix gzip compression

- fixes compression not working for POST requests
- router now forwards raw bytes instead of decompressing
- cleanded up router servlet initialization
- add test for gzip on get and post methods
- use Jersey annotation when possible in QueryResource",2014-12-11T01:03:33Z
6104cad74a1aadd80c8dca2de1945322346a3709,"Merge pull request #956 from metamx/fix-test-port-collision

use first available port for JettyTest",2014-12-10T22:19:06Z
7878d391bd8734771fcf933f49fa39917bd01122,use first available port for JettyTest,2014-12-10T20:53:11Z
6f6cc463b0ce96d968fdfce227eeb279748b8e77,"Merge pull request #950 from metamx/fix-bysegment-serde

Fix bySegment metrics de-serialization",2014-12-10T20:42:40Z
daa9b409ef34f63fa3c9404d0adab2674e659159,"Merge pull request #954 from metamx/fix-status-redirect

prevent /status from redirecting, fixes #953",2014-12-10T19:53:52Z
5f3f4e0a6066b9c95d08b0d19fe023221b5b9650,"prevent /status from redirect, fixes #953",2014-12-10T19:32:22Z
7853e801d53d64b3e6798a35401cca7b546d43f9,"fixes for bySegment queries and caching

- prevent bySegment queries from getting cached
- avoid computing cache keys if not populating or using cache
- avoid computing cache data when not populating cache",2014-12-10T18:57:48Z
3055a562abfa6a992e53ee1a72d848c1de195dd9,small fixes to examples,2014-12-10T18:47:57Z
3763357f6ee214d6b7b711dec0f2090c7bf90b84,Ingest metadata query implementation,2014-12-10T14:14:00Z
c44242f0af5f889e0759d0017c2b830be6e6c0fc,add comment about de-serialing bySegment,2014-12-10T01:01:13Z
a7da9aed9f74ddd4b0708eb15e8ec90be4cf7401,fix metrics de-serialization for bySegment results,2014-12-10T00:58:35Z
123db3da4d8c347109b0c1f17ef5bde5bb6695b7,fix another broken ut,2014-12-09T23:47:28Z
7620dfbd1aff232226c65da7011170a35c1ae231,fix broken ut,2014-12-09T23:43:07Z
d6d3ec68464223ef5a56ca9b842d79fa77517ea0,"Merge pull request #948 from metamx/ingestion-docs

Redocumenting ingestion",2014-12-09T22:30:03Z
14ab10a9c78835d5fbf490600f086425c3caaaaa,fix properties of examples,2014-12-09T22:30:54Z
f0e5bb1ba9b7be3904e9ef2b1532165ee7f2374a,remove excess tutorials,2014-12-09T22:29:19Z
5727193873ad85d083500b129cba030ea9de7ac5,more fixes to docs,2014-12-09T22:28:15Z
4e3d8faed8e5b525672a139ed71e62dd0aef05b5,fix bad example,2014-12-09T22:21:47Z
9596c11f4214e1167cb8425c22419f25a11604b3,address cr,2014-12-09T22:19:18Z
1a1b0e6f237c6992390f7c9cdfab7a85ff71e4ad,merge from master and review comments,2014-12-09T07:46:45Z
89afd8311653adae426cdda86eff849b9cf6ee2d,"Merge pull request #947 from metamx/configUpdates

Move some config description from Configuration.md to the Broker and Historical config pages",2014-12-09T00:21:17Z
38a369c0ffa68dc5a814087e36f20246145d3d94,fix links and some errors,2014-12-09T00:20:35Z
28b72a69adec666d31013ff7e58adf4f61d5959d,redocumenting ingestion,2014-12-09T00:15:46Z
0fbbcd58855f284875951195c3aeb3a65a46fe5d,Move some config description from Configuration.md to the Broker and Historical config pages,2014-12-08T23:53:58Z
787147049157ee5df096eafb77a74977e61a3a28,fix jackson-annotations version dependencies,2014-12-08T23:29:06Z
623443a1450fa9afa19c4e3941e1cea521e18a08,"Merge pull request #946 from metamx/MoreMediaTypes

Changed all ""application/json"" to MediaType.APPLICATION_JSON  except for in druid.js",2014-12-08T22:24:21Z
a0f9f9877e380c5a9044b0a11dfac41fae3337b4,"Changed all ""application/json"" to MediaType.APPLICATION_JSON  except for in druid.js",2014-12-08T22:21:49Z
1392e2731f66503eb92a0d1b79b8aabb3247fd0d,"Merge pull request #936 from metamx/cachingRunnerImprovements

General Caching Query Runners cleanup (40% query time reduction for HLL)",2014-12-08T22:07:52Z
7b65f0635d04fce905dd7f211c20b104e8009bca,"General Caching Query Runners cleanup

* Add type strictness to CachingClusteredClient.
* Add background caching to CachingClusteredClient. Gives between 0% and 5% query speed increase.
* Add @BackgroundCaching annotation for injected ExecutorService items
* Add `numBackgroundThreads' configuration options to CacheConfig (default 0 aka same thread legacy behavior)
* Add unit tests for CacheConfig
* Add an abstract caching query runner class, currently it doesn't do anything exceppt simply make the two caching queries distinct.
* Add caching to CachingQueryRunner. Gives up to a WHOPPING 40% reduction in query time on HLL queries
* Updated docs with more info on cache settings.",2014-12-02T06:03:14Z
90670a9c7e32b0aa83f829d7064c7efdf0dbd09d,"Fix NullPointerException in PartialDimExtractionFn by explicity checking for dimValue == null, attempt 2",2014-12-08T19:11:58Z
c48839a0a0a1f150a9c508052b528d689c026494,"Merge pull request #945 from metamx/MediaTypeFixes

Added checks for backwards compat on MediaTypes",2014-12-08T21:11:58Z
43041ed4ba3796316ea55917645a334c2b56df89,Added checks for backwards compat on MediaTypes,2014-12-08T21:09:48Z
eb233fe50e18f76e6c396106e1f2e86a4338b951,"Merge pull request #921 from metamx/onheap-incremental-index

separate implementations of  incremental index",2014-12-08T20:59:08Z
cc9d0ec73ea94659b4759bb8fb64fd56cf0ed611,"Merge pull request #944 from metamx/MediaTypeFixes

Changed references to MediaType to use standard strings",2014-12-08T20:53:44Z
03f7fae3e8f0612fa69429e93927ccf9a7565fea,Changed references to MediaType to pull from javax.ws.rs.core.MediaType or com.fasterxml.jackson.jaxrs.smile.MediaType,2014-12-08T19:55:06Z
c88de97370922d565f3468feade9f009d1e741a9,"Merge branch 'master' into onheap-incremental-index

Conflicts:
	server/src/main/java/io/druid/segment/realtime/RealtimeManager.java",2014-12-08T19:48:21Z
bd9bbf396c164f095d724d60c915b771c2e8cfa0,Fix NullPointerException in PartialDimExtractionFn by explicity checking for dimValue == null,2014-12-08T19:11:58Z
86a837a6532592bd51e3ea9b014f7203d9ff0b30,"Merge pull request #939 from 7eggs/doc-fixes

Fix link to Druid Cluster Tutorial in Booting a Druid Cluster page",2014-12-08T19:10:15Z
3a7f571aebae865aff445e0934e2e120a29586f6,"Merge pull request #942 from metamx/fix-tiered-selector-naming

fix tiered selector service name usage",2014-12-08T19:09:45Z
703470eea50a990d1d41cc01c51e1cc0f2ccef60,"Merge pull request #941 from metamx/fix-event-receiver-firehose

remove unused but required parameter",2014-12-08T17:54:05Z
ef86dec660e9d0458397a55b28e79fc75054c99e,remove unused but required parameter,2014-12-08T13:55:46Z
4883f5526b0a846e05bdb52c4e698e2a7d835b60,fix tiered selector service name usage,2014-12-08T13:52:27Z
6dfa0d20b8490481119dd2f86d1ee297733a481c,Fix link to Druid Cluster Tutorial in Booting a Druid Cluster page,2014-12-07T18:59:06Z
c255c16c1aeba3fae21dc81803f4c7f3ad26c26d,"Merge pull request #894 from zhaown/fix-query-realtime-with-multi-partition

bugfix for #887",2014-12-07T16:49:31Z
1a4e798373b985a1fa233e33c351b0d6f1617fa9,"Merge pull request #938 from 7eggs/doc-fixes

Broker config small fix",2014-12-07T16:48:53Z
42f783ef2b1c8b136c7c40d9a18f3c53e7605f32,"Merge pull request #937 from 7eggs/doc-add-nodejs-lib

Add Node.js client to Community Libraries",2014-12-07T16:48:36Z
df5b5250977b7ecd506f45ef0daf995486dd4f8b,Broker config small fix,2014-12-07T15:59:22Z
bbd337235e5fa889a180bc9eced7ef86a0dab274,Add Node.js client to Community Libraries,2014-12-07T00:51:35Z
629f6bc7592939fa37cb34514cb8f2603f8645c2,moved methods to java-util,2014-12-05T23:53:23Z
ad23e49777906ab8d8a2ca52a9efe64680f71a9b,use fixed-size mapdb cache to avoid heap growing uncontrollably,2014-12-05T23:34:50Z
40f223215ac7995968d418c4ab42d2f283a68233,fix buffer pool usage,2014-12-05T10:39:26Z
3119770ce9d7dd30c9e442c9978b5ac03eb75945,Reformatting using intellij_formatting.jar,2014-12-05T06:21:24Z
6e03a6245f2281e9edaf785f36d132db18df3fbd,Merge branch 'master' into onheap-incremental-index,2014-12-05T05:10:28Z
d4a1752c5d36ada67bde85d4d1e80380e85a83a6,add code to release ByteBuffers,2014-12-05T00:18:55Z
7cd45a6e1f98f90299a436b0c43477253437b994,"IncrementalIndex throws exception if limit exceeded

- For now uses a hardcoded ratio of aggregator to timeanddim buffer sizes
- canAppendRow is a workaround for realtime index since the
Firehose currently does not have a way of rolling back the last event in
case of error
- canAppendRow needs a fudge factor; there is a race between checking
if we can add a row and actually adding a row, because of the way MapDB
reports its size.",2014-12-04T18:52:44Z
18234a2f00a758030dcaa3f3902a74184565bca3,Fix confusing error message in HadoopIndexTask,2014-12-03T19:11:53Z
20a7239ffdde2bee684aa461184d7839bbaeae79,Replace google-http-client imports with real guava imports.,2014-12-03T18:52:25Z
b48fc51ed1aa5a5cf81d1b05172674c4c996aed8,SSL-capable ServiceEmitter.,2014-12-03T18:43:24Z
1905302c165b951f87aff0178425dbe9da5f1c0c,use property for jackson version,2014-12-03T17:44:19Z
c7dbe6116c4b838f2222220cbd62e052e7d30f0f,write byte data as is in smile,2014-12-03T08:00:47Z
c21a82a6978c742392bdf11b6bebfb14f1c085a4,upgrade LZ4 to operate directly on ByteBuffers,2014-12-03T07:49:34Z
1566999a6ac53b05d637d48a02b8904607f0c208,update jackson to 2.4.4,2014-12-03T01:51:55Z
0c521e0a776ec8b40fd7070be07a794da93767dd,update joda-time and fix min/max instant,2014-12-03T00:55:32Z
c2add5730bd173f99a163ecda9feca3a9273825d,"Fix Hadoop CLI jobs
* Change ""schema"" --> ""spec"" for cli hadoop to keep up with internal hadoop
* Added check for HadoopDruidIndexerConfig deserialization from Map to see if it is trying to get a HadoopDruidIndexerConfig or a HadoopIngestionSpec",2014-12-02T19:01:12Z
187126dd4be89f8657d38b140652e829d0e0d8a8,fix broken unit tests,2014-12-04T18:49:36Z
332e4a4d1cebdcdb777d5f47e01a385c8a72027f,"Merge pull request #902 from metamx/cache-config

Commonalize the cache config and change default to disable cache",2014-12-04T18:30:24Z
27d4b2bdeaca0a508552eee7147fe3f5b69c24ff,"Merge pull request #934 from metamx/fix-hadoop-metadata-injection

metadata update handler injection not needed for indexing service",2014-12-04T17:45:20Z
269a51964ee86a08a69efa0286827a0dd6f94b98,fix size calculation,2014-12-04T11:52:24Z
6533de356320b56b6c039eb15921110e0d4911bc,"Merge pull request #933 from metamx/removeDeprecatedFiles

Update ForkingTaskRunner to remove @Deprecated Files method usage",2014-12-04T00:27:30Z
c867d59ee047da7ea4308be01ef4b0789f3e7bc3,fix error message,2014-12-03T23:30:32Z
2e6c25493738e45daf4b71fc852a6c3d62cd73f3,metadata injection not needed for indexing service,2014-12-03T23:09:31Z
325a5c4abc3248395dd22cb32f86e9dc84f411a2,Update ForkingTaskRunner to remove @Deprecated Files method usage,2014-12-03T21:18:33Z
2681da4420949c7856b4829497be9271028f7f4f,"Merge pull request #929 from metamx/google-cleanup

Replace google-http-client imports with real guava imports.",2014-12-03T19:50:19Z
22cc30ff6269f671dc91c5af3545a057eaa545d6,"Merge pull request #930 from metamx/errorMsgFixHadoopIndexTask

Fix confusing error message in HadoopIndexTask",2014-12-03T19:29:14Z
6e9e8862febba778eea805e7a8dbb9839ff9fa78,"Merge pull request #928 from metamx/ssl-emitter

SSL-capable ServiceEmitter.",2014-12-03T19:29:02Z
b6f71d3fd6c4f4b0939811a88e563b31af831118,Fix confusing error message in HadoopIndexTask,2014-12-03T19:11:53Z
d388a8fe892af322c56d7696bcea6836525b8e58,Replace google-http-client imports with real guava imports.,2014-12-03T18:52:25Z
03ae70ae54bb4dac1a69bd0e692d759ab64f25ba,SSL-capable ServiceEmitter.,2014-12-03T18:43:24Z
4ca8ea19fdcb70fc3b90fb71487e0ae20f864e21,"Merge pull request #925 from metamx/update-jackson

update jackson to 2.4.4",2014-12-03T18:27:50Z
4dc0fdba8a20975076a89bc36b1c475bc0cd2afc,consider mapped size in limit calculation & review comments,2014-12-03T18:17:30Z
529e7e027298b92a7f845eb07a39f6ece3054ffe,"Merge pull request #927 from metamx/speedup-smile-bytes

Improve Smile serde performance by writing binary data as is",2014-12-03T18:02:08Z
61f9289447fce3e6dd919c4ab1c73e5df554c150,use property for jackson version,2014-12-03T17:44:19Z
0f5d5840daf4850fce74cba51599d3e5b7b0b76d,"Merge pull request #924 from metamx/update-joda-time

Update Joda-Time and fix min/max instant overflow",2014-12-03T17:15:39Z
856d2ffac45f5424fcadcd0a54efa27ccb6e73b4,"Merge pull request #926 from metamx/lz4-bytebuffer-support

upgrade LZ4 to operate directly on ByteBuffers",2014-12-03T17:05:43Z
da8bd7836b74dacefb04cab1f60dec6a13040c87,Introduce buffer size,2014-12-03T10:58:22Z
5fece517fa7910be3a5fbf127c5b02ac7d861640,write byte data as is in smile,2014-12-03T08:00:47Z
18f50097a942177fe7341d8bde0cf1cc5a96b596,upgrade LZ4 to operate directly on ByteBuffers,2014-12-03T07:49:34Z
b59bfaa210c82228c3e76491f834cd0a9ef3d0ea,update jackson to 2.4.4,2014-12-03T01:51:55Z
bc173d14fcd727cd5cd07b9f345dd58ce71f8675,a whole bunch of cleanup and fixes,2014-12-03T01:32:05Z
a79389a9e5992b7107a2409e0f3f463265ffeadc,update joda-time and fix min/max instant,2014-12-03T00:55:32Z
c3bcf34c64d8afa0627a6329928682f2d5915e4f,"Merge pull request #923 from metamx/fixHadoopCli

Fix Hadoop CLI jobs",2014-12-02T19:26:29Z
7cd689be75c1b106642d13b64a68d3e0ec254efb,"Fix Hadoop CLI jobs
* Change ""schema"" --> ""spec"" for cli hadoop to keep up with internal hadoop
* Added check for HadoopDruidIndexerConfig deserialization from Map to see if it is trying to get a HadoopDruidIndexerConfig or a HadoopIngestionSpec",2014-12-02T19:01:12Z
b65933ffb8a2b95fbd8d53c79545ded047f6489b,make tests parameterised,2014-12-02T18:25:29Z
6dc69c2f30245d60c867c1d7d2dfbd5b76dd2d58,code cleanups & formatting,2014-12-02T17:14:33Z
eac776f1a7b3c6a80ccd97a33bf6b35331077ad5,tests passing with on heap incremental index,2014-12-02T16:59:28Z
79571f78d5b977aadf1663bdfbebbc6b36ebba37,Merge remote-tracking branch 'upstream/master',2014-12-02T02:24:23Z
59542c41f82497cff5fd3ce33add159f62520630,fix port not set in DruidNode,2014-12-01T22:37:28Z
8b3652a67adf8edc363e047ffc66cbcac97f842e,Modify HadoopDruidIndexerConfig to give a port of 0 instead of -1 when binding DruidNode @Self annotation,2014-12-01T22:08:41Z
7ed5f995cb65d08cc92a06460465854576fb5156,Modify InitializationTest to use a port of 0 instead of -1,2014-12-01T21:48:49Z
a0d5f23ad1ead7072ebe685796bc1cd4295d7b7d,"Merge pull request #919 from metamx/fix-payload-casting

request proper type from DBI instead of casting",2014-12-01T21:35:47Z
36c921179147523953f042e3d5d34d7d6184badb,remove unused imports,2014-12-01T21:34:58Z
839e288ed5a1c1c6a754e6bf1e601756e217ba35,request proper type from DBI instead of casting,2014-12-01T21:27:43Z
646e184ca67c03d1341be2b19b21d1f0eee99545,"Merge pull request #918 from metamx/fix-broker-timeouts

fix query timeouts not being raised by broker",2014-12-01T20:58:04Z
07b6e6cbe900750d330b74a0d479db5cc07ee2fd,"Merge pull request #917 from metamx/explicit-host-port

make host+port more explicit + ipv6 support",2014-12-01T20:57:00Z
445af2dc5f594e44db2f9cf587e887672810104c,use guava methods instead,2014-12-01T20:51:07Z
eb5525f9b477834053a326a0955ec5a7fafd6aa0,add support for ipv6 hostnames,2014-12-01T20:16:28Z
d23fd1e1ab9ca33b68b6022e31582b6ab0ac3917,"make host+port more explicit

- document the behavior for node host/port initialization
- throw exception if settings make no sense
- fixes announcement for nodes without host/port defaults
- makes code clearer as to when host vs. host+port are used",2014-11-27T05:04:44Z
4dccfda61df2a18702a74d43a0eeb2e3c98784c1,fix query timeouts not being raised by broker,2014-11-27T05:35:01Z
3699a41a54c7cff7cebb85ac3d1f99dbb67b2078,"Merge pull request #912 from metamx/update-curator-jetty

Update curator + jetty",2014-11-27T01:01:27Z
34fb2f10b6d1c95d442fa356cebc5cb3d9f3e726,"Merge pull request #914 from metamx/fix-cardinality-caching

fix cardinality aggregator caching",2014-11-27T00:56:17Z
4eee7e69b9c6fd7b362531a2ae71c8de0177958f,fix cardinality aggregator caching,2014-11-26T23:00:02Z
35a34522500441915ed3e2fbc81a78bf5be637e6,update jetty,2014-11-26T20:24:40Z
523f9c53cd69f6f98c688c9b452fc22a8b0900db,"update curator and fix test

curator is more strict now",2014-11-26T19:03:57Z
d4bda829163d11d1e29eefef4f276ef7d5748530,remove unused imports,2014-11-26T19:03:47Z
366ae9e5e4dd150416e7ea236b760bcc8f75f40d,"Merge pull request #911 from metamx/update-spymemcache

update spymemcached library",2014-11-26T20:23:02Z
76891d450e67fb856b51dab824ea288193f11544,"update spymemcached library

update spymemcached library
for fixes mainly related to -
1) memory leaks on reconnects
2) better handling of network issues",2014-11-26T14:03:52Z
5bc1be5ba034b30d8d8c24410266310d5c9907d4,"Merge pull request #850 from metamx/druid-0.7.x-compressionstrategy

Compression strategy changes",2014-11-25T20:58:39Z
c6043afa320efae8da68f4411fc037e0ed76a5bf,Removed empty function from CompressionStrategyTest,2014-11-25T20:57:06Z
6943db5251987b0cb4848bc47aa5d256b4f53179,"Changed branching logic for LZFCompressor to return null only on error, and avoid checking in most circumstances",2014-11-25T20:53:11Z
46dfce6905312ee983e41fa10aaede8cfa6f5064,"Merge pull request #908 from metamx/fix-smile-0.7

(port from 0.6.x) fix smile exception on error + content-type",2014-11-25T19:46:38Z
9fb93a3a794723d6a5aa9fbc1edd2cdcd8c33507,fix smile exception on error + content-type,2014-11-25T19:20:19Z
763967c62c2958c988cb9f0d9c4e7edc78258314,"Merge pull request #903 from metamx/hllSpeedupRebase2

Multiple speed improvements revolving around topN with HLL (Rebased Version)",2014-11-25T17:55:35Z
bcc5f86723c2bae4dbb32aded08056b04801c529,"Modify according to fjy's review, add reformatting according to eaclipse_formatting.xml",2014-11-25T16:14:40Z
42a43800eed82b4a95a380f34d968fa13710095c,"Merge pull request #905 from metamx/pom_fix

explicitly pass in parent pom",2014-11-25T03:24:58Z
f4dd9cdc3190bb3a83e1d846788617ea4dc3df16,explicitly pass in parent pom,2014-11-25T02:52:17Z
3ff569ef2d44ca74e802c7718f36eec2b3810a0f,"Merge pull request #879 from metamx/rtr-with-pref

Rewrite autoscaling and enable easier configuration of worker selection and autoscaling behaviour",2014-11-25T00:54:28Z
38084113407d0a9f1a785cce1c8e9760760184a6,address some cr,2014-11-25T00:54:47Z
9f945c2216cd9d8a89f4f20794d63dbd11a6dcd4,Removed lz4Fast from CompressedObjectStrategy for compression since it is not currently used,2014-11-25T00:11:03Z
70e31082827772fc39cbecc713f9bbd0d4de1647,"Multiple speed improvements revolving around topN with HLL

Change serializer / deserializer for HyperLogLog
* Changed DirectDruidClient's InputStream handling. Is now ~10% faster for data heavy queries, and has lower variance in execution speed.
* Changed HLL Collector's toByteStream() method to be better optimized for small values. Is notably faster for small result quantities which fall into the sparse HLL bucket codepath.
  * No change for dense HLL which just uses a direct bytestream of the underlying byte data.

TopNNumericResultBuilder semi-aggressive loop unrolling for metricVals

Benchmark for HLL for sparse packing (small HLL bucket population):
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[0]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 216, GC.time: 0.42, time.total: 15.96, time.warmup: 0.22, time.bench: 15.74
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[1]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 217, GC.time: 0.45, time.total: 13.87, time.warmup: 0.02, time.bench: 13.85
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[2]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 55, GC.time: 0.16, time.total: 4.13, time.warmup: 0.00, time.bench: 4.12
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[3]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 55, GC.time: 0.16, time.total: 4.30, time.warmup: 0.00, time.bench: 4.30
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[4]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 8, GC.time: 0.03, time.total: 1.10, time.warmup: 0.00, time.bench: 1.09
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[5]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 8, GC.time: 0.03, time.total: 0.72, time.warmup: 0.00, time.bench: 0.72
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[6]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.00, time.total: 0.60, time.warmup: 0.00, time.bench: 0.60
HyperLogLogSerdeBenchmarkTest.benchmarkToByteBuffer[7]: [measured 100000 out of 100100 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 2, GC.time: 0.01, time.total: 0.26, time.warmup: 0.00, time.bench: 0.25

Updates to HyperLogLogCollector toByteBuffer() based on code review

Removed changes from DirectDruidClient from this branch and put it in another branch.

Changed HyperLogLogCollector to have protected getters and setters

Remove unused ByteOrder from HyperLogLogCollector

Copyright header on HyperLogLogSerdeBenchmarkTest

Now with less ass!

Reformat in TopNNumericResultsBuilder. No code change

Removed unused import in HyperLogLogCollector

Replace AppendableByteArrayInputStream in DirectDruidClient
* Replace with SequenceInputStream fueled by an enumeration of ChannelBufferInputStream which directly wrap the response context ChannelBuffer

Modify TopNQueryQueryToolChest to use Arrays instead of Lists

Modify TopNQueryQueryToolChest to use Arrays instead of Lists

Revert accidental changes to DirectDruidClient

They should be in another merge request:
https://github.com/metamx/druid/pull/893

Fixes from code review
* Extracting names from AggregatorFactory classes now done with TopNQueryQueryToolChest.extractFactoryName
* Renamed variable in TopNNumericResultBuilder",2014-11-19T06:07:18Z
083a012aa2cc34fce941c6bc58bda797b3cb597e,Commonalize the cache config and change default to disable cache,2014-11-24T22:54:11Z
fe0a56cad650e561565e21fabf1c001184c8ffb0,fix newline,2014-11-24T22:10:07Z
829c254bac9787d34d2843ad1b518fdd9064acde,"Merge pull request #898 from metamx/refactor-examples

Refactor structure for examples and extensions",2014-11-24T22:02:34Z
28c609b187879be79d2b9b3c796f735b2d2fb5fc,fix some brokenness,2014-11-24T21:31:56Z
f42b1a4181f80826cb22bc01d90c89fc010abf3f,fix broken ut,2014-11-24T19:42:24Z
8c5b6e6ef862a998942184249d34629533a269a6,"Merge pull request #900 from metamx/build-fixes

Build fixes",2014-11-24T19:24:12Z
ebbceb219f9b9fe2103b8eb9471b76aeface207d,simpler build script,2014-11-24T19:15:14Z
a6f9a57f7cc2babf0c9b60a5f4b5fab67dbca6a1,fix selfcontained druid-services dependency issues,2014-11-24T19:03:35Z
37e5678870c0efb7ce26ae230f4f8f63bbf8afee,"Merge pull request #899 from metamx/fix-log

fix crazy amounts of logging when coordinator loses leadership",2014-11-24T19:01:44Z
13cae41f6c030c6554a5b06d99288baf8f4c0013,Merge branch 'master' into refactor-examples,2014-11-24T19:00:26Z
9b701bbc7601b760384e3afa03a9e3ff355dd970,a few more code review fixes,2014-11-24T18:54:29Z
1aaea9a0d70fdfd5d000e1683f27250b56627f9c,address code review,2014-11-24T18:52:30Z
9ced097abd70c63ef6fc6831d90c13b0687ce6f8,"Merge pull request #895 from metamx/fix-interval-retry

A set of fixes to retry the query for missing segments in the timeline",2014-11-24T18:23:02Z
c88aff6205af2292125d2dc5937e4c7a214d2b07,remove unneeded constant,2014-11-24T18:20:02Z
f518c530081c30750a246cab51507cd8223e6f9f,address cr,2014-11-24T18:12:29Z
10d45ab9cf4925fefb7b03ffee76714c42db8af1,address code review,2014-11-22T00:48:45Z
f9db3a1fc674e242c647d3ed6677859a4333334e,fix crazy amounts of logging when coordinator loses leadership,2014-11-21T23:46:14Z
9da66291e119778f0ff4635aab8a93ef153caba3,change naming to common config,2014-11-21T23:36:42Z
6f778d608dcbdeafee5538454339adf4fa4d3ada,rename code style jar,2014-11-21T22:51:23Z
8ee4d125622f0afadeeacd43627edce89a28a680,Refactor structure for examples and extensions,2014-11-21T22:45:24Z
8f80d9e1894cdda3b6ffe3a5dfde1853ddd764ec,Update CompressedObjectStrategy to try-with-resources but print log error if error while closing,2014-11-21T19:35:11Z
d5c86b7d63f22c2c890be7455e0f34a73b3ee81e,"Merge pull request #870 from metamx/fix-index-task

move index task to use hashed partition; fixes #815",2014-11-21T19:26:16Z
580e1172c17933a040ec9f3f64947034cfd4ac61,move IndexTask to use hashed partition; fixes #815,2014-11-14T00:07:11Z
fc9a54ea4811f87d59c1eaebb79b133de4e2920e,Fix CompressedObjectStrategy LZFCompressor to ignore error on close of ResourceHolder,2014-11-21T18:49:43Z
f8ce68565ba30ab18c3b4b7b4d67bf298be41a16,Modified CompressedObjectStrategy to use 0xFF for Uncompressed,2014-11-21T18:33:53Z
aa49e56ed620c986e6454eb5c4b26cc403461b8d,Merge remote-tracking branch 'origin/master' into druid-0.7.x-compressionstrategy,2014-11-21T18:29:40Z
ef62bccdec7f102dd69d2edbddfafe0d55dfe32e,ignore benchmark,2014-11-21T00:52:19Z
bdd2e1aeedbd86552b413c42cb0a84c7c171a7a0,"Merge pull request #890 from metamx/fix-filtered-agg-0.7

Fix filtered agg 0.7",2014-11-20T23:21:53Z
e3260aa1779b9bf08309a7f0959cd46d4c3279e9,"Filtered Aggregator fixes + enhancements

- fix NPE on IncrementIndex
- refactor code to support AND, OR filter
- tests for AND & OR filter
- handling for missing column / null values",2014-11-19T12:12:37Z
780e4a27f74b52de0a0fff72c71d0006c60a2165,"Merge pull request #868 from metamx/fix-bad-test

fix non-determininistic reference counting segment test",2014-11-20T22:25:57Z
e044598669038213e810f83b429616a46183530d,make wait timeout a bit longer,2014-11-20T22:25:49Z
0d275c7a53bf09edebee725b6139e446c65767b1,remove another wait,2014-11-20T22:22:16Z
024c5eed355c37aa28718017dc5e889136266869,update versions,2014-11-20T21:08:12Z
47f5c1bd0a49626f072c10fef65eac30b2246168,fix retry interval is stupid,2014-11-20T20:50:56Z
3d9d989a9f4d95b7e2e2bf0b39d7ab41548c12a5,A set of fixes to retry the query for missing intervals in the timeline,2014-11-20T20:04:37Z
5096cbc5e4472908662b11a357ecd00beb80afb6,"fix bug for #887, that is cannot query multi partitions of one datasource on realtime node.",2014-11-20T08:36:57Z
2f08ab85fc3673fea9e7afc99ce8339f1c9ed1bd,"Revert ""update doc""

This reverts commit d66d0de54f8fe48655286f652e226de0089cfcc3.",2014-11-20T04:47:07Z
0ab34f86da0e43632f04dd52d1cd534703ff594b,"Revert ""fix filtered Aggregator""

This reverts commit 6fd37ce0235600a27408b2d7d3017fff9681830d.",2014-11-20T04:47:01Z
d66d0de54f8fe48655286f652e226de0089cfcc3,update doc,2014-11-19T11:11:24Z
6fd37ce0235600a27408b2d7d3017fff9681830d,"fix filtered Aggregator

fix filtered Aggregator
remove unused name parameter for filtered aggregator
add tests",2014-11-19T11:10:25Z
f2d94eecde1d4479765d8cdf9277e35cadda312f,"Merge pull request #891 from metamx/fix-casing

Make Druid case sensitive",2014-11-20T00:55:41Z
a49e67312250beb911c953332c87764251e75aea,put back another missing test,2014-11-20T00:55:20Z
14668846aac27b34c71a6247cf98a7e0850b629c,add back some tests,2014-11-19T22:35:26Z
fdeab0c6af0c5058422df523ad79b79fd06a19c9,make Druid case sensitive,2014-11-19T22:27:31Z
109fdf0b3410b11a8efcd82ebdb24e6f9d261859,"Merge pull request #852 from metamx/druid-0.7.x-TaskLogStreamer

(DO NOT MERGE YET) Update logging to https://github.com/druid-io/druid-api/pull/27",2014-11-19T22:03:12Z
590d31799e65d14e2bbe7c30791bf19afc26caf3,"Merge pull request #876 from metamx/remove-backwards-compatible

Remove backwards compatible",2014-11-19T21:33:14Z
18f44beee901ba2b5987a2e1ec724d64105362ac,"CompressedObjectStrategy improvements

* Added more unit tests
* Now properly uses safe / fast decompressor for LZ4
* Now chooses fastest lz4 instance instead of only looking at Java implmentations
* Encapsulate ResourceHolder in try-with-resources to make sure they close correctly",2014-11-19T19:10:59Z
ccc757dc64250fac260628010e84b04e94b4b9f8,Merge remote-tracking branch 'origin/master' into druid-0.7.x-compressionstrategy,2014-11-19T17:39:35Z
034347ffe9757dde1d878c3af60b16ea7a59af6f,"Merge pull request #886 from metamx/smileFix

Allow Smile to fall back to text",2014-11-18T23:55:21Z
db8a168b911a39fb33c2d9fb3ec9acb533c2920d,"Merge pull request #881 from mrijke/update-ruleconf-docs

Update Rule-Configuration docs: match example with description",2014-11-18T23:41:49Z
64719b15e06fb545f42673b710dd626b8b4c66b0,rewrite autoscaling with tests,2014-11-18T23:41:06Z
1bbc8fcbe5f377f3940d5a427a8ccf1b3cfb9f24,"Allow Smile to fall back to text

* Modify SmileFactory to set the delegate to text option.
  * This option only occurs when a Reader type object is passed in to the deserialization stuff
  * This is needed by the X-Druid-Response-Context header return value, which is JSON",2014-11-18T23:16:14Z
42517f5d37c8b8919b00be4af91053344ffe4ca6,"Merge pull request #884 from metamx/optimize-topN-pruning

optimise pruning of aggs",2014-11-18T22:19:30Z
a96eaeb0366f9f6004a4104b07b01ff2bf103131,"Merge pull request #882 from metamx/now_with_OPEN_SOURCE

Added src jar build to maven poms and re-formatted to conform to style guidelines.",2014-11-18T21:00:04Z
87ea6fd377ebfe382f0ee305fd2170bad080c124,"Merge pull request #878 from metamx/default-extension-version

use Druid version as the default version for extensions",2014-11-18T20:56:54Z
35125d7e1047b7e4fb8d251a43263a95ac28ce4c,"Merge pull request #880 from metamx/docs-combining-firehose

document combining firehose",2014-11-18T20:56:25Z
405d299e0a9787eedc8ba72b9905715d6662ae34,"Merge pull request #885 from metamx/fix-content-type

fix output content-type",2014-11-18T19:25:08Z
a41f179cc029b1cfb6723ede71a317b652a54f87,fix output content-type,2014-11-18T19:07:15Z
bf04ad0eb3293e72c3e3ff89ba6cb5d56871cd0e,add documentation,2014-11-18T18:50:18Z
6023d602e6bfd25a561fa7cb69ad314aaf3dde12,"optimise pruning of aggs

optimise pruning of aggregators for topN",2014-11-18T18:47:25Z
8819a1b9d5c14c47c7714688e773f25ec2aa0483,Add Smile annotation to BrokerServerView,2014-11-18T18:15:32Z
dc66e1708edeba8fa1f591b8ff3e09881e792eca,Added src jar build to maven poms and re-formatted to conform to style guidelines.,2014-11-18T17:05:30Z
06e4535cb86084d35e586cd60f2f84a1902f30d4,"Update Rule-Configuration: match example with description

The example JSON snippets of the 'loadForever' and the 'dropForever' don't match their description, the 'type' description mentions 'loadByInterval' and 'dropByPeriod' respectively.",2014-11-18T16:00:42Z
f0452c5968cffe6272e0d260c083c6a5cc3d987f,merge from master,2014-11-18T14:04:51Z
b2e8073c610e80972ea0654cdf1af95e45b35f08,document combining firehose,2014-11-18T05:31:08Z
c91310914bb10f79d3ec627f681a5cb310622313,fix a few naming things,2014-11-18T00:05:18Z
32600e10bbdb7d70d83ea77a8bcc24a128222c2f,address code review,2014-11-17T23:55:22Z
1af6b337f2d3436accdd062574dd3f1f40193670,optionally choose what worker to send tasks to,2014-11-17T22:50:56Z
d914afe1cd5a47d4396eaa5e4dfaa9bd4d7b3a15,make defaultVersion configurable for non-jar testing,2014-11-17T21:54:32Z
0ca23d7d0b5bf3ede39b02b569e2749e0d9ebb9f,use Druid version as the default version for extensions,2014-11-17T21:36:37Z
00806ba8362322bde064152af5bbedef5f0d323f,"Merge pull request #877 from metamx/default-hashed-partitions

Make hashed partitions spec default",2014-11-17T20:59:32Z
edf0fc0851986e372e3e117307651df8d17400ef,"Make hashed partitions spec default

- make hashed partitionsSpec as default partitions spec for 0.7",2014-11-17T14:18:12Z
0c2d06475d1a30b7c811bbca3a528dd8eb329d3a,merge from master,2014-11-17T13:49:18Z
cbffe3c648b0da217f43377ee0c39384ebce246d,merge from master and resolve conflicts,2014-11-17T12:37:08Z
ad1dd161e784ca9fb9476403ec6fefb03895922b,formatting,2014-11-17T12:14:26Z
0b45942cff562a118f494363e60f3cd67b3d5b44,"Merge pull request #867 from metamx/avoid-abandoned-sinks

RealtimePlumber: Bail out of persist-n-merge of abandoned sinks (fixes #812)",2014-11-15T01:35:00Z
d5c4282766dbb8989b00ea0b69bbbe0682bd5437,fix broken ut,2014-11-14T21:45:42Z
e1e171ad20efb164be2ebecb552a937157b7673e,"Merge pull request #865 from metamx/fix-retry-qr

Fix a couple of bugs with retry query runner after testing it locally",2014-11-14T21:33:51Z
df1ad950752cc23a1241419783e12511b74f54ad,remove useless config,2014-11-14T21:32:19Z
d641d41f9e22321048e102993ba848e0fd8ef9aa,address another cr,2014-11-14T21:29:59Z
7736c3fc276a674313c8e332ce0472660d90cad3,address cr,2014-11-14T21:28:32Z
afd419ea29537d5c45a4ded66f1e2b239d0b69b4,fix bugs with docs,2014-11-14T21:25:21Z
d85c172285d43ce9a20a1ff60d5b787ea63372b3,"Merge pull request #808 from metamx/igalDruid

Clarify value types for granularities; link to more ISO info; more info on OrderByColumnSpec",2014-11-14T21:20:37Z
6ee8029462c4c3b2f0bac203f112296d736dd7d4,"Merge pull request #866 from metamx/mutableBitmapBenchmark

Add benchmarking for bitmaps",2014-11-14T21:16:21Z
a4fc64ca3fd699efd51b388c36081f2e77017c47,"Merge pull request #856 from metamx/druid-845

Fix query by segment",2014-11-14T21:10:54Z
4b7ab2328953a95361840abfd2169828c70a6b8c,Remove getIntervalString from BySegmentResultValue,2014-11-14T21:03:48Z
ac04f1790d15b67b78146cdab1ce1d67a008b94e,"Merge pull request #869 from metamx/fix-results-ordering

Fix results ordering on broker",2014-11-14T20:11:42Z
bbc079b8807f15bc44e07833e045c63a5a7d221e,fix retry to actually return correct sequences,2014-11-14T20:10:04Z
07c4923bf8b56e66eff409c2c7eff61c247716a6,add test for out of order merging,2014-11-14T03:15:39Z
6e8ac897374d578877f411bc2c8626c3b7007b9f,refactor sequence merging method to simplify testing,2014-11-14T19:17:08Z
716cc2cff211cc21a5040b0dbda22dd4acecaa76,fix results ordering,2014-11-13T22:59:56Z
d19b895fb96889a95ecc43430929352e2c292191,add tests for empty sequences,2014-11-13T22:49:13Z
648759e9f625d5522a6e8a590ec72b589693f146,Add deserialization benchmark to BitmapCreationBenchmark,2014-11-13T21:43:14Z
313d81ca2fb88a734f46e0e144d5a1a44ee1c4cd,fix non-determininistic reference counting segment test,2014-11-13T21:39:56Z
bf22524d635f1d0bec7b3edba3b08468556a539d,RealtimePlumber: Bail out of persist-n-merge of abandoned sinks (fixes #812).,2014-11-13T20:59:49Z
483b2c7be0d979644f04286182f0f70e7c676c66,Add copyright notice to BitmapCreationBenchmark,2014-11-13T20:55:02Z
228fb0cf4031a7c1ad02477d58d8cdea55d67c2e,"Add benchmarking for bitmaps

Here are the results on my laptop:

BitmapCreationBenchmark.testRandomAddition[0]: [measured 10 out of 20 rounds, threads: 1 (sequential)]
 round: 0.49 [+- 0.07], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 16, GC.time: 0.01, time.total: 9.91, time.warmup: 5.06, time.bench: 4.86
BitmapCreationBenchmark.testLinearAdditionDescending[0]: [measured 1000 out of 1010 rounds, threads: 1 (sequential)]
 round: 0.01 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 74, GC.time: 0.03, time.total: 5.82, time.warmup: 0.06, time.bench: 5.76
BitmapCreationBenchmark.testToImmutableByteArray[0]: [measured 1000 out of 1010 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 0, GC.time: 0.00, time.total: 1.80, time.warmup: 0.02, time.bench: 1.78
BitmapCreationBenchmark.testRandomAddition[1]: [measured 10 out of 20 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 0, GC.time: 0.00, time.total: 0.12, time.warmup: 0.08, time.bench: 0.04
BitmapCreationBenchmark.testLinearAdditionDescending[1]: [measured 1000 out of 1010 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 10, GC.time: 0.01, time.total: 4.26, time.warmup: 0.04, time.bench: 4.22
BitmapCreationBenchmark.testToImmutableByteArray[1]: [measured 1000 out of 1010 rounds, threads: 1 (sequential)]
 round: 0.01 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 27, GC.time: 0.01, time.total: 5.11, time.warmup: 0.05, time.bench: 5.06
BitmapCreationBenchmark.testLinearAddition[0]: [measured 1000 out of 1010 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 0, GC.time: 0.00, time.total: 3.48, time.warmup: 0.04, time.bench: 3.45
BitmapCreationBenchmark.testLinearAddition[1]: [measured 1000 out of 1010 rounds, threads: 1 (sequential)]
 round: 0.00 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 9, GC.time: 0.00, time.total: 2.95, time.warmup: 0.03, time.bench: 2.92
2014-11-13 12:47:23,995 INFO [main] io.druid.segment.data.BitmapCreationBenchmark - Entry [0] is io.druid.segment.data.ConciseBitmapSerdeFactory
2014-11-13 12:47:23,995 INFO [main] io.druid.segment.data.BitmapCreationBenchmark - Entry [1] is io.druid.segment.data.RoaringBitmapSerdeFactory",2014-11-13T20:48:04Z
6cdd6a6af74293140329770b75e53a84f419789b,change default settings for retry,2014-11-13T20:43:30Z
2b0ed3034401ae0e560c74e1a6eabd7469b07e91,add test,2014-11-13T20:38:35Z
0d6816a037a99c23388b857b84a2ebac3ec1a6ec,Fix a couple of bugs with retry query runner after testing it locally,2014-11-13T19:53:29Z
d4ca805cb915e064a7b82fc9f0f3cafb6a947179,"Merge pull request #806 from metamx/rtac-error-messages

RemoteTaskActionClient: Better error messages for non-2xx responses.",2014-11-13T18:57:50Z
9d661d6d36657f9d6cadd0f3bbbc069ec68cf606,"Merge pull request #854 from metamx/serverInventoryViewJson

Better logging in JSON parse errors in ServerInventoryView",2014-11-13T18:56:59Z
4a3c0fc5c4ded9aacd3c4f6b333f6e8103e2d5ee,"Merge pull request #848 from metamx/druid-0.7.x-fastTopN-rebase

TopN performance improvements",2014-11-13T18:56:20Z
34c3464bc9ef488aab262a8da624415d416b1a8c,Added more explanatory comments in PooledTopNAlgorithm,2014-11-13T18:47:56Z
9a9238a801d948c4990b0203e310c99d66e1d0bb,Merge remote-tracking branch 'origin/master' into druid-845,2014-11-13T18:04:56Z
3cdcf8736f2f2559c466aae9793c281545ef5b16,Changed downloadStartMarker in OmniSegmentLoader to simply use its .delete() method,2014-11-13T16:56:11Z
8cc48fc730224c930bae5a92b4b8d16ed486e98f,"Merge pull request #860 from ebouchut/patch-2

Fix typo in DimensionSpecs",2014-11-13T15:59:11Z
e89f2f973de245d07f721839215bb33af27a2916,Fix typo in DimensionSpecs,2014-11-13T14:35:09Z
de4cd039b300659a2c4d6b8451615fc64f114cf1,"Merge pull request #859 from metamx/default-to-batch-announcement

fix default FilteredServerView + batch annoucement",2014-11-13T09:43:38Z
ba442b98826fc79e2ff536c269eb7f8df9916b3a,fix default FilteredServerView + batch annoucement,2014-11-13T07:17:16Z
69b75b6e4b8f1d757c1fee426d95ee07b9c5c2cc,"Merge pull request #857 from metamx/fix-groupby

test for groupBy order",2014-11-13T06:54:33Z
19a37f773fad4ccd809610da7884b441b9d0c751,test for groupBy order,2014-10-13T18:32:46Z
8ba28aba247b09e42f83dd2130f764398c0d84cd,"Merge pull request #855 from metamx/fix-leak

fix leak with files not cleaning up correctly",2014-11-13T06:30:40Z
3ef21bfc661c17c3d8bcf0eee362b0af4d6a3e4f,fix leak with files not cleaning up correctly,2014-11-13T02:05:30Z
31fed7d3293667acd0aac9673f95eacfb72c88a3,"Fix query by segment
* Changed topN queries to use joda Interval instead of string values
* topN by segment now implements BySegmentResultValue<Result<TopNResultValue>> instead of BySegmentResultValue<TopNResultValue>
* Added a unit test which failed uner the prior implementation.",2014-11-13T02:06:56Z
a8103fb02dfa2823a13fcef7925a5bc02064b0ce,Better logging in JSON parse errors in ServerInventoryView,2014-11-13T00:52:15Z
10b7ca9fa90cadd84b82ee9242afa1063a8d7a1d,"Merge pull request #849 from metamx/default-coordinator-service-name

Default service names",2014-11-12T23:06:02Z
3a9def7fb15273079870d9c1b8c61661e105caf1,add broker default and define constants,2014-11-12T22:53:53Z
f884e809331e13667e1a59c04c4fdf86dd26b693,"Merge pull request #847 from metamx/druid-0.7.x

master branch is now Druid 0.7",2014-11-12T22:31:05Z
4ac1aaf90e703f431ee6151784f0a5d982673dd7,"Merge remote-tracking branch 'origin/master' into druid-0.7.x

Conflicts:
	processing/src/main/java/io/druid/segment/QueryableIndexStorageAdapter.java",2014-11-12T22:08:51Z
dbab127a6df3e1cd010d4293608cbef8d00aaf12,default zk host to localhost,2014-11-12T21:56:07Z
4b4f1c7d38b2986a2010b9a5b197007d531e8928,"Merge pull request #846 from vikramakrishnan/cacheKeyFix

Include origin when creating the cacheKey for period Grans",2014-11-12T18:15:21Z
7ef19009dbd247c6d7020f3b11b93a16705c2a01,"Merge pull request #834 from metamx/optimize-timestampchecking

skip timestamp checking if not required, remove duplicate code",2014-11-12T16:45:34Z
58260165ad68533bb622aa34ac754ad2169d151a,"Merge pull request #842 from metamx/fix-timestamp-column-exclusion

fix dimension exclusions for timestamp and aggs",2014-11-12T16:44:50Z
847c01a0458541fd482238f5c3e451becf3cb0d1,"Merge pull request #844 from metamx/derby-dependencies-fix

specify versions in parent pom",2014-11-12T16:28:55Z
7c1403a351f6d63e65f055c56a1c3944336bb7f5,"Merge pull request #843 from metamx/fix-nondeterministic-test

fix non-deterministic test",2014-11-12T16:07:32Z
8151d14786a54313d65da18eff8f5df59e55e641,Include origin when creating the cacheKey for period Grans,2014-11-12T16:06:46Z
c9bcdd5dd06d95e61022a167621b5f0161a3fcc4,"specify versions in parent pom

- move version declarations to parent pom
- remove extra dependency",2014-11-12T05:01:11Z
69146736a862b9fdb911744699857b263da3e0fc,"fix dimension exclusions for timestamp and aggs

- also added tests",2014-11-12T04:27:52Z
87b72e882254930dd80b8db5681e55fd2dc56a42,fix non-deterministic test,2014-11-12T04:26:13Z
581e6830d54219ebdf6ee38cc6156e1dc41db230,"Merge pull request #840 from metamx/powers-of-2-buffers

make buffer size a power of 2 and optimize buffer lookup",2014-11-12T03:54:00Z
60e98c35d7cb64c75e7de5b06611cc545b24e3e1,workaround for annotations requiring class literals,2014-11-12T02:48:49Z
4903f36639eb59c4c446e8525897d2751b3518ff,"Merge pull request #841 from metamx/distinguish-legacy-vs-default-bitmap

Distinguish between default and legacy bitmaps",2014-11-12T02:37:35Z
b580269f6d8e05e17d2de0d31e7f51cb4924177c,Distinguish between default and legacy bitmaps,2014-11-12T02:35:45Z
bc5c56e4416d08616126863f12b3e143eb8ca765,fix default impl,2014-11-12T02:00:46Z
63ca2375a32862c48ae4c543181d32e7af4f2206,remove dead code and cleanup some defaults,2014-11-12T01:57:24Z
56293075487a4b8414108725661fdda04c8ac036,address a few more comments on roaring,2014-11-12T01:50:03Z
788a4a846bf52bc9e91f47712f924aabc6114d25,add encoding,2014-11-12T01:31:08Z
2f498c34225263c9c68f82a77f6e0d0e20b55f8c,Merge branch 'druid-0.7.x' of github.com:metamx/druid into druid-0.7.x,2014-11-12T01:30:43Z
26b358e127c868e1f1a59587f479a5ba105dcb06,Merge branch 'master' of github.com:metamx/druid into druid-0.7.x,2014-11-12T01:30:30Z
a89b539b4f4cd6e9f1023008380045c8b77d367d,"Merge pull request #823 from metamx/roaring

Configurable bitmap indexes: roaring and concise",2014-11-12T01:26:38Z
007e57f8763007e52da4ca967ca2fa0405260d54,make buffer size a power of 2 and optimize,2014-11-12T00:24:37Z
1cc162727ba4f5e0d972510dc9d1c8cb1532d445,address code review,2014-11-11T22:05:37Z
6396d01deac7355fe716affcd474191365f46918,"Merge pull request #814 from metamx/fix-datasource-doc

Added section on union data sources",2014-11-11T20:03:41Z
de7fb5a69051021a0cb743c39eee5d8a6ad39738,"fixed typo, added note on matching schema requirement for unioned data sources",2014-11-11T19:56:22Z
34a6f7f7ca9c4acd1cd18d950141b41e971ade64,Merge branch 'master' into fix-datasource-doc,2014-11-11T19:55:47Z
3f5449d40a3c5cf9770494d36da2291841c95205,loop unrolling provides no benefit for timeseries,2014-11-11T18:58:37Z
e817db8b6c7b7f55680cb3f90dbf3e1174dff776,unroll timeseries aggregations + naming,2014-11-11T18:09:37Z
e30ac109962a82dbfe5757287052f38a769081fb,make the inner provider classes static,2014-11-11T13:22:00Z
c448755dc5167db71334ea5f6675c14923ca04e7,"Merge pull request #836 from metamx/fix-derby

Fix derby",2014-11-11T04:22:18Z
e6b7b03b5bb622dec96a0ab9ea5d29559790c945,fix conversion,2014-11-11T01:13:28Z
eb457c280eaa22fb75c1a5e3624b61c41b445b45,revert change,2014-11-11T01:00:53Z
59f093882d72c72fb6a89eb29c886666baf0189b,fix Derby instantiation,2014-11-11T00:55:53Z
336c73bdc212cf6281c4d48cf926db88571a7d18,cleanup dead code,2014-11-11T00:53:13Z
df886fac1b8b1bf318840670721c47d751492de4,fix,2014-11-11T00:49:27Z
c7f9cee4f0c2c1665b205eac8b77d771da4f86ab,Merge remote-tracking branch 'upstream/master',2014-11-11T00:24:46Z
d68bc3bdead6a88c8a4cf6e63be1c696d42cdd43,cleanup unused imports,2014-11-11T00:15:28Z
8cbd21af902697d2811479de19a52479ce72cb23,fix defaults,2014-11-10T23:40:57Z
92e71be8642f99ce07357849a5026137419b36d0,Change TopNQueryRunnerBenchmark to use a ByteBuffer as per OffheapBufferPool,2014-11-10T23:40:54Z
98d05e63bf1b3ac96cb8db67d4b5bc7f7cc5f0e4,make derby instance only on coordinator,2014-11-10T23:34:49Z
a093f3728aeba3b4aa585f5511978be3a3678ced,Reformat on TopNNumericResultBuilder,2014-11-10T23:26:09Z
2b0f4534bfadc987d4df903b0f764760592cb86a,Modify formatting in TopNQueryRunnerBenchmark,2014-11-10T23:17:26Z
fc78f215c46ec2b38643cf60373e6ba38c0f11e5,Aggressive dimValue unrolling in PooledTopNAlgorithm,2014-11-10T23:14:45Z
61883152931581a1e509e3304101da1275c0e899,"Merge branch 'master' into druid-0.7.x

Conflicts:
	processing/src/test/java/io/druid/query/search/SearchQueryRunnerTest.java",2014-11-10T22:52:10Z
49e878cf1acc7156531e40e56388fdddff8ada07,unroll multi-value dimensions,2014-11-10T22:21:56Z
df9be030db9642b0560305a7265e8f42570f2607,remove more legacy code,2014-11-10T22:09:00Z
dbb6401fbee55f4e4bd56d9634432f1d7a43a42d,Aggressive unrolling in PooledTopNAlgorithm,2014-11-10T22:04:37Z
72c355e8aee163a9f5cada4aafc59121a8c89065,remove crazy handler code,2014-11-10T21:58:23Z
fc34858e95e49ae56fb34727c783ccd3d2d2100d,fix things for real-time ingestion,2014-11-10T21:48:21Z
c5cc82699894fcfe28eebaefe4960eb98c72f604,make things actually work with roaring,2014-11-10T21:42:26Z
358b2add1739fc067ef61f7715c5c7cd0334cb33,make things actually work with roaring,2014-11-10T21:42:06Z
9ac8589143f17c0e43bc337579e0c1d9ebd151d0,Merge remote-tracking branch 'origin/druid-0.7.x-fastTopN-rebase' into druid-0.7.x-fastTopN-rebase,2014-11-10T20:55:08Z
70468400bf056bcf4814c4f4cfd39796cba3baa8,stupid mistake,2014-11-10T20:54:48Z
bfc9d9f283a59d0f55e1f549a034323df21f9b4b,Merge remote-tracking branch 'origin/druid-0.7.x-fastTopN-rebase' into druid-0.7.x-fastTopN-rebase,2014-11-10T20:52:36Z
17d32a256122230129d65e7831c00b0056c2b738,try to benefit from out of order execution,2014-11-10T20:49:54Z
5aad149b24f88c29ea7b775153b5cd58676342b3,Make some variables in PooledTopNAlgorithm final,2014-11-10T20:19:04Z
febaf56b8b95f3d6f2dde96567165b5cd7f04b0c,Merge branch 'druid-0.7.x' of github.com:metamx/druid into druid-0.7.x-fastTopN-rebase,2014-11-10T19:37:27Z
42a61290a81e30c8536178eec14277c7cb309860,specify default service name for coordinator,2014-11-10T18:06:01Z
0ca60e0334e478e90e0b7d094f63f38524ff6632,"skip timestamp checking, remove duplicate code

1) No need compare all timestamps when all the values are within range
2) remove redundant code.",2014-11-10T17:06:07Z
3c21f62afd091be19c58b1a0832e978048ceff3f,a whole bunch of fixes and some ugly conversion code,2014-11-08T00:03:22Z
f956fdad2e43108c25162ea3ccd36f619b6e66df,fix injection once more,2014-11-07T22:26:03Z
0498df25df5f963d5a38a3baa9a77cfc23cc06ac,override metadata storage injection in CliHadoopIndexer,2014-11-07T21:44:56Z
70f49538ddc45c16769c1f1d9e33a4f30b0c653a,i swear injection is fixed now,2014-11-07T20:04:09Z
aeb194ad122edef13001b04b427fe24e8410a089,fix injection for real,2014-11-07T19:43:53Z
7131cde7100b4594321a6be15fe60f368f4ba297,Code reformat in CompressedObjectStrategy,2014-11-07T19:19:32Z
8bd6cf0d07be0f260a58832185cf560ea8b5edd2,"Updates to CompressedObjectStrategy to support more compression types

* Compression types are not yet dynamically configurable.
* Added a benchmarking system for topN to test the compression
* Updated pom.xml to include junit benchmarking
* added an Uncompressed option",2014-11-07T19:14:46Z
50a191425cfc4bea1faffab575fe7ffbbe7e56b1,fix injection on MetadataStorageUpdaterJob,2014-11-07T19:11:12Z
f5f48c77566f68b8931b2fd25c2877853a912131,Moved pom version for reals this time,2014-11-07T19:09:57Z
6af18931e52de7305fa65cfc5d404c738023eea2,Moveed processing/pom version into master pom,2014-11-07T19:08:23Z
75c79e75627bef9a2b1228a56d1cd05fd67f57a4,Added comments in TopNNumericResultBuilder,2014-11-07T19:01:46Z
b4893b4490f1a6795abec5fd1e3431e5b11cba33,Pre allocate LinkedHashMap in TopNNumericResultBuilder,2014-11-07T18:56:49Z
bc92de233c1d04e2427e56393f5597a26dc3654a,Update dim name comparator in TopNNumericResultBuilder to better handle nulls,2014-11-07T18:54:10Z
e4649a24a13887174f60ba25b0f139d22ca58cd1,"Merge pull request #832 from metamx/fix-query-docs

fixes typo",2014-11-07T18:49:10Z
0a562ebd771bc5f27e1aa6608e694a652869a34b,Removed CompressedObjectStrategy from this pull request. will submit a new one later,2014-11-07T18:42:28Z
03515a4de610524ea5318062ac18cdc41fabb27e,fixes typo,2014-11-07T18:40:46Z
228614ddb50cb832cec42884a1160ebfd23fe4df,"Changed TopNNumericResultBuilder imports to not use package.*, but instead pulls all in explicitly",2014-11-07T18:34:28Z
2336e6c167f3f4764098be2a09329f1e5a589f8f,"Merge pull request #758 from metamx/jisoo-metadata

make metadata storage pluggable",2014-11-07T18:30:11Z
e75ef7cb5d03d1a0ca7eae7fa0c20312dcf2b2fb,Merge remote-tracking branch 'origin/druid-0.7.x' into druid-0.7.x-fastTopN-rebase,2014-11-07T18:29:26Z
956bdf80dd433075b0e865e5d3e1b53a47897688,Removed negating comparator in TopNNumericResultBuilder,2014-11-07T18:29:06Z
7bdb46c650fe9fe9928b2ba337174ebaed2de9c9,"Merge pull request #828 from metamx/fix-query-docs

Fix query docs",2014-11-07T18:17:09Z
8d1a8564c4fd671b889068dc3d53ed03c18bda6e,"Merge pull request #829 from metamx/default-servicenames

provide proper defaults for indexing service name",2014-11-07T18:06:46Z
b5c5a1bed34cf162d3625a2bb7591894bc1746d6,"Merge pull request #831 from metamx/fix-query-wait-emmitted

fix query/wait being emitted twice",2014-11-07T18:04:26Z
5be801356ab458b0546f20c12ad1bc97ac741305,fix query/wait emitted twice,2014-11-07T18:02:36Z
fd8eb7742b55685d5d73e998275d9c807515dc1c,handle union query on realtime node,2014-11-07T17:57:50Z
8bebb24fd5aec1991b4a81116dcea05377afca18,Union Queries move merge to historical,2014-11-07T12:35:16Z
18b9c5cd2f998d05465161712d6b6e8fc5baa5e7,db -> metadata,2014-11-07T05:46:35Z
d8bab706478fc5081067fccc7370ac620ef30e73,provide proper defaults for indexing service name,2014-11-07T02:16:01Z
20a9aef96ab8703a9cfca751174aed54020095ce,fix test,2014-11-07T01:27:01Z
a5f98be4578891f9e3c73a6ccfa8bf2edacba087,remove unused code,2014-11-07T01:18:40Z
f69f3cfc5abb90cde60d4af257a5ff73fa1137dd,run MetadataSegmentManagerTest against Derby,2014-11-07T01:08:54Z
5bda4ee1dda17f3b5820c1076fa7d1d580405ae2,global task entry type,2014-11-07T01:08:20Z
ac753ed0f003d930810cecd162fca1b234d54ad8,always use validation query,2014-11-07T01:08:01Z
10aa8a2d56e21ac28c6d3918d1b5691c6c5e4beb,add explicit type names,2014-11-07T01:07:24Z
6c77f66ecdb493e6d870873294ba2d3dbb267a3a,"Merge pull request #824 from metamx/compress-defaults

prefer druid.curator.compress to druid.indexer.runner.compressZnodes",2014-11-07T00:15:14Z
20562492de5a5c704501418f8ee86b2bb6d3ba62,"clarified that dimension and metric can be String too, not just object",2014-11-06T23:16:36Z
ec0accf0b172fa8bb16497df10a21320bcde0de8,clarified that dimensions and metrics are given in String arrays,2014-11-06T23:13:30Z
8f0b675e23a073be5555e14592071aecb46c5be4,Added info to better explain how to use pagingSpec,2014-11-06T22:50:01Z
57e0c8f9be1969b9356c8d4f66e2b9d1c235ea1f,Merge branch 'druid-0.7.x' of github.com:metamx/druid into druid-0.7.x-fastTopN-rebase,2014-11-06T22:43:20Z
4b6438537e0d9796b54f9a7511807db68926b61b,fix missing service name/port bindings for peons,2014-11-04T05:11:49Z
d52530e0de42e9ba4474f682b411ea18fbbfc882,Update logging to https://github.com/druid-io/druid-api/pull/27,2014-11-06T19:21:36Z
9bc20ef8bfd9d8eb49a7daaad33d2c795dbd0d2f,prefer druid.curator.compress to druid.indexer.runner.compressZnodes,2014-11-06T19:15:53Z
5a98fcf5b92bb4790ee1181ace6433ed35f852b2,typo: s/metric_value/metric_name/ and added quotes,2014-11-06T19:18:30Z
73226f20cc0500735cbce1a5c44bd0b6e1c4335d,typo: s/metric_value/metric_name/,2014-11-06T19:01:31Z
350bb09605b454741b97128c2fe0770cb26666a3,refactor sql storage to abstract task storage,2014-11-06T01:19:37Z
ee019872f71f7cd5defada22b16b9e4e66af59cb,"TopN performance improvements

Re-factor scanAndAggregate in PooledTopN

* Loops are now a little bit tighter when looping over aggregates. This will hopefully assist in loop execution optimization.
* Pre-calculated the aggregate offsets instead of shifting them during runtime.
* Cursor loop could use some TLC, but would require a massive refactoring on how TopN queries are executed.
  * Any potential modifications to query workflow need to account for Stream vs Batch data, and that not all data will be array backed that comes in.

Change data storage type in TopNNumericResultBuilder.

  * Use PriorityQueue to store
  * Checks to see if should even bother adding to Queue before adding.
  * Re-orders Queue on build() call.
  * Ideally the order would be directly preserved on build(), but this is a close second.

Updates to CompressedObjectStrategy to support more compression types

 * Compression types are not yet dynamically configurable.
 * Added a benchmarking system for topN to test the compression
 * Updated pom.xml to include junit benchmarking
 * added an Uncompressed option",2014-11-05T02:43:55Z
253009d208f3e36691f4c19f75c6b9149991c3d2,initial commit for roaring bitmaps,2014-11-05T01:04:40Z
253c0a70b35fc2325cd3dc3d283a1dac7d7d382c,simplify interface + more tests,2014-11-04T23:03:13Z
b4539223196c8136fec9632a389f08126475d2fe,add tests for task and task status storage,2014-11-04T22:35:39Z
df4604c39287896dcb4584b984acc2564c1d837c,"Merge pull request #822 from metamx/fix-query-docs

Fix query docs",2014-11-04T21:53:23Z
81227b63a7662b4e10784df3c17cca925c2b2fcc,Merge branch 'master' into fix-query-docs,2014-11-04T19:09:13Z
adb4fec264e5fd0d4b0dbfef5d2d83a613ec9a98,"properly serialize task timestamps, fixes #819",2014-11-04T19:04:23Z
2c62b9e6e3665b68d8859ce0db6b39cc927b94f3,"Merge pull request #821 from metamx/minor-fix

Some minor fixes in docs and change jetty defaults",2014-11-04T18:18:57Z
c6d555e1f3be6f3579e1c5bd9dd16d744ce595c5,better default,2014-11-04T18:18:27Z
42cf20c9f1842cc9257fe271b7b8bc4367795b57,some minor fixes in docs and change jetty defaults,2014-11-04T18:08:50Z
5041aaa108c184cec3efbb0a83bdc67ed6d0be6b,upgrade mysql connector for bug with recent MySQL version,2014-11-04T05:12:13Z
3676ec2d8989c2de6eebce06e37eedbbb9180b1a,fix missing service name/port bindings for peons,2014-11-04T05:11:49Z
f56d026d7d37fdb5c5a93a9b21004cc20b75e121,"fix realtime module + cleaner metadata abstraction

- better metadata abstractions
- more db->metadata renaming",2014-11-04T00:36:53Z
c58fc503d9375b4a29e77345bc7a045a6d35e432,"Clarified sort as optional, object",2014-11-03T19:59:04Z
b416c3ff5cdb9e96006b76086fa522d48a1cd54e,added quotes to clarify string value; added example of numeric filter,2014-11-03T19:57:52Z
48e6bef25025af2c70bd42326133c607d829810a,update documentation with new property names,2014-11-03T17:25:39Z
2269d090193a56356f76fff183b63562f58a748a,add comment,2014-11-01T00:04:19Z
47eb9c100e4068e032222dd8e42f805357c1ae9b,ensure ANSI_QUOTES on every MySQL connection,2014-10-31T23:54:20Z
3468163dcd411e50e3d71439368ae38d241e6c9d,remove unused imports,2014-10-31T23:25:52Z
cad4d22f3578dd864b29ee026d1f7913f35726ec,better derby test database,2014-10-31T23:25:36Z
80c72eb4864916b54dd8be7ed239934755874796,minor test adjustments,2014-10-31T22:44:09Z
1872b8f979855b6e13b51c41bd21a122c8fd709f,make it easier to test,2014-10-31T21:49:07Z
0bd9ac115424db902187ff80edb4083433761bd8,"default to Derby + remove DBI injection

- default to Derby, but still fail if the given
  metadata storage type does not exit
- use SQLMetadataConnector injection instead of DBI injection
  to simplify code",2014-10-31T21:37:34Z
696c9ba9441403865f6c04b952e80a504b456422,fix formatting,2014-10-31T20:30:23Z
6d501008b8776e45ede141139bedab5413619034,moved MetadataConnector test to metadata package,2014-10-31T20:13:19Z
a6016d70fc67c4a68d0971be431fe937f3a5626a,added deleted classes back,2014-10-31T20:10:09Z
01f2b3482c15def514eaf4421491f63caf67004e,merging,2014-10-31T19:52:53Z
df7566701d334b46c46e27038f9e7fa043c22b65,fixed syntax error in creating index statements; added a test for MetadataConnector,2014-10-31T19:52:15Z
cbe6ea67ee5c54450af317801fa0a14c7ef1f26a,more druid.db -> druid.metadata.storage and allow multiple storage extensions loaded at once,2014-10-31T19:03:04Z
e07b02f54b0371f6d257d3abc40fbde239c08c0a,fixed typo and added info that union can take any number of dataSources,2014-10-31T18:07:55Z
97a2f5af4acda18905c589b8d993a14df05ed269,rename db->metadata,2014-10-31T17:54:33Z
9c06db021ff6cd24ffde54371dcfc6fca196b7c0,rename db->metadata postgres->postgresql,2014-10-31T17:30:27Z
f77b810f3651be28bedacade2e725eb01dc0b547,fix imports,2014-10-31T17:01:58Z
9fea34be4bcc1452703dd1cee7d493d70b54abf8,simplify connectors even further,2014-10-31T16:59:34Z
df0af894f4b761493f349ee49912e747e1d9ba33,fix factory binding + remove unused imports,2014-10-31T05:35:37Z
fb4d41cedb41a341465ccddb6325e8809c17be30,make the injection gods happy,2014-10-31T04:16:36Z
377151beda5db983bad14cbe4823babd1527b393,better abstraction for metadatastorage,2014-10-31T01:23:35Z
0906b21079bb24dc0b97e1e7c25960edda87361f,Merge branch 'master' into fix-datasource-doc,2014-10-30T23:26:16Z
8045d0309f0cea2fd8565c8e45f864d18ca1e4b7,"Merge pull request #816 from metamx/fix-search

fix search with same value in multiple columns",2014-10-30T18:06:45Z
9788f7dcf60b7e5aed785bdddaa2157da3120480,Merge branch 'master' of github.com:metamx/druid into fix-search,2014-10-30T17:56:46Z
3e158f00eff0f0941c7820f4dde5f94f007f743a,fix random lowercasing in test,2014-10-30T17:56:39Z
8af3c45657ddbb9e2655af066efb078c932d0e67,"Merge pull request #813 from metamx/better-example-and-test

provide a little more involved example",2014-10-30T17:53:43Z
75da039396e23a1aca7b949d40fd9efac96fe5e5,fix search with same value in multiple columns,2014-10-30T17:43:42Z
3cc1b2e6903ffbefa313e130fdf1769956883441,remove mysql dependencies + fix jdbc class loading,2014-10-30T00:30:41Z
c2727dd063ee825119f627fdcf51a26a21d43fd5,better type,2014-10-29T21:22:00Z
1f171a2b8600b96d8349993d3916b8340d54b049,"workaround for Derby requiring batch statements

+ make sure payloads are always written as bytes",2014-10-29T20:59:26Z
55d5f1f618bdc47b08718079507a8a82c866dd45,remove commented out code,2014-10-29T19:55:03Z
b7edda2b335325d05de00d01fad26c77579870b9,add back code that got lost in translation,2014-10-29T19:54:04Z
7be252599eff7696150d9fc7d5a09d7fe55bd302,reduce memory usage when pulling segments,2014-10-29T19:43:21Z
479c196aa4358b5a720a5fee81ac5a08a8983526,Added section on union data sources,2014-10-29T19:32:24Z
68b9436199b7e6835b0b671033c611a91966e4df,optimize imports,2014-10-29T19:07:21Z
e8b4640875fb9233c96db2cf6908b84ed0c833f7,remove duplicate code in table creation,2014-10-29T18:47:29Z
123296b7678a3c1c28de4ce9fe6657a3d4bee426,add documentation,2014-10-29T18:31:25Z
12e8feba8dfb3ceb40e22a295d8ed18581111733,Merge remote-tracking branch 'upstream/master',2014-10-29T11:41:54Z
54eb434a0b389cc08337491e9468b0e44fd7b038,remove Derby specific code in favor of better generic JDBI code,2014-10-29T08:09:05Z
ec70ecc5fd10e30ad0521383d7bcc2a1e5451c13,make tests pass with Java 7 as well,2014-10-29T06:17:30Z
92afd1094750dbcdb08b34f94fbfe9789331788c,simplify SQL metadata storage,2014-10-29T01:00:16Z
23315e298d0d15e171420f5cbae6fb6527be8e09,expanded and clarified OrderByColumnSpec section,2014-10-28T17:38:21Z
575919ec6c889a5429386f238f0957246773efd9,provide a little more involved example,2014-10-28T02:14:23Z
aa754b86e863665ea11cc5051a05b82953a2514f,build success!,2014-10-24T18:28:42Z
8b1edfd464dcf50647cbeadaa7310e5a4d389d71,"Merge pull request #809 from metamx/fix-test

Fix tests after always sorting dimensions in the parseSpec",2014-10-24T18:09:02Z
41ebdd2baefda3a5cf8cba4fc26b715ac6006323,"Merge branch 'druid-0.7.x' into fix-test

Conflicts:
	processing/pom.xml
	processing/src/main/java/io/druid/segment/IndexMerger.java
	processing/src/main/java/io/druid/segment/MetricHolder.java
	processing/src/main/java/io/druid/segment/data/CompressedObjectStrategy.java
	processing/src/test/java/io/druid/query/groupby/GroupByQueryRunnerTest.java
	processing/src/test/java/io/druid/segment/SchemalessTestFull.java
	server/src/test/java/io/druid/client/CachingClusteredClientTest.java
	services/src/main/java/io/druid/cli/CliHistorical.java",2014-10-24T18:07:52Z
bef74104d994dc66d2163cb8b3feb963d426892c,merge with 0.7.x and resolve any conflicts,2014-10-24T00:24:06Z
f790a05bd7eafdc06444081e8f6a25561d336a62,"Merge branch 'master' into fix-test

Conflicts:
	pom.xml",2014-10-23T21:39:51Z
2da7154fdfd8992ab81afe162e8b24c599939228,"Merge branch 'fix-test' of github.com:metamx/druid into fix-test

Conflicts:
	histogram/src/test/java/io/druid/query/aggregation/histogram/ApproximateHistogramGroupByQueryTest.java
	processing/src/test/java/io/druid/query/QueryRunnerTestHelper.java",2014-10-23T21:37:55Z
1b3921faad1d336039898e8446c756907cb9db76,fix for long columns,2014-10-23T21:33:25Z
f62221bfae5e7aa6cf50dbe931b4e3c8cd1779c7,added link to DimensionSpec for alternative way to provide dimensions,2014-10-23T21:30:02Z
f76d68e2c9afff119e1afa80172f5cd227e79a8b,added missing anchor to fix broken internal link,2014-10-23T19:49:44Z
374ba8ab5e6a9109740519ae6659f29bcaa93c85,minor edits based on Vad's feedback,2014-10-23T18:38:01Z
ca0a4bd8a51c0a359901707a558541845be6d4da,RemoteTaskActionClient: Better error messages for non-2xx responses.,2014-10-23T01:02:22Z
3b29e778668dbacd322fa05c7c8e0407c0c1524a,[maven-release-plugin] prepare for next development iteration,2014-10-22T23:25:32Z
dcab2997f255c5660e803cff69d8896a024d163d,[maven-release-plugin] prepare release druid-0.6.160,2014-10-22T23:25:27Z
d76d57d95db35c15eed7415b4234d02979711afd,update docs,2014-10-22T23:16:28Z
94da2b6ad3e794e573afebf46abc99441e2425e4,more logging for potential NPE because of segment unmapping,2014-10-22T23:16:10Z
a0baf7e8f4f86d77ec6d0ca9fd75d7e15f809c49,"Merge pull request #804 from metamx/notdimfilter-support

Add support for NotDimFilter with FilteredAggregator",2014-10-22T21:38:29Z
4ec1e6ef13060e9e520502f88026d4d0cad17842,simplify code a bit,2014-10-22T21:25:59Z
0785baf54ce913b0f711affb318508fdafdc7303,review comments,2014-10-22T15:58:31Z
02e79d6b153d1356bc0323084846be12980a810e,attempted to solve merge-conflict; IncrementalIndex has unresolved classes after updates - needs to be fixed,2014-10-22T07:18:17Z
197878ae7573da108f07abcea8771934ecc45d42,changed SQLMetadataConnector to a concrete class,2014-10-22T06:39:58Z
a0d9944fa6db08607654eac75ecfd8c32f8937f2,changed SQLMetadataConnector to a concrete class,2014-10-22T06:38:26Z
1ebc8a2a72528eb6988fca749dfd256df712eb08,"Merge pull request #805 from metamx/long-column

Long column Support",2014-10-22T05:11:26Z
6cb6ec39cfc22c4c70849954a6d330bcef492a47,add support for not filter and add test,2014-10-22T04:55:24Z
69ca6cd9249e1ae06abdf48f2d64d3febff4d77d,"Merge pull request #803 from metamx/filtered-aggregator

Native filtered aggregator",2014-10-22T02:54:53Z
9fd0606a42e1f0f099475461cd16f253ec217e92,Merge remote-tracking branch 'upstream/master',2014-10-22T01:56:32Z
e24a6d222f26db8aee64aba6618d36c25ee08ee4,we even have tests now,2014-10-22T00:46:24Z
34f2c74331991a1cc1bf3083ced511632fdf141d,add docs,2014-10-22T00:24:44Z
23a6ab19b0e3fb7b1dfa2221b2281e0986b0a09f,cleanup and add missing methods,2014-10-22T00:00:39Z
56912adccbe93448c39cb89763d3fb92c76b0714,avoid typecasts,2014-10-21T17:23:48Z
10db94101ffabdf0f781064a8d2f60b2fc9e5969,"skip value lookup

compare ids instead of values",2014-10-21T11:01:39Z
71831e49d968193892b43a2f096f86bba9326268,rudimentary filtered aggregator,2014-05-09T02:09:14Z
ee392b6064c7ec04783f348de068cf513249d65b,more updates to docs,2014-10-21T23:26:17Z
2d96bc5f1feef16d682cc34764d59c049ae8b101,more FAQ docs,2014-10-21T23:08:56Z
5df92aff2c0212147ee28c61b79a72b5eeca9ca6,"Merge pull request #797 from metamx/igalDruid

Igal druid",2014-10-21T22:47:47Z
3d8f33d4ad010d6c705c03c6a1c7a5c787c71e09,"Merge pull request #801 from metamx/fix-unordered-merging

fix ordering for partitions with same start time, fixes #796",2014-10-21T22:47:31Z
8735272ce39c35cfee3e79e2455b798fa6685855,fix file casing,2014-10-21T22:36:49Z
fd7d3e5aceabb568c37f7eb31db2a4f48b0dffe9,make it work with Java 8,2014-10-21T22:30:29Z
5a7d186e888ee39f9dff36370fbccf5e97e9b270,"Merge pull request #799 from metamx/js-tiered-broker-selector

JavaScript tiered broker selector",2014-10-21T22:30:02Z
9d5e65913da00f280c38424d70d0e7d9601129fe,fix serde,2014-10-21T21:09:11Z
37979282fe13ca9ed65557c359158be68cb7d5cb,enabled ansi-quote in mysql; insert statement should now work,2014-10-21T07:09:19Z
23a59db566bc054b3231f7c027239f0239bdaebb,"fix ordering for partitions with same start time, fixes #796

Partitions with same start time may produce results out of order,
           especially in the presence of data gaps.

Results for those segments must be re-ordered prior to being merged",2014-10-20T23:23:45Z
b32ce31eff5beeca3e890b461ce88dacc1e13440,add documentation,2014-10-20T21:11:49Z
38cb73e0cccc61f00b43ef4bb4944c0c1550787c,javacript tiered broker selector strategy,2014-10-20T20:19:21Z
1dd9aeba4f22db24d12984b27976d846ddc978f0,removed link with no target,2014-10-20T04:22:10Z
b7c4983a918edfc1dde39add84f4e35376dcb698,added syntax highlighting,2014-10-20T01:38:20Z
63a4f2dc055598aab2bf36bc4d55769c9ec13a49,fixed broken internal link,2014-10-20T01:29:34Z
ca978d62f61336eabb97cb408fd7c7b21fcfe72d,"Merge pull request #795 from metamx/fix-rabbit

Fix rabbit serde and add tests; fixes #794",2014-10-19T23:42:12Z
9f75df63f34d469ae27ab965425f0f0cebc6b984,fix more things,2014-10-19T23:38:21Z
cc18bdeb0d157f3cffdb223236d22488cc323a33,another test for defaults,2014-10-19T23:14:26Z
56b8ef4629073451cd6a0fd0bb10b65900dbb5a8,one more comment,2014-10-19T23:04:52Z
82fc6e5358012951e0130be3ddda556d4efaf2bc,"Merge pull request #793 from metamx/partitions-docs

New PartitionsSpec docs.",2014-10-19T21:33:16Z
bf3d31e5cc350779823001cf3e0edf68fc1285bc,address cr,2014-10-17T16:32:37Z
3d09edaae661e0139c9cca112ab588f770db68f4,fix rabbit serde and add tests; fixes #794,2014-10-17T15:31:18Z
b8cbe2457aae4de4f0d618a92f94311598f26e1b,fixed variable name,2014-10-17T07:13:30Z
7d5c5f2083360682d302b0446efe40c9c253a574,fixed createTable; fixed miscellaneous stuff; added DerbyMetadataRuleManagerProvider,2014-10-17T07:10:36Z
20d29666af5d984d85de04ce18abb48410e346c6,New PartitionsSpec docs.,2014-10-16T20:17:04Z
8ec8952993021753e685883e1938cadfec450e9b,"Merge pull request #791 from metamx/fix-rollup-hashed-partitions

Fix rollup hashed partitions",2014-10-15T18:26:03Z
41e88baecaec5a97f34655a3c93a61283e90f3a0,Add test for bucket selection,2014-10-15T17:39:28Z
f4a97aebbc2605798637285c123a709008a9f527,"fix rollup for hashed partitions

truncate timestamp while calculating the partitionNumber",2014-10-15T17:02:56Z
bb9043286238f0e67537ab8b6cd610b720455df8,"Updated druid-api version to always sort dimension names, these tests needed fixing",2014-10-10T21:08:14Z
ae4f2193d583bc52660169b0c4dbe4c94b430b28,"Merge pull request #790 from metamx/fix-groupby-order-casing

fix casing issue when specifying ordering dimension in groupBy",2014-10-15T16:19:10Z
5b194ee5fe154bfa462fc8d65a03ce361f919cc9,fix groupBy ordering casing bug,2014-10-14T13:22:19Z
c18f156cd8ab710eb8ceaabce99aa283815efcc1,remove unused test code,2014-10-13T21:53:24Z
62f77fabc46f51870588c93ae9de6a10876c506b,simplify test for approx histogram,2014-10-13T21:45:34Z
bce388fb2747865a25ebee56ec3ffddb47178235,merge changes from 0.7.x branch,2014-10-14T13:16:02Z
b5d66381f38fc5a14c20d89afa4a4b4c675a852a,more cleanup,2014-10-14T13:02:40Z
76304d6b7b886f6578d9b4303aacf926c303bbb4,made modifications according to comments; need to fix some more,2014-10-14T06:56:09Z
35716e8deef7428a4933c587453585bc1532269d,add a best practices doc,2014-10-13T21:33:45Z
a4c8f0440949c474bed0b7d4862aafd04380185f,[maven-release-plugin] prepare for next development iteration,2014-10-13T19:50:45Z
7fd1747ffa8eade09704e32eaf3a6d80a19c33d6,[maven-release-plugin] prepare release druid-0.6.159,2014-10-13T19:50:41Z
d4f5a71dedb93a7f9ce82a25a6139d87dd9a3cbc,prepare for next release,2014-10-13T19:48:12Z
035b4c1af4dfd4a3f72be6c5c0c53a2b85de15f1,more cleanup,2014-10-13T19:27:15Z
8548c0283a4abf2a5495b8fd5739c375e581f038,Merge branch 'master' of github.com:metamx/druid,2014-10-13T18:10:27Z
282e40e07ce7ebb6de4d03f199e1dd9b1e89176f,update bytebuffer collections dep to fix issue with empty spatial concise sets,2014-10-13T18:10:17Z
454acd3f5ae5d05be17d2899c9df88ec03fd034a,"remove backwards compatible code

1) remove backwards compatible and deprecated code
2) make hashed partitions spec default",2014-10-13T14:00:44Z
441d28dea7c91e9cf0d990b3bc50317534ea9211,"Merge pull request #788 from metamx/rtr-worker-disablement

RemoteTaskRunner should respect worker version changes (fixes #787).",2014-10-12T20:59:51Z
e1fedbe7415aedc092d624abcef1c91cff3af194,RemoteTaskRunner should respect worker version changes (fixes #787).,2014-10-12T18:26:46Z
521398267c90a29e7283fd363425d4ed69f2e8a6,fixed inconsistent variable names,2014-10-11T00:00:50Z
0dda8975e79cbfd57ed8212035220a6d46e50ed8,deleted DerbyMetadataRule/SegmentManagerProvider and replaced them with SQL ones,2014-10-10T23:54:33Z
25cb69446e0d3d3cfdbb9a3647e3facae90409a5,"Updated druid-api version to always sort dimension names, these tests needed fixing",2014-10-10T21:08:14Z
66277ddf2bafeb89482cfda437bd92cd61382174,deleted dbSegmentPublisher,2014-10-10T19:41:35Z
830436594831724e676874df901c8f6645dcbd23,move thanks page to main site,2014-10-10T17:19:33Z
592611f2ee72e5de037f7c38e7d46927ece32560,fix cardinality aggregator serde,2014-10-10T00:04:36Z
d0fbd5f729c142f9482360bf41d3b969073e2330,[maven-release-plugin] prepare for next development iteration,2014-10-09T21:24:53Z
dada60a301d3147c5bb483f8f4d0a8eb1e598e74,[maven-release-plugin] prepare release druid-0.6.158,2014-10-09T21:24:48Z
0532208c25ad737adadbbe29670e6dc0d160f42d,prepare for next release,2014-10-09T21:21:38Z
684e5cf7f8c249a418e35d1698b11fae4531efd1,"Merge pull request #781 from metamx/remove-smile

remove unused jsonspec content type",2014-10-09T17:33:31Z
fa27908ae41f7438cea6a28718aa1f9b42957d9f,"and another one, fixes #782",2014-10-09T17:28:33Z
e2e912cdc37e404e8f9c0dd7cf1192e1e8bec716,"fix broken link, resolved #782",2014-10-09T17:26:39Z
290107ce7b8d1d3401e26c44b860d61b78094d0c,remove unused jsonspec content type,2014-10-07T21:48:49Z
21ac3f2aab1eb7b83533daf9201f0bc2ab0078c3,slight clarification about hadoop setup,2014-10-08T17:56:00Z
8a34a55c0bb6bd9e8e107e9ef35b44972ef1edb3,add example hadoop config,2014-10-08T17:51:00Z
c25203e1409ed2a2474fd267259e85e1a67e7942,remove unused jsonspec content type,2014-10-07T21:48:49Z
8a4b32c482a4821bf82453e67adfdfd88140650a,[maven-release-plugin] prepare for next development iteration,2014-10-07T21:30:26Z
96e29c2fdd4cd1b0231e934908c86a46c9ec087c,[maven-release-plugin] prepare release druid-0.6.157,2014-10-07T21:30:20Z
1ce67dcfc473f182b0cf4f34556d4da3938a57e2,prepare for next release,2014-10-07T21:27:47Z
8f7f497b55b3223229ab478eab41ede9d63a2691,jax-rs smile support,2014-10-07T21:19:59Z
2f21b2754cb005e2ce25cbc77c6bb65ef06be0ce,fix compile,2014-10-07T20:57:03Z
19dc32d314fb714aad4b53c24f6b66c93f8efeae,add headers for druid vs pages,2014-10-07T20:50:32Z
5be4d6b4aaf938ae95f3bd27aca2bbecbeea27ec,"Merge pull request #780 from metamx/new-druid-api

update druid-api for json parsing improvements",2014-10-07T20:35:39Z
30183d3b4dafbdd65adf6a0741f77a53023db7b9,update druid-api for json parsing improvements,2014-10-07T19:40:12Z
f1d37d569c4736a9f0664b30869f0ca05e2b7004,doc fixes,2014-10-07T20:01:41Z
fde510bbfc4b025b28ca4125af92fe8c7fcc086a,"Merge pull request #779 from metamx/fix-histo

Fix groupBy with histograms",2014-10-07T17:53:24Z
f78b8f2c3109549cfcd74158741498f03f09f99d,fix ApproximateHistogram combining factory,2014-10-07T00:38:13Z
d4217f1588765935d15f3e27aada55803e98a163,"Merge pull request #777 from metamx/initialized-endpoint

Historical endpoints accessible while loading + new loadstatus endpoint",2014-10-06T23:35:58Z
ee0e8560297e94997ee7cba9ba512d62d7f11328,correct mistakes,2014-10-06T21:23:23Z
546fca2d67e56909b8eb4e0365a5cc5249733f6d,docs for router node,2014-10-06T21:18:25Z
81641d78876c9795edf2ca30ca2e706fd371e8c5,http accessible while loading + status endpoint,2014-10-06T19:47:16Z
39a7af28d6ffbbfbd8cb2dca85970c93da50c66f,"Custom AWSCredentialsProviderChain for the S3 storage module: supports existing druid config, file, environment variable, system property, profile and (most importantly) instance profile based credential options",2014-10-04T03:09:38Z
858aff396c0c593a37d17a2e8f09fad4a1a5b42e,move to latest AWS sdk (1.8.11),2014-10-04T03:06:42Z
c7b4d5b7b445fbd3680f0190de8b33a239c5ca6f,"Merge branch 'master' into druid-0.7.x

Conflicts:
	processing/src/test/java/io/druid/segment/filter/SpatialFilterTest.java",2014-10-03T01:12:10Z
efa898422dc18324800dd041134c25a2daa9f7ae,"Merge pull request #773 from metamx/cleanup-metrics

Use multi-val dims for metrics",2014-10-03T00:58:50Z
816986f914f55df9903920d66e511eb41de3f0a5,cleanup according to cr,2014-10-03T00:51:33Z
75fb7986df6818ddf50d05d443c6116c0c933ece,"Merge pull request #602 from metamx/offheap-incremental-index

Offheap incremental index",2014-10-01T22:20:24Z
263c45c0154c11a20395b907b28561389da0d3a6,"Merge pull request #752 from metamx/mapdb-branch

Offheap dimensions",2014-10-01T22:19:34Z
1a67d6cb2e678572925c34044dcc2e65e965ccd2,some tests for broken approx histo,2014-10-01T22:10:23Z
fc3f8859489992100d7503f5ea0db2bc1bb041ca,"Merge pull request #774 from metamx/better-ingest

Make loading local files easier",2014-10-01T16:14:23Z
4fc0382d8afc6da502e689fb3a183dab9686356f,add more logging,2014-10-01T16:13:59Z
09c41afb5bc8fe2b99c2c0706bb9d35220fe47b6,license header,2014-10-01T12:22:57Z
ad75a21040def8a7a70a63ef0cf41a2bb203043d,separate offheapIncrementalIndex implementation,2014-10-01T08:28:51Z
c3bea245a7a0962c644b1605ecdea1205ce92982,fix up some bugs,2014-10-01T00:20:52Z
a0782d4c5454c55852d087b87f8af4b270cd5083,fix compile,2014-09-30T23:56:44Z
d9453f29f12cdf41b042ba28eabde759d518e9d5,fix docs,2014-09-30T22:02:06Z
5b166134fbe40f1253481a9dda37c012d0e6fc65,add docs,2014-09-30T21:59:02Z
6d2747adcfdd38941b7d5e8b0cfddc8e8229e6a7,make loading local files easier,2014-09-30T21:50:48Z
ee713f8e94bfd87179ed157067749d81b4437dc3,"Merge pull request #727 from metamx/new-console-0.7.x

New console 0.7.x",2014-09-30T21:36:32Z
0e50852985c6eb266f93418727074bff895a1161,fixed MetadataTaskStorage and handler,2014-09-30T21:09:23Z
9d7b5d9b0f05ef173514a4160467d84e85af16bd,fixed javadoc; fixed pom files; deleted unnecessary class,2014-09-30T20:47:35Z
267e8611620f1fb5ffe6b493b388c7e307fd5a88,fix search,2014-09-30T20:36:55Z
0f96a099398c3807cde1122a4d291b46b9ecca7f,use multi-val dims for metrics,2014-09-30T20:36:01Z
0781781b990b9425f1db7bb677aae316fa7b3c05,"Merge pull request #766 from metamx/extend-rtr

make the worker selection strategy in remotetaskrunner extendable",2014-09-30T19:52:12Z
fab7caafffa8f15da53c5e1252d2fb501c44a27f,final code reviews,2014-09-30T19:32:14Z
888be42cbfac41ae1988091e9ed553a231dec3df,"Merge pull request #771 from metamx/fix-730

fix #730 - memory check throws exception if it fails",2014-09-30T18:58:31Z
06757034f2d55738b05216a39143fdc5850c17f3,add default impl,2014-09-30T18:54:29Z
2b2b028e5c774b1912ba59ee913252614d54b49c,why am i so bad at coding,2014-09-30T18:53:18Z
b1b9e0a26774444b50697f400af7fc648be08780,i suck,2014-09-30T18:45:19Z
575d51b0ce4182cb6712001e121358c103dfd26c,fix compilation error,2014-09-30T18:44:50Z
4c23a5e9f655cf32b22048c96e49c94098d1f345,address cr again,2014-09-30T18:40:29Z
91eecfe3e76c100b350498cb457853546ce3303c,"fix #730 - memory check throws exception if fails

fix exception handling, do not catch ProvisionException",2014-09-30T17:33:40Z
55db06ccb108c7e57bab0d6d516862a34d818ad3,address cr,2014-09-30T17:29:02Z
16c9a029a6790d3a4dc0e912e094f9f6a61e410e,"Merge pull request #770 from metamx/jetty-conn-issue-fix

upgrade jetty and workaround for half open connection",2014-09-30T16:54:05Z
358ff915bbeda62dce4280340035b40847370396,fix merge conflicts,2014-09-30T16:49:18Z
63fcd1186462d94a68058d8d93011e14e3065912,fix compilation,2014-09-30T16:42:06Z
2789536bedbf7dd26a176089eccf2ba61e65c77b,merge changes from druid-0.7.x,2014-09-30T16:35:49Z
7ba914d379ce089efdf52c3e281815bb32b8a091,review comments,2014-09-30T12:56:43Z
61c7fd2e6e73d7f993e5e0f82a3b59db09d9579b,make ingestOffheap tuneable,2014-09-30T10:00:02Z
8cecb00aa9aea7a579138a0ab55aee006d88abc3,"upgrade jetty and workaround for half open connection

Upgrade jetty and set acceptor priority delta to -1
 to give priority to servicing connections already accepted rather than
opening new connections.",2014-09-30T08:52:16Z
296b9236fd1544637ae57d022c9e1dd9758577d0,"Merge pull request #760 from flowbehappy/fix-hadoop-index-path-prefix

Fixed the issue about the path's prefix after batch ingestion with indexing service to hdfs",2014-09-30T02:37:52Z
a3a2c8b86f6abb319e4be31d71d69c4dc5e6b594,"Merge pull request #765 from metamx/fix-spatial

fix spatial indexing with multiple spatial dims",2014-09-30T00:23:29Z
e1c1e8997a5c3059fc96b0b6e478d2b94c90efaa,address cr,2014-09-30T00:22:58Z
3f524baa67f9e2f5e8b5f56d01bbb999f52895c9,"Merge pull request #769 from metamx/task-logs-fixes

TaskLogs fixes and cleanups.",2014-09-29T23:37:00Z
1e6ce8ac9aa5c2007daa9d1525c4e0d2f4e99af7,"TaskLogs fixes and cleanups.

- Fix negative offsets in FileTaskLogs and HdfsTaskLogs.
- Consolidate file offset code into LogUtils (currently used in two places).
- Clean up style for HdfsTaskLogs and related classes.
- Remove unused code in ForkingTaskRunner.",2014-09-29T23:20:34Z
5d964d2db6256c7f132c7e839b8da428ff3d769a,"Merge pull request #759 from metamx/fix-dynamic-config

fix dynamic config bug",2014-09-29T22:27:35Z
1a67ebe861c197a0d84578f39655c6c2c651a2cb,fix regression in test,2014-09-29T22:22:26Z
57ee69111f33df272cc5c063d8035d15ee51db06,"Merge pull request #767 from metamx/fix-search

Fix NPE when searching  real-time with a non-existing dimension",2014-09-29T22:08:31Z
b57ac513bd3553407d8cbcb11891dd6501c84e9c,Fixes #761,2014-09-29T21:56:43Z
e367f76824080eac457f26fb580214c7e35af744,"Merge pull request #757 from pdeva/master

FAQ on changing data granularity",2014-09-29T21:40:37Z
4a09678739b25ad8334f7104671c165f436c1436,make the selection strategy in rtr extendable,2014-09-29T21:24:02Z
2b5ce895543f9782399162b7ce137107adf95bc2,fix spatial indexing with multi spatial dims,2014-09-29T19:07:27Z
3f66d3c1678d5cf8f9bb62197b5ada43eb03dc44,review comments + mapdb deadlock fix,2014-09-29T16:19:12Z
adb4a65e0abc780f412044b66ede7baa1b198868,Merge branch 'offheap-incremental-index' into mapdb-branch,2014-09-29T07:08:31Z
74565c93719c21e159cecb9347a5e2c87b2d8244,cleaned up the code,2014-09-27T20:10:01Z
aa887edb73e6762de10f45b005bb0727eb12f964,added two seperate modules for mysql and postgres,2014-09-27T20:08:53Z
2dd62979bbcb4172fc801c918a750e6fcc4ec648,"Fixed the issue of batch ingestion with indexing service to hdfs end up with the path of metadata in mysql missing ""hdfs://host"" prefix. The detail describe can be found here: https://groups.google.com/forum/#!topic/druid-development/ofvSxiPpCxI",2014-09-27T14:26:52Z
fb1d6c177a6cad6e60b4501d19d40c5de00575c7,fix dynamic config bug,2014-09-26T22:45:20Z
91bf8fadcf31576e30360143b4c69829a704e5e6,added MetadataSegmentManagerTest,2014-09-26T22:38:40Z
0436ae76a71064905145dc3b85dd5f47e769ada4,Merge branch 'druid-0.7.x' of github.com:metamx/druid into jisoo-metadata,2014-09-26T21:45:24Z
59b3e79c705e2d91b8237e2ed4de956d66063195,derby seems to be working..?,2014-09-26T21:36:17Z
6a641621b21ceb9eae76b7644daea8c1f7cd657f,finished merging into druid-0.7.x; derby not working (to be fixed),2014-09-26T21:24:53Z
43cc6283d358b391feeefaf077aa756dcf541354,trying to revert files that have overwritten changes,2014-09-26T19:38:04Z
4244accab52d3d3b45ba415b03872676e799b2ac,Merge branch 'druid-0.7.x' of github.com:metamx/druid into druid-0.7.x,2014-09-26T18:39:50Z
eaf0a48b922209d5f08e653b59667daeab2a218a,"Merge branch 'master' into druid-0.7.x

Conflicts:
	cassandra-storage/pom.xml
	common/pom.xml
	examples/pom.xml
	hdfs-storage/pom.xml
	histogram/pom.xml
	indexing-hadoop/pom.xml
	indexing-service/pom.xml
	kafka-eight/pom.xml
	kafka-seven/pom.xml
	pom.xml
	processing/pom.xml
	processing/src/main/java/io/druid/guice/PropertiesModule.java
	rabbitmq/pom.xml
	s3-extensions/pom.xml
	server/pom.xml
	services/pom.xml",2014-09-26T18:39:24Z
bc66b42acc215bd0dc8d7fa23d653a7c87faf3be,"FAQ on changing data granularity

added cause this question is asked a ton of times on google group and i had a similar question and had to resort to the forums cause there was no doc.",2014-09-25T08:48:45Z
a5d02b9030758789708e08a484d3536256fc8af0,second attempt to fix merge-conflicts,2014-09-24T22:59:00Z
3bf39cc9f8fd2818e949ea5ad9a43e470bc7d80c,attempted to fix merge-conflicts,2014-09-24T22:55:42Z
77c9afe92f601a5e622b88c44dc2f0b258af88c1,try to make javadoc happy,2014-09-24T01:53:29Z
7cfe86b7bc0d7136418972ddacae4e2a38cc6380,[maven-release-plugin] prepare for next development iteration,2014-09-23T23:31:25Z
80166314d9726ecb8cdb54f69a4d352e9713891a,[maven-release-plugin] prepare release druid-0.6.156,2014-09-23T23:31:21Z
13ac7de882c69b057ff38183f5e2ec20bfb85869,update doc versions,2014-09-23T23:28:18Z
d02fd97ea3e9dc9441d1774ce103cf1659f41225,fix comment,2014-09-23T23:25:46Z
8603d2fd3e47d3c90de78f4a8066789f42968dab,keep default behavior,2014-09-23T23:23:02Z
4235e14fc6557d8d2b6458097e5e74d1b0bc6337,[maven-release-plugin] prepare for next development iteration,2014-09-23T23:12:43Z
576e9b8a845cad3da27569a78719fb1a1bbf5783,[maven-release-plugin] prepare release druid-0.6.155,2014-09-23T23:12:39Z
c042ce5b4b6441a27e119028a8e2841ea3b6c48a,prep next rel,2014-09-23T23:10:12Z
d19723e18629749de26886878effb9c47ac9958b,"Merge pull request #749 from metamx/background-segment-announcing

Parallelize segment loading + background announcing",2014-09-23T23:07:51Z
35fb210cfa42fdc7521ead9fd33995666005c8bc,add test for parallel loading,2014-09-23T23:05:32Z
bdea4f45eac6327a85811483bea553d97cebc3ee,fixes #733,2014-09-23T22:41:56Z
05d4f71ddc98bc2e88def12f78854fc0806e645e,fix background annoucing race condition,2014-09-23T21:55:22Z
0187c7f1c3646409a21befa6f39ee813cc34c5ea,"Merge pull request #748 from metamx/fix-columnschema-access

fix column selector on varying incr index schema",2014-09-23T17:25:46Z
01bb7de3aaadb41816d0ca378cd51234ec0053fc,"Merge pull request #756 from metamx/dimdim-comments

add some comments about string interning",2014-09-23T17:24:11Z
43d1a7f36d7ae7b583db85beaf150e4b40ce2fc9,"Merge pull request #755 from metamx/update-java-util

update java-util",2014-09-23T16:47:57Z
e6b3e37aeb4a88357414715cd0e4bb4704bc3f80,update java-util,2014-09-23T16:36:21Z
d7b39fa7ea5db2abe11b5950c6fb3747caa14c6a,add documentation,2014-09-23T16:30:36Z
12449481e391c67eac8143d073a167d68f768f7f,parallelize segment loading,2014-09-22T23:33:25Z
f51ab843868d0070c350426a2a25b3fa897f5f00,merge changes from druid-0.7.x,2014-09-22T18:18:45Z
5e0b6b989625b7d2eb06ba3f7b7f51ea8cf579ad,"Merge pull request #746 from pdeva/master

segment metadata result explained better",2014-09-22T17:27:35Z
323153a59f257e30d0bdcb3859cb8d5eb27f29e0,"Merge pull request #753 from metamx/fix-compilation

upgrade druid-api",2014-09-22T17:25:15Z
b38a9bc1c1fe114b304d6e1db0d976a1be46cbcc,upgrade druid-api,2014-09-22T16:45:00Z
443e5788fb0cdd1cf79680eb219a954cfa6c2b94,make OffheapIncrementalIndex tuneable,2014-09-22T13:56:10Z
273205f217e6f730ff6905155e8841ad3aaa67e1,initial attempt for abstraction; druid cluster works with Derby as a default,2014-09-20T00:39:59Z
59aa8dc3683247698d2164f02f39b81455c931e3,Merge branch 'offheap-incremental-index' into mapdb-branch,2014-09-19T17:39:35Z
8c16377e9ee230093c8b501c5aa5405ea25b6533,"add custom serializer

add custom serializers",2014-09-19T17:39:31Z
8eb6466487d0f363939da41eddd715fa1348ddc9,revert buffer size and add back rowFlushBoundary,2014-09-19T17:36:04Z
815ebeee256ef6d1221d979e3e866d2c3450110b,add docs for background segments loading,2014-09-18T19:06:50Z
32b6135f3d7379910f7452417afbddb2558f4ce8,background announce segment cache,2014-09-18T19:01:28Z
e5a13544a0fe3222a0bd2c05b496ffe7dad92db6,fix column selector on varying incr index schema,2014-09-17T17:35:58Z
a4777ede94a4798c19859e57ed82bd3a3ecedf67,"Merge pull request #747 from metamx/ingest-segment-npe-fix

fix NPE",2014-09-17T15:24:10Z
e6d93a307019406c9e4ec26d9d865fd3717feeb7,"fix NPE

fix NPE when the dimension of metric is not present one of the segments
to be reIndexed.",2014-09-17T10:27:58Z
d53ccf7ead5d04b700ce39ef7af73306a2e08d46,segment metadata result explained better,2014-09-16T22:56:15Z
a17794a51668cb83d07a4c7220960bfc29ad309e,[maven-release-plugin] prepare for next development iteration,2014-09-16T22:22:55Z
f9c91ace3f242a9e794eab341cf9414e8bf44807,[maven-release-plugin] prepare release druid-0.6.154,2014-09-16T22:22:49Z
4b5632008eb1eb3fdd462870fd6f0141634848bf,Merge branch 'master' of github.com:metamx/druid,2014-09-16T22:18:34Z
fbeb57d2612c5233b0635f21ec56fe1a7ef8650b,prepare for next release,2014-09-16T22:18:27Z
502964711f603b6198dedf8270fa4914865dd2a5,"Merge pull request #745 from metamx/better-defaults

default zk compressed + batch announcements in 0.7",2014-09-16T22:14:18Z
d9a0d403b3b4ec655d4f39b1fc28d302d38b937d,default zk compressed + batch announcements in 0.7,2014-09-16T21:53:54Z
8b387034a31b7c70aee21116dc60f5de3dceaf1f,"Merge pull request #741 from metamx/serverview-initialization

initialize segment view before announcing broker",2014-09-16T21:35:09Z
cada14586a70d48f78bbad88f70e2eeaae95c2a2,fix tests,2014-09-16T21:16:49Z
8b5c2fcd82411d6ca5b1fb502303adc1a6be9d94,fix compile error,2014-09-16T21:10:02Z
ff3163516f9da8d417bc22a2df0c3374ca144b05,"Merge pull request #744 from metamx/fix-select

fix select for non existant dimensions and metrics",2014-09-16T21:03:51Z
9e0a2fd487d3b2386d78c7379e35cdf1994da3ce,fix select for non existant dimensions and metrics,2014-09-16T21:01:21Z
1dbb6fd4b05422c6c8fc6d849993d98fa65ec42e,"Merge pull request #736 from metamx/fix-synchronized

fix synchronized on field getting updated",2014-09-16T17:06:35Z
762485a0c9655f7599720e67d3759d3fc9650637,remove unnecessary transient,2014-09-16T16:59:25Z
c1a0961f989f9bc13f0d6d4a6cc8667e9108486b,"Merge pull request #731 from pdeva/master

Corrected documentation for IngestSegmentFirehose",2014-09-16T16:54:29Z
32942def7634511d8dd8fb5c5040e4168521bfb5,"Merge pull request #742 from metamx/fix-ingest-segment

fix #732",2014-09-16T16:44:15Z
f006de8639371e844451db9024bcf4c8823b45b6,"fix #732

fix metric list discovery",2014-09-16T16:42:36Z
f1e3518f37bd0399246a638adc3790ab07d3a2ca,initialize segment view before announcing broker,2014-09-16T07:07:23Z
a73670ee7b5daa535d03932ea1a856e5540211db,"Merge pull request #738 from metamx/dim-ex

Have better dimension exclusions",2014-09-16T00:14:29Z
77dbac373928243eea06b183bfee3dd522f5ea5a,fix import,2014-09-16T00:10:34Z
f2d6360d4d6148b40bef6011c88b9f814310c844,cleanup,2014-09-16T00:08:45Z
34ae426ffaef3a24d3974735f0e9a264be918d2c,address cr,2014-09-16T00:08:02Z
1ab266277288bed015e0673fa5e58f1bc7d43b2d,have better dimension exclusions,2014-09-15T23:52:07Z
0209b7e44013c785bb6a7ed3e1c4bf6c842cb918,fix bridge port,2014-09-15T22:56:35Z
d674e611de72e8d7e65bb44ffdd4552ae3ee42e6,described how to enable experimental features,2014-09-15T21:41:57Z
02892233acd262547da37fd4d95c52c418df0da3,fix synchronized on field getting updated,2014-09-15T20:56:31Z
7d592939c59ab258f8e92b92ca2b3d8effdade50,"Merge pull request #728 from metamx/reduce-log

make some logs not emit",2014-09-15T20:19:10Z
4b4de83f2123d8bc62ab0cccab9ce19528c3e13e,"Merge pull request #735 from metamx/misc-cleanup

Misc cleanup",2014-09-15T20:18:41Z
aa28bc06130a5cfb595425efb87727d59df098e0,address cr,2014-09-15T20:14:23Z
d501b052ea3e7a314a0b1c7c887e85224b6cf548,remove unused columnConfig,2014-09-15T20:02:47Z
0712c666cbfa5d12cbe0300c4182d2159878ecd8,null check for something that cannot be null,2014-09-15T19:18:01Z
0c35fe2cf428278cdab234cd57fd14a012860542,properly close reader,2014-09-15T19:17:45Z
c8b8e3f6e9dbdad83ad2fc0972380e3dfd60be01,negating compare is bad,2014-09-15T19:17:32Z
137ad50bf14be2c3b17312571914bcf305724938,classes that should be static,2014-09-15T19:16:56Z
e57e2d97ba4c3c94b558af5bc999e50976381544,make constants final,2014-09-15T19:16:31Z
d4795ce9272f2fb71cb79bd91278d98fbf501328,fix missing charsets,2014-09-15T19:15:11Z
d3f04d4fbe04e0444200dd1d59a878b11501cd57,update druid api ver,2014-09-15T19:43:57Z
1615e1ac63fcb21ad9561efd8f6d723c49a177ce,update druid api ver,2014-09-15T19:43:35Z
cfa92e82172edb1642de99c0ff44411f3fb51885,fix incorrect nullable annotations,2014-09-15T19:13:52Z
4a23cd94eff96b9a66283e8c58b02ebaca695a29,"Corrected documentation for IngestSegmentFirehose

Ingest Segment firehose had incorrect documentation.",2014-09-14T18:22:36Z
257fb3f18eba7595c7df06bd2c4bf23c8fe18dd0,fix retry logic,2014-09-12T22:47:41Z
cbf50769618733805b86eb5ea82fc3459b857bda,still propagate log,2014-09-12T18:43:42Z
19bc77134af89a863433d4cac3816ba3f741ecbe,"use hash map and in memory sort during index generation

use hash map and in memory sort during index generation",2014-09-12T18:09:02Z
b94c5f0bd6b23050ae5b751599ddab835f1ec6d6,"use putIfAbsent instead of get and put

use putIfAbsent instead of get and put. reduce no. of calls to mapdb
decreases latency.",2014-09-12T17:02:40Z
e62ed40d869854e9425c8ef3c1f7b9a7427a8ad4,make some logs not emit,2014-09-11T23:49:18Z
469ccbbe5eba0ecd39f2b407d5ba933a9ddbf272,"Merge branch 'master' into druid-0.7.x

Conflicts:
	cassandra-storage/pom.xml
	common/pom.xml
	examples/pom.xml
	hdfs-storage/pom.xml
	histogram/pom.xml
	indexing-hadoop/pom.xml
	indexing-service/pom.xml
	kafka-eight/pom.xml
	kafka-seven/pom.xml
	pom.xml
	processing/pom.xml
	processing/src/main/java/io/druid/query/FinalizeResultsQueryRunner.java
	processing/src/main/java/io/druid/query/UnionQueryRunner.java
	processing/src/main/java/io/druid/query/groupby/GroupByQueryRunnerFactory.java
	processing/src/main/java/io/druid/query/topn/TopNQueryEngine.java
	processing/src/main/java/io/druid/query/topn/TopNQueryRunnerFactory.java
	rabbitmq/pom.xml
	s3-extensions/pom.xml
	server/pom.xml
	server/src/test/java/io/druid/server/initialization/JettyTest.java
	services/pom.xml",2014-09-11T23:20:50Z
e0c167753e119de63fefdfd2600c5ea08ed14ec4,Merge branch 'offheap-incremental-index' into mapdb-branch,2014-09-11T18:03:01Z
c39eaf870b569ee3c0ae2b2dc1a5f78e49c537e0,TimeAndDims optimise to store indexes,2014-09-11T10:43:37Z
32e256a842da0f6acb724c1dec06be5c77758463,[maven-release-plugin] prepare for next development iteration,2014-09-11T00:24:15Z
f7dc13d2400a2c8623b63b103481bc2503a5918a,[maven-release-plugin] prepare release druid-0.6.153,2014-09-11T00:24:11Z
fec7b43fcb3f572051944662ceccdd4e81bd7a1c,make making v9 segments something completely configurable,2014-09-10T22:28:30Z
2e3be39048ed728636e4354cdbd14bcf18307879,Merge branch 'offheap-incremental-index' into mapdb-branch,2014-09-10T05:36:54Z
351afb8be7da1fe93fc86dddd100974a58be8aba,allow legacy index generator,2014-09-10T00:04:35Z
62b0e21c565e5933d92a25afba8386b75d3d7385,"Merge pull request #725 from metamx/fix-missing-context

fix for missing context when embedding broker",2014-09-09T21:42:00Z
d6f6a59ae28fe27e49614c1ad497d5c701442339,fix for missing context when embedding broker,2014-09-09T20:28:08Z
609887887e3352116c360577491fcf993295cf37,updated env when we are local,2014-09-09T20:29:42Z
ae2a09ab5e24c7768e69f80793f5d6eaf03e424f,added new console,2014-09-09T19:44:57Z
47b52aaae17e4301d421e5b8abc8027e3e9ca204,moved old console to old-console,2014-09-09T19:44:30Z
2b3ad4d742b1001fbfb469747c27e538a1a78f72,"append a random UUID to map name

avoid collision with dimension name",2014-09-09T17:50:19Z
fff16b613b6c976317194a223d8b2ce85b61968f,update link,2014-09-09T17:12:13Z
e7a5a01f7bb005278a20d4564f4b7727ea74c361,cache size locally,2014-09-09T10:32:50Z
178f002f05d7a52a5a583b336a8a498dea8924a8,indexing working with mapdb,2014-09-09T10:29:33Z
17b6ed2cbe622595ed1ec4bde100c9e980bf94af,fix docs deploy,2014-09-05T18:44:34Z
958f2f9abd6739d8baabaca7b93c4392f3839c68,fix docs versions,2014-09-05T18:40:51Z
22553b0b28eb04cc13427646fd2854ca411b7df6,[maven-release-plugin] prepare for next development iteration,2014-09-05T18:07:22Z
570a7a07bf28b766ee92870fdd5b052a1095e280,[maven-release-plugin] prepare release druid-0.6.152,2014-09-05T18:07:14Z
c255bd76a989fa712005767f74da51e2f8f15fb3,add a test for the previous fix,2014-09-05T18:03:35Z
5dd23b19c38d25bbe39f6f7ed14f7a38792ed604,fix interval start before end in TimewarpOperator,2014-09-05T17:55:17Z
280681e84bd6cf6887048daf1276fed38bd3daf6,add option to generate only api or only docs,2014-09-05T00:01:49Z
963a44a8d4093e44a1edca853e3e18aa80ab08ae,Merge branch 'master' of github.com:metamx/druid,2014-09-05T17:15:47Z
eecda349402240070f7af7cabd58beed65d17e53,fix tutorial with msg that no longer exists,2014-09-05T17:15:37Z
f0d67fe873b02c663a1ea925dc305f7db8303d6a,deploy api docs,2014-09-04T22:41:15Z
e24be03a3853c336e188057cba5137641f45691c,[maven-release-plugin] prepare for next development iteration,2014-09-04T21:10:13Z
a933ea186655a906f093c9621e2317cd9dd885be,[maven-release-plugin] prepare release druid-0.6.151,2014-09-04T21:10:09Z
3c131f4d135ff4f35bf12cfda3afb86ec06633a1,update version in docs,2014-09-04T20:47:25Z
c4c54f7bc9ba97fd7e0320452daa211f0e6ccb0d,"Merge pull request #721 from metamx/fix-union-query

fix Union Query result merging",2014-09-04T19:20:19Z
0dec5826ed32dda48262450122ab3063bfee4c7c,remove unused imports,2014-09-04T18:37:42Z
90632ecf3af74af063e8a0172b67fb02b39c5dab,review comment - have separate methods,2014-09-04T18:33:36Z
f473e62f1ffdf0395d35f3db9b1fa88992ee4b48,"Merge pull request #714 from metamx/cleanup-javadocs

Cleanup javadocs",2014-09-04T18:28:10Z
6e75cb755de049e7f2dd48a2652b5bd27fda70aa,"Merge pull request #719 from pdeva/master

clarify division operation in post aggregation",2014-09-04T17:26:42Z
2772a78b3b07a1fbcb92bcb770284e3ce8acdfc6,review comments - move merging to tool chest,2014-09-04T06:01:04Z
268a42bd795258c62e8d5950fac803d0dddf2f84,fix Union Query result merging,2014-09-03T11:08:02Z
a4930375f395b1cf47773c09ecb0727b163b53d0,"Merge pull request #720 from metamx/fix-nested-groupby

fix nested group by with hyperuniques",2014-09-01T12:49:14Z
c056960082fddead6da9c18edbcbefc12a079d13,fix nested group by with hyperuniques,2014-09-01T05:20:09Z
23a2b847033fee63b3b711311ff5ce41e4c18eae,"fix broken link, resolves #718",2014-08-31T21:51:12Z
1bad66c16d211e4dd951a2265df2236cddf348d2,clarify division operation in post aggregation,2014-08-31T16:56:15Z
75134335de5cb732f541f3c2eb1e5cc9a42b5b58,fix last merge from master not being forward-compatible,2014-08-31T05:45:36Z
508e982190af84286a3ae195471cb3f29982d975,"Merge remote-tracking branch 'origin/master' into druid-0.7.x

Conflicts:
	cassandra-storage/pom.xml
	common/pom.xml
	examples/config/historical/runtime.properties
	examples/config/overlord/runtime.properties
	examples/config/realtime/runtime.properties
	examples/pom.xml
	hdfs-storage/pom.xml
	histogram/pom.xml
	indexing-hadoop/pom.xml
	indexing-service/pom.xml
	kafka-eight/pom.xml
	kafka-seven/pom.xml
	pom.xml
	processing/pom.xml
	rabbitmq/pom.xml
	s3-extensions/pom.xml
	server/pom.xml
	server/src/main/java/io/druid/server/ClientQuerySegmentWalker.java
	services/pom.xml",2014-08-31T05:12:05Z
6f45f88f260bf648fc792a0b1c9a9b09358b1713,fix post-aggregations broken link,2014-08-29T23:39:09Z
96d7b1816393e7fa6bd97c0cd15feaf96c151d96,[maven-release-plugin] prepare for next development iteration,2014-08-29T22:29:58Z
860cf36ab17415fc525ad10ea75aaed3f3d3dc22,[maven-release-plugin] prepare release druid-0.6.150,2014-08-29T22:29:54Z
e3324137efceb777fb6bb2181d9ef0fc1b67f963,"Merge pull request #716 from metamx/fix-jackson

ensure jackson injection is available on startup",2014-08-29T22:24:35Z
068a5fe2aabb2badce7fb9c3517bb050704e10c5,"Merge pull request #715 from metamx/aggregator-factory-equals-hashcode

AggregatorFactory equals() and hashCode() methods.",2014-08-29T22:22:00Z
88de45c6955a006c65af3c98f6edba0117fb91a4,ensure jackson injection is available on startup,2014-08-29T22:13:52Z
879e615314510c6ea687144868de66f85c5a300a,AggregatorFactory equals() and hashCode() methods.,2014-08-29T22:02:04Z
58ab759fc6f23c970e09ce6de535e1b19dafdb81,remove unused imports,2014-08-29T20:59:03Z
ac05836833d6d945d2446bd72a1443dd5d0d6a52,make Java 8 javadoc happy,2014-08-29T20:58:50Z
daca1786311d7c7ff14c8858e2a92899547ab1cb,[maven-release-plugin] prepare for next development iteration,2014-08-29T17:43:19Z
0793a5aee648094880a8c13aacb9cad737b72f47,[maven-release-plugin] prepare release druid-0.6.149,2014-08-29T17:43:15Z
6ffe40dcd822816a3b57254638d11764fad1ac8f,"Merge pull request #712 from metamx/indexing-extra-classpaths

Allow indexing tasks to specify extra classpaths.",2014-08-29T01:15:27Z
8bcb73a0ebd97efcc6f7b1a89ec05668c693910c,Java programs are best run with a java command.,2014-08-29T01:10:01Z
5564a67bfc775ee5b292c4c070b866a77703ff18,"File.pathSeparator is better than "":"".",2014-08-29T01:09:31Z
578ca64e1e7cf98844494cb2352a63e97872bbb2,"Merge pull request #711 from metamx/fix-maxtime-caching

Fix maxtime caching",2014-08-29T01:03:52Z
68aeafaacd493c8037fb16ce5822ecfdd860ed4f,"Allow indexing tasks to specify extra classpaths.

This could be used by Hadoop tasks to reference configs for different clusters, assuming
that the possible configs have been pre-distributed to middle managers.",2014-08-29T00:58:56Z
674e7b04478bee993e4ccd087a27325a21283eb4,add tests for timeboundary timewarp,2014-08-29T00:59:56Z
743a9bfdac594ddbaddb8ce67e2852ff537e8bf1,fix offset and nulls,2014-08-29T00:35:26Z
9f742a87a6afeaeaffc31058e482b7a231cef4de,fix timewarp with different bounds,2014-08-29T00:15:45Z
b0b39d6ec030271459e0d01b6d07c661c8cbe377,fix maxTime caching for individual bounds,2014-08-29T00:14:25Z
08b6a2677d9bd15a8f4a4a921786229fcc8ef438,"Merge pull request #710 from metamx/update-druid-api

Update Druid api",2014-08-28T13:12:57Z
df06874f847d21e6210f78197f56a14e24a3bdd1,"Update Druid api

Fixes DelimitedParseSpec serialization",2014-08-28T12:54:30Z
05224ad905f7cd01874756526ed6a4e5e801ba5c,"Merge pull request #700 from pdeva/master

explain what 'full cluster view' means",2014-08-28T12:33:38Z
1d6842c7f0bcec54e0d5868e15a0d5bae3e5c452,[maven-release-plugin] prepare for next development iteration,2014-08-27T19:22:53Z
575951f99a3b13f150cc13aa9f88e6273c056b2e,[maven-release-plugin] prepare release druid-0.6.148,2014-08-27T19:22:49Z
248e6ed74e38edfe658476c58a91f2d767bc428f,auto-version submodules for release,2014-08-27T19:19:56Z
661e467d71ad194a4926b078de4f07b1bbe191a0,"Fix groupBy/timeseries test, follow up to #705.",2014-08-27T05:36:08Z
0ddf667fefa1ee9113e03d3166efcd53dd6c6256,"Merge pull request #705 from metamx/fix-timeseries-zero-filling

Fix extraneous timeseries zero filling at end of data interval",2014-08-27T05:07:51Z
d15cd8fde7fc762f5c52c68d6b01516992c2cdcd,add some comments about string interning,2014-08-27T00:15:24Z
0eea1dc08d10cd748b8738d8d5dada2a0a217242,Test for desired timeseries zero-filling behavior.,2014-08-27T01:47:52Z
da48a713aeff4ec46267acc79a3c5cdb59c943f2,"Fix overzealous timeseries zero-filling.

When the index's maxTime is not aligned with the query granularity, gran.next
can cause an time extra bucket to get zero-filled. Truncating first prevents
that.",2014-08-27T01:14:34Z
28e3191503fad9694620cad53e110239285008fb,"Merge pull request #699 from metamx/postprocessing-operators

query post-processing operators",2014-08-27T00:23:37Z
e39b6975fa075912acf8a34cd171a5b3ec346df2,rename t to now,2014-08-27T00:16:09Z
6c26c828de0cc51bad51184d8b12f9cefcdc2092,"Merge pull request #704 from metamx/hadoop-cli-coordinates

CliHadoopIndexer: Modify maven arguments to be consistent with pull-deps.",2014-08-26T20:42:01Z
58882752068b841b6737f8e4a8c9734b82089cd1,Repeat less repeatedly.,2014-08-26T20:39:09Z
890ba5a4caba42b6f1bafd56993da89791b0ea3e,Better usage messages for CliHadoopIndexer.,2014-08-26T20:29:11Z
953c8554100230eec3588b36102aea263a9d8af4,CliHadoopIndexer: Modify maven arguments to be consistent with pull-deps.,2014-08-26T19:04:59Z
73623467e75d0502909003a97f3f8c54c033d178,"Merge pull request #703 from metamx/fix-period-granularity

fix granularity for precise periods with non-zero origin",2014-08-26T18:55:51Z
a1c8b23ba7822e20b34b76d063ef848a5d69fc1b,fix duration granularity with non-zero origin,2014-08-26T18:47:05Z
7537cf4fb11bac9efc1bb33c3a2e427931c3d3e3,fix compound period granularity for exact periods,2014-08-26T17:33:59Z
eb7dd6dc7478be3f2815a91355cfe7af71097496,add documentation and tests,2014-08-26T16:44:39Z
7c47c60c4b004e0c1d8c4ecb28d47a8ccebc2196,explain what 'full cluster view' means,2014-08-26T10:02:05Z
b52869ff28df5d5fa9a4e07823910783c6855cc7,default to noop,2014-08-26T00:02:06Z
047f793cb7b3be178e7dab5a0dc3766aae980a77,"query post-processing operators

- Allows post-processing of query results
- Example timewarp post-processing operator",2014-08-25T23:52:05Z
0d32466cad588acdec4ecb65122134096a7f5556,"Merge pull request #698 from metamx/hll-groupby-test

HLL GroupBy fixes + tests",2014-08-22T21:59:02Z
8b79749989d2edcd134a6f1a3a54513db4bf7860,add tests for groupBy caching with HLL,2014-08-22T20:44:18Z
3261fd879a17118dbf8664ceced117a9ecd9378a,fix groupBy deserialization,2014-08-22T20:43:56Z
72eb64a40c7a7f337bcf36928b24e8052d87ceb3,fix HLL equals when comparing sparse and dense,2014-08-22T20:42:43Z
00f7077f504cab23d10ce8df324a21ec273a6380,[maven-release-plugin] prepare for next development iteration,2014-08-22T15:28:56Z
df488563e4803e0d430126e2e7578773b2fd1644,[maven-release-plugin] prepare release druid-0.6.147,2014-08-22T15:28:51Z
7ca3b2d27cf5d72696af6a04fe86052321086300,update docs,2014-08-22T15:26:25Z
172d0b6291cc697ebbf06a331ee661643690f73f,fix cache bug with group by query and uniques,2014-08-22T15:26:06Z
197c80a69418a88d3baa4d0b2c8b056c7b411320,fix logging,2014-08-21T20:40:55Z
12f4147df57593736fb69c17cfad3089eee7f543,switch index gen job to use logging indicator,2014-08-21T20:28:15Z
64ff5f0880525110d2357b5851fb7cbeaae39c91,add back broken synch,2014-08-21T20:20:23Z
e5d1c390fa3fc815ded6e3605e3b5cc51da370ea,add extra logging,2014-08-21T20:17:29Z
df48b48e352a5adab40b4f4368c979bf5bb8a22c,[maven-release-plugin] prepare for next development iteration,2014-08-21T19:50:33Z
4f0b994037e1991fe00b283ba6c79b56c1edee3f,[maven-release-plugin] prepare release druid-0.6.146,2014-08-21T19:50:30Z
85ff054726b02ad64ad6bf0cf8a805e5a05a5a55,prepare for next release,2014-08-21T19:47:55Z
2c5792e2effe8e80fae8fa534666a25d3448fe82,"Merge pull request #696 from metamx/add-test

Add test for MessageTimeRejectionPolicy",2014-08-21T19:44:52Z
4641b3ac1b70069f510060a54638562ef810a473,"Add test for MessageTimeRejectionPolicy

Add test for persist for MessageTimeRejectionPolicy",2014-08-21T19:37:34Z
c216eb73407bc6b5534f93825d41ce69542e4095,remove ThreadSafeAggregator,2014-08-21T18:26:07Z
92b0611afb965522a7dd666a4bcfded6b7c0a489,"Merge pull request #693 from metamx/handle-arithmetic-ex

Handle arithmetic ex - additional commit for PR #692",2014-08-21T06:24:06Z
1f13702525862b895ed643225d84bf9785f934e0,"Revert ""Merge branch 'arithmetic-op-strategies' of https://github.com/metamx/druid into handle-arithmetic-ex""

This reverts commit 5245422a62a2cccb27fef1d719c62bc2126ba5b7, reversing
changes made to fe03476c53cd3e8948368097394cfb1cd75e4e30.",2014-08-21T06:13:09Z
5245422a62a2cccb27fef1d719c62bc2126ba5b7,Merge branch 'arithmetic-op-strategies' of https://github.com/metamx/druid into handle-arithmetic-ex,2014-08-21T06:10:40Z
fe03476c53cd3e8948368097394cfb1cd75e4e30,truncate segmentGranularity,2014-08-21T06:10:30Z
5970b96dc59165055ed82697ab660d1b8e8085e4,"Merge pull request #692 from metamx/handle-arithmetic-ex

Handle arithmetic exception for overlow",2014-08-21T06:09:43Z
8c9d639947ebf2db4f3ac1b71b2343b6c386511b,review comment - better way to handle it,2014-08-21T06:08:24Z
87b83e7bdb6260c1617a5fd4f9e33c72646be7bb,better comment,2014-08-21T04:17:23Z
c48c4ac0f6d18af15334bdbdee2e7b34bfabdd88,handle arithmeticEx,2014-08-21T04:14:55Z
67f4bbae74b45af24146551a3a6208475e3d8f34,"fixes from review comments

fix sync of aggs,
fix NPE in sink.isFull,
RealtimeTuningConfig lower the bufferSize to 256m",2014-08-21T03:54:04Z
d64879ccca9f2b472d60c5db897f003eb83580cf,more cleanup,2014-08-20T20:22:42Z
bb73b2556e95ba75ad6e660ebc11d5b97aee60d5,fix compilation,2014-08-20T20:17:00Z
1614f40f1abb87a72a1882b1e3e05a5f1a83c654,fix index task,2014-08-20T20:11:00Z
92f26d9a1fc7fc59eb06ff4612dca98bb5465cac,cleanup rowflushboundary,2014-08-20T20:09:37Z
8933685884244fb0311d636c211dac5ad8aacad9,log allocation of conversionBuf,2014-08-20T19:41:47Z
fe105d52ee57d4a2939225e0a781d7fb59b4be22,use bufferSize for IndexTask,2014-08-20T17:09:23Z
5dd3a1dea137d6a0400c610c512174bac347f039,Merge branch 'offheap-incremental-index' of github.com:metamx/druid into offheap-incremental-index,2014-08-20T16:49:35Z
fd09b1b5f187d9ba34a5651b3dd2d653b7caea9d,cleanup things according to cr,2014-08-20T16:49:21Z
79ff993b319209afe506be7b946db2ce17bf5957,increase default buffer size to 512m,2014-08-20T16:45:06Z
33354cf7fe4b18b1c69c3177b06c079afef2e284,replace maxRowsInMemory with BufferSize,2014-08-20T15:29:44Z
e525562767edcd45863a350c34372e6446615762,review comments - cleanup ColumnSelectorFactory,2014-08-20T09:34:43Z
60906c324452ef9eda93f3092f58b8eac440994d,"Revert ""make valueType configurable""

This reverts commit 6f60a3f60437ddfff2065110d8622ef218fd4b65.",2014-08-20T06:25:26Z
0c77f549ff83ff631b59145902e8c9bac3310233,"Revert ""return correct valueType""

This reverts commit 0b42ca4c75a451e221bf74d312693f9eead9f945.",2014-08-20T06:24:20Z
88a904e0b367296b12a0e95db14b0b93e78392b2,address cr about progress ind,2014-08-19T19:59:01Z
4fd547955952b6768b240bec1c1e2705b0e922e9,fix typo,2014-08-19T19:34:10Z
0facb4202db43850f7643a905c2898b5c4bf89de,cleanup,2014-08-19T00:22:44Z
3933af79a02cf3bf07a4b71aabdb55bf2401054c,fix small bug,2014-08-19T00:13:06Z
a15d32da9bd433ccce81bfc518e6e26f1cc613b3,Merge branch 'druid-0.7.x' into offheap-incremental-index,2014-08-19T00:11:12Z
c9ce074d84c6a455e53fac0d62a9be9cd0d1dd41,"Merge pull request #689 from metamx/default-host-port

fix test initialization",2014-08-18T20:40:39Z
78054d7f0516424b066fb80208d0c9a59c5d12c9,fix test initialization,2014-08-18T20:37:47Z
8f7c6050f97733a3caa6e7f9d61b3c2ed5b3046d,fix,2014-08-18T19:56:51Z
9ff09ae75acc7c5d1fdfbc289599acbda44cf823,fix,2014-08-18T19:56:51Z
38014fa9649dde15b325f4b30158091db160280b,Merge branch 'offheap-incremental-index' of github.com:metamx/druid into offheap-incremental-index,2014-08-18T18:14:49Z
77e514688a80b5c19ee0f9c80bf3eb59ad682869,Merge branch 'druid-0.7.x' into offheap-incremental-index,2014-08-18T18:14:19Z
74b8adf5b02330dd34a23979f18e1f1097bb8420,"Merge pull request #686 from metamx/default-host-port

default service/host/port for all nodes",2014-08-18T16:52:58Z
4dd01d4eaee26ab188ec4e8af48a7115e90ffb6e,review comments,2014-08-18T14:04:56Z
1fd30ab58852876808f0b3de8bccb4ab392966fc,default service/host/port for all nodes,2014-08-16T00:14:05Z
19f6d3207f8c75cd942cb8bbd1a9453c5115f0eb,"Merge pull request #685 from metamx/metadata-init-tool

add missing tables",2014-08-15T19:53:39Z
17a3e65dc43da8b24e53490fc34a8e37b92ce343,add missing tables,2014-08-15T19:50:30Z
340c9e145804b759c21171174ca351560b545377,"Merge pull request #684 from metamx/metadata-init-tool

add tools comand to create metadata storage tables",2014-08-15T00:36:10Z
6f0e768d8260290896c71041b8b59343283cb2d3,add tools comand to create metadata storage tables,2014-08-15T00:09:12Z
51988be7765eaeb368ed587db113c6c6b59aef6a,[maven-release-plugin] prepare for next development iteration,2014-08-14T21:59:00Z
283002809264f889f111599407a1e02e0647ef94,[maven-release-plugin] prepare release druid-0.6.145,2014-08-14T21:58:57Z
29d14b772ff7e14a9897f2b0354416416de5ec84,prepare for next release,2014-08-14T21:56:27Z
3556db1c2acc667daabe8bde3b8720af5abfba4f,"Merge pull request #680 from lexicalunit/update-cassandra-example

Updates Cassandra example documentation.",2014-08-14T21:48:15Z
56f1d924e3ab3083a04719d80e3c77908214041c,"Merge pull request #681 from metamx/fix-rt

fix some rt cleanup and failure edge cases",2014-08-14T21:45:08Z
4f0f198a008dfa6b5cc5559d991a00ab5f635f5e,add more logging,2014-08-14T21:43:54Z
c36ffd1e553d1abbf1464acd61c8c467c48bc7e8,address cr,2014-08-14T21:39:08Z
71b8db631c430d16aa25e2f870d3085f6d12b9fa,"Updates Cassandra example documentation.

Updates the required properties to enable Cassandra as deep storage.
Also adds more information about how to create the required keystore,
and which properties files need to be modified to support Cassandra.
Also adds syntax highlighting to the provided example code.

Additionally, moves Cassandra Deep Storage documentation out into the
actual documentation hierarchy with appropriate linkage. A stub
README.md is left in the example directory to provide a useful landing
page for existing weblinks to the original documentation.",2014-08-14T16:23:42Z
6ba0a0df8b86dca9fd4d37a496b243f6301ba7ec,address cr,2014-08-14T20:56:36Z
96d5d4a59a6c97477afd1762ecd44fd84a22c572,fix some rt cleanup and failure edge cases,2014-08-14T20:38:32Z
8fabc541f061b8200fcfab6cef00961855786bb3,Merge branch 'druid-0.7.x' into offheap-incremental-index,2014-08-14T18:39:44Z
603152eb184eb2fb7eacf4b76247c5cfb27fd62e,fix compilation with Java 8,2014-08-12T21:02:08Z
18d3acd3a81359c430fdf7f4a61dea63e5acd9a4,fix all manners of brokenness from nulls and empty strings,2014-08-14T18:11:57Z
0b42ca4c75a451e221bf74d312693f9eead9f945,return correct valueType,2014-08-13T13:04:00Z
6f60a3f60437ddfff2065110d8622ef218fd4b65,make valueType configurable,2014-08-13T09:07:57Z
03d7ec04be50fc95bab12f62a525b5f258f47963,make tests pass,2014-08-13T05:25:20Z
1b0a72751ba4d3c9ce79630bbf5e15ee62164133,Add support for LongColumn,2014-08-13T03:22:36Z
1adec2312685df6b7d7d2ebf180aa988fc57e971,some better null handling for MV,2014-08-12T23:40:02Z
b448deeca0ada385e5ae8af374dd0ce08e126ad0,fix compilation with Java 8,2014-08-12T21:02:08Z
161c2f0fffa8c7eb1b60c3a0dc9a3ae00c28600e,"Merge branch 'master' into druid-0.7.x

Conflicts:
	cassandra-storage/pom.xml
	common/pom.xml
	examples/config/historical/runtime.properties
	examples/config/overlord/runtime.properties
	examples/config/realtime/runtime.properties
	examples/pom.xml
	hdfs-storage/pom.xml
	histogram/pom.xml
	indexing-hadoop/pom.xml
	indexing-service/pom.xml
	kafka-eight/pom.xml
	kafka-seven/pom.xml
	pom.xml
	processing/pom.xml
	rabbitmq/pom.xml
	s3-extensions/pom.xml
	server/pom.xml
	services/pom.xml",2014-08-12T21:00:21Z
4e3f4fbc22ff7d1ca535089b17aa04cef19c3ae0,[maven-release-plugin] prepare for next development iteration,2014-08-12T20:24:55Z
f3aafc246c4b920eec384e328085a35f26e5f0ac,[maven-release-plugin] prepare release druid-0.6.144,2014-08-12T20:24:50Z
79f6486b88bc19b0bb0e9d0e2dda49e8b627b171,prepare for next release,2014-08-12T20:22:23Z
d4014c6a4e30da14435f21466526570cc5d21619,"Merge pull request #675 from metamx/slimmer-column-cache

reduce object count overhead of column cache",2014-08-12T20:16:33Z
578e0b4fb65dd6676a5bb3982e888ff020740d81,add more logging for groupby caching,2014-08-12T19:35:39Z
f36d030ef20e9cf810ae229fa673b61ee6f69271,fix NPE while indexing,2014-08-12T19:24:31Z
1c244c8be837e76905c8175fc6c6f6ecc7d47387,add column cache docs,2014-08-12T17:40:09Z
c6712739dc499fbae8cdfd063ef9931626675626,merge changes from druid-0.7.x,2014-08-12T10:17:42Z
9598a524a8bc59ddf772d73a2ccaee20437995ce,review comment - move index closure to finally,2014-08-12T09:28:55Z
a1bcff49c5404676210d02b9cec1035ed5d101d6,disable column cache by default,2014-08-12T01:10:33Z
69f4c2677f8a461d101ce1080e101478e8b61109,formatting,2014-08-12T01:10:19Z
da399724ebf9d4a3752b8f5d0f94e84f2cd1f954,add approximate object overhead,2014-08-12T00:05:41Z
aecf4491be8663d10c67881ae055d7b1daffa2a7,reduce object count overhead of column cache,2014-08-11T22:25:14Z
b7409873812c98c29fd3dd91f0e5623fc50b5079,"Merge pull request #616 from metamx/jisoo

add retry feature on broker side; modify QueryRunner inferface and tests",2014-08-11T21:36:16Z
7dba576ed7281cd3c90dd09452aa4b27d7eb9f3d,"Merge pull request #600 from metamx/new-init

Properties module can now take multiple properties files",2014-08-11T21:29:26Z
d082718ed2aadf1872edfc8e2e6fbf84e1a2b874,fix assembly file,2014-08-11T21:28:44Z
2ecd55bae5c762a06d10bf5e3328fb6135019c1d,"Merge branch 'druid-0.7.x' into new-init

Conflicts:
	examples/config/historical/runtime.properties
	examples/config/overlord/runtime.properties
	examples/config/realtime/runtime.properties",2014-08-11T19:47:38Z
424dfa7ee7094fbb35f0173a15433d7e70706d57,Merge branch 'druid-0.7.x' of github.com:metamx/druid into druid-0.7.x,2014-08-11T19:36:03Z
70b86c5551953ae47e4e54725b75d5209e36a3b5,"Merge branch 'master' into druid-0.7.x

Conflicts:
	cassandra-storage/pom.xml
	common/pom.xml
	examples/pom.xml
	hdfs-storage/pom.xml
	histogram/pom.xml
	indexing-hadoop/pom.xml
	indexing-service/pom.xml
	kafka-eight/pom.xml
	kafka-seven/pom.xml
	pom.xml
	processing/pom.xml
	rabbitmq/pom.xml
	s3-extensions/pom.xml
	server/pom.xml
	services/pom.xml",2014-08-11T19:35:47Z
0cff63c7c61725d0a0aa784cbfcbf20000be8887,[maven-release-plugin] prepare for next development iteration,2014-08-10T02:36:11Z
724562b18106479d7a9e31c6df455dfd9daac7f8,[maven-release-plugin] prepare release druid-0.6.143,2014-08-10T02:36:05Z
bd98e0dd29273e3df9c0daa5cf0c71d914866e05,prep next release,2014-08-10T02:33:31Z
0e1a8f6f02a9afafc6d58143c6a963b5e4f556a1,"concurrency my old foe, we meet again",2014-08-10T02:33:07Z
d58ae945a4d64d6b33b9a6a46c02fd90eb3a5a7e,[maven-release-plugin] prepare for next development iteration,2014-08-08T23:22:38Z
d2404791330a3a5637b95e7a696e03bb8e1efaab,[maven-release-plugin] prepare release druid-0.6.142,2014-08-08T23:22:34Z
8998700760327ae89c1bab85f6f4519e425ad506,prepare for next release,2014-08-08T23:19:45Z
199f2b1683a9f7f31f78e9bf1a9fd845dbb023bf,[maven-release-plugin] prepare for next development iteration,2014-08-08T22:53:53Z
29a077d893e795f7f4ca32b94080de65d6ff2d80,[maven-release-plugin] prepare release druid-0.6.141,2014-08-08T22:53:49Z
8e87cae990ef2f1b24fc69b685bb120408625a61,prepare for next rel,2014-08-08T22:51:22Z
e5896f486393e1940ba4d3c9218bce194ca1abc5,fix yet another bug with LQP,2014-08-08T22:50:57Z
958792db5c3b7846b2e62f02bf8eb39163bc7002,[maven-release-plugin] prepare for next development iteration,2014-08-08T22:16:38Z
4482e1b7d8ae6cbff4dac686f09f4cbb083de90f,[maven-release-plugin] prepare release druid-0.6.140,2014-08-08T22:16:34Z
c866a7f1183b5439f5f6cb430969ef7244b5897f,Merge branch 'master' into druid-0.7.x,2014-08-08T22:12:56Z
9a371f3490592d2811aaf3899fc8a1015f8d711b,"Merge pull request #674 from metamx/fix-arbitrary-granularity

fix missing queryGranularity in ArbitraryGranularitySpec",2014-08-08T22:12:24Z
3826b1d976627d2f1673a2cb2d91a15c046fb272,fix missing queryGranularity in ArbitraryGranularitySpec,2014-08-08T22:11:35Z
68827ff88be57aadaae5a15be601c8c20afe98bd,fix another bug in LQP with concurrency,2014-08-08T22:06:03Z
35937132a77576916eebade4e0e63082d7ae3eb9,prep next release,2014-08-08T21:35:22Z
48b99e43fca1306ba54dad61bdacd4259673552b,fix LQP register callback,2014-08-08T21:34:54Z
d198959c606cdd0613760c407e914c269ccacb97,fix test harness,2014-08-08T21:05:10Z
ddcea18631782b140e600d6a9afa55174dc5627a,fix dependencies,2014-08-08T21:02:14Z
c860de43cfeaa6500420e0739aa0c071c76f88a6,fix dependencies,2014-08-08T20:46:25Z
ab5c529ad64493618aa398bb3fc34df4eb4c758c,Merge branch 'druid-0.7.x' into new-init,2014-08-08T20:45:37Z
21887906fbde68477feb62911873dd258d2064c3,Merge branch 'druid-0.7.x' of github.com:metamx/druid into druid-0.7.x,2014-08-08T20:45:04Z
263463dccc27d9ae2fb6ddc8475a98b2fc2d9752,update pom~,2014-08-08T20:44:44Z
4af6a05378fdacb3ae3660e2ef5a91dfbf70d117,"Merge pull request #632 from metamx/lz4-compression

Change default column compression from LZF to LZ4",2014-08-08T20:24:00Z
f3970bb1d81ae42540b15bc306b1204946e481fb,"Merge branch 'master' into new-init

Conflicts:
	examples/config/historical/runtime.properties
	examples/config/overlord/runtime.properties
	examples/config/realtime/runtime.properties",2014-08-08T19:44:29Z
5c3d8b66dee2676d3cb2ca924b066e30c65bfba8,Merge branch 'master' into druid-0.7.x,2014-08-08T19:41:49Z
05b791376be55ddf3667450a763fd9635e41cb5c,add note on filing bugs,2014-08-08T18:41:26Z
74646f18f4b5aa620aab701814e60142e130c3d4,[maven-release-plugin] prepare for next development iteration,2014-08-08T18:40:52Z
78c7140b529b9773a51df5a9369d4f1560cd8a47,[maven-release-plugin] prepare release druid-0.6.139,2014-08-08T18:40:46Z
bb44056810f6863ff095d7f39969a1f4ddd4bd68,prepare for next release,2014-08-08T18:38:17Z
038f2de49688e7808943875ff15bd1b81e882b1d,"Merge pull request #672 from metamx/router-strat

Add more config to router strategies; fix bad test",2014-08-08T18:37:35Z
9803be75297d699f9f6ae5d6494d5efc6ed24a66,"Merge pull request #673 from metamx/rt-plumber-merge-behavior

Change merged-segment-removing behavior in RealtimePlumber.",2014-08-08T18:24:23Z
179170224d6f8b547a7b6ba2c2fe3d1b17bde65b,Fix conditional.,2014-08-08T18:20:36Z
f547049929ff97decdad6fbb5730aac8f41463a2,"Change merged-segment-removing behavior in RealtimePlumber.

Old: Merged segments are deleted upon successful push, or on IOException.
New: Merged segments are deleted on any Exception, but NOT successful push.

Deleting a merged segment means that the next merge-and-push run will try to
push it again. So we want that to happen if there was any sort of Exception.
We *don't* want it to happen if the merge-and-push was successful, since in
that case, we are just waiting for historical nodes to load the segment. It
might take a while, but there's no reason to re-push while waiting.",2014-08-08T17:59:16Z
a855db21705fcf2019193161452d2c041985963c,make things immutable,2014-08-08T17:53:10Z
d2c7a67a0ce1ef811af9d497cea597697d2d4cc4,clean up some redundant code,2014-08-08T17:52:05Z
f1409f751a94e935f116cf2eb3732b56c128b501,fix bad defaults,2014-08-08T17:46:36Z
d4cf2763ac7491309ab5775526755b29e5e67823,fix test again,2014-08-08T17:45:59Z
8877ee97143e1eed99029be50bc62cc25c86d7e5,fix test,2014-08-08T17:43:50Z
b3eb4cc5dac2d3fcee87394bf841a243bf0ccbe4,fix defaults,2014-08-08T17:42:58Z
627447c6f8715a61d5b91a58b0312ad7c61bc028,add more config to router strategies; fix bad test,2014-08-08T17:41:11Z
3b6bc48a5108b7e8ae56a21973a1d6be1f24c4f2,"Merge pull request #670 from metamx/fix-deadlock

fix deadlock condition that can exist in the coordinator",2014-08-07T23:40:16Z
08c7aabb344e928f56afce4a7681c5bb5816c19d,fix deadlock condition that can exist in the coordinator,2014-08-07T22:55:25Z
91ebe45b4e9ec33f60e34a297cb301828210cc23,support both rejectionPolicy and rejectionPolicyFactory in serde,2014-08-07T17:06:27Z
0bd871e4f50888c68981509ef8f771cf74af9f0e,"Merge pull request #663 from metamx/fix-obcs-cache-key

Fix OrderByColumnSpec cacheKey.",2014-08-07T16:41:37Z
889c85c64fd0b8afd2ef7269373ce0295d819c0a,Fix OrderByColumnSpec cacheKey.,2014-08-07T13:53:34Z
6fa611c2620d285934b5abf6feda832ccc1a3543,refactor FixedSizeCompressedObjectStrategy,2014-08-06T23:13:39Z
991e1828b05326eb2865929f3f0623108e79b0a5,"make LZ4 the default compression strategy

- LZ4 is now hardwired to be the default strategy
- Rework tests to test all available compression strategies",2014-08-06T22:50:04Z
7624bb5ea3765c02a464bb65322f616167c8bd2c,"Merge branch 'master' into new-init

Conflicts:
	examples/config/historical/runtime.properties
	examples/config/overlord/runtime.properties
	examples/config/realtime/runtime.properties
	processing/src/main/java/io/druid/guice/PropertiesModule.java
	server/src/main/java/io/druid/initialization/Initialization.java",2014-08-06T22:47:22Z
b692b2b4919e1191818d668fb07b8cf5cc87de4b,Merge branch 'master' into druid-0.7.x,2014-08-06T21:33:42Z
e980904470267d7af340f6418333d60672b5d8f6,"Merge pull request #662 from metamx/cleanup-cleanup

separate cleanup of overshadowed vs. unavailable segments",2014-08-06T21:33:24Z
87fc354237784f3b218418150167d9375119d73e,rename CleanupAvailable -> CleanupUnneeded,2014-08-06T21:29:00Z
70660ad295d745d41a58de9ee0148813d4e1209c,separate cleanup of overshadowed vs. unavailable segments,2014-08-06T21:06:52Z
9f4dd7b33e75bedf73f7fda68132f31aee39b4bb,[maven-release-plugin] prepare for next development iteration,2014-08-06T20:34:04Z
aa5cb91618c83e44e5ec4bdbbc28588cc254e4cd,[maven-release-plugin] prepare release druid-0.6.138,2014-08-06T20:33:59Z
57a979ef19a1bf05d9727ca4f4277ba1c55661e5,prepare for next release,2014-08-06T20:31:27Z
8b6f030ad59dd96094b7ab8905e23d3542140a95,"Merge pull request #661 from metamx/drop-remove-stuff

Coordinator drop/remove related stuff.",2014-08-06T20:28:23Z
6e33cd4e0adc340e352f80636d34bdc89054825a,"Coordinator drop/remove related stuff.

- DruidCoordinatorCleanup should wait for availableSegments to populate
  before dropping any segments.
- Clarify that millisToWaitBeforeDeleting applies to ""removing"" rather than
  ""dropping"" segments.
- LoadRule shouldn't need to wait for the deletionWaitTime before dropping
  excess replicas.",2014-08-06T19:52:09Z
eadbcd1b1d8466f8bd11096fcf748f79fa136cf3,"Merge pull request #659 from metamx/fix-metrics

Separate query metrics into scan/time and query/time",2014-08-06T00:02:40Z
4d4c6b891e45daa2e4c1b368c0a362179ce126c5,address cr,2014-08-05T22:58:42Z
d73492bf0f6f45c962642865ebd7bcfc2dc4f0ec,add missing final,2014-08-05T22:51:56Z
8097e049384c34c750b031059ac6774a2b2943cb,fix naming,2014-08-05T22:48:30Z
3a78960e653a9579ca3183863fd7b783085676b3,Fix how metrics are emitted from servermanager,2014-08-05T22:47:30Z
66225d698f85a235ad87ec3fd5169236fbbdf052,fix stupidness with spatial indexing,2014-08-05T22:07:56Z
c58a316437bc9b2772c133857c8352e29f03bddf,Need more synchronizing in DruidDataSource.,2014-08-05T20:32:40Z
6f58cd115652875f24af4e690f77185b72ad2bc5,fix merge conflcts; change test files,2014-08-05T00:45:56Z
faf50aa79982749257c1eb41239017a0e9d85a47,Merge branch 'master' into druid-0.7.x,2014-08-05T00:01:33Z
290982433b4edc739245abba3e0990c66d523d7c,"Merge pull request #657 from metamx/only-uncached-query-metrics

Only emit query metrics for uncached queries.",2014-08-05T00:01:18Z
6c8222788b1ec7ea1d26425a7d9c573cbfd5439e,Only emit query metrics for uncached queries.,2014-08-04T23:42:38Z
e4a3108f14564e93fc07c6190c3aaadc3243743f,"Merge branch 'master' into druid-0.7.x

Conflicts:
	README.md",2014-08-04T21:36:01Z
8f615212a9056d9bfdafa15297718c9c95f90dba,new deploy script that automatically submits a pull request,2014-08-01T22:42:22Z
91fc5fc82db93a85e18b26a48b07925a93616f90,reformatting,2014-08-01T22:27:38Z
a0a12f59890f00a7f49b1fae9d14c4951f47ba0d,remove css from docs,2014-08-01T22:24:07Z
cd5ccc39fb78fdf4ea880d02d1c574dffc5cc635,updated deploy script,2014-08-01T22:12:00Z
6d48ffddc5fedf1dc7f34b5ba92f934254c173ab,cleanup build script,2014-08-01T20:49:06Z
2d0b47897710a0133bdb80a7ccf1036290862389,add codestyle jar file,2014-08-01T20:29:12Z
305e159c93ca7ed1c9ea600b3f2252df3ff155d2,update readme,2014-08-01T20:27:11Z
bd1e25363af4757c3107258aa1288d29e72f707c,rework the readme,2014-08-01T20:24:12Z
8de945ee24d219b71694221256b46e78f05c1695,rework the readme,2014-08-01T20:24:12Z
1cfabc127f491d7903d544830d56490a8982832a,Merge branch 'master' into druid-0.7.x,2014-08-01T20:02:22Z
e158aa30a72f0022e072247a6925654b956504bc,add timeboundary docs,2014-08-01T17:43:18Z
65b8278add8624f6d62fef9c50a8d4b5167b75e6,[maven-release-plugin] prepare for next development iteration,2014-08-01T17:14:34Z
0ecbef6c5dbb865fc3d4ad030ee28c72fbddcf12,[maven-release-plugin] prepare release druid-0.6.137,2014-08-01T17:14:30Z
362be7a2c09cd464719e11b57e2223e50484a97c,prepare for next release,2014-08-01T17:12:03Z
046e8864b16e7df12df9fd5ed73476d14b16293d,more docs,2014-08-01T17:10:17Z
2667cd518819dad0636c87df44799ea02c53d977,cleanup docs template for preview,2014-08-01T17:01:11Z
b44546ad8c302fb003d7616ec0d2e8ab4a2ed7b1,query cancellation/timeout docs + missing items,2014-08-01T16:47:12Z
90ebeaa8d33a31a61468dd8acae33a3934d126fa,fix broken approx histo doc,2014-08-01T16:42:52Z
fd0c738221d82784f9c5ce230951a808d9ffe1a6,"Merge pull request #654 from metamx/ingest-firehose-doc

doc for IngestSegmentFirehose",2014-08-01T16:31:12Z
80a4f7c5b5e70c8014a3c5c4b8b113287b160b57,doc for IngestSegmentFirehose,2014-08-01T11:13:39Z
d202eae3b5fe76c08cbd402ac7573d1fe6e5c776,toc fix,2014-08-01T00:27:16Z
611dcb9d1c16702a2aabb57a287c57a0e79366d3,"new docs on logging

Conflicts:
	docs/content/toc.textile",2014-07-31T21:47:44Z
17c600c691cc46fa22020e3602e42ce83f4b3c82,some doc fixes,2014-08-01T00:25:30Z
37f3cb38db1d9995623df850e7ec68cbae9e5275,fix to string error,2014-08-01T00:08:08Z
872a699142df889f62834c5a3db39462b27b8173,another log fix,2014-07-31T22:36:01Z
a5bc6fc706bf3f372577b98d7f8deffa0bf61413,fix to string error,2014-08-01T00:08:08Z
93afc26d92f2b2d0e15510e6c9aaf865f398522c,another log fix,2014-07-31T22:36:01Z
6fa1dfe68f01b312e2413d48d383a19d3aef7ad7,new docs on logging,2014-07-31T21:47:44Z
bf8c24f88d672e892d030f17fd30bf151d640723,[maven-release-plugin] prepare for next development iteration,2014-07-31T21:08:38Z
66020fc2b6c988186c5a1974f484f2302744f1cd,[maven-release-plugin] prepare release druid-0.6.136,2014-07-31T21:08:34Z
e5ce9b4a2ad576f82f46339470b6c6c7e2222804,prepare for next release,2014-07-31T21:05:56Z
1c4d8c55dc4cc28badfb2ccb4ffe074e70c00f8d,finally track down and fix the node exists problem with not deleting noop requests,2014-07-31T20:56:29Z
32bd7003ec810c292c90b743dfbdbcbcd55d3ebf,minor doc fix,2014-07-31T19:58:19Z
147f5754da13c84918d00b6b399cc6867047c6eb,add missing doc,2014-07-31T17:23:48Z
32b9290723eb8577304a9b0ef5978ae48ab4a1a4,fix compilation,2014-07-31T10:50:58Z
637bd3578575901c7211e6d8f9fcaebe1a59692a,merge changes from druid-0.7.x,2014-07-31T10:37:22Z
a8c8e4cb5142a805d2464f5f9e4226d2c0729512,[maven-release-plugin] prepare for next development iteration,2014-07-30T05:03:14Z
25eda62a0cf7ec71632b6d9f7db892811cdac9e2,[maven-release-plugin] prepare release druid-0.6.135,2014-07-30T05:03:09Z
625377fdd24083bcce5b4c2517e4337e464b996f,prep next rel,2014-07-30T05:00:11Z
ecbc9eda48422c5ade57a21209f717f6aba24a86,revert breakage to chat handlers,2014-07-30T04:55:05Z
39203009009cc25d4d0f4d142801a22938475bd6,fix router bug,2014-07-30T04:44:07Z
0c898c58d1b20b39340fbee20921440ced161dc0,[maven-release-plugin] prepare for next development iteration,2014-07-30T01:01:06Z
c8244d05d10d2b2e47a8b555081edcba7a70ba81,[maven-release-plugin] prepare release druid-0.6.134,2014-07-30T01:01:02Z
7803ca07e7c9e291003fab3d1878945dc2a76eee,fix broken chat handler,2014-07-30T00:58:21Z
f7319620c4d4d57e2dafd5ed95d2b7ce26490174,[maven-release-plugin] prepare for next development iteration,2014-07-30T00:40:56Z
540a146eaaf21bf271135ab45f8d1cd42cb3a682,[maven-release-plugin] prepare release druid-0.6.133,2014-07-30T00:40:52Z
89149b5fcb6ac7ae7788a9f4ed4c742b584f6ffc,prepare for next release,2014-07-30T00:38:19Z
f577e1e74b31a4a650f1c7b1a7b206c77e13e66c,fix guava version and firehose,2014-07-30T00:23:32Z
b5ecf000ad0c1de8f5f7ce89d708d7e9dc58e900,[maven-release-plugin] prepare for next development iteration,2014-07-29T23:20:14Z
877bd98667dca59c773d15625ed5667540118aa8,[maven-release-plugin] prepare release druid-0.6.132,2014-07-29T23:20:10Z
c89b5a385b9c9ad77988513e5c3f01bbbd74ec74,cleanup s3 pulling logs,2014-07-29T23:17:44Z
43d4e5418a0cccb540051aadfd64e8f0961962e7,"Merge pull request #653 from metamx/override-static-resource

allow overriding coordinator static resource",2014-07-29T23:15:01Z
1586d60ec26b5aec2bc940602ec8f65e9ff25c72,fix bugs in log printing,2014-07-29T23:14:29Z
05a09d255071a28edee4027873b7b79885b5fcc8,allow overriding coordinator static resource,2014-07-29T22:13:23Z
dc38677454ced1c29d7fdf1a480dad863c8ca3b3,remove unneeded dependency,2014-07-29T21:23:50Z
e1d87ed5ea9de4df777a06dd3d88065a8dd71106,[maven-release-plugin] prepare for next development iteration,2014-07-29T21:13:41Z
c46965c52ce058a1d7ed1567506abd7ea15e650a,[maven-release-plugin] prepare release druid-0.6.131,2014-07-29T21:13:37Z
1ac84fcd009675c5d26dd032fcc573952a03d018,some more logging cleanup for zk coordination,2014-07-29T21:07:19Z
d21e377a20eaa0faddaa823b86f857fd422dae30,"Merge pull request #651 from metamx/rewrite-async

rewrite router async logic",2014-07-29T20:56:01Z
25a5a0fd33233343d1398d4572e3b5682a6f93da,fix unnecessary error messages,2014-07-29T20:54:36Z
088e2c5af33210692a240b2b9dc1b0cdd3c6a6d6,address cr,2014-07-29T20:36:28Z
b09517319d5aa07d56161b9c5936328625dd9230,remove debug code,2014-07-29T20:23:12Z
4a417cbcfcd8c8117145e79b395a961880f28881,clean up some logging in Zk coordinator,2014-07-29T18:49:06Z
0be5d27f2aa697cd1fb3e0e1512dab91b04ec701,another docs fix,2014-07-29T18:40:35Z
d9c9190e2f6b26d2dc7e662b9a128d2dd8a8d6b2,fix breakage in batch ingestion schema,2014-07-29T18:36:29Z
41db4b1063f287f64f4d8a6af53d239ee5c70623,actually use the metrics emitting listener,2014-07-29T17:28:51Z
2ad1bd3f4455615e3642994ab836138ba1fa42d9,add back metrics,2014-07-29T17:22:55Z
5c2bfef2e0f727af9f975928d14c5e33fcf59976,Merge branch 'master' of github.com:metamx/druid,2014-07-29T16:51:58Z
382cde9cf27e684f63285ea96800178c5c33ebf1,less verbose logging for LQP,2014-07-29T16:51:53Z
57dae1688bdbb027b589ee76659cf7ca3ee6f798,"Merge pull request #650 from r4j4h/master

Adding Kafka 8 instructions to Loading Your Data tutorial docs to complement the existing Kafka 7 instructions",2014-07-29T00:43:23Z
088c2386dcae2dceb1a717b946a0f5018d8dc342,rewrite router async logic,2014-07-28T23:32:15Z
1844bf4f087f67644fcf2bf00a275b34e63819ba,Adding a section to detail supporting Kafka 8,2014-07-28T21:46:39Z
61af84a4a151582683efd326989844621810c6d9,Cleaning up code sample indentations,2014-07-28T21:44:59Z
df7a39a682e60326a8db7542da54d8f2308e5df1,fix index out of bounds,2014-07-28T16:59:21Z
7aef463457a74bb8b68fb28dacd506af182141b9,"Merge pull request #647 from metamx/better-async

completely async request proxying + jetty update",2014-07-25T23:36:15Z
82d623ada7f4f9bed7548467ea88bcd76b647191,fix compilation error,2014-07-25T23:35:55Z
863929d55025a0a77ea3a2ad7169de9b9f2a35b0,unnecessary arguments,2014-07-25T23:26:44Z
df59d2acb49fd9f9cb23f2017498fa11a55ef585,remove debug code,2014-07-25T23:25:47Z
2d4f1889e879515bf55e4325573ad6174dfc0ef2,completely async request proxying + jetty update,2014-07-25T23:18:27Z
fc95a79abd8dcd58beac9e2b37656f755b2d2032,add query priorities to metric emission,2014-07-25T23:10:55Z
45e443bedbe011fa8df463fb2c77a3cd93fd5e4c,a few slight tweaks and bumping up curator version,2014-07-25T23:07:40Z
7e0fa6fe0666c7607a2a1727d23716083b9888a5,Merge branch 'master' of github.com:metamx/druid,2014-07-25T17:50:47Z
bb5c5b3ce704f87541d92d8adf92646af17bc902,fix config with broker select and add docs,2014-07-25T17:50:41Z
41770574f9d6f3bf75f9286e7d4831a96d642d81,"Merge pull request #646 from metamx/inverted-topn-metric-spec-docs

add docs",2014-07-25T16:30:38Z
d3b920769d0642a6d59ca1a4dcff0709a757b6b8,a few more cleanups to docs,2014-07-25T16:26:44Z
85f739797f43ce708ccfb160af81dd0bac4129e2,remove debug println,2014-07-24T23:49:09Z
9c360146450680cf8133fb25069f145860b5d842,remove css from docs,2014-07-24T21:41:45Z
baeb93772d7800389562fe393dd79873a7e5b786,Rename OrderBy to LimitSpec in docs.,2014-07-24T21:20:43Z
27cda43d89946068bf972173893c6a8c4f05e82f,"add docs

doc for inverted topN metric spec",2014-07-24T07:46:44Z
387350abd8c30349141714fc0e0f742fef233738,fix toc entry,2014-07-23T20:41:14Z
4c6eba9e2ac9f6d551bd0519f498b3908180cad5,"Merge pull request #645 from metamx/smarter-router

Allow router to override selection based on config",2014-07-23T00:10:57Z
fec788f33f004b3b926a9d2ff83c81ffd1951684,"Merge branch 'master' into smarter-router

Conflicts:
	services/src/main/java/io/druid/cli/RouterJettyServerInitializer.java",2014-07-23T00:06:45Z
03efbb0e023d5ddd5c7a9856a16c0ba372c4d028,default query timeout to server idle timeout,2014-07-22T23:56:34Z
e76561e400cfd16b8a3fae375fc8dea1b79445fb,use async gzip filter for async servlet,2014-07-22T23:55:43Z
00f086665cb723248c246f9c793d5e26356b713b,default async timeout to server idle timeout,2014-07-22T23:55:21Z
f847a46ccfda8570ba72e91da9cdd614cc8a5506,fix typo,2014-07-22T22:37:48Z
09e2f13ffcc82cd1fd550a0e34b48d8513c690c9,adding missing header,2014-07-22T17:12:47Z
8f2fc595ee367efc7561644a49e04e1ac59100ba,allow router to override selection based on config,2014-07-22T17:12:02Z
a1ea56ad121e2cc672fd95ffd805322d72ff7a0c,update java util and druid-api to fix guava/hadoop problems,2014-07-21T16:58:04Z
1de0f897185e863a211c4eb6e9426c6eb237a59e,[maven-release-plugin] prepare for next development iteration,2014-07-18T18:55:50Z
39bff5c1c23303284248ec415170ce385072bfd6,[maven-release-plugin] prepare release druid-0.6.130,2014-07-18T18:55:46Z
1fe82c50f1415aae92822030ea965653ed6d785d,"Merge pull request #644 from metamx/rtr-bugs

Fix race in RemoteTaskRunner that could lead to zombie tasks.",2014-07-18T18:44:50Z
09fcfc3b6dd514e70f2e002782e3a6c2d7b49ea6,Fix race in RemoteTaskRunner that could lead to zombie tasks.,2014-07-18T18:37:53Z
9e303527f2230f663034aac7a0321c0bda38575c,[maven-release-plugin] prepare for next development iteration,2014-07-18T18:17:56Z
ea0402277225b73dee41989b0ba0f8e8c242799e,[maven-release-plugin] prepare release druid-0.6.129,2014-07-18T18:17:52Z
b1f5e5c4766c8c5db4e30f57f0e58e296b7287ae,"Merge pull request #643 from metamx/upgrade-jetty

upgrade to jetty 9.2.1",2014-07-18T18:13:08Z
439ff9d5e2ed020c7847dbb0d6f797fdb63c6946,"upgrade to jetty 9.2.1

Upgrade jetty version
- supports Java8
- Async I/O Proxying
- other jetty bug fixes",2014-07-18T18:10:38Z
5d53b14bd2d4e4e3d286d384ae97416f0480c070,"Merge pull request #642 from metamx/numShards-IndexTask

Add way to skip determine partitions for index task",2014-07-18T18:01:31Z
2be4c04b1ab50856b1f57eabbb8d5f37d0867fe7,"Merge pull request #629 from metacret/ISSUE-628

AWSCredentialsProvider for s3-extentions",2014-07-18T18:01:19Z
9cec7107a9fa09b42ebc992567ce52efde77ea85,Properties.load instead of manual population,2014-07-18T16:50:15Z
4ce12470a198bcebaee6db31cae93fed675c9e93,"Add way to skip determine partitions for index task

Add a way to skip determinePartitions for IndexTask by manually
specifying numShards.",2014-07-18T13:22:15Z
64307766073a16a673d938cbf00ec86c188caf49,"Merge pull request #641 from metamx/cleanup-ingest

some minor cleanups to ingest firehose",2014-07-18T03:28:12Z
d8b8826c2e524aea0723796c891353999e4aaf49,"Merge branch 'cleanup-ingest' of github.com:metamx/druid into cleanup-ingest

Conflicts:
	server/src/test/java/io/druid/realtime/firehose/CombiningFirehoseFactoryTest.java",2014-07-18T03:26:11Z
291f4c00ae90563122fbc56fb0c2c83e9d44325d,Merge branch 'master' of github.com:metamx/druid into cleanup-ingest,2014-07-18T03:24:59Z
0e0454a34cb52331e427e19c0754e7b5c7f47c3a,"switch reingest task to noop & fix compilation

switch back to noop task, its confusing to have a reinvest task that
does nothing.
fix compilation",2014-07-18T01:20:58Z
ded83557dd2f9f819fd1528c3356b812d620fd18,"Merge pull request #640 from metamx/disable-worker

An alternative way to disable middlemanagers based on worker version",2014-07-18T01:07:27Z
beac0be45b6c3893ace90020a7916ccc48caba0d,fix enabled endpoint,2014-07-18T01:04:36Z
95a09c04bfac6ec0f0fe419920cd2f9b70d84310,log errors in asyncForwardingServlet,2014-07-17T23:22:30Z
83cb7931ac531debec560d4e6e471a70ace4922e,add more stuff to docs,2014-07-17T21:59:56Z
d765ff5e75245d4628efc0d85b88fbd50ef6ccfe,docs for updating,2014-07-17T21:53:26Z
465ac77b824dd906200a839f77ea084ef06526e0,fix broken UT,2014-07-17T21:39:52Z
76f096e667f3835ccfed2b2ff234e515a7244e88,Merge branch 'master' of github.com:metamx/druid into cleanup-ingest,2014-07-17T21:38:54Z
8ef380b3f953e40d12c76231a5f298c29af97532,"Merge pull request #638 from metamx/rejigger-cache

Rejiggering the cache",2014-07-17T21:19:23Z
bb5598df541ecdbbf28aa9fa917da137840ecd3e,fix doc,2014-07-17T21:07:12Z
ef325f15ff70a48ca5faa4436a4ddbfc490a8886,update pom and fix broken UT,2014-07-17T20:47:59Z
c6078ca841d3ebec4ccf2f7a09b4d9a00193ee58,address code review,2014-07-17T20:34:05Z
ba978d8b795914055ee0737acefe3f3fdb8d39e4,some minor cleanups to ingest firehose,2014-07-17T20:05:59Z
bc650a1c80befa0d5c549c2e9efdb9a02e7828c9,"Merge pull request #627 from metamx/druid-firehose

Functionality to ingest a Druid segment and change the schema",2014-07-17T19:41:16Z
5197ea527ac096a0380ab6f759f05eab7bc677db,disable middlemanagers based on worker version,2014-07-17T19:35:45Z
e59c9ebdbc96f6debbe6edccb7275cd23b4acb51,"minor fixes

fix IndexOutOfBoundsException
fix ingestFirehose",2014-07-17T11:54:57Z
831d4e95152ac00bc33e515a343eefd2db6dd1dc,update README,2014-07-16T22:38:30Z
bf71d079f373a5f8761acb186472f89259612b5d,fix #636,2014-07-16T22:20:20Z
b70a6b106139064dd65daa59f84207e4824fffca,address code review comments,2014-07-16T20:52:06Z
de8cb5526096dd7c5a01f0122dac9f64c23899ae,"Merge branch 'master' into rejigger-cache

Conflicts:
	pom.xml",2014-07-16T20:37:20Z
0f3c474dee7f0fd7725865c491eec6064316cbfb,Merge branch 'master' of github.com:metamx/druid,2014-07-16T05:50:46Z
534acc9eab8748d0131174ec478bb40ab1f65f41,fix mm,2014-07-16T05:50:38Z
b74845e94293e619fc6d26d8a70c4088250834a1,"fix test

committed it by mistake.",2014-07-16T04:09:51Z
935b642b2cf6ae58bbee2d6251b9c9ec659ba673,fix overlord binding problems,2014-07-15T23:13:11Z
27c47507803729774b54977844d54495cfcb5b3b,fix infinite loop in test,2014-07-15T23:00:56Z
bdfeccd092b3e0155715d338d851452f90c2eba9,doc and timeout fix,2014-07-15T22:57:58Z
6961abaa61761ae168ba369da74be3dd7dae5b4c,"Merge pull request #634 from metamx/shardspec-optimization

Add ShardSpec Lookup",2014-07-15T21:10:24Z
2f90bfcf9a75902906e14efde05c752788b963fc,rejiggering the cache for groupBy and select,2014-07-15T19:12:33Z
12bc3ac27bed120cb17bca69a719a044cbcdee3c,fix broken S3 moving test,2014-07-15T17:58:46Z
f2e0dc9327aaacf8ca479b712eb40c04cbde7cab,"Merge pull request #637 from metamx/fix-s3-storageclass-check

fix storage class npe",2014-07-15T02:23:56Z
f56d60b4511d15c3caaeda1dee56b8deb3f14c4b,fix storage class npe,2014-07-14T23:24:01Z
972c5dac31b68fc321cb2a408a516daadb6b9095,improve memory usage and rename firehose,2014-07-14T15:47:53Z
f5f05e3a9be910c50c62159b1a046cef309126ce,"Sync changes from branch new-ingestion PR #599

Sync and Resolve Conflicts",2014-07-11T10:45:10Z
a31376ee8371a62a092662c04ddde3a360d0d009,point to correct version,2014-07-10T06:53:20Z
a12688bc8bab700899af0a525a76c22d79aceab8,fix partitionNum calculation & remove extra sorting,2014-07-10T06:51:27Z
fa43049240e69b9a4dfb344b97f762d57fabd3fe,review comments & pom changes,2014-07-10T06:18:46Z
193c7259f6ce3155f8a38343be3976ee22763f43,refresh thread should be daemon,2014-07-09T22:52:17Z
7a7386be74247dbfc42963dac491e8fcddad7eeb,"Merge pull request #633 from metamx/remove-config

Remove redundant forking task runner config",2014-07-08T18:30:40Z
7168adcca7be87a8d91882fbebb96b296bd7381b,Use Ingest task instead of Noop Task,2014-07-08T15:50:17Z
a1a5e4254fb54f20a0f1432fcc879b650ebcbec2,"CombiningFirehoseFactory

can be used to ingest data from multiple sources.",2014-07-08T15:44:48Z
36fc85736c3f4233dee9f28894b95e82467c34c6,"Add ShardSpec Lookup

Optimize choosing shardSpec for Hash Partitions",2014-07-08T12:31:31Z
3a849b03416f2be9cd81460c3841b3fa40464309,update refresh manually every hour,2014-07-08T06:11:08Z
ce478be8992c26220d9a34992198968210640976,Remove redundant forking task runner config,2014-07-08T00:08:37Z
c4397bd65abb6357ae35e61db4904d4931ca844c,fixed merge conflicts,2014-07-07T18:26:11Z
c40a315c819ac472605837c6d26d8158bc01561b,initial support for LZ4 compression,2014-05-09T01:06:26Z
b8347cf4af247b259cda138a40cf45236528b85f,"Merge pull request #618 from realfun/master

Add HdfsTaskLogs",2014-07-04T20:17:51Z
97b58eb193080df1c8ce84be5e7a768a9a88565d,"review comments

1) Rename firehose to IngestSegment
2) fix segment overlapping, intervals
3) fix overshadow",2014-07-04T07:01:33Z
4ab9af36b0e8aef820d8387af54c98adc6be5818,License header and utf-8,2014-07-03T23:52:47Z
12afaae2dfe18ece0001ce9067c5ae39987b7de7,Merge branch 'master' of github.com:metamx/druid,2014-07-03T05:41:47Z
c1cd9ff2ceb107fe89e885cdac6d2fdec002e0fa,fix broken rename of rejection policies,2014-07-03T05:41:37Z
19494eeb8c7029da2a37631f109c4cbe40214636,"Merge pull request #630 from metamx/port-finder

improve port finding strategy for task runner",2014-07-03T05:41:19Z
518ab473f3ed1046ea5a907bfc0e712109ab4fdb,"improve port finding strategy for task runner

1) Recycle free ports
2) Choose only ports that are free & not used by any other application",2014-07-03T04:28:12Z
5e5fa1f357afa73a6174bd2a176611e9d2f28141,"A few fixes

- EasyMock instead of Mockito
- FileSessionCredentialsProvider fields should be volatile
- getRestS3Service should create AWSCredentials not a AWSSessionCredentials with fixed credentials",2014-07-02T22:53:39Z
31f7bd8bcbc6387f2e2103049864645c55241f7f,"AWSCredentialsProvider for s3-extentions

- fileSessionCredentials property is added
- AWSSessionCredentialsAdapter is adapter class between aws sdk AWSCredentialsProvider to jets3t Credentials
- FileSessionCredentialsProvider will refresh its session credentials from the file
- S3StorageDruidModule should return different AWSCredentialsProvider on the config settings",2014-07-02T21:44:02Z
c646648319632ee972a2b4f25421f47a2774faba,fix examples start port,2014-07-02T17:07:04Z
1de390801fd1207388984b5a5684925138f01dc3,"Druid Fireshose

Add druidFirehose, can be used to reIndex filtered data from a
datasource",2014-07-02T15:04:18Z
d37527ca79119b7b48799584d1691ef17dddbfd7,make histos work with groupby maybe,2014-07-01T23:46:58Z
dba7e972d8fbec5a5032ef5d9b7578a878e3a837,refactor docs for histograms,2014-07-01T23:39:24Z
a16bdf9759abc6d9aa0e0bbd80fb5bdbef28b494,"Merge pull request #625 from metamx/approx-histo

Approximate Histograms and Quantiles",2014-07-01T23:16:07Z
d0b849473567755aff734a2c2d771b762cc20073,fix approximate histogram serde to not change buffer limit,2014-07-01T23:13:00Z
70ae6e1fcd48c09d6242da41a410215c46425c49,Approximate Histogram Module,2014-06-27T23:51:01Z
484b91db5a12e0b6bd2152b01b2d025937ba31e1,"Merge pull request #617 from metamx/igalDruid

Igal druid",2014-07-01T01:58:38Z
1c1f65ab5f1fb19ef9bfb49d8a9c051797305508,"Merge pull request #604 from metamx/more-tests

All manners of ""new"" tests",2014-07-01T01:41:59Z
92bc340099ffa22d663e6c36b89c954c253aa343,Merge branch 'master' into more-tests,2014-07-01T01:40:00Z
afa73a2d3a913de88ce09cfe68e1e86ad9d3d172,fix one of the TODOs and add test case,2014-07-01T00:29:19Z
94ac9645eda30f28b4277ec5f880158ed0bc1f1c,"Merge pull request #624 from metamx/better-jobProperties-example

Better example of jobProperties.",2014-06-26T03:32:53Z
991ff34f38f66128cac05d0920ce2484e43cbd29,More explicit example of jobProperties.,2014-06-26T03:19:03Z
ff00b545bc6fb00032576f51c158a5c27ac92c87,"Merge pull request #623 from metamx/document-hadoop-jobProperties

Document how to set hadoop properties",2014-06-26T03:15:21Z
a7ef019b222bbee9114ffe6612bf74ad1d326a47,Document batch ingestion jobProperties.,2014-06-26T03:14:11Z
e3ee06b80f0210daa685d60a3854e95c110c9669,"Merge pull request #620 from metamx/more-tostring

add toString method for JavascriptDimExtractionFn",2014-06-25T17:01:07Z
1499ee6458e83158a2c4874f1db666e0ae2d2778,add toString method for JavascriptDimExtractionFn,2014-06-17T20:35:12Z
261d6a16b2525db2ba614d7f50817f81bc5578c1,Add HdfsTaskLogs,2014-06-21T06:55:05Z
805e80c24d309014ff08ef654b724def3fc965fe,Merge branch 'master' into igalDruid,2014-06-21T00:16:41Z
262d43ae2e20e65a9666fcce1f0a567b397c0aaf,removed build section that didn't work (direct from whirr repo); added info on resource files needed to run test; tweaked whirr config section to match current requirements; changed cluster-start section to reflect fact that we're starting multiple instances; other minor edits,2014-06-21T00:03:21Z
cc8a4d08471beabd970601f8685878a6c8400e34,revert changes to RetryQueryRunnerConfig,2014-06-20T20:49:33Z
5e7dfaf298a634b996080204194406d72c61d6b8,change retry tests,2014-06-20T20:45:04Z
341829133382f449efda8a0a23a14614e9c01a36,add a test for retrying multiple times,2014-06-20T20:15:46Z
255504727a435d693a5ed5a2bcbd347f7ca65114,"Merge pull request #615 from metamx/push-bootstrapped-sinks

push sinks after bootstrap. fix #570",2014-06-20T17:45:19Z
b978eb33f1444f72e2206aef1da6a0602aca084f,minor fix for cleanup of historical cache file,2014-06-20T17:42:03Z
a4003966b23c5c1f6b0f48e6b4f23ab68d290118,push sinks after bootstrap. fix #570,2014-06-20T16:15:30Z
12ee17c4d2ad437d7ad978af5b9e24c07f0561ff,"Merge pull request #614 from metamx/delay-drop

add an optional delay for how long it takes to drop a segment, fixes all...",2014-06-20T05:38:26Z
1cb3fc250ef4a7340e09bd9d8231ded4d42986b1,change missigSegments to a static variable,2014-06-20T01:29:00Z
0244172ccbd7a29ad1584c252f0a35c230f6cae8,change missigSegments to a static variable,2014-06-20T01:22:36Z
4e2b5b743f7f449abd89053b534af50d7346c9e4,add more unit tests,2014-06-20T01:18:58Z
bdb35e2d7e64b957450e06db73e02856e0d09644,fix retry logic and change the default value of retry to 0,2014-06-20T00:50:50Z
10e925aa6739d8dead264773e2896d94aa8d04c2,"Merge pull request #564 from metamx/cacheable-objectstrategy

Cacheable ObjectStrategy",2014-06-20T00:33:25Z
5afcb9cbd3a3efc287f430f6c405ce024427da8d,add docs,2014-06-19T23:55:02Z
fc36bfbc6db5b2e6a42dd43a585e9505871277a5,remove pointless exception,2014-06-19T23:49:50Z
2aab2a0cd9a2afad78f10cd0c1740629e589c9a5,address cr,2014-06-19T23:48:43Z
b313601a3b603527dbe43f62226de18d1f1c2229,"add an optional delay for how long it takes to drop a segment, fixes all manners of inconsistent issues",2014-06-19T23:32:38Z
0602a45200efabe2211da796ae03a21a97232067,add column config test (disabled by default),2014-06-19T20:35:00Z
4c40e71e544cdfd31bc672dacd9d22597d6d50da,address cr,2014-06-19T17:45:54Z
a870fe5cbe545c81991634956c25db5b402a0fb7,inject column config,2014-06-18T20:17:48Z
ff980091c5af58cd317ea94c3c0277fc6a3e98c3,delete an unused flag in IncrementalIndexSegment,2014-06-19T21:43:58Z
c2e2391e3a5bad23affbfd06001e2088e8e91c64,fix thread local initial value,2014-05-30T05:24:26Z
09346b0a3c18cae48dff35a179988d9e17fb22ec,make column cache configurable,2014-05-22T20:46:25Z
8840af59774a306b06c15df95573884a04dc366b,make GenericIndexed release cache resources on close,2014-05-22T20:37:08Z
c4048d06dd84d4f1bb4075a55fe02cb9f98e56b9,delete an unused flag in QueryableIndexSegment,2014-06-19T21:42:04Z
8e85097999f5b35a480d99d288490f6fb6578f2e,fix header so it passes the entire context,2014-06-19T21:38:11Z
35e080bbc14a0853f13dc3e29425c8719894d329,fix concurrency issue with the map; introduce new exception; add incomplete retry query runner test,2014-06-19T21:14:54Z
be25d67894c754ebf96b64f46a0eff9da991e036,add comments,2014-05-20T06:25:20Z
618afd99760cab45e3c7cf726c59ab5f2bc5aecd,optimize single value lookup,2014-05-20T06:08:16Z
7a351dfde3c1f7000d8f0c34dbcf8d0a241e58fd,optimize lookups by caching bytebuffer copy,2014-05-20T05:55:09Z
be92c322e33ed5f23d51a3eabc7d5f34e4aa85bd,make ObjectStrategy cacheable,2014-05-20T05:23:40Z
276e48e5648a8e6468247b8184e725bd91ab3469,another doc fix,2014-06-19T20:33:16Z
fdb39d57a34f50d925511e43e67ead24fd055e2e,fix another doc problem,2014-06-19T20:10:08Z
9aa018925de301662c61146ee75c4c56b7adecca,fix doc header,2014-06-19T19:59:58Z
f1759b450c992ad6f43644f31da6dc0e0413a3b8,fix Zk setup problem,2014-06-19T19:55:02Z
3164228ecf6fa2d3c71bad7a34371fe6e3b7dd65,Fix example middle manager configs.,2014-06-19T19:43:31Z
8515a117874415354f9b55aa40daa3635fae07bf,change the signature of run(),2014-06-19T01:05:09Z
f4b1dc032b0be5012eade18b817662db73eeb388,change the way to use RetryQueryRunnerConfig,2014-06-19T00:15:04Z
d8430b854ded1b736276431261833112801fb0a8,revert changes in pom file,2014-06-19T00:01:08Z
00856f0feca2a9bc9c00183c83eccac3b1558893,add retry feature on broker side; modify QueryRunner inferface and tests,2014-06-18T23:55:33Z
b3aad48f47d76126305968e7d69229282b872d3e,remove snapshot dep,2014-06-18T21:43:57Z
0bc19150679189f59a2c6164585bed399ac58c44,"Merge pull request #578 from metamx/new-guava

Update guava, java-util, and druid-api",2014-06-18T20:23:32Z
7c7d170e788c67d26fa06b3db59f7bcf72aac78c,[maven-release-plugin] prepare for next development iteration,2014-06-18T17:53:40Z
a52a1d3929ef1caf54d5920a11e1c023a07ab18f,[maven-release-plugin] prepare release druid-0.6.128,2014-06-18T17:53:36Z
b0517dc55d2b7930838b90cf32099c7233e50610,"Merge pull request #610 from metamx/ec2-user-data

More flexible EC2 user data classes.",2014-06-18T17:36:13Z
eab9381ba10a1a6429952474b18161a3cd5429c6,Docs for string-based EC2 userData.,2014-06-18T17:09:07Z
5c4b9a7d5b2d3094b162628302e1b2fee9ed0709,Indexing: Allow null userData.,2014-06-18T17:08:50Z
e9ef1e956cdab13455011972c4e8c972e0725b47,Docs for defaultHadoopCoordinates.,2014-06-18T16:50:37Z
9532beb05c019d3eabcd205fea32c10ef7ef82f2,[maven-release-plugin] prepare for next development iteration,2014-06-18T00:29:31Z
e3dcbde07dbb56667eceb80f553903b4797c2957,[maven-release-plugin] prepare release druid-0.6.127,2014-06-18T00:29:27Z
65c1553a7617a0ee9b76146f946e11174cabdd92,Fix busted TaskConfig.,2014-06-18T00:27:41Z
9f16f0a955af30f3db5c5195bf6fefb62b238803,More flexible EC2 user data classes.,2014-06-18T00:10:17Z
a658afe902cd6d2629f568aa8960591abf4aa993,[maven-release-plugin] prepare for next development iteration,2014-06-17T20:01:01Z
4e875b8084880a4ef03d50f758d1f71c4f9f9a60,[maven-release-plugin] prepare release druid-0.6.126,2014-06-17T20:00:54Z
3dbf4757841914ec5939f7fb215c65b0474eeda2,fix linux test failures,2014-06-17T18:05:36Z
5227b43050fc2f81ecc4b91564c4f0ffc1087f68,fix more test breakage,2014-06-17T17:35:01Z
8a13e34c50ed22cd9371938c652f8eb88700440c,fix broken ut,2014-06-17T17:31:50Z
d3ed08e8ea7fb8f07538401af88a1fd173772fcb,"Merge pull request #609 from metamx/fix-bridge

fix bridge test",2014-06-17T17:26:57Z
d1c462703266a610822f8a2cd239e614dd828727,fix bridge test,2014-06-17T17:18:46Z
766decf81d6d18f24372ea3622a09d70b7b52f27,"Merge pull request #608 from metamx/fix-initialization-test

fix initialization test static state dependency",2014-06-17T17:10:54Z
4a835a9f0f63e7c65b728fd9fa7637d95e185d18,fix initialization test static state dependency,2014-06-17T17:07:20Z
f201a0e53b47f7bdca434716d114b9c5e9648a8a,"Merge pull request #605 from metamx/default-hadoop-coordinates-config

Indexing: Make default hadoop coordinates configurable.",2014-06-17T16:42:48Z
a1d3d7975ca624ac9cbe2410b357c9ddd51a9598,"Merge pull request #607 from metamx/update-maven-release

update maven-release-plugin to 2.5",2014-06-17T16:41:13Z
4c4abbbb0cd9da249c5c500d2951c59acbcf56c6,update maven-release-plugin to 2.5,2014-06-17T16:07:32Z
9b03f5b13a123151a075b626e93778b8df6ea2c4,fix timeout test race condition,2014-06-17T16:00:07Z
54833fa43d84f273b7a94199be67ed9f4fbcb2c6,Indexing: Make default hadoop coordinates configurable.,2014-06-17T15:53:39Z
964f12b7d68320900045ff1da6401b6ab7db2a3d,[maven-release-plugin] prepare for next development iteration,2014-06-16T23:56:44Z
4e184e3793a3f790be9f033527598550c38e3150,[maven-release-plugin] prepare release druid-0.6.125,2014-06-16T23:56:37Z
3db07d2a55d5c946db4097b456b1c95b2d066f82,Make TimeBoundaryQuery buildResult no longer static.,2014-06-16T23:54:31Z
ef7e786b96d4c2072f762ae56749671561b4049b,[maven-release-plugin] prepare for next development iteration,2014-06-16T23:38:08Z
96be9faec702b98e07588b0491f2e7cc216a2cf7,[maven-release-plugin] prepare release druid-0.6.124,2014-06-16T23:37:59Z
2a88f8c4ce44ed2fc32a992596df218a2d979c80,Downgrade guice to 4.0-beta.,2014-06-16T23:36:05Z
ce61e60ee82c927db9a4952cca880ccc377b3fa1,all manners of new tests,2014-06-16T23:19:26Z
c2149f8a006e664320cf5826eb50f0f5becde474,add more tests for time boundary and caching,2014-06-16T22:32:28Z
d01be2f85bad3927cb32b090a699770db04fa96a,revert submodule code,2014-06-16T22:04:42Z
a71f7152a54002629b2e2da54d7a24ec2308fb56,fix broken UT,2014-06-16T21:53:26Z
1b99553394769a43a2c2ffa55317500071291743,"Merge pull request #603 from metamx/max-min-time

enable tb to return just max or min time",2014-06-16T21:31:35Z
5aa46d08a8d04ac5ea6a8f325cfa5026820d3d37,address cr,2014-06-16T21:24:36Z
9ca4f564ee23ccea7611b15cb1d26b1d16bd3f9e,address cr,2014-06-16T21:20:16Z
08c88e8fb7c1ff6fd329cefc9caa83ca38e795fb,address cr,2014-06-16T21:07:10Z
d2cf7d3f0a4010c6bdfea0f19ece0948ff30ffdd,address cr,2014-06-16T21:00:01Z
d4a47fe6e8f86d3bceb825935960ffaa38c92de5,enable tb to return just max or min time,2014-06-16T20:45:32Z
2d03888a2cc0c8fd936db89cc3f363e4fef2f051,"Merge branch 'master' into offheap-incremental-index

Conflicts:
	processing/src/main/java/io/druid/query/groupby/GroupByQueryHelper.java

processing/src/main/java/io/druid/query/groupby/GroupByQueryQueryToolChe
st.java

processing/src/main/java/io/druid/segment/incremental/IncrementalIndex.j
ava",2014-06-16T15:13:17Z
0629be622cd2378af8fd22b631c833f961a908e1,remove unnecessary changes & fix index closing subquery,2014-06-16T13:20:49Z
a9c09ec8a71ce543e76cc15e8ed5ac56e55698e2,fix compilation,2014-06-16T12:25:43Z
a5c533dcab9c156e498b587f845714f33232c2f4,[maven-release-plugin] prepare for next development iteration,2014-06-13T22:17:00Z
903f1a695ff456533eb7fcede833914c0036c2c9,[maven-release-plugin] prepare release druid-0.6.123,2014-06-13T22:16:36Z
0fd57dbc75e74a0b5887770eff730ef43f3aa6f2,[maven-release-plugin] prepare for next development iteration,2014-06-13T22:05:18Z
bcc6e779196bc13b1792d0b24ffc2646be72a452,[maven-release-plugin] prepare release druid-0.6.122,2014-06-13T22:05:14Z
b7b28ad2f90e53d8316b5afa066c80a4da1bf08d,[maven-release-plugin] rollback the release of druid-0.6.122,2014-06-13T22:03:03Z
695a2946a9f4fd1c13d4d3f83942f0abff8a3228,[maven-release-plugin] prepare for next development iteration,2014-06-13T22:01:13Z
83b2434cad4d017497f0c26140c246480e2e464f,[maven-release-plugin] prepare release druid-0.6.122,2014-06-13T22:01:09Z
bd18fef47432255396e84be26a3aa7d70eb9f672,[maven-release-plugin] rollback the release of druid-0.6.122,2014-06-13T21:57:31Z
1159e2e41569fd88e121049b0536417218884c88,[maven-release-plugin] prepare release druid-0.6.122,2014-06-13T21:56:12Z
6505f82053965c0bdbfbe0fc3279b6b18f735bc6,[maven-release-plugin] rollback the release of druid-0.6.122,2014-06-13T21:54:23Z
f6d319dac2d1772d0f81d7f72b8a61c7f0f3ef66,[maven-release-plugin] prepare for next development iteration,2014-06-13T21:46:08Z
394d0cfbca4207ba45873448c77818573fb6a07d,[maven-release-plugin] prepare release druid-0.6.122,2014-06-13T21:45:43Z
d5d2873d3c10dfe6ad1c1d5d520537d6a96386af,"Merge pull request #593 from metamx/fix-groupyb

Support all standard Druid functions in GroupBy and nested groupBy",2014-06-13T21:37:55Z
c378dccffe6091226ea4ff53bbe3469eb26e0c15,"Merge pull request #598 from metamx/fix-bysegment

fix BySegmentQueryRunner",2014-06-13T20:48:39Z
93f97a5d865d4184b2a2fc2ca8e10df183d38eb4,fix bysegment-query-runner,2014-06-13T20:20:14Z
8246d427151e9e1d907772a46844a16a07954860,Merge branch 'master' into new-guava,2014-06-13T18:44:05Z
294a9ba78f0b86fb8e369ee138d77277a1f33c05,fix same race condition in other test,2014-06-13T18:42:03Z
332ba3ef20fccf68471f4af87eb2942630a0f222,fix bad merge,2014-06-13T18:36:36Z
4cc0353be2ca71e4ce316b641524f5a02fbe9d66,Merge branch 'master' of github.com:metamx/druid into new-guava,2014-06-13T18:30:07Z
5bd4ad3f0f29d6b9e8a955f0b582eaacb6238582,address code review,2014-06-13T18:29:49Z
4c4047165f626e9dbcae42bdcd00c916a8ec8069,fix query cancellation test race condition,2014-06-13T18:28:48Z
a63cda328199372bbc87078bc46f6c156b17eef1,"Merge branch 'master' into new-guava

Conflicts:
	server/src/main/java/io/druid/server/QueryResource.java",2014-06-13T17:08:10Z
49d3bd94dacf8daf2686751776b0cc10ef97136b,Merge branch 'master' into offheap-incremental-index,2014-06-13T10:09:34Z
0ddaf4c307156783dd521098ad869f473e675890,fix race while index closing and querying,2014-06-13T10:06:57Z
b2419b1530764ce72ea47f12f89208f9b2293488,fix missing return statement,2014-06-13T00:09:21Z
f06a85ec2671f5427f1fbefd934ab7688ff688a1,"Merge pull request #597 from metamx/fix-yielder-close

avoid closing yielder prematurely",2014-06-12T23:05:53Z
8f7c82d35152f9f869506b9495e768feb05fcb31,avoid closing yielder prematurely,2014-06-12T22:44:04Z
bfa3caa58949b5b987d3fea4911b8677cbc4fa58,js/cardinality/hyperUnique happy groupBy family,2014-06-12T22:16:07Z
fd47efd59e695cb6ecb97af0829bbcfe3b6a0dc0,fix cardinality combining factory,2014-06-12T22:14:30Z
150480bdf98e82bb781b67d127370ca15312fe46,complexmetricserde workaround for groupby,2014-06-12T19:44:26Z
e84bcca40f868b0738f60fc49ccaf3e39d969366,rename method,2014-06-12T20:36:40Z
4a4cccf10e72a2714c8c63a4fa76ce9dabcc7a19,"Merge branch 'master' into fix-groupyb

Conflicts:
	processing/src/main/java/io/druid/query/timeseries/TimeseriesQueryEngine.java",2014-06-12T20:24:16Z
4d9d041fbdd8d3a91c7d68fcb231eb7600644eaa,Merge branch 'master' into fix-groupyb,2014-06-12T20:22:34Z
403962fe0b8e06235d61d511ee87bb226f9de0ab,add some failing tests for groupBy,2014-06-12T18:36:53Z
22e368e79b9d3d370cde224b798c0c9c15789d93,add dimension/column selector to incremental index,2014-06-12T18:22:41Z
025814cfffc5b0065c9c01860dd33cb6dab29ef7,"Merge branch 'master' into offheap-incremental-index

Conflicts:
	processing/src/main/java/io/druid/query/GroupByParallelQueryRunner.java

processing/src/main/java/io/druid/query/groupby/GroupByQueryRunnerFactor
y.java

processing/src/main/java/io/druid/segment/incremental/IncrementalIndexSt
orageAdapter.java",2014-06-12T14:32:27Z
a7e19ad892884996b77afc35e85cdc3ea7bfe9ae,configure buffer sizes,2014-06-12T14:02:37Z
ada2d92c160901fde811b4a74721ece8babc60de,"Merge pull request #576 from metamx/query-cancellation

Query cancellation & timeout",2014-06-11T19:18:43Z
50945a144aa8b9b1ccfd3892a21a4002069afe6c,"Merge pull request #569 from tucksaun/fix-build-as-submodule

Fixed maven build when druid is integrated as a submodule",2014-06-11T19:17:45Z
cde86d81e20fd14255eb95fe7e39f058657e3b04,make having and limitspec work for nested queries,2014-06-10T22:50:13Z
ababbcadfdca77720717265979cca6df1280ea95,fix package groupId,2014-06-10T22:01:44Z
1b5095ac5747490ffea0215d99050428e64082cf,"Merge pull request #588 from metamx/resolve-validator

add dependencies for validator error",2014-06-10T21:05:29Z
a541029b410934593a95e24a217214d530ad55ce,segmentMetadata query cancellation,2014-06-10T17:24:18Z
6550cb1776101232cd17086052d46f00b2e3fd0b,groupBy query cancellation,2014-06-10T17:15:31Z
12d1d32acf2ea80e7820bdfb0f032609920a889d,"Merge pull request #594 from metamx/hdfs-data-segment-killer

hdfs data segment killer",2014-06-10T18:24:34Z
0dbe43264628620aa1ed88cc2a5a0e275279188b,"Merge pull request #595 from metamx/s3-glacier-warn

warn glacier objects cannot be moved",2014-06-10T18:24:26Z
ae0e36f3ebf91aa66a45062c5a44ebd88d643b45,warn glacier objects cannot be moved,2014-06-02T22:42:55Z
1fb9b21cf0c5206e1f8ccf6ea1d5f771157488e3,async servlet delete support + cleanup,2014-06-10T00:22:50Z
8f7fd93491a6eb97661ebc7dbe7bf70683adeed2,add comments,2014-06-09T21:34:44Z
b84884ab7677a34485a7bc6d961cf8d1d29eb043,remove methods used only for testing,2014-06-09T20:48:01Z
c08002aa4d9b2c5892ee090833d5cd33ac827e3d,interrupt queries on incremental indexer,2014-06-04T00:32:14Z
99c9a2cf05fc7065a333a6b943cfb3e73fcd29e4,make sure to close yielder in MetricsEmittingQueryRunner,2014-06-03T18:35:26Z
97d5455f3a455fecbb1296f60fdf038ef040f862,properly kill timed out queries,2014-06-03T18:15:03Z
d0f9c438f826f6ebe072bb193a80e8b5757d0c79,proper query cancellation tests,2014-06-03T00:39:08Z
855c66c9ad13e0b133597e0324ffaf761c99bbeb,less stack traces when cancelling queries,2014-06-03T01:29:42Z
d01f272a7ab71ab7ba565493404f8330af3e774b,forward cancellation in direct druid client,2014-06-03T00:40:35Z
d2c729adec3b9b82705646c6f006ad55b8860a5e,return proper json errors to propagate query cancellation and timeout,2014-05-12T22:07:49Z
def62c74f8e60f799b7118d26554e5f340ca9cc5,properly remove completed queries from query manager,2014-05-15T00:01:18Z
a56a655eae2f4dfb5492f278d5bb0078ec3293bb,proper query exceptions and add support for query timeout,2014-05-15T00:00:18Z
1183c68ce4e2c55529be8bcf7fcd7c087af2fdcd,formatting,2014-05-14T23:59:01Z
4f1e1576397e08eb26413b76108d0c03eb6bbefd,pass through errors from computes in DirectDruidClient,2014-05-14T23:58:41Z
32f6243be0a765bb59389671132b9fb9d35f66cc,proper closing of resources in case of query cancellation,2014-05-10T06:28:42Z
1be85af32019afd80252ebc2aa746640afa8fb04,handle query interruption at cursor level,2014-05-10T05:51:43Z
d6f38827db453f31dd1e082e31dbcaade23b085a,initial query cancellation commit,2014-04-09T00:13:22Z
f3e60795d0ac9e8b736a2b6a465d1ca76d0c2e65,delete the parent directory,2014-06-10T13:55:08Z
21908b507784a02576fd64932dc6ac92ec5d7b4c,"hdfs data segment killer

implement hdfs data segment killer",2014-06-10T12:12:30Z
5955ecf032d678aa27095bd5193e24ed865b32b4,fix bugs wtih js and card aggs,2014-06-10T05:31:30Z
187b2beb47ce960f6cb01712a760218267168e68,cleaner way of implementing things,2014-06-10T05:27:33Z
32b65d9c5b4fd07e8a96ed8663e44369ef96ccce,remove commented out code,2014-06-10T01:26:37Z
6adc3011fad93d3b1aa7e313dc257873f62b04d0,fix post aggs with group by in #472,2014-06-10T01:25:10Z
ad7db018d5c87a0a4d5b7cbe4cc31dd0b2037526,add default tuning config for index task,2014-06-09T23:28:47Z
5e48f3907ba198678e47173d75138affe98cc3cc,fix index task new schema defaults,2014-06-09T23:24:12Z
5380f14905093f1e20e47df741129c342d6f3704,add header,2014-06-09T23:13:57Z
a3e86f70944a92d0aa683676037cc9f5ff4835b3,"Merge branch 'master' into new-init

Conflicts:
	examples/config/historical/runtime.properties
	examples/config/overlord/runtime.properties
	examples/config/realtime/runtime.properties",2014-06-09T23:01:53Z
7233fce50cc7ad37e52d4626d2f1d97940b6cbd9,refactor examples to use global runtime,2014-06-09T22:59:44Z
eb5034ce7f0665f8eb1c9cf2e7430572c317bc73,update dep version,2014-06-09T22:33:24Z
d3f2faef92c30a2131782f348678dffeb236c081,address code review,2014-06-09T22:32:22Z
1110b34328b19576a6fb69458ce3cb0c6b170772,"Merge pull request #586 from metamx/jisoo

modify whirr documentation",2014-06-06T22:14:48Z
55f1e2e2a75ae8561b649548d014d5ec51600d5e,add dependencies for validator error,2014-06-06T21:19:55Z
5df6e07aeef0f3112f2a00fa60c644977d3b9581,"revert changes to wikipedia_realtime_task.json, CliBroker.java, CliHistorical.java",2014-06-06T00:55:52Z
11f07b5fbfa9c204abbef074595c96812eaa5634,"revert changes to wikipedia_realtime_task.json, CliBroker.java, CliHistorical.java",2014-06-06T00:51:58Z
a0d51a8cb234150f72184855147d6b0cadb2f304,modify whirr documentation,2014-06-05T22:51:23Z
37aadd4c06e2ec29a60290dd549adad44462c05a,"Merge pull request #585 from metamx/coordinator-mem-usage

reduce coordinator mem usage",2014-06-05T21:46:56Z
5ef660f6d1cbf8c51aa4daf49ad68ccae96fc912,improve mem usage for getLoadStatus,2014-06-05T18:53:34Z
ab313005132783be84fe65942ea2ce24652a6a29,remove duplicate code,2014-06-05T17:46:38Z
03e1fb6f3f3396ec0dc968d6896e6398a82edf9a,"reduce memory usage for end points

do not copy entire segments when not needed,
reduces memory pressure on the coordinator when no. of segments is
large enough.",2014-06-05T17:44:51Z
46ef5c4560fb576d3e750ab35b6ca1cb05626a01,[maven-release-plugin] prepare for next development iteration,2014-06-05T17:03:31Z
0265ae9ac0890aa38ce7e5b687a7842f876c7f9e,[maven-release-plugin] prepare release druid-0.6.121,2014-06-05T17:03:26Z
c8689507c8bae7fd3c03a326f0836554da37adef,prepare for next release,2014-06-05T17:01:25Z
ca493bd348ba68447c5df5396cc7c5243c76fa5a,"Merge pull request #584 from metamx/fix-segment-metadata-query

fix segment metadataquery",2014-06-05T16:39:13Z
bf09f979bd5f4e567d5650d879a7d3addc956e10,fix segment metadataquery,2014-06-05T15:05:57Z
5bdc4a761ae8fafa17262f1573001e5eee2d5c7c,close IncrementalIndex properly and free up buffer,2014-06-05T14:11:43Z
6265613bb9a95d235d001d92d622072d2ce67d60,Merge branch 'master' into offheap-incremental-index,2014-06-05T12:12:57Z
01e8a713b6060ad0ba987fe13690ba694647817c,unit tests passing with offheap-indexing,2014-06-05T12:12:53Z
1d9675c044a3cf42ff09526b4fb2bbe04887d8e0,"Merge pull request #583 from metamx/fix-filtered-server-view

fix memory issues in FilteredServerView",2014-06-05T06:57:39Z
6e23ea457bb375d1d63c270b2f79e0902eb3a17e,fix memory issues in FilteredServerView,2014-06-05T06:54:37Z
e8aef8645852d17c39dd514cbcb5b3d7c6ea24b7,[maven-release-plugin] prepare for next development iteration,2014-06-05T03:22:31Z
033f81ca6443adb647f9d0ee3ccb8f61cffc83bf,[maven-release-plugin] prepare release druid-0.6.120,2014-06-05T03:22:14Z
e3941a2890a6433ed02716771ec3ad8c8b8cdf21,prepare for next rel,2014-06-05T03:19:50Z
3325f6d6ede8fdb4236e4f8f780729a63f5690c5,[maven-release-plugin] prepare for next development iteration,2014-06-05T00:56:20Z
6309ab197368d4a02e11461999689b0e4094ee2c,[maven-release-plugin] prepare release druid-0.6.119,2014-06-05T00:56:15Z
1ca7bf03b818ae4a03eb25fbe404c3e72752805d,"IndexGeneratorJob needs to respect isCombineText, too.",2014-06-05T00:54:31Z
4524863db17d17310d45fc43c982ba3035489e13,[maven-release-plugin] prepare for next development iteration,2014-06-04T23:49:49Z
37c6ece1508d39197e1407f2704e597ac93673d8,[maven-release-plugin] prepare release druid-0.6.118,2014-06-04T23:49:44Z
612624fb89aa3cd98015ffe6d51df00d450a35ff,prepare for next release,2014-06-04T23:47:54Z
ceece7ce3623b5b908385d1d5e99e8bad31ea2c8,"Merge pull request #581 from metamx/combine-text

Make combine text input format configurable",2014-06-04T23:40:53Z
9f4cc5ca1fd3834d04fc47fd00d452d81d6c176c,fix test,2014-06-04T23:29:20Z
adc00f2bcfe2bfec5acb5239f87f519ec4194bb2,make combine text configurable,2014-06-04T23:24:56Z
c506d014bf390a053f7cb9f94eabe1e808e3508c,fix link to docs,2014-06-04T19:55:39Z
8f657686c579394f3fc0c9f37157497a7f084167,fix typos,2014-06-04T17:14:39Z
22c62cc17689b24ad32dea23cc9e366cb42ca326,update performance FAQ,2014-06-04T17:09:17Z
2d95780d12532feb7b37e23e4d9c714e4a0b0ac4,[maven-release-plugin] prepare for next development iteration,2014-06-04T16:45:11Z
30ce0ab99c049464be0d6a75e081ad83e4d4c7ba,[maven-release-plugin] prepare release druid-0.6.117,2014-06-04T16:45:06Z
22bbe037a71b83caafdffe014b45b54c00e3932d,prepare for next release,2014-06-04T16:34:29Z
ef02645fff1e0b3d7d221d43fe7c217cebb6c849,"Merge pull request #580 from metamx/fix-hadoop

fix broken standalone hadoop ingestion",2014-06-04T16:28:46Z
bb4105ed1afdb2435d9de4da8a73fa0a2f5d4e37,fix broken standalone hadoop ingestion,2014-06-04T16:23:46Z
c97768b27d2adcecb4fe10211386603f3a504f30,Merge branch 'master' of github.com:metamx/druid into new-guava,2014-06-04T16:12:59Z
2e0353e501dbaf2fb24708671e211e8216a65acd,"Merge pull request #579 from metamx/fix-cli-hadoop-back-compatibility

fix backwards compatibility",2014-06-04T15:54:28Z
d8338fc51dc5c4ba7d91006a8e46f41a8fd2179f,fix backwards compatibility,2014-06-04T11:10:06Z
77ec4df79718a218acd78a7d45cdfe87935eba83,"update guava, java-util, and druid-api",2014-06-03T20:43:38Z
8340a1b0a1eb6d4a95a71397ada7571b3183276a,Properties module can now take multiple properties files,2014-06-03T17:34:38Z
f7c4d6a24af24fcbc04e9e8e58924ef061d920f3,fix bug with loadqueue endpoint,2014-06-03T17:28:22Z
dd76fc49e247ef6e45b3614def8abc5d82d3080d,fix doc mistake,2014-06-02T22:38:25Z
497a5ab70c7de0fff5a94e972931d14d8a96048c,"Merge pull request #575 from metamx/task-log-errors

Better task log errors.",2014-06-02T20:15:45Z
8a6384862f6bcec65159f380f86728061e28b06b,Better task log errors.,2014-06-02T19:55:17Z
6ddb014671693d8af7dde1808ebefcbc65b04da5,Merge branch 'master' of github.com:metamx/druid,2014-06-02T19:49:03Z
abe26a7f2ebcb7360547bf801d871626b08d240d,change default merge size to 500mb instead of 1g,2014-06-02T19:48:57Z
8c73ef648c040efef7a815566c9a9ac8cb2d9908,"Merge pull request #574 from metamx/srms-hopscotch

Autoscaling: Fix case where target < current, but target is too low.",2014-06-02T19:38:33Z
48511e15cf6f06906b42238493cde978c1180800,"Autoscaling: Fix case where target < current, but target is too low.

This can happen when workers are provisioned manually.",2014-06-02T19:34:54Z
1407b49da11a2e3cca03f45a08b5d2c5547270b7,[maven-release-plugin] prepare for next development iteration,2014-06-02T17:53:47Z
f91ecf20f308cf273c01dc65dd816772cc0b47eb,[maven-release-plugin] prepare release druid-0.6.116,2014-06-02T17:53:43Z
9dddb09a0ced5337d3a97b9e9d87fe13388af551,remove druid-hll,2014-06-02T17:51:44Z
abac5291163f57e7752c4757db676aa7d52c765e,prepare for next release,2014-06-02T17:49:54Z
7ffe60ca60bf979b2ca4b01340252ee60f59be1b,clean up a bit of the logic in RTR failure with exceptions in announceTask,2014-06-02T17:49:28Z
89d8e66ce66f17830d9b7acd7671b8ec83b78574,"Merge pull request #573 from metamx/task-fail-on-exception

fail task on exception",2014-06-02T17:46:21Z
6f176cee850f361043e33d51f22d2fe9063c52e5,"fail task on exception

If the task announcement throw exception, set status to fail instead of
retrying it again and again.",2014-06-02T17:22:50Z
34d3eb3b5f2cdfcb7021331fc69a057e490dd19f,fix minor link problem in docs,2014-06-02T17:21:00Z
49f03b808d332ebe75dcae5dfd0d2a34a4ffa6b0,fix default value for max segments to merge,2014-06-02T17:20:13Z
cd78b9167d5c6280a404d0aae7320b5ba05f2618,remove druid-hll and use hyperUnique,2014-05-30T23:28:24Z
4c13327297fbc0a4adc8f4ab3bb471a9981f65a0,more logging for determine hashed,2014-05-30T23:19:20Z
ee60183df7cac03bcb2c7d0cb6da79a083047fdf,[maven-release-plugin] prepare for next development iteration,2014-05-30T00:26:55Z
d13a354ffbbf710aa3c35a8996a20e638a6602e3,[maven-release-plugin] prepare release druid-0.6.115,2014-05-30T00:26:49Z
9adf80da7c80428cac735a44ed33c9cdefcd91e8,prepare for next release,2014-05-30T00:24:02Z
af40b0c01d408192a7079481caa97e65501e7e87,"Merge pull request #571 from metamx/filtered-serverview

FiltereServerView",2014-05-30T00:20:48Z
ea7eaba735fa946b9991dbba482c567d0dccfccf,require default predicate in ServerInventoryViews,2014-05-30T00:07:38Z
f32aee7804fe382c55d0a18d438f92955d2ff71f,make it explicit it's a concurrent map,2014-05-30T00:01:45Z
1a8eb258528fc94dd222500323e8f7fea8c6e6a3,update realtime tasks to use FilteredServerView,2014-05-29T23:41:23Z
d6f58bdcede363d3b5b34e26bdc5352f0aa90efa,filtered batch inventory view tests,2014-05-29T20:27:48Z
f30d58ad312c7f664dde032256efe33d31f5acb6,filter out segment callbacks not related to given filter,2014-05-29T22:41:12Z
d98a10a7d876bf60fc7e52fd5fa13605af142dc1,FilteredServerView,2014-05-28T23:35:21Z
53638a74ec8c483b8441e07fc0fd890e70ab1110,add more segment metadata docs,2014-05-29T19:53:13Z
fcc9bf4f269fd63e3248bdc01d93c5718565d7d0,"document limitspec in groupby, fixes #394",2014-05-29T17:19:11Z
7be93a770afc18773ce553e94d4e4bb104fbff93,"make all firehoses work with tasks, add a lot more documentation about configuration",2014-05-28T23:33:59Z
49a8dc9e3ea4e3c29f974b95b6d2b6f7c36d429a,fix backwards incompatiable change with broker.balancer config,2014-05-28T20:27:43Z
c56f3fd1af7ef86086da1ad38f7591f580a535b9,"Merge pull request #565 from metamx/add-hll-test

test for correct HLL bytebuffer folding",2014-05-28T18:12:34Z
da4972716a511ab8d9d53b349fd5eeea3ee7fe06,"Merge pull request #566 from metamx/fix-cached-segments-order

preserve segment order when pulling from cache",2014-05-28T18:12:13Z
18685542ec9e0b5fa75f78d6625bc7a1062572d3,"Merge pull request #568 from metamx/fix-topn

Fix inverted lexicographic topns and topns with dim extraction dimension specs",2014-05-28T17:47:10Z
642897dca3aabcd38f0aec1047ba593599cf03da,fix inverted logic,2014-05-28T17:43:03Z
2ee1defce937d736054cd6935b1906f5f93f8d1a,better handle dim extraction regex cases,2014-05-28T17:27:00Z
3b6c647b1b86f43625f55a4b9b50a9f9d86fcba7,Fixed maven build when druid is integrated as a submodule,2014-05-28T14:54:53Z
8bcf4bc60e13a3e748b587cf3b84d510226b5b0a,address code review comments,2014-05-28T02:47:13Z
45508718c8e746109367b85f826beb9d4d54437a,"Merge pull request #567 from metamx/hyperloglog-bugfixes

Fix edge cases in HLL folding",2014-05-28T02:41:57Z
9f62589d71c21ebd6b2762d6ac10dbfd9b9f76e7,fix bug with previousStop not being respected for inverse lexi topN,2014-05-28T02:39:55Z
b9015cee34650ea928cfb6a8f7a700f3ac53dfc2,fix brokeness with dim extraction dim specs,2014-05-28T00:25:00Z
b27d9af0ef14301236d9abdd860fb301045ed086,Merge branch 'master' into fix-topn,2014-05-28T00:02:51Z
07a95a0e059c238e58c7be912ce01a8760b656f5,Fix inverted lexicographic topNs,2014-05-28T00:02:28Z
347815cf27513547ea5c9a07bcad6eda50375237,preserve segment order when pulling from cache,2014-05-23T07:14:18Z
d423ba1b2792256c63db1dc1aac45bfd41d28862,minor optimizations,2014-05-27T17:56:34Z
5844c459562893893e35c932df7abc709e9ed407,fix issue when offset changes folding maxOverflow,2014-05-27T16:16:43Z
c273298ad40087f06a653484ff4318fb3d0d660f,don't discard current maxOverflow if offset is high enough,2014-05-27T16:16:10Z
d96d82252d06d8ba15ed8601acf51c5333e0a628,test fold permutations with various maxOverflow / offsets,2014-05-27T16:18:43Z
df3fb07e51308d8a05b2860c6515e9ccab012e6c,test for correct bytebuffer folding,2014-05-23T00:48:19Z
cc40a3394d7248a7043aa20ad2081f08023da73a,"Merge pull request #563 from tucksaun/fix-rabbitmq-connection-retries

Make RabbitMQ Firehose resilient to broker deconnections",2014-05-22T16:44:46Z
8c9a27ab0841adb6ebdc9fa485ac06b47dcc3fc5,"Merge pull request #559 from metamx/upgrade-jetty

upgrade jetty version",2014-05-22T16:43:19Z
cf4502de80bfabf663e52d80278461cf0af41bdd,"Merge pull request #562 from tucksaun/fix-duplicate-dependency

Removed duplicated dependency",2014-05-22T16:43:04Z
78190ba02d0a4cc234563c4cd3e6517a94be2ca2,"Merge pull request #561 from deepujain/master

Improve ingestion MR job completion time.",2014-05-22T15:53:21Z
b7426cd0b299f107fdeb51a194f7c3847a7d1b23,Make RabbitMQ Firehose resilient to broker deconnections,2014-05-22T15:39:50Z
9e9d326dda8bd69f5d44ce0743864b8a3e356962,Fixed duplicated dependency,2014-05-22T14:49:01Z
7d92cf2b3b90aaac615bead93267f228d762d9b1,"Update IndexGeneratorJob.java

CombineTextInputFormat instead of TextInputFormat combines multiple splits for a single mapper and reduces the strain on hadoop platform. It greatly improves job completion time as there are fewer number of mappers to bookkeep.",2014-05-22T09:38:12Z
de0a7b27e7bb060befddf7a229752125a4893cd3,"Update DetermineHashedPartitionsJob.java

CombineTextInputFormat instead of TextInputFormat combines multiple splits for a single mapper and reduces the strain on hadoop platform. It greatly improves job completion time as there are fewer number of mappers to bookkeep.",2014-05-22T09:36:56Z
5155c5b062ac7876662d2d712fd92f28f6dec52c,"upgrade jetty version

upgrade jetty version to 9.1.5.v20140505",2014-05-21T14:49:59Z
5ce80068d2a6be68278b495e72af838c5fae4969,[maven-release-plugin] prepare for next development iteration,2014-05-20T20:22:52Z
904c9049a709a45e1081767df5ef1bd065d2c941,[maven-release-plugin] prepare release druid-0.6.114,2014-05-20T20:22:48Z
f0c40709cdddc953834b827509b817766d9c528d,fix coordinator dynamic configs,2014-05-20T20:20:43Z
783f8fcc99eca1995371a648eb19d61525d10af0,[maven-release-plugin] prepare for next development iteration,2014-05-20T19:47:33Z
def12c03bdf90183520dc6ebf28b432fa164ceee,[maven-release-plugin] prepare release druid-0.6.113,2014-05-20T19:47:29Z
37dca4d437e7bdbb2653b74bfc558fc146db6d4f,make sure the dynamic config has at least 1 thread,2014-05-20T19:45:35Z
e5454b47f1ca5b0941b65be9543508e1db3188ee,[maven-release-plugin] prepare for next development iteration,2014-05-20T17:49:00Z
bcffb9218113d38c1833473b7033100f85a35652,[maven-release-plugin] prepare release druid-0.6.112,2014-05-20T17:48:53Z
93b92a76f77d739ad8f14854788b4c42264b2342,"Merge pull request #557 from metamx/context-force-2pass

Add a context to force 2 pass algorithm for topNs",2014-05-20T17:46:30Z
2906544c304ce3c5c5822d2c84b1ac08daa9dfc1,add a context to force 2 pass algorithm for topNs,2014-05-20T17:42:37Z
dd59b582086170e1d5556c79550fb0a0b08284da,[maven-release-plugin] prepare for next development iteration,2014-05-20T04:17:09Z
511aca9ea8c4c9c5777d516c3713a0ffcc3afeb3,[maven-release-plugin] prepare release druid-0.6.111,2014-05-20T04:17:04Z
19797f56b37279eaab3578b0a6ec67edc30e6045,"Merge pull request #556 from metamx/versioned-timeline-overshadowed-set

make timeline findOvershadowed a set",2014-05-20T04:14:09Z
4de7d4e127a97c434bd064142379623c85f27cd7,make timeline findOvershadowed a set,2014-05-20T03:15:17Z
2786c68411163683a37c53918d7d8ca22f026163,fix file casing,2014-05-20T03:22:13Z
d0f87b0cf6a095c7e204dcf013969821a69ba392,fix broken move test,2014-05-20T01:29:09Z
a7760af65a6ac86eb5e2f0c473d767736900d19d,"Merge pull request #553 from metamx/snapshot-coordinator

Snapshot coordinator state before running anything",2014-05-20T01:24:19Z
1addea4dbe4603fb68632743b1f95fb2bd5c3f28,more code review comments,2014-05-20T00:52:34Z
eb2c737d7f50ec6837a83d533815fb81228bbe97,"Merge pull request #555 from metamx/fix-test

fix BatchServerInventoryViewTest waitForSync() logic",2014-05-20T00:46:56Z
5a065a87859074ce449648aa717aeae41c372ca6,fix BatchServerInventoryViewTest waitForSync() logic,2014-05-20T00:42:08Z
1b6e816c288c83164fb43200c16a95ccf9243a94,"Merge pull request #544 from metamx/java-8-fix-tests

Make tests pass with Java 8",2014-05-20T00:11:52Z
6126dd4231e60d2ca672142b49eb792d7af6e0c7,fix more code review comments,2014-05-20T00:04:26Z
9ec7c71e0fa14638eb82f170e7a57433b2951417,fix compilation error with updated druid-api,2014-05-19T21:06:23Z
61ceadbd579408106c9ea79ab58bc6ed9119b557,update druid-api,2014-05-19T20:53:25Z
002fefb4cf342c0610c6f66a9494472e8e925ea4,"Merge pull request #554 from jcollum/kafka-404-fix

changed the url for kafka wget (old one was 404)",2014-05-19T20:37:20Z
7879f38ccc528b28ab7489e78d529ebf18eb5a25,fix according to code review,2014-05-19T20:35:23Z
d3d2534105a5939685c4eb08b6ddc428f8385123,changed the url for kafka wget (old one was 404),2014-05-19T17:55:22Z
5ee3f5c9d3c8e40cc5c12ca0e163fb9336231ea5,snapshot coordinator state before running,2014-05-19T05:32:20Z
20c4fbc98d845f2eddba22c1c4386800817827be,[maven-release-plugin] prepare for next development iteration,2014-05-16T23:34:19Z
4abcf3e16aa9abbed02a7fdd9933cd6762260a55,[maven-release-plugin] prepare release druid-0.6.110,2014-05-16T23:34:12Z
77289a4148767b330da1b03341ad46caa192b648,"Merge pull request #531 from metamx/listenable-prioritized-executorservice

make prioritized executor service listenable",2014-05-16T22:59:04Z
e4db0728f2d010c984e5ffe4798494c8ce2c709e,"Merge pull request #549 from metamx/fix-sink

fix race condition with merge and persist and sink adding",2014-05-16T22:40:31Z
68618ffc7536c937cf4d840255a17e53f69e1db4,fix another code review comment,2014-05-16T22:38:28Z
389319dd6e827f73f360896e102f0dbe4912954d,fix for code review comments,2014-05-16T22:32:58Z
09ad32c5c563c7f8482f9a5170ad07320d7976c5,"fix race condition with merge and persist and sink adding

Conflicts:
	indexing-service/src/main/java/io/druid/indexing/common/task/IndexTask.java
	server/src/main/java/io/druid/segment/realtime/RealtimeManager.java
	server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumber.java",2014-05-16T22:15:10Z
b41b80fab484abd31b3fe7621f24c7e67b0ea95a,"Merge pull request #539 from metamx/sequences-all-the-way

Replace Iterable with Sequence in CursorFactory",2014-05-16T20:53:26Z
3223d46c1a017a93c0e72d98de7fa18db3cfcce5,simplify chained sequence operations,2014-05-16T20:49:40Z
07b2a0efa6ef0e6b2c9424fd4ebef87a18d7b48f,"replace iterables with sequences, fixes #128",2014-05-10T06:01:39Z
0c6e238e5b63f3fb6548ddec45b09504c7231e0f,"Merge pull request #546 from metamx/object-column-selector-multivalued

ObjectColumnSelector/JS aggregator support for multi-valued columns.",2014-05-16T18:03:30Z
5e4463b8bfc72d6c0f7bf6f20de2eef76cc40a69,"Merge pull request #547 from metamx/add-test

add comment for ignoring test and add test for thread stucking",2014-05-16T18:03:09Z
d8282d0126bc56f010cb29c452d6c61694fca7fa,add JavascriptAggregatorBenchmark,2014-05-16T17:41:54Z
4fbd6c7c36fb2f7a6eb06684ebd3d86c70e65c8e,JavaScriptAggregator comment explaining why primitive wrapping is anti-helpful.,2014-05-16T16:47:59Z
b4a791a0351e266ff1f15715f15fc5e81d7a8b9f,add comment for ignoring test and add test for thread stucking,2014-05-16T14:18:12Z
918ee8741a52d070494798a25f8032d7641874f3,More JS aggregator tests.,2014-05-16T06:08:56Z
d389fbc9619d7029854fbbbdd9dbf8c38f84c8ae,More consistent ObjectColumnSelectors. JS aggregator tests for nulls.,2014-05-16T06:02:37Z
cb028f490afb2a99e3017ff34f9c49ccc5440aa9,JavaScriptAggregator: Context.newArray makes nicer arrays than Context.javaToJS.,2014-05-16T03:02:36Z
c2137e8416a346e055b9b466cc37c28949ff108e,ObjectColumnSelector/JS aggregator support for multi-valued columns.,2014-05-16T02:34:22Z
da285d8665976361672527572e511d1ec9123009,[maven-release-plugin] prepare for next development iteration,2014-05-15T23:44:36Z
b7009c9102940730cf0b75308e3c28e47c12fccc,[maven-release-plugin] prepare release druid-0.6.109,2014-05-15T23:44:32Z
6db0cd623f9e1169f8fd0222b9087c876e75bcef,ignore jetty exception test for now,2014-05-15T23:42:48Z
3a17a60d4c691d2c0498585284fff5491e42959f,more comprehensive merge sequence tests,2014-05-15T23:27:13Z
b51f0f78375a08469f818f6ca1c912d5256b101b,update java-util and add more merge sequence tests,2014-05-15T23:19:12Z
43853a1d9efd92e88d2706eaac8d56545b39db3b,"Merge pull request #545 from metamx/union-query-fix

Union query fix",2014-05-15T23:17:46Z
2a9a4deda2073ea53e76acd8bf9e18d1616a2af2,"Merge pull request #543 from metamx/fix-combining-sequence-yielder

fix broken CombiningSequence.toYielder behavior",2014-05-15T23:01:36Z
ce3d461e7d0e752d6d24ff5cec675f26232b2099,add header,2014-05-15T23:00:58Z
e06b29edb9be870ea5d0611e87d0685a8415580f,add sanity unit tests,2014-05-15T21:45:35Z
01d0234b461af07255d670117bea432c393e45bf,Merge branch 'master' of github.com:metamx/druid,2014-05-15T21:23:26Z
6098cff37af85988a1c9a475f1362de770c1abfd,clean up event receiver firehose factory,2014-05-15T21:23:13Z
ddc36c89cc5a53f6a201c43cbf839f5c960b21a2,union query fix and a broken test,2014-05-15T17:40:40Z
793bc3539b0d8b02b9963134b1c30b22c879d444,"Merge pull request #538 from metamx/fix-jetty-exception-handling

fix jetty threads getting stuck",2014-05-15T16:55:46Z
088c60cf3dfeb24036ba5b3c507e54f60b794cf3,always use ByteCountingLRUMap.remove() to remove,2014-05-15T05:45:28Z
8fb76138bd4db93001cffe016718ba05027cd69a,tests must not assume findOvershadowed ordering,2014-05-15T04:52:31Z
62c55eaf261beae731fb4c7f30022c66d6d68615,fix broken CombiningSequence.toYielder behavior,2014-05-13T23:40:54Z
c57a18d6b6e8536ae442b062436fe755caf02132,Merge branch 'master' of github.com:metamx/druid,2014-05-12T18:38:55Z
32eee959c301de766f9988ad76a6ad1ed48b06fe,fix backwards compat issue,2014-05-12T18:38:46Z
0912a2a09acbf3df594e25bbf23706ea64a2acf3,use Guava's ForwardingExecutorService instead of DelegatingExecutorService,2014-05-10T05:44:04Z
4280b4e8fa82167fdb0d0e58ee085bcc4950a07b,make MetricsEmittingExecutorService listenable,2014-05-10T05:42:45Z
26569f4b7ffcf1cebb4a501b2e609d2649eb4ae6,"fix jetty threads getting stuck

Fix Jetty threads getting stuck on exceptions",2014-05-09T20:42:19Z
4cc2f98d7870181cce663b254dcf5b4ff7aee895,"Merge pull request #537 from metamx/remove-initial-delay-polling

remove initial delay from polling",2014-05-09T18:24:01Z
17e994f2e438d98c7c29600a44f8cc9fbfaa581a,review comment,2014-05-09T18:23:25Z
6be6337ab0617304fa839e3f40e9cf7f3df23071,"remove initial delay from polling

remove initial delay from polling in coordinator, this will help in the
cases when the pollDuration is set to higher than coordinator
startDelay.",2014-05-09T18:03:00Z
48ae84ed561eaef605641edaf6f15cb88475e6e8,[maven-release-plugin] prepare for next development iteration,2014-05-07T19:40:14Z
27f7c45e91a42adbb30658cc60675a97dca392eb,[maven-release-plugin] prepare release druid-0.6.108,2014-05-07T19:40:10Z
2709a8b0b69be40c4a449c7dfefbfef0e6d5e650,revert changes to hyperUnique,2014-05-07T19:33:42Z
9d35490cdf65e2db01ad8a41de53ee3eb7bae38b,"Revert ""Merge pull request #495 from metamx/dim-extraction-null-values""

This reverts commit 76437379d7eee80898bd70f589b0eefd393e9f90, reversing
changes made to 79e6d4eb56806e9ab123a93458c99efd1ea2af03.

Conflicts:
	pom.xml",2014-05-07T19:32:51Z
42994cebcde60079f2c8140d1f420bb27a9fb236,[maven-release-plugin] prepare for next development iteration,2014-05-07T18:25:50Z
2bf5c3831d6ee97073f47a25a6f44cf7c89d643d,[maven-release-plugin] prepare release druid-0.6.107,2014-05-07T18:25:45Z
4fa6de4c6c50b674e5612750f58648c3983cf884,support null dimension values in HyperUniquesSerde,2014-05-07T18:07:25Z
e7da1bb9ce9e87132c045ab1342e0f0229b36e4a,fix injection problems with server select strategies,2014-05-07T17:13:05Z
dcab7efa1be38987db4c226263a04a28b18dd50c,"Merge pull request #416 from metamx/new-schema

Refactor and clean-up Druid data ingestion Part 1 (The Schemas)",2014-05-06T22:17:53Z
d75cc7b9b869a02bcc1e838eadb8d1446588a8e5,fix more serde,2014-05-06T22:17:38Z
1100d2f2a1eb249355ff29e6f0152545a5a8790d,rename configs to make a bit more sense,2014-05-06T21:52:50Z
b6fb4245aa62fecb3c13b0eea74c04fad698bc98,"Merge branch 'master' into new-schema

Conflicts:
	indexing-hadoop/src/main/java/io/druid/indexer/HadoopDriverConfig.java
	indexing-hadoop/src/main/java/io/druid/indexer/HadoopDruidIndexerConfig.java
	indexing-hadoop/src/main/java/io/druid/indexer/HadoopDruidIndexerConfigBuilder.java
	pom.xml
	server/src/main/java/io/druid/segment/realtime/RealtimeManager.java
	server/src/main/java/io/druid/segment/realtime/firehose/EventReceiverFirehoseFactory.java",2014-05-06T21:32:51Z
ad54f150ec921b6039fc8cba5d4e35ad20cecca0,fix broken UT with bad api version,2014-05-06T20:51:22Z
0ee2323875e3956a85fffd008d89d37a0604cd61,"Merge pull request #399 from metamx/multithread-costbalancer

Multithread costbalancer",2014-05-06T20:18:07Z
76437379d7eee80898bd70f589b0eefd393e9f90,"Merge pull request #495 from metamx/dim-extraction-null-values

Support null values in DimExtractionFn in topN and groupBy",2014-05-06T20:17:55Z
79e6d4eb56806e9ab123a93458c99efd1ea2af03,"Merge pull request #528 from metamx/union-query-source

Union query source",2014-05-06T20:13:33Z
66450ca6edcd934cdfa549a64837f79c8d9a23af,"review comments

remove toShortString
minor other changes",2014-05-06T19:24:17Z
6f3f5c6e996c3aa27c1e62c28a869ff62d11d1cd,[maven-release-plugin] prepare for next development iteration,2014-05-06T18:28:39Z
a5a875e1ed6c15bb39da1cf609c2e2094a238356,[maven-release-plugin] prepare release druid-0.6.106,2014-05-06T18:28:34Z
a984ca100427572e266fea4ee3ec2209ff791625,"Merge pull request #534 from metamx/hadoop-properties-in-config

Allow config-based overriding of hadoop job properties.",2014-05-06T17:52:04Z
bdf9e74a3bb72e393d23610a9c1cac6028281d81,Allow config-based overriding of hadoop job properties.,2014-05-06T16:11:01Z
a747ed00114ef2c3c0dc5995f7615edf74459903,fix broken UT,2014-05-05T23:13:01Z
b1bd6eb0f21470dcb35f37930bc0a15ca26bb72c,"Merge pull request #512 from metamx/cardinality

Cardinality aggregator",2014-05-05T23:10:24Z
544c0f08f60bc541c90606386719734473ba0869,"Merge pull request #459 from metamx/move-firehose

Move the event receiver firehose such that standalone realtime nodes can use it",2014-05-05T23:09:43Z
8af927e2a736746cc985fd29c33e508f45ab5c90,"Merge pull request #516 from metamx/alphanumeric-topn

Alpha-numeric sorting for topN",2014-05-05T23:09:24Z
42c2fcb6b457d192e245b7e6134bafffc46ed020,"Merge pull request #518 from metamx/server-select

Smarter server selection at the broker level",2014-05-05T23:09:15Z
9615c5e4285659c84105321d78f9ea35aaab76e5,"Merge pull request #519 from metamx/more-endpoints

Add more endpoints, fixes #517",2014-05-05T23:09:02Z
ea318f01ee63899c63fd1a44fa96d6c46d2e84b4,allow forcing all tasks to be prioritized,2014-05-05T18:42:30Z
f2725994b75fc5b0a407db051bd9dd1b16864382,refactor method,2014-05-05T14:27:32Z
0b9191b87665fc2839860f07998b9d564dc7eacf,"limit on balancer compute threads

max being no. of processors - 1",2014-05-05T11:56:44Z
cae4363f66e562689c8d3566891ada6b81c4cb29,small perf test,2014-05-05T11:43:12Z
477e01daf73930bfbbcd1a90e73175eb0a1350cb,review comments,2014-05-02T09:51:06Z
dab30395d5e8fc337f050c4e84c959b550333e9d,make prioritized executor service listenable,2014-05-01T22:47:06Z
e0bce3168c899839be82bc5bb79e83778a6113e7,[maven-release-plugin] prepare for next development iteration,2014-05-01T22:09:01Z
dd0004b759bb0dcd7ccb8c32b6393ea366780d6c,[maven-release-plugin] prepare release druid-0.6.105,2014-05-01T22:08:57Z
b8184821b5d6f263d38e6c07754ec71cdd128752,update docs for next rel,2014-05-01T22:07:14Z
f9523274ac0a0e465b4b3e144d59f00ac8c0be24,remove extra println,2014-05-01T22:06:51Z
34362e880c322c0e4b34ab8d6bd44b965e9436f0,"Merge pull request #530 from metamx/exclude-netty

Exclude old netty version from certain dependencies",2014-05-01T22:04:20Z
044c9f631cd3c8ad05f5eaa74398fcae176de4fe,"Merge pull request #527 from metamx/fix-empty-intervals

add filesystem checks again",2014-05-01T22:02:31Z
7561f375b2520d936dbf09cbc818d560716b1b64,exclude old netty version,2014-05-01T21:57:41Z
1b6137504c92cb31b750f72746fd64e58a9fe38d,Add toString for better logging,2014-05-01T16:02:27Z
92ebe69fd9f5df3b76a4264969f98a4013d5cb1a,remove unwanted loggings,2014-05-01T15:46:42Z
1d67e399492e90beebadab76df947492f3a49e97,"Fixes

fix NPE in select query, calculating cache key
remove unwanted logging
fix ds in topNQuery",2014-05-01T15:34:47Z
5137031304aa5bd74cf989daac3285b50b40c06b,"use same logic for compression

Use same logic for compression across creating files, reading from
files, and checking file existence",2014-05-01T09:50:47Z
728f1e8ee38290f2ca2267648fa20bdaf35d4d57,fix exists check with compression,2014-05-01T09:31:10Z
01e84f10b753a2a49ec8b968beb293e431ebbc38,"add the checks again.

removing these checks breaks when there is no data for any interval",2014-05-01T09:05:09Z
728a606d32ba31939e6a4d20b47ea72b2d2de49f,Add support for union queries,2014-04-30T20:24:52Z
015000ee8f2f08ab569f499804f7eb2180351b95,[maven-release-plugin] prepare for next development iteration,2014-04-30T20:16:24Z
eae7d55dce67e1815216ed9da2b185d57117275f,[maven-release-plugin] prepare release druid-0.6.104,2014-04-30T20:16:20Z
268c9aa80768516bda13749f5f82b70530e0fe30,update docs version,2014-04-30T20:11:46Z
46eedd7a95087ddfa4e9f260aeffa13b08d2a789,"Merge pull request #526 from metamx/fix-race-ingestion

Fix FileNotFound in realtime nodes",2014-04-30T20:10:41Z
faa74ce2cbad8876e25ef151c7f5188a89f77407,"hasSwapped properly check

protect check for hasSwapped.",2014-04-30T20:08:03Z
ff56573910b26b065bcaf2823692a6f43a1861ec,"Fix race

Fix race in ingestion that can cause FNF,
Properly check for partitionNum
shutdown persistExecutor",2014-04-30T20:04:58Z
bcbade3a162a4d65d506fdca30a927b016e18b45,"Merge pull request #525 from metamx/update-java-util

update java-util",2014-04-30T20:04:14Z
7700001e27cc46a0c90c135078c32372b7616a6a,[maven-release-plugin] prepare for next development iteration,2014-04-30T17:45:20Z
1e639792bf60d734977c65fb116dd0f632d1db16,[maven-release-plugin] prepare release druid-0.6.103,2014-04-30T17:45:14Z
c2f615a05a0caf7e688c40b7cde2f8df6daf2e1c,update java-util,2014-04-30T00:50:15Z
3fd651c2359bc2e22de741942493590d9f1be6fc,"fix the rule again, update docs, and prepare for next release",2014-04-30T17:43:30Z
9ad0da0794e5c93e7d08772d68696892776c5e8b,[maven-release-plugin] prepare for next development iteration,2014-04-30T17:26:38Z
5b7b29b61b50245971eb55cbab4f7d3fbf37d5c2,[maven-release-plugin] prepare release druid-0.6.102,2014-04-30T17:26:34Z
0790303b4a32ab7d38b629617f1d01b9f3dda827,update docs and prepare for next release,2014-04-30T17:23:35Z
159c3361b8187dc4a11060083464d566f261b103,"Merge pull request #524 from metamx/fix-router2

Small fixes to router",2014-04-30T17:21:45Z
411def50132af6dc1eae1793aea7c2bed34d6b43,"Merge pull request #514 from metamx/reduce-bloat

Reduce some bloat in the code base",2014-04-30T17:21:35Z
68242950f7ff86efee8db2696666d07b30308351,make coordinator routing smarter and period load rule explicit,2014-04-30T17:11:25Z
ffd37bc7bdd92b2a8420d82275b88f987b48aaf3,"Merge pull request #521 from metamx/igalDruid

Igal druid",2014-04-30T00:06:30Z
7cd2f9a9bbaba5adc5450baf17a9c84d1c86fae5,fixed couple of typos,2014-04-29T17:00:28Z
77fb424034f1593828618a997d202e5c6e8bbf9f,fixed borked description of whirr.hardware-id,2014-04-29T16:56:00Z
9bc6436176a39e3d339b088036483c4295a7491d,"Add more endpoints, fixes #517",2014-04-28T22:55:03Z
e90eb4b83a41a84e4ccaa9d2f73887fa220f8aca,add custom tier selector,2014-04-28T22:31:15Z
9de170540b84a875ff22300478d54fb4cc69f714,fix bug with selection in cli,2014-04-28T21:00:53Z
3c3daf452ea3f483dc6c7189191de84a016361c0,Smarter server selection at the router level,2014-04-28T20:58:10Z
fc874f8bbbf437f79858a809139c60704c73741f,add docs,2014-04-28T16:51:58Z
bb62a44e245505dfd8912f2901e18a98d3be7173,alphanumeric topN,2014-04-28T16:42:43Z
ca1e951e176eb2c3f544c6c847a5e3a13408015f,druid header,2014-04-28T12:30:51Z
ded08b22ee7a31a6cc05d2c0510f0cf43623c96a,"opStrategy and ordering for ArithmeticPostAgg

Fixes #510",2014-04-25T23:24:37Z
e30accbbf55804f00682ddcf685f989f02918fb6,reducing bloat,2014-04-25T22:24:46Z
5ae848ab14fffc255d1289185bc67e9417301ff5,fix formatting,2014-04-25T22:09:47Z
c1e6f6d83efa962d245589eb59ba50a6a32ecd22,formatting changes,2014-04-25T21:51:58Z
de5b1749bc17c8d36ae382f12553ed7c3c6e1014,minor changes to address code review,2014-04-25T21:50:22Z
a33c2f7880d30ca59a7b83c2bf7153e6b355226b,clean up firehose module and introduce parsers module,2014-04-25T21:20:02Z
171d20d52d55d9e15a4eed8cd16e2757a30f0103,Merge branch 'move-firehose' of github.com:metamx/druid into move-firehose,2014-04-25T21:13:19Z
eef034ca7e0a666006882f2b208f92d4e319d121,Merge branch 'master' of github.com:metamx/druid into move-firehose,2014-04-25T21:13:08Z
76e0a48527291af9965dfd6ee794390d07959952,"Merge branch 'master' into new-schema

Conflicts:
	indexing-hadoop/src/main/java/io/druid/indexer/DbUpdaterJob.java
	indexing-hadoop/src/test/java/io/druid/indexer/HadoopDruidIndexerConfigTest.java
	indexing-service/src/main/java/io/druid/indexing/common/task/HadoopIndexTask.java
	server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumber.java
	server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java",2014-04-25T21:03:28Z
42c4e955fa3546895e1fb1a67e8197ee76cf6505,cosmetic changes,2014-04-25T20:24:34Z
14907645aac85f923df9fc78e04d74c493f80bda,add cardinality aggregator docs,2014-04-25T20:23:43Z
3c9b8dc9999bcc2c7980d672a9010ef87084e914,cardinality aggregator,2014-04-25T05:08:25Z
f88cb13ccbd5c040f2713a47cda499a258f22651,[maven-release-plugin] prepare for next development iteration,2014-04-25T00:27:58Z
b8c14ba061ee4a298cf88acfc448b9edb497879b,[maven-release-plugin] prepare release druid-0.6.101,2014-04-25T00:27:46Z
55d316b1ff0ab75de76c2674647907eb28988da7,update docs version,2014-04-25T00:17:26Z
5d105e75982c88ffc958ef9de14266ae8522a0f9,fix stupid cache config bug,2014-04-25T00:13:04Z
5e982752515dd52745d11d6dce6d6038dc482348,[maven-release-plugin] prepare for next development iteration,2014-04-24T18:47:52Z
35dc96e9468404d3dc9d454d64d5719e81752352,[maven-release-plugin] prepare release druid-0.6.100,2014-04-24T18:47:47Z
c4cefb667ee81a2e17649ce2c2df7d8e68ebecc1,prepare for next release,2014-04-24T18:45:25Z
90e600bad699920294a96333ab76589b86b05823,"Merge pull request #511 from metamx/fix-hll-buffer-and-swap

HLL: avoid direct buffers + fix swap target buffer",2014-04-24T18:03:54Z
30d1a5db75ed86d7e7173a5831ddabafe296d856,HLL: avoid direct buffers + fix swap target buffer,2014-04-24T17:48:35Z
12292f3276120ebfd76491bb124aba379ace0208,"Merge pull request #505 from metamx/doc-for-numShards

add doc for numShards",2014-04-24T05:29:00Z
7f0319a8ae4dc30c2e21a3ace14384eedf3fc579,fix NPE,2014-04-23T23:51:12Z
0595b001e5eb2a3fd9ec114cb8649121df53522b,add doc for numShards,2014-04-23T16:41:28Z
174ff66a880e2381bd2c93735265242e3c958b98,"Merge pull request #504 from metamx/shard-count-limit-fix

Fix shard count limit",2014-04-23T16:12:05Z
6eb282b3a8d265abc42bf790122afd7badecbaee,"Fix shard count limit

Fix shard count limit at another place,
Use partitioned as a flag",2014-04-23T08:26:06Z
bec171fea9d5bebc9e32aaee13d143f36e9f1ae1,[maven-release-plugin] prepare for next development iteration,2014-04-23T00:10:33Z
67972ca5c53b1c6f464f3bfad3501444301f2918,[maven-release-plugin] prepare release druid-0.6.99,2014-04-23T00:10:27Z
b653ea0530a693a9bdac902facf06c30d0b9cd66,prepare for next release,2014-04-23T00:07:11Z
2d1f33e59f370f05e5e43315ed8fa3a1b2cce5b1,"Merge pull request #500 from metamx/batch-ingestion-fixes

Batch ingestion fixes",2014-04-22T23:59:24Z
357bbf512734e876cbdcd3012dd3f30852807171,add all the shard specs,2014-04-22T23:53:11Z
625a5418d2035a5598c46c33fe99405f71ab3c64,minor fix,2014-04-22T23:35:51Z
c6890439386681934964d043c52194f683f25193,fix twitter tutorial doc,2014-04-22T22:31:14Z
771f89f495f9da0372e6e9a2d0e547a83d61c276,update docs,2014-04-22T22:27:19Z
1ca61237c10e891682da45d9a3014409320ac4a9,review comments- use final variables,2014-04-22T22:03:28Z
0d8c1ffe54c16648af34054b34d66eaa7d74f5d8,review comments and add partitioner,2014-04-22T22:00:30Z
f1d705cb73059788227e35e1b381a886abb8b690,proper toStrings of filters,2014-04-22T21:46:19Z
4c7399bfbfad244d6c2c9e31d7df6e960ea165dc,"Merge pull request #503 from metamx/pulldeps

PullDependencies changes.",2014-04-22T21:40:59Z
8d650ae131ba8999fac2c8f347995eedad0fda7e,"PullDependencies changes.

- Pull default Hadoop version by default.
- Allow additional coordinates on the command line.",2014-04-22T21:33:51Z
d63107f8908f64360be620ec95000696811e033d,"Merge pull request #502 from metamx/fix-NPE-CQE

Better handle null adapters and NPEs in the CQE",2014-04-22T20:16:14Z
22fba225228a468343a2a220fdbe3dee884de9bc,remove whitespace,2014-04-22T20:07:12Z
d1b035a8b91703dd02801dc2b314b529479ff993,use emitting logger for query resource,2014-04-22T19:59:24Z
fcc13667129d74cad71aef0187420fca4d981cff,remove test main,2014-04-22T19:54:16Z
8fd39c63d5df8053567c867a8edd0a027c70f2f5,Better handle null adapters and NPEs in the CQE,2014-04-22T19:47:53Z
ea4a80e8d276b7b2296454d889660494263a9388,Add serde test for shardCount,2014-04-22T18:54:08Z
e920cec5d0098ca6c833defd6262e59ffde4babb,remove unused import,2014-04-22T18:43:30Z
0748eabe9bec95be0da1b93948694485a9b7798a,"batch ingestion fixes

1) Fix path when mapped output is compressed
2) Add number of reducers to the determine hashed partitions job
manually
3) Add a way to disable determine partitions and specify shardCount in
HashedPartitionsSpec",2014-04-22T18:35:08Z
560045ddd2a37ed96703d31623e059248c62b944,update emitter version,2014-04-22T18:21:54Z
d17abedae3381ab0a61b1db32d8292de8c0ca580,"Merge pull request #499 from metamx/fix-pull-from-cache

Fix pull from cache",2014-04-22T18:19:57Z
2df2cbf2a2cb6ec95bc133ae6f227688284962a5,"Merge pull request #466 from Crystark/patch-1

Support for postgresql",2014-04-22T18:18:05Z
44fec509ddc10ee68286f75bdbb51b92343d34a4,"Merge pull request #498 from metamx/fix-nan-serde

handle NaN / Infinity values",2014-04-22T18:17:29Z
4e1c159ff1473833eb84b8c100a22df2746828ab,"Merge pull request #497 from metamx/fix-metrics

Fix server metrics to avoid NaN and Infinity",2014-04-22T17:58:42Z
9d762b87cee6eb65228e690af8eac35677fb7b4b,"Add diff values, to test another path in merging",2014-04-22T17:55:17Z
3bac3660131d2b7930b6ad96aa24ad8e0cb6a9db,handle NaN / Infinity values,2014-04-22T17:42:44Z
4721ba3f1ec5542bf5c2d2a4c15f054c856da8f4,add test + small fix for other test,2014-04-22T17:33:48Z
cde93d810cf6600e1bb8dd854b82f5b987e3cd92,fix server metrics to avoid NaN and Infinity,2014-04-22T17:26:46Z
65c71a40bb11a3273deec638dd1077bf816bea17,"fix more issues and add test

1) Add test for caching and calculation of dependent post-aggs for
TimeSeries and TopN
2) Fix more NPEs while calculating dependent postAggs, passing
baseHolder was wrong as it does not contain post-aggs during computing
dependent ones.",2014-04-22T16:35:17Z
3fb42251d90cea242b43413842bd32be8042cd4f,calculate postAggs while pulling from cache,2014-04-22T05:55:21Z
7bafb718416a7345f3d6490877b04794165ed1b4,"Revert ""fix npe in topNBinaryFn with post aggs""

This reverts commit bbedde3418ba0a83a1777681d549b3ff1295b000.",2014-04-22T05:40:55Z
52f575025b5b495dd790df8ad92f47250fbcb8ce,requires druid-api update,2014-04-22T05:37:31Z
bed8860fd4fe62e95f3a5f1bb0004586805a2e03,[maven-release-plugin] prepare for next development iteration,2014-04-22T05:34:43Z
594bb65ba61d0119a4e807ad8e6060a84008fb56,[maven-release-plugin] prepare release druid-0.6.98,2014-04-22T05:34:38Z
c0ddfc08729c59da0cf30f08e2dc4ea22878aaf7,update versions,2014-04-22T05:32:53Z
357cd66f667ec0f0902975497fa82c75ff114970,[maven-release-plugin] prepare for next development iteration,2014-04-22T05:26:28Z
93ed56f68032932d8abd9916327b0761128780e4,[maven-release-plugin] prepare release druid-0.6.97,2014-04-22T05:26:23Z
c44cdba65e5b62ebfcc54610a86ed4699281ee79,"Merge pull request #496 from metamx/fix-topN-postagg-npe

fix npe in topNBinaryFn with post aggs",2014-04-22T05:22:07Z
bbedde3418ba0a83a1777681d549b3ff1295b000,fix npe in topNBinaryFn with post aggs,2014-04-22T05:15:11Z
07aab2832533d1a17d143cc61e24b9097279927b,clean up topnbinaryfn,2014-04-22T03:30:18Z
48590862cb08e7106fcc766327591b26f744b7c7,support for null values in group-by,2014-04-22T00:58:44Z
44bd4339b554b7dce2b3c251720d8622bc217a2c,support for null values in DimExtractionFn,2014-04-21T22:16:56Z
310073685d862eb1980ea5053f87939efb49d1d2,[maven-release-plugin] prepare for next development iteration,2014-04-21T19:16:39Z
1778d9adf47ff2b09abff12f3b1788758bcf692c,[maven-release-plugin] prepare release druid-0.6.96,2014-04-21T19:16:35Z
04009b41953a06d5dae7528f0f9ba70c76d71208,prepare for next release,2014-04-21T19:14:50Z
39f9194fe6b278a27a8c8e89c0345627e1aa4ca7,"Merge pull request #493 from phungleson/fix-link-typo

Fix typo in the link back to The Druid Cluster page.",2014-04-21T17:00:09Z
6dd8a38cc75cbef63357cd12bdcf06ee2e02a9d3,"Merge pull request #494 from metamx/fix-bysegment-results

fix bySegmentResults",2014-04-21T16:59:47Z
f20d3b289520e4c586d383da32727a5819f82cca,merge changes from master,2014-04-21T16:13:44Z
e8b993b765226864bab3df183c9cbd43b25503d8,"fix by segment results

1) fix class cast in by segment results
2) exclude old netty version coming from curator",2014-04-21T15:56:34Z
fd0d7450187f7f920eadf92b772296b92f35dd70,Fix typo in link back to The Druid Cluster page.,2014-04-19T06:23:40Z
65db875d689b8ff4654977eef081645eccc78d73,[maven-release-plugin] prepare for next development iteration,2014-04-19T00:44:36Z
2d3eebe9956a67c28e00a4170fb575f4d6394f6e,[maven-release-plugin] prepare release druid-0.6.95,2014-04-19T00:44:32Z
517d3d268222c5bc4cd999cf236ed679b49dce45,prepare for next release,2014-04-19T00:42:47Z
7f15eb51f28a8eebc3213fc3a55db201031fd7d3,"Merge pull request #492 from metamx/post-agg-fix-2

fix post aggregator",2014-04-19T00:42:05Z
e3fbbff2373771fae0a2e1232fe0cafc88e8d9ae,clean up code,2014-04-19T00:41:47Z
a0c8d9d413b48aa581fe0bf9f17e5a7f9e667b9a,restore previous behavior of not optimizing Timeseries post-aggregators,2014-04-18T23:45:06Z
597e55ab50b27d4bd97689378d121cba87d56791,don't override context when not finalizing,2014-04-18T23:26:21Z
68e8cda2dacf4949861d4e902f535570cb3c69c9,fix post aggregator,2014-04-18T22:54:07Z
265ac37cdc2ac1bbf5fff9284ac11a8ef9938286,[maven-release-plugin] prepare for next development iteration,2014-04-18T18:53:43Z
5162864731e649478527b91a14513aaa3df478a4,[maven-release-plugin] prepare release druid-0.6.94,2014-04-18T18:53:38Z
c00fb1d08ebe03bb42149016cdbbb0b408b1811c,"Merge pull request #445 from metamx/hadoop-version-update

Hadoop version update",2014-04-18T01:16:44Z
a520a2dde0484772b68abe3bdd77a8792684f253,handle null request uris,2014-04-18T01:13:03Z
1fcb3e01c3f8839988b8b7bd7df8a6e20f472c9d,[maven-release-plugin] prepare for next development iteration,2014-04-17T22:30:30Z
e9b77c4434a21eca85b2727a4eeb9922ec1b61f4,[maven-release-plugin] prepare release druid-0.6.93,2014-04-17T22:30:26Z
ad60a4a5fd01c7e19d3495320ca5336e225f94e6,prepare for next release,2014-04-17T22:28:46Z
a573e77177eeee12fbad95093a6c456718d64036,fix CLA email / mailing address,2014-04-17T22:26:05Z
aba31ea814c34077e266dd6177b5c8cc064ac55d,"Merge pull request #490 from metamx/lazy-cache-population

Broker populates cache lazily",2014-04-17T21:51:18Z
d0e65684d4c4302c4d7ff443d21a73777717c28e,"Merge pull request #489 from metamx/fix-groupby

Make hyperUniques work for groupBy",2014-04-17T21:46:45Z
399efe7dc4da56dbf2ed5bcc37cf7cfcb0f30f06,make uniques work for groupby,2014-04-17T21:41:17Z
6a5211203462bf3161a105fa9fef292fd0a70728,let broker populate cache lazily,2014-04-17T21:27:42Z
e81479db44d3b563ac11b69e43fd0c27654ba856,"Merge pull request #488 from metamx/update-http-client

update http-client to fix timeout issues",2014-04-17T19:13:31Z
9ef65f1dedc6e6893691a780a977f8d8e8d0cf16,"update http-client, fixes race conditions",2014-04-17T17:02:43Z
4ccd979f1aa994f30e264c1770a6306d8cacc10f,"Merge pull request #487 from metamx/add-jetty-test

Add test to test Jetty request timeouts",2014-04-17T16:49:02Z
943b6ed12cbe9528936070a8b6d7995f79a410f6,add comments,2014-04-17T16:48:08Z
5f61d0396c8c34f9a608bf28d0d391fb22e4ae74,Ignore test,2014-04-17T16:39:48Z
7765c96a39df638b15eda47774278837ad957cf2,Add test to test Jetty request timeouts,2014-04-17T15:06:28Z
88874ed56cc16cda557e83a5b21283bbaf810c62,"Merge pull request #485 from metamx/igalDruid

Igal druid",2014-04-17T00:05:36Z
66a8ff9390574385b0c9bc040ba4095902833ee6,[maven-release-plugin] prepare for next development iteration,2014-04-16T18:40:35Z
6621c4f32135f53b70b46b6305e44a60d7aacc81,[maven-release-plugin] prepare release druid-0.6.92,2014-04-16T18:40:30Z
795d506939494965dcceef1560e90ef1935bd794,internet disconnected and last build failed,2014-04-16T18:32:32Z
b26a40aeaf8ae98fb92a5eea4ce831ae7c99471a,[maven-release-plugin] prepare for next development iteration,2014-04-16T18:26:34Z
8ee892726761449c622e0bfe05aae069327ba303,[maven-release-plugin] prepare release druid-0.6.91,2014-04-16T18:26:28Z
7f4e7d2b8fb3975ec8ddeab63aa72acb396d6cfa,prepare for next release,2014-04-16T18:24:45Z
f3125490fffa7ebbf83a1dbdbd8880549734e98b,Merge branch 'master' into igalDruid,2014-04-16T18:24:18Z
52e53db54e7d3f76e7e0bd35e16cc5b30a8b6064,minor edit to Metrics Module section,2014-04-16T18:23:47Z
2183c7ab08f37f2d4df93d5efd0edd750f32a9c0,"Merge pull request #483 from metamx/fix-aggregatefirst-topn-algo

fix NPE in aggregatrFirstTopnAlgo",2014-04-16T18:20:39Z
0629b1a04424cfca25a8e6a120fc86507028c95c,"Major edits including the following:

* Emitter module is logging
* readTimeout for http client module 15min
* Fixed broken link to ZooKeeper.html
* Clarified druid.processing.numThreads is #cores - 1 or 1 if #cores == 1
* aws storage section moved under deep storage
* Added more info on various monitors and how to specify them (Metrics Module section)
* Clarified info on:
    * storage tiers and added the property druid.server.priority (Storage Node Module section)
    * segment cache : where historical nodes store data in disk cache
    * druid.query.chunkPeriod
* Removed druid.db.connector.pollDuration
* Fixed definition of druid.selectors.indexing.serviceName and moved to discovery section",2014-04-16T17:57:52Z
a87213e15fa7a9616e31980242f8e57533d6c52c,point code docs to latest instead of a version,2014-04-16T17:50:39Z
141404907bf5f0c0b7e175e1bbf333ed78837e8a,"Merge pull request #484 from metamx/fix-router

Cleanup code in router and add forwarding for get requests",2014-04-16T17:46:35Z
c6274762b73d48c738a51c8442323ba2b40fc1bc,throw ISE when no servers found at all,2014-04-16T17:27:34Z
6306e87a969d2a7a3f909f2913a1d6ef4449546c,avoid copying bytes,2014-04-16T17:14:15Z
51e2da9d8d2ac39e844f5dc648a64e8384b5925a,"use a separate annotation for the router, less confusing",2014-04-16T17:08:58Z
24a0268036d53131f9b5bc468850e6b9f1c5244d,cleanup code in router and add forwarding for get requests,2014-04-16T16:36:18Z
2b5fec1dcfffc8cd4ff05ebb21a429a92551803b,review comments,2014-04-16T11:42:27Z
6da22720765af90e191340cbe7685bb5a27a08f8,fix NPE in aggregatrFirstTopnAlgo,2014-04-16T03:42:34Z
ee47937889de523361e2fe719187640c7dfa4d31,"overhaul of config reference, first pass",2014-04-15T22:38:58Z
6893282a65338aed71253eae448369a068924bd0,[maven-release-plugin] prepare for next development iteration,2014-04-15T21:26:57Z
7e9166d20c5b06d6cee66b87f8724a48fbe1b678,[maven-release-plugin] prepare release druid-0.6.90,2014-04-15T21:26:53Z
508cf6a4f77bd3482cbb146678f3623e4bc46f8f,Merge branch 'master' of github.com:metamx/druid,2014-04-15T21:23:58Z
9b06b6aa58c68992fc289be8c98c371333478a11,misc fixes for router,2014-04-15T21:23:54Z
06994a75b7f5960d581c98667b8cb59cf64d9680,"Merge pull request #482 from metamx/update-jetty

update to jetty 9.1.4",2014-04-15T21:18:10Z
228be3acb0784b600f2bc6bbeb9822d916b82daf,"Merge pull request #467 from metamx/optimize-postAgg-calculation

Optimize post agg calculation",2014-04-15T21:18:01Z
3117f439e0a26e951a1bcae8fc14cc8cc4b2a741,update to jetty 9.1.4 to fix bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=430654,2014-04-15T21:02:18Z
36f6f8ab5a44d74480d8856895d206b25a9d66b1,Add testOutOfOrderPruneDependentPostAgg,2014-04-15T19:19:56Z
cd1c1d261565446ae33c21d235e406b58abe4deb,fix casing issue when parsing event,2014-04-15T18:02:54Z
6217c670271843d3010c317da8902cd2504464fb,"complete javadoc, add comment, use Lists.reverse",2014-04-15T17:25:40Z
6f1f21cfd68b2a4c3701dfa290a30093e79c2883,"Merge pull request #476 from metamx/non-blocking-persist-n-merge

Non blocking persist n merge",2014-04-15T16:58:47Z
f6de38a87c544bab282865a1d55b46f290de43b5,"Merge pull request #480 from metamx/compute-cache-monitor

enable cache monitor on computes by default",2014-04-15T16:51:54Z
3eb8160b51fc77359d4c30cc13ece10298fb9e96,review comments,2014-04-15T15:36:30Z
d66ae5ac1079ad5104e506d4138faf4e29220e67,fix dependent PostAggregators,2014-04-15T08:07:31Z
3172383e56c75adc128ecd1a52ceef2494d72b58,modify comment,2014-04-15T07:25:40Z
ce250222bf3de0c35ab46bdc00061421d4c2d115,update docs,2014-04-14T23:33:08Z
16bffe05884b05833c7906d5adf4dc8ac4f85ed3,default cache size to zero,2014-04-14T23:23:54Z
291dac8de8545b3abfb95b913e0eed9da97f24ce,Merge branch 'master' of github.com:metamx/druid,2014-04-14T23:21:17Z
9bfc73803203aa0777ea2c96153a5e3e6b595d9d,im deeply saddened but another case sensitivity problem and want to resolve these once and for all,2014-04-14T23:20:31Z
077dd7c589dd9933bc9ef83eeb41389d683d59f0,enable cache monitor on computes by default,2014-04-14T23:11:12Z
807fff7697ae8136ba200198a6a3e9e545a6226d,"Merge pull request #477 from metamx/minor-cleanup

A few minor cleanups and fixes",2014-04-14T18:57:58Z
a46c4592b48e9f274f0f3ed00bf734fb04508d25,a few cleanups,2014-04-14T16:53:29Z
595ad7d21d2c320b6a69d886a256723ac1d95cd4,rename thread,2014-04-11T07:04:17Z
db60353cacc6aa8ade9b137e15640d052fc7a0ad,"persist-n-merge in separate pool

persist-n-merge in separate pool, do not block intermediate persists",2014-04-11T06:48:11Z
db5f04c84dc7b23f87aac31397f1a6457f4903f7,[maven-release-plugin] prepare for next development iteration,2014-04-10T22:39:41Z
87ef64f57743c821e5229c6fd1deb4e8399e3524,[maven-release-plugin] prepare release druid-0.6.89,2014-04-10T22:39:36Z
7a8b9c2160b666b3e590d50c27f938399a7ab1c9,fix select serde,2014-04-10T22:35:55Z
b273f1b10128112aeb25408b7c02c50d064383ba,[maven-release-plugin] prepare for next development iteration,2014-04-10T19:56:20Z
9019990d9446f04e77e65093a072143ac8b19d7d,[maven-release-plugin] prepare release druid-0.6.88,2014-04-10T19:56:16Z
0904436d2fdc13a1900879af79b7e4333c6e0c0c,actually emit query stats,2014-04-10T19:54:27Z
57bf8faa825de1ee150e0369dc92c0d9b071cb88,[maven-release-plugin] prepare for next development iteration,2014-04-10T18:33:06Z
20c7b73269339b19559fbc93de12075fc55dec6a,[maven-release-plugin] prepare release druid-0.6.87,2014-04-10T18:33:02Z
4d5cd7b087b504def757a14581bc037688e29e40,"Merge pull request #475 from metamx/better-request-logs

Add more meaningful request logging",2014-04-10T18:27:11Z
6742223c262b5e0d22deadac80c3b83b29d85fec,fix another missing log,2014-04-10T18:26:53Z
8e143adadf51149bb9c7f9f2588cf8d8ba3a4f83,address code review comments,2014-04-10T18:13:11Z
88c592ccaa9ed4c46105bb3a826ed3c271041cb8,add more meaningful request logging,2014-04-10T17:37:25Z
bfeed267653a130fdc3f577ba78753d65ad9a996,"Merge pull request #474 from metamx/groupby-dimextractionfn

support dimension extraction functions in group by",2014-04-10T00:23:06Z
be30d450d7481a9d0f047b8c7582b7022c49451c,support dimension extraction functions in group by,2014-04-10T00:16:57Z
35c89d29a0e31ce4bbd568bb3218b3c79386ccb4,"Merge pull request #473 from metamx/fix-caching-npe

fix npe in CachingQueryRunner",2014-04-10T00:06:47Z
69a8723f1851a32c557670f2d0b7c9beb29a78ab,fix npe in CachingQueryRunner,2014-04-10T00:04:42Z
c05f16917115cf19257e7c928a14d9eeec9b005c,"Merge pull request #458 from metamx/stream-cache

use and populate cache at compute node level",2014-04-09T17:42:26Z
e867c9342218a17987a94c2801ab7ab28b315912,turn down too much logging; gp,2014-04-09T16:55:12Z
0c95c0b689acf31482d90da182e51087129d1d9e,moved file,2014-04-09T08:55:31Z
ea8b2dffd599c5e9704a5ef753b94ffaa74fba07,Add chatHandlerResource,2014-04-09T08:55:18Z
19d6aec39668a8402f780bd6805dcf0246df47b8,address code review comments,2014-04-09T00:21:01Z
60b95dabad5fe684990533ceb2df6915e7e9f7db,"CachePopulatingQueryRunner -> CachingQueryRunner

Populate and use cache at compute node level",2014-04-04T17:49:00Z
3e6ffbd5ac18811ac63174db276765b9443535c4,populate cache on sequence close,2014-04-03T19:03:44Z
6209803d5017678a770223407fe09e90e6069b1f,[maven-release-plugin] prepare for next development iteration,2014-04-08T23:27:44Z
ac9d20af479a65a207a56db4193536cf2a5daa0c,[maven-release-plugin] prepare release druid-0.6.86,2014-04-08T23:27:40Z
7db756f819f2d5f4a65c64ad701f0eb9e6e17a98,prepare for next release,2014-04-08T23:25:59Z
dd8e9e293093ef73b6cbd20afe3f09765b9bec59,fix concurrent modification exceptions in local cache,2014-04-08T23:23:24Z
7c90a0fb960ebbeff6e102d151726b5ae3ce6513,fix web supplier test,2014-04-08T22:01:31Z
29c3db92b59c2bf6d890c70d3b175e8acdf56b2c,[maven-release-plugin] prepare for next development iteration,2014-04-08T18:44:45Z
d16ff98ef3716f9297e986f9fafa0065c5209636,[maven-release-plugin] prepare release druid-0.6.85,2014-04-08T18:44:40Z
a4df23f0927ab3c6f162c5538af52db3f7c67458,prepare for next release,2014-04-08T18:42:59Z
3d6ad1e3638a7053746f1f02ce356baac845786d,"Merge pull request #471 from metamx/minor-optimization

avoid using Math.abs",2014-04-08T18:23:41Z
2c8682a1b66a7b17aacf5d4b5886f287c808b770,"avoid using Math.abs

review comment on - c6f5311
To avoid overflow issues and unnecessary calls to Math.abs.",2014-04-08T16:28:54Z
f726e52e3bdc6f8b60b8048dcb55fff32ffcf4d9,fix test,2014-04-08T14:39:44Z
12991a959ac0022429fca4686ce2bbdeaf8dcaa8,actually fix it,2014-04-08T14:38:21Z
c6f531168f750961c2d0ee3b70b8545080fbacdd,fix hash based partition - boundary case Integer.MIN,2014-04-08T14:37:22Z
ecfa6bd1b16a9e2a5a80cf4dd3ff1146c48353c2,fix casing and add comment,2014-04-08T11:56:51Z
c6f4b344cbf6585057af61945893e3959f3e72c6,add bindings for chat handler provider,2014-04-08T06:26:23Z
22c3296aa3fa12b453b7cd20e221d7ea9a305f5f,"Merge branch 'master' into optimize-postAgg-calculation

Conflicts:
	server/src/test/java/io/druid/client/CachingClusteredClientTest.java",2014-04-07T22:05:56Z
c322f44863fd34322b244e10e0759d71c1cbcdee,"time series post Aggregation improved

move post aggregation to finalise results",2014-04-07T21:47:15Z
8e3bcc8fc35299dea893d76a319d7bf7dd7d1b01,[maven-release-plugin] prepare for next development iteration,2014-04-07T21:38:55Z
e1e81cfeacd131c401a898ea11a0d0a3768ac44c,[maven-release-plugin] prepare release druid-0.6.84,2014-04-07T21:38:51Z
4ef2bbbfc1df702e47ac3409cbf7d64b002d63c7,prepare for next release,2014-04-07T21:37:02Z
6a26f7684fd0e59ceaadc1b83c85fd8b8da46dd7,fix context on CQE,2014-04-07T21:36:13Z
4bb36dd453c490db3ee51ede40c8301fb441dd22,fix tests,2014-04-07T21:07:57Z
bae0fdf936f54728409667d69fe5be4938da0826,add context serde tests and deprecate backwards compatible methods,2014-04-07T20:18:55Z
bfb66691b9954a9c9408a44117477b5938869462,[maven-release-plugin] prepare for next development iteration,2014-04-07T19:45:28Z
f612b7cc64e9d15b6d7c5c49b594e600f9a11a2f,[maven-release-plugin] prepare release druid-0.6.83,2014-04-07T19:45:20Z
2e9579a1468f4bafea9eefe2df58cf1494a543d2,prepare for next release,2014-04-07T19:43:30Z
93349b5d07d7feb35eaf2abdcd3caa9910cccfa1,fix broken unit tests,2014-04-07T17:56:38Z
f5dc75ef82bf131bdb4b53b6a122cf15a0d2f25d,"Merge pull request #464 from metamx/fix-context

Fix context to be backwards compatible with String values",2014-04-07T17:54:17Z
dda09633be602cb778070abc789e5cbd83896ea3,make query id a bit more readable,2014-04-07T17:53:43Z
db35009acdc1b35ca411462c798e3b3230c7ddcc,Compute postage only when required,2014-04-07T17:47:25Z
e8c41ab3a47f6d2401044ff9da241ac492470e2e,"Merge pull request #465 from jonchase/feature/docs_typo

docs: correcting path to index file",2014-04-07T16:56:59Z
40a68041925190adcac35f6f844d325fdb1a71f7,"Support for postgresql

I think it was the last request using 'end' missing the postgresql support.",2014-04-07T15:37:03Z
00369542618d7665bcbe9d9356dbd3a6c5d23dea,docs: correcting path to index file,2014-04-07T13:14:21Z
40c14c9a3c74fba1aa419dd8a45c09a0dc88e44e,fix case with no request params,2014-04-06T19:43:40Z
f0e9d6fd83e07d7883e67297bad762366dcbc5ee,fix query forwarding,2014-04-06T19:41:39Z
4d6174ebf296c0848fc46d90eee0ee2d533b011b,be able to set maxPendingPersists in plumber,2014-04-06T16:47:37Z
98c3faa767f572d058ec05a51dc3339d4a3d556f,cleanup,2014-04-06T16:23:59Z
1267fbb7f5b2c5adb290ad7c1b354011d249c4b2,fix context to be backwards compat,2014-04-06T16:20:58Z
fc80cf0f323b8f45dd7e80f5a4cc814ae6d691a7,"Merge pull request #463 from metamx/s3-consistent-acl

fix missing arg",2014-04-04T22:22:02Z
c46a39b13e1bfccdc09301b26f9cc4804d417c3b,fix missing arg,2014-04-04T21:52:22Z
706143715114bb097c4175c8ff978defa77c7057,"Merge pull request #462 from metamx/s3-consistent-acl

S3 consistent ACLs",2014-04-04T21:30:23Z
cfe2466e4914bb3377c907e735777afb60dffea0,enforce acl on object move,2014-04-04T21:28:54Z
b21820c68adc6a382114a6fee812f906d73563c8,make index file acl consistent with descriptor,2014-04-04T21:20:54Z
e94badc917f7343820e4c40e1654f4c4b2c1901a,"Merge pull request #460 from liquidm/fix_npe_in_groupby

fix a NPE leading to broker 500 response",2014-04-04T17:51:53Z
3243505950039ad65ac8b259639959aeec40a782,"Merge pull request #461 from metamx/igalDruid

Igal druid",2014-04-04T17:12:56Z
4576c5077e9d8a20690bb586d384a32c71d5e8ab,switched operations and ingestion sections,2014-04-04T17:05:33Z
0b0b8a1d37bc689cab7d31990d9a7ca2a7f8eb10,Merge branch 'master' into igalDruid,2014-04-04T17:04:22Z
e0e43deaec26384766a61874db4aaa6bda4ae415,fix a NPE leading to broker 500 response,2014-04-04T11:04:40Z
1843316db60c3f130e73cfa36f090e4613baefaf,commonalize event receiver firehose,2014-04-04T03:46:36Z
8138d96f9d84d2d16dfc59f2187f3b57d52f5aed,[maven-release-plugin] prepare for next development iteration,2014-04-04T00:21:14Z
4619e498c386148e64fa39ccbe757b23ac82d2cd,[maven-release-plugin] prepare release druid-0.6.82,2014-04-04T00:21:10Z
5d8d506fe843b2f4afc4ed416b1f46693c48ef8e,fix commented out filters,2014-04-04T00:06:28Z
d9062d91fa89ce104f494c67df15bf108c1dd5a9,fix endpoint bugs and more docs,2014-04-04T00:01:33Z
edba3ba40e99154378a4d14de04e7116325dfb80,[maven-release-plugin] prepare for next development iteration,2014-04-03T05:24:36Z
0f0e525a756d6f4e4f6ebe2a7cd4b8cdcf31ed09,[maven-release-plugin] prepare release druid-0.6.81,2014-04-03T05:24:32Z
b0bf08554a7a500e6326686a9c29bef5538a4c42,fix broken build,2014-04-03T05:22:42Z
e53d107472f227e8c75214e2cbb3aea8739f5e8f,revert broken cache,2014-04-03T05:12:22Z
d6eebce9984fcc421fcecb8fbd18a720faf3bee2,"Revert ""Merge pull request #457 from metamx/stream-cache""

This reverts commit 5fae4d9abcacb44df8b0cd2f999987cff37a0aef, reversing
changes made to 43a0554179f7d514b2e417e8045134656ab28e06.",2014-04-03T05:08:43Z
133c624f6923be306dd9c927249f3f76d5331dfd,[maven-release-plugin] prepare for next development iteration,2014-04-03T04:33:10Z
4e2ac3234c34da60a9d5a4a17a9eb03d13b61d0b,[maven-release-plugin] prepare release druid-0.6.79,2014-04-03T04:33:05Z
ea9f31bbe0a4ecf2f0a5c1434730aa92c6348e7d,learn to math and prepare for next release,2014-04-03T04:31:17Z
6bab22ef71fba7449dfc26750c23ee0797d015ad,[maven-release-plugin] prepare for next development iteration,2014-04-03T04:08:18Z
93e19b62e6fd0f01e30805605d8b6d5532f16660,[maven-release-plugin] prepare release druid-0.6.78,2014-04-03T04:08:14Z
f185d215e1fe59994b312ce0f3b0b939441af28e,fix jetty default thread pool size for jetty 9 and prepare for next release,2014-04-03T04:01:07Z
6cd5a76983af2bacc211c7f5623ac41b52c6ca82,[maven-release-plugin] prepare for next development iteration,2014-04-03T00:33:26Z
d1e7b981777f5c538c8abb7014cc08569a2470c9,[maven-release-plugin] prepare release druid-0.6.77,2014-04-03T00:33:19Z
fc94b847c392d1483cb310a3712235342174d96c,prepare for next release,2014-04-03T00:31:19Z
7547e989f02f07b228e00d33dc8b53e85455853c,"Merge pull request #456 from metamx/processing-threads-default

more sensible defaults",2014-04-03T00:25:43Z
5fae4d9abcacb44df8b0cd2f999987cff37a0aef,"Merge pull request #457 from metamx/stream-cache

Populate cache without materializing results first",2014-04-03T00:07:36Z
43a0554179f7d514b2e417e8045134656ab28e06,"Merge pull request #455 from metamx/async

Asynchronous servlet for query forwarding",2014-04-03T00:05:49Z
458a873505a911c535775b0b4a52dda2098599dd,make test reflect the fact that resulting sequence is not consumed yet,2014-04-02T22:37:54Z
ee344154705ca594abca9f6ca6351f650a802c34,populate cache without materializing results,2014-04-02T05:11:58Z
2eb9493010f61923846749c35b590d1c1fae5046,fix documentation link,2014-04-02T22:27:49Z
f3cc316e66d84b63709162b93f3a07a10a5b2785,create utiliy class for getMaxDirectMemory,2014-04-02T22:27:34Z
85ffce25a676b87a0a7afcb515c4efc626876703,fix code review comments,2014-04-02T21:56:00Z
ee97fb98bc5e767908dd4132ebf06be03853aa6d,more sensible defaults for single core machines,2014-04-02T21:24:08Z
89dd0ee29c10b5e539ffc01cf1c3030516c62f76,pdf version 1.4 with fonts embedded,2014-04-02T18:28:24Z
ec7a84cf0aa7a7a6e252c04ff83a04b5ecbaa1d1,embed fonts in graphics,2014-04-02T18:25:11Z
1866cbad1ba5b833b2667b907d9d23be457ca919,remove unneeded comment,2014-04-02T01:15:51Z
eaec0e3ab281b6ae4e09273711a2516ce0a7e266,cleanup,2014-04-02T00:56:25Z
f88df4a7b0d837b75232324f7e53f0028f8ef50e,remove jetty examples,2014-04-02T00:53:39Z
6952eb7878bf11d1ad288e0eeb72149c2f31b07a,asynch servlet for query forwarding,2014-04-02T00:51:28Z
74c5d9889b983340efa7836b6ac2fb8d56ee144c,[maven-release-plugin] prepare for next development iteration,2014-03-31T23:07:31Z
0845cc40788b6af8d3dc3c9d091187eccbe6fcaf,[maven-release-plugin] prepare release druid-0.6.76,2014-03-31T23:07:25Z
ba6c289ccbd98583d1849fb2b4e1cfda25370ea7,minor typos fixed,2014-03-31T20:05:54Z
50b6888210c432304730459731bb749ff52230f3,"Merge pull request #450 from metamx/fix-cache-population

Fix cache population",2014-03-31T18:26:37Z
42b6482eeac49583ffad5b69b1e50aebfa359365,"Merge pull request #452 from metamx/endpoints

New endpoints for new (scalable) coordinator console",2014-03-31T18:26:26Z
d014e8016015d10bb6a948f2efbdae8861cad297,final final,2014-03-31T04:41:15Z
c3448af6f886086748577c2f5a6d2c787c88ba4d,ZooKeeper capitalization + minor wording changes for layout,2014-03-31T04:31:02Z
c7c912021c138de9b7b4bb92643331aba8d74b0a,make graphs look good in B+W + final pdf,2014-03-30T06:20:40Z
35099e4970ec1d1cf1b5d41104770e2f7b6e4c5b,"typos, wording, fix overfull hboxes",2014-03-30T06:00:23Z
bff902150e8d347ab1df9324ca079e051d1e5d62,add dummy ps file for paper,2014-03-28T21:44:31Z
4be5cd6386bbfd008960503baf8e1e30748c57f9,final edits to paper,2014-03-28T21:38:21Z
05f3f7d49e350aa9ec94556a12e2cdb9122ba91d,review comments - remove instance of check,2014-03-28T21:36:53Z
c5fbb67d94cdc9c47fc520e67967adfa9f423b00,more endpoint cleanup,2014-03-28T21:31:30Z
676671e575b404743f4f580ac0d9717b5341a30c,new endpoints,2014-03-28T20:55:44Z
2858949431544aff2828c4d00f31930817a90492,updated binaries,2014-03-28T17:20:28Z
e5f03d0616bf8b6f96c979ee1a190ff5ca9db994,correct paper submission id,2014-03-28T17:18:20Z
af470223f18aa143efbd3f084fe8cb354f1d39ca,add test,2014-03-28T17:09:29Z
ccf72bfdf85971347d1954bf4007c1916831c42d,Fix cache population simple way,2014-03-28T08:44:46Z
652506d1bd4241b32def191a517a10e645b8efdc,[maven-release-plugin] prepare for next development iteration,2014-03-28T01:03:55Z
7fa62cd9c725bb4a0af5c94a8b5916502fbeede2,[maven-release-plugin] prepare release druid-0.6.75,2014-03-28T01:03:51Z
9ebdf16ed615509e18fb731b54ecc06473c1c6ce,make last commit a final var,2014-03-28T00:56:25Z
cb1798c5204c2603f8ee8bcd6c074723c867647c,fix bug with reference closing that I swore we fixed,2014-03-28T00:55:03Z
aae8f4cf3c58c09b09c87a31d0cf8328ce6199f7,"Merge pull request #449 from metamx/igalDruid

Igal druid",2014-03-27T23:47:21Z
adfcc3d16ff5e5f66a08ed73b0c03c271400e2a6,Merge branch 'master' into igalDruid,2014-03-27T23:19:58Z
0f4e5cb1256121e8c736547cdc4c58a01c62fb86,"added firehose and plumber sections, which were being referenced but were missing",2014-03-27T23:18:56Z
0be29df8ae620b09215da9a49b18c5d8c545c128,make hll tests deterministic,2014-03-27T23:15:32Z
5f0ada925d5e99a2ed99bcb4bea57641885b90f5,add HLL maxOverflow tests,2014-03-27T23:00:44Z
03c51518bc5233ce488eb980df23fbcadcaf4a18,don't assume bytebuffer limit is set,2014-03-27T22:58:34Z
21e54d8060e3afe2c5c2456077419f74272f1ff7,rename var to be less confusing,2014-03-27T22:48:37Z
bc4bc277f2709ab10c119648e71cc342dad1e27b,"Merge pull request #447 from metamx/fix-configmanager

Move db specific things from ConfigManager into DbConnector",2014-03-27T22:47:03Z
366872ffe95e3462fc11a13244c28d856161c113,"Merge pull request #446 from liquidm/add_druiddirectclient_logging

add url logging to DirectDruidClient for debugging purposes",2014-03-27T22:41:03Z
de95fbc089c426dc4e308742fdfa749b33110329,"Merge pull request #441 from metamx/hll-optimization

HyperLogLog optimizations and benchmark",2014-03-27T22:36:30Z
4d2535258f1167591df3e054121ec693a0c93f57,"Merge pull request #448 from metamx/hdfs-config-fix

path should already be a proper uri",2014-03-27T22:33:53Z
2245764b8fcf8781569a6b06c1c4e3d44549718a,added link to info on rejection policy,2014-03-27T22:16:47Z
effd30f99139dc719800712cd432b64777e956a4,added link to info on how tasks are posted,2014-03-27T22:12:50Z
de771a6642093cba6898725680bd2bd4727173fe,edits for readability,2014-03-27T22:09:42Z
fa0f0a810c7d3f9719b678cee998a272ab42714d,removed references to config elements that do not appear on the page,2014-03-27T22:00:28Z
525cbf5aab446f7e5ef2e640c64d19bddb54d85a,"completed config info with rjection policy, segmentGranularity; some minor edits",2014-03-27T21:58:40Z
c4402cc84d0aadcc295788948507fe8e56eb2210,"path should already be a proper uri

works around issues when config cannot properly initialize early
in the indexing process",2014-03-27T21:51:08Z
6e18ff7ed4c46f4eecd34aa13138f931fb864e53,use prepared statement instead of string interpolation,2014-03-27T19:41:30Z
e0ff2aa0d6308bcbcf8d04b75de8c6ae064db373,make isPostgreSQL check URI instead of metadata,2014-03-27T18:59:08Z
d6f4cf37332e07cd2fff0d4819699920fcffb88a,add changes as suggested by cheddar,2014-03-27T18:46:53Z
6fb3e61a98a694d3d3a2d5cba4c746c1eb524ab6,add url logging to DirectDruidClient for debugging purposes,2014-03-27T18:38:53Z
298b9c9346eb6a8bb680ace4163955369c091c7d,update default version in docs,2014-03-27T14:46:49Z
11f08b3895c066c5fcec6247849ff0218b7e94c9,benchmark more closely matches actual implementation,2014-03-27T05:18:26Z
c92fd6f45d05237ef383abbc07a1918c44be9dcb,folding into direct buffers is faster,2014-03-27T00:13:41Z
83ac1d323ecbb409ce979397f521062ab6222481,one more final variable for good measure,2014-03-26T23:50:24Z
2580a9c7f11c7fe269bec27aa90e2ee57e319d2e,mark long-running tests as @Ignore + docs,2014-03-26T23:49:39Z
fa34f2ac59b157b71eae84596b7efe1425f5ce94,more consistent placeholder references,2014-03-26T23:41:27Z
06b53f02a8fe929e868636cf80f1446caa2008ae,upgrade default version in CluHadoopIndexer and merge from master,2014-03-26T22:07:45Z
a24fc84d0d05e5f3b8fde6e4e7f3c4622a0fc631,Merge branch 'master' into hadoop-version-update,2014-03-26T22:02:11Z
e84128ebbe53f9cf0d292cca4c7454d1d8c49e73,remove database specific code from ConfigManager,2014-03-26T21:29:37Z
aec6457a4d7497153080b2a4091c8890684d5ee6,fix config manager,2014-03-26T16:42:33Z
f42b850d6009993a79970c4465a4cc8aea599436,clean up + header,2014-03-26T16:31:45Z
a9a6682a0e8d12fc68a7daa60e0706431c1d4316,Upgrade to Hadoop 2.3.0,2014-03-26T06:13:31Z
183a133ee4ba152d6c4714fb4f378f1b558a8345,"Merge pull request #442 from metamx/demo-paper

Writing a demonstration paper for a conference",2014-03-26T04:29:36Z
15af9ac3c5f41621b7af52ff0da8885380fe78e9,fix things,2014-03-26T04:26:48Z
1063e14cf4d5fab40d35730d9019a2b66ecf41c5,"Merge pull request #440 from metamx/igalDruid

Igal druid",2014-03-26T00:21:46Z
24dbc58ceca42a7017847a4362149a3358351a14,edited for flow and readability,2014-03-26T00:19:55Z
178a9aed405735de5b41e513596a627a5d9548d2,make it clear mergeAndStoreByteRegister has no side effects,2014-03-25T23:52:36Z
a0c38f574b616bc8d992554dab0c25f8445004a1,check should be safe to move out of loop,2014-03-25T23:21:44Z
46a5409207e2bd4ff121b6a0925bd2e98176c065,minor hll optimizations,2014-03-25T23:08:43Z
5eaadfffa9a4b9e1fa6c7811018a1ce39bcc29ad,"no need for volatile references

we make no guarantees wrt threadsafety in this class",2014-03-25T18:06:00Z
7dc0e9f1a98cf094eedcc76f998ec64496b7a3ee,remove HLL version specific code outside of HyperLogLogCollector,2014-03-25T18:04:24Z
cd340aa314c60627d0a51a5bfced0303bdf73bff,hll benchmark,2014-03-25T22:41:21Z
5ff77dad349deb357d1c22f458e0e70befe8af9e,Merge branch 'master' into igalDruid,2014-03-25T23:56:24Z
7881f068c61ec91f44fa453f9d6e601025b0a6b5,added task types that were missing from some of the JSON task configs,2014-03-25T23:53:06Z
8859aa675a03d255c06f0cdcb46e8f53de6f5d4b,fixed link text to realtime ingestion,2014-03-25T23:43:58Z
d780b28a09b1958da2d943d5d10de02f5144e701,added link for more info on indexGranularity,2014-03-25T23:25:00Z
98b0efba8f13ac077aee7a606ad1ebcf2077049b,Merge branch 'master' into demo-paper,2014-03-25T22:18:35Z
7e54c6a35954d1aa99fb325efaaff2d10539c86b,[maven-release-plugin] prepare for next development iteration,2014-03-25T20:43:25Z
0baf95098da14ff4821b030c9379ee158e98e18f,[maven-release-plugin] prepare release druid-0.6.74,2014-03-25T20:43:21Z
4360c050eb00f31d20753953b8b2eebe0642f09a,fix broken ut,2014-03-25T18:13:52Z
5169249ed5425fef86a2a89ba4b2f47833b5301d,"Merge pull request #429 from metamx/compute-populate-cache

Enable historical node to populate cache",2014-03-25T18:03:26Z
890a9fcdb2288dd80658531a5b46f42694bbf1a7,remove output files on make clean,2014-03-25T17:58:59Z
2309734e18787189652dff65e2d57b6b94abe5af,update final paper,2014-03-25T17:57:58Z
9a191a1965ed8ef663a7f7fee9b0cc0bd9daf481,remove orphan line,2014-03-25T17:55:46Z
3ba67946a314028dfcd8af65d316281bd640d375,review comments - remove unused import and extract out constants,2014-03-25T17:33:13Z
eec07ad45fac350c7873305208b3ecb1344239cf,"Merge branch 'master' of github.com:metamx/druid

Conflicts:
	services/src/main/java/io/druid/cli/CliHadoopIndexer.java",2014-03-25T17:04:14Z
b6dd2fae64cee617062b26415f922c02a7f56965,update some comments on standalone hadoop indexer,2014-03-25T17:03:40Z
0dc864d5262d3d9b476b25ebf7e79c2eb5aceced,"Merge pull request #439 from metamx/fix-hadoop

Allow multiple hadoop coordinates in preparation of Hadoop 2",2014-03-25T16:50:24Z
771aa2ae68e232447a0d8ace2fa1a5a0fcb32cba,backwards compat,2014-03-25T16:23:48Z
fe7a18409619a6dc7df37eaaef542b9c842d7f69,review comments,2014-03-25T11:32:36Z
0ba72ffb2b362949d754bf2efc70da701a7a1448,merge from master,2014-03-25T10:13:05Z
1c5d2b6dc5e9f708922a2accd24e3e6b3f6edc5e,review comments,2014-03-25T07:57:30Z
6a34c09e053ab6b616ca7486a6410d82638d0225,Merge branch 'master' into compute-populate-cache,2014-03-25T07:53:00Z
5ebb2d27e36cde7fa4cad8a409b25c2a8611a952,fix hadoop,2014-03-25T01:43:31Z
5eacd9723934b6841c2106e6b6b098bb0b5bf78c,fixed typo in task spec,2014-03-24T23:51:11Z
60c204afebe3147774c478dcbe68b9c9a74c5cde,"Merge pull request #433 from metamx/router-node

Client-side tier-aware query runner",2014-03-24T22:17:59Z
75ec8bed9a4b56ef7e7a9529e2e6ba15ec9da4dd,address code review comments,2014-03-24T21:53:30Z
d206a9e5f708c03cc731ac330c0e42660deba8bc,minor layout/wording changes to make it fit nicely,2014-03-24T20:25:51Z
fcd75225967c5b87b1588afee05102003907fc06,Merge branch 'master' into router-node,2014-03-24T20:43:52Z
b0790783b7182da6ac67af96b720296a9d753685,"Merge pull request #436 from metamx/better-context

Extend context to able to take more sophisticated objects than just strings",2014-03-24T20:40:45Z
c97caa3bdf8b5a7b043cba2f9ae2b740f77754d7,Merge branch 'master' of github.com:metamx/druid,2014-03-24T20:40:13Z
de83677165c0715eb8b4351ad982a90c55baed96,more logging at initialization,2014-03-24T20:40:04Z
f1c4fe41800a9851a89d86fba189471ead8c1b5e,final sigmod version,2014-03-24T20:25:51Z
a2105e03d040d6018ca15bcd02b2db5fe400d3f6,include final license and DOI link,2014-03-24T20:14:54Z
8f8402b5ba50ba05c5eb47e434b444cc4f8159ee,replace png with pdf graphics,2014-03-24T18:18:50Z
98cd83071a4ad93b7a93ad547f4aa8c744396bba,"Update index.md

Fixed a few typos and grammatical issues.",2014-03-23T21:58:11Z
e863afd37527ffb506a2eec0c665b68c0eea4616,more edits,2014-03-23T21:44:46Z
aec12ee3cc351ae36af091ba810a1fa7bdf302ae,more updates,2014-03-23T21:39:55Z
5a3dbec496be39bebf0cdbae7b2a3479e6155d8e,updated pdf,2014-03-22T04:29:07Z
79fd982db52e07bac6c46b2b8bc1ad4fec436740,copyright placeholder,2014-03-21T23:37:18Z
0b06586131a134a56509dec97d668e6dc9964865,add keywords,2014-03-21T23:35:58Z
5cb081328ec66af6a6ac7b0f7c4ee15cd9961a84,update makefile to create sigmod zip file,2014-03-21T21:50:44Z
6b4d564b4957ada1e4c9ee8dc9328ac479e864a6,update document class for sigmod,2014-03-21T21:49:11Z
7093495a9f1d6bf526b10d14e5f5036fd8161385,fix typos,2014-03-21T21:33:44Z
f832426a166d5c6c33b6c4673da3a5ca253cf2d6,Merge branch 'master' into demo-paper,2014-03-21T20:50:16Z
e523bfc237cb876ba7c82af2625c0cb53a714a4e,[maven-release-plugin] prepare for next development iteration,2014-03-21T18:07:40Z
6fbc3b15a75268e274c9b41e040ac61d113ef4f6,[maven-release-plugin] prepare release druid-0.6.73,2014-03-21T18:07:34Z
55169175deb002c4e4a1a0cb83f352d2e422b48f,prepare for next release,2014-03-21T18:05:54Z
e832dc7a8cf80ecb55a20497b4f54ecb9ced0db2,Merge branch 'master' of github.com:metamx/druid into better-context,2014-03-21T17:46:36Z
e5794da0d90a7ce29d9cfd82f2e2ee9985471efc,"Merge pull request #437 from metamx/segmentmetadataquery-fix

fix serialisation of segmentMetaDataQuery",2014-03-21T17:46:01Z
dc0e7f404ade8eab52c59cdbd3887f5196aac933,fix serialisation of segmentMetaDataQuery,2014-03-21T08:41:26Z
7f8211ecc7b516c1d76855b03fcd7631c2e38b6e,extend context to use map string object instead of map string string,2014-03-20T20:41:45Z
69e9b7a6c5bb4cb30d7b5b493943f9ea6303960f,merge changes from master,2014-03-20T14:53:58Z
9079a17df00b66c5406119cb89f8a22e912a9082,Add headers,2014-03-20T14:14:36Z
a64be537a5a28243e9bfe23b68bbecc06f6b7374,updated task ID definition,2014-03-20T04:08:40Z
0bba524b6fcb92bc61074c3b86494d5376153a49,"Merge pull request #434 from GuiSim/master

Small typo fixes in documentation",2014-03-19T17:31:21Z
a96dfc7742444e7b951106bdaa60e5c7a02ee0b0,clean up failure scenarios,2014-03-19T17:30:52Z
1b20188ec7d2bb0b4da3df65e5052bde2ab9e95f,Merge,2014-03-18T21:12:49Z
d7cd73387055de066e3f49ce4a3025fb46c34679,"Merge pull request #432 from metamx/igalDruid

Igal druid",2014-03-18T21:05:31Z
76ef9d192c26483725b11d47aeb19e32da7e1b13,add tests,2014-03-18T20:47:53Z
ab2524ba0af2fc27d3952b600ac394af4b974672,add router node,2014-03-18T20:44:29Z
c4d06faa0526c0ec071e14a5314660b87bd94987,Merge branch 'master' into igalDruid,2014-03-18T18:00:10Z
04040ef75fa82ef0293b64a77a1e9b988a52629c,"Fixed:

- Bad link for granularitySpec changed to real definition.
- All heads set to logical levels (consistent with all others).
- Fixed bad link in definition for spatialDimensions.",2014-03-18T17:28:33Z
03851101f0960adafe7c0105a38c543d30b0f51a,[maven-release-plugin] prepare for next development iteration,2014-03-18T15:12:51Z
508d892ba1f824f46353c2ecb934bbabe47afe47,[maven-release-plugin] prepare release druid-0.6.72,2014-03-18T15:12:44Z
804a4051fa933c2a695192579a090a1de29cc4f2,prepare for next rel,2014-03-18T15:10:59Z
ce54bd4f50d438d96f5f7f5b008179c3ad68cc73,"Merge pull request #431 from metamx/backwardscompatibilityfix

Fix backwards compatibilty constant post aggregator",2014-03-18T15:09:35Z
32ad26210dd229f1853a16696642e7b0d1b44daa,Fix backwards compatibilty constant post aggregator,2014-03-18T15:04:49Z
294f15d62460bd86891b1c33d6de7269252f1db8,[maven-release-plugin] prepare for next development iteration,2014-03-18T04:44:17Z
199efa049a29e6417662664b76ef1ebec54db3a7,[maven-release-plugin] prepare release druid-0.6.71,2014-03-18T04:44:11Z
1d1ec1d8556be02878b68f4daad1b6b0aaa886d0,clean up some defaults and prepare for next release,2014-03-18T04:41:34Z
b9fe12977e99b67b302c950ed9bd1a197b0a3c35,[maven-release-plugin] prepare for next development iteration,2014-03-17T20:57:10Z
0276223db1a4faeb3fb0681a66fc7f144c82aade,[maven-release-plugin] prepare release druid-0.6.70,2014-03-17T20:57:06Z
cb40fcc46951fc72029a711d758cfbbd8021e9b3,fix maven release plugin with recent versions of git,2014-03-17T20:52:22Z
bd2ef2fde0e60bf6e5e690bf9d13e3500f63212c,"Merge pull request #430 from metamx/fix-null-query-id

Set queryId in MetricsEmittingQueryRunner",2014-03-17T20:33:42Z
7e97073aebbdc63a0707ac3a36197505013435f4,"Set queryId in MetricsEmittingQueryRunner

- queryId is now user8 instead of user10, since it was already used
before",2014-03-17T20:25:47Z
2adcf07f5f1f705b551f53741c49d512cb3b3b49,"Merge branch 'master' into new-schema

Conflicts:
	indexing-hadoop/src/main/java/io/druid/indexer/DetermineHashedPartitionsJob.java
	indexing-service/src/main/java/io/druid/indexing/common/task/RealtimeIndexTask.java
	indexing-service/src/test/java/io/druid/indexing/common/task/TaskSerdeTest.java
	processing/src/test/java/io/druid/segment/TestIndex.java
	server/src/main/java/io/druid/segment/realtime/RealtimeManager.java
	server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java",2014-03-17T17:59:31Z
468e8e0b318ce5fd4aeee683bb720464ce52bf21,Memcache changes,2014-03-17T13:24:30Z
b08172291b18ec718d9a057c608b0f45422f2c8d,more edits,2014-03-17T00:19:06Z
6259420affa5c802acad8505a0f1584f30b9980c,new demo paper,2014-03-16T22:36:38Z
8e5cbca2eedd329a0215e6c72a638ad393a1ad63,[maven-release-plugin] prepare for next development iteration,2014-03-14T22:16:55Z
852d167eaff29ea218ad9181ecaf0645983bfdb6,[maven-release-plugin] prepare release druid-0.6.69,2014-03-14T22:16:50Z
f1da044cfaf1fb8fdda13c454c7f4f8a199bffb6,fix another breaking endpoint in druid coordinator,2014-03-14T22:15:08Z
7a2d0850e3393108635f1a205ebdecc2e0f8925f,[maven-release-plugin] prepare for next development iteration,2014-03-14T22:06:54Z
2646b5421b2f07fcc8a4f504421237beccadf761,[maven-release-plugin] prepare release druid-0.6.68,2014-03-14T22:06:50Z
f525361c3dcfffd8dea77a8c10dcf8977bbe93ac,fix broken tests and prepare for next release,2014-03-14T22:05:07Z
f0fdfbb2f721c6e53db94f9e560c936a2ac5037b,fix broken constant post agg,2014-03-14T21:54:52Z
454a24052542bcbb36352f6cd99bc090960f569c,[maven-release-plugin] prepare for next development iteration,2014-03-14T17:59:27Z
6e9bc9acab0603393abc7e36a61bf3fabd5d3246,[maven-release-plugin] prepare release druid-0.6.66,2014-03-14T17:59:23Z
b3fb2fea9ca6017c2f2475630509e9f8e7c9398c,prepare for next release,2014-03-14T17:57:43Z
6844063a52fdecdeda8311002bcbe3bb40a4beeb,fix broken examples,2014-03-14T17:56:27Z
5fd506cd51d8b8ba086b60bc2d73a04cf72afd27,finishing the paper,2014-03-14T04:38:09Z
b4f15912603d887375577de1e287200505cab215,"clean up examples, finish paper",2014-03-14T01:52:08Z
71818288e20de4831661f964ddf7fc64aabdc2d8,syntax and grammar fixes; tightened up language and flow,2014-03-14T00:55:45Z
a8820bd3a083710f98c4fd8e8c19cfe61bd17b43,Merge branch 'master' into igalDruid,2014-03-14T00:44:43Z
f00ffe478945e8f620e88d13e94074cddd497a81,fix broken tests,2014-03-13T18:33:34Z
0c2b1e6c3e0e89339e2f104208e334b9f3de2a77,add pdf,2014-03-13T18:15:00Z
1f23ae54845b605c248ecf34b4ad0a97c03324fc,more layout fixes,2014-03-13T18:00:51Z
a1875643ed6324aa3cbb88640da01732bc1d6e50,add note on latency spikes,2014-03-13T17:04:20Z
8096c219b29eb0ee3e87e6c300fe658c0edd97fa,add section on joins,2014-03-13T16:38:57Z
494b5c74f2b8d40ccff4ce55dd9618b318bf9802,update pdf,2014-03-13T07:03:28Z
8cf710563c928404e25e5c083e4bc22488eee058,move things around a bit to make it flow better,2014-03-13T05:25:05Z
c8f37efc959f01bc8f0978571e58662e32d5652e,tidy up things a bit,2014-03-13T05:03:39Z
65a5dcaa3c40d0fa717d87eea31aac34356d4246,reword some tpc-h benchmarks,2014-03-13T04:42:48Z
bfe502a46acd0cc49e3aff440cbc39bdb0812232,minor rewording and tighter formatting,2014-03-13T04:15:27Z
7d16960e2310104d8108800352eec45fd210e273,more edits,2014-03-13T02:07:06Z
a2f5d37081fcf5f736db13f9bbd996bc04d3441f,Merge branch 'master' of github.com:metamx/druid,2014-03-12T23:28:23Z
58ce13cfab7ba7a6042c15b8962c99c074922b09,more edits,2014-03-12T23:28:15Z
a6fc82e2674f70f920d0b8699b31fe40f3e0e11b,"Merge pull request #428 from metamx/fix-bytesboundedLinkedQueue

fix concurrency issues in bytesboundedlinkedqueue",2014-03-12T19:30:53Z
de550988989b084f012f00657d7bf494d85882e1,add comment,2014-03-12T17:47:23Z
2ef710191f965d437e4222f390c6169a77fc6b83,make sure constants are not null,2014-03-12T17:38:32Z
516e8551440bcb3ca7d31df634d4b6c1e9324958,Merge branch 'master' of github.com:metamx/druid,2014-03-12T17:34:31Z
42618e6fcf8157d1e61bc5ce336ac89cc94cdc98,a collection of small bug fixes,2014-03-12T17:34:24Z
f10ac73eef90de3928e1c162952c79fc2c33aad1,fix concurrency issues,2014-03-12T15:24:05Z
b15b544429f76af520b930673fb947c7cf8ca130,make defaults more explicit,2014-03-11T19:39:08Z
9033472fe7f50362b7a7c394a3a25eebb28c68c7,"Merge pull request #427 from metamx/allow-disabling-opqueue

add readBufferSize option to memcached client config",2014-03-11T17:39:18Z
44f9b9cec98108141c7a72e8f3ee0d9bb3404def,add readBufferSize option to memcached client config,2014-03-11T17:37:23Z
455f6bea3857990d8be5f1e19333d77a1c662e71,"Merge pull request #426 from metamx/allow-disabling-opqueue

Disable memcached op-queue bound by default",2014-03-11T17:36:53Z
8baac724c3f09ec729051c5332374634e3a2ce37,add comments,2014-03-11T16:57:27Z
b5d9876b775d096070fa3b9f6c7c506b705ad78c,"allow disabling of memcached op-queue limit, default to disabled",2014-03-11T16:56:45Z
04f3d0a13aef16bb81a0f678f32e4faf4ab68f09,"fix cli hadoop indexer

* run determine partitions job using CLI",2014-03-11T11:06:13Z
34957ee47170c253cb9e94b5206906c46df9c764,[maven-release-plugin] prepare for next development iteration,2014-03-10T22:05:48Z
35297572ed992027780b2000647eeba65fb5b318,[maven-release-plugin] prepare release druid-0.6.65,2014-03-10T22:05:43Z
ae2dc6506c07ee1ff7dfb5b2745e717a8c3c53f1,fix broken granularity,2014-03-10T22:03:43Z
0c4462924497540c96f30cd143acb763e1139d96,some more minor paper edits,2014-03-10T21:16:19Z
a05eaf8ed2eacf2ccfea493ada4cab92354ec835,small fix to events/sec/core,2014-03-10T20:47:47Z
369156fe80fc76d37632652582c3505a71bbaebc,[maven-release-plugin] prepare for next development iteration,2014-03-10T20:26:38Z
ba3806fcc2d836d3ba53022a39b15979c8e1b2cd,[maven-release-plugin] prepare release druid-0.6.64,2014-03-10T20:26:34Z
243af486cf0475cdb428e92ddd29316bc0e912fa,prepare for next release,2014-03-10T20:24:53Z
e4a91a979d57eeb9bb073489beaf93723839926b,"Merge pull request #425 from metamx/fix-iisa

Fix TopNs with real-time data sometimes returning more than the filter set requires",2014-03-10T20:23:20Z
36b54f7e8fcd8c1222456123121822e5bd985904,fix all problems with topNs,2014-03-10T20:22:47Z
b81bd6c959bec08f45e4014c4d38f3983f227077,add test for single value index top-n,2014-03-10T20:10:45Z
6ce5266aca65de28b2ac462fb02cf2c3b57dd937,make stuff work,2014-03-10T19:19:58Z
7b0d2f45bc7e1c898b18e19654dc191c758965f9,Merge branch 'fix-iisa' of github.com:metamx/druid into fix-iisa,2014-03-10T19:02:03Z
2db73998b903d877364966c805f910138ceb0e3d,add fix for II,2014-03-10T19:01:49Z
adf60d15489195755202f6b94dbd857e9525ec19,test reset sanity on out of order values,2014-03-10T18:53:04Z
1f62257ac26de51f5018c02a492e6cd8cdc87dac,more edits,2014-03-09T23:19:00Z
86eca96ceaa868311743bda913cfd2b826aafabd,more edits,2014-03-09T23:17:49Z
e59138a56007c5900ae8d495abea627fd0c59540,a bunch more edits to the paper,2014-03-09T22:31:59Z
a973917340664b68eeeb5fc7b25e14d22015b01d,Merge branch 'master' of github.com:metamx/druid,2014-03-08T01:03:28Z
1989578e6e35c0885d0ad203a68ac6da7f734c6f,next set of updates to paper,2014-03-08T01:03:22Z
3ef75031c310a5992c88b5f676af3962e3406603,"Merge pull request #423 from tucksaun/fix-kill-task-local-storage

Adds LocalDataSegmentKiller to allow KillTask for local storage",2014-03-07T20:45:39Z
b5181a8a8979b29373c94fa9253d51c78b350c5d,"Merge pull request #422 from tucksaun/feat-postgresql-support

Fixed segments SQL queries for PostgreSQL compatibility",2014-03-07T20:42:57Z
228cfa95bdb1ae01f39431dd383e6da8068fa4aa,"Merge pull request #371 from N3TWORK/subquery

Subquery functionality for Group By queries",2014-03-07T20:41:56Z
7dbcc745103d0c1f4843ca4689866060da733dd4,Adds LocalDataSegmentKiller to allow KillTask for local storage,2014-03-07T11:28:33Z
995002fcb37ea62893eb958c67477de90ea6385a,Fix legacy data source serialization,2014-03-07T02:05:24Z
0b0648266c6c3741e787e17d0c390a19ff4dc4cc,Fix DataSource serialization,2014-03-06T23:28:20Z
5601c51ae6cabafe118799652125871d94525bf1,finalize variables and optimize imports,2014-03-06T23:03:43Z
be1ef3a161ce85b8222883d0945e5afebf0748b0,"Cleaned up equals() and hashCode(), per code review",2014-03-06T22:35:56Z
4b636458028250e727c4efece99f7901db2a4ec1,"Merge branch 'master' into subquery

Conflicts:
	processing/src/main/java/io/druid/query/BaseQuery.java
	processing/src/main/java/io/druid/query/groupby/GroupByQueryQueryToolChest.java
	processing/src/test/java/io/druid/query/QueryRunnerTestHelper.java
	processing/src/test/java/io/druid/query/topn/TopNQueryRunnerTest.java",2014-03-06T21:33:59Z
d089e6568264f7a86a796a6aead37eb335b8caaa,fix build.sh,2014-03-06T21:06:09Z
00c5a708a2abb2235c317bde0b2b3c07666ecd51,[maven-release-plugin] prepare for next development iteration,2014-03-06T20:55:11Z
9599832c58f5beceb7eaaa251b4b23f9de50bcd3,[maven-release-plugin] prepare release druid-0.6.63,2014-03-06T20:55:06Z
e1fac64298b7b8ae06520ee5d86be684582b8e06,prepare for next release,2014-03-06T20:53:05Z
422e776a0e07a5ff5dc1a4011d2517669d08028d,fix bug in build script,2014-03-06T20:51:24Z
14a514941982ec6a7bc3257773b23abf1215607f,minor javascript problem,2014-03-06T20:43:28Z
e27b2fa7cb96f10261bc80b541c9f446dbcacf7f,Merge branch 'master' of github.com:metamx/druid,2014-03-06T19:57:14Z
1e9e61f78676b1971055dab580b6eeeb3decad1c,fix some broken coordinator endpoints,2014-03-06T19:57:08Z
ae38c9249125677c061b3096632bf23ca1eb62ac,Fixed segments SQL queries for PostgreSQL compatibility,2014-03-06T14:53:54Z
1745aa744bfb57c72c767172b8e7daaacea90fa4,"Merge pull request #417 from metamx/fix-caching-bug

Fix caching bug and add CachingClusteredClient tests",2014-03-06T18:41:51Z
371c261038078cce8bd7fabd30df076b57ccde5a,"Merge pull request #421 from metamx/use-druid-hyperloglog

Use druid implementation of HyperLogLog",2014-03-06T18:41:38Z
4ec1959c30d1b1fe8cab2faf33e33e726d98548c,"Use druid implementation of HyperLogLog

remove dependency on clear spring analytics",2014-03-06T18:36:40Z
625c78aae53e3a189cabf81cdf4941579f5324d4,comments,2014-03-06T05:36:38Z
dc8ae1d20e831ceb0f9f0a4ba79f20df3485a6ea,revert,2014-03-06T05:16:48Z
d773a6ca247a096b5dce849aafc2d818e2b7bd30,One CostBalancerStrategy,2014-03-06T05:05:12Z
6137c374a7bae1b3d404c7bdce4f2630e1f00e3b,"Merge pull request #420 from metamx/hyperunique

Production tested cardinality estimation using hyperloglog",2014-03-05T23:57:44Z
5826d9594cc95f5a6a2b51b60bf66c974f03a755,add headers,2014-03-05T22:29:00Z
08138688e4b1e4a95c3a4a227dce13024d4eddcb,port hyperunique to open source,2014-03-05T22:19:38Z
9fc5cca663db94577a579a40cc8fac3758898eba,add disable populate / use cache tests,2014-03-05T21:58:38Z
fffb58f6e8234fac41375fcba2adbc2374b620d1,add CachingClusteredClient tests,2014-03-04T21:48:43Z
427014d0a07f762ccf93a24b099b0f4a5e61578a,cosmetics,2014-03-04T21:25:02Z
5b4c04510f9a268698161f9577c5546f6f5374ae,fix populateCache flag not working,2014-03-04T21:24:56Z
1ab11b1f747aefcedb19553a9af9209edf5e93fd,"Merge pull request #419 from metamx/mpp

Blocking Executors and maxPendingPersists, oh my!",2014-03-05T18:57:12Z
70db460f972f9b0c3d9dba04c233e08d73343b27,"Blocking Executors and maxPendingPersists, oh my!

- Execs.newBlockingSingleThreaded can now accept capacity = 0.
- Changed default maxPendingPersists from 2 to 0.
- Fixed serde of maxPendingPersists in RealtimeIndexTasks.",2014-03-05T18:55:12Z
8ef8dac63941e8dbe0cb0fd2d3b4ec95a0606364,Merge branch 'master' into igalDruid,2014-03-05T00:15:00Z
b6d9619db090f387a3c0b7d7c1c0b20472b53143,fixed markdown rendering issue (literal '<' are interpreted),2014-03-05T00:14:19Z
0e8e52766272c82e5568d24e4542ed01ada05db2,Merge branch 'master' into new-schema,2014-03-04T22:42:16Z
3691d40240d820de1b7fb3032a8236bfd3390144,"Merge pull request #413 from metamx/igalDruid

updated info re deep storage",2014-03-04T22:41:50Z
5aba6141d8f601eeebf1d712d76a1f429c991fc7,"Merge pull request #414 from metamx/incremental-index-synchronization-fix

Add test and fix one more issue caught by test",2014-03-04T22:41:26Z
5db00afb379a2d0f7361a66ca1d826c1de3adf9d,clean up and default values,2014-03-04T22:38:27Z
916bd30db3b7517df0a8fdb4ec9b7a6de958817a,fixed link to Cassandra article,2014-03-04T19:44:06Z
a73b4afc4b1c225f8d2598bf34744ecc306354a2,added note+link about Cassandra option,2014-03-04T19:41:05Z
f9f9b30709c80f0a25547749f442143d437c5520,fixed minor typo,2014-03-04T19:40:35Z
4f06dd5a7eb0e4b09ae4e8d1770446f49d117eda,Add test and fix one more issue caught by test,2014-03-04T19:39:33Z
5f61175e3f85cfec513ba6892d459850125eb052,catching up to master,2014-03-04T19:37:57Z
959f60205a6191fc76195dbbf95922a6e4d53011,updated info re deep storage,2014-03-04T19:21:30Z
0feddc3831e07b82364bfc8e86b9bc4c23e1740e,"Merge pull request #411 from metamx/small-fixes-docs-searchquery-limit

Small fixes",2014-03-04T17:30:27Z
498321090779869b2d204cd1282f285fba7dc5b6,"Merge pull request #412 from pgkiran/filepeon-cleanup

Temp filePeon files cleanup",2014-03-04T17:29:52Z
eb7bc28f41368076cdd3af058002663c2b26eef4,"fix synchronization

getDimvalues can also add to the dimension, protect it properly",2014-03-04T06:28:43Z
c4c4d80336e1ce5fdcc535ba28a632299e19d0c3,make local testing pass,2014-03-03T22:52:43Z
46b9ac78e77f2072871648db2d87d598ad2a2351,"Merge branch 'master' into new-schema

Conflicts:
	indexing-hadoop/src/test/java/io/druid/indexer/HadoopDruidIndexerConfigTest.java
	pom.xml
	publications/whitepaper/druid.pdf
	publications/whitepaper/druid.tex",2014-03-03T22:48:15Z
2dea60251ba32033378b172deb66a55bfaad6ec6,"Temp filePeon files cleanup

Related to https://groups.google.com/forum/#!topic/druid-development/TFUNas5ubyc
cleanup() method is added but still some files are not cleaned up. Additionally setting deleteOnExit on these temp files",2014-03-03T21:33:47Z
40aa6ecaefd3becd05d685198037087fa9550f34,fix npe queryID,2014-02-28T23:02:27Z
5603da189d238c3b8c022c84b4a3b470d0af6062,"fix #405 update cluster setup doc

rename old names to new ones",2014-02-28T07:32:05Z
eedd6a1b9ec759cbbf6a7ca3c737e1842e7a0465,"fix #362

fix #362",2014-02-28T07:08:39Z
e54949ca981ca5a446991c4a1ac671e2ec94736a,make queryIDProvider a singleton,2014-02-28T06:49:07Z
13c7f1c7b11d0295e9e2a351ac92ebfa8c8c8b33,remove dead code,2014-02-27T23:52:19Z
77d3e2508364efebcd8d3abd37739b0ebaa6a540,remove useless module,2014-02-27T23:24:12Z
bf2ddda8972af6ca5f84193ba391a4282083cc55,unit tests passing after more refactoring,2014-02-27T23:21:09Z
37a79dd4cbd38111af837608aad239047f925ef9,[maven-release-plugin] prepare for next development iteration,2014-02-27T19:52:40Z
8cdd0e3d534cf22959704bdd69018dce534048ff,[maven-release-plugin] prepare release druid-0.6.62,2014-02-27T19:52:35Z
bddf7b29080fe4f1a7eb0bda3792f6285b3e6aab,fix naming problems,2014-02-27T19:50:51Z
6621bcc00e60c50a234cec2b2d67cc91372666d9,Merge branch 'master' of github.com:metamx/druid,2014-02-27T19:47:25Z
ea2f401b1b21dbe5429983423c2996128b94bcef,update CLA so it can be used for any project,2014-02-27T19:47:20Z
9502212b1263fe2067a57e6d0b7e5468089be26d,"Merge pull request #403 from metamx/Query_id-for-metrics

add queryID to query context and request_logs",2014-02-27T19:44:05Z
0701b1534d63ee73885f6a9be7439ebd94cb1cbb,"review comments queryID changes, add wait time for realtime node queries",2014-02-27T09:09:25Z
314e38a2c6a88c47ee3b3a8e5cf416c0d65058f8,Fixed realtime index query serving failure due to incorrect treatment of DataSource,2014-02-27T06:36:27Z
d57974d58b4c24497f25e055c2f658f583a261aa,"Merge pull request #407 from metamx/restore-task

Restore task",2014-02-27T02:18:58Z
c2da36f69f8f047122812f5ef7cc4e9f5750b956,"Merge pull request #409 from metamx/igalDruid

Igal druid",2014-02-27T02:16:54Z
95c491db0f581559fab7c4789bf2c5f34a476c5c,fixed broken link,2014-02-27T01:37:52Z
072122077240f82c32e72b8a794668c17cc17489,Merge branch 'master' into igalDruid,2014-02-27T01:36:48Z
3d850aa2604f62031d75a7802ac1eb27d037939f,"Merge pull request #400 from tucksaun/feat-postgresql-support

Improving PostgreSQL support",2014-02-26T16:57:50Z
5e0d418b4bb8c6b7e59d3c27a1719912ea2bf77e,fix determine partitions partitioner to work in local mode,2014-02-26T11:01:42Z
2ffa4ce992ea681755789df9bde00d0deacfc635,update druid-api version to 0.1.11,2014-02-26T07:41:11Z
e40725d5f384cb4e6fe81dc0537d9b1e3bf84125,Added support for PostgreSQL on overlord nodes,2014-02-25T23:47:53Z
a835db2a3c928af8914a1502f2a500a5a89ca5c2,Added support for task storage in PostgreSQL,2014-02-25T22:03:13Z
ff7cc79752b2b84e40f04f2a65c7e17f6249bdbd,"Merge pull request #406 from metamx/refactor-partitionsSpec

hashed partitions improvements",2014-02-25T23:44:08Z
7dbafa5453fe2761a4e50cca037c79c85c922cbd,fix task id,2014-02-25T21:49:39Z
e2defe8bf1ab5263b076dd84205fa22dfde873be,update copyright date,2014-02-25T21:44:08Z
f62449621b30ff5c17d308c1ee89a669f12c9cdb,update druid-api version to 0.1.10,2014-02-25T21:33:55Z
2f610355859a6c5ed1d93c50e1a852fae94a100d,add restore task,2014-02-25T21:26:16Z
1ed5254d5b53ca05b89245ed0378122bddca440c,"improvements

1) Number of reducers use 1 only when intervals are to be determined
2) Read only useful bytes from BytesWritable",2014-02-25T21:21:45Z
b480d8f5434a899e8904e3d52360f2434d3428a6,review comments,2014-02-24T21:39:44Z
8af63005a6eb1a136a8ba14f3add1704b0d92e04,"refactor randomPartitionsSpec to hashedPartitionsSpec

refactor to a more appropriate name",2014-02-24T21:37:31Z
246ada63c573186300108c87629d159424bd648d,fix interval load rule,2014-02-24T20:55:20Z
373501a06d6375a656197e27a8a17029090b642a,add queryID to query context and request_logs,2014-02-24T10:41:33Z
dc69e4f631b27b499c885a24cb42d61ac858c973,Merge branch 'master' of github.com:metamx/druid,2014-02-23T19:36:49Z
04ee2505e6ee57a9a2e730b909bb19eb51e62828,edits to paper,2014-02-23T19:36:39Z
21299a6f813dd1b243b2345190d06955c8beedb9,refactored hadoop intro since the replacement page for instructions also wasn't right and there are quite a few available that are right,2014-02-21T18:43:52Z
1620636a49eb42c8806c06b13396ab79035d308b,"Merge pull request #402 from metamx/igalDruid

Igal druid",2014-02-21T07:05:46Z
699bae8e1b0cea3a6d169961fa95cf978b6b03b5,Merge branch 'master' of github.com:metamx/druid,2014-02-21T02:17:26Z
b01b0228c4a42ce25256e3df287b03c06feecdea,more paper updates,2014-02-21T02:15:54Z
1afcc71227a996e5784e743e55ca37119955bbbe,more paper updates,2014-02-21T02:15:54Z
7b0b90a8605645b735d692a786bf360bcb6c4a8e,Merge branch 'master' of github.com:metamx/druid into new-schema,2014-02-21T00:12:31Z
5d2367f0fdb67e5b812b378b520dbc41a76bc290,unit tests pass at this point,2014-02-20T23:52:12Z
0e3224bd1e442536eb049c6c7506ee5849aae682,Merge branch 'master' into igalDruid,2014-02-20T17:54:04Z
d3a1041e494e53f8b84735518a07b956db5892eb,fixed broken url to other tutorial,2014-02-20T17:52:25Z
723f1427eb5192715229f606a680ed437f2ee459,fixed broken url to hadoop setup instructions,2014-02-20T17:50:44Z
7aadef8e7649dba0e33e54b5b6398607fa596dee,minor edits for clarity,2014-02-20T05:20:07Z
ef6208d19257b296a7cab352e5c2ed3c1b3137b9,"Merge pull request #390 from metamx/bard-oome-fix

APP-2782 Bard oome fix",2014-02-20T02:52:56Z
ab83cba79065f549b63191282483f91e0c374588,"Merge pull request #393 from metamx/group-by-improvements

Group by memory usage improvements",2014-02-20T02:52:37Z
0107ce6a297be02c590e6ecb053eefe4fd227dde,paper edits,2014-02-20T02:41:37Z
20cac8c5068cb755adcb9378c0ae1eb69c3d1813,not compiling yet but close,2014-02-19T23:54:27Z
75ae4d434d08c928a543af52a2182c670529f2f2,added advice about restarting zk and mysql if not already running,2014-02-19T23:28:48Z
5be5cadd7b3e7c789e4a6907eadb027733d4f2a9,minor refactoring,2014-02-19T16:25:18Z
a049188d23a0a3fd8d6ac531e5e116beca829465,minor changes from review,2014-02-19T03:43:47Z
4b7c76762d0ac3c2e92d3968ff86fd1b2aa81d8a,"unit tests passingn at this point, finished rt port maybe",2014-02-18T23:14:38Z
4b67dbff5f15b820f796f983cf7b27f2dc87d19e,Optimize DbSegmentPublisher.publishSegment,2014-02-17T17:54:59Z
4dce0075774fcb1430a5e3dfb5a942d936c3e968,Use DbConnector.isPostgreSQL everywhere we used getDatabaseProductName before,2014-02-12T12:30:32Z
d089f05127899c76ece7599adc4dfaacc4842d04,Improved support for PostgreSQL in config management,2014-02-12T12:27:31Z
8fac0b0b7ae3fe5456bef0200ddfdb758ae8c01d,Fixed automatic tables creation for PostgreSQL,2014-02-12T11:43:28Z
5d729570c1564edd8613b4023f4bc150cebd4e85,millis converted.,2014-02-17T09:30:58Z
9b6fe2d00366f587d04f79a3df4f815ac7a17206,"Removed CostBalancerStrategy, made default = 1 thread",2014-02-17T09:27:05Z
bec264bdf73a2c84e5104104e7470be2c70a37cf,Dynamic Config,2014-02-17T08:55:40Z
c57cf6ab4dc2aaf8c754153d3f967c57f8bb88fa,[maven-release-plugin] prepare for next development iteration,2014-02-14T23:24:15Z
44755cc91cd114de7310278c9793ae3e433fb29c,[maven-release-plugin] prepare release druid-0.6.61,2014-02-14T23:24:11Z
fb93448e9dbf595211b57867f42bef40672d71f5,prepare for next release because my last one failzored out of bad internetz,2014-02-14T23:22:27Z
f5affb6b5a1fa0da1cf4235ee97686394343756e,[maven-release-plugin] prepare for next development iteration,2014-02-14T23:09:30Z
189376f4955839d403c92be3dbfc2792ac42cf6a,[maven-release-plugin] prepare release druid-0.6.60,2014-02-14T23:09:26Z
1a8f9f2e12f86b7458c002071b01f064383ace5c,prepare for next release,2014-02-14T23:07:44Z
7e683e0cf547e652bacf58e03d8bcd5260602f68,Merge branch 'master' of github.com:metamx/druid,2014-02-14T23:05:36Z
ef648b85f58544d61ba5d16b0f9baee499d66f8f,fix broken priority queries,2014-02-14T23:05:30Z
fde7269c86d660df1797ffff77389bdd30940bbf,check published segments before the intermediate files are cleaned up,2014-02-14T23:00:14Z
3979eb270cc9273cb6182f86cdf648a897e7c4e9,"Revert ""Revert ""Merge branch 'determine-partitions-improvements'""""

This reverts commit 189b3e2b9bc3c79da9c98b805df624f024109469.",2014-02-14T20:58:56Z
a8c4362d7282114c85a6df3321e4a771750b8802,rejiggering druid api,2014-02-14T20:57:52Z
189b3e2b9bc3c79da9c98b805df624f024109469,"Revert ""Merge branch 'determine-partitions-improvements'""

This reverts commit 7ad228ceb580f9ca757e91b019bd8931f710f87a, reversing
changes made to 9c55e2b7794d37cd8713bbc0465aaad23e23472d.",2014-02-14T20:47:34Z
5607edb8132732c8e2de9b00fd48bb9c68e914d5,"Merge pull request #398 from metamx/igalDruid

minor tweaking to clarify instructions for csv and tsv",2014-02-14T19:52:07Z
78eddc50ee87b41924661fe1d378363db33dbfd3,add checks for elements larger than capacity and account for the size of element being added,2014-02-14T18:42:21Z
5af414c93c6d6e8a0c66619ca2c2c91211211f35,configurable thread count,2014-02-14T07:39:24Z
4b902aed232e9ad30cc3ecad518491f97cac2ab4,fix typo,2014-02-14T07:24:59Z
7dae293b5f59a5b9954b50cbb43e8fcbbf5fb452,fixes to comments,2014-02-14T07:12:46Z
5ee776db64e6b3aee8d153dde5ae4be433391606,fixed broken link,2014-02-14T00:39:44Z
071480090415f8aa52842b583b96198d467bda73,Merge branch 'master' into igalDruid,2014-02-14T00:38:09Z
6e0590f97b81648ed48f1e3a1c054dc361b40bc2,Test udpate,2014-02-13T13:40:08Z
c2604657edd7999666034e2b0c29ca9e9a8a3fb6,Extracted common methods,2014-02-13T13:34:54Z
a8d8d1ea0689692ccfa7d5773c59b2986b099eeb,Costbalancer Multithread,2014-02-13T13:28:45Z
82fd35726fcf920d047dee6229335a4a17a27a94,[maven-release-plugin] prepare for next development iteration,2014-02-13T04:03:00Z
cc1b91636f9da677eeba6d5467dc338fd3d84602,[maven-release-plugin] prepare release druid-0.6.59,2014-02-13T04:02:55Z
a986166b9c9c4323220571153c3c916ef014489c,prepare for next release,2014-02-13T04:01:05Z
60e950fad8ca4272e03f29549d78ccd34c087b8b,fix backwards compat issue with master,2014-02-13T04:00:43Z
9313c7f511b69c698652cc750fe380f8a0e5e061,minor tweaking to clarify instructions for csv and tsv,2014-02-13T02:59:35Z
b019fea78818edb6834ada5974fc989b52056ea1,update api version,2014-02-12T05:30:19Z
7ad228ceb580f9ca757e91b019bd8931f710f87a,"Merge branch 'determine-partitions-improvements'

Conflicts:
	pom.xml",2014-02-12T05:21:26Z
74966eb2efe6f284030800722af87f63ca3f711b,add copyright,2014-02-11T19:30:38Z
3302cff6dbaf297f4aa16308dbadfd5835a4f6a6,groupBy improvements,2014-02-11T19:21:10Z
9c55e2b7794d37cd8713bbc0465aaad23e23472d,"Merge pull request #392 from liquidm/improve_realtime_metrics

consider errors in reading from firehose as unparsable",2014-02-11T16:42:19Z
b4eea282b68937331f90fd1633a43b3efc485452,consider errors in reading from firehose as unparsable,2014-02-11T14:35:06Z
f7ea50c6741630246d43db1b9ce0d088cef8d8e3,"Merge pull request #389 from metacret/master

curator 2.4.0 and Announcer logging lines are added regarding infos of reinstating",2014-02-10T18:33:41Z
533a263fbd6c4e2f4326003034d500224b2af5b3,initial working version,2014-02-10T17:02:26Z
f8d8290a1eea162f2119369b7fb34773af207e38,add newline at the end of file,2014-02-10T10:14:28Z
ec2a32acfc8b3258cf6a21c2e24e9f8faa8d6aea,review comments,2014-02-10T07:23:36Z
dca965a35add9542589fe7367dfdc007d44e0c8e,curator 2.4.0 and Announcer logging lines are added regarding infos of reinstating,2014-02-10T06:26:18Z
38e9a795608a2794a05736d5698490adc4e27e5b,Fix typo,2014-02-08T23:06:41Z
b7a78680b200aceef734837c1aa2db1f4464c937,[maven-release-plugin] prepare for next development iteration,2014-02-07T21:06:23Z
cc6886646e75f084c12aeec4e403050aa6e41d33,[maven-release-plugin] prepare release druid-0.6.58,2014-02-07T21:06:18Z
2497bd2e85a5edb48c5ee60398a0bccb26e8a456,prepare for next release,2014-02-07T21:04:34Z
555f434fa6e55f4479437085b8c67ade09febd1c,[maven-release-plugin] prepare for next development iteration,2014-02-07T19:56:41Z
371f2bb941e115e3063457102e71837910de98b9,[maven-release-plugin] prepare release druid-0.6.57,2014-02-07T19:56:34Z
c8b350270fdfeebbdd10e1d64948e1ad0f0aae13,prepare for next release,2014-02-07T19:54:56Z
1fceaf35eebe0cdde2c41c73b33bc6b0a5132c32,fix another broken example,2014-02-07T19:48:15Z
d2218fc19c71d14be1c6760f69100888ff09a4e5,fix broken example,2014-02-07T19:46:32Z
f86d769d63c2b2376518fb1186454eff4073e273,"Merge pull request #388 from metamx/refactor-docs

Refactor out the configuration docs",2014-02-07T19:39:59Z
0fd95bc2b48390541c86eade9be53222df541017,refactor out the configuration docs,2014-02-07T19:35:44Z
5bf9ca8dc8d2ae07bc1c209a966a6afbe5fede05,"Merge pull request #384 from metamx/autoscaling-min

SimpleResourceManagementStrategy: Scale up to minWorkerCount when increased",2014-02-07T18:03:07Z
b9556e2e2ee4f994d37871c5c69ab15ffc7c76e1,SimpleResourceManagementStrategy: Fix log/return,2014-02-07T18:02:45Z
dc097081a64e2fbef2a0b40c6645a94f41cd59f8,"remove writeOpQueueFactory

for writeQueueFactory the buffer of the element is nulled by memcache
before remove is called, thus we are not able to determine the size of
element while removing, We can potentially work around this by adding a
wrapper to keep track of size but that will have its extra overhead,
Also verified from the heap dump that the growing queue was the queue
for opQueue.",2014-02-07T14:30:25Z
db93e45bef99cdb41678326e5e7c1aa0c5f7781b,minor fix,2014-02-07T12:22:52Z
61d99bb8f2f401778079b9add75fb87a6f34d938,change byte size config to long,2014-02-07T11:26:15Z
d27274463b91ed5f0ed0b0c65deb036309812c29,add separate putLock and takeLocks + test,2014-02-07T11:22:07Z
49c608da7fab5d43d598a24d596bf74189656543,"Merge pull request #385 from metamx/fix-local-cache-drift

fix local cache byte counting on object removal",2014-02-07T00:18:43Z
bd113095936579213c39c81eeff780aa6505b506,Merge branch 'master' into subquery,2014-02-06T23:36:29Z
df0d81baa8b8bc1637d103000c3fe28b8e3f3f4e,fix local cache byte counting on object removal,2014-02-06T21:57:05Z
5ec634e49849de03b6af1b33ef64e1d7c38281ed,SimpleResourceManagementStrategy: Scale up to minWorkerCount when increased,2014-02-06T21:20:01Z
0f6af72ea49ceba566d350593f727e76322973c6,Merge branch 'master' into new-schema,2014-02-06T20:46:13Z
9756b18f9b5cf4f32438d42590d9d4e0fac47523,sort complex metrics with groupby,2014-02-06T19:26:05Z
fa8372ab02953b8dc27c2327588c5403814638ea,Merge branch 'master' of github.com:metamx/druid,2014-02-06T19:19:11Z
af4827336939096ea179d60788d8e3dfa54af569,fix bug with dynamic configs in coordinator not working,2014-02-06T19:19:05Z
7bbb6ba063cc87f121b0eebe68c41b4966250d8a,support for bounding operation queue by the byte size,2014-02-06T18:03:32Z
636eb23f7194e2e3f5fc5ad0f7359fb0989d1963,"Merge pull request #382 from metamx/tasks-table-index

DbConnector: Indexes on tasks table",2014-02-06T00:01:48Z
53c5124b992d40e67e779787097650ef42a0b6f7,DbConnector: Indexes on tasks table,2014-02-05T23:59:00Z
aee574c7722064cbd98182d2cfde52c4ca61ae23,review comments,2014-02-05T11:35:06Z
48d0c37f981a1bf3a6ade7b241a3832caff0760b,documentation for random partition spec,2014-02-05T10:00:44Z
056e82a51684a61b9faf07eee042007153b3f5db,[maven-release-plugin] prepare for next development iteration,2014-02-04T23:23:34Z
0ea45b590feb4f0c1c9089e1d0561e2cb6f9a09c,[maven-release-plugin] prepare release druid-0.6.56,2014-02-04T23:23:30Z
badc7b2e3fde37e57f4009f2b17135ff1fb7968c,fix bug with load throttling and more tests,2014-02-04T23:21:45Z
bacc72415f9065f858e9c06cf630460c078f0823,correct locking and partitionsSpec,2014-02-04T21:47:47Z
fc4cd79125f0b0b12697fbe594f68324a3bb8122,[maven-release-plugin] prepare for next development iteration,2014-02-04T00:47:50Z
4d52e20fe17195634e5fab2fe4b34a96701c16c9,[maven-release-plugin] prepare release druid-0.6.55,2014-02-04T00:47:46Z
8b398533cb0262b40b73370cdfbe6f90933415b6,fix more bugs with determining what is assignable and what is not,2014-02-04T00:45:59Z
46571ddf6930425a944050e5a7cc5d6c7efa1ef7,[maven-release-plugin] prepare for next development iteration,2014-02-04T00:35:02Z
cebb46a259cbbd3669eea919e69a28cc23fbf63f,[maven-release-plugin] prepare release druid-0.6.54,2014-02-04T00:34:57Z
f4b616530742cdd52bb13defc385212c2bed4675,fix bugs with finding indexing workers to assign,2014-02-04T00:33:06Z
d4eba497224f3744b04ef07d09e0592ede8160fa,remove debug printing,2014-02-04T00:16:46Z
98956cdadb1c3f2083df4a2f7305993e4d60de88,Extra null value check. Not sure why this is needed in the subquery implementation and not regular queries. Bug elsewhere?,2014-02-03T23:53:10Z
689191c5ad566d7eca99aa60a1e926a157810454,Merge branch 'master' into subquery,2014-02-03T22:52:50Z
2d7af555d0f1403357cc66055a6e26dd93192993,"Merge pull request #380 from agile/data_format_docs

Link Data Formats document and format spec references",2014-02-03T22:30:26Z
14d0e5432783f4a1f507a779e53a3ed416046ff3,first commit,2014-02-03T22:15:03Z
994c7e3fa889a98edbbe586ed27306f76eb80688,RemoteTaskActionClient: Retry on ChannelExceptions too,2014-02-03T16:16:38Z
5a152f8b1fd845929571abe99ef5bc3a3485e51a,Link Data Formats document and format spec references,2014-02-03T01:47:55Z
21d518e15c13616a7ced85ef9a5a50ae5c2604d1,[maven-release-plugin] prepare for next development iteration,2014-02-01T00:32:25Z
84f434d9f44eb279e3669af294c11bf685877afd,[maven-release-plugin] prepare release druid-0.6.53,2014-02-01T00:32:21Z
63aacc71e3993f27d234cf0fd992732d61aefe32,"Merge pull request #378 from metamx/upgrade-jquery

Update jquery to the latest version",2014-01-31T20:38:25Z
019be5c3b0093cebff54d09ce6aaf8c6bc2ddfce,update jquery,2014-01-31T20:37:37Z
569452121e11e784b34b5cc36d30bd3f2b38f4f3,fix partitioner for loca mode,2014-01-31T16:29:17Z
82b748ad43b306d2ad1f564d15f55142ffc866b2,review comments,2014-01-31T14:49:33Z
97e5d68635589027937216d3ed8c97917b5c90fc,determine intervals working with determine partitions,2014-01-31T13:34:52Z
5fd76067cdad60f283517b3512e854eac672a335,remove logging and use new determine partition job,2014-01-31T08:21:38Z
e6d4121cecd12bf778d7277d91d61143e5ac3bb3,"Merge pull request #375 from metamx/igalDruid

Igal druid",2014-01-31T00:33:22Z
18c6a070ca281579c5e7cbdc71d4d09a83dddc43,fix default locale for tests - fixes #374,2014-01-30T19:36:34Z
7ca87d59dff7af608f3a583aa5419bb79c349b23,Determine partitions using cardinality,2014-01-30T19:19:11Z
3a980b8a6852b35a56167bf48eabef1691cdd557,"Merge branch 'master' into igalDruid
Resolve conflict in first tutorial.
Conflicts:
	docs/content/Tutorial:-The-Druid-Cluster.md",2014-01-28T17:35:39Z
624b13e8f546dbbbf91d7939607e3f23c0cc3c25,Fixed JSON,2014-01-28T16:04:19Z
374904ce202950de3d9549ac6ee6cbede7ce01e0,Removed trailing comma,2014-01-28T15:34:13Z
9831401c7da8d56cf0bd07deeb2f309e13bf18ab,missing word,2014-01-28T15:17:49Z
8d024a5e9aecd45967040fa5e396e549c0150e90,typo fix,2014-01-28T14:56:38Z
e9cf9355186381a543d8fc8f1b8aea156509fef1,Fixed realtime querying after subquery changes,2014-01-28T02:58:25Z
01e8d9e0a0f33cdd77fde650260f7b443f2238a2,fixed typo,2014-01-28T01:29:49Z
1bca1c47b7da7cbb63c7430905e5b09688f36c6c,creating a doc to cover ingestion of csv and tsv formats,2014-01-28T01:29:05Z
1c0b818cb2db19b7bb47239d1232f766ef477307,Merge branch 'master' into subquery,2014-01-27T22:57:14Z
929e6be8e9bc113fb4364a72c9ebee76efbb15a7,text cleanup,2014-01-27T22:28:59Z
74dd855a45eeff9a532302c8a4f71268c4877e37,fix spelling,2014-01-27T21:50:23Z
7a116bf7846efa61aad44325c2dcb91e2664fbef,backwards compatibility fix for rules serde,2014-01-27T12:47:11Z
f293794710b08ebc5a7c88f48b7f98adbc76ad9e,WebJsonSupplierTest: Use fqdn to avoid search domain wonkiness (fixes #275),2014-01-27T11:49:01Z
8edf0cf13641f6bdb1a5bc8cbef56f7608352941,more backwards compatability fix,2014-01-26T13:27:34Z
7800dac7f79f03e415eb02b488039ee49b6ef7a0,backwards compatibility fix,2014-01-26T12:34:43Z
158a725985dd3470748b5dabd7dd530d52c26214,fix backwards compat issues,2014-01-26T12:07:09Z
8ab0636f5cff62a354e3954023bf460d8c6ab5ce,fix coord resource,2014-01-26T12:04:04Z
c99e468ccd9198d1b71c9e9008021e5a37fa8e8c,Merge branch 'master' into subquery,2014-01-25T00:48:35Z
06b73b366a6d0b12d4bd2bb18023e8ce2bcdfff5,minor rewriting for flow; fixed some wrong links,2014-01-25T00:48:19Z
8f39981fab10bc796a5b53d9d6dca3a1fafcf1a9,Documentation for query data sources,2014-01-25T00:12:10Z
c88cb2af16db60ae9cbc0d89929bfc4610da5fce,Fix NPE when subquery returns empty result,2014-01-24T23:58:47Z
6581436c0c49b623c5993f542417fd301de6387e,update kafka 7 dep to be able to actually run it locally,2014-01-24T23:26:17Z
0c789412bb2ad7189f5a8d0defb52d4b4ed9ae86,add a workaround for jackson bug where jacksoninject fails when a null value is passed through json creator annotated constructor,2014-01-24T23:07:27Z
f2c1f798b9858cb96b3094529a8ec479e19dd01b,Fix subquery merge issues,2014-01-24T23:03:48Z
cd719eab3cb1cc47a0252618fc95bb5465be4517,Merge branch 'master' into subquery,2014-01-24T22:42:41Z
facc9c51d37dad77ba2908c32b8ff43f405b7421,fix max pending persists,2014-01-24T21:34:41Z
3301d5d510b3ba203901d5ac435f8b0844c1440c,added a little padding to table cells to improve look and readablity,2014-01-24T21:14:56Z
5aacfe72e1e0715b7c90093575540669a05ec58e,minor corrections and edits for flow,2014-01-24T20:26:38Z
6b395910307240e607632af3bd547a2b9f73c68f,"Merge pull request #351 from metamx/az

Bridge Multiple Druid Clusters",2014-01-22T01:33:15Z
f3e1cbc42373a1f0d106b51c1002250e0135ddc6,fix according to code review,2014-01-22T00:26:28Z
16f5f1d9cb8399dc69a716d9cce1e7a13de3f6b3,Merge branch 'master' into az,2014-01-21T21:59:41Z
6c32b0fc763a3a5d761054156cffdea6d2b3bb95,"Merge pull request #367 from metamx/port-hll

Port Community contributed hyperloglog implementation from 0.5.x to 0.6.x",2014-01-21T21:31:14Z
33cfa41efbd713154e3aba8c3bab061bd01ab158,revert change,2014-01-21T21:30:40Z
4efa93a190c187e39674e7d852fb56292da459f7,move tests,2014-01-21T21:28:58Z
b85a28ab9659dffbaa09a01a2474ef3750f7c73f,port hll from 0.5.x to 0.6.x,2014-01-21T21:21:31Z
0c16f24ba166834877c88cbd5dc32ea0c7f748ac,added note about slow start first time around due to fetching of dependencies,2014-01-21T19:03:07Z
d3bc077ecdde00cc0e326de6500d913e0ebc8f86,Merge branch 'master' into az,2014-01-21T18:47:57Z
2ff86984dad7afd9307070eabc4be889cfcb603d,fix broken ut,2014-01-21T18:47:45Z
908e9e377cc5887aa6c74f984318ccd83ce97c92,"Merge branch 'master' into az

Conflicts:
	server/src/main/java/io/druid/server/coordinator/DruidCoordinator.java",2014-01-21T18:41:40Z
010abf2552b1ae8b91b2f436c7f458e214e2038f,fixed typo,2014-01-21T18:05:03Z
53f69c57919f0a80cc338f1e60472ea71c86de72,updated to not refer to old wiki,2014-01-21T01:12:36Z
0161d036b99483e5958d3acc079cf33c54d9eedd,"Merge pull request #366 from metamx/fix-terminate

Indexing service: fix the edge case where autoscaling tries to terminate node without an assigned IP",2014-01-21T01:01:06Z
ebc66df27d612ffa2040e620437c6793397750ff,use terminateWithIds in terminate,2014-01-21T00:58:53Z
1d81ad2946418c5c3ce78c0042e887bb75775cdf,remove unused class,2014-01-21T00:45:54Z
1ecc9d0f981ee22639be351f8ba2fcdc810b7cc6,fix the edge case where autoscaling tries to terminate node without ip,2014-01-21T00:44:19Z
1057e2e1657e0603d6892c273199f48d53dee165,"Merge pull request #319 from metamx/select

A Select Query for Druid",2014-01-20T23:31:25Z
3ff4cc23713fe80f972031e131eeaa44b820fb18,remove some accidentally committed code,2014-01-20T23:16:17Z
e2ea2ec7fdf75a4f3cdbbb1f8eeb3658ffd89f7c,"Merge branch 'master' into az

Conflicts:
	server/src/main/java/io/druid/server/coordinator/DruidCoordinator.java
	server/src/main/java/io/druid/server/http/CoordinatorResource.java
	server/src/test/java/io/druid/client/DirectDruidClientTest.java",2014-01-20T23:10:13Z
c93f8960926fe423f7b97f2ac1e2eef7cdb5c30a,"Merge branch 'master' into select

Conflicts:
	server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java",2014-01-20T21:26:51Z
08966c424a627699cf41459ab1439426aeb92860,"Merge pull request #363 from metamx/moar-endpoints

More Coordinator endpoints for getting info out of druid",2014-01-20T21:07:37Z
215584891e7385b117a1adb1066b64e8f3c40a44,Merge branch 'master' into moar-endpoints,2014-01-20T21:06:45Z
6404967994ba69b9a754b9d14ef4f3da4e1c8386,fixes,2014-01-20T21:05:05Z
c1f0027a366a346cc25dd3b3e1768a820958e10f,"Merge pull request #361 from metamx/worker-oome-fix

Worker oome fix",2014-01-20T19:34:45Z
5c043803c6de16bb0f1a7772e05741b248ee72f1,review comments,2014-01-20T08:10:36Z
8d01a46d02041d40f92ed8dcfd25a97bdf44f9c5,actually register resources,2014-01-18T02:01:09Z
3cba0c8ff2ab89e20e0707cd4f585e0aab2e0e90,more endpoints for getting info out of druid,2014-01-18T01:52:27Z
57e022f4463a2a2495ee1651ef901c56aa6a38bc,[maven-release-plugin] prepare for next development iteration,2014-01-17T23:53:54Z
6540b2a58e890179cb77acb5f6d86deb945e052a,[maven-release-plugin] prepare release druid-0.6.52,2014-01-17T23:53:50Z
f898c29e20e78850589cfbf15ad91c314cc1be21,fix batch indexing and prepare for next release,2014-01-17T23:52:04Z
3fb72aff932562b4638fa06268b35a8667c4eaa2,rename maxPendingPersistBatches to maxPendingPersists,2014-01-17T07:29:21Z
874cdb1b5b2d3946de0e06fd9a23e6589f37c11e,review comments,2014-01-17T07:21:28Z
3db33c326840252c9ea84372de3f300832952a1b,review comments,2014-01-17T07:21:10Z
fb819abd6f34bff658621ad37b16d4a96f9643c3,make maxPendingPersistPeriod configurable,2014-01-17T05:31:55Z
53b6392dce0b9436a325508c0e3a90a2dffbafbd,added titles; fixed a few typos,2014-01-16T23:37:07Z
6e880f8b24947bc5b775f7bb18f34f60f236f15b,tweaked naming,2014-01-16T23:16:04Z
6f5e1afbff11be248e718409edf686da3b4fd467,add blocking mechanism after 2 pending persist batches,2014-01-16T21:31:04Z
4c8495662f672f146bd1f7eb64cd3bd3096a7aed,Subquery support for GroupBy queries,2014-01-15T23:38:57Z
26a0f862fb42a821e180c467878eb8aa5fb1a232,[maven-release-plugin] prepare for next development iteration,2014-01-15T01:35:45Z
3737ac496673429413be7a138a6cf5136048ec97,[maven-release-plugin] prepare release druid-0.6.51,2014-01-15T01:35:40Z
0ceda034cd149944bf2212a15c3ea0daf217c5fc,fix dependency issue and prepare for next release,2014-01-15T01:34:02Z
528efedf527e7d805403dda34a1e90f1317640cd,[maven-release-plugin] prepare for next development iteration,2014-01-15T00:08:47Z
b4e4a5df96a7fe4bc1ead03a3730bb2dcd2d42c8,[maven-release-plugin] prepare release druid-0.6.50,2014-01-15T00:08:43Z
187bb84b4551abb0440f355bb04a0018e71524cf,prepare for next release,2014-01-15T00:07:05Z
151bbe3505e4aac1b1b3091a191a852307114fe5,better exception catching with sequences,2014-01-15T00:06:44Z
022423e200ae95a00393c3e4551a1985705795d8,fix column closing,2014-01-14T23:01:35Z
4a9c255cdea6db11a0307c6e7b03d7465ec39012,[maven-release-plugin] prepare for next development iteration,2014-01-14T17:56:34Z
d8ac5575bc31b5078d68a6530b4cd6bc0fbc0246,[maven-release-plugin] prepare release druid-0.6.49,2014-01-14T17:56:30Z
82cf380bd4ff2dfc19d985314fdbeb84be27b86a,Merge branch 'master' of github.com:metamx/druid,2014-01-14T17:54:49Z
9184906c39ada7c93c355542547fe52e91677bfa,prepare for next release,2014-01-14T17:54:42Z
cf018205be4528cdd6e77ccbe9972421b0f25262,"Merge pull request #360 from liquidm/fix_future_timestamps

make ServerTimeRejectionPolicy also reject timestamps AHEAD of server time",2014-01-14T17:27:04Z
bfae07338c8e4e51da3b2cfb247af9b8a19e4c64,make ServerTimeRejectionPolicy also reject timestamps AHEAD of server time,2014-01-14T10:11:04Z
396311a547fa58326cefe7698a8024c25ced3d77,[maven-release-plugin] prepare for next development iteration,2014-01-14T02:04:29Z
9c9d6287a2c75f45bdbc64364a2c67e766f54c9f,[maven-release-plugin] prepare release druid-0.6.48,2014-01-14T02:04:24Z
e8d61ffe998c727137410bd13cc489a016518172,prepare for next release,2014-01-14T02:02:24Z
5c64ee2301a00ee75f487692ab9a6fcf5508658f,Merge branch 'master' of github.com:metamx/druid,2014-01-14T02:02:03Z
3b17c4c03cdf58329f28b1d0001327722b3a7ca9,a whole bunch of docs and fixes,2014-01-14T02:01:56Z
935a50d38afb901a784be1ab35fe04a8b2782fc3,"Merge pull request #358 from metamx/index-service-bugs

Index service bugs",2014-01-14T00:36:36Z
1331f2ce568ab54bd3bdbceffb842803ec304c2e,"TaskStorage.add() now throws TaskExistsException, and the servlet respects it

The servlet will throw 400 rather than 500 when a task already exists, to
signify that the request has no hope of ever working.",2014-01-13T23:42:05Z
a72c4429f7c2d50fb64b9b3f0e98e4e7aeaae719,RemoteTaskRunner: Fix NPE on cleanup due to missing withWorker,2014-01-13T23:41:04Z
35ed3f74bf4963670061cd05881af93f4d50b27c,update emitter version,2014-01-11T02:10:02Z
f3476f40e1ee010d5ace3b4d56efc3a565cd89f3,fix typo,2014-01-11T02:08:33Z
db75b6d7518aca96f0817890b92a6b4612b8ef75,"Merge pull request #355 from metamx/fix_index_task

Fix the index task and more docs",2014-01-11T02:06:53Z
f4e3f02c3b0ffd4c72c9bf8feccc2c384de31313,more exceptions,2014-01-11T02:06:42Z
749634b8c3df6edbe6b756e43873aa7ec7b0f2e5,"Merge pull request #357 from metamx/igalDruid

Igal druid",2014-01-11T01:58:01Z
1ecc94cfb668928da59a584c2cc99246b5900d04,another attempt at index task,2014-01-11T01:56:22Z
8196bf5dde05da10890bf4f7ced99b5a4f977caf,added link to manually download druid 0.5.x,2014-01-11T01:20:53Z
81527a42ba1bbda40adfa36f5da5ccf9fec6c89f,Merge branch 'master' into igalDruid,2014-01-11T00:30:40Z
58c8fcc5192cf6f03977fbe2f2335a0106ce70ec,added note about support for druid 0.5.x only,2014-01-11T00:29:33Z
c1b69df9ec71413c3831e3dfd4c8e7f47c80128d,remove unused run_ec2 script,2014-01-11T00:28:00Z
d57cba5e317ff18ceef84717ecb37a2ef20e3bec,"Merge pull request #356 from metamx/igalDruid

Igal druid",2014-01-11T00:21:47Z
917b4ea5cece83f24812c8a7b31badec7b44cd26,Merge branch 'master' into igalDruid,2014-01-11T00:19:20Z
f0b4d0c1e4f94f213e1f8d612ad36ff7597b3e44,fix small bug with unusable dims,2014-01-10T22:59:09Z
fe5010405322418355f841e8d9b090a519cbaca1,fix the index task and more docs,2014-01-10T22:47:18Z
8c2bffc1a66df7ab012868bfdd296047355aab6b,final draft,2014-01-10T22:45:38Z
6816de7518db4fbad229e6b0262353ef322651d0,"Merge pull request #354 from metamx/request-peer-metric

QueryResource: Store remote address in user7",2014-01-10T21:39:01Z
643f999605e93d50244c265d23ce4cdd281c8698,QueryResource: Store remote address in user7,2014-01-10T21:37:13Z
bd9a4a0b60aeb9360adc2f11b9de3410fac417f0,add connection count test in case of failure,2014-01-10T20:43:17Z
f123a143738adb9dedec975f8d039ce35b9b4df3,"Merge branch 'master' into az

Conflicts:
	docs/content/Realtime.md
	server/src/main/java/io/druid/client/selector/ServerSelector.java",2014-01-10T03:09:38Z
f3d6bdc76d5a80dcbdc7a0635ea51c3d64255425,fix GUI,2014-01-10T00:42:23Z
d33aba728ad4d6d08bcc70b4a1354bcfd82912d3,"Merge pull request #353 from metamx/fix-request-balancing

Fix request balancing",2014-01-10T00:06:06Z
2ddf3c4ef621b48b096e8e959cf7f53ac4adc78f,first stab at overhauling this doc to bring it up to date,2014-01-09T23:44:54Z
84273d4fc28d9e5768454a3ace1df098b7525044,add docs,2014-01-09T23:18:40Z
ca90530085ae4e2306e566eb2a0ab449f153dc81,simplify things a bit,2014-01-09T22:45:13Z
632d6b0a7847054fe81d38242afe8a1dc233710c,"make server selection configurable, add back random server selection",2014-01-09T22:37:33Z
da01c4a78a1f3f092dad345395b8b4bd1bb21968,Add registration for backward compatibility,2014-01-09T20:32:06Z
3d734944ef976620751227bd11ec24b002a641e5,fix connection counting,2014-01-09T19:55:43Z
d28f9daccb8ab4e60d1779a201cdeac89b309226,"Remove duplicate registration of service

If the serviceName does not contain "":"" this leads to duplicate
registration of firehose with same name",2014-01-09T19:47:23Z
81cdf1b6d006828ec578021d54cdaded707f0a4a,"Merge pull request #340 from metamx/igalDruid

Igal druid",2014-01-09T02:39:00Z
2aabc6c4e60d5a929086a00a6cfb76ea3e38a9cb,"Merge branch 'master' into select

Conflicts:
	processing/src/main/java/io/druid/query/Query.java
	server/src/main/java/io/druid/guice/QueryRunnerFactoryModule.java
	server/src/main/java/io/druid/guice/QueryToolChestModule.java
	server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java",2014-01-09T00:31:19Z
96caf2d518bba518c318f3529ed123e9258bfd79,Merge branch 'master' into az,2014-01-09T00:23:05Z
90f3056fce38a19c8c672ab1e6260af5530e65a5,clean up doc,2014-01-09T00:10:48Z
f8478d49d81f7c7f2e37e8648e6a294df982bffd,"Merge pull request #350 from metamx/topN

Approximate TopN Query",2014-01-08T23:58:52Z
0301dde671a7db828acb4fb9c90652597cacd772,remove unnecessary doc line,2014-01-08T23:56:29Z
50a6839693a9acc48405d29f9a6c92e29cb29c12,inital commit of topNs,2014-01-08T23:51:03Z
9037141c00b17753eddb969c6f3b8857b00771c4,IndexTask: Better logging at the end of each segment,2014-01-08T23:22:07Z
1476d7f51e08a3a338cc675b8fbc17dd677117a7,"LinearShardSpec, NumberedShardSpec toString methods",2014-01-08T23:21:53Z
838e555a81d060c38ac9f98f4b502d2dbb37e400,"Merge pull request #349 from metamx/indexing-stuff

Indexing stuff",2014-01-08T22:57:54Z
2c53af4d663683c8096334169e29c455c8cca16f,ForkingTaskRunner: Upload task logs even when job fails,2014-01-08T22:46:18Z
7f430d9fdef013ad494b393159bd251c48727866,RealtimeIndexTask: If a Throwable was thrown it is not a normalExit,2014-01-08T22:45:35Z
306f4b8fa2cb8f976bbfe128228f0f75aa30f673,more tests,2014-01-08T22:08:41Z
f44509b5306a2ac6146f5b857109a43179b9db6d,"queries working at this point, tests pass, still need more tests and fix rules interface",2014-01-08T00:24:53Z
83b4641e31e483f27102576983c0ea76de3576cf,ForkingTaskRunnerConfig: Add java.io.tmpdir to allowedPrefixes,2014-01-08T00:12:24Z
6db52c82972bbdaeb42bbf15e7ae5af7d9b570f7,"Merge pull request #347 from metamx/finishJob-metrics

IndexTask: Print metrics even if finishJob fails",2014-01-07T19:03:36Z
bf158102c41dc134a16c5c6cbcdc51923759e49c,IndexTask: Print metrics even if finishJob fails,2014-01-07T15:17:19Z
e11952f3b6ae1a4c1041fc8bff4564c983f43d18,"bridge is kinda working for mastery stuff right now, tests pass",2014-01-07T01:01:50Z
98d01b1a9c33383ea525f39207c45a97758edf20,Merge branch 'master' into az,2014-01-06T17:31:33Z
3544b7ec4ae1e1a9d914fc6da25ce91231377c65,Fixes #346,2014-01-06T17:31:04Z
2b46c1d29206e54dd40a1da9ce44b2c90898509e,[maven-release-plugin] prepare for next development iteration,2014-01-03T03:53:41Z
7a0f634b02ffaba922125af1500317815bfca26f,[maven-release-plugin] prepare release druid-0.6.47,2014-01-03T03:53:35Z
2d3c4812e52e17a4284948d03f3c8e518d835e0e,passing tests from loading across tiers,2014-01-02T19:33:05Z
488a118f3ffd7cfbd97fa368c7538fbf96f85024,Merge branch 'master' into az,2014-01-02T18:53:37Z
2205ebf459a3a0d3d9693dbd08d68668924ea5e5,"Merge pull request #343 from metamx/dependency-cleanup

Dependency cleanup & Initialization tests",2014-01-02T18:51:29Z
6634762d9733ff3bc0e30b84f441013060b209e7,"Merge pull request #344 from metacret/master

curator 2.3.0",2014-01-02T18:40:48Z
e4bcbcf3cc71d956a433c9fdad91866572659ae7,curator 2.3.0,2014-01-02T18:35:09Z
c0e7837a586fd8624b407d6d58810dee7b74c88d,add back guice-servlet,2014-01-02T18:18:31Z
ef05312c97da0848b0e03638a0d3baf5ee037593,cleanup dependencies,2013-12-30T23:26:46Z
95d92915bf2f78122751f0f8ad57afc560909691,more tests for Initialization + dependency cleanup,2013-12-28T00:13:38Z
6c6c1c83f801f1de69317fca0012aa3c659ad0fb,"Merge pull request #335 from rays-qpi/postgres-support

Remove unused payload column from sub-select that fails in postgres.  Use ...",2013-12-23T16:25:02Z
5efca6eea878affc1e07351680f083169b1de1ee,Merge branch 'master' into igalDruid,2013-12-20T21:45:16Z
39012c6dbed67c80e0a2006eb87a65104b00fe13,Separated realitme ingestion from realtime node info; under Data Ingestion the Realtime link now points to the new realtime-ingestion page,2013-12-20T21:43:55Z
9b539122097f0e05488c674a566a53bc894f464c,Added titles,2013-12-20T21:42:22Z
3d66f0fb8bd27c5b42a33bba7353ca4876b4abaf,"added Realtime-ingestion under Data Ingestion (this is the content split from Realtime, which is now just about the node); moved Firehose and Plumber under Realtime-ingestion",2013-12-20T21:08:25Z
d283693d785336e954ef586a83622e3d0d9fd91d,"updated links and references since these two files contain the lists of firehoses and plumbers they refer to, and pointed to Realtime-ingestion for the example of the kafka firehose",2013-12-20T21:04:40Z
668cf009a07a0318f32aa008db454b966e1a38a5,[maven-release-plugin] prepare for next development iteration,2013-12-20T20:28:54Z
bd58def933cabf6e3ae48d3b2eb3304e045a6e27,[maven-release-plugin] prepare release druid-0.6.46,2013-12-20T20:28:49Z
bbe1b82347fc8cf0c126a60d7e8b12673a27ba5a,Update versions,2013-12-20T20:26:27Z
26991b5a2a33bc91cefdf958ffa2973e27eeebb3,Indexing service: Fix termination related log message,2013-12-20T20:05:42Z
837dee1934b7d94dc44154a82aec450507a27e88,RealtimePlumberSchool: Alert and continue on any exception when abandoning segments,2013-12-20T19:38:42Z
4d83837e88f6008cb040fef377a118c2432377e1,RealtimeIndexTask: Clean up imports and comments,2013-12-20T19:37:16Z
9043c211b2ef0ca0c7efeca56075ab9b09aa3352,[maven-release-plugin] prepare for next development iteration,2013-12-20T19:25:36Z
29c0fa1df985cc508894586fad1fc0cab9c164ef,[maven-release-plugin] prepare release druid-0.6.45,2013-12-20T19:25:31Z
17ad4ee2f0f4561ae0d1c5f4dc81389a23e988e9,Fix RemoteTaskRunnerTest,2013-12-20T19:23:28Z
4bc8ff4d6a679b5a2b52685de6228f876d0ad431,Update versions,2013-12-20T19:19:36Z
5711ac4aff5d2fc721a4ef247b3178d9bd3980b5,[maven-release-plugin] prepare for next development iteration,2013-12-20T19:08:02Z
3b15f6a8340e7d72659997241284a1c9d4fc27c8,[maven-release-plugin] prepare release druid-0.6.44,2013-12-20T19:07:57Z
e5b8546d197785ed6fec975bd40f61b8c8b96736,"Autoscaling fixes.

- Initial targetWorkerCount must be subject to pool size limits
- Use consistent workerSetupData for the entire autoscaling run
- Don't call terminate() when we have nothing to terminate
- Terminate obsolete workers even faster",2013-12-20T19:04:54Z
c503f5e9c591c810c4a3137ee84d2b7378e5f34a,[maven-release-plugin] prepare for next development iteration,2013-12-20T18:13:35Z
97095ee3dbad22fb5ab4fbc39624c8f0e88cda9a,[maven-release-plugin] prepare release druid-0.6.43,2013-12-20T18:13:30Z
3ec2766cd3771b5d443ad495efaa3fcadd916a1d,"Merge pull request #339 from metamx/autoscaling

Autoscaling: Move target count independent of actual count.",2013-12-20T18:04:26Z
6224577ed12141c1542ac5ccfc202be4862fd48c,Autoscaling: Terminate obsolete workers faster,2013-12-20T18:01:32Z
4a722c0a6d14cb172835c6f862d8c9b2c9053046,"Autoscaling changes from code review.

- Log and return immediately when workerSetupData is null
- Allow provisioning more nodes while other nodes are still provisioning
- Add tests for bumping up the minimum version",2013-12-20T16:59:35Z
0ee6136ea3ca5481e951bafa7d594b365862d026,NoopTask: Fix things that should be static. Add simple factory method.,2013-12-20T16:56:17Z
23edba9e81b90836fd8a061c174b76edb5d0425a,"Merge pull request #338 from metamx/indexing-service-bugs

Indexing service bugs",2013-12-20T01:54:46Z
721195ac1207452a29445579bceac5753cf4f2d9,added anchor for linking to section,2013-12-20T01:26:51Z
3dd9a255469c6512526f8788fce8f2dc2e8523b7,Fix import,2013-12-20T00:18:16Z
0ff7f0e8e025ea92d954214ff7077b1f259703c4,TaskActionToolbox: Combine adjacent ifs,2013-12-20T00:16:34Z
f86342f7dc9cefdc74936707af9258e5e33342a5,DbTaskStorage: Protect against invalid lock_payload,2013-12-20T00:16:20Z
1f4b99634fcd4dd17de55da7c1d56956d9cc6785,"Autoscaling: Move target count independent of actual count.

This should let us grow and shrink the worker pool in chunks when necessary
(like when a bunch of them go offline, or when there is a worker version
change).",2013-12-20T00:11:30Z
18d8b0840e0f44313b763f290b136b45b7145a46,fixed formatting on numbered list and code blocks,2013-12-20T00:07:57Z
0aa04dd78749e914f78f3fa28dc0b62af973b100,added title,2013-12-20T00:04:56Z
846c3da4ab2e94c17c39e636cb2ba10f174ec3e2,"Empty task intervals, and empty lock intervals, aren't useful.

So prevent them from being created, through checks in AbstractFixedIntervalTask
and TaskLockbox.tryLock.",2013-12-19T21:21:41Z
566a3a6112381205b1883408e677ecbce0ef0d7d,"Indexing service: Break up segment actions

Each one now one operates on at most a collection of segments that comprise
a single partition. The main purpose of this change is to prevent audit log
payload sizes from getting out of control.",2013-12-19T21:10:18Z
2d2fa319bd7ec58005ece620ec7c83c6ab4bab07,pom.xml: Update emitter,2013-12-19T21:05:10Z
6fbe67eeeafd7887b5959becd1977834b6178212,IndexerDBCoordinator: Work around SELECT -> INSERT races when adding segments,2013-12-19T21:04:59Z
b6b9bb4cd882591f013ff3da56739576cf76f5fb,Merge branch 'master' of github.com:metamx/druid into az,2013-12-19T18:52:22Z
fba6caf7fdbe29c101485f730165a390f459964d,"Merge pull request #326 from metamx/versions

StatusResource",2013-12-19T06:44:50Z
818aba458fcb247fd70ffb1be55d8b21d3f16788,Moved TestDruidModule,2013-12-19T06:44:06Z
cd1e7cc65d1184628e942fb8714f6468ff43290c,Updated test,2013-12-19T06:31:18Z
b1a9ecc1cfa44ac38120b886a6e9f9f43dcc3baf,"StatusResourceTest

misses testing reloading of modules currently",2013-12-19T06:12:22Z
4ba8a44239804bb05c385384400f52ab978a1070,"Merge pull request #337 from liquidm/fix_hadoop_intake_too

fix hadoop intake's parser exception catching (was too specific)",2013-12-19T06:08:07Z
52746b8ea6d15e1814adbc657c7d64ee1af2af36,fix hadoop intake's parser exception catching (was too specific),2013-12-19T05:54:04Z
c58fbfe40c5b4fc8a1c92f9475aafe07907ca1a2,minor fixes,2013-12-19T05:19:38Z
6b9bccd79685202bfb62f0cf7b1a21bbd3024e14,Merge branch 'master' into az,2013-12-19T02:47:35Z
25c3f28907cd8d85db5ff91a69051b47169a510b,[maven-release-plugin] prepare for next development iteration,2013-12-19T02:38:27Z
6a740768d6bb659c1707987a1970193bee14132b,[maven-release-plugin] prepare release druid-0.6.42,2013-12-19T02:38:22Z
6478c9a16221c493356537d8d0d35466bbce66a1,S3DataSegmentMover: No need to move files onto themselves,2013-12-19T02:30:01Z
479b953a7950c6a48bbc8ec23c6ca186ef9d350a,added definitions for master and compute nodes; tweaked spacing between term and definition,2013-12-19T01:35:30Z
be50cfad6a777b2ced1fe70654de26d69ce139d9,Merge branch 'master' into igalDruid,2013-12-19T01:20:41Z
8d8ec51c9cd6e7c897a7712b2662d71e5c4363eb,[maven-release-plugin] prepare for next development iteration,2013-12-19T00:05:33Z
00d651bf6fb0ac7306f48ccc35c97604f6d1503b,[maven-release-plugin] prepare release druid-0.6.41,2013-12-19T00:05:27Z
b7a184cb0602557f164945e05f64025fec93fbd3,S3DataSegmentMover: Retries for S3 failures,2013-12-19T00:00:37Z
9b8134c73ef12d78c02cb00c93fdfbf7e2b7d33b,Merge branch 'master' into az,2013-12-18T23:44:43Z
d0fd58bbae86c89b490c361e53276bf9f3ec1725,[maven-release-plugin] prepare for next development iteration,2013-12-18T23:35:55Z
231d7a6d1f508b8c9c59fa8dd92a5f7c3e318484,[maven-release-plugin] prepare release druid-0.6.40,2013-12-18T23:35:50Z
fc4dd5119497d233e69458177f5e9ecf4a328d70,Update versions,2013-12-18T23:33:02Z
4a07f02cb55576eaab946cfe3a0b24abfc25b42e,"Merge pull request #332 from liquidm/improve-kafka

improve kafka intake stability",2013-12-18T23:30:03Z
1ff855d744782d0b1eab8a82cee2c2bacb0d2853,Fix MoveTask serde and ArchiveTask id creation,2013-12-18T23:16:57Z
e1b4652100daaed9272cd88605d42bb573a731de,"Merge pull request #336 from metamx/baseKey-casing

config casing consistency",2013-12-18T23:02:37Z
c8be38fe40de5351f4c2e1a2be3e6b076fff94da,back to baseKey,2013-12-18T22:57:14Z
892a42bafe6550cb2069850ab7f6bb1daa0969bc,fix docs config casing,2013-12-18T22:37:27Z
c969b37bac2aeb9da6a70b55fd2b9115bc49484b,Remove unused payload column frosub-select that fails in postgres.  Use boolean true/false for 'used' column so that queries run in postres,2013-12-18T21:01:36Z
ad9ce4d8cfd06ee375726da66ed8b6de8f093ebc,"Merge pull request #334 from liquidm/fix_shading

bump the maven shader plugin and config",2013-12-18T16:53:39Z
fd427a33288aadc1b307bdc3f582d2cd926e9772,bump the maven shader plugin and config,2013-12-18T16:22:28Z
494ec530501310f42c7f1105c5330531c266cfa0,[maven-release-plugin] prepare for next development iteration,2013-12-18T01:48:46Z
2a98a4d3e0b6706c9553933d033145f495867162,[maven-release-plugin] prepare release druid-0.6.39,2013-12-18T01:48:42Z
d112b2d2111288a75de303dbb50c29e9feab0eda,prepare for next release,2013-12-18T01:47:04Z
0051877f8486d06f05c46ed96400da7c89442d61,fix status endpoint,2013-12-18T01:46:16Z
5932150d24ed8c565f9b4f9c4e13d89dd974fb48,[maven-release-plugin] prepare for next development iteration,2013-12-18T00:29:53Z
ed9f4b4cf2f738657c9024a306d6f76d25ee3a4a,[maven-release-plugin] prepare release druid-0.6.38,2013-12-18T00:29:49Z
07875dd30bfca7572f8b110499da0604c7d129d8,prepare for next release,2013-12-18T00:28:11Z
69f33b0acd225cc1a31c6a80e0e42293ba26eb5d,remove commented line,2013-12-18T00:24:15Z
e7112dbb3840b425cf0a4280aed355a016fcb225,Merge branch 'master' of github.com:metamx/druid,2013-12-18T00:22:47Z
bbb2754a7c3a36123da49b79c86ae5abdd3f8a4c,fix redirects in druid,2013-12-18T00:22:36Z
58d1262edff4b513f824d31d6e3792ace2cf083e,"Indexing console: Clarify ""Complete"" with ""recently completed""",2013-12-17T16:16:49Z
af202d7576f626561c22d50f6611e2885630f7f3,improve kafka intake stability,2013-12-17T14:27:17Z
9fc0e1896226980cadbfc88098e885094ef966d4,"Merge pull request #331 from metamx/js-aggregator-missing-column

JavaScriptAggregatorFactory: Handle missing columns by passing down null args",2013-12-17T05:21:55Z
3b2833d55dcc429ae3547c2eb5f6bc05459f98f9,JavaScriptAggregatorFactory: Handle missing columns by passing down null args,2013-12-17T05:05:14Z
dbd551e6a82172350cf50010eb143629963ef728,"Merge pull request #330 from metamx/s3-docs-naming

fix naming and docs",2013-12-17T00:58:15Z
178c26f9f7db704515e544910a0a123927796791,fix naming and docs,2013-12-17T00:50:31Z
48d677d1356f0d3974fecaba86535c13b708f558,[maven-release-plugin] prepare for next development iteration,2013-12-17T00:17:45Z
7e0b4d4fd211b58a2a0d2fe507bcca0291158528,[maven-release-plugin] prepare release druid-0.6.37,2013-12-17T00:17:41Z
f2241c8885b75e4482c234bf45ae57f58b378254,prepare for next release,2013-12-17T00:16:00Z
bc4a7349d1338175410da89d1180d6e08860f3f6,"Merge pull request #303 from metamx/s3-storage-archiving

S3 Storage: moving and archiving of unused segments",2013-12-17T00:02:18Z
2c7a6d26b394abfdbd5cdfb6de70fb5e5d28bdf6,fix typo in tutorial,2013-12-16T23:55:28Z
27bba22e6fa8d2c19f770cd2af3cf1fd98647adc,make rules assignable across tiers,2013-12-16T23:54:42Z
f7f5ffc88084e7ae015bf23808c9ffade2a436c0,add S3 segment move test and fix bug caught by test,2013-12-16T23:12:15Z
e309f483570e78d2ac1336f604255590f0c7531e,"Merge branch 'master' into az

Conflicts:
	server/src/main/java/io/druid/server/coordinator/DruidCoordinator.java",2013-12-16T22:57:54Z
5ecd909f7c04527904cf3ec5b2575c3c6f69c210,reduce NPEs in CQE,2013-12-16T22:27:01Z
f3b8d9c047fc6a6dc6625119d1bbd088279136d4,safely move files,2013-12-16T21:54:30Z
e333776acac38eaf5419eaba12275b9b93b9f27d,rename SegmentMoveAction to SegmentMetadataUpdateAction,2013-12-16T21:22:07Z
ac2ca0e46cb0624ae5c010b08f89facf6e42d4e9,separate move and archive tasks,2013-12-14T01:55:31Z
6b903720021683c7d12b5befee9656fc4edea7ca,separate segment mover and segment archiver,2013-12-14T00:40:57Z
123bddd6151339c6cc38e05822c221071cff8c62,update for new interfaces,2013-12-13T22:29:09Z
3af6e49cd43bd6e2231739739dfbc18d43d1bcf5,throw exception instead of just printing a warning,2013-12-12T01:29:04Z
3ae48a8191bda71e900bee767847ce56873a8c57,fix cut-n-paste typo,2013-12-12T01:25:29Z
4a291fdf3094886e20d65b87554a6a5debd0a4f6,better naming,2013-12-12T01:25:17Z
bb1b037f876f7419db2c646bbc01e5440818a4fd,fix docs,2013-12-10T01:42:00Z
cd7a941f83752bc13e17adddaab88dcffc057b75,consolidate path functions,2013-12-09T22:22:39Z
a417cd5df2c1b9121c067ee17140fb96ca9a590b,add archive task,2013-12-06T01:37:03Z
e38f2877fbb085e5e87706b9aeb0417315d9fd6b,default to archiving segments + docs,2013-11-19T22:14:52Z
1f7a089fa8d424cc3b77600dbd12e40451a815e0,S3 storage: enable archiving in addition to deleting unused segments,2013-11-19T21:30:07Z
84233238b1845011d6097dd040093e12342f747e,Merge branch 'master' of github.com:metamx/druid,2013-12-16T20:01:55Z
0998d835b0644ec389106d93274cc4a78fe1bbe0,fix redirection issues with master and overlord,2013-12-16T20:01:52Z
b917ada54d1956d7b8edc53a69b7c453927bc591,"Merge pull request #328 from metamx/coordinator-leader-discovery

Coordinator: Link service announcement to leadership",2013-12-16T20:01:24Z
09f73e2bf2c44aa0adf19fa9bab6e6521bc8daf7,"Merge pull request #329 from metamx/segment-load-idempotent

ZkCoordinator: Make addSegment, addSegments idempotent",2013-12-16T19:59:22Z
7759ed45178eefd7d9e827f20f7d1582377b4a5b,Coordinator: Link service announcement to leadership,2013-12-16T19:12:35Z
d2451fa37bf1f62367f0c805baaa2f2e4480574c,Coordinator: Stop databaseRuleManager in stopBeingLeader,2013-12-16T19:12:20Z
079331493a1303fa144b3e1e802194038f09ec4b,"ZkCoordinator: Make addSegment, addSegments idempotent",2013-12-16T18:56:14Z
36756e611b462b0b41bf5ff28158516a6d0fa29f,S3Utils: Fix retry predicate,2013-12-16T16:27:00Z
3752122a7b4dcf53866c958b4fdf9ad17dcfb0ad,implementing comments from review,2013-12-16T09:46:28Z
2dd48601063f7e7df6e89cfa39dc21c78140e350,fix typo,2013-12-14T01:08:29Z
3812bf7215f6660ccf06707bff5b6de8a5c50744,[maven-release-plugin] prepare for next development iteration,2013-12-14T00:57:07Z
a7ff58f877ea4a762b699a433225dbba982de035,[maven-release-plugin] prepare release druid-0.6.36,2013-12-14T00:57:02Z
87b83bceb19a8bcb3deab239add498a1350aa347,fix task storage config serde and prepare for next release,2013-12-14T00:55:22Z
41d64f4aa696875701c29a61a06c812df3a79f41,[maven-release-plugin] prepare for next development iteration,2013-12-14T00:47:21Z
1c050a02f87623caa5db3f71c24a3527b267cb54,[maven-release-plugin] prepare release druid-0.6.35,2013-12-14T00:47:17Z
01f9c1df31cdf9ac392daeb557153b920a95b181,fix broken task storage config and prepare for next release,2013-12-14T00:45:32Z
7891e0a2e2697fada4a3b10fd4ada7d7c9ef60a5,[maven-release-plugin] prepare for next development iteration,2013-12-14T00:20:23Z
1d75738f81b4016fc9b01c73fcf2d64f5a784383,[maven-release-plugin] prepare release druid-0.6.34,2013-12-14T00:20:18Z
9a5fd6b0e9c04c198e30af747418c33e0292520a,prepare for next release,2013-12-14T00:18:34Z
196d0ac614eac90e59e7637067f498dac442ba46,"Merge pull request #327 from metamx/index-service-api-gui

Indexing service API and GUI improvements!",2013-12-14T00:17:10Z
600dc7546f8ef7d625b208d570f27eaee1219824,Configurability of recency threshold,2013-12-14T00:02:54Z
4a8140be811b6986cd357a05a9d7102966214edd,better messaging to console again,2013-12-13T23:04:25Z
52cdb20f106cbe1fd3064ba09e3f4203bd827268,add better messaging and error handling,2013-12-13T23:01:07Z
ca7335f45fa6e8f1b95c770e63ef56939a5c6937,things dont work,2013-12-13T21:35:22Z
e63c69dd57c33fe0fe169802e419b7b0cb5cfc8b,TaskStorage: Return recently complete tasks in reverse chronological order,2013-12-13T20:27:45Z
6c993d87bf24827cb13bed26612d8ba8fd43ebaf,"Indexing service API and GUI improvements!

- New APIs: waitingTasks, completeTasks, task payload
- GUI for the above, and for task logs + status",2013-12-13T19:36:36Z
407f8caf94cc2c8d8720c815e1b9ed12165bddc2,remove server monitor from list of default monitors,2013-12-13T17:04:32Z
f36a5b677c5e1a4fa5d05b7b82d63586b9cad6be,TaskLifecycleTest: Add test for noop task,2013-12-13T15:48:09Z
3b053a66ff97c1e29ec8b0233562d7bdf92db2ca,TaskLifecycleTest: Add test for never-ready task,2013-12-13T15:47:18Z
863012c384bcd8b87981520ffe51fbe244d79959,TaskQueue: Exception during isReady does not warrant an alert.,2013-12-13T08:38:20Z
6227963af9d9a7065438ab06ac0f43418ff82925,TaskQueue: Copy task list before management loop.,2013-12-13T08:35:33Z
a57d586319d98822d58e2816be12970262d08233,fixed typo,2013-12-13T14:36:38Z
65facc935d7eafc326a1058e4893b3e905fcc3ea,Do not load extensions on each call,2013-12-13T07:35:57Z
aef7726c335f2003c5b502511825c3a108effc9c,[maven-release-plugin] prepare for next development iteration,2013-12-13T02:53:18Z
1d1baf5976322ae54f396ab3ec5784c8e28f5b0e,[maven-release-plugin] prepare release druid-0.6.33,2013-12-13T02:53:14Z
25ebba2c3810fb86fe2017fab2fc0c65e32bd3fb,fix default start delay of indexing service and prepare for next release,2013-12-13T02:51:25Z
f920dd6fb235c7d2d72adfdbc8f0fb4081406cb8,[maven-release-plugin] prepare for next development iteration,2013-12-13T01:28:38Z
857d24a4ca484fb427e77004046d36ac463734d9,[maven-release-plugin] prepare release druid-0.6.32,2013-12-13T01:28:34Z
19eafe0e96ac4354ef6f9fa0719b076839c6650e,prepare for next release,2013-12-13T01:26:50Z
a8830e6bfd243aff479e451215d1bf6da4b13e51,Update druid-api,2013-12-13T01:23:24Z
dbe93034d0d3754dae233149841662c8626bfdee,"StatusResource: Remove extension versions

They cause services to create a brand-new startup injector and reload all
modules whenever /status is requested. Not sure how bad this is, but I think
we're only supposed to have one startup injector so there may be a better
approach out there.",2013-12-13T01:19:07Z
7c744ffda0038fb342246ae6492a2b4b357b9acb,[maven-release-plugin] prepare for next development iteration,2013-12-12T22:53:01Z
365da245c21925a6c20d6316d6409909020ffa10,[maven-release-plugin] prepare release druid-0.6.31,2013-12-12T22:52:57Z
a58f90a6894ddc84af1002ee8ee803a291ac9f0f,prepare for next release,2013-12-12T22:51:14Z
6eb1102f95bac0579f678cd038dddb63e2567322,"Merge pull request #320 from metamx/igalDruid

Igal druid",2013-12-12T22:45:28Z
2d21aea21bac11bc8ef90f7aee01f502f426de27,"Merge pull request #323 from metamx/indexing-service-stuff

Indexing service stuff",2013-12-12T22:24:19Z
70c153592f049cb7d975bc255b42a4f12f547819,CliPeon: Fix local mode,2013-12-12T22:16:13Z
370e2f855a784706ceb382259e18b7acfc8acf80,TaskSerdeTest: Fix IndexTask test by including an actual firehoseFactory,2013-12-12T21:58:03Z
169f149cf9636c26f1a58e1f9e5dc1067cb7a994,TaskLifecycleTest: Fix broken setUp and broken assumptions.,2013-12-12T21:51:13Z
ba757b1e5a1cbfc6e54e9c0460bd49dc2b234bd2,IndexTask: Actually make and publish segments for the correct intervals.,2013-12-12T21:50:53Z
be25d51a2c6b4ae45f4edca9faaca2e0b3f97a24,RemoteTaskRunner: Fix issues leading to failing tests,2013-12-12T21:40:23Z
81ccb370199a8bcce7b777f948904ab29df01b94,Indexing-Service.md: New overlord-related configs.,2013-12-12T19:46:56Z
58d8f0046a9c04f22c010e81ba440f70519d458e,Configuration.md: Update TaskLogs docs,2013-12-12T19:46:30Z
c60158a21a58dee6106628ddd44f7b63ec369412,RemoteTaskRunner: Remove task from pendingTaskPayloads on shutdown if needed,2013-12-12T18:59:08Z
7f8c7470e7d7d79d46331672563c2b9a406d68c3,"Merge pull request #324 from liquidm/kafka_eight_release

kafka-eight: bump kafka dependency to 0.8 release",2013-12-12T18:51:15Z
0129ea99cf288fac2d1d9c6c14660c24fb7cd6a2,"RemoteTaskRunner changes to make bootstrapping actually work.

- Workers are not added to zkWorkers until caches have been initialized.
- Worker status we haven't heard about will be added to runningTasks or
  completeTasks as appropriate. 
- TaskRunnerWorkItem now only needs a taskId, not the entire Task. This makes
  it possible to create them from TaskStatus objects, if that's all we have.
- Also remove some dead code.",2013-12-12T18:44:46Z
d92b88718ce1a765177be055932372829d1a92fc,OverlordResource: Fix comment,2013-12-12T16:46:24Z
b6a52610bc24d411a99d5a95dee2e654d5fd25b4,IndexTask: Call plumber.startJob(),2013-12-12T16:46:10Z
db9b515e71846ea0a3755201c180a9145172d8ee,IndexTask: Remove unnecessary args to determinePartitions.,2013-12-12T16:46:00Z
f4a09d4ee3b53c983c71b076f2fac50022f21d93,TaskAction: Add JsonSubType for LockTryAcquireAction,2013-12-12T16:45:23Z
cd8d2fd5c34c058c3723918fee1c9c53428b8e7e,kafka-eight: bump kafka dependency to 0.8 release,2013-12-12T14:24:16Z
b17dc6f744ae8040f48a8e671039cd4a30d7a92d,"Task interval, isReady hygiene",2013-12-12T06:41:27Z
05e24bd85ca01be352e981ad6a04495efbd2ad0a,RemoteTaskRunner: Fix typo,2013-12-12T06:38:04Z
bed263efa532f7f0a9a4ffd094ccdc464c1854e2,VersionConverterTask: Less goofy import for Preconditions,2013-12-12T06:37:55Z
53d90efe30d0aa103f5cbd461c0ab754b80e1083,TaskQueueConfig: Copyright header,2013-12-12T06:37:40Z
0adda97776e2ba85d8687f5daf198728e5f004ee,AbstractFixedIntervalTask: Copyright header,2013-12-12T06:37:28Z
c4b8c8bc6f1433dfa89cbd09f6210efbe839aad4,"Rework indexing service internals to hopefully be more reliable.

The TaskQueue directly manages the TaskRunner. The main management loop runs
periodically and checks that the runner is doing reasonable things. If not, it
attempts to adjust the runner. The management loop also runs on-demand when a
task is added to keep task assignment relatively low latency. The TaskConsumer
is no longer necessary and so it no longer exists.

Task interval locks are handled differently. Instead of some tasks acquiring
locks at runtime and some tasks having implicit fixed lock intervals, all tasks
ask for locks explicitly. This occurs either in ""isReady"" (which runs on the
overlord) or in ""run"" (which runs on the peon).

Other changes:
- The TaskQueue is attached to the leader lifecycle, instead of global
- The TaskLockbox is able to sync itself from storage and is no longer
  bootstrapped by the TaskQueue.
- RemoteTaskRunner does not clean up zk paths until asked to. This will
  prevent deletion of statuses that have not yet been committed.
- Added retries on DbTaskStorage operations.
- Removed SpawnTasksAction (no more subtasks)
- Removed obsolete EventReceiverFirehose configs
- Removed obsolete OldOverlordResource
- Removed TaskStorageQueryAdapter methods related to subtasks",2013-12-11T23:03:51Z
b2ea216bdf263b63e2643a8ef7c529d1c33e7d3c,HttpClientModule: Default http timeout to PT5M,2013-12-11T23:05:03Z
1ec6d5b0ef0aff6e5ae3a90c681a4d1d2e8bf35d,S3Utils: Use RetryUtils from java-util,2013-12-11T23:04:32Z
476ce8677d5f722ead2e7c018efda0476c99cdb9,Merge branch 'master' into igalDruid,2013-12-11T17:17:30Z
60577a6e24cb0cc261acf466173a6451ef3a4a8e,adjusted size of first section head to match others,2013-12-11T17:16:49Z
6c80de53b09ef09b51fd753fd4fb052f87a7e7a4,"Merge pull request #322 from metamx/filetasklogs

Filetasklogs",2013-12-11T01:51:44Z
96f679f31c18ece7c4a4c69f18f6760ed04df517,clean up for merge,2013-12-11T01:51:13Z
f3cfd1d78124457e03eaf1854da20a3d081fd3d9,"Introduce FileTaskLogs, and move TaskLogs module from server to indexing-service",2013-12-11T01:38:36Z
47c1c8cab2bb132720729d46431e01349eefdd98,TaskStorage: Rename getRunningTasks -> getActiveTasks,2013-12-02T23:05:33Z
64e75becba393c1356c87d26bb57c6307420ba1d,"Merge pull request #321 from metamx/js-dimextraction-null-fix

fix JS dim extraction null handling + test case",2013-12-11T01:14:56Z
a7cc5596236d53a101f22ef78080beebb63d5152,[maven-release-plugin] prepare for next development iteration,2013-12-10T04:07:38Z
54755b88645fa8e07f47df9293d7c2c9916b4033,[maven-release-plugin] prepare release druid-0.6.30,2013-12-10T04:07:34Z
6cc0860657914ffbb25c3104213dd1c0ed7269d7,fix s3 module problems and prepare for next release,2013-12-10T04:05:55Z
a262d8bf1136ca2036e29a205e790b53a57e961f,fix curator shutdown problem in curator inv manager test,2013-12-10T02:56:30Z
7a134272b39648f6be5c8294301f92a8e52bf3aa,[maven-release-plugin] prepare for next development iteration,2013-12-10T02:45:27Z
829658f17190221c699af10074d051fb8f283eec,[maven-release-plugin] prepare release druid-0.6.29,2013-12-10T02:45:23Z
ab1f02b2bc358feb7569c55fee8be9bd1d2fce0f,fix version brokenness and prepare for next release,2013-12-10T02:38:22Z
bb69f8adcd839d52a61844601df5813ca453e703,fix JS dim extraction null handling + test case,2013-12-10T02:22:30Z
98a0f40227d9713b55b75d9050c7961300f7d52b,[maven-release-plugin] prepare for next development iteration,2013-12-10T02:35:22Z
939d2313c04f18e728726e611d3aaa20b6aeb321,[maven-release-plugin] prepare release druid-0.6.28,2013-12-10T02:35:18Z
c03d573e84a34689819a1a7f93a4bb2a45e8ec9a,[maven-release-plugin] prepare for next development iteration,2013-12-10T02:30:15Z
71fe8a43da191174c7b967e33502f1dd76c49f17,[maven-release-plugin] prepare release druid-0.6.27,2013-12-10T02:30:11Z
976affb3af09ab82eec10b8990dbd0928c28c295,prepare for next release,2013-12-10T02:28:31Z
303f6ff33498381d8455043f7b9d085ce42972fd,fix worker config setup problems,2013-12-10T02:25:29Z
8783007eb1785525657d053ab5d9fda182cc6775,Merge branch 'master' of github.com:metamx/druid,2013-12-10T02:01:21Z
8e0336ff836c5d59af3f01d3ad89788aa5afaeec,fix formatting on paper,2013-12-10T02:01:11Z
dc798768a0a7d88c31228160b04d22480ee7929a,update pdf,2013-12-10T01:58:17Z
9d4f18d12b33de8b44dee4880789518c9ca37b42,fix figures,2013-12-10T01:57:29Z
867347658f0789bbfe33762a1d1c227d243fbdbb,some spell check fixes for paper,2013-12-10T01:19:17Z
8aba4ad3d2fe4b57fc2716ba42f9ebbac86a75c6,"Merge pull request #311 from metamx/versions

Add versions to static page",2013-12-10T01:18:16Z
fcc8801b13214b651c5c2da665f31548b2e3ca32,added title,2013-12-10T00:11:06Z
19be4f8bb0217ecee986d30f59c15b38e5263281,Refactored modules section for better flow/readability and added link to extending druid,2013-12-10T00:08:14Z
0e3378e5cd762cb354913fce6c53b6503259bc29,"refactored sidebar sections to group related topics together under a section that encompasses what they are about, and communicates to a user that this is the go-to section for provisioning/deploying etc. a druid cluster",2013-12-09T23:17:56Z
1fb5fc6707ae63f436b79ae3b3963dfe5994c38d,tests,2013-12-09T22:59:44Z
ddbab46ace9c09453d190b25c8d98ced2bc103e0,added title; fixed link to configuration,2013-12-09T22:03:29Z
84234b142d1c89f6beaf152d0f1d55544d795e45,added title; minor typo fixes,2013-12-09T21:21:57Z
b5f6dbc32f9fdd3745f78da9ea7353c308de4b1b,"Code refactoring, one place!",2013-12-09T20:39:41Z
f17e08324d9cb8e8813dcb943af6e621b160f302,Merge branch 'master' into select,2013-12-09T19:30:35Z
77fec83b59969add7859fdeac461e5174dd7fa30,clean up znode def,2013-12-09T19:25:58Z
8117fff4e20a8aeb1cf3fb5966c219054ccb348c,Some minor fixes,2013-12-09T19:09:10Z
e6b915f1e7a42db676267d0efa23dd60d7c4ab15,druid-api version not required,2013-12-09T18:35:56Z
b7e8a83fcb9d2e43af0263d432355f44ba999958,"Merge pull request #318 from metamx/minor-fixes

Minor fixes and documentation changes",2013-12-09T18:30:13Z
710b3cb13970126bc6a2fcc43eae427b5ef481a2,"Merge pull request #314 from metamx/igalDruid

Updates to Documentation to improve concepts and update small bugs in the segment flow",2013-12-09T18:24:22Z
2186bd6cb758c5b2b7fdbb648eaac70903b94688,Minor fixes and documentation changes,2013-12-09T13:37:48Z
0cab224dc8050d386c023cbdb8bb41efed07ccc7,fix diagram problem,2013-12-09T02:28:10Z
90ae10432b03054d275a9e4ad972fd6be951aa93,remove unneeded paper files,2013-12-09T02:26:35Z
78b733a7f12fd4aeeff1a460d7fce11094f79ac8,fix cluster image,2013-12-09T02:24:29Z
6c693cd30a9dfdd44ba712b630a27933636b0f84,minor fixes to paper,2013-12-09T02:06:27Z
676b9432a4c07e59f918ca22d45e645442a0aef6,lots of updates to paper,2013-12-09T02:01:01Z
414c17c8b286e7f59a61ae572d1542ac71d7afce,dont need to allocate so much mem,2013-12-07T00:13:30Z
b9314f40ede21cc4a0400069a84bc4381b31a979,fix paper some,2013-12-06T23:59:24Z
d9762ac9bd5c578bc9b975dd1233cfea917134b2,fix shutdown,2013-12-06T19:17:19Z
5fe0a8f2fb6546dda4d90abc834d9367ad13456a,fix casting,2013-12-06T19:16:27Z
1fcbbc8262b25db647cd63c7ae24d4dcb1b0bac3,fix logging,2013-12-06T19:14:39Z
2c5562b6ff2d202cbab2ffbe4836296bc55eac46,fix wrong shard spec,2013-12-06T18:29:22Z
f8ff9296bc4bab175379d7235b1cf53f9ea36c35,fix logs,2013-12-06T18:26:35Z
767663af92aa95bdeb1c2f263a24710e730c820f,fix how flushing plumber flushes,2013-12-06T18:25:50Z
932d6880220e29f45c7a69a0162cceec72e23a85,remove unneccessary merge n persist start,2013-12-06T18:15:18Z
90aa9eca478d12befc1636f6eb0fab5b9a60ec7f,more logs,2013-12-06T17:57:07Z
986223a49d3da761a2b9a449c63b6faf70f69569,more logs,2013-12-06T17:56:47Z
c4b990bb270242a29ad0c6078b33c213a5470987,more logging,2013-12-06T17:56:23Z
e7b6b5c2af6834cf5bc76f831241a07dc1e17015,fix persist with flushing plumber,2013-12-06T17:51:43Z
5ba05a46f6d3894438479cc8053758312b118ea7,fix nulls in realtime persist,2013-12-06T01:59:02Z
6f079bcc8faebac9bc699c61a155d8b3219f5146,fix segment id for ii,2013-12-06T01:01:55Z
b78919c729be298474c00bd8a3504160408dcfc2,fix NPEs,2013-12-06T00:49:28Z
ae5a4ff54ceaa6d28a305f057cfecd62b067461a,add versions to incremental index segment,2013-12-06T00:47:28Z
60d72a0fd33cc8a6d8d44f33c63a36e1f8887f04,add flushing plumber,2013-12-06T00:24:54Z
241c80ef2499efe5ead9f39af5a6ad43e9c45651,working pagination maybe,2013-12-05T21:37:44Z
97ebad39be43267cd838e4590b45d3a3b0c8944a,Merge branch 'master' into igalDruid,2013-12-05T04:42:23Z
0b7664f6392bdf00e1fc475699bc7bd3804cf4d2,added titles since there is no other indication other than URL as to which page has been selected from the left-side nav menu,2013-12-05T04:41:25Z
7c7cfdf8194738b4f2844333464bf1ba00e17a05,[maven-release-plugin] prepare for next development iteration,2013-12-05T02:57:30Z
6bfb3b8d418242d2ee9682cea7221c4467853b82,[maven-release-plugin] prepare release druid-0.6.26,2013-12-05T02:57:25Z
fbad1e2d7afee80e21ac269e8e9706c71b9f8e59,fix convert properties with infoPath and prepare for next release,2013-12-05T02:55:35Z
9d9b5aa0808293dada92c816035ac89b67a398b0,Merge branch 'master' into select,2013-12-04T22:29:38Z
81f9b89d81115d8af1626ad9cfec5b0529cf281e,updates to images in paper and some fixes,2013-12-04T21:56:29Z
1e2cb839d4acfb750e77027c6e98954c9e36d580,updates to images in paper and some fixes,2013-12-04T21:56:16Z
31c7ed639d67374fad1d22649b5c09e9575404a2,first commit,2013-12-04T21:53:08Z
32200b9b41300d52826b4c73707801a7d24db308,removing debug line.,2013-12-04T05:30:47Z
a2c83887421b87d1053594c043b8dc3902112513,No need of druid-server.version,2013-12-04T04:51:36Z
47278ad10965210ffa7c597a8e442ee0c855ba9c,Merge relevant changes from 'druid-version-info',2013-12-04T04:51:19Z
929b2336a908ed1ddbe427ecf4f2d77aa9dce787,fix non deterministic behaviour in test,2013-12-03T01:02:24Z
1a3a1221c24af7d256869c7ba14600c514c72354,[maven-release-plugin] prepare for next development iteration,2013-12-02T22:22:54Z
b18b65108af570ec07d20c66b4552ca47d7d3137,[maven-release-plugin] prepare release druid-0.6.25,2013-12-02T22:22:50Z
05f72601c479dd972b6bc86ceb2ae104a058b6cb,fix request time metric and prepare for next release,2013-12-02T22:20:59Z
f403d3da0722af5bd965869a828d7a27da40fa57,"Merge pull request #312 from activitystream/rabbitmq-module

Moving the RabbitMQ firehose and friends to an extension.",2013-11-27T21:01:56Z
2b7fcfe738ca57b20037bbea91586d1dfa0e6e14,"Merge remote-tracking branch 'upstream/master' into rabbitmq-module

Conflicts:
	examples/config/realtime/runtime.properties",2013-11-27T20:58:22Z
f36d72642dc857a6ab125d336f0ec3ea7167c93d,fixed typo,2013-11-27T20:30:05Z
8d6bd271291a0aaa71276803aaf77c77b3a6c0f0,updated definition of ephemeral node,2013-11-27T20:28:41Z
4e1e5579a1b0e03ef55d82d9575ff5f4a3a4fd70,"added definition for ephemeral node, a ZK concept that occurs in the docs",2013-11-27T20:13:31Z
ab30d068b4915553c877e50b2f3bbe56305992da,update process flow diagram to be correct,2013-11-27T19:58:26Z
42329f413b3bd8cc988b112009d20dce39eaa422,updated version of realtime segment propagation,2013-11-27T19:48:21Z
de0d6e2264d582fed3792450f9ab741eded05ad7,"Merge pull request #308 from metamx/javascript-dimextractionfn

Javascript DimExtractionFn",2013-11-27T19:47:07Z
95fafe02a7ba3637199da00f000db2a5732f8203,server versions with loaded extensions versions,2013-11-27T06:51:35Z
78a8206ee6fec85b1aeb6fa7b5f64273ebdba3f5,add docs on hadoop flavors and hadoop index task classpath resolution,2013-11-27T01:07:32Z
bcea0f6ca05a24bb4e998a9ad50cf4bd6f45c908,"update sidebar to remove 'Contents' which looked like it applied to one section only, whereas it's all contents",2013-11-27T01:03:07Z
74bb8f1cc11152afcb79952c881fd752a7e8fd2d,fixed formatting re bullets preceded by html <a> tag,2013-11-27T00:30:32Z
abf417a1c4f9fef20e8cde8d35f0a34ebe6bc299,version of druid-server,2013-11-26T12:17:23Z
5524cb7608a857308cae2580c2372c5e63d27b2e,remove extra contents in toc,2013-11-26T02:34:53Z
730e3a2303bca66a8d3d9425336e0de1a6f1bd43,[maven-release-plugin] prepare for next development iteration,2013-11-26T01:55:01Z
c7171e33114c9355471935bc248f6f1137425868,[maven-release-plugin] prepare release druid-0.6.24,2013-11-26T01:54:57Z
ddb6e83f170ced7f2746d5ad81e0086d7087b9f1,fix realtime default and prepare for next deploy,2013-11-26T01:53:17Z
5c778846848689aec2744e3720fe6f7bc5fe260e,"Address code review
- more tests
- fix license
- add missing getter",2013-11-26T01:14:10Z
f04940f8b53b3a527967e6bc2298774786c0e7e6,unifying the extension versions (even though they don't make sense for the rabbitmq extension).,2013-11-25T22:53:19Z
386c81f0d93ba6e1ec0692e89d78d549e5b06655,Merge remote-tracking branch 'upstream/master' into rabbitmq-module,2013-11-25T22:44:25Z
99127a214adeed1594d3df96369782563c43250a,"Merge pull request #294 from metamx/igalDruid

Igal druid",2013-11-25T22:14:47Z
9750537d61c7c1465dddc2ceedd57547b7fa46c2,Merge branch 'master' into igalDruid,2013-11-25T21:00:46Z
f98b6bb0d2f199d0defcf1e6a1f65478afbe118f,"Merge pull request #310 from hkmurakami/master

fix broken links in documentation",2013-11-25T20:46:09Z
0532f01b1b0eaab569b4d394f4cea75049a9643c,"Merge pull request #309 from hkmurakami/patch-1

[fix typo] header formatting in tutorial doc",2013-11-25T20:45:43Z
23133f3b5b064856a11ec4c4b130f562467e0170,"Merge pull request #305 from metamx/npe-deprecated-fix

Remove deprecated jackson calls and fix NPE",2013-11-25T20:39:24Z
833f1c5fed92e1c761cde2e3b9be0b71274f5904,adding the rabbitmq extension to the examples extension coordinates.,2013-11-25T18:37:28Z
b6ed8fcf6f31012c7c3ae75244c81ffdae7ab375,Moving services file from META-INF.services to META-INF/services directory. Thanks a lot IDEA!,2013-11-25T18:32:25Z
659493c4d2e0685577bca96c9bdb3fb7ab6c8004,Add versions to static page,2013-11-24T14:57:34Z
eed215e53e165c47d47ae9a43a9dcf398b5c91a1,"Rename Druid-vs-vertica.md to Druid-vs-Vertica.md

links in documentation point to capitalized version (http://druid.io/docs/0.6.10/)",2013-11-23T21:13:46Z
964bff065a99fa2a2abf192a5e98d7680151886e,"Rename Druid-vs-redshift.md to Druid-vs-Redshift.md

links in documentation point to capitalized version. (http://druid.io/docs/0.6.10/)",2013-11-23T21:13:05Z
be5ce88093e4930169a5875b85520731075d6dca,fix header formatting in tutorial doc,2013-11-23T20:57:51Z
60fddfb67e5a59d196c5fc43c66dbb49f5f7866b,add DimensionSpecs docs,2013-11-23T00:32:53Z
40af9df0d460d43d0f9c19e507e428a80bd9cdfe,fix search doc links and code,2013-11-22T23:53:39Z
51c039345561550dd975e43d9203d01560b29022,typo,2013-11-22T23:35:03Z
41df3e1f11a88a7237475c3024a64e44711e91f5,implement javascript dimextractionfn,2013-11-22T01:55:58Z
d5a3a08b7b36fdba07f0f98211812a0e00a03f12,Merge remote-tracking branch 'origin/rabbitmq-module' into rabbitmq-module,2013-11-22T10:44:47Z
9eb4a7d9df5a51792ae5e2d33aa9c9f6337e6c9d,Added commons-cli dependency.,2013-11-21T18:44:34Z
c71c33ed69ae5d3a341ace0577d06e755f052e07,"* removed terms that are widespread -- such as ""column"" and ""interval"" -- since there are too many ways to define them, in favor of allowing them to be defined in context on pages where they occur. For example, ""interval"" shows up in the JSON blob containing segment metadata, as well as in queries.
* removed sections -- it's hard for a new user to understand exactly why these terms are in those sections, or what that means, so better to allow specific definitions or the context in pages to impart those relationships.
* Added links between entries",2013-11-21T23:10:44Z
9d36b9962cafa7ce7bb4789a381ff40d39267b2a,fixed awkward wording,2013-11-21T19:08:26Z
b645eb19b5ec9d17868af0c3aea9e0282d52dc69,Refactor to remove sections and order entries.,2013-11-21T19:04:22Z
f02986d7868050a8224077b3cf159f0314171357,Moving RabbitMQ stuff to a module.,2013-11-21T18:44:34Z
71598ee60ecf9939f530104d46010da520fef8b2,Moving RabbitMQ stuff to a module.,2013-11-21T18:41:06Z
a3b60557e2d9d9988c3c7a42155d0668a7cb3c63,Refactored with new and updated sections and definitions.,2013-11-21T05:32:41Z
639d7693376b23049c3ef88b5a6f552cf58b5619,Merge branch 'master' into igalDruid,2013-11-21T05:32:01Z
3134affac9e1f6fc628289f345c1f0ebfdbf6307,fix NPE in DirectDruidClient,2013-11-21T01:15:26Z
d0fe70a21f716a26bbaf6dc0e38c50e535a539e7,replace deprecated calls to getJsonFactory and createJsonParser,2013-11-21T01:14:23Z
00df13af0634fa08a369a5d4c60328dc353b880d,update readme,2013-11-21T00:55:53Z
5c6e647148c119edb15d75266dbe0a80d941acf2,[maven-release-plugin] prepare for next development iteration,2013-11-20T20:00:15Z
5b94895a3672ee119a7069f0161c5dcd4f34cc6a,[maven-release-plugin] prepare release druid-0.6.23,2013-11-20T20:00:11Z
fbb65988bd95549c2acefaf1ae0553d19b5bd166,make query resource eagerly instantiate and prepare for next release,2013-11-20T19:58:25Z
ea95566cd94a66769b0df6ffcbb9f6521ee9fe9e,[maven-release-plugin] prepare for next development iteration,2013-11-20T18:45:21Z
fe7122b71750d383b063e743999d614e1810069c,[maven-release-plugin] prepare release druid-0.6.22,2013-11-20T18:45:17Z
c234dafee165c7fffc49e51c6655d3e19c8ff359,prepare for next release,2013-11-20T18:43:37Z
88378eb036a702e8676070583bc584a3114b7d54,[maven-release-plugin] prepare for next development iteration,2013-11-20T18:28:57Z
2e6056f537e7e67ae706eac697c3e973caa69816,[maven-release-plugin] prepare release druid-0.6.21,2013-11-20T18:28:52Z
84a6262e04f94d87e881c81f671cb8667851ca04,prepare for next release,2013-11-20T18:27:09Z
c085c3753fb41e53773976dbfdcd8fe1c2fa2a31,"Merge pull request #304 from metamx/query-resource

Replace query servlet with query resource to make adding new resources easier",2013-11-20T18:26:11Z
c60e75a6b4ba23cea9be21b269522b1d1fc43d79,Merge branch 'master' of github.com:metamx/druid into query-resource,2013-11-20T18:02:51Z
e7167ae00a9d98e979c33290d3b240fd800486f2,add new query resource,2013-11-20T18:02:43Z
6aafba439387b8002880976b3abe85cb8effd6ec,Merge remote-tracking branch 'upstream/master' into rabbitmq-lyra,2013-11-20T16:25:53Z
6bc429f38d5e0e96eb37381e22cd36946c7d5365,"Merge pull request #302 from metamx/more-metrics

add total segment size/count metric",2013-11-19T18:08:57Z
7fec5e6ff7bb8ffa82eb51149c5e8299c6fb30bf,[maven-release-plugin] prepare for next development iteration,2013-11-19T17:59:48Z
265ef23cd52150c44ca9f2803dd61eea4e891231,[maven-release-plugin] prepare release druid-0.6.20,2013-11-19T17:59:44Z
984e24c1bb196cf1630385f0e8c9947542f2e0bf,"fix broken links in docs, prepare for next release",2013-11-19T17:57:56Z
f644c8ea66f923653b4e18409fb45681b93fbcf6,Ugly quick'n'dirty way of getting lyra to work.,2013-11-19T10:18:00Z
f21ca577cf68eb51ed68217ce5d1f67781cbb37c,fix realtime doc,2013-11-19T00:20:25Z
67a93ccd4d29df3fdaa1b0694676fdbb439a94e9,fix broken validation query config port,2013-11-18T23:53:49Z
18201108183a7e32104547d75e82f9f95cec3f8e,clean up docs and fix server monitor double emitting metrics,2013-11-18T23:37:30Z
1e9d72d95abbbf82335ff2d2035a3f1c642fa0c4,add total segment size/count metric,2013-11-18T21:51:06Z
f66fe3cbbb5b83b847c65b8cbfaf01cac5878083,another better default,2013-11-18T21:16:47Z
c5361cc10002c34f1d1284f146f6f891a40d271b,fix serde problem in CCC and better defaults for jetty threads,2013-11-18T21:14:18Z
60dbdcebac06bee9ff3ae4442c68a5252d4b469a,we need to explicitly set the connector thread pool based on the default number of threads in our config to accomodate how jetty 8 works,2013-11-16T19:09:42Z
5d7173ac989e9f140ee338fa5c5cf1ad7d2be72c,fix autoscaling termination duration bug,2013-11-16T03:21:25Z
a86d3af17e039f92839f98c05a0a436cc14ea989,fix docs,2013-11-15T02:29:27Z
48d275e5cbe7325a7c14132efafdf6c0f84980b1,[maven-release-plugin] prepare for next development iteration,2013-11-15T02:20:29Z
c31c5ce1ac8139cb215f12ed0493435ad088c697,[maven-release-plugin] prepare release druid-0.6.19,2013-11-15T02:20:25Z
346cf0e04cc6d78cbb089ea6bdab2836994a7e98,fix out of order in urls for hadoop classpath,2013-11-15T02:18:39Z
d935e1b47b19cfb4d1305b3b55f251342f23c599,[maven-release-plugin] prepare for next development iteration,2013-11-14T23:08:12Z
32dbbe4f635ffb8e3025b53895366b0071d7e0f0,[maven-release-plugin] prepare release druid-0.6.18,2013-11-14T23:08:09Z
5d00e4075e15ed59dc42925af8dbfa1563c90862,prepare for next release,2013-11-14T23:06:26Z
6b416814245eaf23eb5098ede7eee3146333a33d,"fix ordering of urls, ugh, need to write more tests",2013-11-14T23:06:07Z
373251a476a3549bbe5c115447246144eae6fd88,[maven-release-plugin] prepare for next development iteration,2013-11-14T22:31:26Z
7120db20a4edacecb911f746b68d6dcc14350b86,[maven-release-plugin] prepare release druid-0.6.17,2013-11-14T22:31:22Z
23ebca6d32a0d5c1f602942227f3990b48391b4f,"more hadoop dependency hell, getting the right urls to hadoop is hard",2013-11-14T22:29:42Z
89e6ce355047daf63b4c6b58a4a3eed12c6f8df6,[maven-release-plugin] prepare for next development iteration,2013-11-14T21:18:24Z
97293b3f0410336659f028ed523307d14965c6c7,[maven-release-plugin] prepare release druid-0.6.16,2013-11-14T21:18:20Z
61367c6b13701c28cd127789440f7210604cbc0d,prepare for next release,2013-11-14T21:16:38Z
c51eed060f0c4e128df70ad07a6b43ede3281ee5,actually use a class loader pull out dependencies from extension modules,2013-11-14T19:52:21Z
e7118cd9bef0b4f48420ae31cb88067d50362fab,[maven-release-plugin] prepare for next development iteration,2013-11-14T18:54:37Z
d3f46c826a0c11c160fca8551da6c58ed93872c5,[maven-release-plugin] prepare release druid-0.6.15,2013-11-14T18:54:32Z
fcf0c6ce06c304d78d6eaeba2e3db8d131ae3b11,change the classpath ordering for batch processing and prepare for next release,2013-11-14T18:52:51Z
60300bdad064bf34fe54ca0593daa9f57e79f2fc,fix doc version,2013-11-13T21:34:57Z
6e7e2428e8280281bff6249d9ba9a573c56f5105,[maven-release-plugin] prepare for next development iteration,2013-11-13T21:27:47Z
9c4cecc0150a487e3a73c45962236d12117f4522,[maven-release-plugin] prepare release druid-0.6.14,2013-11-13T21:27:43Z
247a0826db4013c89f7f63435d3c4c4baec373d8,"Merge pull request #297 from StFS/patch-1

Removed section about housejester scripts",2013-11-13T21:23:13Z
0587a9ecd0466d80a86055ecd0b2de486d9e7344,"Merge pull request #289 from alberts/master

Fix compile error in Eclipse 4.3.",2013-11-13T21:15:55Z
8c8d83830eeef5de2b8913127cbaf70afb45d926,"Merge pull request #300 from metamx/dependency-version-hell

Dependency version hell",2013-11-13T21:15:23Z
7289e5b3b3c354fa3eeae061b7c7314980b29981,forgot httpcore,2013-11-13T21:06:34Z
89f821900c8099848e5d83da2caddd53b49da6ad,add imports,2013-11-13T19:51:17Z
6c41cd868200bf3961c23a653fe67604a262c4c9,[maven-release-plugin] prepare for next development iteration,2013-11-13T19:38:44Z
b93550194a8977f8b2d6d3b09964d3e32c464e94,[maven-release-plugin] prepare release druid-0.6.13,2013-11-13T19:38:39Z
c1009f0872c669e6d2aa9f0ab87d42e92a839149,prepare for next release,2013-11-13T19:36:50Z
0d3c26d64f725715e745d278ca6a4d114f2e0f53,"Merge pull request #299 from metamx/dependency-version-hell

aws-java-sdk requires http-client 4.2, override other libraries that use...",2013-11-13T19:36:18Z
49a5bbc196636fd4b8c42b4cd4472dcfb02b3ade,"aws-java-sdk requires http-client 4.2, override other libraries that use 4.1",2013-11-13T19:31:54Z
d0f990129a6287e0d28b683f361b9acb536b3824,fix docs,2013-11-13T18:59:03Z
9bbaade8f90d4acc68d2a4894a5dc1e4c9db15ff,[maven-release-plugin] prepare for next development iteration,2013-11-13T18:37:12Z
4dffef698e5b5b31e78f73894a72a4a9e9ba92ca,[maven-release-plugin] prepare release druid-0.6.12,2013-11-13T18:37:08Z
a2ad0f36c4d7fa6a8f46696f33f24c3bf57bbd10,"Merge pull request #298 from metamx/jets3t-version-mismatch

make sure all modules that have a dependency on jets3t use the same vers...",2013-11-13T18:35:16Z
fbd2c520ad21548a82165340680aa8a60cd0112f,move jets3t version to main pom,2013-11-13T18:31:19Z
7c665a52d67c595ddb29ecce7fbf360fb3ca6d57,make sure all modules that have a dependency on jets3t use the same version,2013-11-13T18:25:51Z
e046e74b5514467379f6546285707e697484683f,Fixed broken links,2013-11-13T16:15:11Z
48aec4f5a4dff2d042e26217451a49ae041d76b1,"Removed section about housejester scripts

They're no longer valid with 0.6.x",2013-11-13T16:04:54Z
3d90690658697601a3027ac97857cf8c3d22d75c,"Merge pull request #296 from jamesbw/jamesbw/fixes-for-rand-example

Fixes to run rand example",2013-11-13T01:45:32Z
b1274d1101289a5f9f4c3a8c78c1aacf3558d6eb,remove extra zk dependency,2013-11-13T00:04:26Z
414615c43bbbdf7969ea6b87e66a135b5c0bac66,"added services jar to examples script classpath

Signed-off-by: jamesbw <github+jamesbw@squareup.com>",2013-11-12T23:30:59Z
bc26730c780c12143b5ea9e8c37fd51f67e8e172,"excluded signatures in examples pom.xml

Signed-off-by: jamesbw <github+jamesbw@squareup.com>",2013-11-12T23:30:35Z
f071850d9b52baa1dac62187df455cf0303234fd,"changed kafka version from 6.10 to 6.11

Signed-off-by: jamesbw <github+jamesbw@squareup.com>",2013-11-12T23:30:06Z
12a188d8d66250267452d9989918184f005ef549,[maven-release-plugin] prepare for next development iteration,2013-11-12T23:20:54Z
63d9f7362a7addef2c1fe322d77f3728290578ad,[maven-release-plugin] prepare release druid-0.6.11,2013-11-12T23:20:47Z
391b5b13c425f8c07b9aeb5a2ef7053e075782bb,fix kafka dependencies,2013-11-12T23:19:07Z
5c1eac474e27b3773858414d9cddfc863cf4f2c6,fix typo with kafka eight,2013-11-12T22:36:52Z
ab0c8c9601c5aa198ae18ef8385020358c3fedb2,Merge branch 'master' into igalDruid,2013-11-12T21:42:46Z
61a3c90d7ad8d62e6a7e7ac962becbb5c1a4d6e9,svg versions of druid architecture diagrams,2013-11-12T21:42:39Z
9a4814ffc663cd32b02c3b1817c04200d57fde29,better configs for examples,2013-11-12T00:43:05Z
c2ab37e0f5617c424962b9ee981a1f60de7fa392,"Merge pull request #293 from metamx/kafka-module

Moving Kafka to separate modules to support Kafka 0.7.x and Kafka 0.8.x",2013-11-12T00:14:28Z
2631c016c7440789db75dfb0c07150886882347a,return immutable list of modules from getJacksonModules,2013-11-12T00:13:32Z
9be644847ecd6c621d8267acebc7c0aa0f13063b,fix 8 module to use firehose factory,2013-11-11T22:30:00Z
9fb614c7737b9e2e506a2b9c9f3de6e7ac87f191,add kafka 8 module,2013-11-11T22:29:11Z
51aa7a228436d66e9db2ae451670ee9aae64c4a6,doesnt work yet,2013-11-11T22:04:03Z
0681fb614dfec95c8bb99cf6f2c1795eda57a1a2,[maven-release-plugin] prepare for next development iteration,2013-11-08T23:56:10Z
de5984ccea93bef1d0a50e2541b180bc90e19b79,[maven-release-plugin] prepare release druid-0.6.10,2013-11-08T23:56:06Z
9fe9ca31633fb1738e090ed7afdb7bcf73c3dd72,the emitter library is broken and also prepare for next release,2013-11-08T23:54:16Z
d212b3fc437082ae54fd1a39c0d862d1a0a2ed7d,[maven-release-plugin] prepare for next development iteration,2013-11-08T23:14:46Z
4cd457853925a4ccf4c9b6db154c415966b00570,[maven-release-plugin] prepare release druid-0.6.9,2013-11-08T23:14:41Z
822a30658dca6c6a0e1f3af2732d5234de901867,fix broken http post emitter and prepare for next release,2013-11-08T22:01:16Z
fd4fb78e1f86b498983029399d3cd49587d984c9,[maven-release-plugin] prepare for next development iteration,2013-11-08T19:34:12Z
f8d5d127a4778691dac47c5042a37b8f74b7fbca,[maven-release-plugin] prepare release druid-0.6.8,2013-11-08T19:34:09Z
64b93bf4489e9bb4e5fb0609732eff6c6b7c57c2,fix broken autoscaling and prepare for next release,2013-11-08T19:29:42Z
90240e6f1eedebb6af80c0e78072895acefb57e7,[maven-release-plugin] prepare for next development iteration,2013-11-08T07:29:02Z
c3d6233bc46e5cc371b2caff33238f22065f0df3,[maven-release-plugin] prepare release druid-0.6.7,2013-11-08T07:28:58Z
d70bcc5657c5dd51ea9a00c7a29390046f1b8246,repair broken pom,2013-11-08T07:27:06Z
a0eedf7342ae98465ea5282551070a63cf38b9ca,fix broken docs,2013-11-08T07:11:30Z
d1c3176bf5199ba5c138494290ab4a46c5c5be9f,update docs ver,2013-11-08T03:47:36Z
fafd9c8d27aed21dd813e522681146f85922a1d0,[maven-release-plugin] prepare for next development iteration,2013-11-08T02:20:19Z
f94541653823796a395c9de127bf05f6d64f1e9c,[maven-release-plugin] prepare release druid-0.6.5,2013-11-08T02:20:16Z
ed328aca6ecaf382ecc70007a3f7c73a96f6f34e,[maven-release-plugin] prepare for next development iteration,2013-11-08T02:03:39Z
e34f1a829b6fba0689da9238e014f34f28321bfa,[maven-release-plugin] prepare release druid-0.6.4,2013-11-08T02:03:36Z
a049b426742a10b6b8545f702047d76d0453368e,fix an issue with task tables not getting created automatically and prepare for next release,2013-11-08T02:01:35Z
009646ed5660199cd8c678962b93f3871c8ef31a,[maven-release-plugin] prepare for next development iteration,2013-11-08T01:40:12Z
4cde47c9d1563bce5761c824209405949d5b3584,[maven-release-plugin] prepare release druid-0.6.3,2013-11-08T01:40:06Z
d49554185a825d60c04ee1e59a20d4ab124900cc,fix broken default table names,2013-11-08T01:38:00Z
e6a83c03397b74e3d9bff248d01fb22edaa2a3ae,[maven-release-plugin] prepare for next development iteration,2013-11-08T01:05:52Z
2ac09b798d7a8c459ec97f818a1e7effabfab094,[maven-release-plugin] prepare release druid-0.6.2,2013-11-08T01:05:48Z
7f85a126ac59636ce1cb3df3bddc36ac2e01a5a4,fix broken event receiving firehose,2013-11-08T00:59:01Z
621133d6f21c3f75ce310769404002ab097aa76e,removing dead code,2013-11-08T00:53:34Z
1c87a007136ad861d9320b2b9d0a5951cb524ffd,"remove servlet-api deps, duplicates jetty dependency",2013-11-08T00:34:50Z
934c2461d97e162ff427d62b5c7c17b0be4da43e,update maven dependency plugin,2013-11-08T00:33:34Z
4fe52320d77fd80a4dc7dced624d21fc769df0f9,remove duplicate dependencies,2013-11-08T00:13:38Z
564600e3439b376be93385d589382c4eceb8cc12,remove extra dependency,2013-11-08T00:11:03Z
3d4db1c2a0b78e5ffe6ba6779bd5c7b9f2a5c2f6,Merge branch 'master' of github.com:metamx/druid,2013-11-08T00:09:08Z
bdff538ed847fff816c33ef4c1fb4a0c24a43a63,fix poms again,2013-11-08T00:09:01Z
00b68ce1008aeadba643b793f124b03b68aedceb,remove duplicate dependencies,2013-11-08T00:07:02Z
c94455627b49df007626e869cc4af38272d3f42d,fix pom,2013-11-08T00:00:38Z
084c90aa19f6b08413eab5588d6dbc609ff20df1,cleanup to prepare for next release,2013-11-07T23:55:51Z
760321c857bef7b008226fb8c390fa373c8669c0,"Merge pull request #291 from metamx/more-fix

Additional fixes required to get the indexing service to work",2013-11-07T23:54:17Z
6181114acd640ca69a2d250780b79e08c3a94642,"Merge pull request #288 from metamx/abandon-rt-segments

Realtime: Abandon segments that fail to push when shutting down",2013-11-07T23:53:49Z
bad1a7e9f83ffdac4e3d85b44288d2910150e33d,fix according to code review,2013-11-07T23:52:34Z
61afc542d62a4269be1086c065c8f4aa5f3f6b5f,"Merge pull request #292 from metamx/javascript-postaggregator

JavaScript post-aggregator",2013-11-07T23:46:05Z
aeb411a3a3f2458b305940ddceb860bc5e1fa7a4,fix according to code review and fix broken examples,2013-11-07T23:42:48Z
66181be1c62816d916c9301dddd2c8c5bc7be1dc,make things final and fix copy-paste errors,2013-11-07T23:25:47Z
04e285638e74f21eef706e9a71fe8fcd1ee15b1f,add javascript post-aggregator docs,2013-11-07T23:19:39Z
074589ffcea63b5a9ac3019050bdece2338870a8,JavaScript post-aggregator,2013-11-07T22:10:41Z
e2e10fae1fe9fd845cc03282e6607aa6fcae98b2,clean up code,2013-11-07T23:03:14Z
913ff3a082760759f6bd354cc093dbb58953819d,clean up code,2013-11-07T23:00:11Z
6b573c76f171bdbba7ef42f8e8f7259574bb8694,more fixes,2013-11-07T22:40:45Z
b35dd98015ebe1fdf9f71177760718342503f0de,Merge branch 'master' into igalDruid,2013-11-07T22:10:25Z
f77fbfcfe7b17acd132d0b2517f550eec4e50eb2,do not deploy layout,2013-11-07T21:40:54Z
efd7ea048651c17ba2b5079cfdfee61435ea3daa,fix broken link when testing locally,2013-11-05T23:51:34Z
f07b4fe59bd95185d5a83bc706cb6b042e8dc1e1,remove unused file,2013-11-05T23:50:38Z
ee15fd9f85baa2bfdc15051c28693ba459de0062,[maven-release-plugin] prepare for next development iteration,2013-11-05T23:42:37Z
713015199a055fd138fe10f2497dd5e78e9a13cf,[maven-release-plugin] prepare release druid-0.6.1,2013-11-05T23:42:33Z
6a6be1c3aba75a015d1ff66e3c81b19e4567927c,fix broken links,2013-11-05T23:32:34Z
f231d259cfcff0d230e239daffb5c13fbf63de2e,Merge branch 'master' of github.com:metamx/druid,2013-11-05T23:30:48Z
33561031a2a52a270a7fbed648150a80fb1f4f47,update docs version to match next release,2013-11-05T23:30:41Z
6ee917b770c9f05b014231f85b206276e726535b,smarter deploy script,2013-11-05T23:20:55Z
0627c74e0d733561a5c80eca7a12535ba8da5d2e,rename index page to simplify docs url to /docs/<verison>/,2013-11-05T23:07:19Z
1589909b9d28e5906bff29f26f31b4aa1451dd41,"Fix compile error in Eclipse 4.3.

The method dimEquals(String, String) is ambiguous for the type DimFilters.",2013-11-05T05:23:13Z
76732c25f8c9897ab3221480399ca1810aed69ab,increase timeout for slow machines and provide more descriptive error message,2013-11-04T22:07:43Z
50327cb841ccb52e538fe4963d8d1107af4645c6,moved Concepts-and-Terminology to Getting Started section,2013-11-04T21:24:02Z
c7a8bb90e9cc207da2310ad942e6f527d8058a0a,updated link to removed Data-Flow page,2013-11-04T20:45:06Z
285b515777a348e1133535599dddc5abf8c6c8dc,Merge branch 'master' of github.com:metamx/druid,2013-11-04T20:33:40Z
5ef6c1d8a278f317d655cc5f259ff85e6048f06a,fix formatting with modules doc,2013-11-04T20:33:36Z
8660db93fc01975b07abe18ca17fb166656222de,RemoteTaskRunner: Run taskComplete after a task times out,2013-11-04T18:56:26Z
186bbd1cb68c58921f4adeafd658bd466d4766f3,WorkerTaskMonitor: Add log message,2013-11-04T18:25:16Z
50a8c806c31ab6489444a7f199d8fc6eb4e5463a,S3Utils: Replace S.o.println with log.warn,2013-11-02T22:24:05Z
f8e564469f0cc215ab3ab4a57ae0d3a29dee777a,"S3Utils: More aggressive retries, S3 can be pretty unreliable sometimes",2013-11-02T07:30:48Z
d8d3a6958e3e1fd8c591313fe783a680ba8b06fb,Realtime: Abandon segments that fail to push,2013-11-02T07:21:45Z
c2074744b55b69023eaf515ab60144c99c4e13a9,"Merge pull request #287 from metamx/igalDruid

Update to Architecture intro file:",2013-11-02T01:02:39Z
cf06a73091255bb06ba09f3b4930e420e852e838,"Update to Architecture intro file:
* Updated description of druid architecture components
* Added links from descriptions to actual component pages
* Removed Data-Flow page, which was a (mostly) redundant subset of other pages under Architecture)
* Moved non-redundant info from Data-Flow to other Architecture pages
* Updated info on how data actually flows in Druid 0.6",2013-11-02T00:17:57Z
8b2d50c4c73059a7d8a8a15ab51603e71a8412fd,"Merge pull request #285 from metamx/pull-deps-auth

Implement `tools pull-deps` and remote repository authentication",2013-11-01T19:38:48Z
dce6e7e0ebc77a73081cc2e2828252d2414b80d8,hack to support remote repository authentication,2013-10-31T01:19:59Z
ef88f37bbea4049e87e4edf413378bfaa55a9e7b,add tools pull-deps to cli,2013-10-31T01:16:27Z
faa4f4ac9beebe4a94afcd5f6f879c16c7246d18,"Merge pull request #278 from metamx/igalDruid

Some new graphics",2013-10-30T03:47:11Z
043a4a27b4d75770fef702a014dcc66f22a47c33,refactored some text and added images,2013-10-30T00:23:36Z
21235ae533746ba6496a5cc73608a5a22a49b079,fix configuration conversion bugs and docs and hdfs configs,2013-10-29T21:34:24Z
0d297869ccf44136afd00800650eb7b540348e28,Update igalBranch to latest master,2013-10-29T20:50:29Z
fbb2e8dbc16c00e4ffbd1a618c549dc6f43f002a,"Merge pull request #280 from cheddar/master

Write some docs for modularity and extensions",2013-10-29T12:47:16Z
86a6ce22564ec6844eee6e15e6c8a57afc151d85,Add documentation for extensions and modules to 0.6 version of Druid,2013-10-29T00:35:46Z
792fa4aa55a25d7311cb8385d5f1bcffa7aa39a5,Merge branch 'master' of github.com:metamx/druid,2013-10-28T23:21:57Z
c8784e4dbba8bc2435876ad72d18eab831ee563b,Two new cluster overview graphics for Design.md,2013-10-25T21:26:14Z
593f647e0d926b677436553b56b874ddd0e8cd31,OmniGraffle file containing sources for various images.,2013-10-25T21:24:43Z
cf0996a770e44812da60567ea72f195771879f7c,"Merge pull request #277 from metamx/column-selectors

Merge DimensionSelectorFactory into ColumnSelectorFactory",2013-10-24T20:26:26Z
276a62a0ce1011f8e3e07f354958d895de6588e2,Merge remote-tracking branch 'metamx/master',2013-10-24T15:02:52Z
a86b02635a6089d16a3830cf2adaecc1d6080c03,remove DimensionSelectorFactory,2013-10-24T05:02:06Z
781673a8f8832d7623b8e275c4aab176d59ec28d,ForkingTaskRunner: Fix pass-down of nodeType,2013-10-23T21:13:05Z
5d8f1d11ec0ad63c4900cf054f312bd8eb249375,fix broken UT as a result of new druid api changes,2013-10-22T17:44:28Z
bf3acbf28c447154733b2706083f25afc7b7fcd9,"Merge pull request #272 from daggerrz/feature/raw-row-data

Use druid-api 0.1.2-SNAPSHOT which provides Row.getRaw()",2013-10-22T17:05:31Z
3e609f996dc5ade3401c4620acf8af95ba85580d,"i need to learn to type, this fixes incorrect version in pom",2013-10-22T01:33:41Z
74ab5b9792b8631d390ae1f3f310865ea021d064,updated extendedset version,2013-10-22T01:28:35Z
c32c5b1257250c39ecaa80b1de455f6f655dcccc,"Merge pull request #273 from metamx/igalDruid

Refactored to focus and bring out the really good sections.",2013-10-22T01:27:34Z
522feb65d575de51bfee540653c372377a12831e,Use druid-api 0.1.2-SNAPSHOT which provides Row.getRaw(),2013-10-21T02:39:13Z
3ee3d82bf224f2fbdd21c076dfc0cf4ef669b035,Refactored to focus and bring out the really good sections.,2013-10-18T23:38:19Z
a6848858392fcc21820e10c618be4c32c94e2582,[maven-release-plugin] prepare for next development iteration,2013-10-18T22:48:16Z
88dcfe9a94b435ef7c6a611ff154a4aa7a33f381,[maven-release-plugin] prepare release druid-0.6.0,2013-10-18T22:48:12Z
5bca36247f17127d529bf5d638b35fe5dac4eb5e,fix more docs,2013-10-18T22:37:43Z
b3984f4e2e44f1b0c6a1b0fb0bf2c8da1e107ed5,"Merge pull request #271 from metamx/indexing-service-realtime

Indexing service fixes, targeted at RealtimeIndexTask",2013-10-18T20:28:04Z
b68b3526e827ce44724519ff96ad611e2c1d234b,IndexingServiceFirehoseModule: Add header,2013-10-18T20:27:24Z
94d4920edd556275bbee4f5d034aa3213531fb13,Merge branch 'master' into indexing-service-realtime,2013-10-18T19:26:43Z
2e9c46867f5455c581fc064ddb8076be15696ba8,"Fixes for indexing service.

- Create IndexingServiceFirehoseModule so firehoses can be loaded by all mains
- Fix implicit lock acquisition in AbstractTask",2013-10-18T18:14:33Z
afa57352286c3493b5b1210bebd797fe6e505c8c,fix typo in intro tutorial,2013-10-18T17:43:20Z
18b02e5dbae94d9012aa273aeed699b31e55f9f8,add link to data flow from druid cluster tutorial,2013-10-18T17:39:04Z
8d22c05807671e55818d4850b7d892b3d0d4e0d9,Merge branch 'master' of github.com:metamx/druid,2013-10-18T17:30:13Z
c96abe3a5963b3555d60d5ff2e0a1ac96a057b99,add data flow docs,2013-10-18T17:29:58Z
84960f6c58135d10834167368d03ab2d6c1a4184,"Merge pull request #270 from metamx/igalDruid

removed bogus word",2013-10-18T17:25:34Z
413c4d075ad88ae38a47f052087b683cfeb23806,fixed typo,2013-10-18T17:21:30Z
ce48278d8313f82654a65e2652fc854250beaed4,more legible graphics,2013-10-18T17:04:32Z
5bec1cd8813bfd499cb45a051741d6ccc514a39e,data flow graph,2013-10-18T15:10:34Z
cdde400718b58b02743231f9ac7938a635ee2a42,fix task docs and indexing service img,2013-10-17T01:08:36Z
7e247760974a6f421bce78d827233521c36eba82,fix typo in docs,2013-10-17T00:58:57Z
4862852b43bc9f0d23614b1d80ad0b7f9783e798,more docs about how to use different versions of hadoop in druid,2013-10-17T00:54:49Z
6192602893a75b6c69d76e6bfa1b90abfbfdf394,fix extensions config not getting picked up in hadoop index task,2013-10-16T23:52:23Z
1bd1bc98d1acee104d7b8a7ba2e6945ed4532b0e,update s3 calls to not use deprecated fns,2013-10-16T20:21:54Z
2dc716bf7e71824682886fe2adbd8d99346cd7b7,fix bug and make it actually possible to load extensions,2013-10-16T18:59:01Z
98dcd4468bc72e0e4279df8718436ee1fec450db,"Merge pull request #269 from metamx/fix-task

Refactor Hadoop-based indexing to repair broken Hadoop Index Task",2013-10-16T18:38:21Z
71a9b43c83995f62e42170e50ec0c783088ad1ee,fix docs for deep storage,2013-10-16T18:37:56Z
a1c09df17f349fe61d0e14c0a5201213cccce29f,make the hadoop index task work again,2013-10-16T16:45:17Z
9796a40b927e5ae177d59a6ee104b09e8ca72086,port docs over to 0.6 and a bunch of misc fixes,2013-10-12T01:38:53Z
b85fbbfdf5d1d7367a61dcaf2487b7b37bd789b1,add indexing service diagram,2013-10-11T22:21:28Z
38e9ff5984cfd3428f2a67403ad30432f6be1ee3,"Merge pull request #266 from metamx/more-docs

a ton of fixes to docs",2013-10-10T22:05:34Z
560981acbf61cbd1354814a6890c50a16c1b8bd9,a ton of fixes to docs,2013-10-10T22:05:01Z
cf4711d99d6ce7e84bacf2e6201592e4db344853,"Merge pull request #263 from metamx/is-docs

New Tutorial for batch ingestion with indexing service",2013-10-09T22:45:03Z
a9a723bd11dd49226affeb3a687e37a973d77d18,"clean up poms, add a new loading your own data tutorial, add new validation, clean up logs",2013-10-09T22:42:39Z
4e509d1d09aa77e17d06edc16140bf28f80b509b,Merge branch 'master' into is-docs,2013-10-09T21:05:10Z
adf6625081f262417c8c8a6cbd56f1224926eb19,"Merge pull request #1 from metamx/master

Update to latest master",2013-10-09T20:51:08Z
3364b9ae5ed1ab97b97f617f106935b07d7fe888,"Merge pull request #262 from metamx/fix-hadoop

Fix HadoopDruidIndexer to work with the new way of things",2013-10-09T20:27:49Z
c47fe202c78a0fd663c2df972f400174cc7321c6,"Fix HadoopDruidIndexer to work with the new way of things

There are multiple and sundry changes in here.

First, ""HadoopDruidIndexer"" has been split into two pieces, (1) CliHadoop which pulls the hadoop version and builds up the right classpath with the proper hadoop version to run the indexer and (2) CliInternalHadoopIndexer which actually runs the indexer.

In order to work around a bunch of jets3t version conflicts with Hadoop and Druid, I needed to extract the S3 deep storage stuff into its own module.  I then also moved the HDFS stuff into its own module so that I could eliminate the dependency on Hadoop for druid-server.

In doing these changes, I wanted to make the extensions buildable with only the druid-api jar, so a few other things had to move out of Druid and into druid-api.  They are all API-level things, however, so they really belong in druid-api instead.

Lastly, I removed the druid-realtime module and put it all in druid-server.",2013-10-09T20:15:41Z
a96eb634d43b14b491df409c3e5d7802279e5e90,"Merge pull request #260 from rjurney/master

Changed indexGranularity on webstream example from minute to second",2013-10-09T19:25:10Z
806bc0f58c51c6a0104da9cc761e57a786195189,Changed webstream example to second indexGranularity.,2013-10-09T19:23:00Z
4ec4b8e024513744c5fbd23a012a29a5070af108,rewrite indexing service docs,2013-10-08T23:34:58Z
4e30a144387cbc4041d009e3cac18d1b3141075e,Reverted minute/second change.,2013-10-08T20:27:39Z
caa3c663f50ff0b86edc7e2f3bbe73fadbba3253,Changed wikipedia example to second indexGranularity.,2013-10-08T20:05:38Z
ed6ba44917d6abe7dacdb3d8f7732b266dc61d5d,"Merge pull request #258 from metamx/fix-docs

Fix docs for 0.6 (part 1 of many)",2013-10-07T21:49:04Z
af1dbe6eabc368ece16db31d96ae45395d511e52,fix docs for 0.6 part 1 of many,2013-10-07T21:47:04Z
de71c141145463fca3c63bb4bfdad14b0620020f,"Merge pull request #257 from metamx/az

Add availability zone info to autoscaling",2013-10-07T19:17:42Z
703b674800146488eb0bede4345a2dec354129f0,add availability zone info to autoscaling,2013-10-07T19:16:50Z
dd0b31785d962d5d034f947b57f836466f7f4049,"Merge pull request #256 from metamx/rename

Refactor our modules to standarize Druid node naming convention",2013-10-06T21:23:32Z
cdbbf445fdc5b4f8be02c7f22aa02d90c83f39dc,remove ec2 startup files; they are obsoleted by whirr,2013-10-06T21:22:44Z
ac330f72bb882afcbe01e1b60cce3ecc6d9660bb,first set of changes to standarize the naming convention we use in druid,2013-10-03T23:36:48Z
bf157ea8ef507a67e7ce6e3636f50c28f075791c,fix the example assembly and have better error logging for rabbitmq,2013-10-03T17:54:25Z
8885412b3365f2d41f5fc159e1eb5a7fd544125b,"Merge pull request #255 from metamx/fix-examples

Update examples to work with Druid v0.6",2013-10-03T17:00:38Z
17874eeb67f22b628e78cd540bd26510edc86771,make the CliPeon actually able to run on its own,2013-10-02T22:55:10Z
bc8db7daa5b0c1e7ef0296e2bb5350e921d9c696,"1) make chat handler resource work again
2) add more default configs
3) make examples work again",2013-10-02T21:22:39Z
216bed9c36c8141693a0297067df15b1f09ddfbc,Merge branch 'local-index' into fix-examples,2013-10-02T21:21:28Z
384dcda7e4583c822609b64dfaf905ea529a6d52,"Chat handlers still don't work, but, they're closer maybe.",2013-10-02T00:45:53Z
1c77177de3e9dc0d7b37f0bc7d209aa549310275,"Merge pull request #254 from metamx/local-index

Add a local firehose for indexing local files",2013-10-01T21:17:05Z
59f2d0711d889dc706a7f3ee71c6435de30b1469,Merge branch 'master' into local-index,2013-10-01T20:21:43Z
30df53671ec28bda91618e3713eb3b215c718f59,remove line iterator factory because it is not needed,2013-10-01T20:21:20Z
62eda5020c64de2cffe84cfbd967e932b5f27c95,"ShardSpec: Remove isInChunk(Map<String, String>)",2013-10-01T19:50:08Z
5d0d71250b68845966d89e89128146e6c234070f,fix chat handler resources not correctly registering themselves,2013-10-01T18:25:39Z
d6445cd8f3958a7c4dc453be8ca0c3756460ee45,remove imports,2013-10-01T16:42:28Z
53698a135a07c755f84b637e547c09fcb1f1d5c9,add interface to new firehose as per code review comments,2013-10-01T01:00:59Z
f55a5199b14ed697726a168ed98ad3c2fd47584a,add a firehose module to remove so much copy and pasted code,2013-09-30T23:29:20Z
ed9e0cf9f6ea0a0c81388014ba4997a752d17360,add a local firehose for indexing local files,2013-09-30T23:03:26Z
16558404d6384eb17cba5c3f129046e8ddf66023,"Merge pull request #251 from metamx/fix-config

Make dynamic master resource configuration work again",2013-09-30T17:54:11Z
aa9aa495aedc4f81c4c1657dd803c4971bbe196b,Merge branch 'master' of github.com:metamx/druid,2013-09-28T01:50:43Z
ab96301cce1eaca4209076ecdf96819ee29873e0,Add deploy script for docs,2013-09-28T01:50:02Z
4a7a28a7f6417a30c3558bba7cafb01935e3af28,Merge branch 'master' into fix-config,2013-09-28T00:17:46Z
e60387b3d49e7afebbae19629bb6c133153160ac,"Merge pull request #253 from metamx/stuff

Fixes for property conversion, firehose registration, and the indexing service",2013-09-28T00:11:33Z
2ee8bb6938cc25d9d66f1bac1f9f50d3d53c3ea5,"Merge pull request #252 from metamx/docs

Move Docs from wiki",2013-09-28T00:10:06Z
dc5dab8747902c25bf14eb100ea9d960d2fbcd37,"Fixes for property conversion, firehose registration, and the indexing service",2013-09-28T00:09:59Z
65bb68c7de8477a7918a42b63b0e9696b7853fc8,Finish converting docs over to something that displays properly,2013-09-28T00:08:34Z
154b58defd0b4e6295c5fd8a33ee20b169396007,"Merge branch 'master' into docs

Conflicts:
	docs/content/Loading-Your-Data.md",2013-09-27T23:29:56Z
a79ad7bab4765a5c93e58e092303b2fb857f5227,make dynamic master resource configuration work again,2013-09-27T22:00:40Z
ca5c94156040f9dd21c9fa85046e4ed40e8aa9fe,Make more of the docs look and work correctly.  Yay!  Almost done with this!,2013-09-27T17:57:08Z
1f3aae6edf4519bc9430fa28630194407ede2f95,"Merge pull request #250 from metamx/guice-is

Make the indexing service work with new framework",2013-09-27T17:30:24Z
0b04325ee89227312f57966cd1cf2d010e671a77,fix things up according to code review comments,2013-09-27T17:17:45Z
86ddc7da7b8a18cedbfed7c1b44bc6c595255f69,pretty !,2013-09-27T00:55:10Z
7fed43041d3d083ff3ae8c860393309cbebe9643,fix layout,2013-09-27T00:38:11Z
e404295c1f921dac31c2c9c0855204e8b402c85b,make indexing service work,2013-09-27T00:44:21Z
b68c9fee83e711244238c1a1a6cecbb9a2d06935,fix layout,2013-09-27T00:38:11Z
e4d4362bf9e59cc2f8d916a3c5d58e8b656dad85,Docs working,2013-09-26T23:22:28Z
a3e16335eff67be5ae43f2114304110679fd31c2,"Merge pull request #248 from metamx/guice-hi

Port Hadoop Batch Indexer to new Guice framwork",2013-09-26T20:20:15Z
8bc56daa663202aa06782c0ebefe7bbad696f334,fix things up according to code review comments,2013-09-26T18:35:45Z
0461e4688fd4c6398759944a96196ed9f6c245c1,Merge branch 'master' into guice-hi,2013-09-26T18:05:03Z
87259321b610aeec50219207012a401a8b29706a,port hadoop druid indexer to new guice framework,2013-09-26T18:04:42Z
713ba63306fd651a8ec863fa57a941e09e45195c,"Merge pull request #245 from metamx/s3-retry-fix

Fix S3DataSegmentPuller retry bug",2013-09-25T22:32:18Z
45e22d98f1fb4d95ac3f46ad3c9daeb3ed576700,Fix S3DataSegmentPuller retry bug,2013-09-25T14:44:17Z
9b57b4e1f320bd593fabdf43f255fcf1eee30265,"Merge pull request #244 from metamx/guice-discovery

Refactor how server service discovery is done",2013-09-24T21:58:34Z
19276f6badab8fe818c77c4205ffe22cb129e582,fix spacing issues and other code review comments,2013-09-24T21:34:09Z
be5bb7f2eb13f709464acfd8f04eca4fe2628965,fix lifecycle startup/stop ordering problem with discovery module and make druid able to load local extensions,2013-09-24T21:20:56Z
15843c39780a8c06f40216777a0de4e7a024dd3c,refactor how server service discovery is done,2013-09-24T17:36:26Z
1ff04412a2e73496e31969e15b6254663d65bce8,clean up realtime module and fix breakage in broker paths,2013-09-23T23:26:05Z
1750b702d7128121b028c8f87729afa517cc0485,Add missed com.metamx.druid.emitter.period propery to ConvertProperties,2013-09-23T21:46:37Z
4f3202f3d935f32b623e1ed04c421101e1dc5529,Move docs into a separate directory to better facilitate the separation that will exist.  I think.,2013-09-23T21:26:10Z
cc632cdb30166eaa0b7fba3bd9b724dae770a9f1,"Make Jetty Server lazy

JettyServerModule had been eagerly instantiating the Server object, which was causing things that didn't care about an HTTP interface to all of a sudden require host and port parameters.  The change makes the JettyServerModule only setup the bindings without eagerly instantiating the Jetty Server.  Each cli needs to register the Server class with the Lifecycle in order to make it actually get used.",2013-09-23T21:02:24Z
dc8a1197876397b45da37a34048c7fd7888231d2,fix broken unit tests are a result of the last merge,2013-09-23T19:56:01Z
98c663e75c3ec16783b763c37ab9b6fb7eea7053,Enable usage of SysMonitor to verify disk locations via DruidSysMonitor,2013-09-20T23:33:14Z
289b4c50246b470dd0b7e84db73c6159f3de05e0,"Merge pull request #243 from metamx/fix-extensionization

Fix issues with bindings and handling extensions",2013-09-20T23:19:02Z
fefc71e34f88705a8325af42a401094159e7cfe0,Refix the things that were lost in the merge.,2013-09-20T23:01:08Z
b13ae3f4055fe6c293a71607304ec6dbad22ce03,"Merge branch 'master' into fix-extensionization

Conflicts:
	services/src/main/java/io/druid/cli/CliBroker.java
	services/src/main/java/io/druid/cli/CliCoordinator.java",2013-09-20T22:49:13Z
5712b29c8c880e8db00c514ba11ba1d6531b4927,"Fix issues with bindings and handling extensions

The way the Guice bindings were setup previously, each process only had bindings
for the things it cared about.  This became problematic when adding extension modules
that bound everything that they could possibly need expecting that the processes would
only instantiate what they actually do need.  Guice tries to fail-fast and verifies that all
 bindings exist before it does anything, which is a problem because the extension bind
 some objects that don't necessarily have all of their dependencies bound in all processes.

The fix for this is to build a single Injector with all bindings in it and let each of the
 processes only load the things that they care about.  This also requires the use of
 Module overrides and other such interesting things, which are node done.

 In doing the fix, I also swapped out the way that the DataSegmentPusher/Puller stuff is bound, as well as made the Cassandra stuff fail if its settings are not provided.  This all of a sudden made all of the things require Cassandra's settings, so I migrated the Cassandra deep storage stuff into its own module.

 In doing these changes, I also discovered that some properties weren't properly converting for the ConvertProperties command (specifically, the properties related to data segment loading and pushing), so I fixed that.",2013-09-20T22:45:01Z
f26e13c61acef1ec4953483a24e8c0b0fbd6be04,fix broken http endpoints,2013-09-20T00:33:58Z
46631bf4095d628f4133692bf497be1d188f6a61,"Port fix for issue where IncrementalIndex doesn't properly filter for ""null"" values from 0.5.x to master",2013-09-18T23:18:53Z
a74b6de9c53e14a28dae1806302dfc6fb5e9b5db,"Merge pull request #242 from metamx/guice

Druid version 0.6.0",2013-09-18T23:00:08Z
8d7af403138f600f135a8223a74ffb09ac0faf65,Merge branch 'guice' of github.com:metamx/druid into guice,2013-09-18T22:59:29Z
b3bfcb779228892e0568e9cb5ed0b369c16c5e58,workaround for broker to plug in extensions,2013-09-18T22:59:05Z
e019dddaaacfb9c4a1b4d9d135a2781a1e84c444,Reapply Fix for NoSuchElementException that happens in IncrementalIndex when some columns are null,2013-09-18T22:54:49Z
6150365c12e8499553ce4b71fb54f3deff280a5e,"Reapply ""fix regex and assign random user ids"" from Xavier",2013-09-18T22:15:15Z
d61fe9585a15bc03dc74f1be3e22f4cc4275de4c,Fix RealtimePlumberSchool.setQueryExecutorService() to actually use its argument,2013-09-18T22:05:18Z
dc728b5721429e072d7ec5ada5084b6aa6746167,Update versions of poms and make IncrementalIndexStorageAdapterTest compile,2013-09-18T22:01:03Z
6bfe2310bb08a763ed10de2d4d9b452b727636ad,"Merge branch 'master' into guice

Conflicts:
	client/pom.xml
	client/src/main/java/com/metamx/druid/query/segment/LegacySegmentSpec.java
	indexing-common/pom.xml
	indexing-service/src/main/java/com/metamx/druid/indexing/common/TaskToolbox.java
	indexing-service/src/main/java/com/metamx/druid/indexing/common/TaskToolboxFactory.java
	indexing-service/src/main/java/com/metamx/druid/indexing/common/task/RealtimeIndexTask.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/executor/ExecutorNode.java
	indexing-service/src/test/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunnerTest.java
	indexing-service/src/test/java/com/metamx/druid/indexing/coordinator/TaskLifecycleTest.java
	indexing-service/src/test/java/com/metamx/druid/indexing/coordinator/TaskQueueTest.java
	realtime/src/main/java/com/metamx/druid/realtime/RealtimeNode.java
	realtime/src/main/java/com/metamx/druid/realtime/firehose/IrcFirehoseFactory.java
	realtime/src/main/java/com/metamx/druid/realtime/firehose/WikipediaIrcDecoder.java
	realtime/src/main/java/com/metamx/druid/realtime/plumber/RealtimePlumberSchool.java
	server/src/main/java/com/metamx/druid/BaseServerNode.java
	server/src/main/java/com/metamx/druid/http/ComputeNode.java
	server/src/main/java/com/metamx/druid/index/v1/IncrementalIndexStorageAdapter.java
	server/src/main/java/com/metamx/druid/query/group/GroupByQueryEngine.java",2013-09-18T21:46:54Z
949c52d48292110693018b9726e23c9843ea9f25,1) Remove snapshots,2013-09-18T20:42:30Z
e551afef5d1db7449eaa95908948e5ece3c87eb1,fix broken master console,2013-09-18T16:41:59Z
02b86a6fc7796f2e5a1f03a6ef4883fcd26f41c5,Merge branch 'guice' of github.com:metamx/druid into guice,2013-09-18T16:24:24Z
f7df9516101c5d6470846688889ec8e77b98e8ed,broker needs to announce itself in service discovery,2013-09-18T16:23:46Z
4557838c5dc36c4573bbe376a6372a715ae8d7c4,"Merge pull request #241 from rjurney/guice

Updated config to create tables.",2013-09-18T00:58:52Z
295426df9fc1cacac9a55dcaf47032455adf55d1,Updated config to create tables.,2013-09-18T00:07:55Z
48dea8289045fb57a32643cb885d06f52866218a,"Merge pull request #240 from rjurney/guice

Working import, sans tables",2013-09-17T20:14:45Z
64f3821b4e3df0fc5f409a0a03d081da02353482,throw exception for annotated members,2013-09-17T00:36:31Z
6df31408d9fbdab0242113cbd3ebbb6485a2a812,made layouts work,2013-09-17T00:09:59Z
946a9e502fe544ea8e08218a4fd0d0a683cab44b,Replaced spaces with dashes,2013-09-16T23:19:49Z
cabae7993da168ef6baf31eb8335f063c642520e,port over multi threaded realtime and also fix broken realtime nodes that can't start up,2013-09-16T23:03:47Z
063a068ab238f2412c090c33c756a73540a77b17,"Converted links, sans space to slash",2013-09-16T23:01:14Z
248fba683a3cfe8a99c6ebb0d101d3693445e87b,Added prepend tag to make pages display.,2013-09-16T21:49:36Z
c06b37f36e264f94a1f3612182a170b7b76b0839,Won't serve html,2013-09-16T21:08:22Z
9b4c3756ede585c001dc0dbba1135891afa3732c,fix exception catching logic of moving segments,2013-09-15T17:27:37Z
163fa14e62beee4643c95503f05ad4a053d8725a,[maven-release-plugin] prepare for next development iteration,2013-09-14T02:02:46Z
a20f3fc6dd73e0c65b711decebabf67431fcd999,[maven-release-plugin] prepare release druid-0.5.58,2013-09-14T02:02:40Z
d0b0adbb68ac4dd2640b96a1d693a78241553cfa,[maven-release-plugin] prepare for next development iteration,2013-09-14T01:57:25Z
23c5fdb107478bb25ab523e635e90afaa3ac949f,[maven-release-plugin] prepare release druid-0.5.57,2013-09-14T01:57:20Z
b0a09ba1f1dba02658b1fcc7fac9710507af739a,[maven-release-plugin] prepare for next development iteration,2013-09-14T01:45:20Z
b17f5c403b3167bb0f12316f18aa543e2a07d397,[maven-release-plugin] prepare release druid-0.5.56,2013-09-14T01:45:14Z
30bde45556842da84f9ccd7aa385787ea493709c,Merge branch 'master' of github.com:metamx/druid,2013-09-14T01:41:36Z
5a8b71ddecb3b9750759631abd3252b2dc27f2c5,fix how druid services is assembled,2013-09-14T01:41:33Z
22a99c7589488dbecf3cdd9cba2ea30816138c97,[maven-release-plugin] prepare for next development iteration,2013-09-14T00:59:03Z
542d564453ae9aa04ff996b53b6996e277df136e,[maven-release-plugin] prepare release druid-0.5.55,2013-09-14T00:58:56Z
8b480e55db5ed532f9c85fc26e9dcd24528ab123,Add docs from github wiki,2013-09-13T22:20:39Z
48db34a4b78ed7721a93e23a04f55d826a44cb65,Merge branch 'master' of github.com:metamx/druid,2013-09-13T21:36:49Z
87dc839fb25b9ec5e1e1c255935edfb164469593,fix example properties for real time node,2013-09-13T21:36:42Z
24df6c482d15366a3dd9b614992f50961e95f268,Use shared query executor in indexing-service,2013-09-13T21:19:42Z
73a87fe2f66cd1854d782c6535b5991ae497e934,Merge branch 'guice' of github.com:metamx/druid into guice,2013-09-13T21:28:21Z
66c2ea2ce3b661ddff6a02cb5cccb387859e1444,"1) Move doc/publications to top-level publications directory.
2) Move data_flow and segment propagation stuff to static.druid.io/docs/flow and remove from repository",2013-09-13T21:26:41Z
242476a73ff94e52740909ae172e49e3f2731dc3,"Merge pull request #239 from metamx/mt-rt

Correctly use number of processing threads for realtime query execution",2013-09-13T21:00:41Z
1ec098c010a80a2ef8693a6c7d4da89381ecf840,use num processing threads for realtime query execution,2013-09-13T20:54:41Z
ef1ac46a7ebe69d916fe840cdc73b3087009f5b9,"Merge pull request #237 from metamx/is-ut

Rework tests in indexing service to be more unit testy",2013-09-13T20:21:03Z
f7c10e359400a1ac572209e50963f3675021b857,rework tests in indexing service to be more unit testy,2013-09-12T23:37:58Z
e0738b3b22a2c845c965ba65f0c07f762a9d57b6,1) Add tool to convert properties from the old settings to the new ones.,2013-09-12T22:59:23Z
044e43d231ae53615be22647ff682e04694178ba,1) Remove last TODO related to segment lifetime.  Don't think we care about that anymore.,2013-09-12T19:17:11Z
a001c1d32a71b70666bd98dfac0e69e4164e110b,"1) Remove TODO from ZkCoordinator.  Always load the cache, 'cause I say so.",2013-09-12T18:02:40Z
2ea09e2d709d8cfd823671de58b72cddc3699de4,1) Clean up specification of StorageLocations,2013-09-12T17:56:56Z
a2dcc45a8eadfdef196447f0f42300d59ee7eb6f,1) Remove SingleSegmentLoader and replace with OmniSegmentLoader,2013-09-12T16:47:03Z
b8bd19e87c10f4b1552a4f8ff9aa233f5bb2f96a,whitespace,2013-09-12T15:13:04Z
3e4a4f5566e7f94e6cdf21337ddba3264bd52e94,1) Adjustments to allow for the addition of new Runnables via modules.  Modules should implement CliCommandCreator and add their stuff there.,2013-09-11T22:41:20Z
6c9a10735673363f560cfecce04ae8470955be4e,1) remove duplicate package initialization.initialization,2013-09-09T22:02:57Z
e03c623467c1143c605d381ddaba99db01261833,[maven-release-plugin] prepare for next development iteration,2013-09-05T20:48:21Z
552d0c061a57fca4fae2de1837fce1a034494285,[maven-release-plugin] prepare release druid-0.5.54,2013-09-05T20:48:11Z
cd14e7fbcafcf124a7c059fa518f5e5fc7409e6e,fix regex and assign random user ids,2013-09-05T20:42:46Z
5a64e2a64ab0b107b4829535f296f721cdc31c96,[maven-release-plugin] prepare for next development iteration,2013-09-04T21:24:04Z
523355d00b764851ceaad35cfc19299c18b89c63,[maven-release-plugin] prepare release druid-0.5.53,2013-09-04T21:23:56Z
898f937f3c954cfe3a0c0d967593f6509f2cd895,also update wikipedia example query.body,2013-09-04T21:20:25Z
567168330bf8c1e0b63352836794afa4871c5f74,[maven-release-plugin] prepare for next development iteration,2013-09-04T21:06:33Z
39bda32b81e8c9ee96d6be3cf7520f2e193b7622,[maven-release-plugin] prepare release druid-0.5.52,2013-09-04T21:06:25Z
9f391c2bdd7bd7b166ac9602c355a35457a5bdba,update example wiki realtime spec to match publically avaiable segments,2013-09-04T20:59:23Z
f08b8287a43effc820056fec59547d0d959583e3,[maven-release-plugin] prepare for next development iteration,2013-09-04T20:22:19Z
cf9038abb499931d16978f204afbbb5802f7bff1,[maven-release-plugin] prepare release druid-0.5.51,2013-09-04T20:22:11Z
301e1896e77c82a0cc2026557f6d0bb183650306,"Merge pull request #236 from rjurney/master

Edited assembly.xml to exclude the selfcontained jars, and edited path o...",2013-09-04T20:03:15Z
a11eae4144f46b2bf004e829f6c5b268672a1cb7,"Edited assembly.xml to exclude the selfcontained jars, and edited path of run_example_server to use the lib/ directory instead of selfcontained jars, thus reducing the size of the assembly tarball from 150MB to 50MB.",2013-09-04T19:53:38Z
491e4965ae0873cd671fc3074e6c3abc12f24b08,Merge branch 'master' of github.com:metamx/druid,2013-09-04T19:43:55Z
7e4719fe51178e5c1449702f244c62af89a553f9,"1) Add unit test for NoSuchElementException as seen by Pablo.
2) Fix unit test",2013-09-04T19:43:42Z
dadd9bc5ce97c68f6dc411a5072dcf90467f891c,"1) Rename MetricSelector(Factory) to ColumnSelector(Factory)
2) Hard coded plugin as a first pass, won't actually work for anyone else.",2013-09-04T16:19:46Z
740c70ed069f127e90abed759fc99f89f6601bfc,1) It's good when unit tests actually pass...,2013-08-31T22:27:15Z
3c39f90c89167c475681dabd51c239df54c9f874,"1) Move Firehose interface and dependencies to druid-api
2) Move DataSegment* interfaces and dependencies to druid-api",2013-08-31T21:43:26Z
5ab671050e85fa4cc1cc350ed0f2f3e6ffe55c2f,"No more com.metamx.druid, it is now all io.druid!",2013-08-31T00:41:53Z
bd0756e36021452c8d13b92af26a819b973be5c6,"More stuff moved, things still compiling and tests still passing.  Yay!",2013-08-30T23:58:28Z
56e2b956d0d7634b1f689554ee06bc6eaa4df7a8,"OMG!!!  A lot of stuff has been moved.  Modules have been created and destroyed, but everything is compiling and unit tests are passing, OMFG this is awesome.!",2013-08-30T23:20:34Z
2e26a4d8b9bf91f6a1175733bdcb37a30852dcfa,1) Add back segment-related interfaces and classes to new druid-segment module,2013-08-29T22:23:16Z
386cc79420f7e4e441246ca1aa87fdd81eb9b349,[maven-release-plugin] prepare for next development iteration,2013-08-29T22:20:10Z
83e5e5434e7b1edd0142e9ad746efb07f7a30780,[maven-release-plugin] prepare release druid-0.5.50,2013-08-29T22:20:05Z
c92fc0777b0f41db4d66145bc38a1ca6f8ef610f,"Merge pull request #233 from rjurney/master

Changed port number for realtime server from 8080 to 8083 to make the ex...",2013-08-29T22:16:23Z
3e9d2d497dde2212db6ba1cc7cde7250f8b4faf1,Changed port number for realtime server from 8080 to 8083 to make the exaxmples work with the new realtime config.,2013-08-29T22:14:09Z
846b3c9b94b69c275772b148f19a583d9f95505d,1) Spell better,2013-08-29T21:51:05Z
ca2c56d8272e0f3386882a97e5a8c30da8ecf839,"1) Remove PostAggregator and put it in druid-api
2) Remove io.druid files from client",2013-08-29T21:50:09Z
3c1b0a8a025c27096c50b39cfbc16f73a0f9ae12,1) Make it compile after merging with master,2013-08-29T21:47:17Z
cb90ed05b009801862ca0eaac2acbfc7340474fe,"Revert the previous commit.  After going down this path, I realized that extracting things enough to allow Queries to be extended without depending on Druid proper was going to lead down a very nasty path.  So, I've decided against that.  Extending queries will require a tight dependency on Druid proper.",2013-08-29T21:45:03Z
2a46086e2077892a0c47826e38378b02441b60c0,"1) Didn't remove the io.druid files from client.  Remove those and make sure things compile
2) Switch DefaultObjectMapper to CommonObjectMapper
3) Create new DefaultObjectMapper in client that has Query stuff registered on it by default",2013-08-29T20:25:36Z
c5760f43e477e0b5b1ac9a2d58618331ab5d2ee9,Whitespace!,2013-08-29T19:02:46Z
7834ffe6fc4d0fde325fae57b5ba52bd548cc98c,Make LinearShardSpec require a partitionNum,2013-08-29T19:00:28Z
5ad023cd3f440043bcc8f028f1e9ebdef069e1f1,Merge branch 'master' into guice,2013-08-29T18:59:59Z
d9a8340dc7101ecf10ea6e7442faa74e43236243,[maven-release-plugin] prepare for next development iteration,2013-08-29T18:29:54Z
5118e1da12528bde69c9dc34946ce6e2912c7a57,[maven-release-plugin] prepare release druid-0.5.49,2013-08-29T18:29:49Z
2c14f5f83d7a1fb24bb481fa159ff315edd24f94,Merge branch 'master' of github.com:metamx/druid,2013-08-29T16:48:47Z
df2465eb9945cf8308db1e8be75ba34624aaad6a,"1) Add unit test for groupBy query with dimension that doesn't exist
2) Fix group by query to work with new unit test, fixes #232",2013-08-29T16:48:34Z
15ec8e7054054c4d104f80a9a46ce5e4b53a95a0,1) Remove the Searchable interface,2013-08-28T23:51:19Z
c02d887cfe919381da7709477fc133ce107d5a62,"1) Rewrite SearchQueryRunner to not require StorageAdapter to be ""Searchable""
2) Extract SearchQueryRunner out of SearchQueryRunnerFactory
3) Extract ColumnSelectorBitmapIndexSelector out to make it reusable",2013-08-28T23:50:40Z
1f37e962f65dc59978b0de0389c51c929d235ad6,"1) Delete the files that have moved to druid-api and get them through the druid-api dependency.  Still need to fix Searchable on StorageAdapter, but other than that, everything should compile.",2013-08-28T21:18:40Z
bfe96739a3c445e15e16c8c0dc60af2d663b357d,"1) Move various ""api"" classes to io.druid packages and make sure things compile and stuff -- continued!  Come classes didn't get committed?",2013-08-28T20:52:55Z
9c30ced5ea22372b113854bcccda9a75d3fdad2b,"1) Move various ""api"" classes to io.druid packages and make sure things compile and stuff",2013-08-28T20:50:59Z
8c3faff53e207f4dec9749c1a83dbb564d904dfe,"Merge pull request #231 from rjurney/master

Removed zk references from realtime config",2013-08-28T17:34:21Z
fc60158273b57912613909f26c800b374a475077,1) What is an .Rhistory file and why is it checked in?  It's not! (anymore),2013-08-27T19:37:12Z
ee1e73cfa18144085e928b01b90435562a1ea33c,1) Make it compile again after the merge,2013-08-27T19:36:01Z
8097450d8c9ed80debbe0d7fa33215719347b88e,Some things that didn't get committed with the merge for some reason!?,2013-08-27T19:29:03Z
5fa944dd26ecf8e7337f2e5a3c5fdadd6cc67646,"Merge branch 'master' into guice

Conflicts:
	client/src/main/java/com/metamx/druid/coordination/BatchDataSegmentAnnouncer.java
	client/src/main/java/com/metamx/druid/curator/announcement/Announcer.java
	client/src/main/java/com/metamx/druid/query/filter/SelectorDimFilter.java
	client/src/main/java/com/metamx/druid/query/search/SearchQueryQueryToolChest.java
	indexing-service/src/main/java/com/metamx/druid/indexing/common/tasklogs/S3TaskLogs.java
	indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ForkingTaskRunner.java
	indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/WorkerCuratorCoordinator.java
	indexing-service/src/test/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunnerTest.java
	pom.xml
	server/src/main/java/com/metamx/druid/http/MasterMain.java
	server/src/main/java/com/metamx/druid/http/MasterServletModule.java
	server/src/main/java/com/metamx/druid/master/DruidMasterConfig.java
	server/src/test/java/com/metamx/druid/master/DruidMasterTest.java
	server/src/test/java/com/metamx/druid/query/group/GroupByQueryRunnerTest.java",2013-08-27T19:27:32Z
3617ac17fca1a2cc8712ecbadd20658dfa6f3e5c,1) Eliminate ExecutorMain and have it run using the new Main!,2013-08-27T19:11:05Z
2dbd49b6e603a3aca3affb3321eec816004b1122,Removed zk references from realtime config,2013-08-27T03:34:24Z
269997dc94afaf328b281d33e78a0847702e14fd,"1) ExecutorNode is working, except for the running of the task.  Need to adjust it to be able to run a task and then everything will be wonderful",2013-08-26T23:08:41Z
6636ef1ea815c86f4ff3c93b479f7ae87bf498d0,Remove unused files again,2013-08-23T23:00:56Z
55dbda2046c9fd09f938f852e15b2debbe1a828b,1) Worker appears to be running!  It's also now known as the MiddleManager,2013-08-23T22:59:48Z
613ebd54b59edc30d6fb44efa78f02c3482bf9dc,1) Delete unused things,2013-08-23T19:32:14Z
b897c2cb2254371d1754bb7a0d02e5e8b71c3908,"1) IndexCoordinator appears to work as the CliOverlord now, yay!",2013-08-23T19:11:34Z
91c160ba0d61bd018cf2ca60df973ab654c1068b,Adjust maven assembly so that the tarballs are not released to our artifactory on release.,2013-08-23T18:42:46Z
344ec1ec2f89b72ade56bf7c2ef9526da7bada91,[maven-release-plugin] prepare for next development iteration,2013-08-23T18:20:09Z
5b0de6eb5c0976032cee76ffd80ea64b53ebd1ee,[maven-release-plugin] prepare release druid-0.5.48,2013-08-23T18:20:02Z
7540ad707168743cba773096dc05f9450b8efff8,"Merge pull request #230 from rjurney/master

Fixing bug where twitter example does not run.",2013-08-23T15:02:06Z
1669e46338c1e38804d8a069aa161f92bfecaf60,Fixing bug where twitter example does not run.,2013-08-23T02:48:21Z
1aa99f5878318c9023d8e160ccda433d7cab7218,"Merge pull request #218 from metamx/guice-rt

Port Realtime nodes to guice",2013-08-22T23:00:12Z
965c1a4353845e5ca6746e2b201bb2752e3a138b,"Merge pull request #229 from metamx/fix-index

Fix persist of empty indexes in index generator job",2013-08-22T22:46:52Z
261ef7ce56a1c4fcc66f375617f442270b5eef49,add some fixes,2013-08-22T17:56:50Z
d11d0a8284ab3a3d1ab2211af70a67c3134e64be,fix according to code review,2013-08-22T17:49:46Z
6a8c160740c04487e13f17f30fab73daf05b7fbb,update code according to code review,2013-08-22T17:46:05Z
3f51ef63a457433baaa49eccad0e30011900676b,Merge branch 'guice' into guice-rt,2013-08-22T17:20:53Z
778fd0f10ebf9016d2be789d8b2cbba43501b01f,Fix persist of empty indexes in index generator job,2013-08-22T17:16:43Z
4102dbd1e06a61e49c734201b73601c5106540ca,[maven-release-plugin] prepare for next development iteration,2013-08-22T04:50:55Z
0daa2a95fe057c446d6806df9df1baa2c5542e3c,[maven-release-plugin] prepare release druid-0.5.47,2013-08-22T04:50:46Z
d92ab8bb58662d0926e0f4c11d8585bf2c883528,more logs for RTR,2013-08-22T04:47:59Z
b1d0f989ec6a8bb68fc96b6c079179c43d435d00,[maven-release-plugin] prepare for next development iteration,2013-08-22T03:28:15Z
ab467bf42a341f292999cc3ce235d102c72bb639,[maven-release-plugin] prepare release druid-0.5.46,2013-08-22T03:28:06Z
6bbda6f043a6a90a149bfbc2f4f22d5e31aae433,Exclude org.apache.httpcomponents stuff from geoip2,2013-08-22T03:22:53Z
1037a48a8e077270043f818f394814f45b00e7eb,[maven-release-plugin] prepare for next development iteration,2013-08-22T01:55:49Z
6b9ec95f012770168bb8d83ac6faff59ecf29268,[maven-release-plugin] prepare release druid-0.5.45,2013-08-22T01:55:40Z
0fa8b48fb73d2489fb89cf2ce500532462b7d565,fix selector dim filter check for value null,2013-08-22T01:51:44Z
ef12439df9b6ddb906a8b04259cff1878e84de4a,add wikipedia realtime example,2013-08-22T00:55:52Z
5b6273ac3d48393df5cc0d61c480ebf625fe4fc0,fix null values in wikipedia decoder,2013-08-22T00:56:16Z
71b19af61f576fe3499521156df0fabee6ba49ac,fix missing json property names,2013-08-22T00:38:30Z
138860696a90902e80a8a5b88b209f09455979be,"Merge pull request #225 from metamx/num-shard-spec

NumberedShardSpec",2013-08-21T22:24:59Z
c56c6b8bf513fc783db5d01cafb0d41914845016,Fix test oopsie,2013-08-21T22:05:37Z
94b5c292b93052afb32ce897baa0dd8cb3a3fb0b,Fix test oopsie,2013-08-21T22:05:29Z
9b9a2a9f53e4d02ca1214313eaa54855c54a1beb,"Merge branch 'master' into num-shard-spec

Conflicts:
	common/src/main/java/com/metamx/druid/partition/IntegerPartitionChunk.java",2013-08-21T22:01:32Z
08a95103bdb9d1192186ff08f6192e31f65fafef,More NumberedShardSpec serde tests,2013-08-21T21:45:24Z
b4310d6cbfce1fcf0f520e15f067c37514777288,"Merge pull request #219 from metamx/wikipedia-firehose

Wikipedia firehose",2013-08-21T21:34:07Z
7913b27066051edaa6e3b0139b26cb1ff0cada42,reuse tmp file for geoip db,2013-08-21T21:12:39Z
8980a4ace9f73a8093bd30a80951ac6b420ed100,"Merge pull request #227 from metamx/version-in-status

Add maven version to status information",2013-08-21T20:59:19Z
3adcaab1ef4bb221b9dbae86a3d8548b9d2f3a0b,"Eric said I did too much work

This reverts commit d5b3f7103359587ad60b5f71b31454f6e6dc71ba.",2013-08-21T20:58:02Z
0f4a1328071b61c643d626191ef37b78fcb9c5f1,address code review,2013-08-21T20:57:50Z
d5b3f7103359587ad60b5f71b31454f6e6dc71ba,replace StatusServlet with StatusResource,2013-08-21T20:45:39Z
b95d9498ca59300da02ae7b5c15977d023aa6864,add version information to status,2013-08-21T20:37:56Z
3bcee8cdb326ac5a40579e91d36da1865888c1be,"Merge pull request #222 from metamx/rt-ut

Basic unit tests for realtime functionality",2013-08-21T20:33:39Z
ac32c6f27cad204eb4a6e6871c0d6e301e1e3a39,fix tests according to code review,2013-08-21T20:23:38Z
54ad854471ed888965bfb1fb0ca13fa926567559,Merge branch 'master' into rt-ut,2013-08-21T20:15:02Z
c4b4f8908e8b1aa36ecd0f98f1288bde8e73f2b4,"Merge pull request #226 from metamx/bug-fix

1) bug fix for RemoteTaskRunner removing workers race condition
2) partition chunks not being sorted by chunk number",2013-08-21T20:05:18Z
54f00479cc8e950faddd295288749e762c037da7,add explicit null check for moving tasks from pending to running,2013-08-21T20:02:35Z
88661b26a04dd89fb914dc3f780d592576d0d634,bug fix for RTR removing workers race condition and partition chunks not being sorted by chunk number,2013-08-21T18:14:54Z
ed666d9d5f5a02adf677cc14eccd83662aad08e7,[maven-release-plugin] prepare for next development iteration,2013-08-21T02:37:52Z
66dcfe8c3e2326754468bd48c75f050ad03135b5,[maven-release-plugin] prepare release druid-0.5.44,2013-08-21T02:37:44Z
e283de68318f4e0568cc703c357e695c72d8bce1,fix another bug with RTR to remove things correctly from running tasks,2013-08-21T02:34:30Z
baedacf9708d9c04b373f83df3d75b6aaf72aaa9,[maven-release-plugin] prepare for next development iteration,2013-08-21T02:29:05Z
a4eb025ba7142560e8c65bf24780dc7a1356dead,[maven-release-plugin] prepare release druid-0.5.43,2013-08-21T02:28:56Z
d02be16245f20e376e522b5ac6ee4f137ba415a6,fix RTR closing PCC too early,2013-08-21T02:25:16Z
a3793eeba4ac4e0af29d9ee9b16138627f412be9,[maven-release-plugin] prepare for next development iteration,2013-08-21T00:58:28Z
b792bf2ba53dc3591430e2edfa86110f1d1440dc,[maven-release-plugin] prepare release druid-0.5.42,2013-08-21T00:58:22Z
9cc75804274de6f04031ceb9a7e59fdf1c5b46e9,Merge branch 'master' into num-shard-spec,2013-08-21T00:54:01Z
ff8642f5a02f7dc38dc0ec26d7e53de030febd17,"Merge pull request #224 from metamx/task-announcement

Task announcement",2013-08-21T00:52:53Z
70ab225770733beff3528173be7774454ef155ea,Add missing license headers,2013-08-21T00:50:10Z
9c5fcc0984aa25e7dbae0c20a9af04d65e7d34f7,Add missing license headers,2013-08-21T00:48:15Z
8388cbf69d4ae1ec26993c1128daa97a8c0e4803,"NumberedShardSpec

Each shard has a number, and there are a fixed number of shards that will
form a complete set.",2013-08-20T19:54:14Z
455645e72310a14ccff623e1b1d8e4baabffe1ca,Workers announce TaskAnnouncement rather than TaskStatus,2013-08-20T23:14:36Z
960931476579c5db0175fe882e8de3445eda9bef,"ForkingTaskRunner: Make TaskInfo into ForkingTaskRunnerWorkItem

This allows the API/GUI to return reasonable results when the primary
task runner is a ForkingTaskRunner.",2013-08-20T21:04:28Z
4e8325f963acc536fded508cd4e0abc5a6bacf9f,Better tests and error messages for TaskResource,2013-08-20T21:01:38Z
b102d67173da3ca972abf7fcd0a2f779ef9870a3,Fix getResourceManagementScheduler for non-autoscaling configs,2013-08-20T20:39:05Z
25e330780ca35fa44046888b99d076b2a3a46e02,Simplify AbstractTask constructor,2013-08-20T20:38:52Z
d8493f8e26e7f7a76f281c8b9b886b978d8b651b,"RealtimeIndexTask: Fix ""resource"" serde",2013-08-20T20:02:52Z
9c145f5ce3483c68e24fa7ae92bc28a219c4c1c1,basic unit tets for realtime functinality,2013-08-19T22:00:10Z
ddcc1b53e094bba45028baae7855243f88cdb690,allocate correct buffer size for search query caching,2013-08-16T18:36:30Z
d208b535a6dd61d84e6ba5d809000f9ad351075b,fix caching bug with search query limits,2013-08-16T18:34:54Z
47ec2407037d72a729e4fcec69ec3c24e7102060,[maven-release-plugin] prepare for next development iteration,2013-08-15T20:47:57Z
33e2fb3e21f6369bd09aec38397df95369f741cc,[maven-release-plugin] prepare release druid-0.5.41,2013-08-15T20:47:48Z
aae2d90fe133ad45b755ef7f9b1354377fc458e4,"Merge pull request #221 from metamx/fix-is

Fix the case where a task completes during indexing service coordinator restart causes improper cleanup",2013-08-15T20:28:29Z
5c600c701274b359b17b09bffafb9f0e986297aa,change error msg to alert,2013-08-15T20:27:41Z
4e7dac18b9753ac47394358e56756790cacbbe10,fix condition where status would be returned even if worker not running task,2013-08-15T20:12:57Z
1fb6107a37566733b5279004ad8e381ccd1c3369,fix the case where RTR does not clean up a completed task on startup,2013-08-15T20:09:02Z
071e8cb2f33732bef17aec9ac39cadf7d4a04f9b,updated javadocs,2013-08-15T18:07:55Z
3f33ca15b057a5771b64ceda6e35fc7125dfa797,refactor namespaces and add docs / license,2013-08-15T17:58:03Z
0c5a906a1bd449bac3b27f12674c1b462e1140ac,Merge branch 'master' of github.com:metamx/druid,2013-08-15T00:34:22Z
ba5ed4c9d4625f864824facdfaa8dee29aefb2ac,1) Fix bug with NPE thrown when requesting a dimension on a GroupBy query that is not dictionary encoded,2013-08-15T00:34:11Z
a0fcd02b3cd6297864344783ec935d68b39a7b38,[maven-release-plugin] prepare for next development iteration,2013-08-15T00:03:40Z
b6c445c726ea1768f337cb55e09ec6a89f52f187,[maven-release-plugin] prepare release druid-0.5.40,2013-08-15T00:03:28Z
dacee9ed202a401fd73f0edb8148ace4a8614cfd,Fix various InputRowParser serde issues,2013-08-14T23:51:02Z
70b3640b852a1a22798a6819711fb560d329ca6f,move dependency version into main pom,2013-08-14T21:31:55Z
6735ae4ecd8a29c0b55776270e7d301a323df6c2,add ip geo lookup,2013-08-14T21:28:29Z
36d02ab943a326a173776f7a82e0fb6e9d45a954,[maven-release-plugin] prepare for next development iteration,2013-08-14T21:05:49Z
8c841e90a48d5407682617f02340b77b378c31e9,[maven-release-plugin] prepare release druid-0.5.39,2013-08-14T21:05:39Z
fc1018bc3f83effdc34d2645700cb2965bc4d003,revert removal of master loadstatus,2013-08-14T21:02:47Z
761a411b160030339c5329ace2c8442ea1713d29,[maven-release-plugin] prepare for next development iteration,2013-08-14T17:13:50Z
4dd727d9748bd96e0aeba7a22580d9e3110d75ee,[maven-release-plugin] prepare release druid-0.5.38,2013-08-14T17:13:34Z
c0624d95911a40e58dc490de6bf84103a340771c,Merge branch 'master' of github.com:metamx/druid,2013-08-14T17:04:04Z
a7ef5b8b70e0fa642f437ad0b75b38639352686d,1) Fix bug with SingleSegmentLoader.StorageLocation keeping track of its storage size incorrectly.  Add unit test ftw.,2013-08-14T17:03:47Z
7ebe053ac1abce6e3b218beaee801ebbc6da2ecb,Fix bug with segment loader counting thingie,2013-08-14T16:37:22Z
1cc1d0be5f801646f951dd1b3eaf820cb4318e40,remove example code,2013-08-14T02:05:56Z
4791d0466dc0b2ec1df4e7ab8a11324d066deb78,"Merge pull request #198 from metamx/loadBalancer

Improve runtime of segment distribution algorithm",2013-08-14T01:47:43Z
c2305a82f9c32ff3331627111da1ca6ec4595f15,"Merge pull request #209 from zanox/kafka-protobuf

Kafka protobuf",2013-08-14T01:38:27Z
8ccac2f13d670fd9c4069079c007d9eb1378ae72,basic wikipedia firehose factory,2013-08-14T01:35:07Z
9870cab8558b4e0340ff1ccd8a6f38d16f9ed8dc,[maven-release-plugin] prepare for next development iteration,2013-08-14T00:21:56Z
e4c998cfefc99e45576151c1ff6b55d547d58c7b,[maven-release-plugin] prepare release druid-0.5.37,2013-08-14T00:21:46Z
4dae2feff3e80bef655c84ed26ed258f84c615e3,fix broken pom,2013-08-14T00:19:11Z
6d7b8bc8a66dfc6274c07da70fd255a3022ab41c,"Merge pull request #217 from metamx/server_manager_unit_test

Robustness fixes for properly keeping track of when Segments are accessible",2013-08-14T00:15:13Z
85ee8bb26781cf4245ad04fea73ef0f8f8c90bdf,port realtime to guice,2013-08-14T00:08:45Z
145e08682cba02fdbaf9ad71763542f3ee8174da,"1) Add check in ServerManagerTest to make sure that the Segment has been ""checked out"" before the factory ever sees it.
2) Some code readability changes to ReferenceCountingSegment",2013-08-14T00:01:24Z
a5855fb7490411765c630394f83d4cd1306e99a5,"1) Fix ServerManager to make sure that it ""checks out"" the Segment before it starts processing",2013-08-13T21:51:14Z
28c7e78a912b530fddfe213766d280bc3b434292,1) Fix ReferenceCountingSegmentTest to actually work again,2013-08-13T21:28:44Z
d1e548aa32ccb12014ecb159b7ce5f61f3c12759,add toString to NoopLimitSpec,2013-07-18T18:45:30Z
41347c82bb8f96a734c0db96cfa9616ea9809678,fix broken server manager tests,2013-08-13T19:07:45Z
070d8223457a735cfada3f3951a053f4f3a3baab,fix broken UT,2013-08-13T19:01:24Z
08318af7f7226c2fc6bd9f6f2ce343831ae4114d,Merge branch 'master' of github.com:metamx/druid,2013-08-13T18:54:32Z
13e522c8a7cec0b4d94dbf3cb03d2b6f58d7bb34,update the server manager unit tests to check for the case where a segment may be accessed in toYield calls before an increment occurs,2013-08-13T18:53:41Z
246bd0fbaa15b4051e905d8859a0bb5d17c3ffac,[maven-release-plugin] prepare for next development iteration,2013-08-13T14:27:24Z
a2e94416931b9fbae76b6c932e951966de3837c8,[maven-release-plugin] prepare release druid-0.5.36,2013-08-13T14:27:18Z
1d1cb045f04c6390da79666598c390ed5bc46b3a,RealtimeManager: Handle FormattedExceptions at any stage of processing other than hasMore,2013-08-13T14:23:37Z
d4fc069e014e0c236f6718ae68e8c15bc94827e6,[maven-release-plugin] prepare for next development iteration,2013-08-13T01:58:14Z
dd8c96c734a97241b5dc05383bd60b7c9f3e58af,[maven-release-plugin] prepare release druid-0.5.35,2013-08-13T01:58:06Z
08e2b94e413efd7a2fb7747b078c90472a46dd8e,"Merge pull request #216 from metamx/announce-fix

Make batch data segment announcer thread safe",2013-08-13T01:54:23Z
5cb1475a91f41861943c7df689f59bf62a057cf7,fix previous fix because multithread is not correct,2013-08-13T01:53:50Z
bb18b162aba3c0ce53955261879c6780471cb41e,"1) Include new version of java-util to fix issue with resources not getting closed when an exception is thrown sometimes
2) Whitespace changes to GroupByQueryEngine",2013-08-13T00:57:30Z
5ff216838dc1b119dcbe4f31dcf38271e1d7fc4e,make batch data segment announcer thread safe,2013-08-13T00:53:06Z
d739b15380aea506a7ae62901cc2fc560cd2f14f,"Merge pull request #215 from metamx/s3-retries

Retries for S3TaskLogs, S3DataSegmentPusher",2013-08-12T21:36:12Z
8d7a4f4493ee93dfb8b76145519dc385f584e09a,"Retries for S3TaskLogs, S3DataSegmentPusher",2013-08-12T21:27:34Z
1f4e0ea40cf115852511d12d05bf511d257b27ff,[maven-release-plugin] prepare for next development iteration,2013-08-12T20:21:29Z
1c2ad4f08c96f7a2e5a5e4325d513f1e22662de5,[maven-release-plugin] prepare release druid-0.5.34,2013-08-12T20:21:21Z
de5e746d48decf4b5d16be1516731667557c9921,"Merge pull request #214 from metamx/startup-fix

Fix Zk Coordinator failing startup due to server manager exceptions and cleanup example configs",2013-08-12T20:17:58Z
a39eb65edb7e04ba8bba43cedb5d0ac87d9d865a,change summary of segment failures to one per line,2013-08-12T20:15:35Z
dd20950f8ae2342455e6e0a6fd869ffa21ea2153,adding missing continue,2013-08-12T20:07:29Z
2ec2957207874e7c3f0ff2e2050794189268ff89,clean up the error reporting code according to code review,2013-08-12T20:04:48Z
0c360c05c2619b3351e8a0dfe00d2786ec9acfef,better handling of exceptions during startup,2013-08-12T19:56:59Z
2f728f3478e85ea05d22cbf27783f83df5de8042,fix zk coord to not fail during startup exceptions,2013-08-12T18:33:42Z
e8ab64d6a8e85ed3e7743e19ba56a39e6d5c63fb,adapted changes after merging of branch 'master' of github.com:metamx/druid into kafka-protobuf,2013-08-12T15:43:09Z
3f32ef7bbcc93490a18968c5ecc5c69ad10ef9c2,Merge branch 'master' of github.com:metamx/druid into kafka-protobuf,2013-08-12T15:42:40Z
7842ade02cddbe549f527e3a782e25c36c15756f,added comment on a possible protobuf message based in put row optimization,2013-08-11T19:11:25Z
3ec2761a101af894811c7dcc9c5d1f09debbb1d0,removed illegal start of expression error,2013-08-11T11:55:52Z
5084fc0642a4a2470becee0eb1a5618aa03b6270,fixed ByteBuffer usage,2013-08-11T11:51:53Z
d6992d96d624cbb86a17ba33edd257a1eaa61e81,use ImmutableList's factory method to build a defensive copy of dimensions,2013-08-11T11:50:53Z
55267ca0e4ba8e52fb5e9d3fcce7a167718eec81,removed @author tags,2013-08-11T11:44:13Z
01db89ac6eef71601a29c419943e67be8ff35516,fixed issue with web console. Cleaned up code,2013-08-09T07:33:40Z
68a3f1ab79feb1677e4174728e5209208a54bad9,[maven-release-plugin] prepare for next development iteration,2013-08-09T05:15:04Z
ce5679554dc96cb8dc323914e2b22b6ad95d12f2,[maven-release-plugin] prepare release druid-0.5.33,2013-08-09T05:14:55Z
a190269faa8145157f901b825c4f665de5cb1e56,fix druid master segments getting stuck bug,2013-08-09T05:06:41Z
fc5e15f72b06de7fe8cf6de8375d4c176a7bb6b5,merged changes with master,2013-08-09T01:11:33Z
abe347efd3450958cf944b30d2b8d1c2a8044da7,merged with master,2013-08-09T00:21:57Z
3e8406a2e65c8c8f96dc0a0d8b229e22033872b2,"Merge pull request #207 from metamx/dynamicConfigs

Make some master configuration properties dynamically configurable",2013-08-08T23:42:08Z
764863d6f5692fde63e4a2f6cdd627cd8eec4e0a,made volatile. fixed parens,2013-08-08T23:40:10Z
8a8ea5d028922dbf40c0809a4aaa65239ebe2e6c,removed test annotation from profiler,2013-08-08T23:38:24Z
01b35ec81938a6754a88fdeda2cf96eccbf4be75,all tests passed. Ready for merge,2013-08-08T23:23:26Z
eed9e1b3730df685e31250048c2ad208f2e74e9b,merged with master,2013-08-08T23:14:06Z
0b24ea710ce00b4cbc1276d5cf4ae964549ec09b,fixed paths,2013-08-08T23:10:31Z
3a298681e4711c74fb4342994acde2afe46b88e9,fixed formatting,2013-08-07T17:59:54Z
c4f0e4d96d75434ea8e9b62b8ef846ed73dda4b3,fixed with Erics feedback,2013-08-07T17:53:37Z
ddc2e87c4c0e065073ccaf1572d8953417afa664,[maven-release-plugin] prepare for next development iteration,2013-08-07T04:21:28Z
ffbcd18cdc1e9ed84f77cd51a3ddea187022e954,[maven-release-plugin] prepare release druid-0.5.32,2013-08-07T04:21:18Z
df883a9823b4c1b84a2e5543fcbea121cdaeddb5,learn to type,2013-08-07T04:18:36Z
4617d37e28a052be85c203e2f74fcafb47bcf6dd,[maven-release-plugin] prepare for next development iteration,2013-08-07T04:08:02Z
53b248dc283ec84f46a367806d4dcbf17711a71b,[maven-release-plugin] prepare release druid-0.5.31,2013-08-07T04:07:52Z
795657aedfb17a36999ccb65f3b87626c8ef444c,fix bug where workers with same capacity would not be unique,2013-08-07T04:04:13Z
99a3de15979528d7e264cc9303a6e009795b49fc,[maven-release-plugin] prepare for next development iteration,2013-08-07T00:41:58Z
c0ccfd66ea511e09bd96396714fed8256962c8f4,[maven-release-plugin] prepare release druid-0.5.30,2013-08-07T00:41:51Z
02f9cc3c7a94c995312ae6f80fba8e353f58d6cb,"Merge pull request #212 from metamx/realtime-npe

Rejigger exception handling in standalone realtime",2013-08-07T00:39:01Z
ec53a30c6e3eac9bc280c0503bf45afc498a7bfc,"Rejigger exception handling in standalone realtime

- Throw FormattedExceptions on null or unparseable timestamps
- Throw away events (and increment thrownAway) on non-FormattedExceptions in the fire chief",2013-08-07T00:32:08Z
930b089f7f64332348e5251e6b0f4d02c05ab96d,[maven-release-plugin] prepare for next development iteration,2013-08-06T23:20:37Z
dd5f5ae49b00a2a07420bd916c0c9ed074730e50,[maven-release-plugin] prepare release druid-0.5.29,2013-08-06T23:20:29Z
5f292143e03446822f217ec10066cf2ec8d6a4e7,disable merging segments with linear shard spec,2013-08-06T23:17:49Z
ebf1ac47f03e9cdd4be6dd64bb92cc2be982d457,Merge branch 'master' of github.com:metamx/druid,2013-08-06T22:38:25Z
9d0e4a94f06f203f055e2955478bf78487963b9f,alert when task fails in RTR assign,2013-08-06T22:38:17Z
f31ee552d0f942958e28ce2e9d7c98dc6867b904,fixed with fj comments,2013-08-06T22:03:07Z
0d5b222f8fcdf58891eb84516f509e9cced4a493,removed SlickGrid :(,2013-08-06T21:30:35Z
6124ecd9cb40b6299cc4840476690bc091b9c8aa,fied some tests,2013-08-06T21:26:08Z
4a64ce37ed3207c858a1dee41e2a6d366218d8be,"Finish the merging, wtf IntelliJ?",2013-08-06T20:34:24Z
eee1efdcb5e261684c6ffcc9d06d069d12362e38,"Merge branch 'master' into guice

Conflicts:
	client/src/main/java/com/metamx/druid/client/DruidServerConfig.java
	indexing-service/src/main/java/com/metamx/druid/indexing/common/index/ChatHandlerProvider.java
	indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/TaskMasterLifecycle.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/executor/ExecutorNode.java
	indexing-service/src/test/java/com/metamx/druid/indexing/coordinator/TaskLifecycleTest.java",2013-08-06T20:33:31Z
51f648ec114df19828de663965770d84038151b6,1) Rename QueryToolChestModule back,2013-08-06T19:05:56Z
69f7831d826327ac1ac84f9dbe3c2f441904ee94,"1) Rename QueryToolChestModule because there was a case sensitivity issue, grrr",2013-08-06T19:04:04Z
c3ca9f5a3b7c63d3d914495c1d344dc0daaed359,1) Rename MemcachedCacheConfig back to what it should be,2013-08-06T19:02:19Z
9f71d42314644a4842956a459eccaa3ca24be407,"1) Broker works with Guice
2) Extract ServerViewModule to handle various ServerView thingies
3) Extract QueryToolChestModule and QueryRunnerFactoryModule to reuse code for configuration of Query stuff
4) Extract QueryJettyServerInitializer to reuse between Historical and Broker nodes
5) Remove ClientMain, BrokerMain and BrokerNode",2013-08-06T19:01:52Z
ebba2d66a36345f10a10c115eb814b2ad85cbc65,results good,2013-08-06T18:46:18Z
e40d5b55ef4d06de8a213b4bbacf4deb3ec68b58,testing speed for one run,2013-08-06T18:40:49Z
ba847bff32e17c8bb169b540c9bad7669a6abf1c,[maven-release-plugin] prepare for next development iteration,2013-08-06T02:58:40Z
7101d9ad2e3bd44f8a54de99171242ecf7995e21,[maven-release-plugin] prepare release druid-0.5.28,2013-08-06T02:58:34Z
a1904c9b3b2797cf1a403585d28b8dba46488fc2,ChatHandlerResource: Fix Guice type errors,2013-08-06T02:56:03Z
db695f49c269cf66a4994d6d2eea9939c2dc7b9c,[maven-release-plugin] prepare for next development iteration,2013-08-06T01:26:20Z
c22e5b7ee00392d683a93aff82ba393712d4e270,[maven-release-plugin] prepare release druid-0.5.27,2013-08-06T01:26:10Z
d1b2a5a4b3bb21e4b98b1250ca4c4a3e6dae63f0,fix indexer console serde of running tasks,2013-08-06T01:22:12Z
8ff0b53df442c4f776ec9f5c2c9b4c3a55871dc8,[maven-release-plugin] prepare for next development iteration,2013-08-06T01:00:46Z
1d3729906d17b8b71cfdeac303b345669129524d,[maven-release-plugin] prepare release druid-0.5.26,2013-08-06T01:00:36Z
479f0cefca15520f5d046120a410cd637473511b,fix bug with RTR not assigning tasks when a new worker is available,2013-08-06T00:57:59Z
90e082463befd2f4ff6cef95031dce013bd3ccb7,[maven-release-plugin] prepare for next development iteration,2013-08-05T23:10:19Z
eb276d34d752b97e3569983128a3a7f5ffc81fa3,[maven-release-plugin] prepare release druid-0.5.25,2013-08-05T23:10:11Z
626cf14a6e42fa0a2d144e8e16940e09bafd754a,fix bug where the curator config name was changed in one place but not another; make some info msgs into debug msgs; fix zkworker serialization,2013-08-05T23:02:26Z
575dfe3679271253f7e0ca010f9f87eb0e7d417b,replication working too,2013-08-05T21:51:58Z
a95d9c46e2f7bb9bec968f8392ac62ccda6c0283,[maven-release-plugin] prepare for next development iteration,2013-08-05T21:47:35Z
8e1f4d3256d44e9bf46d37181b312ec5eab8a0a3,[maven-release-plugin] prepare release druid-0.5.24,2013-08-05T21:47:26Z
66c658305f04f8711fc4bb545223c3477aa4dada,Merge branch 'master' of github.com:metamx/druid,2013-08-05T21:44:09Z
35f89d7232cee3ff7002e0e5c890bd5d96070680,"make RTR idempotent to multiple run requests for same task, because higher level things in the indexing service require this behaviour",2013-08-05T21:44:01Z
efd34f3a8bfb5c868b33667cccb6985c210226d0,TaskRunner: Fix comment,2013-08-05T21:20:31Z
293c0e8418a503d1ad173abffa172f1755781366,"1) Clean up the servlet registration stuff, resource registrations on CliHistorical weren't working, they do now.",2013-08-05T20:58:45Z
1045aac4b837c8f0744718adead35f89450b02b5,finished profiling here,2013-08-05T20:53:40Z
d64bc2f7621adc500106286141b7f386a6f56899,1) Eliminate Old mains() that aren't needed anymore.,2013-08-05T20:33:43Z
540c4885d7a01d13e0ac161970d09024b34f016b,fixes to make profiler work,2013-08-05T19:36:43Z
fbb1211cbcacb8f8cd6a33d70552168fba75963d,[maven-release-plugin] prepare for next development iteration,2013-08-05T18:44:36Z
22a90d36b7592c704b1c34f2d45cad925f313ae1,[maven-release-plugin] prepare release druid-0.5.23,2013-08-05T18:44:28Z
3c808b15c30597befac551ebbb94c8e0c6c1b5cd,1) Fix HadoopDruidIndexerConfigTest to actually verify the current correct behavior.,2013-08-05T18:37:20Z
d6ac75cff5b4f6070fd17efb192a086e78fa510f,Merge branch 'master' of github.com:metamx/druid,2013-08-05T18:22:37Z
2b715054219dc69f4016ddd7912f413c5534af29,"1) Fix HadoopDruidIndexerConfig to no longer replace "":"" with ""_"" on the segmentOutputDir.  The segmentOutputDir is user-supplied so they should have the ability to just not set a bad directory.",2013-08-05T18:22:26Z
e1d65e736c1c686f635a8b106558cba5170b5021,"Merge pull request #203 from metamx/worker-resource

Remove retry logic out of the Remote Task Runner and introduce Task resources",2013-08-05T18:11:21Z
7195637a41c8de06f9b2b4e07e83bed89bd724f0,use same hadoop version as druid master (0.20.2),2013-08-05T07:16:57Z
1c19fb4a02676b1ec07b88fa54ee9ed97de5b77b,changed number of replicants,2013-08-03T00:41:47Z
d66af7625cde369badd2ba715a703728d2667ca3,"1) Eliminate the need for SingleSegmentLoader
2) Setup the configuration glue for ServerInventoryViews and DataSegmentAnnouncer
3) Make processes run and work again!",2013-08-03T00:05:01Z
f593b23aac6bf76ec0e0127ce8b4a4fcf2a01107,Remove unused boolean parameter,2013-08-02T17:15:57Z
2361e0112ad03ebc92e97b123ae60b15d51e3ab6,Make it all compile again...,2013-08-02T17:14:46Z
c33f2f06ff4f08b953944a15b07c9aee56185e56,fix logic of how to assign tasks to workers,2013-08-02T16:01:02Z
37ab5ef28b8ddb4c8c6d70c6081471fd50661028,Merge branch 'master' of github.com:metamx/druid into HEAD,2013-08-02T07:23:19Z
6f6a335a403bdee6b54f76ab809fb847b88db574,adding profiling for 55k servers,2013-08-02T06:38:44Z
9f17e8fc43c0007157d45ac72fae83c3775c9e49,all working,2013-08-02T04:01:02Z
696b04020b87c28aec761c559e438c4a70e5a20c,wrote regression test,2013-08-02T01:28:48Z
584ccac83387e3f7314593a4e9133027a018e309,"move scanning of workers and tasks into RTR start, simplify bootstrap, make tests better",2013-08-02T00:50:05Z
6f28eac9952b01abb0fdc9803b9f548665ca4643,fixed problem of balancer ignoring home server,2013-08-02T00:28:32Z
cd3b62e1238d1974598ee5ce5a0f31f296c78c33,fix to runtime params,2013-08-02T00:01:50Z
9e78bb38f5ebaf3caf165ce569667be1b6e8ef25,"Merge branch 'master' into guice

Conflicts:
	client/src/main/java/com/metamx/druid/QueryableNode.java
	client/src/main/java/com/metamx/druid/client/ServerInventoryView.java
	client/src/main/java/com/metamx/druid/coordination/SingleDataSegmentAnnouncer.java
	client/src/main/java/com/metamx/druid/initialization/CuratorDiscoveryConfig.java
	client/src/main/java/com/metamx/druid/query/MetricsEmittingExecutorService.java
	indexing-hadoop/src/test/java/com/metamx/druid/indexer/HadoopDruidIndexerConfigTest.java
	indexing-service/src/main/java/com/metamx/druid/indexing/common/TaskToolbox.java
	indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/http/IndexerCoordinatorNode.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/executor/ExecutorNode.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/http/WorkerNode.java
	pom.xml
	server/src/main/java/com/metamx/druid/coordination/ServerManager.java
	server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java
	server/src/main/java/com/metamx/druid/db/DatabaseRuleManager.java
	server/src/main/java/com/metamx/druid/db/DatabaseSegmentManager.java
	server/src/main/java/com/metamx/druid/http/ComputeNode.java
	server/src/main/java/com/metamx/druid/http/MasterMain.java
	server/src/main/java/com/metamx/druid/loading/SegmentLoaderConfig.java
	server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java
	server/src/main/java/com/metamx/druid/master/DruidMaster.java",2013-08-01T23:42:47Z
019bb5d453d5b75b253d718b9a8b1508b466a850,"1) Another whole bunch of changes to annotate things and create Modules and bind stuff.  But OMFG, the compute node actually appears to be working!
2) The compute node works with Guice
3) The compute node fires up with Guice and appears to work
4) Did I mention that the compute node, now called historical node, fires up with Guice and appears to work?",2013-08-01T22:28:08Z
fba2bc96235c35824d0cff57b3c007c6aafc0e8b,"Merge pull request #204 from metamx/close-handle

add the ability to unmap mmapped files",2013-08-01T21:09:46Z
9b340d9f6c7759b7892bea4b9172dd31f0c92546,simplified console code. Added Builder. Fixed urls,2013-08-01T21:06:22Z
8f39db7804341d7d903d276a951e3b2209e94e4f,more data to exception msgs,2013-08-01T21:04:27Z
6d54ae9f8170a6ffa27cf694bb2ab1ffb2d87e64,more unit tests to test for multiple closes in different threads,2013-08-01T20:51:56Z
dc169d9fcd4cb9f0cf22584fd151ea960ded8896,hide decrement and update close logic to call decrement,2013-08-01T20:24:56Z
e92e0c35a4262bf30b176ff11ae6e2873a924ab1,"put all concurrency test back  into server manager test, introduce better concurrency for reference counting",2013-08-01T20:13:03Z
b86258cc1469018e5515350e8ef9cadf91d8c1af,fix broken master UT based on changes that were discarded as part of a pull req,2013-08-01T17:44:39Z
2f8351b31474e34ebab44ba25e84bace43b1290a,fix broken ut,2013-08-01T16:41:36Z
73d5ff4b940e1133d1c09151bf9fc36fa9856eab,Merge branch 'master' of github.com:metamx/druid into HEAD,2013-08-01T16:00:29Z
de61937167d403eda7c1242c6c005a2f55098c11,reverted accident change,2013-08-01T15:58:32Z
31c048ccb681672a8210e6466c5ebe92eec8d16a,use hadoop cdh4-4.1.1 and protobuf 2.4.0,2013-08-01T15:27:33Z
f4fc8b2f6e6f448ba5ed7c0fd93a881390e02ecf,"1) A whole boondoggle of changes to Guicify the instantiation of things for the Historical nodes
2) Add GuiceInjectableValues that supports @JacksonInject resolution via Guice
3) Refactor RequestLogger stuff and setup polymorphic deserialization method of creating objects",2013-08-01T01:36:47Z
a4edc2221d35dc4b9ccb1259988415783d5b3e27,fix RTR comments,2013-07-31T22:28:52Z
215d147a6909c3979e74c79e6c0741a74cfc0b4d,Merge branch 'worker-resource' of github.com:metamx/druid into worker-resource,2013-07-31T22:23:49Z
e2b5cd6067c105727219bfe53ae3de4e3e120f12,"Merge branch 'master' of github.com:metamx/druid into worker-resource

Conflicts:
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/executor/ExecutorNode.java",2013-07-31T22:23:13Z
f76540c16c6c3ae124ee1dcbdbe14a53d050a76d,move reference counting classes out of server manager and more tests for concurrency,2013-07-31T22:14:39Z
9de2e5b096349f5d2a6349b3ebded80a72426945,"1) Adjust JsonConfigurator to be able to attach the proper property path if it is renamed via a @JsonProperty annotation
2) JsonConfigurator now requires that fields be annotated with @JsonProperty.  It will fail fast if they aren't.",2013-07-31T21:55:34Z
cf3e6da79929ae3294747fddf04d3ea4ce0337dd,fixed git ignore,2013-07-31T18:44:37Z
dd689ca8288b733edfcb75b67dd21e8b3c7fb945,changed urls,2013-07-31T18:43:24Z
5d1fe50703ba7d6442fdb4542ba9e163c764345e,additional ut for reference counting,2013-07-31T00:55:57Z
404b84823e2962a436f49c0b0a63026157a4cac8,reference count to make sure we arent accessing any instances of a closed mmapped segment,2013-07-31T00:36:56Z
eaddce06d56826fa6632d9294685c6667da3a237,Call TaskRunner.bootstrap immediately after starting it,2013-07-30T22:26:00Z
843b6650a21728bbdd1ffbfea384a4fa65f98a15,"Merge pull request #206 from metamx/peontimeout

Add a timeout in LoadQueuePeon to fail an assign if it takes too long",2013-07-30T22:08:46Z
e7c6dd8112adb1ae13de5f697509facc0a392135,get and reset failed assign count,2013-07-30T21:50:24Z
35d8a828799ca9778213bfca815bd133b54accb0,move the close method to the segment object,2013-07-30T19:24:01Z
97fb971f849fc245f9eb38a268354477589fe52f,"1) Start the journey of making the historical nodes work with Guice.  Doesn't work yet, but at least it builds.",2013-07-30T18:58:05Z
1c5c2e0ef5222142bbecd8019b532413b7ddae9b,"Merge pull request #205 from metamx/compress-curator

Toggle between compressed and non compressed service discovery",2013-07-30T18:33:43Z
66adef5d647a6595c6d2ca8a5a9b9f40864288be,"Merge pull request #179 from zanox/master

Fix path used when storing segments to HDFS",2013-07-30T18:13:29Z
f55e12040fa3ca3345b8ff5c4bf3cd8e297258bd,fix according to code review,2013-07-30T01:39:14Z
b8940b45246ccf1367a0f1d59f13ca21372517e1,added support for dynamicConfigs for Master,2013-07-30T01:16:57Z
4e4d582e07f8d82e80bb896ed7297a729856d6cd,formatted files,2013-07-30T01:10:08Z
ac0f0afdbf845062a1701b9394bf116872fd2597,"turned Iterable to ArrayList, fixed potential null pointer in reservoir sampling",2013-07-30T01:07:49Z
6a96c1fb76c577b30bc86de97a75d85e2a61560b,fix according to code review comments,2013-07-30T00:56:19Z
b0d9889c83cd093ad09fc3e745d55197dadde576,added web console for changing dynamicConfigs,2013-07-30T00:49:09Z
af6db21264857017508f8c6308c050e6693a6b7d,fix configs based on code review,2013-07-30T00:04:27Z
091dce11c8b813ac7a5a0a7e85be99120a235e66,Add a timeout in LQP to fail an assign if it takes too long,2013-07-29T22:47:05Z
50836798faa3355339a4dfc592b97e334b6bfbe2,toggle between compressed and non compressed service discovery,2013-07-29T22:40:45Z
12261902797067ea96c4afd217793f64629d2e1b,add the ability to close mmapped files,2013-07-29T22:22:34Z
2b587cba856d36d8751ac69bf9f4d8e4e8f24b7c,1) Introduce airlift/airline for CLI stuff and add a Coordinator CLI verb to make it all happiness,2013-07-29T22:14:20Z
4c9be81912886419548df3908c8704676b5aaa36,1) Pull try/catch check in the JettyServerInitializer out of the initializer.,2013-07-29T21:35:30Z
9cd26c70c08826258945d6517077dc4f60628b67,1) Adjust the JettyServerModule and other things such that Jetty will actually serve the static artifacts and the various resources of the Master,2013-07-29T21:26:51Z
ad65c8111d36453193888a740925dcd722885dbf,fix logs,2013-07-29T18:41:42Z
31ffed466c8f2feac3ab6f41ca31d71a4c306e4b,first set of changes,2013-07-29T18:39:24Z
bba83ec53202e040b416eb92b1e4c3f3ca17dc6b,introduced a ByteBufferInputRowParser to keep the old StringInputRowParser in places outside the KafkaFireHose,2013-07-29T09:59:08Z
4ae8395538a1108975f1f20fc035ecf8e0d79a51,"1) on bootstrap, load all initial data and do a compare with bootstrapped tasks, delete any that are extra out there
2) change autoscaling logic such that it only works with remote task runnrs
3) zk workers use their own status caches to determine what they are running",2013-07-26T21:32:08Z
6b9963b472f6a632090a4bff01201e3e7e052252,"1) Move the @Json and @Smile annotations to com.metamx.druid.guice.annotations
2) Changed ServiceAnnouncer to take a DruidNode object
3) Remove ServiceInstanceFactory interface and implementations
4) Add registrations to DiscoveryModule so that you can register nodes that should be announced on startup
5) Make the set of default Monitors configurable",2013-07-26T21:03:51Z
ba4a9c28a7006a14cf7125dbaeda4536b0143b1d,removed unecessary line,2013-07-26T17:52:50Z
1e4f64b119614a4d0ad3859f5d6778388440df0a,redid testing,2013-07-26T17:50:06Z
a1262760b270d701b6c1bcc78c2dd1772b7f764d,Merge branch 'master' into worker-resource,2013-07-26T17:02:15Z
b0090a1de661775185b5260917207cf346884d90,[maven-release-plugin] prepare for next development iteration,2013-07-26T00:26:44Z
686815390531c27ae3ff873787ba4306dc2c8dc9,[maven-release-plugin] prepare release druid-0.5.22,2013-07-26T00:26:36Z
a6bc63732d05ebf2da1aa387713c9ad7de6e42f7,"Merge pull request #199 from metamx/indexing-service-mods

Improve robustness and usability of RealtimeIndexTask and some code cleanup in the Indexing Service",2013-07-26T00:09:15Z
cf0cb3b7034688fb22c58409d53f7a5e96f7e6aa,[maven-release-plugin] prepare for next development iteration,2013-07-25T23:55:28Z
8297f068c33548b3c783ddffa66a6922226f3ff3,[maven-release-plugin] prepare release druid-0.5.21,2013-07-25T23:55:20Z
05219689e87c5e100ce98a248dd253d820d3792f,added close methods on inputSupplier tests,2013-07-25T23:52:29Z
f68a68112fac2e2a06043a41018da18733fff00f,[maven-release-plugin] prepare for next development iteration,2013-07-25T23:21:59Z
b6e8d11aec0d15469518c35d838dc8f0cee47c55,[maven-release-plugin] prepare release druid-0.5.20,2013-07-25T23:21:49Z
217894d44a11b2e486e7ea47be02dfc4bc9a29ae,"Merge branch 'master' into worker-resource

Conflicts:
	pom.xml",2013-07-25T23:18:42Z
4dd42c7177099a34b4df596c1ddcbac1e7167edc,RemoteTaskActionClient: Log service uri when submitting action,2013-07-25T21:48:25Z
20acd6f450c955ccd56462f5243e0b4512002f52,RealtimePlumberSchool: Persist and merge immediately upon finishJob,2013-07-25T21:38:07Z
5d44f0f15bc6463d7ef16119370b7956ee3af0bc,ForkingTaskRunner: Use guava Closer to closer stuff,2013-07-25T21:37:45Z
952b8ce06bd14d3b4eba7126ed98e018beef4f09,RemoteTaskActionClient: Fix http path,2013-07-25T21:37:20Z
8e4fba431c2fa39f02c3a9915fcbf68cb4176268,moved profiler,2013-07-25T21:37:03Z
34a9525966491173521d43e29a0db789abb2afa4,added tests for random sampler and changed abstract class to interface,2013-07-25T21:14:16Z
ea201be555071ce7c2a461aaf5c8439cabc0ed25,"Merge pull request #200 from activitystream/master

Minor fixes - maven dependency, unit test that was failing and quirk for third party S3 provider",2013-07-25T20:42:53Z
73cc47d79c48c04a8d4a0a9e3f98d227b9f9419f,"Merge pull request #201 from metamx/fix-rt

Fix issue with realtime nodes selecting intervals that are too large in the results",2013-07-25T19:46:09Z
8ee71c8ceb3cc5d0700cff16465facce3b8885e2,added strategy pattern and RandomBalancerStrategy,2013-07-25T07:00:38Z
a909a31bcc4bc07a511c42b58373a5e4475bd21f,better select sinks,2013-07-25T02:25:32Z
2842a408945f4e29942ac426801fde4f1c435e89,Fixed test that was failing on JDK 1.7,2013-07-24T23:41:47Z
b3530fb15dc189ece8352fcbcd9082a6abba2df5,Adding a configuration property to disable setting an ACL on the segment pushed to S3.,2013-07-24T23:37:21Z
f38d7cf964ce86f6887ca13809c8a5a5ee6e5b63,Fix busted condition,2013-07-24T23:33:01Z
6d1cb1bfc1a4ecc85aab32fd50a1d3b3db78077a,IndexerCoordinatorResource: Log when remote task action fails,2013-07-24T23:13:12Z
30d98f56c1a95bf24a1f84587e58d8200327f18d,RealtimeIndexTask: Allow configurable rejection policies,2013-07-24T22:59:39Z
e3879f0c778eb62674de70b9623b6ca7d850dcfc,Adding a dependency on Apache commons httpclient in the Druid client pom.xml. It currently gets pulled in through some dependencies but it should be explicitly set.,2013-07-24T23:05:30Z
a03dcc64297fa42bd673fe5f4270245d36c7553e,cleaned up comments,2013-07-24T22:34:08Z
5c96d500d80e1335e1f5378aff1bd9d8caaa36df,"More controllable realtime shutdown

- Realtime plumber will start persisting segments shortly after finishJob is called, regardless
  of rejection policy

- Add ""none"" rejection policy",2013-07-24T22:29:40Z
bcb3e089d80dbb47d13f7e8597b1f69d558b12af,"profiler added, commented out initialTotalCost normalization and normalizedInitialCost",2013-07-24T21:57:02Z
0eebb0a149f87139e0674312582382e73d4fdc52,Add RealtimeMetricsMonitor to RealtimeIndexTask,2013-07-24T21:39:59Z
867dedfe1bd1f51fca89766dad63b2a15ff1025f,Remove unused class,2013-07-23T05:40:18Z
71704f7ee82ee7450ca5ac1416925d74acc9a66c,Replace graceful/hard shutdown combo with simple exit,2013-07-01T23:32:52Z
cfc635de53226d2180ccf97546a9f0a966ec2d67,[maven-release-plugin] prepare for next development iteration,2013-07-24T16:41:30Z
09576ccd09cd36e6d25ece8f8ca0db6c616365a6,[maven-release-plugin] prepare release druid-0.5.19,2013-07-24T16:41:20Z
6dc8d09b00181495060561a067a980c2d87ee92b,partial changes,2013-07-24T00:25:36Z
86dd1a499cb707c7a57f14aefb22536885f6c2a0,"Merge pull request #194 from metamx/batch-zk

Changed method of publishing segment ownership to ZK to use batching, includes changes to allow for migration",2013-07-23T23:36:48Z
fa5f46057c0d19e7dbdb842db00f51d8356dcd8e,fix spacing issue,2013-07-23T23:25:07Z
e4c2a2c705d3ec4ca954eda46233c5111a94f570,fix according to comments in code review,2013-07-23T23:21:45Z
02ffd805c8f3f90afa6e8ac3b790c29235ed8721,"1) Move DbConnector into its own module
2) Move JacksonConfig stuff into its own module
3) Fix LogEmitterModule to inject properly with a Supplier<>
4) Set Guice to require explicit bindings, to protect from weirdness like was initially experienced with LoggingEmitterConfig
5) Master fires up and appears to all work with Guice!  Whoot!",2013-07-23T21:55:36Z
fc65648809dd946a9749392c2b644cac5c2d8c1f,fix a bug introduced in postgres support that breaks inserts for mysql,2013-07-23T20:21:14Z
94afe7213347415cdac277fb163f93c95fd58768,add unit test,2013-07-23T19:49:07Z
980b09d9037c6909895e4d86b9bfcb7d1397a128,fix broken test,2013-07-23T17:19:26Z
ea7c7d1d66780b61e7fb7cdc503731226c8dbe1f,"Merge branch 'master' into batch-zk

Conflicts:
	client/src/main/java/com/metamx/druid/QueryableNode.java",2013-07-23T17:14:26Z
ef27810458c9b76d45f218cd5a7c480e285c40fe,rename to fix case issue,2013-07-23T01:02:10Z
3f97ac92532d6a91946f612a782311ac19935f30,add read to batch zk,2013-07-23T01:01:13Z
f09a43a8d9e1e8186cf477233bdd772965abd4b7,"Merge pull request #195 from metamx/announcer-cleanup

Cleanup znodes left behind by announcer",2013-07-23T00:07:58Z
7504f3ab65977614a02c412ef388cc4a5603b895,"1) Adjust the Announcer to cleanup parent nodes that it creates.  This stops it from leaving little turdlings lying around on zookeeper as nodes exit
2) Rename *CuratorDataSegmentAnnouncer because neither of them depend directly on Curator.",2013-07-22T23:31:01Z
b6aeb5b3762e4b0b7d1c572acde107e18ac1d950,code review fixes,2013-07-22T21:14:21Z
f5536ed010752bcadccda3c568c2d065cdaacfed,compression for batch-zk,2013-07-22T21:05:48Z
5d96f6dc99bdde720e37a2a0746e791393c0e352,Merge branch 'master' of github.com:metamx/druid,2013-07-22T17:47:20Z
2d0fae2fdeef1c03ca7ff638d73f5d15b68c9b16,add to string to spatial wrapper,2013-07-22T17:47:11Z
15f756c3a4e58c36ca4fbae006b8d07724f74623,Fix upload script to actually upload into the directory,2013-07-19T23:57:55Z
1c34e3f36414331452ac3443959ae3a8ca5d01ce,1) Fix class-level javadoc on RabbitMQFirehoseFactory to reflect changes in config,2013-07-19T23:47:00Z
5f01c633bdd20cc2d406c13a4d1215a29456fc2e,"Merge pull request #192 from activitystream/rabbitmq

Adding a RabbitMQFirehoseFactory implementation",2013-07-19T23:44:44Z
85a35201b7f1ba7df6210dd19f6f4d1c4dd5086d,"1) The Master compiles and runs with Guice bindings!!!!
2) The service discovery stuff really needs to be reworked.  It's unhappy now.",2013-07-19T23:29:54Z
527c6c81c59d37d9a500f918e1c6eb8b45c2bd4b,"refactored StringInputRowParser to handle a ByteBuffer, better wiring and configuration of KafkaFirehose",2013-07-19T12:12:53Z
ade00e441f6a23a6e3dec6b9d17ad282de4f7d6b,Adding minor class-level JavaDoc.,2013-07-19T11:24:13Z
af97b44a6fba48a3172ce1ab38c44bed20580da7,merging pull request from cheddar - jacksonifying the RabbitMQ connection and config.,2013-07-19T11:15:26Z
1b56fa5416bdd661aada8cd005e6e1cf49a37c97,[maven-release-plugin] prepare for next development iteration,2013-07-18T22:37:54Z
0c11602623d72de01c1c8cabb3b7d79aaf7e6f25,[maven-release-plugin] prepare release druid-0.5.18,2013-07-18T22:37:16Z
816f673a47f440fb8004411af3bde357763e9f22,[maven-release-plugin] prepare for next development iteration,2013-07-18T22:14:47Z
bcb1b99410b0134e9eecdf6318d4b8d0831dd4ba,[maven-release-plugin] prepare release druid-0.5.17,2013-07-18T22:14:32Z
357d77aca25c274b94e75dd6e85ccb484c9b879a,[maven-release-plugin] prepare for next development iteration,2013-07-18T21:53:56Z
b5b6cd6594822ff9b9fbf2c8213d7efa85402bf3,[maven-release-plugin] prepare release druid-0.5.16,2013-07-18T21:53:46Z
08f56feee3ff41c0042c83181c8f9b129f47520d,[maven-release-plugin] prepare for next development iteration,2013-07-18T21:48:53Z
74b4c577f015da701ac2e7a6224983826e5209fa,[maven-release-plugin] prepare release druid-0.5.15,2013-07-18T21:48:42Z
5b55db6a42606ef162179e7271b7a56b99fcff7c,[maven-release-plugin] prepare for next development iteration,2013-07-18T21:28:54Z
3792a548692a0ac8b01313a6f8f7345b90991df1,[maven-release-plugin] prepare release druid-0.5.14,2013-07-18T21:28:46Z
2f63140f2f7271fa3b9544bf8971a287e8958c63,[maven-release-plugin] prepare for next development iteration,2013-07-18T21:17:16Z
4481b10efc67df94d1ef3703c920cc31194eb423,[maven-release-plugin] prepare release druid-0.5.13,2013-07-18T21:16:55Z
df88274d9e9fd1d3e558829ff8d83b5b6f7b76eb,fix poms,2013-07-18T21:14:16Z
6b773e77916fca59bd768dc829e7cc589b5c25c0,Merge branch 'master' of github.com:metamx/druid,2013-07-18T21:12:41Z
325a5fb4c0dcccdfd6819ea86d356ab9cd092a0a,[maven-release-plugin] prepare release druid-0.5.12,2013-07-18T21:09:56Z
e493267bfa81bbf9937cff571b0958f2209a7978,"Merge pull request #193 from metamx/queryFileFix

query file fixed",2013-07-18T20:58:00Z
f114e2f425fb8fefba2c8a3372fd478f92020274,query file fixed,2013-07-18T20:37:33Z
4e2f6380e617da44c94bdcd9cbb1011b056598d7,Merge branch 'master' of github.com:metamx/druid,2013-07-18T20:25:08Z
7d58a2d8db45f56cd51e8d9e2e1a1e8c745857b8,fix bug with enabling segments and improve replication logic,2013-07-18T20:24:52Z
0edfbaffab652d22f0fa1e5c0ed329d996531741,"Errr, needed to make the ConnectionFactory a JacksonifiedConnectionFactory",2013-07-18T20:17:11Z
807a52f9636a76c7012877b93efccb2d54bf2d5a,Another take on the configuration,2013-07-18T20:16:42Z
ae4132adba0714e8cad2ea4ceeab7eeb4bf700fe,Adding a test producer application.,2013-07-18T19:42:07Z
da658ac69a0588e2588ab21b9f891152e0d387e6,"Changes according to Eric's comments on the pull request.

- moved the RabbitMQ ConnectionFactory configuration to a method of its own to clean up the FirehoseFactory.connect() method.
- using Throwables.propagate*() methods in exception handling.
- removed TODOs and instead using the ""keyword"" FUTURE as well as adding some context to the comments themselves.
- cleaned up the exception handling in hasMore() a little and made it more readable.",2013-07-18T19:30:14Z
861542cc3cb8c16042f7487349d0e7f2c987e4e0,Merge branch 'master' of github.com:metamx/druid,2013-07-18T18:37:11Z
d4afeb5ebe3fff3d6c22350b4b46435e1256af98,"1) upload.sh pushes up to artifacts/releases
2) Delete some commented stuff in build.sh",2013-07-18T18:18:28Z
e885cb5a4d200162325d7dc015f26155d8be1afc,1) Switch CuratorDiscoveryConfig to not be an abstract class 'cause Jackson cannot instantiate them,2013-07-18T18:15:39Z
d3412c851b66b58409d3f376c89ef9ef6ebfe178,Merge branch 'master' of github.com:metamx/druid into kafka-protobuf,2013-07-18T13:14:02Z
e9064817040f06d04b860bab06da25383fa7fa91,"Merge pull request #191 from metamx/s3-puller-retries

S3 puller retries",2013-07-18T00:07:57Z
d7f9b829accc8b71cfd968fb3a074a655e377ed7,"This conflict merge thing is really weird...

Merge branch 'guice' of github.com:metamx/druid into guice

Conflicts:
	client/src/main/java/com/metamx/druid/curator/discovery/DiscoveryModule.java
	client/src/main/java/com/metamx/druid/initialization/CuratorDiscoveryConfig.java
	client/src/main/java/com/metamx/druid/initialization/DruidNodeConfig.java
	client/src/main/java/com/metamx/druid/initialization/EmitterModule.java
	client/src/main/java/com/metamx/druid/initialization/HttpEmitterConfig.java
	client/src/main/java/com/metamx/druid/initialization/HttpEmitterModule.java
	client/src/main/java/com/metamx/druid/initialization/LogEmitterModule.java
	client/src/main/java/com/metamx/druid/initialization/ServiceDiscoveryConfig.java
	common/pom.xml
	common/src/main/java/com/metamx/druid/db/DbConnector.java
	common/src/main/java/com/metamx/druid/db/DbTablesConfig.java
	common/src/main/java/com/metamx/druid/guice/ConfigProvider.java
	common/src/main/java/com/metamx/druid/guice/DruidSecondaryModule.java
	common/src/main/java/com/metamx/druid/guice/JsonConfigProvider.java
	common/src/main/java/com/metamx/druid/guice/LifecycleModule.java
	common/src/main/java/com/metamx/druid/guice/LifecycleScope.java
	indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/TaskMasterLifecycle.java
	indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/http/IndexerCoordinatorNode.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/executor/ExecutorNode.java
	indexing-service/src/main/java/com/metamx/druid/indexing/worker/http/WorkerNode.java
	pom.xml
	server/src/main/java/com/metamx/druid/db/DatabaseRuleManager.java
	server/src/main/java/com/metamx/druid/db/DatabaseRuleManagerConfig.java
	server/src/main/java/com/metamx/druid/db/DatabaseSegmentManager.java
	server/src/main/java/com/metamx/druid/db/DatabaseSegmentManagerConfig.java
	server/src/main/java/com/metamx/druid/guice/MasterModule.java
	server/src/main/java/com/metamx/druid/http/MasterMain.java
	server/src/main/java/com/metamx/druid/loading/cassandra/CassandraDataSegmentConfig.java
	server/src/main/java/com/metamx/druid/metrics/MetricsModule.java",2013-07-17T16:50:14Z
cef0e508811ff90db84f33961eb60d1dd067c60c,[maven-release-plugin] prepare for next development iteration,2013-07-17T16:14:37Z
22526a6c68f238c6d125a3210ee42c2a6530c234,[maven-release-plugin] prepare release druid-0.5.11,2013-07-17T16:14:28Z
43bdb99593345f46e51528b6815e84bdbee9b96d,[maven-release-plugin] prepare for next development iteration,2013-07-17T00:55:42Z
d5fee45bf4b396979bd44e45743408f40df4af3d,[maven-release-plugin] prepare release druid-0.5.10,2013-07-17T00:55:29Z
f3187b67a50e462ad173de8f0e6da556cb5fa3ac,[maven-release-plugin] prepare for next development iteration,2013-07-17T00:32:05Z
eb89857bdc76b4237b2320f6c7b06225da7e96a1,[maven-release-plugin] prepare release druid-0.5.9,2013-07-17T00:31:55Z
0f492e17c3f91c8acb485653d37e6f93150ffc97,[maven-release-plugin] prepare for next development iteration,2013-07-16T23:53:51Z
a3879d11518b60e10e8d31eef6abe98e1baf6fa8,[maven-release-plugin] prepare release druid-0.5.8,2013-07-16T23:53:41Z
4e84fb5f036366f1770980ae504a223fb251d01b,better logic for exiting load rule assign if replicants cannot be created,2013-07-16T23:50:52Z
f422bfae8c352b39bf0632239bb17aa09559c20e,[maven-release-plugin] prepare for next development iteration,2013-07-16T20:35:38Z
cd174dbd8059607b83202c576a41c229bb67d4d6,[maven-release-plugin] prepare release druid-0.5.7,2013-07-16T20:35:29Z
afac15d6310eb69ffd69ed5f38842836d7ff788d,fix version problem,2013-07-16T20:32:50Z
35283789e3c6bced47e25830382ad852391e2d16,Merge branch 'master' of github.com:metamx/druid,2013-07-16T20:31:06Z
36756aa557d8b000a804f42b3bd1004812de355e,[maven-release-plugin] prepare release druid-0.5.6,2013-07-16T20:30:16Z
49a80572b7bc377e366275f95a8eabb524745dfc,"fix master speed issue with immutable copy of in druid server, better exception handling in moving and dropping segments",2013-07-16T20:24:43Z
6258d77398f1b603cf47d59d6d314f4724d6555f,"Retry s3 operations on non-wrapped IOExceptions

Can happen if we get a socket related mishap while fetching an s3 object.",2013-07-16T15:25:19Z
217d539e46f35ad019004e5117a98285e589d9fb,Adding a newline at the end of the file.,2013-07-16T15:18:03Z
22ec7c53fc8b65f9839dbff56bf983937fbe092f,"Code cleanup and formatting, documentation and moving all configuration into the consumerProps.",2013-07-16T15:08:39Z
4201d9ff246ce35a89832f7ee0a66bb91857175f,Remove unused methods from S3Utils,2013-07-16T15:08:25Z
320f1fe84051d0abb6cd200a46d820a7810a59db,Move retryS3Operation to S3Utils,2013-07-16T15:07:14Z
945bc9a3707d4d9036c83d4d3d4932f7a361c6f9,"Limited retries on s3 segment puller exceptions

Useful for reducing spurious alerts due to general s3 flakiness.",2013-07-16T15:02:49Z
d2f8e52752e0804757b41d918cdaf40581245d79,Merge remote-tracking branch 'upstream/master' into rabbitmq,2013-07-16T13:08:10Z
dcc9942d8a9a814993a2727ce21217b53f3c81d0,1) Update version of http-client,2013-07-15T21:19:05Z
a43ccf587ff890b1cad71483d0de7fb7a35d31ed,Fixed some errors in the realtime.spec and query.body files and cleaned up the format to make it more readable as an example.,2013-07-15T18:38:21Z
82d2623cc97776028c9b5c01691c6de4872bd222,Minor sanity checks when checking for and processing a new message.,2013-07-15T15:25:59Z
13328a6b36410edf89e3e8a59a36fb20e43e018b,Implemented a better query.body for the test I'm using. Added a shutdown listener to the connection and channel to get a notification when they are closed. Question remains whether the connection should be re-established when that happens.,2013-07-15T09:50:58Z
4d998e4c27b34c43dacbb4f4f2816c31567dfe5f,Making more things configurable through the realtime.spec file.,2013-07-13T16:49:39Z
fc74333a28ddab0495c0875ae9c3511081633772,adding an example dir to test the rabbitmq implementation,2013-07-13T16:14:10Z
01b7507a5ac6d5759c6eb8632dfb4f0e3e36a5cd,First version of a RabbitMQ Firehose implementation.,2013-07-13T16:03:46Z
5cc747431b7b2c27aa38fa04863aaf00b04b4779,Merge branch 'master' into worker-resource,2013-07-12T20:00:26Z
b9578a1adab0901e69b725a5039efff11bd6f06d,"1) remove retry logic from RTR
2) simplify configs
3) introduce task resource
4) make worker versions match coordinator version by default",2013-07-12T19:51:12Z
a8039107d8fb63867af3e22e5a179bdfcbd6f924,no bytebuffer in the middle,2013-07-12T14:02:15Z
89b0c84f3b1124f62949e4987cd38b6d034dbc91,initial implementation of an protocol buffers firehose,2013-07-12T11:34:57Z
09b113081064ed5428b91251ac26860cc7adae34,"Merge pull request #186 from rjurney/master

Made upload.sh executable",2013-07-11T20:06:58Z
33ac931b80671586ca22cc5afa18a1bc7ae80023,"Merge pull request #185 from rjurney/test-harness

Fixed hanging ssh bug FINALLY",2013-07-11T20:06:02Z
a1905277310411b1521b978f8609c1c4000ff2fe,Merge branch 'master' into worker-resource,2013-07-11T19:40:48Z
0961d8f1496606202ca45f313f63e5ec4c0fd6e5,Merge branch 'master' of github.com:metamx/druid,2013-07-11T14:02:11Z
a33aa57ca9d399e34658144243feebb53e0704e2,Made webstream example work.,2013-07-11T00:04:51Z
921bee33d96f19bf2a95d723b4f95b932bf846b8,Merge branch 'master' of github.com:metamx/druid,2013-07-10T21:19:35Z
c519be5b9f370573b4c5e104dce413c4d5f4e7f0,1) Fix stray imports from libraries that aren't depended on and fix annotations/methods accordingly.,2013-07-10T21:19:04Z
9d9d49f9b51449ea74a040c041383b3c4e1a9d64,Make upload script executable,2013-07-10T21:17:40Z
377842525013ce0663149bd70c280b7a71fd914c,"1) Fix new WebStreamFirehose stuff to have tests in the tests directory
2) Change the webStream package to the web package, because capital letters in packages suck",2013-07-10T21:12:13Z
aad11a69b4c15fa2267ea4059861f85155849789,Merge branch 'master' into worker-resource,2013-07-10T16:48:53Z
ad087a7a221f71083b44ebc5d3c5ff9bbc18d0fc,correct segment path for hadoop indexer,2013-07-10T07:21:45Z
a39148a0afc37f32d9ee42cd561e51b7bc6053d3,Fixed hanging ssh bug FINALLY,2013-07-10T01:41:06Z
b83bc14784094e9a41cdac816edea4e76ac2d080,"Merge pull request #173 from metamx/dhruv

Add new demo firehose that is lower friction than twitter",2013-07-10T00:39:51Z
bd6dcd397386c4f915335e6c1468a2340a034513,interruption!,2013-07-10T00:39:19Z
093953c041aaac067a473deb802dcea85f903310,"Merge pull request #170 from metamx/batch-zk

Enable batched ZK announcements",2013-07-10T00:23:47Z
ba484fca5cb794f0e770ae5a8a8850d517a0e18b,catch error,2013-07-10T00:17:21Z
dd203f969bb8394d9789b7ff0020506e0e7c9dbe,announcer thread fixes,2013-07-10T00:16:45Z
9f7284c8010d6845e28e402909456294e2c1a1e7,fixed thread stuff,2013-07-09T23:59:49Z
b3157c275294fea7b752a94637814a8d2c2243d7,made thread final,2013-07-09T23:42:35Z
3250c698bba9e1dd88c1db772b39e0c16db46c26,fixed thread stuff and made tests cleaner,2013-07-09T23:34:55Z
e892d14f772f47b28adbcf884e578afd4b123ccb,"1) Configuration fixes, slowly gonna make the MasterMain actually start up!",2013-07-09T23:16:56Z
6d000fc4c283ea71316913c8c103066008dd8c54,interfaces added and tests simplified,2013-07-09T22:31:03Z
e50bcf4309b43ccfb4e880b0072349668679e6b0,"Merge pull request #184 from rjurney/test-harness

Upload script for test-harness tarball",2013-07-09T22:18:46Z
fa0d37f14e65f2685aa7beb2c74036317e802e36,"Upload script for services tarball, relies on s3cmd",2013-07-09T22:10:44Z
b2cb9bead428600a31efe8ef9eda14ec5ab4ce78,Merge branch 'master' of github.com:metamx/druid into test-harness,2013-07-09T21:48:17Z
6568728ead68b4999ae960806f45df7b5e45751a,Merge branch 'master' of github.com:rjurney/druid into test-harness,2013-07-09T21:48:06Z
2403056a0e993793617206473d01492033aa1b1f,"Merge pull request #183 from rjurney/test-harness

Scripts for firing up stuff and getting a stand-alone AWS node working",2013-07-09T21:47:43Z
2df74633110aafc4e371eff7d2889b00e661e9a9,"Removed dupe numThreads value from configs, fiddling with run_ec2.sh/env.sh",2013-07-09T21:44:03Z
41cb115d6039b4e554954b0a7d58f0e4a3708b17,few more changes to RenamingKeysUpdateStreamFactory and test,2013-07-09T17:46:43Z
72fbc516bc4de666370f687afd0a389686f1e739,added a RenameKeysUpdateStream wrapper,2013-07-09T01:53:08Z
570fb1cf19aeabc98660aff02382921787deaf5a,"Working stuff, doing pull request. CTRL-C problem remains.",2013-07-09T00:30:37Z
142271aad2bfb1befc8a66a3b78894cc370a5050,better encapsulation,2013-07-08T23:46:47Z
01b4728c40c9d4073c2bd628fecae8f7bce15878,removed shared queue structure. Queue now encapsulated within updateStream,2013-07-08T21:27:35Z
2403f1eceb71b6badfee6c5c448d2c1bcd801006,Seperated env/run files.,2013-07-08T20:42:50Z
e7da31e42d8d7b96cbce5ecaeac0d43b723ffe98,seems to be working,2013-07-08T20:41:19Z
439e8ca4adfa09359f37aadd388196c513a5a1b1,now take a map for renaming,2013-07-08T20:35:22Z
c8c686c738d04a7c64bda97320fa7a1217128d4a,added druid license comments,2013-07-08T19:19:38Z
adc00e6576c8b7e1bcf89a3054b452ab9312c153,fixed with Erics suggestions,2013-07-08T19:13:25Z
cc35841e2397d4bc86032c4ba9da0e263f4f23df,Merge branch 'batch-zk' into worker-resource,2013-07-08T18:04:05Z
adda1488dcf6c11366d788d38e02119365fc281f,another thread safety fix,2013-07-08T17:59:07Z
454f23d7c0210ec28bd3b1698e8dbb505f61ba03,Merge branch 'master' of github.com:metamx/druid into batch-zk,2013-07-08T17:40:30Z
83b96ee507fb59d246764f2656900c197c4b035d,fix concurrency problem,2013-07-08T17:40:13Z
d5b441728049113d40059b44377cc3a3150e6953,Merge branch 'master' of github.com:metamx/druid,2013-07-08T09:50:15Z
18ec08185592751767976d51c7c498e9a757fb6a,"moved getHdfsStorageDir() to DataSegmentPusherUtil, extended test",2013-07-08T06:39:08Z
056bd9cfe659d06e3343323dc5723b692281dd99,"Created log directory, and echo ssh instructions.",2013-07-06T01:03:37Z
1e46c6f4a26c3ee5431a21517d7d9c3f53e6b5d2,Removed debug on ssh,2013-07-05T23:51:01Z
b42c5743c923fe37e0869aae96e898ab4d567c4b,"Merge pull request #177 from nebrera/master

Postgresql adaptation",2013-07-05T23:42:57Z
8b7e32da01674186f411d0b0d27b88b737030263,"Merge pull request #175 from metamx/bug-fix

Fixes for multiple issues",2013-07-05T22:16:10Z
9e615bad7f7035a65653056ba9c26ad7803f4c29,"Works, as long as you hit ctrl-C when it says so.",2013-07-05T20:40:45Z
5f0f9b29ecab22a4bfe903adf2be67e67801c05e,Working on fixing hang problem with mysql install.,2013-07-04T21:11:48Z
6f06d701d95566b5bb510c370c3e6a883a29fe5d,Building a correct segment path for HDFS,2013-07-04T14:00:20Z
ca81b81f1bd17304747987efd6b5fc605c57d9ee,Moved mysql setup to bottom,2013-07-04T02:53:06Z
c41de0392d86c3ef70d5c65bd77acb64ffdf8f86,Added realtime.spec to realtime config path.,2013-07-03T00:25:37Z
86ecdc4c26dc8d56cd5b2654336cb645201720ae,"Removed credentials from ec2 script, ready for publishing.",2013-07-03T00:17:36Z
be2f1539853962ce4113b0c0ab7256c8378ff6ab,Merge branch 'bug-fix' into worker-resource,2013-07-02T23:25:07Z
d3eb491155eee43f94780c67e3459638b7f2d0f9,"Merge branch 'batch-zk' into worker-resource

Conflicts:
	pom.xml
	server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java",2013-07-02T23:24:59Z
e21aa41bdd17ef6a2c45c6a2fa0d830d85a61aa8,"Merge branch 'master' into worker-resource

Conflicts:
	server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java
	server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java",2013-07-02T23:23:53Z
fde874ea568f640d768431f26e0e7a5f72f22ad3,fix according to code review,2013-07-02T23:11:12Z
9818d28a2696112c54fc1fd18e61fbabb784c4ee,Merge branch 'master' into bug-fix,2013-07-02T22:59:52Z
5ac2d1db0b22f7b066171c026e39a4551329cbea,"Merge branch 'master' of github.com:metamx/druid into batch-zk

Conflicts:
	server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java
	server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java",2013-07-02T22:57:31Z
7219ed15d32c0fbca4681701961a3dc2088639b5,fix according to code review,2013-07-02T22:56:12Z
8a5f4960a9e8d0ce3aa2cfa019eeec048db9226d,Working ec2 bootstrap script for ec2 environment,2013-07-02T19:46:14Z
07129418257496c2ceb4b716c40c68717d28036b,"1) Add check whether a Hydrant has already been persisted before persisting.  Persisting happens synchronously on the same thread, but multiple persist requests can be queued up on that thread which means that subsequent ones would fail with an NPE.  Fixes #178",2013-07-02T18:53:53Z
c1f6c0ab4ac239be2efd32e8b1d7a801f92b018c,In progress ec2 script.,2013-07-02T02:34:43Z
8a1512ae4b6c3e3bb23e2e8e73115bf4d5e51b66,Initial script to boot and configure an ubuntu 12.04 server for running the four druid node types.,2013-07-02T00:55:01Z
28af252bca31150dba0101990d27052b60a0ab9e,"Include multiple configurations, one per node type, in assembly package for examples.",2013-07-01T23:36:30Z
7c3abf07852801fb70a48c68394f0f20fd60823b,Nuked test-harness,2013-07-01T23:25:34Z
800cff010fa58555a6509672c84575467d1ff802,New config for each node type.,2013-07-01T23:15:05Z
fd1d73e83abdff8dcea9d3c8bcc9c3278ce92dea,[maven-release-plugin] prepare for next development iteration,2013-07-01T23:04:31Z
090921b43e662013e5aa8c1cc111ba8d95530fcc,[maven-release-plugin] prepare release druid-0.5.5,2013-07-01T23:04:25Z
797a083b698a120d269a753f7fcd96f617659e7f,"1) Adjust SingleSegmentLoader to allow for storing segments on multiple different mount points.  The specification language is really janky right now, so this is remaining a stealth feature for the time being.",2013-07-01T21:56:57Z
e8afeda046c7553aada7893d99e981ef760ee24e,Merge branch 'master' of github.com:metamx/druid,2013-07-01T21:54:32Z
f0b0d70ddaa1c326f8847e62366b803487d313f2,filter nulls in CEQR,2013-07-01T17:25:38Z
e569b28c595daef364f831035cd7857822a6af44,Configuration changes to make later model stuff work.,2013-06-29T04:00:29Z
d02f152498750f213c38e35a41e0d5e2d6a3f55a,fix NPE,2013-06-28T21:57:32Z
5a57539736770af6e581622f48e0d2617f57dd1f,fix hdfs config,2013-06-28T17:18:10Z
e9ce6b596c2b6c278fe1f797d83879cd648addc0,PostgresSQL integration with druid,2013-06-28T10:49:24Z
b6e198ffb60bf27e883ecfdd5ec4ded8b5c4163c,Postgresql integration. Postgresql included into postgresql-schema.sql,2013-06-28T07:35:48Z
6f6bf1996c38c73d195509fd7a06c8188fcbff6c,log.info changed to log.debug,2013-06-28T02:09:35Z
c15f18c34358154e58e1a5931958a3d94ed2e379,removed NoopRunnable,2013-06-28T02:03:25Z
80f4ae25b598093eee10d89089407b34d088a0c6,updated with further cleanliness,2013-06-28T02:00:34Z
2969d9a713bb213c0dd9526f052512deef9df83f,"Merge branch 'master' into batch-zk

Conflicts:
	client/src/main/java/com/metamx/druid/QueryableNode.java",2013-06-27T23:46:37Z
a6787ab2016c3b20931bc5f0b260774ad23af7be,fix up configs,2013-06-27T23:40:17Z
d5306c5dd9d1dc8ba1155f3aa1d165c7e614551d,"Merge branch 'master' into worker-resource

Conflicts:
	client/src/main/java/com/metamx/druid/QueryableNode.java",2013-06-27T19:52:58Z
cce62cbd8b3d5338f8ffa80d4a47d442822691ad,The highly important commit of changing a log line,2013-06-27T00:27:04Z
8e7d991a09ca39ba33dc4f6e91882a5769e7aef7,Re-import of test-harness.,2013-06-26T23:53:03Z
511ee6c4cb55d51e9db4304bb5d509cdab642ffb,"Arg, botched import. Trying again after cleaning it out.",2013-06-26T23:52:00Z
89a12b955a897449f97093471b6c9c01b16b6e42,"Initial, working re-import of test-harness.",2013-06-26T23:50:41Z
8bc4d7c436b79718706cd42168ca0a9f8302fdf9,added druid header,2013-06-26T22:16:21Z
235ecce522346e14042fa4fbe56791c1070a2b66,fixed constants and made them static finals,2013-06-26T22:12:55Z
e3f0b8770bb7930ff7492697de68c501b091dce0,updated with Fangjin comments,2013-06-26T22:05:52Z
15a4dae2b17c605c7812eed7bbd464bbd8e6f319,bunch of issue fixes,2013-06-26T17:45:54Z
1bdf38a22234f967ba07424a829e53da68f586f3,Nuked test-harness. Starting over.,2013-06-26T01:16:47Z
4d68bf11148a4862494ec77c6020657df8b86bd4,Merge branch 'master' of github.com:metamx/druid,2013-06-25T23:01:54Z
039b06d64676e41b70b7e6c88955ccf29dd4b593,made sure only edited files were pushed,2013-06-25T22:01:19Z
4e4a0a79532e8285d36a72b49c01906e36fa44ba,removed DS_Store files,2013-06-25T21:58:12Z
0e1857f046f347508c8cb32a1d91eb28dc6b74ea,Applied codestyle and optimized imports,2013-06-25T21:48:02Z
8750ee88f20054d1cbd6933ca9aa0d9b7f57c42b,Webstream example with tests,2013-06-25T21:37:58Z
cd0fa34a73bfd38b133fc0e1a28f4d26b947cfc7,1) Log exception when there is an error removing a segment,2013-06-25T18:18:04Z
f215e6d178905a14ce35f16c53157c1656591a31,Merge branch 'batch-zk' into worker-resource,2013-06-25T17:36:59Z
b92781683d64109fc87d3f9224a56dafff18897e,"Working on exsternalizing kafka, but at the moment have a script that downloads its deps. Removing included jars",2013-06-24T23:27:45Z
b2de6c8da5048c22a480a5b9830fe91bc3d3c966,Removed tarball from repo,2013-06-24T20:41:06Z
535e254382950e90d057e81f0bb2fa200d03ea9c,bug fix and test for time boundary,2013-06-24T20:03:39Z
f35b6f28eb6cf1e249782bf9c046d70fd3537a07,Including druid-test-harness as test-harness/. See https://github.com/housejester/druid-test-harness/issues/1,2013-06-24T20:02:43Z
149c2e3560935fb5590da4f86b620012cff19e47,"1) A bunch more changes to make things actually run.  Not quite done, but close!",2013-06-21T00:19:51Z
e242baacf4778928c5da5474399d57b82f809866,Merge branch 'master' into batch-zk,2013-06-20T23:21:33Z
5720b45b0a9aa89f128dee39e703de0353646951,tests,2013-06-20T23:21:08Z
748695bf974cfdff30cd75118f7e8c7de698c2e2,trying to recover my files on intellij,2013-06-20T21:59:52Z
caa68e101ae4f41de0a65f7987bb2ad44030bdfe,first commit; things working right now,2013-06-19T22:56:45Z
9d80369c2b6a23e183604ba0094afaa6f27b9019,Merge branch 'master' of github.com:metamx/druid,2013-06-19T18:16:13Z
369412262e090236ed4f3a6c4c6181852d8b8193,"1) Fix truncation math when figuring out what Segments to persist for realtime plumber.  Previously, Sinks could get persist-n-merged without actually being ready to be persist-n-merged. Fixes #168",2013-06-19T18:15:58Z
11ea15fc1a90604c8edd71a26b9f9d9bc451d650,"1) Introduce Jetty 8
2) Fix up modules based on exceptions at startup for MasterMain",2013-06-17T17:53:50Z
87b687bd60faef489bd933163d86fa0a3c9063cf,"Merge pull request #158 from kOD-dKOD/master

Tackle ""merged"" dir. issue after restarting realtime node",2013-06-14T05:19:17Z
c7274f2fbc3a67fbaffdae1bbb2ba1d53482cf5c,"Merge pull request #166 from rjurney/master

Fixed auth problem with twitter example",2013-06-14T05:17:32Z
0bd4e8b01633dbc52fb786cff4a1209b27d58969,Fixed interactive twitter example to ask for consumer/access keys and secrets upon run.,2013-06-14T01:20:28Z
58780094a999ee2e1395fad227379238a8ea0d32,"Upgraded to twitter4j 3.0.3, twitter example now works with twitter4j.properties in place that lists key pairs.",2013-06-14T00:59:17Z
270a4993cea5ac6f9ceb7f37dcf921749b62bfa5,"Update RealtimePlumberSchool.java

Put a check to make sure that we're only looking for the folder those have number-only names, to avoid ""merged"" directory issue.",2013-06-11T06:35:17Z
06f7e7e665b6a9ba9f064d95ef1178da93a9165b,1) Fix DatabaseSegmentManager so that Unit Test passes,2013-06-10T21:13:28Z
b96d6b354674ffa21a03c6d70cd1859c2f05b0ab,[maven-release-plugin] prepare for next development iteration,2013-06-10T21:11:19Z
c465d4ef8c9e11312b82ad926c55857b4bc27404,[maven-release-plugin] prepare release druid-0.5.4,2013-06-10T21:11:09Z
320682ca0d038fa1f8a127502e39db3ff530ada3,Merge branch 'master' of github.com:metamx/druid,2013-06-10T21:07:41Z
3312d9b8020aa36eea9cc2c3e233648738cb1a6c,fix merging problem with linear shard specs,2013-06-10T21:07:36Z
c4a3a9b2fccb84e146693fc4bda97f2cb553caac,1) Fix scripts to run the examples from a fresh build,2013-06-10T18:53:57Z
2f56c24259b0ea7743429956f0e90cdc8c067f79,"1) Inject IndexingServiceClient
2) Switch all the DBI references to IDBI",2013-06-08T00:37:33Z
12e78955db97cb9bb782299627f6601a3a26ae91,[maven-release-plugin] prepare for next development iteration,2013-06-07T21:17:39Z
962db29e70a8fd0e5b51a907a7cf967ab2238484,[maven-release-plugin] prepare release druid-0.5.3,2013-06-07T21:17:32Z
06f90bc2e1b7c7d285c2c7b0ca8f9b4c5fe7b278,Merge branch 'master' of github.com:metamx/druid,2013-06-07T21:15:39Z
a949f1672dcc171c4e4e0d84369b3b8b6ee49543,1) Fix bug with Master stopping trying to be Master after he losses it once,2013-06-07T21:14:58Z
7bf357ceee6386ec4a65d6a5d95d63a8deeda7ef,Merge branch 'master' of github.com:metamx/druid,2013-06-07T21:09:05Z
37a39940034422c7cc1d4eeaa6934c9d9933ed74,add delegating executor service and fix bug with query priortization,2013-06-07T21:08:51Z
809a958513e7bf93290298da612c21afb054b2ca,"Merge pull request #155 from metamx/snappy-cache-compression

enable cache compression for memcached",2013-06-07T20:10:02Z
899bae1cc5f4be94214d60c097eb0e9f44d93bee,swap out snappy for LZ4,2013-06-05T19:51:29Z
d5dd29e23f9c9a05127a381aeb0b473532afe5a6,enable snappy compression for memcached results,2013-05-28T21:50:26Z
f68df7ab692e09e7a878be02fcadeaaa4aafd35d,1) Make tests work and continue trying to make the DruidMaster start up with just Guice,2013-06-07T19:01:46Z
a0462374b035c9a81d1d670d2f4a36a95abb62c1,"Update RealtimePlumberSchool.java

There was an issue if you restart realtime node and merged dir is still there it will throw exceptions. To tackle this issue a check has been added. So now only persisted dir/files will be read and anything from ""merged"" will be avoided.",2013-06-07T08:32:25Z
67be515db621914cf22d6b952b5c6251addfd614,[maven-release-plugin] prepare for next development iteration,2013-06-07T01:25:07Z
8dbb69c8a8f775f4c9a26476b4cee325e0c09bf1,[maven-release-plugin] prepare release druid-0.5.2,2013-06-07T01:24:59Z
d69fb61a6e137bf9f7ccacf2e4033cf7c4af1f59,Fix getImplicitLockInterval check,2013-06-07T01:22:41Z
ee38ca546399322f93ce7ee7d6ea4f3a66f1f802,[maven-release-plugin] prepare for next development iteration,2013-06-07T01:00:31Z
a36d0007ac35815b2f473cf1fb6025920226c205,[maven-release-plugin] prepare release druid-0.5.1,2013-06-07T01:00:24Z
14f9b0409e4a6c8ec47ff36d5ded54fea2053580,fix pushing down too many properties,2013-06-07T00:58:40Z
d5b7e644b6379562f5c44441dcf33099bb3b4489,[maven-release-plugin] prepare for next development iteration,2013-06-06T23:10:45Z
2113715f5d5f0d0a8ae3361f0cf9e3451906bf19,[maven-release-plugin] prepare release druid-0.5.0,2013-06-06T23:10:39Z
f1dea971f2bb129c12aa190f77ae6955e5278c7a,"Merge pull request #156 from metamx/query-prioritization

Query prioritization",2013-06-06T23:05:47Z
19c5dacf3abd55bc5665884b8055d4062f303e4a,more code review fixes,2013-06-06T22:57:18Z
9df458a0651774f52163f3054732ef591e59f9e0,1) Initial commit of conversion to using Guice modules for bootstrapping.  Things don't actually completely work yet.,2013-05-14T16:25:57Z
e20f54726106e5f17a5d44c27926de18fa6866dc,fix according to code review,2013-06-06T22:37:19Z
b8feb98616a86b295c014c922c617e64acbdc3fd,1) Make Master honor the druid.monitoring.monitorSystem property to turn off Sigar,2013-06-06T21:55:23Z
d48b4d8d97bb2db806ec1c716490ddf39724a3b8,Merge branch 'master' into query-prioritization,2013-06-06T21:19:50Z
c2e0fb7b8e49fa0e6c399c328dc4ff320bcde150,"Merge pull request #148 from metamx/refactor-indexing

Refactor indexing",2013-06-06T21:12:33Z
e4ea357b52c2e45ba3dc4e7dc7e86fa9b0653ee3,multiple bug fixes for indexing service; scv quotes,2013-06-06T21:10:18Z
451d3d358b048a0113b4204499d76fa821621ed5,some fixes according to code review comments,2013-06-06T18:02:08Z
8202bc70eb388bda3fa7c68f49d6657903985438,optimize spatial and update poms everywhere,2013-06-05T22:26:40Z
61074daa67d70041c8f520fea1b6850125a7230d,fix merge error,2013-06-05T01:56:20Z
63b379ae90d79c6aa770ff19d0a3e35e5ca10ebd,Merge branch 'master' into refactor-indexing,2013-06-05T00:25:16Z
06931ee0f591e1991d0d4b1b347eb8141512bad4,introduce availability groups,2013-06-05T00:12:19Z
1a02637beab327d9997fb020ba6bc17573c6f79f,"1) add full parameter to master endpoint /info/rules/dataSourceName that returns the fully resolved rules, not just the specified rules",2013-06-05T00:10:25Z
85ac8d43b6705abf13058f852ba6f5941b6d1f92,"Merge pull request #153 from metamx/gzip-compression

HTTP gzip compression support",2013-06-04T22:45:51Z
42cc87a294cdf7454aa90272d9284324c5bde041,"Merge branch 'master' into refactor-indexing

Conflicts:
	indexing-service/src/main/java/com/metamx/druid/indexing/common/task/IndexTask.java
	pom.xml",2013-06-01T00:28:59Z
d5c2fd604f4200fe2e93abdf4e2e199271a3a7de,add new preconditions for taskqueue,2013-05-31T23:28:41Z
93e7ea3787e774da75d08fb26478d74be713a440,[maven-release-plugin] prepare for next development iteration,2013-05-31T22:53:23Z
3d28fcd5e01f811b6c57df8210c596db97dc4966,[maven-release-plugin] prepare release druid-0.4.32,2013-05-31T22:53:17Z
7dcbea464f259b4bf5e38660dd13e036953f929e,fix bug with out of order events on broker,2013-05-31T22:50:53Z
2138f9fdf2d7fb0986286f0118b7195c5a0ad658,prevent ISE at broker from completely failing to return results,2013-05-31T21:28:55Z
c02113879d00b78e7a273eeed0549620af6d16dc,[maven-release-plugin] prepare for next development iteration,2013-05-31T21:00:45Z
5a3f69ae78eeade6d16cf257e4e3fba9fde50c88,[maven-release-plugin] prepare release druid-0.4.31,2013-05-31T21:00:39Z
f1f465fcab9d9caf49deba4a8bac2651ca9cbcc2,fix bug in RTR with statuses getting removed,2013-05-31T20:59:04Z
ffbf0e23b6b927ae21e6d9b4fb7a2eacd802b228,cleanup,2013-05-30T19:58:24Z
71feb0afeb025708a313bfb4239df772697a327c,Merge branch 'master' into query-prioritization,2013-05-30T17:23:28Z
09f7b181d4bac86c9c6192169aaa0d19a3b1c0ff,"first commit, working UT",2013-05-30T00:04:25Z
9cb9f4753de12a005a1d25befa836bb862c5ac35,[maven-release-plugin] prepare for next development iteration,2013-05-29T16:50:10Z
dd9ac03809f557d88e9486448911dee7077afbdf,[maven-release-plugin] prepare release druid-0.4.30,2013-05-29T16:50:02Z
a20d1ab505b084b3424633fffda095835671a0c9,update curator version,2013-05-29T16:48:31Z
73a392d94a08bb1b00c5c4f3cf05689946851eea,[maven-release-plugin] prepare for next development iteration,2013-05-28T21:28:49Z
c6eec7eb27fd683fc06ab241b1937ae8f1168c86,[maven-release-plugin] prepare release druid-0.4.29,2013-05-28T21:28:42Z
bd9e6fecc18c80378c51949118ab0a41f66c45ed,fix day 1 issue with VIT,2013-05-28T21:26:49Z
54932e3187bfc6b1f1c47ca28470f49dca6e8f74,[maven-release-plugin] prepare for next development iteration,2013-05-26T19:43:28Z
9d105ef4ad7cfaa729cc15299b5724ff93876aea,[maven-release-plugin] prepare release druid-0.4.28,2013-05-26T19:43:21Z
00cfb3254185d1e0104d4e593d04971fabe3c521,also remove curator listeners on cleanup,2013-05-26T19:41:53Z
69a9e04563a200b91121606d1b93d58ffdf2f51e,[maven-release-plugin] prepare for next development iteration,2013-05-26T19:33:05Z
39ae7485fde887973eaa99b26172e04ca20d866a,[maven-release-plugin] prepare release druid-0.4.27,2013-05-26T19:32:57Z
113db061a8aab423f4e6b1069a28e3682a81c69f,discovered the cause of broker not being able to find segment issue,2013-05-26T19:31:18Z
e08770695fdb8a4922af91696cdc1c8e25767942,[maven-release-plugin] prepare for next development iteration,2013-05-23T17:53:29Z
4c8d9e9f16da866769ea2d07607504bc55c291b0,[maven-release-plugin] prepare release druid-0.4.26,2013-05-23T17:53:21Z
58335fd73f1176b8a4019575fc7100a30ae27765,tony the tiger must love logs beacuse they are grrreeeat,2013-05-23T17:51:44Z
b5e30cf701dbd04e34672cec8e11053d106f56cd,[maven-release-plugin] prepare for next development iteration,2013-05-23T17:05:24Z
8cc4202fd527baed8698d54017a40d32cf99c342,[maven-release-plugin] prepare release druid-0.4.25,2013-05-23T17:05:18Z
9b6098f778ac9f4632129ba409cf1d08a4a1438b,more logging for curator events,2013-05-23T17:00:12Z
27d4f46156bb70331c0b901ad7f6699db128d9b4,[maven-release-plugin] prepare for next development iteration,2013-05-23T06:55:15Z
07ac16633cbd74bbbbf35eb85bd497abf3f189ce,[maven-release-plugin] prepare release druid-0.4.24,2013-05-23T06:55:06Z
1537bcf55a86cee4e062e62d4fe6545579cbca1e,restore server selector behaviour,2013-05-23T06:53:31Z
192b24c35500c79b7f3a82ae51a7a9e042b43132,enable gzip compression for HTTP requests,2013-05-23T00:16:56Z
32999006908a767ea25ce60d95a811d9207096a8,[maven-release-plugin] prepare for next development iteration,2013-05-22T20:36:50Z
08f1cfb68ec94ba43d534275e7c5458405d24490,[maven-release-plugin] prepare release druid-0.4.23,2013-05-22T20:36:44Z
1fb8c9db7f68d5e69feb44f1a579c4e758ff3b68,fix spatial bugs and more tests,2013-05-22T20:35:12Z
47f2d3b0aa7e7b5628b03497d39f05381ee9d694,fix druidsetup properties path bug,2013-05-22T17:25:11Z
3a9d892b056ddca4160314eb57708d97d11d57f5,[maven-release-plugin] prepare for next development iteration,2013-05-22T04:34:42Z
7e6350321b4dc8e92b66909d5e2c28982d7c02db,[maven-release-plugin] prepare release druid-0.4.22,2013-05-22T04:34:34Z
39f55a010cb704738cf9ee190dd74f6005d550a6,additional bug fixes for hadoop based spatial indexing,2013-05-22T04:33:06Z
aa5280028f4b4b18b2e0cba32de2bc13b466fbfa,[maven-release-plugin] prepare for next development iteration,2013-05-22T00:12:23Z
c6436dad781e835988bc8bd744a449b3395f0822,[maven-release-plugin] prepare release druid-0.4.21,2013-05-22T00:12:16Z
6e5b893e6dfb0b5bb0e44d762497e14a3af1b016,make spatial filters work,2013-05-22T00:10:44Z
69c7131a7ba20847dc65b3242acc1b012dcc5d13,cleanup interval determination in II,2013-05-21T04:06:32Z
e404442ad4ee48fe997f632d9fc5f3585f1a2ef1,[maven-release-plugin] prepare for next development iteration,2013-05-21T03:21:03Z
b7604c2332167c6fa3e3f445ee3d001736cf8848,[maven-release-plugin] prepare release druid-0.4.20,2013-05-21T03:20:55Z
efc92e7ca633fed0b9e8663cded3eecee35502bb,bug fixes for segment metadata queries and spatial indexing,2013-05-21T03:19:18Z
cccd5758def85f41a398a78be86924949c8d6977,[maven-release-plugin] prepare for next development iteration,2013-05-20T20:46:28Z
a9837cc1dd7e8c15391e4f293f40bf409ff32419,[maven-release-plugin] prepare release druid-0.4.19,2013-05-20T20:46:18Z
1b4a543f25ee8c53769e158c1f1f3301393db230,add default cassandra configs,2013-05-20T20:44:33Z
9376a313fc185f88c2a18cf998b3ede504cbc20e,[maven-release-plugin] prepare for next development iteration,2013-05-20T19:19:58Z
af494be074f009b51d6969d725dd333c4e00fa48,[maven-release-plugin] prepare release druid-0.4.18,2013-05-20T19:19:50Z
a7925250633fe243a56d52bfb4630a56ecf67e4f,"Merge tag 'druid-0.4.12.5'

[maven-release-plugin]  copy for tag druid-0.4.12.5

Conflicts:
	client/pom.xml
	common/pom.xml
	examples/pom.xml
	index-common/pom.xml
	indexer/pom.xml
	merger/pom.xml
	pom.xml
	realtime/pom.xml
	server/pom.xml
	services/pom.xml",2013-05-20T19:14:23Z
ee51a5d1ae61f534f32e50607f698829f6fa2d19,[maven-release-plugin] prepare release druid-0.4.12.5,2013-05-20T19:07:54Z
54c48aac6ddd3d811120d1803c17e7f785fca2cf,fix DruidSetup not working,2013-05-20T19:06:21Z
e28a89646362c6a73b30c9683ecf10a539e47d73,[maven-release-plugin] prepare for next development iteration,2013-05-19T00:37:30Z
8ba757d8d74a87b5cce7cee7610bd74d8e92fd14,[maven-release-plugin] prepare release druid-0.4.17,2013-05-19T00:37:23Z
36b6f5c639b8ad757d0c7a3b3a0af2163715929b,"Merge branch 'druid-0.4.12.x'

Conflicts:
	client/pom.xml
	common/pom.xml
	examples/pom.xml
	index-common/pom.xml
	indexer/pom.xml
	indexer/src/test/java/com/metamx/druid/indexer/HadoopDruidIndexerConfigTest.java
	merger/pom.xml
	pom.xml
	realtime/pom.xml
	server/pom.xml
	services/pom.xml",2013-05-19T00:30:31Z
10bf25a66e22ad1a031c07cad271eb298e001103,"Merge pull request #152 from metamx/partition-distance

DeterminePartitionsJob: Minimize distance from target instead of mean",2013-05-19T00:26:18Z
7f7ea485b17415f2011595d0ab25afa63dbbcb01,DeterminePartitionsJob: Minimize distance from target instead of mean,2013-05-18T23:58:30Z
d8265376728888a16f24f85b23536e5b19fc6615,[maven-release-plugin] prepare for next development iteration,2013-05-18T20:44:54Z
dd11c757ea8d6933d2580d5528da2e2e07ff83c9,[maven-release-plugin] prepare release druid-0.4.12.4,2013-05-18T20:44:47Z
0e2fe69130343167c7867f349e1a1d5e50793da9,[maven-release-plugin] prepare for next development iteration,2013-05-18T20:37:27Z
d197eafe1ee239eecdc2d7504682fefbbdc47974,[maven-release-plugin] prepare release druid-0.4.12.3,2013-05-18T20:37:18Z
a66425fe2f398bc9319b94b8938328f571f1c632,fix according to CR,2013-05-18T20:32:33Z
8af9598157446201010e403686bf5eb387eadc27,fix currSize bug and maxTime bugs,2013-05-18T20:21:45Z
e76fd18a3640f8bab572fdae663208efca7b4a53,[maven-release-plugin] prepare for next development iteration,2013-05-17T19:06:24Z
7c687aeb73ea06e68fd50c6d6223660c1616f021,[maven-release-plugin] prepare release druid-0.4.12.2,2013-05-17T19:06:16Z
31f5cb5c8f5fce499de2657c93994759c4ff699f,DbConnectorConfig: Serialization is hard,2013-05-14T21:39:29Z
f80e85517cffe4e8924f1a1c1587b77b27795843,[maven-release-plugin] prepare for next development iteration,2013-05-17T18:14:16Z
5df2e40d4e52657c580e702b9702166e5a9f34c1,[maven-release-plugin] prepare release druid-0.4.12.1,2013-05-17T18:14:08Z
b420892dd9dc038e5d695fa766228ece04bb16c3,HadoopDruidIndexerJob: Fix NPE,2013-05-17T18:08:39Z
b0a58af05d5269e48ebe8b4c4eeedd0359a2e1d5,"Merge pull request #140 from boneill42/cassandra-segments

Initial implementation of Cassandra Data Segment Pusher and Puller",2013-05-17T16:56:44Z
c8ff5ca2fbaf00d7b0f586ec3cf438b4c5200740,"Using string formatter in log statements.
Clean up of imports on the pusher.",2013-05-17T16:54:03Z
8b8c59d3097dc0b4886b607c162e100eeb467227,Merge branch 'master' into refactor-indexing,2013-05-17T00:35:50Z
612f1fb39b05b78dd8d1583b1c46f0b885e4a6b2,[maven-release-plugin] prepare for next development iteration,2013-05-16T23:31:19Z
c6a36c6522a4998d56e1a9984e575ee3f6bafdf4,[maven-release-plugin] prepare release druid-0.4.16,2013-05-16T23:31:12Z
217bd77b87c0abd0b4b8ef6b180032262a6d5c4a,Merge branch 'master' of github.com:metamx/druid,2013-05-16T23:27:47Z
2aa465f940259021df5533f88ef4ce297f7a74eb,add serde for spatial dim schemas,2013-05-16T23:27:42Z
de8512cc954447e30b3da7704c92620411771133,"Exclude org.codehaus.jackson stuff from aws-java-sdk, so we can get a newer one elsewhere",2013-05-16T23:25:47Z
08d84001ba850f85f44b93b41e60cc41e555808b,Merge branch 'master' into refactor-indexing,2013-05-16T23:03:29Z
c6ad0753f06e0a411e72e7b6fafe2e84aef94b91,bug fixes,2013-05-16T23:02:20Z
aa29af8b2431b433cce5dbb7f85cc464193b2445,[maven-release-plugin] prepare for next development iteration,2013-05-16T21:54:12Z
5905b6ea6b7f3589500e8b2489be625ad112e126,[maven-release-plugin] prepare release druid-0.4.15,2013-05-16T21:54:04Z
8c1004d8c426a5444b25803ac64a95a2dc7717b4,"Merge pull request #149 from metamx/determine-partitions-reducers

DeterminePartitionsJob: Only create as many reducers as needed",2013-05-16T21:30:35Z
61c014c49fd9862446445772146b8d54b4c66cd6,Cleaned up imports.,2013-05-16T17:33:39Z
c997c7ea13c3828ccf22cafefab914a4d5f9838c,"Merge pull request #141 from boneill42/sequence-diagram

Sequence diagram for segment propagation.",2013-05-16T17:30:06Z
23998f3f01229984c079a230c173758e1ad9cf89,"- Added cleanup to the puller.
- Edited the documentation to remove reference to real-time node.",2013-05-16T17:04:46Z
c038616bb95c09e766f1a3e8ff873c69c99e9625,DeterminePartitionsJob: Only create as many reducers as needed,2013-05-16T01:53:25Z
835187be6fb4a7888bdf612e299064c155953f88,fix poms to pass unit tests,2013-05-16T00:38:59Z
26e0eb62cbefe3db4dedbce30b37b2de573b8062,merge and other refactorings,2013-05-16T00:28:08Z
6213c0b63ce7e7b8246c0fb0164d5ea9c4f76051,Merge branch 'master' into refactor-indexing,2013-05-16T00:14:40Z
0f8e00f072ebebaf703d4972636d9dd471f2dbf3,move publications into docs,2013-05-15T22:51:04Z
89f0a6cc09fc84557a394a57069bd27395e87f3d,"Merge pull request #127 from metamx/spatial

Spatial indexes",2013-05-15T22:50:25Z
1d232ee93092a88867cd9ee270ed5419a836d985,Merge branch 'master' into refactor-indexing,2013-05-15T22:37:25Z
20ae1d8b6bf6511b7bc6c33d8c7421c9bee350da,lots of cleanups and refactorings,2013-05-15T22:37:04Z
384e9085f5dd3d4316ee4af6e7597642b073b8d1,HadoopDruidIndexerConfig: Fix default cleanupOnFailure (should have been true),2013-05-15T08:36:49Z
06e09a1eb5b3af880ccf93c312282a553ca81c04,HadoopDruidIndexerJob: Logic is hard,2013-05-15T08:27:05Z
040467c969fc4164effe45bf37bba73b41e097fc,HadoopDruidIndexerJob: getPublishedSegments before deleting them,2013-05-15T08:23:18Z
803e8ff69e863fe98b9c32d8c1712f12a3e8e722,add configurable spatial dimensions to hadoop indexer,2013-05-15T00:38:05Z
5af188f18dfd1f56799cb49e2ce29a97fa82f8bc,Merge branch 'master' into spatial,2013-05-14T23:10:18Z
86415e70ea0810d476642b66f085544e9770f70b,"Merge pull request #142 from metamx/improve-bard

Enable the broker to select a compute node will the least number of open connections",2013-05-14T22:18:04Z
236fe64e91eaf6602516e240432c3fcf49aabbd0,fix stray import,2013-05-14T22:17:49Z
9a46c85bca6d10289661be5e24d27b74f7a6917a,Merge branch 'master' of github.com:metamx/druid,2013-05-14T22:00:25Z
fe5627e119e172dcc346428b75dbe363b911d18a,1) Left some log lines in the tests...  That's no good.,2013-05-14T21:59:34Z
8bd19e9d045a3f42ee95a7873a0149170c56353a,"1) Take in g9yuayon's pull request, fix merge conflicts and formatting",2013-05-14T21:55:43Z
1e14ea7fab46c512c127ee855ea1326ceebe9a64,Merge branch 'master' into improve-bard,2013-05-14T21:53:05Z
e8ab0893ff3ffaabc0864e0b026b051cc726b9b6,fix column size reporting,2013-05-14T21:52:38Z
83fa572ab34b54b82d0e318b3bec3f36985946c2,[maven-release-plugin] prepare for next development iteration,2013-05-14T21:43:38Z
ecf52f4265f508dd5e973abdc83191f237145edd,[maven-release-plugin] prepare release druid-0.4.14,2013-05-14T21:43:29Z
343af872b5586d1fc10b75733a9af57be7c365ab,DbConnectorConfig: Serialization is hard,2013-05-14T21:39:29Z
89990808012e0fe9b5c789253f48e697b186a792,[maven-release-plugin] prepare for next development iteration,2013-05-14T20:59:17Z
55a986bc7d1cfd7fc4be62f77a4212ac36d51295,[maven-release-plugin] prepare release druid-0.4.13,2013-05-14T20:59:07Z
774e6d3072b617dd319c2ccbd3236089b81c1e31,"Merge pull request #147 from metamx/hadoop-max-partitions-config

Allow variable maxPartitionSize in hadoop indexer",2013-05-14T20:26:21Z
9ed80df03ebc85074a4d7b3e4bed76949d763e4b,Allow variable maxPartitionSize in hadoop indexer,2013-05-14T20:01:53Z
4c93cecd31c23eb5eb07b936597524f8a64feb90,Merge branch 'master' into improve-bard,2013-05-14T18:10:52Z
75a464abe218f3b68dfc772ebf4456620ace83d8,1) Initial commit of conversion to using Guice modules for bootstrapping.  Things don't actually completely work yet.,2013-05-14T16:25:57Z
7d34710edf8196d9e3a843e99c9ea09154b05858,[maven-release-plugin] prepare for next development iteration,2013-05-14T00:31:11Z
d8d7d92f6588f38c2c2821ffef184ebc6d81b733,[maven-release-plugin] prepare release druid-0.4.12,2013-05-14T00:31:02Z
5c9df858831f5ada748b5001320b4b334a938ec6,better path validation,2013-05-13T22:21:45Z
2c45f3349751063ac564909ec5092ff161299bff,[maven-release-plugin] prepare for next development iteration,2013-05-13T19:39:09Z
57e1cf5f1d9b036a89f5457f90f7657ec333f5a5,[maven-release-plugin] prepare release druid-0.4.11,2013-05-13T19:39:01Z
53c3af6633fd40cdb2aa039d3e29541031fecf2d,actually fix the bug mentioned in the last commit,2013-05-13T19:37:21Z
82c4cd5641c9fd24184c7e6e5bfb56e5f0879fd3,[maven-release-plugin] prepare for next development iteration,2013-05-13T18:08:39Z
1860104abe686b0edf1ba5b2cb33fe7a63c28ffe,[maven-release-plugin] prepare release druid-0.4.10,2013-05-13T18:08:29Z
9ab22f238e32d0a1bbd0613749a8bf6c5e08c3ca,fix bug in RTR for not correctly exiting after timeout,2013-05-13T18:06:46Z
1a978fe5252d1b2b61f045da7c06d847ad4ca41a,fix predicates,2013-05-12T22:26:19Z
219a8d7d05256cdeb045083c694871603533cf2a,[maven-release-plugin] prepare for next development iteration,2013-05-12T22:19:19Z
64febd47d76ead8350885aaa45317e0c4ba67ae1,[maven-release-plugin] prepare release druid-0.4.9,2013-05-12T22:19:12Z
89eb2aff5a0094a018c4535d17caaaa1fb77c24e,fix logging,2013-05-12T22:17:09Z
bcfeac2d8c4d75589c1c74d52bb9c92cb1596223,fix NPE,2013-05-12T22:14:57Z
8e38a85788e07852960b0b148e110a0ce2e33078,Merge branch 'master' into improve-bard,2013-05-10T18:05:29Z
7cc30a0747284828e240f9a96a7aecc84a4e6805,cleanup,2013-05-10T18:04:58Z
6917ff02d87a5a8cb522f892a48382a73448943d,first commit,2013-05-09T23:53:29Z
3e3f2c2da7bcc7ae06cee1ac738f99654516c8cd,HadoopDruidIndexerJob: Correct error message when jobs fail,2013-05-09T22:02:10Z
bec5d248f04c83a0f00a26e582580c7500392191,fix typo,2013-05-08T22:38:45Z
8e0c0e6d47c1e45270ba9e5357094270b4c1e28d,Switched to default the aws properties.,2013-05-08T20:02:11Z
3eb0f4dfcab1f89c6a829a3a136efa43607c54ed,Fix hierarchy in Pusher (to use CassandraStorage superclass),2013-05-08T19:50:58Z
e1deaccd87ca83fd2935b7e87e7a0bc205e90c2e,Merge branch 'master' into spatial,2013-05-08T18:46:46Z
8388d0593ae11f1b79dd0f3959f7c77169f7027e,[maven-release-plugin] prepare for next development iteration,2013-05-08T17:56:22Z
79665d325fdb04d3d74cab637a0c78a6e9cfa02d,[maven-release-plugin] prepare release druid-0.4.8,2013-05-08T17:56:12Z
b93c7e1128508f383b14adcdd976c88111ccd6cc,fix serialization of request logs,2013-05-08T17:37:46Z
986bb2482d6348121cd9bd452f8626b673b427d1,Merge branch 'master' into spatial,2013-05-08T17:37:38Z
e20aabd7a9ae6d9c70e5b3d40591623ce87c71dd,[maven-release-plugin] prepare for next development iteration,2013-05-08T17:17:25Z
758baa913b40457480b5ba852640682ed97a22d3,[maven-release-plugin] prepare release druid-0.4.7,2013-05-08T17:17:17Z
43d3c53806084286f91b42c01ad1c6e5370d8b95,fix order by double sum agg,2013-05-08T17:14:40Z
32f82364f1a9183c692170911175aba636676ac0,Merge branch 'master' into spatial,2013-05-07T21:12:05Z
69a14ae922e4e598e492f983ef47cea61fdd8788,Added diagram for segment propagation (with websequence text),2013-05-07T21:09:42Z
4c092cb28037871646f3329743ff72e4763734e3,Merge branch 'master' of https://github.com/metamx/druid,2013-05-07T21:01:57Z
10a96626d47be26c95f035dbc31f61f633e60018,Documentation for C*,2013-05-07T20:53:12Z
913cf3706036c4acc5a60ba80d621559d09352a7,[maven-release-plugin] prepare for next development iteration,2013-05-07T16:32:54Z
d883001aaa397c43ef50514098802a4a98e28ce5,[maven-release-plugin] prepare release druid-0.4.6,2013-05-07T16:32:46Z
f5dab1a4c168a4b735da7d58230967f2c93fb3f4,add to string for groupby,2013-05-07T16:31:07Z
863b8808ccf8fe1f44011a709bc74f49619dcb11,Merge branch 'master' of https://github.com/metamx/druid into cassandra-segments,2013-05-07T15:36:49Z
41e9f8fcb4f3e240d7b9b0f2309012b472a01b0d,Working Push & Pull.,2013-05-07T15:35:14Z
17835e6e08eaf4ceb01d41b9c5516a034111f3d5,Examples for the cassandra storage.,2013-05-07T03:41:58Z
8e8736291f5407851a03815d8c403218e3de1d20,Added puller.,2013-05-07T03:14:18Z
01c1257cee2a7ac5981a8ca7a1f4d897c1e1af3d,"Merge pull request #134 from metamx/event-push

Event push",2013-05-06T22:10:44Z
7930a76b0b7f38f9864e201e7aa724091d6c3253,EventReceiverFirehoseFactory: Remove useless getHandlerId method,2013-05-06T22:00:59Z
202953c57bd88e6ebcea80c497347be65c5151ea,"ChatHandler: Remove useless method, add docs",2013-05-06T21:58:47Z
142668cda5bef94f7fe6155e9413ce7382b89604,Merge branch 'master' of https://github.com/metamx/druid into cassandra-segments,2013-05-06T21:54:56Z
79d802fedeec0d1fa3cd43536ea4ff6c4a2af342,Working data segment pushed for C*.,2013-05-06T21:54:12Z
d9b72e314e41c8885fdb7a18999ba56c7af5d44b,"Merger: Replace EventReceivers with ChatHandlers

This allows task-related objects to create any http endpoint their little
hearts desire.",2013-05-06T21:45:48Z
f7dfea056be282bb26aed2e0bb9906e2970ea5f6,[maven-release-plugin] prepare for next development iteration,2013-05-06T21:30:11Z
a4bd6bc843f3ab014836ffa568c8d30567dc081e,[maven-release-plugin] prepare release druid-0.4.5,2013-05-06T21:30:03Z
f34d73aaff47b0f3997b97dac0944749df76d27b,fix pom versions because of failed release,2013-05-06T21:27:22Z
9c8a0152d8858e9d89cd482a8995329b170def49,Merge branch 'master' of github.com:metamx/druid,2013-05-06T21:25:43Z
0eb7b248d9eb0540f0cc12378350b2319ee70f3b,[maven-release-plugin] prepare release druid-0.4.4,2013-05-06T21:24:16Z
426c2b2c2d52b54f404ff24147f826fadf11940d,remove some_file.txt,2013-05-06T21:22:47Z
a25469eba66bcbd638600b609e06423adfe799d8,"1) Rename ""orderBy"" on DefaultLimitSpec to ""columns""",2013-05-06T20:43:28Z
9324b2337bc6113b305a679c24515e34fecb3795,Merge branch 'master' of github.com:metamx/druid,2013-05-06T20:34:50Z
cdd8f78ed3c77689c18269f6881d28d189e4c204,"1) Make GroupByQuery not require a limit clause
2) Make DefaultLimitSpec not require the ""limit"" field to be specified in JSON
3) Move a log line in Announcer to debug",2013-05-06T20:33:08Z
b18a548f5c5781bb0b20a916cf109354a2ea246c,update emitter version,2013-05-06T20:22:42Z
2ff9e28b2c8da03b675daaedb8a5c9bf82543e7f,Merge branch 'master' into spatial,2013-05-06T18:57:11Z
72e40fd97f1f69735fb4f97e66f675d89a39b478,"Merge pull request #138 from metamx/kit-building

Kit building",2013-05-06T16:58:44Z
16455fe99b31f9bb7bddf79b7d718f54bea6ef80,Merge branch 'master' of https://github.com/metamx/druid into kit-building,2013-05-05T05:10:07Z
cfe9b7f17780051998b55e1dfd46f24eb51ac1b2,Added a few comments and made sure it still works for non-kits,2013-05-05T04:02:31Z
c0e38981ff0717776c27d05cf4f18b723add17a7,Forgot to edit the source file so config was messed up,2013-05-05T03:50:53Z
5a9bf98b6c256657d6a1fb5cd1140b6bb1574234,Some changes to automatically build a kit with samples.,2013-05-05T03:04:16Z
8902986069ac334654231fc5255f9544fbbd4de8,Merge branch 'master' into spatial,2013-05-04T06:09:30Z
344a2b5d24eefd3976c0c54130dbb584d351314e,numerous bug fixes and improvements according to code review,2013-05-04T06:09:05Z
de720e6e1a27fdb18d811721e3a5e742c4a81a6e,[maven-release-plugin] prepare for next development iteration,2013-05-03T23:41:39Z
ba2b2fb39ff671adc9b5e6103a2bba781cee7d0c,[maven-release-plugin] prepare release druid-0.4.3,2013-05-03T23:41:33Z
36516d214e24675c4c5267ec4f6afe04c675f561,"Merge pull request #136 from metamx/group_by_order_limit

Some more adjustments to the order by/limit functionality on groupBy queries",2013-05-03T23:38:08Z
3417c50e98e6ee7338c08a14218a5fdc37419e93,"Merge branch 'master' into spatial

Conflicts:
	client/src/main/java/com/metamx/druid/query/group/DefaultLimitSpec.java
	client/src/main/java/com/metamx/druid/query/group/GroupByQueryQueryToolChest.java
	client/src/main/java/com/metamx/druid/query/group/LimitSpec.java
	pom.xml",2013-05-03T23:20:37Z
665f3ef0fd25470e78de9d247e93b2da0838bc24,"1) Unit tests for order by and limit stuff for groupBy queries
2) Adjustments to order by and limit stuff in light of unit tests-n-stuff",2013-05-03T22:47:18Z
3d262e6ef68269c6c549f28af5fdea901cde3419,"Merge pull request #135 from metamx/groupby-improve

Orderby and Limit for Groupby",2013-05-03T18:12:46Z
c15ac1fc908e8a5db84cafc19cae84ef6c9ead66,limit spec for group by,2013-05-03T17:52:00Z
d57141f46ef0ea60d81173847cc016bc58ef4b0e,checking stuff in but stuff not really working yet,2013-05-03T17:35:26Z
c89f4cc85f4fe0993667840706703f798d68f0b3,[maven-release-plugin] prepare for next development iteration,2013-05-03T17:17:05Z
4fef7c2c4313247de010a1ffab48686e9a6b79c7,[maven-release-plugin] prepare release druid-0.4.2,2013-05-03T17:16:57Z
6649a4b38d90455c1669939898c455ae19bc41dd,1) Don't require druid.zk.paths.base when attempting to load properties from zk,2013-05-03T17:13:57Z
b32a728863b80fefa6c5e494a63b8eea83c4d376,Move indexer zk paths to ZkPathsConfig,2013-05-03T13:38:23Z
af08ea7617021aab90e5e32d005258a8b07e5e9a,"ServiceAnnouncer:
- Interface with two impls, Noop and Curator
- Used wherever fine services are advertised

Initialization:
- Don't automatically register with service discovery
- Add makeServiceAnnouncer, announceDefaultService methods
- Replace serviceInstance with makeServiceInstanceFactory",2013-05-03T11:29:17Z
8ce55ac632d89935288ef4a6fc1cdb640fef3884,ExecutorMain: Fix args count,2013-05-03T11:26:54Z
3c04f1635c95083b8936777af468238075efec87,1) Fix bug with same name on multiple JSON properties,2013-05-02T23:00:50Z
5f184ea978d37fba9c4dd7b2087eca7802db8feb,[maven-release-plugin] prepare for next development iteration,2013-05-02T22:13:28Z
df6fd5eca7e4e1d4ee9c45ecd4e992beed74a4be,[maven-release-plugin] prepare release druid-0.4.1,2013-05-02T22:13:22Z
0b96585240fb4f0dad1aef9f29fcbacc5087bc93,1) Unbreak the build,2013-05-02T21:38:44Z
12fe145cc87a145157f2e6851226d26ec5b955a7,"1) Setup assembly to grab all dependencies -- it's broken right now, http://jira.codehaus.org/browse/MASSEMBLY-646",2013-05-02T21:35:06Z
8948c8d4ca3aa28aae5e12fee0a587d9c4d14040,"Merge branch 'master' into event-push

Conflicts:
	client/src/main/java/com/metamx/druid/initialization/Initialization.java
	examples/src/main/java/druid/examples/twitter/TwitterSpritzerFirehoseFactory.java
	index-common/src/main/java/com/metamx/druid/indexer/data/StringInputRowParser.java
	merger/src/main/java/com/metamx/druid/merger/common/task/RealtimeIndexTask.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/executor/ExecutorNode.java",2013-05-02T13:34:14Z
d1a8b93b3f83676592b5575769d3ada79629df97,1) druid-services -> services,2013-05-01T22:37:38Z
b82a4e57f3a2d160a67f7fca6523a6191b8a5f16,"1) A ""working"" assembly",2013-05-01T22:31:29Z
b8c8ed8d682dfb1c57e21142e81b297a868d25c1,Formatting.,2013-05-01T19:17:15Z
bf01399a2afc65e134391ad2766a5a1f5a684343,"Cassandra Data Segment Pusher, initial commit.",2013-05-01T19:11:50Z
6d4c0850ca32c85c4faf51dc4538915298a5148c,"Merge branch 'master' into spatial

Conflicts:
	client/src/main/java/com/metamx/druid/QueryableNode.java",2013-05-01T18:49:00Z
fd4b14ece288ee12f3fe455684c2698538b2675d,Eclipse formatting file.  (only what I inferred from a few files),2013-05-01T17:43:19Z
7f839f7e00ee622a98025cc1a01acee382cf93a0,"Fixes compilation error to accomodate multiple generic constraints in CharStream.

[ERROR] /Users/bone/git/boneill42/druid/indexer/src/main/java/com/metamx/druid/indexer/HadoopDruidIndexerNode.java:[100,39] cannot find symbol
[ERROR] symbol  : method toString(<anonymous com.google.common.io.InputSupplier<java.lang.Readable>>)",2013-05-01T15:28:27Z
e21e85b9fa34fa6b0e021dabad98515e639e0b0d,1) Make RealtimeIndexTask merge results like it should,2013-05-01T18:08:13Z
e1a2c43baf933601d4ee101e6df3306fae524155,"1) Adjust the example code to all be in one repository.
2) Adjust the run scripts to be able to switch between different examples.",2013-05-01T17:51:26Z
63ccb24ef6041d6fae254b179a4e3e96469acebe,"Merge branch 'master' into spatial

Conflicts:
	pom.xml
	server/src/main/java/com/metamx/druid/http/InfoResource.java",2013-05-01T17:12:04Z
407e413a90148cbfdce88cc4dfc082785f5f77b5,IndexerCoordinatorResource: Return 404 with proper json for status not found,2013-05-01T14:13:02Z
1a2135a0eaddc24d3db3b42f1ae8c7a1be157bc8,TaskStorageQueryAdapter: Fix getSameGroupMergedStatus for nonexistent tasks,2013-05-01T09:26:36Z
0a3492c9f5c236a7b9c89d3166e236439c7d2881,Move all the code for examples under the examples directory.  Also add initial take on flights demo.,2013-04-30T23:27:38Z
72982f5980020abc8933663f3f88855ad1732728,Remove the rand demo directory,2013-04-30T23:18:15Z
8922adb1f2cc9b45606056add62957b403070213,"1) Make the demos work again.
2) First step in restructuring the demos into a single repository",2013-04-30T23:13:55Z
e1367f256bfcaf7dbf20d199281452ef584bfecc,"Fixes #112, paths specified as ""s3://"" when given to HadoopDruidIndexerMain will be converted to ""s3n://"" and loaded via Hadoop's default file system for s3n.",2013-04-30T17:58:36Z
60b279b0d35e276d4bdd958a48950b7b46990650,1) Add support for storing segments in HDFS,2013-04-30T17:47:43Z
cd535fcd79973c199f9a92477b86b09ed5572702,"Merge pull request #131 from metamx/curator

Remove references to i0tec.zkClient and replace with Curator",2013-04-30T16:02:47Z
25d7ecacb1674792955c9b37b9c178e1331ad8a9,No more snapshots,2013-04-30T16:01:04Z
862365e1fa331a2163cfaf95f37ffb66b85557d2,EventReceiverFirehoseFactory: Move parse exceptions from hasMore to addAll,2013-04-30T12:05:26Z
a665e8b3b7cc14a10221269cd4e9a84709897b2c,whitespace!,2013-04-29T19:02:30Z
2630d75cd3136340dd8995f9baa6c42404ac2983,More explicit comments around Zookeeper race condition,2013-04-29T18:58:57Z
cee15bb88a7d5ec59c62c4dfa6ca8f142aced0b6,Adjust passing of nodeType to ExecutorMain to be via a system property instead of via a command line argument.,2013-04-29T17:05:59Z
405eed7c603d531ade319417a635d2909864f386,Better name for ServerInventoryThingie,2013-04-29T16:48:42Z
2849486251928804de15be5b76346287363d3a98,simpler sequence limiting,2013-04-28T22:34:43Z
67cafaa0b1f4dacf275c767b2c2e19f76477957f,Merge branch 'master' into spatial,2013-04-27T00:56:18Z
82a62e3ba0ea480cf906f11ca90d9d77d99f3a65,bug fixes for spatial and groupby; threshold for groupby,2013-04-27T00:46:25Z
52ba60963e801429aa786c0139a1e6e305f94759,Screwed up the conflicts on rebasing.  Fixorz orz orz,2013-04-27T00:25:23Z
99305b29c8da3a484bccb728ab5e02c73f15601c,Fixorz unit tests!,2013-04-27T00:16:56Z
74ff07ba3eab526e784e2fb399c28e22474be506,Moar unit tests,2013-04-26T23:46:07Z
87684060691463751401f7bf6c9497843b64ea2d,1) Unit tests!,2013-04-26T23:35:42Z
046647c20302b89bf8ff079b5e055c215e0b713c,"1) Make druid.zk.paths.base required
2) Unit tests for announcer and fix race condition with session death",2013-04-26T21:28:57Z
163a73bed1da25921e09ac401ec401237efa500e,More logging stuff,2013-04-25T16:11:53Z
19d80ccd9d8ab94f4038cc5486f0a3218c6f7603,Remove extraneous logs,2013-04-25T16:00:33Z
de5c8c9d64654174b439209d1171c917895b900b,It's better when things compile,2013-04-25T15:42:45Z
1eb2dfe17eee6660855779731966694c03301d66,1) Don't need a ServiceEmitter in ZkCoordinator anymore.,2013-04-25T15:40:17Z
38b5d94ffca35a5c3325defb68fd61d836401758,1) Imports...,2013-04-25T15:38:03Z
67ce1b6f266fb05baac2137556781edc345b1533,1) Adjust all of the uses of zookeeper paths to be based on ZkPathsConfig,2013-04-25T15:37:18Z
b6d72c0da417144a035b6d1c5349a39c53c50b74,"1) Log when servers show up and when they load segments
2) Adjust nodes to publish to ZK as the last part of their initialization",2013-04-24T23:24:48Z
3e94204c44853e5c04c785f5ae1c37658b384784,1) Switch from com.netflix.curator to org.apache.curator,2013-04-24T22:29:24Z
9153cc94acf409679b709b7882dcd86604c1645e,"1) Nicer logging
2) Announcer should actually delete its zk entries when it is told to unannounce something
3) Skip over complex columns that we don't have a proper deserializer for",2013-04-24T22:26:27Z
b8ba9138ff2f781e3d2b25c7b8510aad37e32b92,"1) Fix bug with Master not starting up without an indexer specified
2) Fix bug with PotentiallyGzippedCompressionProvider only catching ZipExceptions and not IOException (java 6 throws IO, java 7 throws Zip)
3) Create DruidServerMetadata and use that instead of DruidServer to represent the current server",2013-04-24T00:20:56Z
f71b941a1a7dc52f9135e2dfbe87c930ae676799,"1) Refactor the announcement of segments to all exist inside the DataSegmentAnnouncer
2) Adjust the ExecutorNodes to expose the correct nodeType given the refactorings",2013-04-23T22:54:49Z
7370b0f2fc392f0e9f4ee9dd1c0456be2ec585cc,1) Cleanup TODO comments,2013-04-23T21:25:29Z
545b489093f5c8c71e4168a4474e12f1fd74be52,1) Use PathChildrenCacheFactory to simplify creation of PathChildrenCache objects.,2013-04-23T21:07:40Z
57c31656d1f36af1adc9e331946524a160fc6e62,1) Eliminate PhoneBook,2013-04-23T20:58:27Z
dde50a0d873a8dfe42add1ffd6899237bcdf3d29,"1) Remove references to zkclient
2) Eradicate zkclient from the poms!",2013-04-23T19:44:02Z
43d630c0980ad5a862f8ce9fb2db68b1867b77ea,"1) Replace InventoryManagers with Curator-based Inventory Managers
2) Replace ZkSegmentAnnouncer with CuratorSegmentAnnouncer
3) Adjust LoadQueuePeons to operate using Curator
4) Remove ZkPhoneBook

Things left to do:
1) Unit tests
2) Remove references to zkclient library
3) Remove references to PhoneBook interface",2013-04-23T01:04:28Z
e01a78515e41bdd7161211fd40de64b135691c65,many more fixes and unit tests,2013-04-26T02:01:45Z
f463b9525633491c5dfa12bfd337a0f9ad51fce8,Merger: Advertise event receivers through service discovery,2013-04-25T10:57:23Z
341ee27419ea9b27d3a2d009098aa7777a9ac531,"Changes to allow pushing events directly to realtime tasks, and the creation
of single-segment realtime tasks.

Realtime:
- Move firehose stuff to com.metamx.druid.realtime.firehose package
- ClippedFirehoseFactory provides a time-clipped view
- TimedShutoffFirehoseFactory shuts off at a particular time

Indexer:
- Split StringInputRowParser into {String,Map}InputRowParser

Merger:
- Remove minTime in favor of clipped firehoses
- Add task executor servlet that can push events to EventReceivers
- Add EventReceivingFirehose that accepts events as an EventReceiver",2013-04-25T10:10:17Z
d29b3e0960a874993cb3e7fc8fee50e7fe6352ae,fix lowercase bug,2013-04-24T23:00:47Z
77ef525a65714423f795d9acc33ea5c8d55838ef,"Merge pull request #130 from metamx/requestlogemitter

emitting request logger",2013-04-24T22:59:19Z
e3c6bad117c60a246ded9595c9b92687d784cf00,add emitting request logger,2013-04-24T22:38:16Z
7f43f37441295bffb81d4c65121988e772a15128,bug fixes,2013-04-24T01:06:41Z
13b617cfa925ee5d4f646cdb2adc1e89a518d082,fix some interval bugs,2013-04-23T23:53:57Z
7184e528fdbb6fdcb9dfa6196ae2eb1ac1aff8cb,fix some config bugs,2013-04-23T20:16:50Z
70937af7bd1b347a4c31e46992641e5d7cfa4a6a,"Merge branch 'master' of github.com:metamx/druid into spatial

Conflicts:
	server/src/main/java/com/metamx/druid/index/v1/IndexStorageAdapter.java
	server/src/main/java/com/metamx/druid/index/v1/QueryableIndexStorageAdapter.java",2013-04-23T18:40:44Z
9b9c516e308a5cd4343f824eda3a19d2caf5f4e4,more tests,2013-04-23T01:39:41Z
f28abd42569cae99928c0e6a1a60b93149356199,fix cache,2013-04-22T22:01:07Z
deefa870ec616ece585a2f0d01138e6680d1776d,[maven-release-plugin] prepare for next development iteration,2013-04-20T00:15:07Z
5ea1a77a45c5f7da2949f94f1ebbeaf2a7637222,[maven-release-plugin] prepare release druid-0.4.0,2013-04-20T00:15:00Z
42c3f278ed78f7f0bcf558bdfd652c9428be91f1,"Merge pull request #125 from metamx/indexing-service-stuff

Indexing service stuff",2013-04-20T00:03:56Z
4f4ebd5a77e3937b6438038758830075bd218b8a,Merger: Switch payloads from strings to bytes,2013-04-19T23:58:15Z
4c1cbdc5dcb0ced778700135501d753daec68020,Merge branch 'master' of github.com:metamx/druid,2013-04-19T23:57:52Z
1c3ceddbab75392b8047bd027b1d7d43365b2066,fix typo and also testing commit,2013-04-19T23:57:42Z
78850a07064279fb603d96f2c3f9ba46072374eb,MinTimeFirehose: Care less about making nextRow work without hasMore,2013-04-19T23:57:20Z
6c4e844f97bf2ab753a7ed0d3d4d93ac39e2457e,semi working spatial,2013-04-19T23:56:56Z
7da14663409bccab8e3a5ce5028a1c618acebc7f,RealtimeIndexTask: Fix minTime serialization,2013-04-19T22:50:09Z
4c4d30cf66ced2ee0fb630644317c09d02b6364d,Initialization: Set service discovery address equal to druid.host (without port if any),2013-04-19T22:45:00Z
376df4032d61f7486b4a4b1e47d75c266c666912,"IndexerCoordinatorNode: Only create tables when in ""db"" storage mode",2013-04-19T22:26:00Z
5edbf2b4b9205758f8463c323a92603d5608d5f2,MinTimeFirehose: Correcter logic,2013-04-19T21:51:41Z
dbfa045df0726d4d77273ac7c383eb2acb6262da,DbConnector: SQL and validation query tweaks,2013-04-19T21:51:22Z
17205ebea4c4324950a5a56977517664910cc53d,RealtimeIndexTask: Add minTime to assist in graceful switchover,2013-04-19T21:07:17Z
1a6594524fbde40075ea8006e94d6d7f9238f6f0,Merger: Tweaks to DB tables. Create tables automatically.,2013-04-19T21:04:35Z
1dfe1335547b3861c4f278a799aa2a518e3666db,DbConnector: Optional validation query (default off for now),2013-04-19T21:04:10Z
cc30dfad2f4dd3eb634d673ad667744f766e4169,Test commit to test contributions,2013-04-19T15:14:17Z
71269d7e884732dcc351ee272087b6338665caf5,somehow tests are passing,2013-04-18T00:13:24Z
db2f3aa761f79b3146cb532b631ad9c6d795d776,fix pom versions,2013-04-16T16:53:34Z
31a38f6c848c336bbb0b8ad84daef92d83886ce0,"Merge pull request #121 from metamx/column-selectors

Column Selectors",2013-04-16T16:39:49Z
50998671aef1a3eec35fb153e9443109dadd3778,formatting,2013-04-15T22:39:26Z
4597d7f44ec8611acd0bd278f784323b7ee1f58c,remove IndexStorageAdapter,2013-04-15T21:31:24Z
2afe2bdeaecec09810b1a85b0e1e14eaa8291140,formatting,2013-04-15T16:28:32Z
66a52ed282673c5305387e93168ce56d3765f61f,javascript aggregator now uses column selector,2013-04-11T21:43:47Z
b66f69def6c55d5a8842ad36155b762d1b69c4cd,specify javascript aggregator functions individually to support getCombiningFactory(),2013-03-20T23:08:18Z
c83631928cbdc017b3bab4d1cb2cf3f91d641a42,object column selectors,2013-04-11T21:42:19Z
0c68bd1b1d146e3b1618ac6c502809cb4bbdcd0f,rename MetricSelectorFactory to ColumnSelectorFactory,2013-04-10T00:51:23Z
de5622d7924360d146b8aaf1435877c11df51d05,bump up druid version to 0.4.0,2013-04-10T00:55:21Z
a166344297557ed3b41d07535b2573c04de53e21,[maven-release-plugin] prepare for next development iteration,2013-04-16T01:55:53Z
21c2aa5793f52009e2bf3c0e5a308b57693ad22e,[maven-release-plugin] prepare release druid-0.3.38,2013-04-16T01:55:46Z
cdbdf843c04f7da05d21a045a9bce52e1ff4ba65,Merger: Tweaks to task shutdown,2013-04-16T01:51:01Z
d879c9a41ece30600280d32519b8ba92456c05da,[maven-release-plugin] prepare for next development iteration,2013-04-16T01:17:42Z
c3d229df7fe0abf9a330f21626473c926c8e2e18,[maven-release-plugin] prepare release druid-0.3.37,2013-04-16T01:17:36Z
cafbcdb899bea90d29b964f550421b4fe0e74b0d,Merger: Tweaks to task tracking,2013-04-16T01:15:33Z
128b8730225ea6050f5ce7f3c20343ad75c69e9f,[maven-release-plugin] prepare for next development iteration,2013-04-15T23:43:53Z
eb8042917778f7246c5970b583bfd574816a7244,[maven-release-plugin] prepare release druid-0.3.36,2013-04-15T23:43:47Z
3884ebbc3ea4a04fb6f90973c383a201726b7aeb,ForkingTaskRunner: Fix properties loading,2013-04-15T23:41:41Z
3cfa081c6cb016080fb8530191a1518ba8202ba1,Merge branch 'master' of github.com:metamx/druid,2013-04-15T22:42:19Z
2cf1cf9c1fadf731dbda39c00148be9f8e2ce452,druid paper,2013-04-15T22:42:10Z
beff15f8d4e0cedbfa39c1f60822d8b8db010944,[maven-release-plugin] prepare for next development iteration,2013-04-15T22:03:26Z
b71ae8ade3610dcca11a59147cbc02dd3afa531e,[maven-release-plugin] prepare release druid-0.3.35,2013-04-15T22:03:20Z
7a21ef9fd630c10c088462fb4b9ddfbdc6117f8b,"Merge pull request #122 from metamx/config-master

Slightly better configuration when talking to indexing service",2013-04-15T21:58:44Z
cc929b2a07482658f4d7542cf3833f00b4d4b0ea,slightly better configuration when talking to indexing service,2013-04-15T18:09:04Z
cb1b69dadd42147b2156390652069c69f7752de1,"Merge pull request #110 from metamx/stop_task

Indexing service: workers run tasks in their own JVMs and graceful shutdown of tasks",2013-04-13T05:14:10Z
6ed0308c59224f9ae78f18a62bb3597a47d3ffa4,Merge branch 'master' into stop_task,2013-04-13T05:13:45Z
8a4ec1cd17b2a0db77fa3475ea74810a95b3d5a2,Merge branch 'stop_task' of github.com:metamx/druid into stop_task,2013-04-13T05:13:22Z
bacb1e55207c90c3487955c26a716dbf8ad78141,update fix,2013-04-13T05:12:22Z
a0b2a348456c9507608f1a8f9a8583a8d25c423c,"Merge branch 'master' into stop_task

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/actions/LockListAction.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/ExecutorServiceTaskRunner.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/http/WorkerNode.java",2013-04-12T21:10:27Z
c21d7f6ee2cab8d49cabd7582b40885d19d0a5d2,ForkingTaskRunner: Slight tweaks to setup and teardown,2013-04-12T21:06:40Z
e9f6c7267d44d6fd361ab54e817049676655b1ee,"Merge pull request #120 from metamx/kafka-0.7.2

Realtime: Update to kafka-0.7.2",2013-04-12T18:55:11Z
a24274029f06f57670f63117641e586f468546d8,change shutdown logic for firehose,2013-04-12T18:49:01Z
465b78b4bc32667452a90ceb035c47079d48b552,more changes,2013-04-11T03:21:26Z
eaea8ae1637c188b46b1ea365d0dca2cb7785956,"- Ability to cancel pending tasks in the ForkingTaskRunner.
- Other various changes from code review.",2013-04-10T16:51:51Z
4d7dace0333fac63a79dc0d42fa1ff9ccef82e43,"Realtime: Update to kafka-0.7.2

Firehose configs will need to have their ""kafka-0.6.3"" type changed to
""kafka-0.7.2"", and ""/kafka"" added to the zk.connect string in consumerProps
(kafka-0.6-mmx11 hardcoded this path).",2013-04-10T17:02:24Z
55648c47a76f69699e18c28890e4a0b288ac2d14,"1) Adjust the GroupByQuery to also be able to merge results on the local node.  Fixes #116
2) Make the GroupByQuery operate in a multi-threaded fashion by default (this is configurable via druid.query.groupBy.singleThreaded).  Fixes #96
3) Fix up some post aggregation computation stuff.  I believe #72 is fixed
4) Fix case sensitivity issue with post aggregations on GroupBy queries",2013-04-10T02:13:08Z
a678f08b677cfb65587679b6858e32f3ac49151e,"Merge pull request #118 from darxriggs/master

cleanup & refactoring",2013-04-10T01:56:59Z
fce3b8c20fa65913363926577eda5f57ff05f0e5,Merge branch 'master' into stop_task,2013-04-09T17:34:53Z
f90304d07b0ff93d7e0df27679f5f1b511515497,Merger: Task logging system,2013-04-09T17:33:52Z
33434f2c8207b9622abad0ab6058cd63b653ae45,Executor: Move most logic out of main,2013-04-02T23:19:46Z
092fe70a35401a873d6bd9f2d4a09eaec333b649,use reservoir sampling in pickSegmentToMove to avoid IndexOutOfBoundsException when a segment gets dropped mid-run,2013-04-02T18:36:01Z
3937a776652fcf8456c26a95e400cbdd57157603,fix cut-n-paste mistake in error message (issue #81),2013-04-02T16:40:25Z
e125a58f0e74d396a8af9e4d34d21e30e67975c0,[maven-release-plugin] prepare for next development iteration,2013-04-02T00:17:50Z
27cef0372492d06c93570fea5f9e4a6a747925f5,[maven-release-plugin] prepare release druid-0.3.33,2013-04-02T00:17:44Z
272265b33ddbf48a0e1a23237682d4924e43d2e2,fix broken UT,2013-04-02T00:16:19Z
917cb2049406c590bb9653c9eccbaf6370469e09,nodes will not try and download segments during startup,2013-04-01T23:55:03Z
2fcf7e018b065d77317f853d2b745cbe6b0bd7c0,[maven-release-plugin] prepare for next development iteration,2013-04-01T21:28:43Z
4f232fe430b64bace0da028273704bae76cae002,[maven-release-plugin] prepare release druid-0.3.32,2013-04-01T21:28:36Z
e1366aa4c4d7fa4990b8694496d76aa20ed75eb5,fix segment partition deletion bug,2013-04-01T21:26:02Z
2a199fd61d52890396be44531c7f20bf8a38bf2d,remove accidentally comitted files,2013-03-29T17:00:39Z
847790f784ae4c5d1921c040c31321c5326038de,1) A few minor edits to the paper,2013-03-29T14:37:05Z
bf2f2df22c22895c907c6cec5aa80bd545cce0ba,[maven-release-plugin] prepare for next development iteration,2013-03-29T02:48:46Z
d4dc593ecc3157769379451fe84a81faeee0215a,[maven-release-plugin] prepare release druid-0.3.31,2013-03-29T02:48:39Z
dd80fded1d6c52b502ae35b44ef63f3f938103a0,fix query problem,2013-03-29T02:47:01Z
185d367153f1aef524eeadf139f1ee01124092ab,[maven-release-plugin] prepare for next development iteration,2013-03-29T02:21:14Z
ff0fdc15c2ea6247ac956d696c7677de08d0b070,[maven-release-plugin] prepare release druid-0.3.30,2013-03-29T02:21:07Z
ef2a7c7a0c7a554f8c4854161b8ea4b1861a8255,fix broker datasources path,2013-03-29T02:12:10Z
dbb03deb26a3e36be1cae429ea490dbe89ad35d5,[maven-release-plugin] prepare for next development iteration,2013-03-27T18:55:48Z
ef50da3b9b5d3ed70c1b229757df04ad3accab96,[maven-release-plugin] prepare release druid-0.3.29,2013-03-27T18:55:38Z
fb5b1b441eb77e5605234e1bdf9197202f6453fe,remove conflicting dependencies on ZK,2013-03-27T18:43:54Z
741a13fcac3911e1f51d6f89c04e44f5587fe78c,fix inconsistent druid http paths + fix master console bugs,2013-03-27T17:40:44Z
6fe9707f965b552bcb7ac60a7df1683b4845f9a6,[maven-release-plugin] prepare for next development iteration,2013-04-08T18:26:37Z
f0ab28be9099fbf3fc746f46a1fe05f586ff7ecc,[maven-release-plugin] prepare release druid-0.3.34,2013-04-08T18:26:32Z
120b822c183f7332a220179c1a605e2d1bdae530,"Merge branch 'master' of github.com:metamx/druid

Conflicts:
	client/src/main/java/com/metamx/druid/QueryableNode.java
	server/src/main/java/com/metamx/druid/http/ComputeNode.java",2013-04-08T18:24:17Z
925c104dd21e1c0c4ebfeac755ac3f020ce421e1,update emitter version and fix some NPEs,2013-04-08T18:23:08Z
be47c2003f511fa3c69a2acb584e7f40570462a4,"Merge pull request #117 from darxriggs/a6dc29cf85fe617a96b70ca3cf84150b9e2e86f4

cleanup - removed extra empty lines",2013-04-08T15:36:55Z
6c27cd2e8efd2afd0744ed719aa21d943252c223,cleanup - removed unused imports,2013-04-07T21:30:13Z
a6dc29cf85fe617a96b70ca3cf84150b9e2e86f4,"cleanup - removed extra empty lines

- there should not be any adjacent empty lines",2013-04-02T16:59:26Z
488b3ef8ff57dfe0c2993e813d780fc3d1061a74,refactoring - made json type infos consistent for all query types,2013-04-06T10:38:35Z
0b621c7bde50c3c9b6af3a2be62a4e90a453d284,1) Expand logging of unregistering real-time segments to help diagnose strange zookeeper behavior,2013-04-06T16:10:36Z
6d5869d8e48c4ce38b567027146b5740ecea28e6,remove unused imports,2013-04-05T21:36:21Z
4b11e1db51a83552cfb606675e08a91da512741e,"Merge pull request #115 from metamx/argument-checks

add argument checks to dim filters",2013-04-04T23:34:57Z
1d050245fad584393117f7d65842e0e7d6f9adcb,add argument checks to dim filters,2013-04-04T23:29:55Z
b1f2186c1f6f8d6071edc508360ab633cb756367,use reservoir sampling in pickSegmentToMove to avoid IndexOutOfBoundsException when a segment gets dropped mid-run,2013-04-02T18:36:01Z
9400af7b27657b3edc82a7b5632a96b3e758d768,"Merge pull request #114 from darxriggs/master

fix cut-n-paste mistake in error message (part2)",2013-04-02T16:55:00Z
c9d541364e649aa4bab6a79fdc23ae624959f572,fix cut-n-paste mistake in error message (issue #81),2013-04-02T16:40:25Z
8b100248a8780bcf7b7cc73a2e4ae6ecad570ab5,[maven-release-plugin] prepare for next development iteration,2013-04-02T00:17:50Z
bbb3991bc95426684a85b98b97d25a9abb1035b8,[maven-release-plugin] prepare release druid-0.3.33,2013-04-02T00:17:44Z
0730976c80d0ee29feb5b73998eda2490fdeea5b,fix broken UT,2013-04-02T00:16:19Z
258f18471e82f98fb5c291b9100bae2931bb3c01,nodes will not try and download segments during startup,2013-04-01T23:55:03Z
e8c6936acad728b625fca6a27d84ab4c465a5b29,[maven-release-plugin] prepare for next development iteration,2013-04-01T21:28:43Z
1f342dc0f207ed6cf460d504f16af52817bc52bc,[maven-release-plugin] prepare release druid-0.3.32,2013-04-01T21:28:36Z
467e75a2c43315454b1925394b2a35e61d40c877,Merge branch 'master' of github.com:metamx/druid,2013-04-01T21:26:16Z
b56ab645721c4e29bbc35f2c83fc4d7ef19280ac,fix segment partition deletion bug,2013-04-01T21:26:02Z
95b66eac63a6817e05700cd3ac65de69021ea7b3,remove accidentally comitted files,2013-03-29T17:00:39Z
da9b165af12b561d5c322237e76d88ce341a9542,1) A few minor edits to the paper,2013-03-29T14:37:05Z
30465b5c26070c3a864ef55bfadcb0cda9fa85da,[maven-release-plugin] prepare for next development iteration,2013-03-29T02:48:46Z
1515dddfe05c7dc7342fb5a5ceb01dc40d00c662,[maven-release-plugin] prepare release druid-0.3.31,2013-03-29T02:48:39Z
f9e5a10c704ba39d491af4bb60f3dc51cc52d1b7,fix query problem,2013-03-29T02:47:01Z
04a46fb74fa8e3f52287cbcb40c460338c2db305,[maven-release-plugin] prepare for next development iteration,2013-03-29T02:21:14Z
36601ee3aaaa72681248a24b91de47cd8722f757,[maven-release-plugin] prepare release druid-0.3.30,2013-03-29T02:21:07Z
12e0dbce689b77a055708997918ef9750b3b5731,fix broker datasources path,2013-03-29T02:12:10Z
9e54e1182753ed8776d6e069d0ba9ba42f82596a,[maven-release-plugin] prepare for next development iteration,2013-03-27T18:55:48Z
8fee044c6861e0791f617f4e51ade990f9b1313e,[maven-release-plugin] prepare release druid-0.3.29,2013-03-27T18:55:38Z
4e209a148378a257f7df0122faf98bf6a084c9fc,remove conflicting dependencies on ZK,2013-03-27T18:43:54Z
5bdcc3613c3c5dc65f5fd59ebcbe53fdd1b14a3b,fix inconsistent druid http paths + fix master console bugs,2013-03-27T17:40:44Z
537f52796034ae09210edbf5c9971891b76d0bd4,"Merge branch 'master' into stop_task

Conflicts:
	merger/src/test/java/com/metamx/druid/merger/coordinator/RemoteTaskRunnerTest.java",2013-03-26T21:14:23Z
e785b87be0e02669ea85316889c516f7131e3b37,[maven-release-plugin] prepare for next development iteration,2013-03-26T18:10:15Z
a97287fa50e7ed763159c91789c6695a7246391f,[maven-release-plugin] prepare release druid-0.3.28,2013-03-26T18:10:04Z
f38566de7ad06f2029f0c75869c393cf829e0db7,Merge branch 'master' of github.com:metamx/druid,2013-03-26T17:26:12Z
a7d836a0dd06e1a8670021d2497b23b5055e2241,fix NPE for master balancing; introduce max number of workers for indexing service,2013-03-26T17:25:52Z
42ca6aff4f3082650507ebb8018da7aa716a8b17,Merge branch 'master' of github.com:metamx/druid,2013-03-26T14:07:28Z
2306602e933e967d023b132dab7424fb5f9b8e54,1) Remove zookeeper 3.4.3 dependency from merger,2013-03-26T14:06:11Z
a57951c7d6d03db98d3fecb9329b00db8017bd21,Merge branch 'stop_task' of github.com:metamx/druid into stop_task,2013-03-25T20:31:19Z
f0f4eee787c1b32c649c1c75a56b0434fcb25a12,Merge branch 'master' into stop_task,2013-03-25T20:31:03Z
efd57dcf38ca0ffc3b1d967af6b3899a7dbc1bc3,[maven-release-plugin] prepare for next development iteration,2013-03-25T20:17:50Z
3d7a0ea2d3826faf3faffce41a55808232fc673b,[maven-release-plugin] prepare release druid-0.3.27,2013-03-25T20:17:43Z
082ea59cf1c2283644e69470ca582ae3d46d1bb2,Merge branch 'master' of github.com:metamx/druid,2013-03-25T20:11:20Z
0ab7c315dd57efb4303d15de14666f1a826c40b1,more logging in CEQR to track down NPE,2013-03-25T20:11:02Z
05fdf086445e71f0eede352c73f73e8c13d3981f,"Merge pull request #107 from metamx/aggregator-close

add close method to aggregators",2013-03-25T20:09:19Z
669f7926680b609809c68d792aaa193b2d6bddd2,"Merge pull request #109 from metamx/fix-groupby-allgran-timestamp

fix output timestamps in groupby queries with granularity ""all"".",2013-03-25T19:58:32Z
e57249bf158deacd2293a821b40566ef1eb46fef,refactor balancer metric emission code,2013-03-25T18:49:46Z
a28de5fa889466aba4fb8568ee9f48ab7c9430e9,fix per tier metrics emission for new balancer,2013-03-25T17:32:02Z
d366eec291ab70aa47dc1bcdd103c1587fe8d19f,Merge branch 'master' into stop_task,2013-03-25T01:24:02Z
3266139774a4a9640893058e6ec2cc23447dff92,RealtimePlumberSchool: Fix wait-for-handoff in finishJob,2013-03-25T01:23:17Z
dcd10e69c720d7281a1a92ce0235e177e843eac8,WorkerTaskMonitor: Fix isTaskRunning check,2013-03-25T01:19:32Z
c420fe3b56ffd1fc4e308d66c93ff1d918eccf33,"fix output timestamps in groupby queries with granularity ""all"".",2013-03-24T06:42:43Z
3687cba18eeb9d0098b12166a90dddf18c2a215c,close resources as we iterate over them,2013-03-23T00:42:10Z
e72695111c9e77e53224c90192add88406493b6f,Merge branch 'master' of github.com:metamx/druid,2013-03-23T00:07:05Z
5eaaabce7f03b31146585a58689377ba4e6f7845,fix for concurrent modifications in druid server,2013-03-23T00:05:39Z
e4c8122f9cc88454b37a648ec27e58632018266e,Merge branch 'master' of github.com:metamx/druid into stop_task,2013-03-22T19:53:51Z
35cfd1f18646a0741bba326c29aa77abf4509cdc,[maven-release-plugin] prepare for next development iteration,2013-03-21T18:14:20Z
3860710f11e7f42d1008fe1f30bf0d85b80e771f,[maven-release-plugin] prepare release druid-0.3.26,2013-03-21T18:14:14Z
f00c2d07d3644dab827db8d098f994478ea434a6,"Merge pull request #108 from metamx/fix-cursor-gran

fix cursor overshooting granularity boundaries for filtered queries",2013-03-21T18:11:43Z
16e4cd4291c51fa1a2a9e3a189c8c57cd09d6901,fix cursor overshooting granularity boundaries in IncrementalIndexStorageAdapter as well,2013-03-21T17:38:39Z
c0397aa67c40dc8a7facca3f60ed2de769354a26,add test case for granularities not aligned with segment boundaries,2013-03-21T17:36:14Z
d722c995302f88cd0d00a0db585a8903a3da8517,"fix cursor overshooting granularity boundaries, due to incorrect gran.next() usage",2013-03-21T06:36:52Z
57f881072154b79968fa4141d549ec088731e2b8,properly close rowiterators,2013-03-20T21:07:06Z
0b04114c12aaec0397ba1b5b3324f1da49267540,more squigglies,2013-03-20T19:17:20Z
8eec41f934187bf1db8d053ca1cf0f9506c1a22c,squigglies ftw,2013-03-20T18:41:40Z
654a43a0f30ee9a189af6ea694e298c4a01fc0a8,Merge branch 'master' into stop_task,2013-03-20T17:51:47Z
a1dcdab54d3d9973be0e56aeeff78bd49e88f4e8,clean up shutdown,2013-03-20T17:51:16Z
cc08d6029fc0fced162aa150f7948ffa54ed79f8,1) getDimensionCardinality() on QueryIndexStorageAdapter wasn't case insensitive.,2013-03-20T17:03:07Z
dc615ab7953e1b87885b2ad0900808003e5fba7d,RealtimePlumberSchool: Faster graceful shutdown,2013-03-20T01:29:00Z
017278a5d55515f426cc3c9cc19bb24bddfe9fa4,IndexerCoordinatorResource: Un-break null returns,2013-03-20T01:16:25Z
ce1ef94061ff7e9f0f5aa2189c6ad61a87d582ac,GracefulShutdownFirehose: MutableBoolean -> AtomicBoolean,2013-03-20T01:16:13Z
424e899760a8c77edc2e960555070e995856a917,more logs,2013-03-20T01:18:20Z
9cdfea31b21e1294d782b6cd43f15053a6c5c142,fix shutdown problem,2013-03-20T01:05:27Z
dfe91d3bf9cf8b25cf731d096dfe24aa29ca72d1,RealtimeIndexTask: Close firehose after finishing plumbing job,2013-03-20T01:02:23Z
ed56bc52e92c410472a6a083e36613d3f2cc4b2b,RealtimeIndexTask: Better handle early shutdowns,2013-03-20T00:55:05Z
76f4d12059424f71d36e1385967e6bcf87769f82,ForkingTaskRunner: Totally ridiculous graceful shutdown mechanism,2013-03-20T00:43:29Z
c05629e6a4c49c81a552c9d3cddd32767b486c8c,more logging,2013-03-20T00:08:48Z
6324225a4f01e6f711a3efcb20128416d2e027af,ExecutorMain: Shut down when our parent disappears,2013-03-19T23:32:01Z
243e70a3c059969226942e2690d2e474d11055db,TaskConsumer: Less complainy when interrupted,2013-03-19T23:31:37Z
c68bd66945877f385904a14d8abd333ecee56fe2,add close method to aggregators,2013-03-18T20:18:28Z
e5f46f2a66b6073fa5a12c4f8a313189f683fb5e,fix more startup problems,2013-03-19T19:45:35Z
69a0e0e1a709727001aac71b55146b0b3aa6c4b6,fix nodes not able to start,2013-03-19T19:35:02Z
d53822130b46e674a3bc10ca1bd38c96b86be1bf,"Merge branch 'forking-task-runner' into stop_task

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/task/AbstractTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/Task.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorResource.java",2013-03-19T19:23:20Z
30fdb2956dddf9a2a6d19a5732b5e680586046e4,intiial commit for stop task,2013-03-19T18:30:33Z
ec566ee37a418aa6f320c7dbece778e6c6d47571,"Ability to run tasks in separate JVMs, and cancel tasks.

- ForkingTaskRunner spawns new JVMs for each task
- Added ExecutorMain, ExecutorNode to be the spawned JVM
- LocalTaskRunner renamed ExecutorServiceTaskRunner
- Add shutdown method to Task and TaskRunner",2013-03-19T17:49:13Z
d1eb61d4512d24093bb8d0ceb412a9dba9f00352,"TaskAction:
- Add isAudited
- Generally straighten out Jackson annotations",2013-03-19T17:47:26Z
922ed66a916b4fb8dee561b59c0e65092b755cde,Task: Fix comments in preamble,2013-03-19T17:46:46Z
b5e7bff927eea9c67b38db49ea3242ded4b3ea52,TaskMasterLifecycle: Less noisy exit when interrupted,2013-03-18T18:48:55Z
5f513be3634db8da118aa72813b886d083751bac,Merger: Replace TaskCallback with ListenableFuture<TaskStatus>,2013-03-19T00:53:38Z
5c3db75a0141c58a39cbb5dbe0d06f14733682a8,IndexGeneratorTask: Fix serialization,2013-03-19T00:53:02Z
d163f07ae0e0dae4807084f5a41be6a9c96eaaf1,Task: preflight takes TaskActionClient instead of TaskToolbox,2013-03-19T00:12:15Z
f47319f118db0fb99e0ad9ac7e1a089781129706,[maven-release-plugin] prepare for next development iteration,2013-03-18T22:09:01Z
1066144b43160837824a6bf95ba9f30f6bf04d27,[maven-release-plugin] prepare release druid-0.3.25,2013-03-18T22:08:56Z
71aa8b8077a3e0d9320c62b4fbd541ebab095cf0,1) It's great when log lines don't generate exceptions,2013-03-18T22:06:51Z
57f52f71fc1e50352e7a3ad58267e6128e2d933a,1) Try checking for parent dirs first and creating if they aren't there when moving files from the legacy directory to the new one.,2013-03-18T22:04:11Z
cba404a65dcc09d19495497d1624bbfc2ca23e24,[maven-release-plugin] prepare for next development iteration,2013-03-18T18:02:40Z
29a0a7e6c6023f183492cf9f2a3dfeb71adf4ead,[maven-release-plugin] prepare release druid-0.3.24,2013-03-18T18:02:33Z
bbed862b0be6901f939fea2bc78aaa6c49564058,Merge branch 'master' of github.com:metamx/druid,2013-03-18T17:59:33Z
e3674368ab388c16e72db9ec5d48e3b53707d095,1) Fix bug with the MergeTask not setting the binaryVersion field on DataSegments and causing the converter to run a lot.,2013-03-18T17:57:01Z
b9de751b32b1190ea941b85c18d3d5ddf0bd7052,[maven-release-plugin] prepare for next development iteration,2013-03-15T21:32:31Z
57655f19c408fad4b54483608e32203e6e3dcd1b,[maven-release-plugin] prepare release druid-0.3.23,2013-03-15T21:32:24Z
d316dfc8e1c348a22b08b1e423b8a79af474d33a,Merge branch 'master' of github.com:metamx/druid,2013-03-15T21:29:19Z
6f771796b698319de8d657b73b04464037e7a1b1,fix js bugs with indexer console,2013-03-15T21:28:55Z
92efba5f305890c9b48d4e94c12036e0985fb5ed,Add CLA documents,2013-03-15T21:07:54Z
72b82b1b1dd95ef83ffe977e224f496dea3ec747,1) Remove logline that really shouldn't be there.,2013-03-15T20:50:37Z
7dacf952d6bb7ffcd34ac60cb63fe89099529e23,[maven-release-plugin] prepare for next development iteration,2013-03-15T18:53:39Z
ff017fe72a98e37282266833eff5ae5d692de571,[maven-release-plugin] prepare release druid-0.3.22,2013-03-15T18:53:33Z
a933438e4e266eb1aebf308ccc860188060d8dd6,"1) Fix bugs with VersionConverterTask
2) Fix bugs with NPEs on indexing",2013-03-15T18:48:55Z
39449e6a3e95ed27231c4463291ea481ffdc4765,Merge branch 'master' of github.com:metamx/druid,2013-03-14T21:45:54Z
f6752799bccf92b1bd5cc22cb024f4bd0a7ba176,"Merge branch 'master' into realtime-index-task

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/actions/SegmentInsertAction.java",2013-03-14T20:45:59Z
e45a51714f0db97cf48e51fbfb884dc5425842e0,RealtimeIndexTask: Fix serde,2013-03-14T20:43:40Z
b8c08f235a6553a37e0779b19d8e54214c4d864d,"Realtime:
- Move VersioningPolicy, RetryPolicy outside of RealtimePlumberSchool
- Move plumber stuff into its own package, since there's a lot of it",2013-03-14T19:56:25Z
c34108418a5343cf9c3c6c3be10f18c04d9a2f4c,RealtimeIndexTask: Reword comments,2013-03-14T19:49:17Z
9fe6a37f86b0c5704180d70a52af5bf5eb07fc19,Realtime: Remove MetadataUpdater,2013-03-14T19:35:38Z
2a94bd508d4af3bf1f18a71c8ec1d37084825b97,"Merge pull request #104 from metamx/javascript-dimfilters

support for Javascript DimFilters",2013-03-14T18:47:55Z
055a98a89c0a0093db78f07ce54cfbc2b8d78fc9,Merger: Fix VersionConverterTask version selection by making SegmentInsertAction more flexible,2013-03-14T17:37:40Z
e5d5050c3f93d66ee550044ad1f2b8363d5cf341,RemoteTaskActionClient: Log retry timer on errors,2013-03-14T06:06:55Z
df8e4d40615234eb4ba6635a4f19757a3678de9f,Merge branch 'master' into realtime-index-task,2013-03-14T05:43:01Z
a1c823402bb6a2ff8dea893c7a017882e80407ba,Merger: Make json exceptions while bootstrapping non-fatal,2013-03-14T05:32:12Z
cf470b1ed474e58be20f10ebc7524e4d64331299,Merger: Task serde without relying on jackson private-final-setter magic,2013-03-14T01:39:06Z
1e0f2c2d9214b5539d4089ce7fce644c5ed7165a,1) Make log a bit more descriptive,2013-03-14T00:26:22Z
4c165b4880955df03b7bbcb8f8021b0030aa47b8,"1) Better logging of master doing version checking
2) Exception out when the scv cannot find its indexer",2013-03-14T00:15:29Z
2bd34f145461785431f61d2b6233f670459d84b8,[maven-release-plugin] prepare for next development iteration,2013-03-13T23:32:00Z
b7960e202d1940d6b42628c0e41ff1a58f6895c0,[maven-release-plugin] prepare release druid-0.3.21,2013-03-13T23:31:55Z
32f8b09733202a83dc446fe0d9975ccc6ded2a22,Merge branch 'master' of github.com:metamx/druid,2013-03-13T23:29:54Z
688e5e7417941a7438f05f6ebe2010f75aadce7e,1) Serialization of Tasks is important,2013-03-13T23:29:47Z
60e75d21ce472e24528905259797d4d647b448ec,Merge branch 'master' of github.com:metamx/druid,2013-03-13T22:45:21Z
16de004fdc0be9eed56c0ebcb760177f8ed9541f,fix json,2013-03-13T22:45:07Z
f1175389c4434502ee0dccf75c4f48676d6956fd,[maven-release-plugin] prepare for next development iteration,2013-03-13T21:33:17Z
8aac482618d3a215909899d847286d900367384f,[maven-release-plugin] prepare release druid-0.3.20,2013-03-13T21:33:10Z
b1a559365e4d0c0072d7fbcba748187975d481e6,Merge branch 'master' of github.com:metamx/druid,2013-03-13T21:29:45Z
fa66e1d2cc39d9e8436f32946bd1e4f2ff07b1bc,1) SQL is hard,2013-03-13T21:29:34Z
86c7ebe1e22f68f332ed572525bcff2f384b61ef,autoscaling will clear state if a node takes too long to create,2013-03-13T21:28:18Z
ac2d4e52da21af91e8d68991a5b77f5dcf97cc27,bug fix for indexer coordinator not alerting when worker provisioning taking too long,2013-03-13T21:09:21Z
a49d0c5e4c9f73b406ead966f2fa2855ed169827,[maven-release-plugin] prepare for next development iteration,2013-03-12T00:20:16Z
97f828f6b1adc9ad3bb6e8fb7885bf08fee4c979,[maven-release-plugin] prepare release druid-0.3.19,2013-03-12T00:20:09Z
765e70bc8eb2a44ce5347784e15a75c98687c7e2,RemoteTaskActionClient: Better logging,2013-03-11T22:23:45Z
34d6b3a7f05b70127934ee4709f08dbb89ae26b4,"Merger:
- RealtimeIndexTask: Drop locks on startup
- RealtimeIndexTask: Acquire lock before announcing a new segment
- Retry failed RemoteTaskActionClient submissions using a RetryPolicy
- Add comments to RealtimeIndexTask",2013-03-11T21:08:05Z
6245e389810b0f8c1a1bd89426b56993842bbc35,"RealtimeIndexTask-related stuff.

- New task: RealtimeIndexTask
- Add SegmentAnnouncer, ServerView, QueryRunnerFactoryConglomerate to TaskToolbox
- Tasks can advertise ability to answer queries (through returning non-null from
  getQueryRunner)
- WorkerTaskMonitor (the thing on a worker that tracks running tasks) is now a
  QuerySegmentWalker
- LockAcquireAction is now blocking

Assorted other changes.
- TaskAction.perform throws IOException
- TaskActions generally have better stringification
- Renamed TaskMonitor -> WorkerTaskMonitor",2013-03-11T18:22:36Z
0e4db00d5448038274ad600748099b2ac28fd66e,TaskQueue: Fix task ordering when bootstrapping,2013-03-11T18:15:19Z
3fa46988f50c4cd697eebfa1366c450bcdf7a5e0,"Realtime:
- MetadataUpdater now built from SegmentAnnouncer, SegmentPublisher instances.
- Sinks can take a version instead of always using interval.start. The realtime
  plumber selects a version using a VersioningPolicy.
- Plumbers gained a startJob method.
- Realtime plumbers gained an implementation for finishJob.",2013-03-11T18:14:51Z
4126893ba3b9bd1da5512d569d82a22af1e5bfd3,KafkaFirehoseFactory: Fix serialization,2013-03-11T18:13:19Z
f8d9a3b19b8a69e20c4469b541a5ae96b07e7cc8,"IndexGranularity: Fix increment for day, week",2013-03-11T18:08:44Z
d9b9f73494724d873968a014c1622b0b14b9e262,Merge branch 'master' of github.com:metamx/druid,2013-03-08T18:41:58Z
d1161ae0ec3aa241fc8bb5912b5c7c5c5832d7af,1) Master should create the config table if it's not there.,2013-03-08T18:41:46Z
a470f3fa6ace660b2b11e92e2ada5c18cf2740a6,change name of druid.indexer.configTable to druid.database.configTable to be consistent,2013-03-08T18:35:13Z
4643030716fb83633d229d9b73069801aef1a518,TaskToolbox: Rename getTaskActionClientFactory -> getTaskActionClient,2013-03-08T06:38:28Z
08bff3f47259c553135587240bc47b19241cab5c,Merger: Fix JacksonConfigManager initialization,2013-03-08T06:06:23Z
53c8ba6e75d90e1a5b6fe43660d01603d82d1eda,Merge branch 'master' of github.com:metamx/druid,2013-03-08T00:47:05Z
b979096d74e23bbdbcbb452d1b14866782a96612,1) Building is good,2013-03-08T00:46:51Z
7a57609c5b27c5eacfe0d74f4c4806a58b1deb05,emit metrics corresponding to cost-based balancing,2013-03-08T00:31:00Z
9f405c0b1e77567814b3b8105c6941e1aa5ba68e,fix constant segment balancing and separate out the differences between segment assignment and balancing,2013-03-07T23:06:12Z
c3a871b942c405566e30b8b0b7fd64add1390d68,"Merge pull request #97 from metamx/convert_task

Index Conversion Task and adjustment to TaskAction API",2013-03-08T00:13:00Z
d1ffe93c5a076bef9c9441829c8eaf2097a60701,"Merge remote branch 'origin/convert_task' into convert_task

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskMasterLifecycle.java",2013-03-08T00:12:31Z
f70f71243d71a85c204714c6bec4f6426ddcfa48,"1) Stop polling in ConfigManager when stop is called
2) Remove WorkSetupManager in favor of just using ConfigManager",2013-03-07T23:43:37Z
1c3ef48f34b7454d6bdd8bba55e079b92e7fc352,"1) Adjust the Config stuff that WorkerSetupManager was using to be reusable
2) Use new ConfigManager to pull out a whitelist for the Master",2013-03-07T18:59:59Z
6864007c0567335890e1807afc1f5629a075f3f9,"1) Remove Task parameter from other methods off of TaskToolbox that required it
2) Move getTaskDir() off of TaskConfig and onto TaskToolbox
3) Rename SegmentKiller interface to DataSegmentKiller
4) Change signature of ""DataSegmentKiller.kill(Collection<DataSegment>) throws ServiceException"" to just kill(DataSegment) throws SegmentLoadingException
5) Add various log messages
6) Update the version of the segment that has been converted",2013-03-05T19:27:25Z
c9b411c0ca32dd1e53f1d27ea503e40b1037fa9d,1) Remove the need for TaskActions to require a Task as a constructor parameter,2013-03-05T00:10:32Z
a11a34f87ee80cec05cc32be407aa38156040651,1) Initial commit: Converter Task,2013-03-04T19:09:42Z
ef4ccce30c2abea08c471c62adbf069e10137296,"1) Stop polling in ConfigManager when stop is called
2) Remove WorkSetupManager in favor of just using ConfigManager",2013-03-07T23:43:37Z
fe4ca2a1a2b660a10eac19ce34ee5e201480b639,Merge branch 'master' of github.com:metamx/druid,2013-03-07T22:19:02Z
fd0fcc73197adb36f5ca5de240f8a4644226ffb3,Whitespace!,2013-03-07T22:18:31Z
a79c9ec18327bda3bd97f776639fdf1dc9dfdffb,fix some issues with negative numbers,2013-03-07T22:10:46Z
e4de6f3debb94dd5039a52e3182ee15228a04f44,Merge branch 'master' of github.com:metamx/druid,2013-03-07T21:55:38Z
82aa6ed7dd49997992144ca2b5f67baced974bce,1) Adjust the SingleSegmentLoader to be able to use cache locations from previous versions as well without re-downloading,2013-03-07T21:55:23Z
a3279541c62190cab3b9f38e07bf5f74c63f0f31,"Merge pull request #102 from metamx/cache-fixes

log but do not fail if memcached operations do not get queued in time",2013-03-07T21:36:51Z
a1cd3c3905e0ce34d4c2a1a91bdc60a1bc7c5f98,"Merge pull request #103 from metamx/request-logs

make request logs machine-readable",2013-03-07T21:35:48Z
b0349a6518637bc163a1a723fb3ec5b597c22f6d,move objectMapper into requestLogger,2013-03-07T19:31:36Z
bb1b3cd2f999e2ffa406e3c410e5e5f3724d3270,"Merge pull request #98 from metamx/druid-sql

Basic SQL grammar for Druid",2013-03-07T19:14:54Z
e2552cc03306327c432979dc8717edc0aa3d4ba1,"Merge pull request #100 from metamx/indexing_console

A console to view tasks in the indexing service",2013-03-07T19:13:47Z
9ffccb68037cdb058c2bcd1748090b4bacfd4b6e,"1) Adjust the Config stuff that WorkerSetupManager was using to be reusable
2) Use new ConfigManager to pull out a whitelist for the Master",2013-03-07T18:59:59Z
1b51848a89074a0ba4659740ee3f0780322a4e4e,add cache errorCount,2013-03-07T18:38:41Z
21d648cc399ba08899c951e4460084c876939b2e,make request logs machine-readable,2013-03-07T06:30:07Z
28373090759080358410d90dc33beab17604d727,do not fail on exceptions when pulling from cache,2013-03-07T03:22:15Z
8f6c313561ef1040421e0aec9c20c9b572adeb2e,log but do not fail if memcached operations do not get queued in time,2013-03-07T01:28:09Z
1b9bbb2f2a0c2080caed9f7f2b064c6f7e94beec,remove test code,2013-03-06T19:20:27Z
9d9efadf72db13fab66dcb5ac21890df2307fbc3,working indexer console,2013-03-06T18:38:40Z
4cb3ca00bc88e60eeebc925e511b992a448a98f5,support for javascript dimfilters,2013-03-05T22:15:58Z
614d7801a48b5a75f21606527d3c90830dcdfc34,very simplistic error handling,2013-03-05T20:41:44Z
28fe206404423b9d1fa842e07db4f02e9b307042,output tsv format + better command line,2013-03-05T19:47:57Z
035986b3bc7afeacbdabe63d32a75862a29074d1,keep track of queried fields,2013-03-05T19:45:51Z
6e95dd49b368f2c686d1519f5e5f22aa8e2afc43,"1) Remove Task parameter from other methods off of TaskToolbox that required it
2) Move getTaskDir() off of TaskConfig and onto TaskToolbox
3) Rename SegmentKiller interface to DataSegmentKiller
4) Change signature of ""DataSegmentKiller.kill(Collection<DataSegment>) throws ServiceException"" to just kill(DataSegment) throws SegmentLoadingException
5) Add various log messages
6) Update the version of the segment that has been converted",2013-03-05T19:27:25Z
b410f5e80550f4fa4182fe5468f4fef935b9e2d0,[maven-release-plugin] prepare for next development iteration,2013-03-04T23:11:37Z
c0ab1a503d2bde6161ad3fb37b9538208d2aadcb,[maven-release-plugin] prepare release druid-0.3.18,2013-03-04T23:11:28Z
e51a01f85fbb91339ea3d3052eb9f0e627f2438c,fix broken UT,2013-03-04T23:09:55Z
665f1909c6e2c49da63f54d0f3e4e95abb08512e,fixing a bug with indexing service not correctly killing worker nodes,2013-03-04T22:40:02Z
75cefa05b5a1c4b5b3bf0ea0a37b42dc6c4c5b5c,[maven-release-plugin] prepare for next development iteration,2013-03-04T21:08:26Z
90637ab7b7865d91f576b86fe221a50355d979c2,[maven-release-plugin] prepare release druid-0.3.16,2013-03-04T21:08:09Z
848d49ca87b72935f7c4f72923bec52e9d8aea60,fix bugs in balancing logic and removing auto-scaled node,2013-03-04T21:03:15Z
ae682d2cbbde64b3d992606e34b56f8d20ab9fd5,fix multiple toplevel dimfilters,2013-03-05T00:18:42Z
d1c128bdbf51e01556f05d504516a0cf6b319a68,more elaborate example,2013-03-04T22:48:05Z
88515ec59fc0f8f775611b7adc08caad2dcbaef2,add support for regex filter,2013-03-04T22:43:30Z
f5e3ff96925b015a87b6dd28c7eedd585a3ee299,"add support for `!=` operator and `in ('a','b',...) expressions",2013-03-04T22:27:15Z
6a40072d5094e6660c8b1fabdddfa2fbd57a97fb,toy SQL runner,2013-03-04T19:11:30Z
4e765f6754b8fede9ecf6cf09db744e195411cd5,remove obsolete comments,2013-03-04T18:18:08Z
aa3822454a86b64c7418c05a9b28d9fef52fcfdc,add support for 'NOT' filter and comments,2013-03-04T18:00:59Z
eae5db6f57d88d89814a9f5d0032d40d76ac595b,friendlier aggregator naming,2013-03-02T22:24:23Z
5d1af7d884ae26660695de7363f6bbce053b66d8,support aliasing,2013-03-02T22:09:20Z
f8a118dd98595a05c5a676f334276458d97bf8e2,better number handling,2013-03-02T21:57:49Z
8640342a2f81298e376eaa2c33c7cf3d69285fc8,remove antlr from common,2013-03-02T02:15:32Z
3f7bd7d1c01e076f23986d464d5b1f824549c659,add group by,2013-03-02T02:12:58Z
b64118b16810c62fb9dc8f7f8a25dac1353dd420,minimal SQL support,2013-02-25T17:26:52Z
a9f7094ef3ceb4ea4ccc3df7e3dd064dbb1094b7,1) Remove the need for TaskActions to require a Task as a constructor parameter,2013-03-05T00:10:32Z
10ec2288ee48e168a77d753f759da236cf6d8393,Merge branch 'master' into indexing_console,2013-03-04T23:23:34Z
552b36519475c58d84ca3cfad7e59c687526d3cb,[maven-release-plugin] prepare for next development iteration,2013-03-04T23:11:37Z
fdb3911794a35681682fc3ea849a09d85dbca153,[maven-release-plugin] prepare release druid-0.3.18,2013-03-04T23:11:28Z
91f54a72ee60415d826e11a24cf83850ae7523c7,fix broken UT,2013-03-04T23:09:55Z
571375a33e340373ee81cedd856a36e69d5e1f53,fixing a bug with indexing service not correctly killing worker nodes,2013-03-04T22:40:02Z
d18c9f2b0a856505f262435dd3fc6f0bd2258e94,Merge branch 'master' into indexing_console,2013-03-04T21:43:37Z
6977fe03bdb76d5f962f755f3ce26a453b4ddac7,[maven-release-plugin] prepare for next development iteration,2013-03-04T21:08:26Z
d4f4e41320e3553f8a0f9b68b6fb2061ad296a7a,[maven-release-plugin] prepare release druid-0.3.16,2013-03-04T21:08:09Z
88339fe99ba280223d334899f1e8ff75f2f5bdc4,Merge branch 'master' of github.com:metamx/druid,2013-03-04T21:03:27Z
92ab51e70c7ebc7488dfc99d9652f49bf6642960,fix bugs in balancing logic and removing auto-scaled node,2013-03-04T21:03:15Z
d7379db6fe4bbb9d52768752a0cbdfb8b7116dbd,1) Initial commit: Converter Task,2013-03-04T19:09:42Z
4e2107fbeed44ee83b26fdba7975b18bf83af36f,Merger: Rename Task.getFixedInterval -> getImplicitLockInterval. Add more Task docs.,2013-03-04T19:23:36Z
ee38d096c72001955a34c17f414b0d6767860982,[maven-release-plugin] prepare for next development iteration,2013-03-02T17:29:04Z
a90d204ba2567a80ee6e091f5a1b91bfec150f84,[maven-release-plugin] prepare release druid-0.3.15,2013-03-02T17:28:51Z
aa63e0b25b2576ad6489a1ff57543b42400649ad,account for duplicate events,2013-03-02T17:25:44Z
e5cc6d241dff76ed3712248251a0561d0510c695,cleaning up some code for RTR,2013-03-02T16:58:22Z
879b2475d450c79b6bf4659c9f86e9785ce02bdd,[maven-release-plugin] prepare for next development iteration,2013-03-02T03:53:13Z
e3ba6efb80d53163b8848e124401d6b5db462525,[maven-release-plugin] prepare release druid-0.3.14,2013-03-02T03:53:07Z
bb83ddb564710742f4fa9efe626d45dd20f05f1e,fix bug with worker disappearance,2013-03-02T03:51:33Z
7f6747194d3ca522f2e2e0d2d96eec7e1efa5750,[maven-release-plugin] prepare for next development iteration,2013-03-02T03:45:59Z
06a2a3a793b56f53f8895d9631a2e41311c6868e,[maven-release-plugin] prepare release druid-0.3.13,2013-03-02T03:45:50Z
1995039fb99648e2b695878ea137b898b7b0f328,additional logs,2013-03-02T03:44:14Z
e0700bb1614e29907794ec2530dd5a403561002d,[maven-release-plugin] prepare for next development iteration,2013-03-02T03:28:34Z
38c8ffb552665c9d3f2d1fd59e5f9292e1baa23f,[maven-release-plugin] prepare release druid-0.3.12,2013-03-02T03:28:28Z
cbe0555d00736752e4a7c8a650d22d450baad5da,better logging,2013-03-02T03:25:25Z
49e61d00fde5c092adfa11e50aeaf66404d2e053,[maven-release-plugin] prepare for next development iteration,2013-03-02T03:05:46Z
7e316e350888e57ef3785436ced8f9cfac2db0a5,[maven-release-plugin] prepare release druid-0.3.11,2013-03-02T03:05:39Z
e21978603a607c9e8e1bcacb9d5aee304b9a32ad,Merge branch 'master' of github.com:metamx/druid,2013-03-02T03:03:29Z
df532f021a04c374fb972e1e82e0ee45c73437ef,more logging,2013-03-02T03:03:16Z
665d1723c0a7a45e045a6a28ec1664dca67c747e,Add TaskLockPosse#toString,2013-03-02T02:48:34Z
0b054cdd3d712e895e01e015aeb61026e29b0ccc,better logging for indexing service,2013-03-02T02:43:40Z
e2b4163e3141fca33c4cb53389f6bc9f77c9c362,[maven-release-plugin] prepare for next development iteration,2013-03-02T02:24:09Z
023199702e71d5209d735335d3ab0640ada75736,[maven-release-plugin] prepare release druid-0.3.10,2013-03-02T02:24:03Z
a574da55ed0dc1892be00d12bb5e4424e2499756,fix broken UT,2013-03-02T02:22:30Z
8a9655a19e5a0cdd1ab8d6b4877d253a4767b6c8,Merge branch 'master' of github.com:metamx/druid,2013-03-02T02:00:12Z
375e342d5fd1786a138afa14ca52232d98ea09da,remove deadlock problem in pending tasks,2013-03-02T02:00:02Z
0092ad7efb8ff5f64149fb897a86b418b66bd6f7,[maven-release-plugin] prepare for next development iteration,2013-03-02T00:57:47Z
03ff72b7e25c1230a9bf3c8d3a42bdc1503b4ca5,[maven-release-plugin] prepare release druid-0.3.8,2013-03-02T00:57:38Z
c9cf0919988aba02d22a5ab5116413efb882130d,Merge branch 'master' of github.com:metamx/druid,2013-03-02T00:54:00Z
53021c2e35b02415cb23d844df796013e3b59657,more logging,2013-03-02T00:53:49Z
998ed0a8dea05a401291d1080863b89ba802cb04,[maven-release-plugin] prepare for next development iteration,2013-03-01T22:43:20Z
89d5ddf2f79e6f8b54db0af761928e63e08be34e,[maven-release-plugin] prepare release druid-0.3.7,2013-03-01T22:43:13Z
6b4f6bffcee57b2e4b8154b6618e08c60195351d,DbTaskStorage: Fix getAuditLogs,2013-03-01T22:40:29Z
360c6a1df12039be4a84ab80a624c69b5e757608,[maven-release-plugin] prepare for next development iteration,2013-03-01T21:55:07Z
a43dc44ebb40daf6f73f94c11e7f181d0c7366f3,[maven-release-plugin] prepare release druid-0.3.6,2013-03-01T21:55:01Z
7f32629429021f8c693fd77a132a1aaadbfbe850,fix a bug with client info resource with guice,2013-03-01T21:53:27Z
3264a689f1867b6fe2ed384b43c4a76a66c48831,[maven-release-plugin] prepare for next development iteration,2013-03-01T19:43:23Z
334fffdef52dd0fc467bacc4f0648fe88038660b,[maven-release-plugin] prepare release druid-0.3.5,2013-03-01T19:43:16Z
fb874580564ad980c9a4febba3efee011d3fcf9d,cleaner code for dimension/metric exploration on broker,2013-03-01T19:41:28Z
e0bf3187b247be03bd816b43c1e2c001116ad17e,"Merge pull request #64 from metamx/hadoop-index-task

Hadoop index task",2013-03-01T18:02:46Z
26dca5630f97e44b50a29064b5a8430563a1e5da,"QueryServlet: Send alerts with remote address as ""peer"" instead of ""host""

""host"" is used by the emitter. Both end up being emitted, which can be confusing.",2013-03-01T14:59:23Z
e40fba4de2bb32eb05a477708e1ec6abb4872912,HadoopIndexTask: Jackson fixes and general overriding of storage-specific stuff,2013-02-27T22:50:15Z
f862d9205db0a2f76852069c42bf160230eb0071,"Merge branch 'master' into hadoop-index-task

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/task/Task.java",2013-02-27T14:53:06Z
d1634fe5efd0a8125061834a87c7b8de85f136f7,fix cost balancing so assignment/balancing doesn't get stuck,2013-02-27T02:58:16Z
2e1e1753d5a6c04e637dac8ccf13d4008966e5c3,[maven-release-plugin] prepare for next development iteration,2013-02-26T23:15:54Z
ab456cf3b135ab83ee708863c5ad70e3b3c25c9b,[maven-release-plugin] prepare release druid-0.3.4,2013-02-26T23:15:36Z
3b31aa74595e351ff4828c62603ffb0c95205290,"Merge pull request #51 from metamx/new_balancer

New balancer",2013-02-26T22:41:45Z
e67a8757bab2d569a7f0984715eb09ac090c5a83,"Merge remote-tracking branch 'origin/master' into new_balancer

Conflicts:
	server/src/main/java/com/metamx/druid/master/DruidMaster.java",2013-02-26T22:18:07Z
d32a6284cefe844b02a594d4ac85e78b04a7a25a,"Merge branch 'task-stuff' into indexing_refactor

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/worker/config/WorkerConfig.java",2013-02-26T21:03:56Z
d8fbddb9d418f71c316c9006a4b068d78788caaf,Merger: Service discovery for worker -> master communication,2013-02-26T19:36:07Z
2427e81874c117624fe9fc91af88e6e816d9368d,Merger: Feedback from code review,2013-02-26T01:05:30Z
14cf506c43d87e7c5ecb0d282a2478f7f049d5c4,DefaultObjectMapper: Add GuavaModule,2013-02-26T01:05:01Z
3129e5451b36cc7349ed772582804a20ae9062f1,Merge branch 'master' into task-stuff,2013-02-25T20:33:45Z
9964e7dfe446f6995a7fe8020084e5f4d07d277e,[maven-release-plugin] prepare for next development iteration,2013-02-25T20:24:24Z
99c4f9446c399b9e64bbcbb51158dd3617623b2a,[maven-release-plugin] prepare release druid-0.3.3,2013-02-25T20:24:15Z
4811b50055061502c2b6699873a92dfe0b3bf6c7,"Merge pull request #94 from metamx/fix-dpj

Fix DeterminePartitionsJob ISE for dimensions not present in all rows",2013-02-25T20:21:48Z
49700dffe92ff9de2d592620eabe44b529cb705a,"Merge branch 'master' into task-stuff

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/TaskToolbox.java
	merger/src/main/java/com/metamx/druid/merger/common/task/DeleteTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexGeneratorTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/MergeTask.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/http/WorkerNode.java",2013-02-25T20:18:31Z
7d7ce2b7feb98a8ec0f688e6312b0c88e6652192,Fix DeterminePartitionsJob ISE for dimensions not present in all rows,2013-02-25T18:57:26Z
8513a5ab2a59a925fca4763ccbc256bab7cfc0f2,1) Fix SimpleColumn to not produce NPEs when one of its parts is null.,2013-02-25T06:18:44Z
e0f6df1a5cc078d19d4ab3668bdfc0ab503c49cc,[maven-release-plugin] prepare for next development iteration,2013-02-22T02:39:50Z
846bc0e4f0ee58997ef93f992b7197d20a1454a6,[maven-release-plugin] prepare release druid-0.3.2,2013-02-22T02:39:45Z
5e123988a0c2b13ee1ae6dbde720c13c3e4b8398,1) Specify old Jackson version to resolve version conflicts between AWS SDK and curator,2013-02-22T02:37:51Z
9dbb8841a1b9496851f4c48d6f204723fa844980,initial commit,2013-02-22T02:16:14Z
699aadd2b19f028cc4280b6807e39a3d2c45a7b2,[maven-release-plugin] prepare for next development iteration,2013-02-21T21:50:01Z
606a2e4b01a60e2c0639d33a84565b839874edc8,[maven-release-plugin] prepare release druid-0.3.1,2013-02-21T21:49:55Z
f8c54a72c2b61319ee8cbdd7b15bceb132a82703,1) Changes to allow for local storage,2013-02-20T01:22:59Z
dc3459d3f931e3d230a97f23da38152e947798b0,1) Initial commit of refactorings on top of housejester's to simplify the zipping and simplify the creation of other methods of loading data,2013-02-14T01:15:49Z
d1626576c069cc9ee84c113b0bba04ed25c91207,"Working toward making it easier to add new SegmentPullers.

1) Move the local cacheFile logic out of the S3 pullers into the SingleSegmentLoader
2) Make the S3SegmentPuller just pull down the file
3) Make the Loader do the unzip, ungzip, or rename
4) 2 and 3 make S3ZippedSegmentPuller not necessary (still there, just deprecated and empty)
4) Tweak the TaskToolbox so that the Pullers returned by getSegmentGetters behave the same as they did before",2013-02-10T05:33:00Z
60da9ffddbeac16c3e9fbb024b4843e74a1a8072,"Merge branch 'master' into hadoop-index-task

Conflicts:
	common/src/main/java/com/metamx/druid/utils/JodaUtils.java
	indexer/src/main/java/com/metamx/druid/indexer/DbUpdaterJob.java
	indexer/src/main/java/com/metamx/druid/indexer/HadoopDruidIndexerConfig.java
	indexer/src/main/java/com/metamx/druid/indexer/IndexGeneratorJob.java",2013-02-15T21:22:31Z
824e3c0eb2956b619028df4c2f8ff287f170fc1c,[maven-release-plugin] prepare for next development iteration,2013-02-15T21:03:39Z
6bbc992101d37b5ddd225d5bd05b5cf763b821a0,[maven-release-plugin] prepare release druid-0.3.0,2013-02-15T21:03:32Z
0d99cee3c3fff7802009d4a3609acd10a07102e7,1) Whitespace ftw!,2013-02-15T20:25:44Z
06ef83db69d5244c819f342b9fa6a061cd3419a5,"Merge pull request #85 from metamx/speedup-timeboundary

Avoid hitting all segments for TimeBoundary queries",2013-02-15T19:43:42Z
e042c29173c0c139dfa18e5dd44b45e20bc67acb,"Fixed typos in comments, changed prefix on s3Paths to s3n from s3://, cleaned
up umbrellaIntervals code in JodaUtils, modified the DbUpdater to push segment
meta-data to the database in batches.",2013-02-15T19:39:49Z
728e208f493d09ab043195fe73dd80df4aec6345,merge master,2013-02-15T19:39:22Z
05d347c3048e72dacde712a52cd8c361e34f1912,"Merge remote-tracking branch 'origin/master' into speedup-timeboundary

Conflicts:
	client/pom.xml
	common/pom.xml
	druid-services/pom.xml
	examples/pom.xml
	examples/rand/pom.xml
	examples/twitter/pom.xml
	index-common/pom.xml
	indexer/pom.xml
	merger/pom.xml
	pom.xml
	realtime/pom.xml
	server/pom.xml",2013-02-15T19:25:47Z
780410446c019f748e23d586496c3267932c8126,even more simple,2013-02-15T19:19:13Z
5ee7c0c264c99c4d704231429455867c16094117,1) Remove stray import of java.util.List,2013-02-15T18:15:53Z
e1533b871eccc83eda5a49904fa2d6d6925162f0,"Merge pull request #88 from metamx/8to9-empty-column

Additional fix for columns with cardinality 0",2013-02-15T18:15:05Z
548c901c0b21a21fe5f93c115a8750e00b39cebf,Additional fix for columns with cardinality 0,2013-02-15T07:34:49Z
3fed8ee0cee1c9e164731e067b1f800f2afcf7d4,[maven-release-plugin] prepare for next development iteration,2013-02-15T05:23:46Z
ba7df5b7092dbc85a687c3036091d872e8eb1dce,[maven-release-plugin] prepare release druid-0.2.9,2013-02-15T05:23:41Z
22d1f2a0c09bed8b77983ed9aa271fbd05070857,IndexMergerTest: Empty column test,2013-02-15T05:07:17Z
53e801ecb3d8cf215bdf2a4c1a40977bea53f341,Merge branch 'master' of github.com:metamx/druid,2013-02-15T04:59:43Z
48538d045409f3d996bc06fe3a191ca7ccfb05af,1) Fix bug in index converter when column has cardinality 0,2013-02-15T04:59:17Z
152bf201ec35b56b3334e058330ed763adbbf260,[maven-release-plugin] prepare for next development iteration,2013-02-15T00:27:20Z
e56bc27f93fc355782713a51b3eafe2af3d0bef8,[maven-release-plugin] prepare release druid-0.2.8,2013-02-15T00:27:12Z
4f11eb5209a98e909fc3aa0b6b08cc9ed6463c32,1) Fix alert sent from line DruidMasterBalancer:71 to not include all of the segments that a server is holding,2013-02-15T00:24:51Z
bf0d9c601db5ccc93d52a45ca94f658a5134dc53,"Merge branch 'task-stuff' into indexing_refactor

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/TaskStatus.java
	merger/src/main/java/com/metamx/druid/merger/common/TaskToolbox.java
	merger/src/main/java/com/metamx/druid/merger/common/task/DeleteTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexDeterminePartitionsTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/KillTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/Task.java
	merger/src/main/java/com/metamx/druid/merger/common/task/V8toV9UpgradeTask.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/MergerDBCoordinator.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/RemoteTaskRunner.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskMasterLifecycle.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskQueue.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskRunner.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskRunnerWorkQueue.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorServletModule.java
	merger/src/test/java/com/metamx/druid/merger/coordinator/RemoteTaskRunnerTest.java",2013-02-14T23:42:07Z
dd44f5cbf018683e9ae3e0fa7054a6e7f39b9577,Merge branch 'master' into task-stuff,2013-02-14T23:11:40Z
ee4236dac2e5cbec65ef65f9c6ba365637ee9561,1) Update to mmx build of jackson 2.1 branch to get bug-fix for jackson-databind #167,2013-02-14T23:10:27Z
ef768feeb1e0b55ce0ba407a9dd85c740ee849dc,new resource,2013-02-14T22:20:20Z
ad1de9ba9dd725d45674f969c89bf6ee31e40254,Merge branch 'master' into task-stuff,2013-02-14T22:16:46Z
77fbe974d85e378f77a98fcd8223d3964f905d09,fix version conflicts of old jackson,2013-02-14T21:52:19Z
de4fc981284af23323278813aa0db163f6097799,TaskMasterLifecycle: Stop leaderLifecycle if it dies while starting,2013-02-14T21:36:43Z
18daa19fc9c4f0341dc9037399a3b0646241fe23,"Merge branch 'master' into task-stuff

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/TaskHolder.java
	merger/src/main/java/com/metamx/druid/merger/common/TaskStatus.java
	merger/src/main/java/com/metamx/druid/merger/common/task/AbstractTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/DeleteTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexDeterminePartitionsTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexGeneratorTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/Task.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/MergerDBCoordinator.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskContext.java
	merger/src/main/java/com/metamx/druid/merger/worker/TaskMonitor.java
	merger/src/test/java/com/metamx/druid/merger/coordinator/RemoteTaskRunnerTest.java
	merger/src/test/java/com/metamx/druid/merger/coordinator/TaskQueueTest.java
	server/src/main/java/com/metamx/druid/master/DruidMaster.java",2013-02-14T20:57:00Z
ff325b1f65728509fa890e499dfc4ecce3e42cb9,"Merger: Changes to support rolling locks and a task-action API

Generally, TaskStatus is no longer used as the sole way for tasks to
communicate status and metadata update requests back to the
coordinator. It is still used to communicate success or failure, but a
TaskActionClient is used for all other communication. In remote mode
this uses an http api.

TaskContext no longer exists, as its purpose is now served by
the TaskActionClient.

The TaskQueue and TaskConsumer are no longer in charge of committing
stuff for a task. Instead, it happens when an action is sent in. Tasks
are expected to ensure that this is OK by making their behavior
idempotent (since they may be retried after partially completing).

One new kind of request afforded to tasks is the ability to release
and acquire arbitrary locks. This will be useful for long-running tasks.
Short-lived tasks can still be given a lock automatically upon startup
by providing a ""fixed interval"".

New tables when using db storage:
- tasklocks, to support persistence of arbitrary locks.
- tasklogs, to log actions taken by tasks",2013-02-14T20:46:40Z
6998d604a293f752af8649c7f12b31f2801decaa,fixes #80,2013-02-14T20:41:34Z
a616f861283a780c1db6d14ebbe04f7be457bb67,add DateTime import back,2013-02-14T17:09:22Z
754b065c54b62d0035ff72cb8a364be22ed14c5b,merge master,2013-02-14T17:08:25Z
98de0382d5c4a0f4c1b514aa1e0feb0868ddab84,Merge branch 'master' into speedup-timeboundary,2013-02-14T05:27:27Z
1b85eaad3e39aea91461b0406a6a70b112ef09dd,simplify query toolchest interface,2013-02-09T00:50:23Z
e3822f6ca795cb7fc8385b97147959d8b16ce582,DeterminePartitionsJob: Fix docs,2013-02-13T18:16:03Z
ee193f0ca7e8b9f7676b7388114470c5beb67135,DeterminePartitionsJob: Select partition dimension to minimize segment size variance when cardinality is low,2013-02-13T17:50:30Z
c5b78e75cfe80b594ad5eb09db94ec830fa1e72b,"1) Move up to Jackson 2.1
2) Some bugs were fixed, but they ended up getting mixed in with the Jackson upgrade :(",2013-02-13T02:58:12Z
82f02a4fe445a2983ee6bb0ca184dbc1a4efc144,"Merge branch 'master' into indexing_refactor

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/TaskStatus.java
	merger/src/main/java/com/metamx/druid/merger/common/task/DeleteTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexDeterminePartitionsTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/Task.java
	merger/src/main/java/com/metamx/druid/merger/common/task/V8toV9UpgradeTask.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/MergerDBCoordinator.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/RemoteTaskRunner.java
	merger/src/test/java/com/metamx/druid/merger/coordinator/RemoteTaskRunnerTest.java",2013-02-14T00:34:14Z
1963bfe83f37046a19b0c103a7843b0501562f1a,cleanup,2013-02-14T00:04:43Z
c7b49737003af88eb84a2b1ca354cfb214623ca1,bug fixes for RTR,2013-02-13T22:19:11Z
ce1d90788d810510421c0893e9e060c5cf4fa625,DeterminePartitionsJob: Fix docs,2013-02-13T18:16:03Z
0eb65f69d43e6c9aa16b97c6c066d030b2e767c9,"Merge pull request #86 from metamx/dimpartition-by-variance

Select partition dimension by variance when cardinality is low",2013-02-13T17:54:34Z
a665bfa2ef91ccf8a45d83f492287fc691e82051,DeterminePartitionsJob: Select partition dimension to minimize segment size variance when cardinality is low,2013-02-13T17:50:30Z
429e23d3b2741211abff1677ef23d48e33f3b55d,change break to continue in BalancerCostAnalyzer to skip calculating cost when it's not necessary,2013-02-13T16:57:39Z
a0b159fed7df7867e568305faca8dc43fdda5562,"1) Move up to Jackson 2.1
2) Some bugs were fixed, but they ended up getting mixed in with the Jackson upgrade :(",2013-02-13T02:58:12Z
fcbac9619391d7ba51e088a7b41e218dd59ebe20,revert change to findNewSegmentHome: now return single ServerHolder,2013-02-12T18:47:30Z
07b0b4611bae8063698e220372678e0907b155e4,bump up to 0.3.0,2013-02-12T17:52:21Z
68cd2e10a7c42150cb9f5acdef9ca66d7c98b959,remove unnecessary segment grouping,2013-02-12T17:45:26Z
7ab2e0552aa954b973d470bf39eb7c23274fc7e9,cleanup imports,2013-02-12T02:42:43Z
633cccce6918cece6ebdb9ed2174c9a419dd9872,bump up to 0.3.0,2013-02-12T01:02:33Z
d4009c8c1ce9a101295209e742f4a2de7fe2c9ad,refactor filterSegments to use `TimelineObjectHolder`s,2013-02-12T02:40:14Z
b27a459f71c0fed20144a1ef9190a3166e5bca9b,more refactoring and UT passing at this point,2013-02-12T02:13:01Z
6b87ef2921cf1dd5a1124d872dc32e5668656fbe,assume segment intervals have already been filtered based on query interval,2013-02-12T00:55:21Z
e9f546c4cabdf489e17f061d076a341c78312078,add default implementations to QueryToolChest methods,2013-02-12T00:51:40Z
695b78b19c082bd2ddc57274b7fb2968784f241f,make findNewSegmentHome return a priority queue so assignment can assign replicants to other servers,2013-02-11T23:28:17Z
e10025c84172ba448b6ac834e5fe784eb6fe5c84,filter out unneeded segments for TimeBoundary query,2013-02-09T00:50:23Z
69d0d98df679f21b601cdd848bc5ffb88af78f66,t Merge branch 'master' into indexing_refactor,2013-02-11T20:37:20Z
a9176e738af4adb39bdeeebd70b0bf47479c9037,Merge branch 'master' into indexing_refactor,2013-02-11T20:36:49Z
1b9764fffb5033106e2d0d241dfc5a4ba504be24,add binary version to datasegments for balancer test,2013-02-11T19:36:45Z
e12da510578458ea19e6c953fdcfad1c9f44be19,merge master,2013-02-11T19:28:50Z
6708029043c0771c645191c3a63f130ffd98dda7,1) Remove class level comments auto-created by IntelliJ,2013-02-11T19:13:52Z
05168808c278c080c59c19e858d9471b316cd1f5,"Merge pull request #77 from metacret/master

Adding LinearShardSpec and ACL on S3 object",2013-02-11T19:12:31Z
e519f82e8715436e8f1a817c4bb4b43cef64ecf0,[maven-release-plugin] prepare for next development iteration,2013-02-11T18:58:51Z
73f7468a23b9aae8fd49bfea875e40d2acfce974,[maven-release-plugin] prepare release druid-0.2.7,2013-02-11T18:58:43Z
07c005a0f76ac88b2bc9d52364e92c16ec958d4d,Merge branch 'master' of github.com:metamx/druid,2013-02-11T18:56:39Z
ac93f752b0d9afbd49ebf4f440f09cde786714c6,fix a case where a segment may get stuck in the terminate queue,2013-02-11T18:56:30Z
875df7b98996f637f74db84be87c5eaffccc7a60,"Merge pull request #81 from metamx/fix-timeboundary

fix cut-n-paste mistake in error message",2013-02-11T18:39:56Z
111df9a90e619f680231f1a6b4a78fc45dd122b2,"Merge branch 'master' into indexing_refactor

Conflicts:
	merger/src/test/java/com/metamx/druid/merger/coordinator/RemoteTaskRunnerTest.java
	server/src/main/java/com/metamx/druid/master/DruidMaster.java",2013-02-07T18:35:32Z
6ff42f379cfc131151ff615eb7af9b11d079e6f6,fix cut-n-paste mistake in error message,2013-02-07T18:11:36Z
9ac5eeebb3925ca3155f8255a7f9bbd1723c5ddc,1) Fix NPE in DeterminePartitionsJob when it fails,2013-02-07T07:34:46Z
ec2b906fada9255f779d9d3ebfb13ab9f0ef9129,[maven-release-plugin] prepare for next development iteration,2013-02-07T02:43:42Z
22d9607169a660c68114d856a7547982e9a505b4,[maven-release-plugin] prepare release druid-0.2.6,2013-02-07T02:43:34Z
267c797023a3a3a61d8f301d0e68dc2ecb136544,fix bug in throttle replicants,2013-02-07T02:40:29Z
e09c65835217dbfc9c798aa342a1577a98361811,[maven-release-plugin] prepare for next development iteration,2013-02-07T01:42:39Z
668353e89576a79f96dfedf82a92c00126974d7c,[maven-release-plugin] prepare release druid-0.2.5,2013-02-07T01:42:33Z
0d303bee96f7f144e3d5eaf207011a1883fa14fa,reset lifetimes for the replication throttle,2013-02-07T01:41:08Z
d023d219aeb1345dd9fe1c86284aa1101c52fd70,[maven-release-plugin] prepare for next development iteration,2013-02-07T00:54:21Z
d0fdf4ccf0d9cde0760da94c3e361d4b5985fbe9,[maven-release-plugin] prepare release druid-0.2.4,2013-02-07T00:54:16Z
7540dd58cad2662684c60f7ebc5d86b4841382c3,fix broken UT,2013-02-07T00:52:24Z
e2862fe1fbad834faf83d83942fbf8e28a2d73f2,"Merge pull request #79 from metamx/bug_fixes

Throttle replicants that are created by rules",2013-02-07T00:50:04Z
84baef0462558b6a286eccae01e90749312bc037,fix some bugs from last commit,2013-02-06T21:57:56Z
efd0dc0062e056f459e9c25dcc166d05868a01e0,refactor scaling stuff,2013-02-06T19:09:49Z
97999c06c43d6fab16d057844a3ac6547bea2be5,throttle replicants,2013-02-06T19:08:44Z
4f70bbc6874fc3409003119954aeacd7b516fb42,adding linear shard spec and ACL for s3 bucket,2013-02-04T18:27:09Z
f4e843c8dcd42992231554883d6097201f08a12a,1) Make BasePhoneBook not quite so zealous about throwing exceptions when things didn't line up exactly as it thought they should.,2013-02-03T17:02:38Z
ea64eaabce3d2cc005bd653a6168a76372ce78a0,Merge branch 'task-stuff' of github.com:metamx/druid into task-stuff,2013-02-02T01:16:39Z
d9f2e68f7fadf8b0e2bae378b2a2ed726eae20ea,better logs,2013-02-02T01:16:24Z
34b4383934cd828a12ace433a5a70bde1d89786d,"1) Adjust DataSegment to have a binaryVersion field that indicates the expected binary version of the segment files
2) Eliminate race condition from RemoteTaskRunnerTest.testAlreadyExecutedTask()",2013-02-02T00:59:33Z
c63eb2b77b1c57359eca4a5439eff04d6c5ee580,Merge branch 'master' of github.com:metamx/druid,2013-02-02T00:39:09Z
4ec67f612ef87e6aba7f0fb1a359ddeee00814bc,Merger: Emit indexer/segment/bytes once per segment. No longer emit indexer/segment/count.,2013-02-02T00:29:58Z
7ec3563e7be19bba0517ed922c6f792170ba0a7a,[maven-release-plugin] prepare for next development iteration,2013-02-02T00:25:42Z
a239f6215870bc277cc1dff95db75fce97a10b72,[maven-release-plugin] prepare release druid-0.2.3,2013-02-02T00:25:35Z
31743ed43837f2d9707caadffd1af3a3943a1de8,defaults + max memcached expiration is 30 days,2013-02-02T00:14:44Z
1a9edbebd3ff7d06d86b88e2143556eae52cb793,1) whitespace,2013-02-01T22:21:26Z
5f2c3cec1b25a8aa3e279e7a14734a8b4f642fc6,Merge branch 'master' of github.com:metamx/druid,2013-02-01T22:19:26Z
7de5c7806e8c91def566faa8007b676abfa6020c,"1) Some whitespace changes
2) Fix up the alerting to actually include the segment and server for when the MasterBalancer has something stuck in the queue",2013-02-01T22:19:17Z
9e881978452ce3bec19e67995e7a725d87e11abe,change endpoints for killing segments,2013-02-01T22:08:52Z
d252059e4afc91ca067425a0df1b9322c5a3b1d0,Merge branch 'task-stuff' of github.com:metamx/druid into task-stuff,2013-02-01T20:59:04Z
58bc305e26fbc3e80ac57642fd4d773b3ab74a04,changes to remote task runner to kill nodes better,2013-02-01T20:58:38Z
9f73c1a4288f6216a804c53c545ad760688d7037,Merge branch 'master' into task-stuff,2013-02-01T20:16:25Z
393bec0539e3e747cc7b9ecc1950cbce6fa15491,"TaskQueue: Behavior tweaks, simplification

- Lock tasks on add if possible
- Detect ""already added"" using exception test instead of bookkeeping map
- Update task status after commitRunnable instead of before commitRunnable",2013-02-01T20:16:06Z
1c9270add31549db4c7378919618e57f0000ee1e,change format of line comment,2013-02-01T19:25:41Z
0b61f9696514931a035217b9314aacda4bf50cc4,extra documentation,2013-02-01T19:25:05Z
e8e509c52537c83143f8101054e3a7330f5ed11f,"Merge pull request #74 from metamx/fix-memcached-keys

Fix memcached key length",2013-02-01T17:40:43Z
3aef020fe0529da90d95e27fbc76082021fdab1f,include actual key in value to detect improbable hash collisions,2013-01-31T23:54:52Z
d5cf7cfdb3fa2065c9855a994fde1d620a547c06,remove references to 'broker',2013-01-31T22:55:02Z
9179718db5513b4742893360d65e214c0ede42c9,hash cache keys to stay under memcached limit of 250 characters,2013-01-31T22:53:50Z
455bae2c76207d85eb72dbe87c91f40b1a544224,Merge branch 'master' into task-stuff,2013-01-31T19:28:23Z
e25b43b1815979b28b4eb4772f8630c135078c60,Merge branch 'master' into task-stuff,2013-01-31T19:28:06Z
f50c214514b2208980b0f19c6c73d4ed13fdd4fd,Merge branch 'master' into task-stuff,2013-01-31T17:59:52Z
f946fc3ee68d8fd92388503a1e54496e0e1475fb,TaskConsumer: Commit to segment db in one transaction,2013-01-31T16:21:36Z
1e35e6ad46db2c620582adfe62ed3cf67d883e96,TaskQueue: Tweak to implementation of findTaskGroupForTask,2013-01-31T16:21:10Z
34e76f868fccc927921eb541c30b2ffb85afef17,"TaskQueue: Clarify ""Naptime!"" log message",2013-01-31T16:20:33Z
86ec3a372ed89d61bae31cb645b48bbad8d4cbaa,TaskGroup: Add javadocs,2013-01-31T16:17:56Z
65576cbade1f96083fc54c1659ceb6d26859cd95,TaskStorageQueryAdapter: Rename some methods and tweak javadocs for clarity,2013-01-31T16:16:56Z
779c54d8f298e8a63191d6ddfcc09370e2fa7524,TaskToolbox: Replace IndexerCoordinatorConfig with TaskConfig,2013-01-31T16:13:44Z
fe38ed2547079364d30ed4e113b1c680a53ed889,"Introduce TaskExistsException, thrown by TaskStorage.insert when appropriate",2013-01-31T16:10:59Z
0e469c6f4c2c627b4c4c4232a67a1dd7e357d572,TaskStatus: Fix javadocs,2013-01-31T16:09:22Z
00e6ac1e10c777f6457e82c328ea9138cc8e6754,[maven-release-plugin] prepare for next development iteration,2013-01-31T01:09:23Z
ef19de8270dbc1b6aaff2ba8ea1207dc727b1006,[maven-release-plugin] prepare release druid-0.2.2,2013-01-31T01:09:18Z
26ed96f05defaa20415e313d179cd718a5527bc5,bug fix for autoscaling termination,2013-01-31T01:06:02Z
fa733565e83e8cf23261d3eb2a04b3212853b173,[maven-release-plugin] prepare for next development iteration,2013-01-31T00:28:28Z
0b116a8fe4c469e54fcf4c47f3f877ad0c4c6ab9,[maven-release-plugin] prepare release druid-0.2.1,2013-01-31T00:28:22Z
934207be0d6e47f6d8eafcb75d017c503a7e831f,updating sdk version to fix indexer in aws,2013-01-31T00:26:24Z
2a0de2090b32e9d28e5fbcc1a11f7d886f9f87af,[maven-release-plugin] prepare for next development iteration,2013-01-30T21:47:15Z
049ca2bad4c0805c61711d8a8a279c2a278adca2,[maven-release-plugin] prepare release druid-0.2.0,2013-01-30T21:47:08Z
dc49cccf56a89941b2e47a1cd564accb82efea29,javadoc format,2013-01-30T02:32:52Z
73f774e768423eee15bc89205e13bc52363b1ff0,make masterbalancertest more stringent,2013-01-30T02:17:38Z
a1ce4b294eec47388160d437fcbc71910f6de21a,simplify balancer test,2013-01-30T02:16:49Z
b205f7b3c46190075162a7a7a4133e65c49b75dc,use existing currentlyMovingSegments instead of creating a reundant segmentsBeingMoved,2013-01-30T02:16:34Z
034d6525694f00a7243b504411630bccee5227ec,make balancer tests take into account loadqueue status,2013-01-30T01:13:01Z
9a22e46eca4792a618027ff9d7d598e445045d04,"Merge pull request #71 from metamx/queryrunner-onerow-test

Bug fixes for incremental index storage adapter and one row indexes",2013-01-29T21:41:15Z
a7abd2ca866be930106d6a300a9fbfc0213ea20d,"Merge pull request #70 from metamx/timezone-tests

More time zone tests",2013-01-29T21:40:04Z
8fc10a61a0bde0d00e2251b330f078dee514638f,bug fix for incremental index and 1 row,2013-01-29T21:23:57Z
41ca33c734a049fbdfb7e87deebed84cd54da202,Merge branch 'master' of github.com:metamx/druid into task-stuff,2013-01-29T20:57:56Z
61569f62be5cbe798c2411bbc35e45f08e962e4b,TimeseriesQueryRunner tests with small incremental indexes,2013-01-29T20:53:52Z
da914b835ef9407cb703744b883751ff4d1f0bba,1) Add caching for SegmentMetadataQuery,2013-01-29T19:04:57Z
27e09987c680b93e0760fdef02cf1802543e86ff,timezone test,2013-01-28T23:23:33Z
8af3ae09d65ebc20a67249926d1659606d45d787,1) Fix bug with loading old indexes that might have mixed case column names,2013-01-29T17:38:35Z
08d3253f3dd9333c463d999d39a1c3129227ebc1,Merge branch 'master' of github.com:metamx/druid,2013-01-29T17:29:42Z
f2cce2829732d40ee786d641ccba93d43a1e154e,1) Make SegmentMetadataQuery work,2013-01-29T17:29:26Z
6438401a32093fc4ca365a1f45e8cab24ccb3dfc,split pick segment logic into its own method,2013-01-28T23:06:09Z
1bcf443b49cd6c77d6f52d48e7f840b88242a5a5,"Merge pull request #62 from metamx/groupby-tests

Actual groupby tests (tests fail because of group by bug)",2013-01-28T22:45:00Z
673cffc3f2ecedbd4aaffc587b567eeecc2bc73b,"Merge branch 'groupby-tests' of github.com:metamx/druid into groupby-tests

Conflicts:
	common/src/main/java/com/metamx/druid/input/MapBasedRow.java",2013-01-28T22:44:18Z
7439a2e820e731efe213f6c7e958bb90e9cb292a,1) Make tests pass,2013-01-26T00:15:51Z
c0822325e7997ca33ce38990f0785ff292a52241,proper groupby tests,2013-01-23T00:50:56Z
5f18f368e38680de453771db410d2664c88bc497,"Merge pull request #61 from metamx/fix-cache-timezone

Cache did not preserve timezone information",2013-01-28T22:39:00Z
59dd9a8e1890368c94650ba3b53f8a9c57cecfc0,"Merge pull request #66 from metamx/queryservlet-alert-remote-addr

QueryServlet: Add ""host"" (remote address) to alerts",2013-01-28T22:38:29Z
74057600f9d0fd7db69264815d44f903848471c4,fix worker node still using db connection,2013-01-27T17:57:37Z
4a1f5315a6e493b6b2d6db3cba0af59f3188b936,1) Make tests pass,2013-01-26T00:15:51Z
1cff766e2a3c0709c8f0631748219a651c6e455b,RemoteTaskRunner: Only cleanup paths during bootstrapping if task is complete,2013-01-26T00:01:17Z
efdff7b9f143d340bd27ac35a28658209fda47d5,fix unit test bug,2013-01-25T22:33:05Z
0f4746450bf079593858e01fa7894cc61dbfde5a,RemoteTaskRunner: null check on workerData,2013-01-25T21:40:20Z
bb68091cef9d49eefcb3934bb939a1d557dbe422,Index service: TaskConsumer tests,2013-01-25T21:15:55Z
82d77a8b72432e9e7b5c128cb1e0e8561c69b586,Index service: Fix kill task,2013-01-25T21:15:49Z
553738e1d81b4667691678ecf7107b2c1c47d02d,Merge branch 'master' into task-stuff,2013-01-25T19:34:18Z
f3b04d3f5f21a5566acb35b881c6d730daea6a06,S3SegmentKiller: Add TODO note,2013-01-25T19:33:50Z
e6a618ca76dcde6dd3aa3c21f5d27d246a9efc77,"Merge branch 'killsegments' into task-stuff

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/common/TaskStatus.java
	merger/src/main/java/com/metamx/druid/merger/common/task/DeleteTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexGeneratorTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/IndexTask.java
	merger/src/main/java/com/metamx/druid/merger/common/task/MergeTask.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/LocalTaskRunner.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskQueue.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/exec/TaskConsumer.java
	merger/src/main/java/com/metamx/druid/merger/worker/TaskMonitor.java
	merger/src/test/java/com/metamx/druid/merger/coordinator/RemoteTaskRunnerTest.java
	merger/src/test/java/com/metamx/druid/merger/coordinator/TaskQueueTest.java",2013-01-25T19:30:10Z
a14200d7797104e425da160b88808b0dfcad5382,"Index service support for early returns and choice of commit semantics.

Task:
- Add TaskCallback to run method (for early returns)

TaskStatus:
- Remove CONTINUED status
- Add segmentsNuked (placeholder for future deletion support)
- Add more builder methods
- Add validations to constructor

TaskStorage:
- Add TaskStorageQueryAdapter, a concrete class that wraps TaskStorages and
  provides various read-only convenience methods
- Add getTask method for benefit of TaskStorageQueryAdapter

TaskQueue:
- Rename ""done"" to ""notify""
- notify is responsible for deciding if we should commit
- Add optional commitRunnable to ""notify"", which gets called when it's time to commit
- Allow nextTasks and commits to run early (statusCode RUNNING)
- Move getStatus, collapseStatus functionality to TaskStorageQueryAdapter",2013-01-25T18:40:15Z
37417cf22f9b4ae0d4797890b3e08ddca497b271,"QueryServlet: Add ""host"" (remote address) to alerts",2013-01-25T19:03:44Z
5e1cac6d9f7db3d1c22f18f98110d9f2c10acaf3,timezone test,2013-01-25T01:57:10Z
cb845e6f0903f7b8ff2ead9249eb4ec6a2f243d8,Addresed Gian's code review,2013-01-25T01:54:06Z
7f410f201d4bd0dfbf571b42202897e55117b51f,updating amazon sdk version,2013-01-25T01:47:10Z
ee7337fbb9a88e297f7f585f4632089be6f7da85,"1) Adjust the Timeseries caching fixes to still store the long, but do the timezone adjustment on the way out.
2) Store a reference to the granularity object instead of getting it every time",2013-01-25T00:25:21Z
ec034ddef4fe12de4de108359bbb8bd01216e830,"Merge pull request #56 from metamx/determine-partitions

Determine partitions better",2013-01-24T20:57:39Z
ad6f9620004d8cbf0c9c6c69fc85b5933a5a1951,"Merge pull request #58 from metamx/cache-bulkget

modify cacheBroker interface to implement bulk-get",2013-01-24T17:57:43Z
017d4779d684e12917f73cb9fd323b5cc7cbc490,"Implemented Hadoop Index Task which takes as input a HadoopDruidIndexConfig and
generates index segments.

The HadoopIndexTask run method wraps a HadoopDruidIndexerJob run method. The
key modifications to the HadoopDruidIndexerJob are as follows:

- The UpDaterJobSpec field of the config that is used to set up the indexer job
  is set to null. This ensures that the job does not push a list of published
segments to the database, in order to allow the indexing service to handle this
later.
- Set the version field of the config file based on the TaskContext. Also
  changed config.setVersion method to take a string (as opposed to a Date) as
input, and propogated this change where necessary.
- Set the SegmentOutputDir field of the config file based on the TaskToolbox,
  to allow the indexing service to handle where to write the segments too.
- Added a method to IndexGeneratorJob called getPublishedSegments, that simply
  returns a list of published segments without publishing this list to the
database.",2013-01-24T03:27:14Z
fc07bc315eacf26ad0d8dca0ae1cdf18b9bf5040,"Added umbrellaInterval method, which takes an Iterable of intervals and returns
a single interval spanning the entire range of input intervals.",2013-01-24T02:59:51Z
9b6244ec158b7f03f7231cc9ea3517f48a97862c,Merge branch 'master' of github.com:metamx/druid,2013-01-24T00:37:03Z
67feee3cd621cd12ac8257b71a5867a940f0d244,1) Indexes don't always have an index.drd file anymore,2013-01-24T00:36:52Z
55ae4c87dde33e4dc5127c41da945c63987e1d8c,timezone support in groupby query,2013-01-22T18:59:05Z
35058786d9eb96a6a443c9182e4845c1bc2b08bd,match query interval to granularity for this test,2013-01-23T03:31:31Z
86a6d112e338ca7ac55d724c49b8010a51129274,proper groupby tests,2013-01-23T00:50:56Z
272d737517baecf281353894d8780e60685fe831,cleaning up some interactions with RTR and workers,2013-01-23T00:21:38Z
d7ea8e9afcc3be41ef826da7743051248ecdf7de,compare result timestamp based on millis + utcoffset,2013-01-22T01:01:41Z
8f38b775ae1aa7f6d044f7760e6618304b6f5788,fix expected object type,2013-01-22T00:31:32Z
f05c050c53d4c7d61d7097d8f225c6028d79fd23,add test for timezone,2013-01-21T23:49:39Z
94b72e887822653bb2118de21a1c405f76288d61,replace param BalancerCostAnalyzer getter with a factory,2013-01-21T23:32:29Z
bab9ee882700a67bf7d1a30cc86a49816830263a,"Merge branch 'master' into killsegments

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java",2013-01-21T22:47:49Z
77a3f3cbe0b34ce7bfe9ed32ab6f066c11b95c8b,"Merge branch 'master' into determine-partitions

Conflicts:
	indexer/src/main/java/com/metamx/druid/indexer/IndexGeneratorJob.java",2013-01-21T22:46:13Z
d9e6f1d95460ba363a9d6c26d5a0452a6464d5d1,"DeterminePartitions follow-up

HadoopDruidIndexerConfig:
- Add partitionsSpec (backwards compatible with targetPartitionSize and partitionDimension)
- Add assumeGrouped flag to partitionsSpec

DeterminePartitionsJob:
- Skip group-by job if assumeGrouped is set
- Clean up code a bit",2013-01-21T22:38:35Z
068ca67dbaa44164af5e816ed49a7c1b0764d95c,fix cache not preserving timezone information,2013-01-21T22:21:01Z
2d7113b263322c68ca5adca19ca17e01afcc7be6,huge simplification of balancing code,2013-01-21T22:28:25Z
40c0bcad29f5152cff7a880ca124b65aaca41643,simplify MapCache,2013-01-19T02:25:51Z
07131c51edab2a32b87442eb2ae387ef31fa7dad,"Merge pull request #53 from metamx/autoscaling

Use a database to store configurations for indexer workers",2013-01-19T01:08:52Z
ac31afbce57c2974b044ed8de1a9ed224e2eb9ad,remove redundant index for primary key in config table,2013-01-19T00:45:23Z
8a8b8a59f9be0297096c41585866fef269d5f601,"Merge pull request #57 from metamx/yops-descriptor-dimensions

YeOldePlumberSchool: Populate dimension metadata in segment descriptor",2013-01-19T00:42:02Z
e0c34c3b972e94b4734216f2cbd28bafa1e02baf,rename cacheBroker -> cache,2013-01-18T23:22:56Z
86ca8967cad017fb059ec618e25f45d967e41b77,rework code pulling from cache to be more readable,2013-01-18T23:04:12Z
a70ae155851f2b5f42d2c5a3c451185274a6c00a,"replace Pair<String, ByteBuffer> with NamedKey",2013-01-18T18:00:06Z
9032ef521b10f85f3513dda6b2ff66f8668ab4f4,fix interrupted thread,2013-01-18T18:18:16Z
71665346667bcd907b1fc349103b2e612c91d347,YeOldePlumberSchool: Tweak for IndexIO changes,2013-01-18T00:03:18Z
5ce53eb2ac449df634ca685211e2b152d878780b,Merge branch 'master' into yops-descriptor-dimensions,2013-01-18T00:02:32Z
38b2041ad9f436913db6352e43983f384a914f39,key/value config table,2013-01-17T22:56:48Z
689ce4f8e1536d0d27ff250d44fa2a11e713fa1d,"1) Upgrade java-util dependency to include ""ruby"" time",2013-01-17T19:10:11Z
0bacb85a4a7e62202d1618c548c980ec50ba653b,"fix duplicate keys, shutdown gracefully and make sure we check all multiget keys in memcached benchmark",2013-01-17T03:18:14Z
dcaa77a883bd1690dda721a96621ad15f6e6f656,implement bulk get test,2013-01-17T03:15:43Z
5b1e03530cedc0f3f8ddbbbaf397a90c2aa23594,1) Fix some bugs found by external test suite,2013-01-17T03:06:57Z
21613bc73be1cc7bf1b3564e9f1a3bc15152cde9,initial commit to hard delete segments,2013-01-17T01:31:01Z
e2788187fbbd624fd91bd006e94bcd7b17d6902c,don't let timeout skew benchmark stats,2013-01-17T00:02:51Z
c8cb96b00654d9de38e9bf4e28675984b20ae57f,"1) Remove vast majority of usages of IndexIO.mapDir() and deprecated it.  IndexIO.loadIndex() is the new IndexIO.mapDir()
2) Fix bug with IndexMerger and null columns
3) Add QueryableIndexIndexableAdapter so that QueryableIndexes can be merged
4) Adjust twitter example to have multiple values for each hash tag
5) Adjusted GroupByQueryEngine to just drop dimensions that don't exist instead of throwing an NPE",2013-01-16T23:10:33Z
a2090411a3a821469b06fb6e978ec331b1ef3133,modify cacheBroker interface to implement bulk-get,2013-01-08T00:54:21Z
6fc350bfbac649060546f1802cd5c2fc541411a9,YeOldePlumberSchool: Populate dimension metadata in segment descriptor,2013-01-16T19:30:24Z
7b42ee6a6e8fd2c60aa44dc51dd44937230a785a,"Rework DeterminePartitionsJob in the hadoop indexer

- Can handle non-rolled-up input (by grouping input rows using an additional MR stage)
- Can select its own partitioning dimension, if none is supplied
- Can detect and avoid oversized shards due to bad dimension value distribution
- Shares input parsing code with IndexGeneratorJob",2013-01-16T06:23:21Z
538d00e75e73e776964b6df1e893c0d8a49ed50e,Merge branch 'master' of github.com:metamx/druid,2013-01-16T16:02:01Z
8b31d8db9f93ec1a2e3441e77c367862c037720c,"1) Adjust IndexMerger to create convert the indexes it creates from the old format to the new.  This is done quite sub-optimally, but it will work for now...",2013-01-16T16:01:46Z
616415cb7ebae44772aba93e17e2a2dc0a1fea5f,"UniformGranularitySpec: Only return bucketInterval for timestamps that legitimately
overlap our input intervals",2013-01-16T06:29:03Z
86277d111424326d06dd120ac5e9665adb73b7cc,StringInputRowParser: Treat dimensionExclusions case-insensitively,2013-01-16T06:14:20Z
3c0880fe28470614816a1cf2c14afa9ffabb710a,Merge branch 'master' into autoscaling,2013-01-15T21:36:39Z
7e074e8158e629a5ff6a11da4d35e51985fabb8f,fix pom breakage,2013-01-15T20:04:12Z
47ac36d3e4a0e5b597530da1530cba6da40c1687,Merge branch 'master' of github.com:metamx/druid into autoscaling,2013-01-15T20:02:32Z
e847faf02fdc95854b8d51655564e3cd28b10cbd,change name of MAX_SEGMENTS_TO_MOVE since it's not a final,2013-01-15T19:29:46Z
ef9e077d9a1b858c72aab11778983b3bad2fd23d,remove getConfig method from DruidMaster,2013-01-15T00:01:29Z
998f0bf3c8d1bb0b262592ea99f3c7be29d8d8c1,1) Better error message when aggregators want more memory than is available.,2013-01-15T00:00:51Z
ae76097bc83db393feb27e6efba19a152607d9f0,Merge branch 'master' into autoscaling,2013-01-14T22:55:29Z
d1f4317af770e854c56ccaf46d639d6aca2fdeba,updates to autoscaling config based on code review comments,2013-01-14T22:55:04Z
135474e49ee73f2d5a6cd3c29750b407c3162490,Merge branch 'master' of github.com:metamx/druid,2013-01-14T21:01:32Z
3de62b34b643837a05e33084cc90f121b304748d,1) Should be on 0.2.0 with the recent API changes for StorageAdapters,2013-01-14T21:00:28Z
5f40dc6d9c66011785afc83514e7e4691e854e8b,put BalancerCostAnalyzer into params,2013-01-10T18:27:43Z
4c2da933895477110d50a23bcfcb858fe2b13776,bug fixes with ec2 auto scaling,2013-01-09T22:51:35Z
617907d85bf659a97c59883be2bc1d37eed0e911,move empty server holder list check outside of loop,2013-01-09T00:12:16Z
4549c3a8c3bcbb76e87ec27049aca632d45a8961,"add some finals, reorganize",2013-01-08T17:07:43Z
36858393768b76d90b8e98a0227e99bda1eb7524,"Merge branch 'master' into autoscaling

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java",2013-01-08T02:04:14Z
2b4dbdde0389b1bdefcca676fa5188f4fb7e2801,lots of changes,2013-01-08T01:28:53Z
6fda5330fda43c75d6fff74045e0fe444aadda21,finish making MAX_SEGMENTS_TO_MOVE a config item,2013-01-08T00:56:55Z
700ce241067ee0c5ad56587a12218296bf2750cf,fix JVM optimizing out the benchmarking code,2013-01-08T00:52:57Z
ba82fe746a0044ffcc435a2b3bbf57071d0fff96,put MAX_SEGMENTS_TO_MOVE in the config,2013-01-08T00:28:27Z
79e9ff94a67753dfb0619e040d7965b1dba1fa27,add missing headers,2013-01-07T22:07:47Z
aff4a05ca385adbd4e3e0986aa18be155fa2b01d,db based configs for indexer workers,2013-01-07T21:41:26Z
4ef31de62d78fcc4ba1a3f884424257c43d2dafb,"1) Fix stray import, take 2... yay IntelliJ",2013-01-07T21:11:28Z
d2ff88e923cf52f2f9f84bc759639e4650c56ff5,add more stats to be emitted,2013-01-07T21:09:18Z
a7553776fac60722f1230c17deffc569194c344d,make sampling of segments uniformly at random and add unit test,2013-01-07T20:51:51Z
b62bdf915b90aab90e8c1f2198804b77d66abc6d,1) Fix stray import... yay IntelliJ,2013-01-07T18:09:19Z
2ea164acd98e4cee1330f3da17297631f02bc031,get rid of extraneous analyzer.inits,2013-01-07T17:09:56Z
72db507cf8e043f11e51b45b12cec4e3f2dba0b7,1) Update java-util version to be a non-SNAPSHOT version,2013-01-07T07:37:52Z
b184c46ae06d1c6c0fdb25ce40968ad45ca8dc29,"1) Introduce idea of value types and generic columns to the serialization format
2) Create SegmentLoader interface for the loading of segments!
3) Setup serialization of new format and conversion function inside IndexIO
4) Make some adjustments to the twitter demo to make it make a bit more sense based on some email feedback from someone kicking the tires.",2013-01-05T00:12:46Z
402ddbf26150894d8789c3d083af3f06635271c3,update,2013-01-04T19:20:06Z
4f5087b3863f38e3a9a34448975d05e4394f106e,Merge branch 'master' of github.com:metamx/druid,2013-01-04T17:28:35Z
117cac2795b67e8bcfcac5aa3de09e3705ea132f,update,2013-01-03T22:12:10Z
bb31fa7b68642304317a751d9e06a3c117c024a3,update,2013-01-03T18:48:05Z
9627fdcd1cf13c25554c89c407743cb67b16e554,[maven-release-plugin] prepare for next development iteration,2013-01-03T18:09:52Z
f2c2d3f4cfe97100251a46273986d5a3879c7d6f,[maven-release-plugin] prepare release druid-0.1.25,2013-01-03T18:09:43Z
6318abb0bd57b816f0cbdc9258c4da56adec2e7d,"Merge pull request #50 from metamx/postagg-dependencies

postAggregators now return field dependencies",2013-01-03T18:05:14Z
824997eb43e99d0dcb76da7dc997731ea348bb5f,simplify code,2013-01-03T18:01:42Z
04492b43f2214d9a06a721c742fe82fee964d7d0,"Merge pull request #49 from metamx/rule-timestamp-fix

Use explicit timestamp for time based load/drop rules",2013-01-03T17:55:32Z
5441662cb872a4754cf5e721214c1e2ce3c04e41,Merge remote-tracking branch 'origin/master' into new_balancer,2013-01-03T17:10:48Z
41edec62ce893482d759f04b89247f72b69b01ec,remove unused imports,2013-01-03T02:46:07Z
6525d818adf8d5ddb1aa433a81f36cd71203eb89,postAggregators now return field dependencies,2013-01-03T02:14:00Z
a9b8d8f1cef2f7bb47734514006fbbd3311da920,fix end of month bug in PeriodDropRule as well,2013-01-02T23:44:14Z
0543322c5694712d5b649a0d83e8a8b5089e53cd,tested timestamps should be deterministic,2013-01-02T22:31:51Z
19c3fd336350eac29e8c7e6114aab1d6c4dd8cbc,make reference timestamp explicit for time based rules,2013-01-02T22:27:34Z
2a188996cd658a3e0a20f04d2567e8b2cc4b0b89,[maven-release-plugin] prepare for next development iteration,2012-12-31T22:56:10Z
6cdcc2becc692183af5a1250c1bf9646507e09d7,[maven-release-plugin] prepare release druid-0.1.24,2012-12-31T22:56:03Z
d0290b1975c07adeffa2501fec425ed8634af0b6,"fix flawed interval overlap rule test
fails around month end",2012-12-31T22:52:34Z
db08640efc4fab1e90d96e2328beafdcf84e998e,"reenable daylight saving test, now that we use joda-time 2",2012-12-31T22:10:43Z
72758e1345eb19359b4f748cbc819a20085f1061,update,2012-12-31T21:55:48Z
3eda9dc5f2fb122885477959a994b5100353294c,working balancercostanalyzer,2012-12-31T19:08:37Z
366216f9f38d93e283577bf21cde26c475194ce7,initial cost analyzer commit,2012-12-29T00:30:21Z
3bfbcbe95c2ec64b9a5a2bdbe3f04fc63a8d907d,1) Create DirectClientQuerySegmentWalker to make it a bit easier to embed and use DirectDruidClient as a client.,2012-12-28T16:50:40Z
93924d889509894da68cbf485bac0d74a6f530e9,"Merge pull request #47 from metamx/queue-metrics

query/wait and exec/backlog metrics",2012-12-27T22:22:07Z
438b85d2dd5bfef3834882db48c0ec74f8e74430,"Merge pull request #46 from metamx/short-alerts

Merger: De-parameterize alert messages",2012-12-27T22:08:02Z
5c1b2360d63aefc501ac65c478e766bcf483e620,"- Add optional query/wait metric to MetricsEmittingQueryRunner
- Add MetricsEmittingExecutorService decorator, and use it on compute nodes",2012-12-21T00:11:08Z
5137af075003e09f85d788c0962b138b9b84751d,[maven-release-plugin] prepare for next development iteration,2012-12-19T00:17:44Z
c579ba5a4210777e4e989eb3dfd7011b0fd6c504,[maven-release-plugin] prepare release druid-0.1.23,2012-12-19T00:17:38Z
00ecf9d02822a5c9dbf666cd4ec5da15977c1beb,sorted db datasources for rules; smaller time boundary range,2012-12-19T00:16:03Z
090a5a105dcdf68bc84f3a91c457b492048cdd27,[maven-release-plugin] prepare for next development iteration,2012-12-18T22:19:09Z
fb8f4f1f41117cc14e0a95862a17c3f75a2605ad,[maven-release-plugin] prepare release druid-0.1.22,2012-12-18T22:19:02Z
2a7214089e10fb7e895825be2d531a8fd9e62424,fix NPE in segmentMetadata query for null dimension values,2012-12-18T22:09:54Z
75d465aed05945b6bf3636901f353f407e164952,[maven-release-plugin] prepare for next development iteration,2012-12-18T18:37:16Z
decc4e4c0ee3821a53e5f90875028be9f14fec9e,[maven-release-plugin] prepare release druid-0.1.21,2012-12-18T18:37:08Z
8b55790900cfa4940a0be63efed2412dd0329e09,add segmentMetadata query type,2012-12-18T18:15:23Z
54d8aff4d50a1635d76a801886c011b522867291,add parameter for benchmarking host,2012-12-18T00:44:02Z
2118252ef236489dbc580f217328b7d304278b2b,make memcached host configurable for benchmarking,2012-12-13T20:15:30Z
e34944b1c525a48126b3f5d5520f7dec0b4ef923,[maven-release-plugin] prepare for next development iteration,2012-12-15T08:52:01Z
24f0207fd8608004fdc48e9cbdd4f26db229c645,[maven-release-plugin] prepare release druid-0.1.20,2012-12-15T08:51:54Z
db556102db1b01327240df5c6265df1912104ec3,fix typo,2012-12-15T08:50:28Z
f9386c36231f158e62731bc09f3182f1e6e6aa47,[maven-release-plugin] prepare for next development iteration,2012-12-15T08:44:58Z
4bcc8d27fa65dd09ba5324287473d33ca574540d,[maven-release-plugin] prepare release druid-0.1.19,2012-12-15T08:44:50Z
585a812f6e26ecb83376d80c36bf8205b926c012,bug fixes again in load and drop,2012-12-15T08:43:16Z
5fff07a8b0e75c3fa31a0410d10f9ca933de2c00,[maven-release-plugin] prepare for next development iteration,2012-12-15T06:56:49Z
2b2818dbaf9b39f59a0ea1a0f95eafd26a40bd0e,[maven-release-plugin] prepare release druid-0.1.18,2012-12-15T06:56:43Z
76807ae00e2308ab0b9ad2aaf61098ede7c0bd03,fix overloading of segments,2012-12-15T06:55:12Z
b0e1f90e3542320cc0bfc17c187c603da185646c,[maven-release-plugin] prepare for next development iteration,2012-12-15T06:07:57Z
ce8e02b5a323d7a9cc766e04f028d89068c4e028,[maven-release-plugin] prepare release druid-0.1.17,2012-12-15T06:07:50Z
884da334b2b75ff063dabcbd6470938697ae7ff8,fix for master getting stuck when assigning,2012-12-15T06:06:19Z
0821dce8c134b87bb9fbab0c04d858bde17e546e,[maven-release-plugin] prepare for next development iteration,2012-12-15T05:29:20Z
a0d22a66469aa9a0296fb88118e1df31338afd35,[maven-release-plugin] prepare release druid-0.1.16,2012-12-15T05:29:14Z
6a11e99681d68103766157f29fc01fcfb231d728,bug fixes for dropping segments and logging,2012-12-15T05:27:18Z
61afd0a46a141a2ce405d598d64d4464e6405612,Merger: De-parameterize alert messages,2012-12-15T02:13:57Z
e37e24cc2576736774169a11cb3226f7bb8b3c7e,[maven-release-plugin] prepare for next development iteration,2012-12-15T01:19:59Z
4e78d8e73472274679e2771a59ad118ef8518fae,[maven-release-plugin] prepare release druid-0.1.15,2012-12-15T01:19:53Z
74a977504ea4ed5b2290f8e26166ff871f7c7333,bug fix for dropping segments in master,2012-12-15T01:06:03Z
b4a1bb4a0026d69d81d64cb041206f27cb331df4,[maven-release-plugin] prepare for next development iteration,2012-12-14T17:37:17Z
cb9b18c7c2aaea19aaca90ff0d8ae7b9cdc87960,[maven-release-plugin] prepare release druid-0.1.14,2012-12-14T17:37:12Z
da137a4883271d66cac4f0cd528408422d979585,1) Optimize imports a bit,2012-12-14T17:34:23Z
7670c8483bc44bbe475ea33419b1fdcafcbf49d7,"Merge pull request #45 from metamx/fjy

bug fixes for exceptions in rules",2012-12-14T17:32:37Z
18692a121485b9df0752cfaae5ffb3311b5317b9,better error emitting for mismatched rules,2012-12-14T17:25:39Z
8c7fd3bc490e3f7a68f13a093836d8d7edf139df,more specific checks in rule test,2012-12-14T17:12:02Z
aa69ed52511e9913231247ae71bdc56694eb0c92,alert when no rules match; exceptions in rules no longer block,2012-12-14T17:05:25Z
29a64f50e2879daaaa0f6ec9497a823e804b4ff6,[maven-release-plugin] prepare for next development iteration,2012-12-13T23:57:46Z
c82007973e054aa69f6cbf32d88ba80d413663a7,[maven-release-plugin] prepare release druid-0.1.13,2012-12-13T23:57:42Z
62ea45f2c9fe0c1cbc1e215f716b55a911fab048,1) Register SearchQueryDimFilter with DimFilter so that it can actually be used.,2012-12-13T23:55:32Z
4bc721f3b3e273ca82686bdc35f801ba44801c98,revert last commit,2012-12-13T00:09:07Z
6828ad10d435d82481d1435f1ea882bb2b000d25,reduce boundaries for time boundary a bit; prevent bound errors,2012-12-13T00:07:47Z
6729f166d94467c51e62a5cd5bba43853ea06b0a,[maven-release-plugin] prepare for next development iteration,2012-12-12T23:38:58Z
578cf94bc05a68ee55ed7c633606390422548b9e,[maven-release-plugin] prepare release druid-0.1.12,2012-12-12T23:38:37Z
55652861da7b21523ca5f758c21604a4a4b4fbd1,"Merge pull request #44 from metamx/segment-metadata-query

Barebones segment metadata query",2012-12-12T23:33:50Z
dd25868919cb2db66d33922281acbe2066d9ea3d,add missing headers to files,2012-12-12T23:03:26Z
f664364770a8a54fcaccd8c20b3fd2861aa43869,"Merge pull request #43 from metamx/rtr-listener

RemoteTaskRunner: More robust task status listener",2012-12-12T23:01:23Z
f4a413c83fbc74d5cfb9b6af2fffa120db5f123e,"Merge pull request #40 from metamx/broker-cacheconfig

configuration option to switch cache implementations",2012-12-12T22:54:52Z
0ed08d8987095958bf6de3a908106b24aaea9a87,"Merge pull request #42 from metamx/fjy

bug fixes for invalid query params",2012-12-12T22:52:20Z
6db99c45a673dea5ade57b78ac37595b242d96fb,more specific exceptions in test,2012-12-12T22:51:19Z
5dcf962eaa37d4bc911f9a0e599f2c2e0a099c29,register SegmentMetadataQueryRunnerFactory in ServerInit,2012-12-12T21:26:11Z
bfc9b639311fe1cd30bf6b333fd3f8c2af06ebb3,segment metadata query,2012-12-12T01:44:01Z
091ed069f5ed5f3a6a1f4570cca471dc082a9672,"RemoteTaskRunner: More robust task status listener

- Handle CHILD_ADDED and CHILD_UPDATED together, to cover the case where a worker
  reconnects to zk in the middle of a task (which makes the ephemeral status node
  disappear and come back as an addition)
- There's no need to retry on most exceptions that can occur here, so don't",2012-12-12T20:50:23Z
cd38b5ba24f5da1fa15ba072be1df0136db44b9d,Merge branch 'master' of github.com:metamx/druid into fjy,2012-12-12T18:36:56Z
436828b67cc53ad9382314c4e74f3a7dea572975,post aggs verify that they have all the fields they need,2012-12-12T18:36:46Z
f7a6ac31e34161471794e2b9abaafb672d2f08ac,"Merge pull request #41 from marshallpierce/master

Fix direct memory vm option name in warning message",2012-12-12T17:37:13Z
08eb3390c88660ae14def853896ca648cb114b2a,fix for caching bug with empty byte arrays,2012-12-12T17:30:48Z
127b632421a5d8c3d069593576916154fefd6f12,revert last commit,2012-12-12T01:20:23Z
143de953fcf8b8fb38d734cb6dc2d6cc198bcf21,bug fix for balancing,2012-12-12T01:10:27Z
6827e48bd348e6628c126eec05566556b79488a4,bug fixes for invalid query params,2012-12-11T23:09:16Z
1a0ef0d5c32e27dc5ad26e5e4d71701dea1296a6,Fix direct memory vm option name in warning message,2012-12-11T19:15:09Z
81bc2890dc96e28736c601db06dd1d084106e618,configuration option to switch cache implementations,2012-12-11T01:10:20Z
0105233fc3159ced3fb31cdcadae2c102d621d6a,[maven-release-plugin] prepare for next development iteration,2012-12-08T01:50:47Z
943fe5e6bf9c45a1ba0e57835fa94dd0cc0ec8dc,[maven-release-plugin] prepare release druid-0.1.11,2012-12-08T01:50:41Z
4695fbfcd940650f61bd1938dc3ca6c7c5b6ccc3,fix bug with comparing historical servers,2012-12-08T01:49:18Z
da4b31c28f1a446f1d27b333da0b092ca975e8ee,[maven-release-plugin] prepare for next development iteration,2012-12-07T23:18:19Z
6df32ac0b0ce245f2699d4e836542abae72066dd,[maven-release-plugin] prepare release druid-0.1.10,2012-12-07T23:18:11Z
404f6322c65eac5a8b4aea4205cab1f79988e9f4,bug fix for checking if a segment exists on a node,2012-12-07T23:16:34Z
9eb28254f8b84e2607b9a3a0c623874b9bebd16b,[maven-release-plugin] prepare for next development iteration,2012-12-07T22:49:13Z
9ce536e04003c66ca6455b235b2a9c6771af9179,[maven-release-plugin] prepare release druid-0.1.9,2012-12-07T22:49:04Z
5a511cbef040c5fabbc23553083d1f14a8e33ab9,bug fix for missing quotations creating default datasource,2012-12-07T22:47:38Z
35362b3e6b816ee15a591e741c7997c9a4c72aed,[maven-release-plugin] prepare for next development iteration,2012-12-07T22:37:25Z
bd3c05dddb5322484607431b7e3475cadc793c1d,[maven-release-plugin] prepare release druid-0.1.8,2012-12-07T22:37:18Z
f6519744e622ea9005ad13afb48ce566a2693a36,bug fix for using configurable default for datasource,2012-12-07T22:35:49Z
50a28f827efeeec194000aa2f2ee517f0dad983f,[maven-release-plugin] prepare for next development iteration,2012-12-07T18:59:52Z
b59361065e188be5b5174f431a085c507f47b5b2,[maven-release-plugin] prepare release druid-0.1.7,2012-12-07T18:59:34Z
60282733321e305e3703394efdd4fcc5ac4a7e4c,defaults for rules to make startup a bit easier,2012-12-07T18:54:38Z
6e775a9ecda993b054beddef7f010b495c4507e4,"Merge pull request #38 from metamx/memcached-cachebroker

memcached version of CacheBroker",2012-12-07T00:08:42Z
a0dbd233fbf55da1bd1f9720992ee687abbe4de1,fix benchmarking code following removal of unnecessary method on MemcachedCacheBroker,2012-12-07T00:07:29Z
9ef46f5e651309465441b1d7a1084f7fa83572cd,remove unused method,2012-12-06T23:57:37Z
503b9194614e2aa2d5753d0cbd556488983d7e20,move dependency version to base pom,2012-12-06T23:54:40Z
fbaff6998c0db6204cd342468c8cf150a8194579,"Merge pull request #36 from metamx/fjy

Tiered Compute Nodes",2012-12-06T22:55:38Z
1ebd7a8a8a95becee2926a742b3915b2f1e69e9a,fix wrong jquery version,2012-12-06T22:50:29Z
e7e5a87d68d4ae5e799e30131d1ff7c5eb1dac59,"Merge pull request #39 from darxriggs/evaluation

Examples Cleanup",2012-12-06T22:40:41Z
c11334934e3f28ec4c4e0f3aa370ec65f0dd04ae,emit cache timeouts metric,2012-12-06T19:41:35Z
4a1abfc5dc07845ef1cd18d2fea6d8b0490a1df6,gui for rule configuratin; introducing jquery ui to master console,2012-12-05T23:39:59Z
9b8037b0a0640c3ba6c37bf359b38035e8a2579c,properly propagate exceptions,2012-12-05T23:05:11Z
2145f78f78efb91919c9d2ace27693cd2746bcb6,add memcached cache benchmarking code,2012-12-05T00:29:51Z
1083ed9c112e039dbf5f4a1d9b14bbb571019c16,make max cache object size configurable and disable client-side compressions,2012-12-05T00:28:27Z
a3e46eb490b52a194b558ff0008f3d239d7f9d6e,fix config property name,2012-12-04T23:36:05Z
c6e641e81964da8454021be53adb1e585eaf38e0,fix invalid cache keys,2012-12-04T20:06:19Z
01dc787261af1989715258e7fe3b2d635e135d73,fix test case class name,2012-12-04T19:36:37Z
51a7adf4fe429815da317171054c8a2887d29e66,enable consistent hashing and optimizations + daemonize memcached IO thread,2012-12-04T19:18:51Z
98fbcfd7c2cef1d7f993cda9de9cbcd7193cc095,file headers,2012-12-04T01:49:05Z
a03f8527ea27d5a0862eedf901f8fb50f4125824,implement memcached CacheBroker,2012-12-04T00:23:11Z
bcf57b58b933d417bac09a436ddee8193959e9b0,Merge branch 'master' of github.com:metamx/druid into fjy,2012-12-04T00:13:36Z
5b8bd412c0908d649219597b537ea2e6c4eac58d,caching for rules; get rules from cache,2012-12-04T00:13:20Z
5822f4f5f776d0c00838af5f8933d9250806ac46,refactor master to run rules before cleaning up; more master stats; general improvements,2012-12-03T22:43:04Z
e22ac50351fcb026993d7df8f4b7113e181d62be,made run_server.sh files of examples as consistent as possible,2012-11-24T13:04:25Z
06d6f976f414f15f173fdeb44ae7069906760123,made runtime.properties files of examples consistent,2012-11-14T20:48:55Z
06e4199dd22a68485bdf2cf808b7d1d9df0eb76d,fixed path to base persist directory for rand example,2012-11-14T20:16:41Z
1618c9b8dc0a211a466d87df05770cf8c19e9192,formatted realtime spec files for examples,2012-11-14T20:07:45Z
5e8bd15df0084ebddf6209b61e4e64b720866369,Merge branch 'master' of github.com:metamx/druid,2012-12-01T15:54:13Z
6c73de68d85d8f5a7d01130a570515ddbee4dcaa,1) Work around Jackson bug with constructor parameters and setters.,2012-12-01T15:53:52Z
91cd9e95365e461943813da47b668289dccfc35f,fix broken UT,2012-11-30T21:17:14Z
e1527a44d4f956cf2cc1c9c765810e2120e08955,Merge branch 'master' into fjy,2012-11-30T19:37:02Z
1fb3bf5cd894cf6fdc7f458064d439d6ac06d94c,remove defaults for druid tiers,2012-11-30T19:32:02Z
aa8fb7b9a36cc33680918bfa59caa943f67d9680,abstract the assign and drop logic; cleanups everywhere; http endpoints for getting and assigning rules,2012-11-30T19:28:10Z
25a4caac620eef2671578996c05ce777a105e1f0,"Merge pull request #37 from Benky/master

RemoteTaskRunner#run should fail on task with taskId from tasks.keys set",2012-11-29T17:21:41Z
e950c6333dcbf187fa6a70341e0f0c6156758ddc,RemoteTaskRunner#run should fail on task with taskId from tasks.keys set,2012-11-29T08:42:28Z
2e5e1ce9899f474c08995c04c3347b5dc5e24402,first commit of tiers for compute nodes; working UT at this point,2012-11-29T01:37:08Z
7d2778fae62e4279a5448d1ad886b80b73aed400,fix TimeBoundaryQuery to properly handle timestamps prior to 1970,2012-11-28T21:12:38Z
09a31e5995302598fa1126d3585b4a77d107a665,Tests should build.,2012-11-28T18:35:24Z
b85c54d8a35d62bb9712ae0150b66a20ae1ff1fe,Merge branch 'master' of github.com:metamx/druid,2012-11-28T17:55:25Z
4de6ef5025643f0e8e90ed51e7ecd28c1a0edf37,1) Remove the requirement on the segmentsPath zk property.,2012-11-28T17:54:59Z
5902ccd0cb67ba10760d30a8e78cf3e83d9622c6,DruidMasterSegmentMerger: Clearer method names and more tests,2012-11-27T23:45:56Z
cc8a14d5a16a45162a34e6e9b63e1574ce6b362a,IndexGeneratorTask: Log metrics when complete,2012-11-26T19:39:33Z
1e359135790a7db020df75502134cefce2a19391,1) add a log line on plumber creation to make it easier to know what rejection policy is being used.,2012-11-27T17:12:28Z
790ba592444d7aa35be6bf6de302b115d8828c5f,1) Merge-n-push should only happen after messages have been seen such that it can happen.,2012-11-27T16:48:02Z
63c5b8c790e737d7aef26667c3ddfe06464f44d0,1) Camel case for consistency,2012-11-27T16:34:25Z
3c9f031759077c4b0824bad308d3f31ffd5a76fa,1) Default the rejectionPolicy to server time,2012-11-27T16:33:20Z
253125cb25ac07d4d4b14fef4deb5ce9871c610f,1) Adjust RealtimePlumberSchool to take a configurable rejection policy that lets you switch between server time and message time for rejections.,2012-11-27T16:32:30Z
0da9075ff212f83d5ad68408315a7bbb8d4078fd,1) Better class-level javadoc for Firehose,2012-11-26T18:29:59Z
c929153a6c2b96180be8b063e8a6c2eab52f61c6,1) Fix bug in random example introduced by case sensitivities,2012-11-26T17:41:29Z
0390e7fa5c0d8d526cdb70684d110f4f2e9a5ce3,[maven-release-plugin] prepare for next development iteration,2012-11-22T04:13:15Z
93a9affa4550e88ee39fd0eb42f5465938efa500,[maven-release-plugin] prepare release druid-0.1.6,2012-11-22T04:13:08Z
e2da8df3f4a149d383d539a978f009117dc179f6,1) Fix build,2012-11-22T01:15:08Z
9c732e75a1e0e9c54dd5c2303779a8726f4ab08e,1) Add new SearchQueryDimFilter/SearchQueryFilter that will do a filter using the same queries that can be used for SearchQuery,2012-11-22T01:06:32Z
3a9591bda6390c029ade9cc57ed635ac20eaeecb,Merge branch 'master' of github.com:metamx/druid,2012-11-22T00:39:09Z
228b2235094e8cb1823a5814fe2d3084c1aa46fb,"1) Fix bug with Sinks that causes Realtime it to overwrite the first chunk of data when creating a segment to hand off to compute nodes.
2) Fix bug with RealtimePlumberSchool that can cause it to miss some previously-persisted segments when directory naming changes
3) Have the various runnables in RealtimePlumberSchool name the threads to make it a bit easier to debug",2012-11-22T00:38:57Z
5e447937e22e11304a6421bc25b4ab84f2bc5ecf,[maven-release-plugin] prepare for next development iteration,2012-11-22T00:09:14Z
32d46a3eecba68c53bd74fc51cffe4b7a23aac12,[maven-release-plugin] prepare release druid-0.1.5,2012-11-22T00:09:08Z
09669b6a2e535e62554e5cf9271c739b521378e5,TaskConsumer: Don't tell the queue we're done if we have been shut down,2012-11-21T20:18:27Z
06b8e4230c6962bf3d0866e90ad6b13e2b8dca02,"1) Fix PostAggregations with GroupBy (Fixes #24)
2) Add GroupByTimeseriesQueryRunnerTest which wraps a GroupByQueryRunner to look like a TimeseriesQueryRunner and leverages the tests there to help verify behavior (#8)",2012-11-21T18:51:43Z
7497a3194379babc39e54ae00ae22492c160ddeb,1) Revert emr hadoop version that was accidentally commited in pom.,2012-11-20T22:14:22Z
0f63cb4f0078081736d56d286eb8018497a0f41d,"1) Have IndexGeneratorJob write the descriptors for each of the segments it creates to a path in the temporary working directory (generally HDFS)
2) Have the DbUpdaterJob read descriptors from the temporary working directory instead of looking in the final segment output location (often the eventually consistent S3)
3) 1 and 2 Fixes #30",2012-11-20T21:30:50Z
9cbffa287f0650f92976b62307cb61a79572e98b,Merge branch 'master' of github.com:metamx/druid,2012-11-20T16:13:49Z
a48b67c917857e286427f59f3d51e0c788f9ea37,"1) Remove -Djava.net.preferIPv4Stack=true from the install script, not sure why it's there.",2012-11-20T16:13:33Z
6107bb7b803940da0fd3c515890f9f9a5c16b53f,"Merge pull request #32 from metamx/fjy

Fixes to indexing service to handle large merges better",2012-11-19T23:51:07Z
41310630498b77b16db8905029f9927af30f855e,Merge branch 'master' into fjy,2012-11-19T23:07:00Z
b228c053e55fdb2c62f543d2d06b9d647352b149,bug fix for too much data to indexer,2012-11-19T23:06:46Z
c6579692436d3e54f0693cf84350236fb6ffec99,Merge branch 'master' of github.com:metamx/druid,2012-11-19T23:01:33Z
701cc9562be55982871fab52cea465f73e8a62f6,"1) Adjust the StorageAdapters to lowercase names of metrics and dimensions before looking them up.
2) Add some docs to InputRow/Row to indicate that column names passed into the methods are *always* lowercase and that the rows need to act accordingly. (fixes #29, or at least clarifies the behavior...)",2012-11-19T23:01:17Z
cdda8c2b7c0ed88a5fc552696e00eabf330edb7e,"Merge pull request #31 from tralfamadude/master

doc/data_flow* diagrams added",2012-11-19T22:55:47Z
16835a1f84543f311419c94b9e9a42c66ef7439b,"Master: Add segment limit to merge selection algo

If we attempt to merge too many segments at once, we risk creating an
oversized indexing task.",2012-11-19T22:42:57Z
b7d43a66227c460d9864acc92105c5522c3c808f,doc/data_flow* diagrams added,2012-11-16T05:32:56Z
aa073e4e737ec32007b1445cb6ded5ef89f6bd90,1) Add verification of memory settings to initialization. (Fixes #21),2012-11-14T21:37:11Z
cf1c741f8a41cf2d2e97cc01815083becbcaeefe,[maven-release-plugin] prepare for next development iteration,2012-11-13T23:10:12Z
06bd77fca74a429bff1d693bc86e48cd4b015c4c,[maven-release-plugin] prepare release druid-0.1.4,2012-11-13T23:10:00Z
06ed0e7448c5d39694ad30d77ea4b0c22661c711,"Merge pull request #28 from metamx/fjy

Some modifications on how to register things in Druid",2012-11-13T23:02:14Z
cd1a812fffa4f62c267801c7e4f5bab9efc429ad,construct registering nodes with lists,2012-11-13T23:00:55Z
0ef40171a8dd442caea8a7db8e53b35e3592b2a9,nodes no longer inherit from interfaces but instead extend classes,2012-11-13T21:18:31Z
24564d73e19f11ce81214d55c787597874a643d3,register subtypes for reducer,2012-11-13T00:41:34Z
7eccd76e9a9896a67eea1e8380163bbc03be3723,add missing headers,2012-11-13T00:34:48Z
0d697ed1041fc1ad96111b51f455fcc216f913ce,fix rename of this node,2012-11-13T00:17:51Z
57468d39efe90d0c3c3d250d8513c4f460332a12,reverting some of the last changes,2012-11-13T00:14:48Z
c20dccd0f4fcce2594cce561a3e69a61804c771d,modifying the way registering serdes works to hopefully be a bit easier to use,2012-11-12T21:58:43Z
c30f04e0d4d5acd8984641ade0a4efb6cd81676d,"Merge pull request #27 from marshallpierce/master

Remove duplicate copies of servlet-api from dependency tree",2012-11-12T16:49:31Z
447dfc0cc6325d4a4efa2ca9f9330a778b8b212e,Switch to using javax.servlet:servlet-api:2.5 instead of two different versions of jetty's servlet-api distribution,2012-11-10T01:31:03Z
dd17992172809da92258a5f4aa59b8e98f903b02,[maven-release-plugin] prepare for next development iteration,2012-11-09T23:50:24Z
47e71080dbf74bf42525db07e34459985de9a8d5,[maven-release-plugin] prepare release druid-0.1.3,2012-11-09T23:50:16Z
e668660a9ca77bc1bfc091967cc10975594d884e,fix strategy check in indexing coordinator,2012-11-09T23:48:26Z
5859599365d419aa7aa8117b180512884a4d8f6f,[maven-release-plugin] prepare for next development iteration,2012-11-09T21:41:04Z
56f2c15e21fe5469ab494c767d4096cbd7bf0458,[maven-release-plugin] prepare release druid-0.1.2,2012-11-09T21:40:57Z
2ef1136ab21a29b9634acc873c12da88a7e6f8b5,fix a bug where intervals were being returned as String instead of Interval objects by the compute nodes,2012-11-09T21:39:02Z
0b7a3f259a3a147516fbae38dd25a0191d317f71,[maven-release-plugin] prepare for next development iteration,2012-11-09T18:10:32Z
baba4e7b757207ff5583eb5da006bbe9ab8c1faa,[maven-release-plugin] prepare release druid-0.1.1,2012-11-09T18:10:26Z
03e5d740871f7cb91127c799af692425d55b542d,[maven-release-plugin] prepare for next development iteration,2012-11-09T17:33:06Z
8aff8decad8d8f6daffca6aaa19705349c927756,[maven-release-plugin] prepare release druid-0.1.0,2012-11-09T17:32:57Z
0a0e2a6cc17ca778c62368677f2fa8a0edf6cc4a,1) Try to fix the dependency issues for running the HadoopDruidIndexer locally.,2012-11-09T01:06:02Z
81a33bcbb368f83e32e51a7ca29396d07f66b163,"Merge pull request #26 from metamx/misc

Updates to druid indexer to be able to index complex metrics",2012-11-09T00:39:07Z
6da047b5fa9be4b93d5a9d81d5300d757a0cac84,fix backwards compatibility issues,2012-11-08T23:09:00Z
17fb93d049fefa7aea616a7057af9a9d33c9f89e,fixes to init and more unit tests for timeseries,2012-11-08T22:43:02Z
5cf21e3c8aa8c4415f8e3228fdc8b48c19361744,Merge branch 'master' into misc,2012-11-08T21:49:02Z
90b7fd9935673bac25abee526f2d94d8c9d8bcf9,"Merge pull request #25 from metamx/moarunittests

A basic timeseries query for druid and also more unit tests",2012-11-08T21:46:30Z
09e81be14cec7a79d682b3ac32ac5d530b0f5d0b,rename file,2012-11-08T21:42:58Z
e8d1909883ce4212801b696c9763c040259ff9f1,rename file,2012-11-08T21:42:14Z
ef6e65b8caaa7467d62df6a38486999ff87d3530,"Merge branch 'moarunittests' into misc

Conflicts:
	client/src/main/java/com/metamx/druid/http/BrokerMain.java",2012-11-08T18:51:41Z
4c98b176e4caab5ec7d8cd9b2ada3042ccbd15fa,"Merge branch 'master' into misc

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/coordinator/RemoteTaskRunner.java",2012-11-08T18:51:13Z
3ddfdfc702a76e9797744281a0b1ff87a6e715aa,add missing header,2012-11-08T18:45:21Z
bff5a7d78656a76aca873b2a936a6a82c36def12,fix some merge issues,2012-11-08T18:43:39Z
8323feedb41a5e08d1fa8ebdb5b64ad09cab9020,"Merge branch 'master' into moarunittests

Conflicts:
	client/src/main/java/com/metamx/druid/http/BrokerMain.java",2012-11-08T18:37:05Z
88bb02963a07c1df4b3409a3652a5da12b24afc7,fix compile breakage introduced by scaling strategies,2012-11-08T18:32:18Z
f8a5d08dc337447551078e4dca75234efda52a36,"Merge pull request #20 from metamx/autoscaling

Improvements to distributed indexing service and auto scaling",2012-11-08T18:11:33Z
7083821fbff153c61c17c999d6330023f20301d2,no param for scaling provision and minor fix for initialization,2012-11-08T18:08:40Z
cdd9cdb2bddb838d45b97be820bced1ea4aefdc2,use PropUtils for indexer coordinator node,2012-11-08T17:31:22Z
f39af83be4cf828df2dbe5bc41e8ec902427b273,make switching between scaling strategies config based,2012-11-08T17:30:32Z
4d6cfdc774a06c7ac6dc480b98ecca456ef7b439,Merge branch 'master' into autoscaling,2012-11-08T01:27:42Z
52214d735578630f4af6efc397d4136a0bf3d5ee,additional improvements according to code review; unit tests; bug fixes for retry policies,2012-11-08T01:27:23Z
9c3b70068e8dbb0dbadd83cd6501acb512f9d0fc,"Merge pull request #22 from metamx/histograms

HistogramVisual: add support for quantiles",2012-11-07T04:20:34Z
b1475219a997804b128b48c00f9f8c2ff780b6e9,"Merge branch 'master' of git://github.com/tralfamadude/druid-1

Added DruidSetup.java and install/druid_setup.sh to run it for Druid ensemble setup (put properties to zk, create zk zpaths, prep db, and dump properties/paths in zk); property druid.zk.paths.base can establish a namespace for a druid ensemble allowing more than one ensemble to use the same zookeepers; this namespace is the base zpath prefix for paths with properties in the form druid.zk.paths.*Path which are normally set automatically now; if druid.zk.paths.*Path are explicitly set, then all of them must be set with absolute paths to ensure careful attention; ZkSetup is now deprecated, use DruidSetup instead; examples/twitter RealtimeStandaloneMain will exit properly now after a kill -15 (control-c or kill pid) instead of hanging on an unstopped daemon.",2012-11-07T04:15:57Z
217caa3a04fad7f0f95de7d178c91f16a2498f04,HistogramVisual: put min. and max. in quantile array,2012-11-07T00:55:35Z
cb02c6841b7023208b63224635628521188ca24d,removed recursive zpath listing from DruidSetup dump command.,2012-11-06T23:30:46Z
34cb352cf8fb4f2fb205eb04b9471889805cae57,working indexer with registererers,2012-11-06T22:26:53Z
5698f640d7d4efa32142b63212402c4de2f1e36b,fix last commit with version,2012-11-06T20:40:53Z
0b6dd994526e0695c0e5ac219102b9fedbece5d3,set default version if one is not set,2012-11-06T20:36:55Z
34a221a5862ec8120a95f96a441609d49204de27,fix bug with jackson conversion,2012-11-06T19:56:48Z
68e5adde33b7226f515eeb1a39940399cb9b5500,register registererers in the config,2012-11-06T19:49:17Z
86d2fb3550d4923521f8545e1e6126359749ccaf,"added DruidSetup.java and install/druid_setup.sh to run it for Druid ensemble setup (put properties to zk, create zk zpaths, prep db, and dump properties/paths in zk); property druid.zk.paths.base can establish a namespace for a druid ensemble allowing more than one ensemble to use the same zookeepers; this namespace is the base zpath prefix for paths with properties in the form druid.zk.paths.*Path which are normally set automatically now; if druid.zk.paths.*Path are explicitly set, then all of them must be set with absolute paths to ensure careful attention; ZkSetup is now deprecated, use DruidSetup instead; examples/twitter RealtimeStandaloneMain will exit properly now after a kill -15 (control-c or kill pid) instead of hanging on an unstopped daemon.",2012-11-06T08:16:27Z
eb2b5a61fa805978fa240e49fce01ce1b7d4a5bf,fix setters for hadoop node,2012-11-06T02:40:54Z
2ae0a15b5aa39e5022129289ef0592f32d8bf4b1,add register abilities to mapper,2012-11-06T02:31:23Z
9fbee29eb41710ae6a43aed8909ab5e0495b0ed4,change hadoop indexer to be node based,2012-11-06T02:19:04Z
7b2522ff3fe82af5457adedf0eab09f12e40c692,allow hadoop druid indexer to register registererers,2012-11-06T00:13:50Z
a35644776766eb3f20e37f738d98f44ffcfe7556,"Merge branch 'moarunittests' into misc

Conflicts:
	client/src/main/java/com/metamx/druid/http/BrokerMain.java",2012-11-06T00:13:20Z
0a42f18cc3ed40015fbe84f4157782f31c320ac9,HistogramVisual: add support for quantiles,2012-11-05T22:33:15Z
51cd361fbe20b73f5122244ea68fb80a41fb421f,some changes to how handlers are registered,2012-11-05T21:39:16Z
499263386caed48a42fa26c72582fc97f0e64cb9,timeseries for druid + unit tests,2012-11-05T19:38:03Z
6b247f1599260309a3741afb12a3b470c6b7a212,cleanup redundant code,2012-11-05T19:19:55Z
b4e3f98f4b539f26debc2be5f49d5b5d87d04d09,bug fixes for retries without sufficient capacity,2012-11-05T19:18:11Z
e9dadcae490a296f296aff80484f5ef33489dbb8,more sensical logic around when to terminate worker nodes,2012-11-02T23:59:49Z
a5c3eab2f1ce6dd09e97c208fe100db6973d85e1,fix merge break,2012-11-02T22:59:55Z
b1b611735e07eca879730b568a74b0e125875835,"Merge branch 'master' into autoscaling

Conflicts:
	client/src/main/java/com/metamx/druid/http/BrokerMain.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/http/WorkerNode.java",2012-11-02T22:57:16Z
abab35194a10a6eb1d92f30c6fbaed9cd512690b,general cleanup and improvments for auto scaling,2012-11-02T22:56:18Z
88a3fb842c0a7c4e5a64ad5d53f0a76e22ba5805,1) New attempt at making OpenJDK 6 happy,2012-11-02T19:24:43Z
38ed1d8b75e1d720d22acd09435814621204fdb8,1) Revert failed attempt at making OpenJDK6 happy.,2012-11-02T19:24:09Z
7921be790b43aafdff450c56f62a050912dd035d,1) Bump up the maven version pre-requisite to 3.0.3,2012-11-02T19:17:50Z
63b2f502ac9ee16ff1a6e36ef21918e52f2373da,1) Make TimelineEntry in VersionedIntervalTimeline a static class with its own generic parameters to hopefully make OpenJDK happier.,2012-11-02T16:35:23Z
69b929fad58c5e8619fb47dad9cc8c21c34dd2a4,"Merge branch 'master' into moarunittests

Conflicts:
	merger/src/main/java/com/metamx/druid/merger/coordinator/RemoteTaskRunner.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskInventoryManager.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/Worker.java
	merger/src/main/java/com/metamx/druid/merger/worker/WorkerCuratorCoordinator.java",2012-11-01T23:41:13Z
09cc2e3353634796397b5f94a98baf4b2792696b,"Merge branch 'master' into moarunittests

Conflicts:
	client/src/main/java/com/metamx/druid/http/BrokerMain.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/RemoteTaskRunner.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/TaskInventoryManager.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/Worker.java
	merger/src/main/java/com/metamx/druid/merger/worker/WorkerCuratorCoordinator.java
	merger/src/main/java/com/metamx/druid/merger/worker/http/WorkerNode.java",2012-11-01T23:39:28Z
f07b15db1fbf6eb4f2460b46a570df10d2503622,Undo massive import re-ordering,2012-11-01T23:38:26Z
8dd6f5c059ae895aa6ad1ba8f02c66951fbad1f8,"1) Refactor the BrokerMain into a BrokerMain and a BrokerNode to allow for extensions
2) Rename ServerMain to ComputeMain
3) Refactor ComputeMain to ComputeMain and ComputeNode to allow for extensions
4) Remove ""TheSizeAdjuster"", was old legacy stuff that's not relevant anymore
5) Fix bug with registering different IndexIO handlers
6) Adjust it so that when a query type is unknown, it returns an error message instead of just emitting an alert and returning nothing
7) Create super classes for the various *Node classes that allow for code sharing on pieces that are common",2012-11-01T23:20:38Z
49289788706cd09dcb1f17f8478ba1c46a8713b5,"Merge pull request #17 from ianbrandt/codecleanup

Minor code cleanup and other miscellanea.",2012-11-01T23:14:17Z
83a51a801e24c4460c71401496c976dd347cb3a3,cleanup redirects and reannounce workers on connection loss,2012-10-31T23:43:47Z
e7ec073d7562fff9da6bb7472810920ba19af6c1,Cleaned Maven dependency configuration.  In particular the 'mvn dependency:analyze' report no longer warns of used but undeclared dependencies.,2012-10-31T23:10:07Z
9547ea494dee120b3478302f947a732702be6208,fix bug with provision,2012-10-31T21:45:44Z
11c64593ae852c3fda7284d2104770b744cc21a5,improvements to the indexing service and auto scaling,2012-10-31T21:35:09Z
e8f02219bb0f06670e1a61a3ebf340f5d78e4f45,"Streamlined the Maven POMs, in particular the plugin configurations.  The 'mvn versions:display-plugin-updates' report is now warning free, and there are no more Maven warnings reported in Eclipse.",2012-10-31T19:58:16Z
fe9cb397a190ce60a5d5219c29ce062d7fd59619,remove unncessarily created file,2012-10-31T17:29:03Z
d0f66c1fb3611718e6e2f9e6a1441612e8c4c7a6,bug fix for merging with empty strings,2012-10-31T17:28:24Z
e24948319bd3b56b0804e09cae8551b7e097d79a,Removed some dead/unused code.,2012-10-31T07:00:30Z
c5e2a8818791ac87dafb5bc5fbbbf1de3684cee1,Resolved dead code warning by null checking the correct variable according to the associated log statement.,2012-10-31T06:59:31Z
35f04b4df689d1b54c7322dc9b931cc257702ae4,Fixed some minor potential resource leaks.,2012-10-31T06:26:21Z
0d24df76282cf6b105d0395f1b6c9146006c9f22,Removed unused imports.,2012-10-31T05:22:46Z
bd8d5bddd85d0527be307b959fa0e28c19dbd379,Ignored all Eclipse .settings folders.,2012-10-31T05:21:55Z
d7f85cfbc445f237d8153fb66abe08126686de5e,1) Fix configuration property naming issue.,2012-10-30T17:08:30Z
f062e136d09569cc207cf7359c59a887d1bc2107,1) Fix bug with sharded realtime data ingestion,2012-10-30T15:59:07Z
8a49c156ed4661b298f1d8b01a2dcb6e4a4bdb87,"Merge pull request #13 from metamx/jsbufferfix

add buffered version of JavaScriptAggregator",2012-10-29T23:04:13Z
a34c5a100c2f0f65a9760fdd40f9fbd9e9e67ab2,add buffered version of JavaScriptAggregator,2012-10-29T21:34:17Z
afb347f7ec9050072be17560c607a997daa0b752,"Merge pull request #6 from mashion/search-examples

Search examples",2012-10-29T16:08:34Z
aea00737b8b228056b34bbf7284bbb527c8037dc,"Merge pull request #7 from mashion/fix-zk-setup

Allow blank mysql passwords",2012-10-29T16:07:04Z
2c341144bf93bb9a7fc48c32da4903a98372b184,Allow blank mysql passwords,2012-10-26T17:46:30Z
bcdfece8788f096f53d821ba88b8882651c548ef,Allow group_by or search queries in run_client.sh,2012-10-26T17:20:56Z
a3eb4f3293e0a4141a2506560741342d29c0b347,Add search query example,2012-10-25T00:30:04Z
2d69a833f4ab6b0bde2dfedd2b4b05f8d3eaba5b,"Update examples/twitter/query.body

Remove confusing unused fields",2012-10-25T00:07:53Z
10b9425937ad63127244085efec1cc339303a120,"Merge pull request #5 from mashion/fix-twitter-example

Fix twitter example to correctly groupBy by lang dimension",2012-10-25T00:06:39Z
3763a0b7382dbdafce2bbea61de4603f0089cba6,Use correct key in query.body for twitter example,2012-10-24T22:47:55Z
e5066397c3729d7ee8aa42e55ae317792a124f7d,"Merge pull request #4 from tralfamadude/master

cleaned up spurious errors in build.sh",2012-10-24T21:58:43Z
3e09713e111bf5d331b24618ef95118da6ef57c6,"Merge pull request #3 from mashion/shutdown-server

Stop java process in twitter example",2012-10-24T21:57:44Z
c8f549f7f1ac8a8509163de344351edc48bf8b2d,"Merge pull request #1 from mcroydon/master

Build and example fixes",2012-10-24T21:57:17Z
71edede8666b470b4fe6ab78270706699752b9a9,cleaned up build.sh to remove spurious errors.,2012-10-24T21:34:24Z
6c819c1b039496e0323172020310fa837545a21c,Stop java process when run_server.sh is killed,2012-10-24T19:40:22Z
9575326c000e9385b66b1ac0d33ef5a42b5f7ee3,Added twitter and rand example output files to .gitignore.,2012-10-24T16:54:24Z
ae44e3ecfb0b9cf6bb7fdc0aaa488f32963c932d,Removed hardcoded jar version in examples/rand/run_server.sh which was preventing it from running.  Also updated examples/rand/run_client.sh and examples/twitter/run_client.sh help messages to remove  the unneeded &.,2012-10-24T16:54:05Z
6a9d86e1efb2d64131bee5d59de7bce1b833f7c1,Removed unused import in IndexMerger that was causing build.sh to fail with Java 1.7.0_04-b21 on OS X 10.7.4.,2012-10-24T16:46:32Z
631c3bf30137eb6631fcee82db1c3906b8f9b9d0,Remove gradle files,2012-10-24T16:08:47Z
27999caca0842ac63570f8c8360696f1bcc25cf5,"1) Create LICENSE
2) Attach copyright and notice of license to files",2012-10-24T09:09:43Z
f09f595c7c0c40e6b4f40eabc5ab9f82b309308d,Fix up the demos a bit,2012-10-24T08:51:32Z
9d41599967f20d443ce1d3546eb02ee185efb52b,Initial commit of OSS Druid Code,2012-10-24T07:39:51Z
70e993806e48fbd35ac597a4075d046a98c5b6ae,Initial commit,2012-10-23T19:08:07Z
